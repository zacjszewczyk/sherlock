
[
  {
    "Is the adversary using defense evasion techniques via dynamic API resolution? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1027.007 - Dynamic API Resolution": {
          "Execution of a process whose file hash is associated with known malware families that utilize dynamic API resolution or packers.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "From all process creation events (Windows Event ID 4688), extract the file hash of the new process executable. Automate the correlation of these hashes against a threat intelligence platform or malware database that specifically tags samples for using dynamic API resolution, packing, or having a suspicious Import Address Table (IAT). Alert on any confirmed matches and treat the process as highly suspicious."
          },
          "Execution of rundll32.exe to call functions from a DLL by ordinal number instead of by name, a pattern commonly used by loaders to obfuscate function calls.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for the execution of `rundll32.exe`. Analyze the command line using regular expression matching for patterns where `rundll32.exe` calls a DLL function by its ordinal number (e.g., `rundll32.exe shell32.dll,#123`). This pattern is highly anomalous as it hides the function name from casual inspection. Use correlation analysis to link this pattern with other suspicious activity, such as the target DLL being recently written to disk or having low prevalence in the environment."
          },
          "A process writes a PE file (DLL or EXE) to disk, and that same process or its child immediately executes code from it, a pattern common with loaders and droppers that use dynamic resolution.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable and monitor file write auditing (which generates Windows Event ID 4663 - 'An attempt was made to access an object'). Correlate events where a process writes a file with a `.dll` or `.exe` extension to a temporary or user-writable location (e.g., %TEMP%, %APPDATA%) with a subsequent process creation event (Windows Event ID 4688) originating from the same parent process, where the new process is the file that was just written. A short time delta (e.g., < 5 seconds) between the file write and its execution is a strong indicator of a malware loader."
          },
          "A running process initiates external network connections or creates child processes despite its on-disk executable having a minimal or empty Import Address Table (IAT).": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "For new processes identified via Windows Event ID 4688, especially those unsigned or running from non-standard locations, extract the executable's file hash. Use an automated process (e.g., API call to a threat intelligence service) to retrieve static analysis details for the hash, specifically the list of imported functions/DLLs. Flag processes that create network connections (observed in Zeek conn.log and correlated by source IP/hostname) or spawn child processes (observed in subsequent Windows Event ID 4688 events) without having corresponding network (e.g., `ws2_32.dll`, `wininet.dll`) or process-related API imports. This discrepancy between static analysis and runtime behavior is a strong behavioral indicator of dynamic API resolution."
          },
          "A legitimate, long-running process (e.g., svchost.exe, explorer.exe) suddenly initiates suspicious network connections or child process activity inconsistent with its established baseline behavior, suggesting code injection.": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal network activity (e.g., common destination IPs/ports, protocol usage, data volume) and process creation behavior (e.g., typical child processes) for common, long-running system and user processes like `svchost.exe`, `lsass.exe`, `explorer.exe`, and browsers. Monitor Zeek conn.log and Windows Event ID 4688 for these 'parent' processes initiating connections to rare external IPs, using unusual ports, or spawning unexpected child processes (e.g., `cmd.exe`, `powershell.exe`). Use time series analysis and descriptive statistics (mean, standard deviation, IQR) to define the baseline and flag significant deviations. A sudden behavioral shift is a key indicator of process injection, where the injected code often relies on dynamic API resolution to execute."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
