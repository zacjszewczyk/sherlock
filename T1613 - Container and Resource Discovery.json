[
  {
    "Is the adversary attempting to discover container resources and environment details? (TA0007 - Discovery)": {
      "Indicators": {
        "T1613 - Container and Resource Discovery": {
          "Detection of unusual or unexpected API calls to container orchestration platforms (e.g., Kubernetes, Docker) from potentially malicious sources.": {
            "Data": "Zeek conn.log; Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze Zeek conn.log and http.log for connections to known container API ports (e.g., Docker 2375/2376, Kubernetes 6443/443, kubelet 10250) or endpoints. Identify source IPs and request types (e.g., GET, LIST). Calculate frequency distribution of API calls by source IP and endpoint. Flag source IPs with unusually high volumes of discovery-related API calls or connections from unexpected subnets using descriptive statistics (e.g., mean, standard deviation) and outlier detection methods like IQR."
          },
          "Access logs or activity showing unusual interaction patterns with container management web interfaces (e.g., Kubernetes dashboard).": {
            "Data": "Zeek conn.log; Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek conn.log and http.log for connections to container dashboard web interfaces. Analyze session durations, byte counts, and request patterns (e.g., high number of discovery-related page views or queries by inspecting HTTP paths and methods). Use time series analysis on connection volume and activity metrics to identify deviations from normal baseline behavior for connections to these interfaces. Correlate with known user agents of administrative tools versus generic browsers."
          },
          "Anomalous enumeration of specific container resources (pods, services, secrets, deployments) via API calls, especially from unexpected internal sources or user contexts.": {
            "Data": "Zeek http.log; Windows Event ID 4688 (from hosts making API calls)",
            "Data Platform": "Network devices, Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Filter Zeek http.log for REST API calls to container orchestration platforms (e.g., Kubernetes API paths like `/api/v1/pods`, `/api/v1/secrets`, `/apis/apps/v1/deployments`; Docker API paths like `/containers/json`, `/services`, `/secrets`). Profile typical API call patterns (source IP, user-agent, invoked API paths) for discovery. Identify and alert on calls originating from unusual internal subnets or those showing a high variety/volume of 'get' or 'list' operations against different resource types, potentially using entropy measures on requested resource paths per session. If applicable, examine Windows Event ID 4688 on client machines or Windows-based controller nodes for execution of `kubectl.exe`, `docker.exe`, or custom scripts making these API calls, looking for unusual parent processes or command line parameters indicative of broad discovery."
          },
          "Access to or retrieval of container logs or detailed status information (e.g., cluster status, node status) from unexpected sources or in an anomalous manner.": {
            "Data": "Zeek http.log; Zeek conn.log",
            "Data Platform": "Network devices, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek http.log for API calls to container log endpoints (e.g., Kubernetes: `/api/v1/namespaces/{namespace}/pods/{pod_name}/log`, Docker: `/containers/{id}/logs`) or cluster/node status endpoints (e.g., Kubernetes: `/api/v1/nodes`, `/healthz`, `/metrics`). Analyze Zeek conn.log for sustained or high-volume connections to these API endpoints. Baseline legitimate log/status access patterns (e.g., by monitoring systems, administrators). Flag access from non-standard client tools (identified via User-Agent in http.log) or unusual IP addresses. Apply time series analysis to detect abnormal spikes in log retrieval volume or frequency of status checks from specific sources."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  }
]