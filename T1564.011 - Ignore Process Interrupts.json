[
  {
    "Is the adversary attempting to maintain execution despite potential interruptions? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1564.011 - Ignore Process Interrupts": {
          "Process creation logs showing command lines containing strings indicative of ignoring process interrupts (e.g., 'nohup' or similar error suppression/signal ignoring commands).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creations where the command line contains strings like 'nohup', 'disown', or other commands/parameters known to ignore process interrupt signals. Calculate the frequency of execution for these commands across the environment and investigate occurrences on critical assets or associated with unusual user accounts. Use descriptive statistics to identify outliers in execution frequency by user or host."
          },
          "Process creation logs showing execution of scripting interpreters (like PowerShell) with parameters designed to suppress errors or ignore interrupts (e.g., '-ErrorAction SilentlyContinue').": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for executions of scripting interpreters like 'powershell.exe'. Filter for command lines containing flags such as '-ErrorAction SilentlyContinue' or similar error/interrupt handling parameters. Correlate these events with the parent process and user context to identify potentially malicious scripts attempting to evade termination. Analyze command line arguments for suspicious encoded commands or unusual script execution patterns."
          },
          "Existence of processes linked to a user session that persist unexpectedly after the user logs off.": {
            "Data": "Windows Event ID 4624; Windows Event ID 4634; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate Windows Event ID 4624 (Logon) and 4634 (Logoff) to track user session lifetimes (using Logon ID). Identify processes created (Windows Event ID 4688) within a user's session. After a user logs off (Event ID 4634), check for active processes (by monitoring for subsequent Event ID 4689 - Process Exited, or through system state monitoring) associated with that session's Logon ID that continue running unexpectedly. Establish baseline process lifetimes per user/process name and flag significant deviations using statistical analysis."
          },
          "Child processes that continue executing long after their parent process (e.g., a temporary shell) has terminated, especially when the child process command line contains potentially evasive flags.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 to track parent-child process relationships (using ParentProcessId and NewProcessId). Identify child processes that remain active or continue execution for a significant period (e.g., exceeding a baseline duration or a fixed threshold like >10 minutes) after their parent process terminates. Prioritize investigation if the child process command line contains suspicious strings ('-ErrorAction SilentlyContinue', execution of known suspicious tools) or if the parent process is a temporary shell or script interpreter. Use time series analysis on parent-child process lifetimes to identify anomalous patterns."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  }
]