[
    {
        "information_requirement": "Is the adversary maintaining persistence using AppInit DLLs?",
        "tactic_id": "TA0003",
        "tactic_name": "Persistence",
        "indicators": [
            {
                "technique_id": "T1546.010",
                "name": "AppInit DLLs",
                "evidence": [
                    {
                        "description": "The AppInit_DLLs registry value points to a DLL with a known malicious file hash or a filename associated with known malware.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4657 for modifications to the 'AppInit_DLLs' value. Upon detection, extract the DLL path(s) from the event data. Automate the retrieval and hashing (e.g., SHA256) of the specified DLL file. Correlate the resulting hash and the filename against a continuously updated threat intelligence feed of known malicious file indicators. Alert on any match."
                    },
                    {
                        "description": "The AppInit_DLLs registry value is modified to contain a path pointing to a non-standard or suspicious location, such as a user profile, temporary directory, or network share.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4657 for modifications to the 'AppInit_DLLs' registry value. Parse the new value to extract all DLL paths. Use regular expressions to flag paths that are not in expected system directories (e.g., not in C:\\Windows\\System32). Specifically, alert on paths pointing to user directories (e.g., C:\\Users\\, AppData), temporary folders (%TEMP%, %TMP%), or public writeable locations. Use frequency analysis to identify rare or never-before-seen paths in this key across the enterprise."
                    },
                    {
                        "description": "An anomalous sequence of events is observed: 1) The AppInit_DLLs registry key is modified by an unusual process, and 2) Subsequently, multiple common GUI processes (e.g., explorer.exe) exhibit suspicious behavior such as spawning command shells or making new network connections.",
                        "data_sources": [
                            "Windows Event ID 4657",
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate events in a time-ordered sequence. First, identify modifications to 'AppInit_DLLs' (Event ID 4657) originating from processes other than standard installers (e.g., not msiexec.exe, TrustedInstaller.exe). Following this event on a host, monitor for common processes that load user32.dll (e.g., explorer.exe, outlook.exe, browser processes) spawning suspicious child processes like cmd.exe or powershell.exe (Event ID 4688), or initiating new external network connections (Zeek conn.log). Use correlation analysis on hostname and timestamps (e.g., within 30 minutes of registry change) to link these events into a high-confidence alert."
                    },
                    {
                        "description": "The 'RequireSignedAppInit_DLLs' security feature is disabled, especially in temporal proximity to a modification of the 'AppInit_DLLs' value.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4657 for modifications to the registry value 'RequireSignedAppInit_DLLs' where the new data is '0' (disabled). Correlate this event with any modifications to the 'AppInit_DLLs' value on the same host within a short time window (e.g., 1 hour). Any instance of this security control being disabled outside of a sanctioned change window should be investigated as a potential precursor to persistence or privilege escalation."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary elevating privileges using AppInit DLLs?",
        "tactic_id": "TA0004",
        "tactic_name": "Privilege Escalation",
        "indicators": [
            {
                "technique_id": "T1546.010",
                "name": "AppInit DLLs",
                "evidence": [
                    {
                        "description": "A known privilege escalation tool or malware variant, identified by its file hash or name, is written to a location that is then referenced by the AppInit_DLLs registry key.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "When Windows Event ID 4657 reports a modification to 'AppInit_DLLs', extract the DLL path. Retrieve the hash of the DLL file at that path. Correlate the DLL filename and its hash against a CTI database that specifically lists files and tools known to be used for privilege escalation via DLL-based techniques. Prioritize alerts for matches as high-severity potential privilege escalation."
                    },
                    {
                        "description": "A clear pattern of privilege escalation is observed: 1) AppInit_DLLs is modified by a user-level process, followed shortly by 2) the execution of a privileged process known to load user32.dll.",
                        "data_sources": [
                            "Windows Event ID 4657",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Create a rule that detects a specific sequence of events. First, identify a modification to 'AppInit_DLLs' (Event ID 4657) performed by a process running with standard user privileges. Second, within a short time window (e.g., 1-5 minutes) on the same host, detect the start of a process running with elevated privileges (e.g., as SYSTEM or Administrator, identified from Event ID 4688 token elevation type) that is known to load user32.dll (e.g., mmc.exe, services.exe, taskmgr.exe). Use correlation analysis on the hostname and timestamp to connect these events, indicating a likely attempt to inject the DLL into a higher-privileged process."
                    },
                    {
                        "description": "A privileged process, after a new AppInit DLL is registered, performs actions inconsistent with its baseline, such as spawning a shell, communicating with the internet, or accessing credential stores.",
                        "data_sources": [
                            "Windows Event ID 4657",
                            "Windows Event ID 4688",
                            "Zeek conn.log",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "First, establish a baseline of normal behavior for common privileged processes (e.g., services.exe, lsass.exe, winlogon.exe), including typical child processes, network communications, and file/registry accesses. After an 'AppInit_DLLs' modification is detected (Event ID 4657), monitor for any privileged processes starting on that host. Flag significant deviations from baseline for these processes, such as spawning cmd.exe/powershell.exe (Event ID 4688), making external network connections (Zeek conn.log), or accessing the SAM hive or LSA secrets (Event ID 4663). Use descriptive statistics and frequency analysis to define baselines and detect anomalies."
                    },
                    {
                        "description": "A process that has loaded a suspicious AppInit DLL creates a new process with a higher integrity level or elevated token.",
                        "data_sources": [
                            "Windows Event ID 4657",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate a modification to 'AppInit_DLLs' (Event ID 4657) with subsequent process creation events (Event ID 4688). For any process known to load the suspicious DLL, monitor its child processes. Specifically analyze the 'Token Elevation Type' field in Event ID 4688 for the child process. Flag instances where a child process has a higher elevation type (e.g., Type 1 default -> Type 2 elevated, or any -> Type 3 full) than its parent, indicating a successful privilege escalation action originating from the hijacked parent process."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
