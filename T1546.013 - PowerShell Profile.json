[
    {
        "information_requirement": "Is the adversary maintaining persistence using PowerShell profiles?",
        "tactic_id": "TA0003",
        "tactic_name": "Persistence",
        "indicators": [
            {
                "technique_id": "T1546.013",
                "name": "PowerShell Profile",
                "evidence": [
                    {
                        "description": "Detection of known malicious PowerShell profile script content (e.g., specific commands, functions, or obfuscation patterns) or matching file hashes of known malicious profile.ps1 files.",
                        "data_sources": [
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "File monitoring logs (for hashes)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor PowerShell Script Block Logging (Windows Event ID 4104) for scripts executed during profile loading (typically scripts run early in a powershell.exe session without the -NoProfile switch). Compare script block content against a maintained list of known malicious PowerShell commands, functions (e.g., Invoke-Mimikatz, Empire stagers, Nishang scripts), or specific obfuscation techniques commonly used in malicious profiles. If file integrity monitoring is used, compare hashes of profile.ps1 files against a threat intelligence feed of known malicious file hashes. Alert on any matches."
                    },
                    {
                        "description": "Presence of common persistence patterns within PowerShell profile scripts, such as encoded commands, download cradles for second-stage payloads, or scheduled task/WMI event creation commands designed to execute on PowerShell startup.",
                        "data_sources": [
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event ID 4663 (Object Access for file content if available)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze PowerShell Script Block Logging (Windows Event ID 4104) content associated with profile execution for patterns like: use of `IEX (New-Object Net.WebClient).DownloadString`, Base64 encoded commands (`[Convert]::FromBase64String`), calls to `Register-ScheduledTask` or `Register-WmiEvent` for persistence. Monitor file modifications (Windows Event ID 4663) to profile.ps1 files and scan content (if feasible via EDR or other tools) for these structural patterns. Use regular expressions to identify these known persistence-facilitating command patterns."
                    },
                    {
                        "description": "Unexpected creation or modification of PowerShell profile files (e.g., profile.ps1, Microsoft.*_profile.ps1) in standard or non-standard locations, especially outside of legitimate administrative activity or by unexpected user accounts/processes.",
                        "data_sources": [
                            "Windows Event ID 4663 (Object Access)",
                            "Windows Event ID 4688 (Process Creation for context)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4663 for write/create operations on PowerShell profile files (e.g., files named `profile.ps1` or `Microsoft.*_profile.ps1` within common locations: `$PsHome\\`, `$Home\\[My ]Documents\\PowerShell\\`, and system-wide profiles like `$env:ALLUSERSPROFILE\\Microsoft\\PowerShell\\profile.ps1`). Correlate modification events with process creation logs (Windows Event ID 4688) to identify the parent process and user context responsible for the change. Use time series analysis to detect unusual frequencies of modifications. Establish baselines for legitimate profile modifications and flag deviations, particularly modifications by non-admin users or unexpected processes (e.g., Word, Outlook)."
                    },
                    {
                        "description": "Anomalous outbound network connections initiated by powershell.exe processes immediately following PowerShell startup or user logon, potentially to known malicious destinations or exhibiting unusual data transfer patterns.",
                        "data_sources": [
                            "Windows Event ID 5156 (Filtering Platform Connection)",
                            "Zeek conn.log",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 5156 for network connections by `powershell.exe`. Correlate these with Zeek conn.log to identify destination IPs/ports, protocols, and connection volumes. Cross-reference destination IPs/domains with threat intelligence feeds. Further correlate with PowerShell Script Block logs (Windows Event ID 4104) to link network activity to specific scripts executed during profile loading. Analyze connection timing (e.g., occurring within seconds of logon or `powershell.exe` start without the `-NoProfile` switch). Use descriptive statistics (e.g., frequency of unique destinations, data volume using bytes_in/bytes_out from Zeek) to baseline normal PowerShell network behavior per user/host and detect anomalies using IQR or percentile analysis."
                    },
                    {
                        "description": "Loading of unusual, newly registered, or obfuscated PowerShell modules/snap-ins or execution of high-entropy script blocks during PowerShell startup, indicative of malicious profile execution.",
                        "data_sources": [
                            "Windows Event ID 4103 (PowerShell Module Logging)",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event ID 4688 (Process Creation)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor PowerShell Module Logging (Windows Event ID 4103) and Script Block Logging (Windows Event ID 4104). Identify modules loaded or script blocks executed immediately after `powershell.exe` starts (correlate with Windows Event ID 4688 to confirm `-NoProfile` is not used and to get user context). Flag modules with obfuscated names, modules loaded from unusual paths (e.g., temp directories, user download folders), or modules not part of a pre-defined approved list for the environment. Analyze script blocks from profiles for high entropy scores (suggesting obfuscation) or calls to suspicious APIs (e.g., related to memory injection, credential access). Use frequency analysis to baseline common modules/scripts per user group and detect rare or first-seen occurrences."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary escalating privileges using PowerShell profiles?",
        "tactic_id": "TA0004",
        "tactic_name": "Privilege-Escalation",
        "indicators": [
            {
                "technique_id": "T1546.013",
                "name": "PowerShell Profile",
                "evidence": [
                    {
                        "description": "Detection of known privilege escalation commands or specific exploit code snippets (e.g., syscalls for token manipulation, UAC bypass functions) within PowerShell profile scripts executed by a high-privilege account.",
                        "data_sources": [
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event ID 4624 (Logon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor PowerShell Script Block Logging (Windows Event ID 4104) for scripts executed during profile loading by high-privilege accounts (e.g., SYSTEM, Administrator, Domain Admins; identify context by correlating PowerShell process owner with Windows Event ID 4624 logon session details). Compare script block content against a curated list of known PowerShell-based privilege escalation commands, functions (e.g., PowerUp functions like Invoke-AllChecks, specific API calls for token duplication/impersonation, known UAC bypass snippets from tools like UACME). Alert on any matches when executed in a high-privilege context."
                    },
                    {
                        "description": "PowerShell profile scripts executed by high-privilege accounts containing patterns indicative of privilege escalation attempts, such as loading custom DLLs for reflective injection, modifying service configurations to run with higher privileges, or interacting with LSASS process memory.",
                        "data_sources": [
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event ID 4688 (Process Creation)",
                            "Windows Event ID 7045 (New Service Created)",
                            "Windows Event ID 4663 (Object Access to LSASS)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze PowerShell Script Block Logging (Windows Event ID 4104) and command lines (Windows Event ID 4688) from profiles executed by high-privilege accounts for patterns such as: `[System.Reflection.Assembly]::Load` followed by suspicious namespace/method calls, `Invoke-Command -ComputerName localhost -ScriptBlock {commands_requiring_higher_privs}`, direct interaction with LSASS process memory (monitor Event ID 4663 for `lsass.exe` access by PowerShell), or commands modifying service binaries/permissions (correlate with Windows Event ID 7045 for new services created by PowerShell with suspicious executable paths or parameters). Use regular expressions and sequence analysis for these multi-step patterns."
                    },
                    {
                        "description": "A high-privilege account (e.g., SYSTEM, Domain Admin) executing PowerShell on logon, immediately followed by sensitive system changes or security-related actions (e.g., new user creation, security policy modification, scheduled task creation for privileged execution) not typical for that account's profile-driven automation.",
                        "data_sources": [
                            "Windows Event ID 4688 (Process Creation)",
                            "Windows Event ID 4624 (Logon)",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event IDs for system changes (e.g.",
                            "4720 User Created",
                            "4698 Scheduled Task Created",
                            "7045 Service Creation",
                            "4672 Special Privileges Assigned to New Logon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate PowerShell executions (Windows Event ID 4688, 4104) by high-privilege accounts (identified via Windows Event ID 4624 logon type/user) occurring at logon (or PowerShell startup without `-NoProfile`) with subsequent critical system changes (e.g., user creation Event ID 4720, service creation Event ID 7045, new scheduled tasks Event ID 4698, assignment of special privileges Event ID 4672). Baseline normal automated tasks for these accounts. Use correlation analysis within a short time window (e.g., 1-5 minutes post-logon/profile execution) to link PowerShell profile activity to these sensitive actions. Investigate sequences that deviate from established administrative patterns or known good automation."
                    },
                    {
                        "description": "A PowerShell process, spawned from a profile execution by a high-privilege account, attempting to access or modify critical system resources, security-related registry keys (e.g., LSA, Winlogon, UAC settings), or other users' profile scripts.",
                        "data_sources": [
                            "Windows Event ID 4663 (Object Access for files)",
                            "Windows Event ID 4657 (Registry Value Modified)",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event ID 4688 (Process Creation)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor object access events (Windows Event ID 4663 for files, Windows Event ID 4657 for registry modifications) where the process is `powershell.exe` running under a high-privilege account, and the access occurs shortly after profile script execution (identified via Windows Event ID 4104 and 4688 context). Focus on access to SAM/SYSTEM hives, security-related registry keys (e.g., `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon`, `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa`, UAC-related keys), critical system binaries, or attempts to write to other users' profile script locations (e.g., another admin's profile or AllUsers profile). Use frequency analysis and baselining to identify unusual resource access patterns by privileged PowerShell instances tied to profile loading."
                    },
                    {
                        "description": "Anomalous creation or modification of PowerShell profile files in locations affecting high-privilege users (e.g., AllUsersProfile, Administrator's profile) by a lower-privileged process or user, followed by that high-privilege user logging in and executing PowerShell, triggering the malicious profile.",
                        "data_sources": [
                            "Windows Event ID 4663 (Object Access)",
                            "Windows Event ID 4688 (Process Creation)",
                            "Windows Event ID 4624 (Logon)",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4663 for write/create operations on PowerShell profile files located in paths affecting privileged accounts (e.g., `$env:ALLUSERSPROFILE\\Microsoft\\PowerShell\\profile.ps1`, profile paths under Administrator user directories like `C:\\Users\\Administrator\\Documents\\PowerShell\\profile.ps1`). Correlate the modifying process (from Event ID 4663 details or associated Windows Event ID 4688) and its user context. Flag modifications made by non-administrative users or unexpected processes. Subsequently, monitor for logon events (Windows Event ID 4624) by the affected high-privilege user followed by PowerShell execution (Windows Event ID 4688 without `-NoProfile`), and investigate the executed profile content (Windows Event ID 4104) for suspicious commands."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
