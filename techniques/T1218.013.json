[
    {
        "information_requirement": "Is the adversary attempting to evade defenses using signed binaries?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1218.013",
                "name": "Mavinject",
                "evidence": [
                    {
                        "description": "Process injection via mavinject.exe involving a DLL with a known malicious file hash, or subsequent network connections from the injected process to known malicious IP addresses or domains.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "From Windows Event ID 4688 for mavinject.exe, extract the injected DLL file path from the command line. Automatically hash the DLL file and compare it against a threat intelligence database of known malicious file hashes. Concurrently, identify the target process ID (PID) from the command line, map it to a process name, and monitor subsequent network connections from that process (via Zeek conn.log by correlating host IP, destination IP, and timestamp). Inner join destination IPs/domains against a CTI feed of known C2 infrastructure. Alert on any matches."
                    },
                    {
                        "description": "Execution of mavinject.exe (or a renamed copy) with command-line parameters indicating injection into a running process, where the injected DLL is located in a non-standard or temporary directory.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Create a high-fidelity rule to monitor Windows Event ID 4688 for any process creation where the command line contains '/INJECTRUNNING' and a '.dll' file extension. Scrutinize executions where the process name is not 'mavinject.exe' (potential rename). For all matches, parse the DLL path from the command line. Prioritize alerts where the DLL path points to temporary directories (e.g., C:\\Windows\\Temp, %APPDATA%, %PUBLIC%), user download folders, or network shares, as these are common staging locations for malicious payloads. Use frequency analysis to identify rare DLL locations."
                    },
                    {
                        "description": "Injection into a sensitive system process or a user application that typically does not load external DLLs, especially when the mavinject.exe execution is initiated by a user process like an Office application or a web browser.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for mavinject.exe executions. Analyze the parent/child process relationship. Flag any instance where the parent process is a common initial access vector or scripting engine (e.g., winword.exe, excel.exe, powershell.exe, wscript.exe). Additionally, analyze the target process being injected into. Maintain a list of high-value target processes (e.g., explorer.exe, lsass.exe, services.exe, winlogon.exe, svchost.exe) and alert when they are targeted for injection. Use correlation analysis to link the parent process, mavinject, and the target process into a single high-confidence event."
                    },
                    {
                        "description": "Anomalous execution of mavinject.exe that deviates from an established environmental baseline, such as execution on hosts where it has never been seen, or a sudden spike in execution frequency across multiple systems.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Establish a baseline of legitimate mavinject.exe activity across the enterprise by tracking execution counts per host and user over time using Windows Event ID 4688 logs. Since mavinject.exe is rarely used legitimately in most environments, any execution is suspicious. Use frequency analysis and descriptive statistics to identify the first-ever execution on a host (first-seen analysis). Employ time series analysis to detect sudden spikes in execution volume across the environment, which could indicate a widespread campaign. Use a box-plot or Inter-Quartile Range (IQR) analysis on execution counts per host to identify outlier machines with unusually high activity."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
