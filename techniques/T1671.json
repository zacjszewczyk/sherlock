[
    {
        "information_requirement": "Is the adversary maintaining persistence by leveraging cloud application integrations?",
        "tactic_id": "TA0003",
        "tactic_name": "Persistence",
        "indicators": [
            {
                "technique_id": "T1671",
                "name": "Cloud Application Integration",
                "evidence": [
                    {
                        "description": "A cloud application integration is registered or granted consent that matches known malicious indicators such as application IDs, publisher names, or redirect URIs from threat intelligence.",
                        "data_sources": [
                            "Azure AD Audit Logs",
                            "Microsoft 365 Unified Audit Log"
                        ],
                        "data_platforms": [
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Continuously ingest threat intelligence feeds containing known malicious OAuth application identifiers (e.g., Application IDs, verified publisher names, redirect URIs). Perform an inner join between cloud audit logs for 'Add application' and 'Consent to application' events and this threat intelligence list. Alert on any matches for immediate investigation of the application, its permissions, and the consenting user."
                    },
                    {
                        "description": "A cloud application is registered with a suspicious name intended to impersonate a legitimate service, or it originates from an unverified publisher with a newly registered or typosquatted domain.",
                        "data_sources": [
                            "Azure AD Audit Logs",
                            "Microsoft 365 Unified Audit Log"
                        ],
                        "data_platforms": [
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Scan cloud audit logs for 'Add application' events. Use regular expression matching on application names to detect common impersonation patterns (e.g., 'MÃ­crosoft', '0ffice365 Security', 'G-Suite Update'). For applications from unverified publishers, programmatically check the publisher's domain registration date and reputation. Use frequency analysis to flag application names that are rare or unique in the environment. Alert on applications matching suspicious name patterns or those from unverified publishers with domains registered within the last 90 days."
                    },
                    {
                        "description": "A cloud application is granted an unusual or high-risk combination of permissions, especially if granted by a non-administrative user or if the consent action is initiated from an untrusted network location.",
                        "data_sources": [
                            "Azure AD Audit Logs",
                            "Microsoft 365 Unified Audit Log",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze 'Consent to application' events in cloud audit logs. Profile and flag applications requesting high-risk permission combinations (e.g., Mail.ReadWrite.All + Files.ReadWrite.All). Correlate the event's timestamp and user with Zeek conn.log data to identify the source IP of the consent action. Use correlation analysis to flag high-risk consents originating from unexpected geolocations, anonymous proxies, or IP ranges not associated with corporate networks. Use descriptive statistics to find rare or outlier permission grant events across the organization."
                    },
                    {
                        "description": "A cloud application, particularly a new or rarely used one, exhibits anomalous data access patterns, such as accessing data at unusual times, accessing an abnormally high volume of resources, or accessing data types outside its expected function.",
                        "data_sources": [
                            "Cloud Application Access Logs",
                            "Azure AD Audit Logs"
                        ],
                        "data_platforms": [
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "For each registered application, establish a baseline of data access behavior using its access logs (e.g., data volume, types of resources accessed, time of access, frequency). Use time series analysis (e.g., ARIMA, Holt-Winters) on access volume and frequency to detect significant deviations. Calculate the entropy of accessed resource types or user mailboxes; a sudden spike in entropy can indicate anomalous broad access. Prioritize alerts for applications that were recently added (correlate with 'Add application' events in audit logs) or are rarely used. Use box-plots on data access volume to identify statistical outliers."
                    },
                    {
                        "description": "A service principal is created on a host via script, followed by anomalous cloud activity associated with that principal, suggesting automated persistence setup on a compromised endpoint.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Azure AD Audit Logs"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for process creation events (Windows Event ID 4688) on endpoints and servers involving command-line execution of cloud CLI tools (e.g., 'az', 'gcloud', 'aws') with arguments for creating service principals or applications (e.g., 'az ad sp create-for-rbac'). Correlate the timestamp and name of the created principal with Azure AD audit logs showing the 'Add service principal' event. Subsequently, monitor all activity by this new principal, flagging any immediate, high-volume, or sensitive data access as highly suspicious. Use linear regression to test for a correlation between scripted principal creation events and subsequent alert volume."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
