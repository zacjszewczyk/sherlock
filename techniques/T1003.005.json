[
    {
        "information_requirement": "Has the adversary accessed cached domain credentials?",
        "tactic_id": "TA0006",
        "tactic_name": "Credential-Access",
        "indicators": [
            {
                "technique_id": "T1003.005",
                "name": "Cached Domain Credentials",
                "evidence": [
                    {
                        "description": "Execution of a process with a file hash matching a known credential dumping tool from a cyber threat intelligence feed.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Integrate a threat intelligence feed of file hashes for known credential dumping tools and their variants. For each process creation event (Windows Event ID 4688), use an EDR or a helper script to retrieve the file hash of the new process executable. Correlate the captured hash with the threat intelligence feed in near real-time. This action constitutes a high-confidence selector-based alert and should be investigated immediately. *Note: This requires a mechanism to retrieve file hashes for processes identified in Event ID 4688, as the event itself does not contain the hash.*"
                    },
                    {
                        "description": "Execution of processes with command-line arguments containing keywords or specific argument patterns commonly associated with accessing or dumping cached credentials.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Continuously monitor Windows Event ID 4688 for process creation events. Use regular expressions to search command-line arguments for patterns indicative of credential dumping, such as 'reg save hklm\\sam', 'reg.exe save HKLM\\SECURITY', 'sekurlsa::logonpasswords', 'lsadump::cache', 'tdbdump', or interaction with '/var/lib/sss/db/'. Correlate findings with parent process (e.g., powershell.exe, cmd.exe) and user context. Use descriptive statistics to identify hosts or users with an unusually high frequency of these patterns."
                    },
                    {
                        "description": "Direct access to registry hives (SAM, SECURITY, SYSTEM) or files containing cached credential data by an unauthorized or unexpected process.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Enable object access auditing (SACLs) for read/write access on critical Windows registry hives (HKEY_LOCAL_MACHINE\\SECURITY, HKEY_LOCAL_MACHINE\\SYSTEM, HKEY_LOCAL_MACHINE\\SAM). Monitor Windows Event IDs 4656 (handle requested) and 4663 (access attempted) for these objects. Establish a baseline of normal system processes that access these hives (e.g., lsass.exe, System). Alert on access from non-standard processes like powershell.exe, cmd.exe, reg.exe, or any process running from a temporary or user-writable directory. Use correlation analysis to link the access event to a user session and parent process."
                    },
                    {
                        "description": "An unauthorized process requests a handle to the Local Security Authority Subsystem Service (LSASS) process, indicating a likely attempt to read credentials from memory.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Enable object access auditing on the LSASS process to generate events for handle requests (specifically for access rights like PROCESS_VM_READ). Monitor Windows Event IDs 4656 and 4663 where the 'Object Name' is the LSASS process. Baseline legitimate processes that interact with LSASS (e.g., csrss.exe, wininit.exe, some EDR components). Alert on any process outside this baseline that requests a handle to LSASS, particularly processes like powershell.exe, rundll32.exe, or any executable in a non-standard location. This is a high-fidelity behavioral indicator of in-memory credential theft."
                    },
                    {
                        "description": "A sequence of suspicious activities including credential dumping attempts followed immediately by exfiltration or lateral movement using potentially acquired credentials.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4624",
                            "Windows Event ID 4625",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Define a multi-stage detection rule correlating events across data sources. Stage 1: Detect potential credential dumping via command-line patterns (Event ID 4688) or unauthorized registry/LSASS access (Event ID 4656/4663). Stage 2: Within a 30-minute window following a Stage 1 alert on a host, monitor for: (a) Outbound network connections from that host to rare destination IPs or over non-standard ports (Zeek conn.log), using frequency analysis and historical baselines to define rarity. (b) A spike in network logons (Event ID 4624 for success, 4625 for failure; Logon Type 3) originating from that host to other internal systems. Use time series analysis or a simple threshold (e.g., >10 failed logons to new systems) to detect this spike. Correlate these events to create a high-confidence alert for a full credential access and usage TTP."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
