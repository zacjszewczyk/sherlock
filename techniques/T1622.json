[
    {
        "information_requirement": "Is the adversary attempting to evade defensive measures by detecting debuggers?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1622",
                "name": "Debugger Evasion",
                "evidence": [
                    {
                        "description": "An anomalous process accesses specific registry keys or file paths known to be associated with common debuggers or analysis tools.",
                        "data_sources": [
                            "Windows Event ID 4663",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Create a watchlist of specific registry keys (e.g., `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<process_name>\\Debugger`) and file paths (e.g., directories for x64dbg, OllyDbg, WinDbg, IDA Pro) associated with debuggers. Monitor Windows Event ID 4663 (Object Access, requires specific SACL configuration) or Windows Event ID 4688 (Process Creation) with command lines like `reg query` or `dir` targeting these specific artifacts. Alert on access attempts from processes that are not legitimate installers, security tools, or developer utilities."
                    },
                    {
                        "description": "A process executes a sequence of specific API calls, loads particular modules, or uses command-line utilities in a pattern commonly used for debugger detection.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 7 (Sysmon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for command lines that explicitly check for debugger processes (e.g., `tasklist /fi \"IMAGENAME eq ollydbg.exe\"`). Monitor Sysmon Event ID 7 (Image Load) for processes loading specific system libraries (e.g., kernel32.dll, ntdll.dll) immediately followed by process termination (Sysmon Event ID 5), a pattern indicative of an anti-debug check. Correlate a process creation event with an immediate termination event using a short time window (e.g., <1 second) to detect this pattern."
                    },
                    {
                        "description": "A process exhibits timing anomalies or structural exceptions indicative of anti-debugging checks.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 1 (Sysmon)",
                            "Windows Event ID 5 (Sysmon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Calculate the execution duration for newly created processes by correlating process start times (Windows Event ID 4688 / Sysmon Event ID 1) and end times (Sysmon Event ID 5). Establish baselines for common applications and system processes. Flag processes with extremely short lifespans (<1 second), especially if they are unsigned or running from unusual locations (e.g., %TEMP%, %APPDATA%). Use descriptive statistics (mean, median, IQR) on process duration to identify significant outliers that may indicate a 'check-and-exit' anti-debugging behavior."
                    },
                    {
                        "description": "A process spawns a child process to attach to itself as a debugger, a known anti-debugging technique to prevent other debuggers from attaching.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 1 (Sysmon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze Windows Event ID 4688 / Sysmon Event ID 1 to identify parent-child process relationships. Create a high-fidelity alert for any instance where a child process's command line indicates a debugging action (e.g., `ntsd -p`, `cdb -p`) targeting its own parent process ID. This is a highly anomalous behavioral pattern that strongly indicates a sophisticated debugger evasion attempt."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary performing discovery by checking for analysis environments like debuggers?",
        "tactic_id": "TA0007",
        "tactic_name": "Discovery",
        "indicators": [
            {
                "technique_id": "T1622",
                "name": "Debugger Evasion",
                "evidence": [
                    {
                        "description": "Execution of a process whose file hash is known to belong to a malware family that uses debugger detection as part of its initial discovery routine.",
                        "data_sources": [
                            "Windows Event ID 1 (Sysmon)",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "For all newly executed processes identified via Sysmon Event ID 1 (which includes file hashes), compare the process hash (e.g., SHA256, MD5) against a continuously updated threat intelligence feed of known malware hashes. While Windows Event ID 4688 does not natively provide hashes, it can be correlated with AV/EDR alerts or manual hash lookups for suspicious processes. Alert on any matches and prioritize investigation of the process's subsequent discovery actions."
                    },
                    {
                        "description": "Execution of specific command-line utilities or scripts in a sequence that queries for running processes, services, and system information associated with common analysis environments.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 1 (Sysmon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 / Sysmon Event ID 1 for command-line arguments containing strings like `tasklist`, `wmic process get`, `fltMc.exe`, `Get-Process`, or explicit queries for debugger process names (e.g., `x64dbg.exe`, `windbg.exe`, `idaq.exe`). Create a rule that triggers when a single parent process spawns multiple such commands in a short time window (e.g., >3 distinct checks in <30 seconds). Use frequency analysis to identify processes performing an unusually high number of such checks."
                    },
                    {
                        "description": "A process performs a burst of disparate system information queries, including debugger checks, correlated with unusual network discovery activity.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log",
                            "Zeek dns.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate a cluster of host-based discovery commands (e.g., `whoami`, `ipconfig`, `net user`, `tasklist`) from a single process (identified via Windows Event ID 4688) with subsequent network-level discovery from the same source host (e.g., internal port scanning identified via Zeek conn.log, or rapid internal DNS lookups in Zeek dns.log). Use correlation analysis on events from the same source host within a defined time window (e.g., 5 minutes) to build a composite alert for broad discovery behavior that includes anti-analysis checks."
                    },
                    {
                        "description": "An unusual or unsigned process loads high-resolution timer libraries or makes a high frequency of system calls related to time queries, potentially to measure debugger-induced latency.",
                        "data_sources": [
                            "Windows Event ID 7 (Sysmon)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Sysmon Event ID 7 (Image Load) for the loading of `winmm.dll` (which contains `timeGetTime`) or other high-resolution timer modules. Create a baseline of normal module loads for legitimate applications. Flag the loading of these modules by processes that are unsigned, packed, running from non-standard locations (e.g., `%APPDATA%`, `%TEMP%`), or have no legitimate reason to require high-precision timing. While not definitively malicious, correlation of this behavioral anomaly with other discovery patterns should significantly increase suspicion."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
