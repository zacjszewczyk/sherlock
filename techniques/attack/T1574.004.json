[
    {
        "information_requirement": "Is the adversary maintaining persistence using dynamic library hijacking?",
        "tactic_id": "TA0003",
        "tactic_name": "Persistence",
        "indicators": [
            {
                "technique_id": "T1574.004",
                "name": "Dylib Hijacking",
                "evidence": [
                    {
                        "description": "A dynamic library file with a known malicious hash or name is written to a location searched by a legitimate, auto-starting application.",
                        "data_sources": [
                            "Windows Event ID 4663",
                            "Windows Event ID 4656"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for file creation/write events (Windows Event IDs 4656, 4663) for files with dynamic library extensions (.dll, .dylib, .so). Compute the hash of the newly written file upon detection. Compare the file hash and name against a CTI feed of known malicious library files used for persistence. Alert on any matches and investigate the associated auto-starting application."
                    },
                    {
                        "description": "A known vulnerable application, which is configured to auto-start, loads a newly created dynamic library upon system boot or user login.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4656",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Maintain a list of legitimate applications that auto-start (e.g., via services, scheduled tasks, run keys) and are known to be vulnerable to hijacking. Correlate a file write/creation event (Windows Event IDs 4656/4663) of a dynamic library in a hijackable location with a subsequent process start event (Windows Event ID 4688) for one of the vulnerable applications. Investigate any instances where a new library is dropped shortly before the vulnerable application starts automatically."
                    },
                    {
                        "description": "A legitimate, auto-starting process initiates unusual network communication shortly after system boot or user login, suggesting its function has been hijacked.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log",
                            "Zeek dns.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Baseline the normal network behavior (destinations, ports, protocols, data volume) of applications that start automatically. Correlate process creation events (Windows Event ID 4688) occurring at boot/login with network connection logs (Zeek conn.log, dns.log). Use time series analysis and descriptive statistics to flag any auto-starting processes that initiate connections to new or rare external destinations, or exhibit significant changes in traffic patterns indicative of C2 communication."
                    },
                    {
                        "description": "A dynamic library is created in a non-standard location, followed by the modification of a persistence mechanism (e.g., Run Key, Service) to point to a legitimate application in that location.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for the creation of dynamic libraries (Windows Event ID 4656) in unusual, user-controlled locations. Correlate this activity with subsequent modifications to persistence-related registry keys or services (Windows Event ID 4657 for registry). A common behavioral pattern is placing a legitimate executable and a malicious DLL together in a new folder, then creating a persistence key pointing to that executable. Use correlation analysis to link these file and registry events occurring within a short time window."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary attempting privilege escalation via dynamic library hijacking?",
        "tactic_id": "TA0004",
        "tactic_name": "Privilege-Escalation",
        "indicators": [
            {
                "technique_id": "T1574.004",
                "name": "Dylib Hijacking",
                "evidence": [
                    {
                        "description": "A file with a name and/or hash matching a known privilege escalation exploit's dynamic library is created in a hijackable path for a high-privilege process.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for file creation/write events (Windows Event IDs 4656, 4663) of dynamic libraries. Compare the file hash and name against a CTI feed of known malicious libraries used in specific privilege escalation exploits (e.g., libraries that exploit vulnerable, privileged installers or services). Alert on matches, especially if the file is written to a path loaded by a process that runs as SYSTEM or Administrator."
                    },
                    {
                        "description": "A dynamic library is written to a user-writable directory by a low-privilege user, followed by the execution of a specific, vulnerable, high-privilege application known to load libraries from that path.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4663",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Maintain a list of privileged applications (e.g., installers, updaters, services) known to be vulnerable to DLL hijacking from user-writable locations. Create a detection rule that triggers when a dynamic library is written (Windows Event IDs 4656/4663) to a specific user-writable path (e.g., C:\\Windows\\Tasks, %TEMP%) and is immediately followed by the execution (Windows Event ID 4688) of one of these known vulnerable, privileged applications. Correlate events based on host and a time window of less than one minute."
                    },
                    {
                        "description": "A process running under a standard user account writes a dynamic library to a protected system or application directory.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for file write events (Windows Event IDs 4656/4663) of dynamic libraries (.dll, .dylib) to any directory. Identify the user context of the write operation. If the user is a standard, non-administrative user and the target directory is a protected system path (e.g., C:\\Windows\\System32) or a Program Files directory for a privileged service, this is a strong indicator of a privilege escalation attempt in progress. Use descriptive statistics on user file write locations to identify anomalous behavior."
                    },
                    {
                        "description": "A high-privilege process is created and immediately terminates, followed by the creation of the same process with a different or elevated integrity level, subsequent to a dynamic library write in its path.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze Windows Event ID 4688 logs for sequences where a high-privilege process starts and quickly exits, potentially indicating it loaded a malicious DLL and is re-launching itself or another process with elevated rights. Correlate this process creation sequence with a preceding file write (Windows Event ID 4663) of a dynamic library in a location the process loads from. Use correlation analysis based on process name, host, and time to detect this behavioral pattern."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary using dynamic library hijacking for defense evasion?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense-Evasion",
        "indicators": [
            {
                "technique_id": "T1574.004",
                "name": "Dylib Hijacking",
                "evidence": [
                    {
                        "description": "Network traffic from a trusted, signed process (e.g., security tool, Microsoft executable) to an IP address or domain known to be a malicious C2 server.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Zeek dns.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Identify network traffic originating from hosts running trusted processes that should have limited or no external network connectivity. Correlate the destination IPs and domains from Zeek conn.log and dns.log against a high-confidence CTI feed of malicious C2 infrastructure. Alert on any matches, as this suggests the trusted process's functionality has been hijacked to evade network detections."
                    },
                    {
                        "description": "A legitimate, trusted process is executed with unusual command-line arguments or from an atypical path, in a manner consistent with setting up a DLL side-loading scenario.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4656",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Baseline the normal command-line arguments and execution paths for commonly hijacked, trusted processes. Monitor process creation events (Windows Event ID 4688) for deviations. A common pattern is `copy C:\\Windows\\System32\\legit.exe C:\\Users\\Public\\` followed by `copy malicious.dll C:\\Users\\Public\\legit.dll`, then `C:\\Users\\Public\\legit.exe`. Correlate file write events (Windows Event ID 4656/4663) of a library and an executable to a new directory, followed by the execution of that copied executable."
                    },
                    {
                        "description": "A typically non-network-facing, signed process (e.g., calculator.exe, services.exe) initiates external network connections or spawns suspicious child processes.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log",
                            "Zeek dns.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Profile the normal behavior of a set of trusted, commonly available processes, establishing a baseline of expected child processes and network activity (which is often none). Use Zeek conn.log and dns.log to flag any external network connections from hosts where these processes are running (correlate by IP and timeframe). Use Windows Event ID 4688 to detect when these processes spawn shells (cmd.exe, powershell.exe) or other unusual child processes. Such anomalous behavior from a trusted process is a strong indicator of hijacking for defense evasion."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
