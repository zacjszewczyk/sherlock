[
    {
        "information_requirement": "Is the adversary executing commands and scripts on target systems?",
        "tactic_id": "TA0002",
        "tactic_name": "Execution",
        "indicators": [
            {
                "technique_id": "T1059",
                "name": "Command and Scripting Interpreter",
                "evidence": [
                    {
                        "description": "Execution of scripts with file hashes matching known malicious scripts, or command-line arguments containing known malicious domains or IP addresses.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Process Creation events (Windows Event ID 4688). For script executions (e.g., powershell.exe -file <script.ps1>), hash the script file on execution and compare against a threat intelligence feed of known malicious file hashes. For all interpreter command lines, parse arguments for domains and IP addresses and inner join them with a CTI feed of known malicious network indicators. Alert on any matches and investigate associated network connections in Zeek conn.log."
                    },
                    {
                        "description": "Execution of command interpreters with command-line arguments matching patterns of known malicious tools, obfuscation techniques, or suspicious download and execution cradles.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for command interpreter processes (cmd.exe, powershell.exe, cscript.exe, wscript.exe). Use regular expressions to search command-line arguments for patterns like Base64 encoded commands (`-enc`, `-e`), download cradles (`IEX(New-Object Net.WebClient).DownloadString`, `curl`, `wget`), silent execution flags, or syntax associated with specific attack frameworks like PowerShell Empire or Cobalt Strike. Maintain and update a list of these patterns for matching."
                    },
                    {
                        "description": "Anomalous process ancestry where a command or script interpreter is spawned by an unexpected parent process, such as a Microsoft Office application, web browser, or PDF reader.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze Windows Event ID 4688 logs to build process trees. Establish a baseline of normal parent-child relationships across the environment. Flag executions where a command interpreter (cmd.exe, powershell.exe) is a child of a non-interactive or unusual parent process (e.g., WINWORD.EXE, EXCEL.EXE, OUTLOOK.EXE, AcroRd32.exe). Use frequency analysis on parent-process pairs to identify rare and suspicious chains of execution, and use correlation analysis to link these events to potential phishing document execution."
                    },
                    {
                        "description": "Creation of script files in atypical directories followed by immediate execution by a command interpreter.",
                        "data_sources": [
                            "Windows Event ID 4663",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4663 (An attempt was made to access an object) for file write events of script extensions (.ps1, .bat, .vbs, .js) in unusual directories like `%TEMP%`, `%APPDATA%`, or public user directories. Correlate these write events with a subsequent Windows Event ID 4688 showing execution of the same file path by an interpreter process. Use correlation analysis to link the events by process ID and timestamp, flagging instances where the time delta between write and execution is very short (e.g., < 5 seconds)."
                    },
                    {
                        "description": "Command or script interpreters initiating direct outbound network connections to unusual external destinations or over non-standard ports.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate process execution events for interpreters (Windows Event ID 4688) with outbound network connection events (Zeek conn.log) originating from the same host. Establish a baseline of typical network behavior for legitimate script activity. Use descriptive statistics (frequency analysis of destination IPs, geolocations, ports, and data volume) to identify rare or first-time connections. Use entropy measures on destination ports per host to detect unusual port usage by interpreters, which could indicate C2 or data exfiltration activity."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
