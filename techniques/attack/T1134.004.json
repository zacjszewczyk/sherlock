[
    {
        "information_requirement": "Has the adversary used Parent PID Spoofing for privilege escalation?",
        "tactic_id": "TA0004",
        "tactic_name": "Privilege Escalation",
        "indicators": [
            {
                "technique_id": "T1134.004",
                "name": "Parent PID Spoofing",
                "evidence": [
                    {
                        "description": "Execution of a process with a known malicious hash that is reported to use Parent PID Spoofing for privilege escalation.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for new process creations. Continuously compare the file hash of the executable in the 'NewProcessName' field against a cyber threat intelligence feed of known malicious file hashes, particularly those associated with malware or tools known to use Parent PID Spoofing for privilege escalation. Alert on any match."
                    },
                    {
                        "description": "A process is created with a spoofed parent process, indicated by a mismatch between the 'ParentProcessName' and 'CreatorProcessName' fields in process creation logs, where the intended parent is a high-privilege process.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 events and perform a direct comparison of the 'ParentProcessName' field with the 'CreatorProcessName' field. Flag any instance where these two fields have different values AND the 'ParentProcessName' corresponds to a high-privilege system process (e.g., lsass.exe, services.exe, wininit.exe). This pattern is a strong indicator of PPID spoofing. Correlate these events with the integrity level and user context of the new process."
                    },
                    {
                        "description": "A process is created with a parent that is a high-privilege system process, but this parent-child relationship is anomalous compared to a learned baseline and the child process runs with an elevated integrity level.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Establish a statistical baseline of all legitimate parent-child process relationships, focusing on parents that are high-privilege system processes (e.g., svchost.exe, lsass.exe, services.exe, smss.exe). Monitor Windows Event ID 4688 for new relationships not present in the baseline. Use frequency analysis and descriptive statistics to score the rarity of a given parent-child pair. Investigate rare pairs, especially where the child process is not a known, legitimate system binary and is running at a 'High' or 'System' integrity level. Use box-plots to identify outlier parent-child frequencies."
                    },
                    {
                        "description": "A process requiring administrative privileges is created by a standard user process, but its parent is reported as a non-interactive or unexpected process instead of the UAC consent dialog (consent.exe) or an interactive shell (explorer.exe).",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for processes launching with a 'High' integrity level where the 'CreatorProcessName' was running at a 'Medium' integrity level. For these elevation events, analyze the reported 'ParentProcessName'. Flag instances where the parent is neither 'consent.exe' nor 'explorer.exe' (or other legitimate shells), as this may indicate a UAC bypass technique leveraging PPID spoofing to obscure its origin. Use correlation analysis to link the process creation event with the integrity levels of the parent and child."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary using Parent PID Spoofing for defense evasion?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1134.004",
                "name": "Parent PID Spoofing",
                "evidence": [
                    {
                        "description": "Execution of a process with a known malicious hash that is reported to use Parent PID Spoofing to masquerade as a legitimate process and evade detection.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for new process creations. Compare the file hash of the executable specified in the 'NewProcessName' field against a CTI feed of known malicious file hashes, particularly those associated with RATs, droppers, or other malware known to use PPID spoofing to evade defenses by blending in with normal activity. Alert on any match."
                    },
                    {
                        "description": "A process is created with a spoofed parent process, indicated by a mismatch between the 'ParentProcessName' and 'CreatorProcessName' fields, where the intended parent is a common, trusted process like explorer.exe or svchost.exe.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 and compare the 'ParentProcessName' field with the 'CreatorProcessName' field. Flag any instance where these two fields differ AND the 'ParentProcessName' is a common legitimate process frequently used for masquerading (e.g., explorer.exe, svchost.exe, winlogon.exe, services.exe). This pattern strongly indicates that an unrelated process ('CreatorProcessName') is attempting to hide its child process by attributing it to a trusted parent for evasion."
                    },
                    {
                        "description": "A common script interpreter or Living-Off-the-Land Binary (LOLBAS) is created with an anomalous parent process that deviates from established baselines of user and system activity, suggesting masquerading.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Establish a baseline of legitimate parent processes for common script interpreters (powershell.exe, cscript.exe, wscript.exe) and LOLBAS (rundll32.exe, mshta.exe, regsvr32.exe, cmstp.exe) across the environment. Monitor Windows Event ID 4688 for creations of these processes. Use frequency analysis and entropy measures on parent-child pairings to identify and alert on rare or unexpected relationships. For example, flag `powershell.exe` being parented by `winword.exe` but reporting its parent as `explorer.exe`."
                    },
                    {
                        "description": "A process chain appears legitimate at first glance (e.g., explorer.exe -> cmd.exe), but deeper analysis of the grandparent process or the user context of the parent is inconsistent with normal interactive use.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "For process chains that appear legitimate, such as 'explorer.exe' spawning 'powershell.exe', reconstruct the process lineage further. Use correlation analysis to identify the parent of 'explorer.exe' (the grandparent of 'powershell.exe'). Flag instances where the grandparent is an unusual process like a non-interactive service, an Office application, or a web browser. Additionally, check the user context: an 'explorer.exe' process running as 'NT AUTHORITY\\SYSTEM' and spawning interactive shells is highly anomalous and indicative of evasion."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
