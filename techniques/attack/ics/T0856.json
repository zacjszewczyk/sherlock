[
  {
    "information_requirement": "Is the adversary spoofing reporting messages to hide the true state of the industrial process? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0856",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Reporting messages for a specific ICS field device (e.g., RTU, PLC, IED) exhibit sequence number anomalies, specifically: duplicate sequence numbers within a 5-second window, non-monotonic increases (e.g., a sequence number decreases or resets unexpectedly), or skipped sequence numbers (a gap larger than 1). Additionally, message timestamps show inter-arrival times (IATs) that deviate significantly from the device's expected reporting frequency, such as IATs less than 50ms or exceeding 10 seconds for a device typically reporting every 1 second.",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.",
            "action": "1. Symbolic Logic: Configure a SIEM rule to alert when a Zeek dnp3.log or Zeek modbus.log entry shows a dnp3.seq_num or modbus.trans_id from the same id.orig_h (source IP) that is a duplicate of a previously observed sequence number within a 5-second rolling window. Additionally, create a rule to detect instances where the sequence number for a given id.orig_h decreases or resets without an explicit protocol-level reset command or device restart. 2. Statistical Method: For each unique ICS device (identified by id.orig_h in Zeek dnp3.log and Zeek modbus.log), calculate the inter-arrival time (IAT) for reporting messages. Over a 30-day rolling window, establish the 5th and 95th percentiles for the IAT. Generate an alert if the current IAT falls below the 5th percentile (indicating accelerated reporting) or above the 95th percentile (indicating delayed or skipped reporting). Additionally, calculate the standard deviation of sequence number differences (current - previous) and alert if a sequence number difference exceeds 3 standard deviations from the mean (indicating a large skip). 3. Machine Learning: Implement a multivariate time series anomaly detection model (e.g., Isolation Forest or LSTM Autoencoder) that monitors sequence number progression, inter-arrival times, and message length for each critical ICS device (id.orig_h). Train the model on 90 days of baseline Zeek dnp3.log and Zeek modbus.log data. Deploy the model to continuously score incoming message streams, generating an alert when the anomaly score for a device exceeds a pre-defined threshold (e.g., 0.8), indicating statistically significant deviations from normal message flow characteristics."
          },
          {
            "description": "Observed telemetry values (e.g., dnp3.value, modbus.value, iec61850.value) reported via ICS protocols deviate by more than an established threshold (e.g., 5% relative difference or 0.5 PSI absolute difference) from corresponding measurements obtained from an independent, trusted data source. Trusted sources could include redundant physical sensors, physics-based process models, or validated historical data records from an enterprise historian.",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log",
              "Windows Application Event Logs (e.g., for Historian agents or redundant sensor applications)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA servers, Process Historian servers, HMI workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone (IDMZ)).",
            "action": "1. Symbolic Logic: Configure a SIEM correlation rule to alert when a critical process anomaly or equipment failure event (e.g., 'Pump_A_Over_Temp_Alarm', 'Valve_B_Failed_Open') is logged in Windows Application Event Logs (from Historian or control application logs) for a specific asset, but simultaneously, Zeek dnp3.log, Zeek modbus.log, or Zeek iec61850.log for the same asset (id.orig_h) reports a 'normal' or 'within-range' telemetry value for the corresponding physical parameter within a 60-second window. This indicates a discrepancy between reported states. 2. Statistical Method: For each critical telemetry point, collect real-time values from the primary ICS protocol logs (e.g., dnp3.value from Zeek dnp3.log) and a trusted secondary source (e.g., redundant sensor data from Windows Application Event Logs or directly from a historian via API). Calculate the absolute or percentage difference between these two values at each reporting interval. Establish a 30-day baseline for this difference and compute the 99th percentile. Generate an alert if the current difference exceeds the 99th percentile for three consecutive intervals, indicating a sustained and statistically significant deviation. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost or SVM) using historical telemetry data from both primary ICS protocol logs (Zeek dnp3.log, Zeek modbus.log, Zeek iec61850.log) and trusted secondary sources (e.g., Historian data or redundant sensor logs). Label data points as 'normal' or 'divergent' based on whether the values from the two sources exceed a pre-defined deviation threshold. Continuously feed real-time telemetry from both sources into the trained model. Generate an alert when the model predicts a 'divergent' class with high confidence (e.g., >0.9 probability) for a critical telemetry point, indicating a potential spoofing event."
          },
          {
            "description": "A reporting message containing ICS protocol data (e.g., DNP3, Modbus, IEC 61850) is observed originating from an IP address or MAC address that is not recorded in the authoritative asset inventory for the legitimate field device, or from a network segment (VLAN/subnet) where the device is not expected to communicate. Additionally, the network flow associated with this message (e.g., Zeek conn.log) exhibits characteristics (e.g., conn.orig_bytes, conn.resp_bytes, conn.duration) that deviate outside the established 1st and 99th percentiles for the specific device and message type.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network perimeter gateways between IT and OT environments.",
            "action": "1. Symbolic Logic: Configure a SIEM rule that cross-references Zeek conn.log entries with a continuously updated asset inventory. Alert if a Zeek conn.log entry for an ICS protocol (e.g., indicated by service in Zeek dnp3.log, modbus.log, iec61850.log, or well-known ports in conn.log) shows an id.orig_h (source IP) or id.orig_l2_addr (source MAC) that does not match the expected IP/MAC pair for the identified device, or if the communication originates from a network segment (VLAN/subnet) inconsistent with the device's documented location in the asset inventory. 2. Statistical Method: For each unique ICS device (identified by id.orig_h) and specific ICS protocol communication (e.g., service=\"dnp3\" in Zeek conn.log), establish a 60-day baseline for network flow characteristics including conn.orig_bytes, conn.resp_bytes, and conn.duration. Calculate the median and interquartile range (IQR) for these metrics. Generate an alert if any current flow characteristic falls outside the range of (Median - 3*IQR) or (Median + 3*IQR), indicating an outlier in network traffic volume or duration for that specific device's reporting messages. 3. Machine Learning: Implement an unsupervised anomaly detection model (e.g., Isolation Forest or One-Class SVM) on the network flow metadata from Zeek conn.log for each ICS device. Features for the model should include conn.orig_bytes, conn.resp_bytes, conn.duration, and derived features like packet rate. Train the model on 90 days of normal device communication patterns. Continuously score real-time network flows; generate an alert when the anomaly score for a flow associated with an ICS device exceeds a pre-defined threshold (e.g., 0.7), signifying a significant deviation from its learned normal communication behavior indicative of spoofing or unauthorized activity."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary spoofing reporting messages to mislead operators and impair process control? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0856",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Reporting messages for a specific ICS field device (e.g., RTU, PLC, IED) exhibit sequence number anomalies, specifically: duplicate sequence numbers within a 5-second window, non-monotonic increases (e.g., a sequence number decreases or resets unexpectedly), or skipped sequence numbers (a gap larger than 1). Additionally, message timestamps show inter-arrival times (IATs) that deviate significantly from the device's expected reporting frequency, such as IATs less than 50ms or exceeding 10 seconds for a device typically reporting every 1 second.",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.",
            "action": "1. Symbolic Logic: Configure a SIEM rule to alert when a Zeek dnp3.log or Zeek modbus.log entry shows a dnp3.seq_num or modbus.trans_id from the same id.orig_h (source IP) that is a duplicate of a previously observed sequence number within a 5-second rolling window. Additionally, create a rule to detect instances where the sequence number for a given id.orig_h decreases or resets without an explicit protocol-level reset command or device restart. 2. Statistical Method: For each unique ICS device (identified by id.orig_h in Zeek dnp3.log and Zeek modbus.log), calculate the inter-arrival time (IAT) for reporting messages. Over a 30-day rolling window, establish the 5th and 95th percentiles for the IAT. Generate an alert if the current IAT falls below the 5th percentile (indicating accelerated reporting) or above the 95th percentile (indicating delayed or skipped reporting). Additionally, calculate the standard deviation of sequence number differences (current - previous) and alert if a sequence number difference exceeds 3 standard deviations from the mean (indicating a large skip). 3. Machine Learning: Implement a multivariate time series anomaly detection model (e.g., Isolation Forest or LSTM Autoencoder) that monitors sequence number progression, inter-arrival times, and message length for each critical ICS device (id.orig_h). Train the model on 90 days of baseline Zeek dnp3.log and Zeek modbus.log data. Deploy the model to continuously score incoming message streams, generating an alert when the anomaly score for a device exceeds a pre-defined threshold (e.g., 0.8), indicating statistically significant deviations from normal message flow characteristics."
          },
          {
            "description": "Observed telemetry values (e.g., dnp3.value, modbus.value, iec61850.value) reported via ICS protocols deviate by more than an established threshold (e.g., 5% relative difference or 0.5 PSI absolute difference) from corresponding measurements obtained from an independent, trusted data source. Trusted sources could include redundant physical sensors, physics-based process models, or validated historical data records from an enterprise historian.",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log",
              "Windows Application Event Logs (e.g., for Historian agents or redundant sensor applications)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA servers, Process Historian servers, HMI workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone (IDMZ)).",
            "action": "1. Symbolic Logic: Configure a SIEM correlation rule to alert when a critical process anomaly or equipment failure event (e.g., 'Pump_A_Over_Temp_Alarm', 'Valve_B_Failed_Open') is logged in Windows Application Event Logs (from Historian or control application logs) for a specific asset, but simultaneously, Zeek dnp3.log, Zeek modbus.log, or Zeek iec61850.log for the same asset (id.orig_h) reports a 'normal' or 'within-range' telemetry value for the corresponding physical parameter within a 60-second window. This indicates a discrepancy between reported states. 2. Statistical Method: For each critical telemetry point, collect real-time values from the primary ICS protocol logs (e.g., dnp3.value from Zeek dnp3.log) and a trusted secondary source (e.g., redundant sensor data from Windows Application Event Logs or directly from a historian via API). Calculate the absolute or percentage difference between these two values at each reporting interval. Establish a 30-day baseline for this difference and compute the 99th percentile. Generate an alert if the current difference exceeds the 99th percentile for three consecutive intervals, indicating a sustained and statistically significant deviation. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost or SVM) using historical telemetry data from both primary ICS protocol logs (Zeek dnp3.log, Zeek modbus.log, Zeek iec61850.log) and trusted secondary sources (e.g., Historian data or redundant sensor logs). Label data points as 'normal' or 'divergent' based on whether the values from the two sources exceed a pre-defined deviation threshold. Continuously feed real-time telemetry from both sources into the trained model. Generate an alert when the model predicts a 'divergent' class with high confidence (e.g., >0.9 probability) for a critical telemetry point, indicating a potential spoofing event."
          },
          {
            "description": "A reporting message containing ICS protocol data (e.g., DNP3, Modbus, IEC 61850) is observed originating from an IP address or MAC address that is not recorded in the authoritative asset inventory for the legitimate field device, or from a network segment (VLAN/subnet) where the device is not expected to communicate. Additionally, the network flow associated with this message (e.g., Zeek conn.log) exhibits characteristics (e.g., conn.orig_bytes, conn.resp_bytes, conn.duration) that deviate outside the established 1st and 99th percentiles for the specific device and message type.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network perimeter gateways between IT and OT environments.",
            "action": "1. Symbolic Logic: Configure a SIEM rule that cross-references Zeek conn.log entries with a continuously updated asset inventory. Alert if a Zeek conn.log entry for an ICS protocol (e.g., indicated by service in Zeek dnp3.log, modbus.log, iec61850.log, or well-known ports in conn.log) shows an id.orig_h (source IP) or id.orig_l2_addr (source MAC) that does not match the expected IP/MAC pair for the identified device, or if the communication originates from a network segment (VLAN/subnet) inconsistent with the device's documented location in the asset inventory. 2. Statistical Method: For each unique ICS device (identified by id.orig_h) and specific ICS protocol communication (e.g., service=\"dnp3\" in Zeek conn.log), establish a 60-day baseline for network flow characteristics including conn.orig_bytes, conn.resp_bytes, and conn.duration. Calculate the median and interquartile range (IQR) for these metrics. Generate an alert if any current flow characteristic falls outside the range of (Median - 3*IQR) or (Median + 3*IQR), indicating an outlier in network traffic volume or duration for that specific device's reporting messages. 3. Machine Learning: Implement an unsupervised anomaly detection model (e.g., Isolation Forest or One-Class SVM) on the network flow metadata from Zeek conn.log for each ICS device. Features for the model should include conn.orig_bytes, conn.resp_bytes, conn.duration, and derived features like packet rate. Train the model on 90 days of normal device communication patterns. Continuously score real-time network flows; generate an alert when the anomaly score for a flow associated with an ICS device exceeds a pre-defined threshold (e.g., 0.7), signifying a significant deviation from its learned normal communication behavior indicative of spoofing or unauthorized activity."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]