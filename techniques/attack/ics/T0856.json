[
  {
    "information_requirement": "Is the adversary spoofing reporting messages to hide the true state of the industrial process? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0856",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Reporting messages for a specific ICS field device (e.g., RTU, PLC, IED) contain sequence numbers that are either duplicated within a defined window (e.g., 5 seconds) or are not strictly monotonic increasing. Additionally, message timestamps may show non-standard inter-arrival times (e.g., less than 50ms for a device typically reporting every 1 second, or exceeding 10 seconds for the same device).",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Industrial Demilitarized Zone (IDMZ) network segments, Level 1 (Basic Control) network, Level 2 (Supervisory Control) network, and any network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is ingested.",
            "action": "1. **Symbolic Logic:** Configure a SIEM rule to alert on any instance where `dnp3.seq_num` or `modbus.trans_id` from the same `id.orig_h` (source IP) is logged as a duplicate within a 5-second window in `Zeek dnp3.log` or `Zeek modbus.log`.\n2. **Statistical Method:** For each unique ICS device (identified by `id.orig_h` and `id.resp_h` from Zeek logs), calculate the inter-arrival time (IAT) between consecutive reporting messages. Establish a 30-day moving average and standard deviation for the IAT. Trigger an alert if the current IAT falls outside the 1st or 99th percentile, or if it deviates more than 3 standard deviations from the established baseline, indicating unusual message pacing.\n3. **Machine Learning:** Implement a time series anomaly detection model (e.g., LSTM autoencoder) on the sequence number progression and message inter-arrival times for each critical ICS device. Train the model on historical Zeek `dnp3.log` and `modbus.log` data. Generate an alert when the model detects a significant deviation from the learned normal pattern, indicating potential message injection or manipulation."
          },
          {
            "description": "Telemetry values (e.g., `dnp3.value`, `modbus.value`) in reporting messages deviate by more than a defined threshold (e.g., 5% or 0.5 PSI) from corresponding readings obtained from an independent, trusted data source (e.g., redundant sensor, physics-based model output, or external process historian).",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Windows Event ID 4624",
              "Windows Application Event Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA/Historian servers, HMI workstations, and network segments where ICS protocol traffic is captured and analyzed (e.g., Level 2 network, IDMZ).",
            "action": "1. **Symbolic Logic:** Establish a correlation rule to alert when a critical process anomaly event (e.g., `source='AnomalyDetectionApp'`, `event_id=5000`, `severity='Critical'`) is logged in Windows Application Event Logs for a specific asset, while simultaneously, Zeek `dnp3.log` or `modbus.log` for the same asset (`id.orig_h`) reports a 'normal' or 'within-range' value for the corresponding telemetry point within a 60-second window.\n2. **Statistical Method:** For key telemetry points, collect values from both the primary ICS protocol logs (e.g., values in `Zeek dnp3.log`) and the trusted secondary source (e.g., redundant sensor application logs parsed from Windows Application Event Logs). Calculate the Pearson correlation coefficient between these two data streams over 5-minute intervals. Trigger an alert if the correlation coefficient drops below a pre-defined threshold (e.g., 0.8) for more than two consecutive intervals, indicating a significant divergence in reported values.\n3. **Machine Learning:** Train a supervised classification model (e.g., Random Forest) using historical telemetry data from both primary (Zeek ICS logs) and secondary (trusted sensor/model logs) sources. Label instances where values from the two sources diverge beyond a set threshold as 'anomalous'. Use this model to continuously classify incoming real-time data, generating an alert when a high probability of 'spoofed' or inconsistent telemetry is detected."
          },
          {
            "description": "A reporting message containing ICS protocol data (e.g., DNP3, Modbus) is observed originating from an IP address not associated with the legitimate field device in asset inventory, or from a MAC address that does not match the expected device. Additionally, the message exhibits network characteristics (e.g., `conn.orig_bytes` > 99th percentile, `conn.resp_bytes` < 1st percentile, or `conn.duration` outside 1st-99th percentile) that deviate significantly from the established baseline for that specific device and message type.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0/1 (Process/Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and perimeter gateways between IT and OT networks.",
            "action": "1. **Symbolic Logic:** Maintain an up-to-date asset inventory mapping ICS device IP and MAC addresses to their expected network segments. Create a SIEM rule to alert if a `Zeek conn.log` entry shows an `id.orig_h` (source IP) associated with an ICS device, but the `id.orig_l2_addr` (source MAC) does not match the expected MAC for that IP, or if the source IP is observed communicating from an unauthorized VLAN/subnet.\n2. **Statistical Method:** For each unique ICS device (`id.orig_h`), establish a baseline for network flow characteristics (e.g., `conn.orig_bytes`, `conn.resp_bytes`, `conn.duration`, `conn.proto`) using `Zeek conn.log` over a 30-day period. Calculate the 1st and 99th percentiles for these metrics. Trigger an alert if any of these values for a reporting message fall outside their respective percentile ranges, indicating a statistically significant deviation from normal device communication.\n3. **Machine Learning:** Apply unsupervised clustering (e.g., K-Means or DBSCAN) to `Zeek conn.log` data, using features such as `id.orig_h`, `id.resp_h`, `conn.orig_bytes`, `conn.resp_bytes`, `conn.duration`, and `conn.proto`. Train the model on historical benign traffic. Periodically analyze new traffic clusters; if a new cluster emerges that is significantly different from established normal clusters (e.g., low density, high distance from centroids), generate an alert for potential spoofed or anomalous communication patterns."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary spoofing reporting messages to mislead operators and impair process control? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0856",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Reporting messages for a specific ICS field device (e.g., RTU, PLC, IED) contain sequence numbers that are either duplicated within a defined window (e.g., 5 seconds) or are not strictly monotonic increasing. Additionally, message timestamps may show non-standard inter-arrival times (e.g., less than 50ms for a device typically reporting every 1 second, or exceeding 10 seconds for the same device).",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Industrial Demilitarized Zone (IDMZ) network segments, Level 1 (Basic Control) network, Level 2 (Supervisory Control) network, and any network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is ingested.",
            "action": "1. **Symbolic Logic:** Configure a SIEM rule to alert on any instance where `dnp3.seq_num` or `modbus.trans_id` from the same `id.orig_h` (source IP) is logged as a duplicate within a 5-second window in `Zeek dnp3.log` or `Zeek modbus.log`.\n2. **Statistical Method:** For each unique ICS device (identified by `id.orig_h` and `id.resp_h` from Zeek logs), calculate the inter-arrival time (IAT) between consecutive reporting messages. Establish a 30-day moving average and standard deviation for the IAT. Trigger an alert if the current IAT falls outside the 1st or 99th percentile, or if it deviates more than 3 standard deviations from the established baseline, indicating unusual message pacing.\n3. **Machine Learning:** Implement a time series anomaly detection model (e.g., LSTM autoencoder) on the sequence number progression and message inter-arrival times for each critical ICS device. Train the model on historical Zeek `dnp3.log` and `modbus.log` data. Generate an alert when the model detects a significant deviation from the learned normal pattern, indicating potential message injection or manipulation."
          },
          {
            "description": "Telemetry values (e.g., `dnp3.value`, `modbus.value`) in reporting messages deviate by more than a defined threshold (e.g., 5% or 0.5 PSI) from corresponding readings obtained from an independent, trusted data source (e.g., redundant sensor, physics-based model output, or external process historian).",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Windows Event ID 4624",
              "Windows Application Event Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA/Historian servers, HMI workstations, and network segments where ICS protocol traffic is captured and analyzed (e.g., Level 2 network, IDMZ).",
            "action": "1. **Symbolic Logic:** Establish a correlation rule to alert when a critical process anomaly event (e.g., `source='AnomalyDetectionApp'`, `event_id=5000`, `severity='Critical'`) is logged in Windows Application Event Logs for a specific asset, while simultaneously, Zeek `dnp3.log` or `modbus.log` for the same asset (`id.orig_h`) reports a 'normal' or 'within-range' value for the corresponding telemetry point within a 60-second window.\n2. **Statistical Method:** For key telemetry points, collect values from both the primary ICS protocol logs (e.g., values in `Zeek dnp3.log`) and the trusted secondary source (e.g., redundant sensor application logs parsed from Windows Application Event Logs). Calculate the Pearson correlation coefficient between these two data streams over 5-minute intervals. Trigger an alert if the correlation coefficient drops below a pre-defined threshold (e.g., 0.8) for more than two consecutive intervals, indicating a significant divergence in reported values.\n3. **Machine Learning:** Train a supervised classification model (e.g., Random Forest) using historical telemetry data from both primary (Zeek ICS logs) and secondary (trusted sensor/model logs) sources. Label instances where values from the two sources diverge beyond a set threshold as 'anomalous'. Use this model to continuously classify incoming real-time data, generating an alert when a high probability of 'spoofed' or inconsistent telemetry is detected."
          },
          {
            "description": "A reporting message containing ICS protocol data (e.g., DNP3, Modbus) is observed originating from an IP address not associated with the legitimate field device in asset inventory, or from a MAC address that does not match the expected device. Additionally, the message exhibits network characteristics (e.g., `conn.orig_bytes` > 99th percentile, `conn.resp_bytes` < 1st percentile, or `conn.duration` outside 1st-99th percentile) that deviate significantly from the established baseline for that specific device and message type.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0/1 (Process/Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and perimeter gateways between IT and OT networks.",
            "action": "1. **Symbolic Logic:** Maintain an up-to-date asset inventory mapping ICS device IP and MAC addresses to their expected network segments. Create a SIEM rule to alert if a `Zeek conn.log` entry shows an `id.orig_h` (source IP) associated with an ICS device, but the `id.orig_l2_addr` (source MAC) does not match the expected MAC for that IP, or if the source IP is observed communicating from an unauthorized VLAN/subnet.\n2. **Statistical Method:** For each unique ICS device (`id.orig_h`), establish a baseline for network flow characteristics (e.g., `conn.orig_bytes`, `conn.resp_bytes`, `conn.duration`, `conn.proto`) using `Zeek conn.log` over a 30-day period. Calculate the 1st and 99th percentiles for these metrics. Trigger an alert if any of these values for a reporting message fall outside their respective percentile ranges, indicating a statistically significant deviation from normal device communication.\n3. **Machine Learning:** Apply unsupervised clustering (e.g., K-Means or DBSCAN) to `Zeek conn.log` data, using features such as `id.orig_h`, `id.resp_h`, `conn.orig_bytes`, `conn.resp_bytes`, `conn.duration`, and `conn.proto`. Train the model on historical benign traffic. Periodically analyze new traffic clusters; if a new cluster emerges that is significantly different from established normal clusters (e.g., low density, high distance from centroids), generate an alert for potential spoofed or anomalous communication patterns."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]