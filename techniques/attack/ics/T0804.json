[
  {
    "information_requirement": "Is an adversary inhibiting our response function by blocking critical reporting messages? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0804",
        "name": "Block Reporting Message",
        "evidence": [
          {
            "description": "Unexpected termination of a whitelisted critical ICS application process (e.g., opcserver.exe, hmi_client.exe) on a Windows-based HMI, EWS, or historian server, resulting in a measurable and sustained drop of at least 90% in associated ICS protocol traffic (e.g., average bytes/packets per minute) for a duration exceeding 5 minutes.",
            "data_sources": [
              "Windows Event ID 4689",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Historian Servers, OPC Servers within the Process Control Network (PCN) segments.",
            "action": "1. Symbolic Logic/IOC: Query your SIEM for Windows Event ID 4689 (A process has exited) on critical ICS assets (HMIs, EWS, Historians) where the Process Name matches an entry in your CMDB's whitelist of critical ICS applications (e.g., opcserver.exe, hmi_client.exe). For each detected termination, cross-reference with Windows Event ID 4688 (A new process has been created) from the same host within 30 seconds to identify the Parent Process Name that initiated the termination. Alert if the Parent Process Name is not an expected system process (e.g., services.exe, svchost.exe) or is an interactive shell/admin tool (e.g., cmd.exe, powershell.exe, psexec.exe) outside of scheduled maintenance windows documented in your change management system."
          },
          {
            "description": "Detection of a newly added or modified Windows Defender Firewall rule on a critical HMI, Historian, or Application Server that explicitly blocks inbound or outbound communication on a port known to be used by ICS protocols (e.g., TCP 502 for Modbus, TCP 20000 for DNP3, UDP 47808 for EtherNet/IP), followed by a corresponding and sustained reduction of at least 75% in expected ICS traffic volume for that port over a 15-minute period.",
            "data_sources": [
              "Windows Event ID 4947",
              "Windows Event ID 4950",
              "Windows Event ID 4956",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "HMIs, Historian Servers, Application Servers in the Process Control Network (PCN), and Industrial Demilitarized Zone (IDMZ) servers that bridge IT/OT networks.",
            "action": "1. Symbolic Logic/IOC: Maintain a CMDB-driven watchlist of critical ICS assets (HMIs, Historians, Application Servers) and a list of known ICS protocol ports (e.g., TCP 502 for Modbus, TCP 20000 for DNP3, UDP 47808 for EtherNet/IP). Continuously monitor these critical assets for Windows Event ID 4947 (A rule was added), 4950 (A setting has changed), and 4956 (A rule was modified) related to Windows Defender Firewall. Parse the event details for Rule Name, Direction (Inbound/Outbound), Action (Allow/Block), and Local Port/Remote Port. Alert immediately if a new or modified rule explicitly sets Action: Block for any port on the ICS protocol watchlist, especially if Direction is 'Inbound' or 'Outbound' and the Local Port or Remote Port matches an ICS protocol port. Cross-reference with approved change requests to filter out legitimate modifications. 2. Statistical Method: For each critical ICS asset and each expected ICS protocol port (e.g., TCP 502, UDP 47808), establish a 7-day moving average baseline of Zeek conn.log traffic volume (e.g., pkts_orig or orig_bytes per minute) for connections involving that specific port. Upon detection of a suspicious firewall rule change (from the first step) affecting a specific port, query Zeek conn.log for the affected asset and port. Calculate the average traffic volume in the 15-minute interval immediately following the rule change. Alert if this average volume drops below the 5th percentile or by more than three standard deviations from the established baseline for that port, indicating a statistically significant and measurable reduction in ICS communication. The percentile and standard deviation should be calculated from the historical baseline distribution. 3. Data Science/Classification: Implement a supervised machine learning classification model (e.g., Random Forest, Gradient Boosting, or Logistic Regression) trained on at least 90 days of historical Windows Event ID 4947/4950/4956 data, labeled as 'Benign' (e.g., scheduled maintenance, approved changes) or 'Suspicious'. Features for the model should include: User Account, Time of Day, Day of Week, Affected Ports (categorized as ICS or non-ICS), Rule Action (Allow/Block), Rule Direction, Rule Name keywords (e.g., 'deny', 'block', 'ICS'), Source IP (if available for remote changes), and correlation with CMDB asset criticality. Deploy the model to classify new firewall rule changes in real-time. Alert on classifications categorized as 'Suspicious', especially if they involve ICS-specific ports or occur outside of predefined maintenance windows, requiring immediate review by an analyst. Provide confidence scores for classifications to aid analyst triage."
          },
          {
            "description": "A critical ICS reporting endpoint (e.g., HMI, Historian) experiences a network denial-of-service (DoS) condition, identified by an abnormal surge in inbound connection attempts (e.g., >10x baseline average over 5 minutes), failed connections (e.g., >80% SYN-FLOOD/connection refused states), or high connection rates from unexpected sources, resulting in a measurable degradation or cessation (e.g., >80% reduction in legitimate traffic) of legitimate ICS protocol communication for a sustained period (e.g., >5 minutes).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek dpd.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network interfaces of HMIs, Historians, and Control Servers; network segments/VLANs dedicated to process control.",
            "action": "1. Statistical Method: For critical ICS endpoints (HMIs, Historians, Control Servers) defined in your asset inventory, establish a 7-day moving average baseline for the hourly count of inbound Zeek conn.log connections (id.resp_p) to known ICS protocol ports. Continuously monitor this metric. Alert if the current hourly connection count to any critical ICS port exceeds the 99.5th percentile of its historical baseline, or if it increases by more than 5 standard deviations within a 15-minute window, particularly if the connections originate from a single or small cluster of previously unseen or unusual source IPs (id.orig_h). Calculate the entropy score of source IPs for connections to the target port; a low entropy score combined with high connection count indicates few unique sources, suggesting a targeted attack. 2. Symbolic Logic/Threshold: When an alert is triggered (from the first step), immediately pivot to Zeek conn.log for the affected critical ICS endpoint and the anomalous time window. Filter for connections to the targeted port and calculate the proportion of connections with conn_state values of 'S0' (SYN sent, no reply), 'REJ' (connection rejected), or 'RSTR' (reset due to connection refused). Alert if this proportion exceeds 75% of the total connections during the anomalous period, strongly indicating failed connection attempts consistent with a DoS. Concurrently, query Zeek conn.log for legitimate ICS protocol traffic (service field matching modbus, dnp3, ethernetip, etc.) from expected sources to the same endpoint. Alert if this legitimate traffic shows a sustained reduction of more than 80% (e.g., compared to the prior 30-minute average) within the same timeframe as the DoS activity. Validate expected sources against a CMDB or network baseline. 3. Data Science/Anomaly Detection: Deploy a real-time unsupervised machine learning anomaly detection model (e.g., Isolation Forest, One-Class SVM, or K-Means for clustering) on Zeek conn.log data, specifically monitoring connection rates (connections per second), source IP entropy, and byte volume to critical ICS endpoints and their common ICS ports. Train the model on at least 30 days of known benign network traffic to learn baseline patterns. Generate an alert when the model detects a significant deviation (e.g., anomaly score above a dynamic threshold derived from historical anomaly scores) from the learned normal connection behavior, indicating an unusual surge or sustained high rate of connections. For anomalous events, cluster the source IPs (id.orig_h) and analyze the top talkers to identify common attack origins and assess if they are internal or external to the PCN, providing a visual representation of the attack surface."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]