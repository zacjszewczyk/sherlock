[
  {
    "information_requirement": "Is the adversary attempting to inhibit response functions by blocking command messages? (TA0107 - Inhibit Response Function)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0803",
        "name": "Block Command Message",
        "evidence": [
          {
            "description": "A control command is recorded as sent from a Human-Machine Interface (HMI) application log (e.g., via Windows Event ID 1000 with specific source/event data) to a Programmable Logic Controller (PLC), but no corresponding outbound network traffic (Zeek conn.log) is observed from the HMI to the PLC, or no response traffic is received from the PLC within an expected timeframe. This non-delivery often coincides with a significant, sustained increase (e.g., exceeding the 99th percentile) in total network traffic volume (bytes/packets per second) on the control network segment, indicative of a potential denial-of-service attack.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 1000"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control Network Zone (between HMIs/SCADA Servers and PLCs/RTUs), HMI/SCADA Server Endpoints",
            "action": "1. **Symbolic Logic:** Query HMI application logs (e.g., Windows Event ID 1000, filtered by source and message content indicating 'command sent' for critical control operations) for successful command transmissions. For each such event, within a 5-second window, search Zeek conn.log for corresponding outbound traffic from the HMI's IP to the target PLC's IP on the relevant ICS protocol port (e.g., TCP 502, 20000, 44818). Alert with high severity if a 'command sent' event has no corresponding `conn.log` entry or no expected response from the PLC. 2. **Statistical Method:** Establish a baseline of bytes and packets per second transmitted on the control network segment, broken down by source-destination pairs relevant to HMI-PLC communications. Continuously monitor for real-time traffic volume. Generate an alert if the total traffic volume for the segment, or for a specific HMI-PLC communication pair, consistently exceeds the 99th percentile of its historical baseline for more than 30 seconds, especially when correlated with an observed command non-delivery. 3. **Machine Learning Application:** Implement a time-series anomaly detection model (e.g., Isolation Forest or ARIMA) on network traffic volume (bytes/packets per second) for critical control network segments. Train the model on historical benign traffic patterns. Trigger a high-confidence alert when the model detects a sustained, statistically significant deviation from the learned baseline, indicating a potential network flood that could block command messages."
          },
          {
            "description": "A new host-based firewall rule is observed on an Engineering Workstation (EWS) or HMI. This rule explicitly denies or blocks outbound network communication to a critical PLC's IP address or subnet over standard ICS protocol ports (e.g., TCP 502 for Modbus, TCP 20000 for DNP3, TCP 44818 for EtherNet/IP), preventing legitimate control commands from being transmitted.",
            "data_sources": [
              "Windows Event ID 4947",
              "Windows Event ID 5157"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Control Servers",
            "action": "1. **Symbolic Logic:** Continuously monitor critical HMI and EWS assets for Windows Event ID 4947 (A change was made to Windows Firewall exception list) or Event ID 4945 (A rule has been added to the Windows Firewall exception list). Immediately alert if the `RuleName` or `Action` field indicates a 'block' or 'deny' action, and the `RemoteAddress` field matches a known critical PLC IP address or subnet, and the `RemotePort` field matches a common ICS protocol port (e.g., 502, 20000, 44818). Cross-reference with a whitelist of approved firewall rules. 2. **Statistical Method:** Baseline the daily frequency of firewall rule modifications (Windows Event ID 4947/4945) on each HMI and EWS. Generate an alert if the number of rule changes on a single host exceeds 3 standard deviations from its 30-day rolling average, or if multiple hosts exhibit an unusual spike in firewall rule changes within a short time frame, indicating a coordinated modification effort. 3. **Machine Learning Application:** Develop a binary classification model (e.g., Logistic Regression or SVM) trained on historical firewall rule changes. Features would include rule parameters (e.g., action, direction, protocol, ports, IPs), user context, and time of day. The model would classify new or modified rules as 'benign' or 'malicious'. Trigger a high-fidelity alert for any rule classified as 'malicious', especially if it targets ICS-specific destinations or ports, and correlate with any observed `Windows Event ID 5157` (Windows Filtering Platform blocked a connection) events for the same destination."
          },
          {
            "description": "An unexpected change in the MAC address associated with a critical PLC's static IP address is detected via network monitoring (e.g., Zeek arp.log), indicating potential ARP spoofing. This change is not correlated with scheduled maintenance or network reconfigurations. Additionally, a high volume of gratuitous ARP messages for the critical PLC's IP from an unknown or anomalous source is observed, suggesting an adversary is attempting to redirect traffic to intercept and drop command messages.",
            "data_sources": [
              "Zeek arp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control Network Switches, Control Network Gateways, Critical PLC Network Interfaces",
            "action": "1. **Symbolic Logic:** Maintain a static mapping (whitelist) of IP-to-MAC addresses for all critical ICS devices (PLCs, RTUs, IEDs). Continuously monitor Zeek `arp.log` for entries where the `id.orig_h` (IP address) matches a critical PLC, but the `mac` field (MAC address) deviates from the established whitelist. Immediately generate a high-severity alert if an unapproved MAC address is observed for a critical PLC's IP. Additionally, alert if gratuitous ARP messages (`opcode: 2` in Zeek `arp.log`) are observed for critical PLC IPs originating from an unapproved or unknown `id.orig_h`. 2. **Statistical Method:** Baseline the normal frequency of ARP requests and replies (Zeek `arp.log`) for each critical PLC IP over a 24-hour period. Calculate the rolling average and standard deviation. Generate an alert if the rate of ARP requests or gratuitous ARPs for a critical PLC's IP address exceeds 3 standard deviations from its 7-day rolling average within a 60-second window, indicating a potential ARP flood or spoofing attempt. 3. **Machine Learning Application:** Implement an unsupervised anomaly detection model (e.g., One-Class SVM or DBSCAN) on the `Zeek arp.log` data, using features such as `id.orig_h`, `mac`, `opcode`, and `id.resp_h`. Train the model on historical benign ARP traffic patterns. The model should identify clusters of anomalous ARP events (e.g., frequent changes in MAC for a static IP, or unusual sources of gratuitous ARPs) that deviate significantly from learned normal behavior, triggering an alert for potential ARP spoofing that could block command messages."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]