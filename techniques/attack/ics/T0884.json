[
  {
    "information_requirement": "Is an adversary using a compromised ICS host as a proxy for Command and Control communications?",
    "tactic_id": "TA0101",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T0884",
        "name": "Connection Proxy",
        "evidence": [
          {
            "description": "A host (e.g., Engineering Workstation, HMI, Jump Server) exhibits a 'fan-out' network pattern where it receives an inbound connection from an IP address not belonging to any defined internal IT or OT network ranges, and subsequently, within 5 minutes, initiates connections to 5 or more distinct internal ICS assets (e.g., PLCs, RTUs, data historians) that it has not communicated with in the preceding 30 days. This pattern represents a significant deviation from the host's established ICS network communication baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156",
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeters between IT and OT zones, IT/OT firewalls, ICS DMZ/Jump Servers, Engineering Workstations, HMIs, Data Historians, and critical control servers (e.g., SCADA servers).",
            "action": "1. Symbolic Logic: Query Zeek conn.log for inbound connections where id.resp_h is an ICS host and id.orig_h is an IP address not within any defined internal IT or OT network ranges. For each such inbound connection, within a 5-minute window, identify all subsequent outbound connections from the same id.resp_h to internal ICS assets (e.g., IP addresses in PLC, RTU, or historian subnets). Count the number of unique internal ICS assets contacted. Compare this list of internal ICS assets against a 30-day historical baseline for the id.resp_h. If the count of unique, historically unobserved internal ICS assets exceeds 5, trigger a high-severity alert. Correlate with Windows Event ID 4688 on the ICS host to identify the process initiating the outbound connections and Windows Event ID 5156 for specific connection details. 2. Statistical Method: For each ICS host, calculate a 30-day rolling average and standard deviation of the daily unique internal destination IP count (unique id.resp_h where id.orig_h is the ICS host and id.resp_h is an internal ICS asset). On a daily basis, calculate the Z-score for the current unique internal destination IP count. Trigger a medium-severity alert if the Z-score exceeds 3.0. Additionally, calculate the 99th percentile of unique internal destination IP counts over the 30-day baseline; if the current day's count exceeds this percentile, investigate. Prioritize alerts where a significant increase in unique destinations is observed immediately following an external inbound connection, as identified in Zeek conn.log, and where Windows Event ID 4688 shows an unusual process initiating connections. 3. Machine Learning: Implement a graph-based anomaly detection algorithm (e.g., Graph Neural Networks or Node2Vec with clustering) on Zeek conn.log data, where nodes are IPs and edges are connections. Train the model on historical ICS network traffic (e.g., 90 days) to learn normal communication patterns and communities within the ICS environment. Deploy the model to continuously analyze live traffic. Flag any ICS host that suddenly becomes a central node connecting to a high number of previously unobserved or rarely observed (e.g., less than 0.1% historical frequency) internal ICS assets, especially when this behavior is preceded by an external inbound connection. The model should output an anomaly score, and alerts should be generated for scores exceeding a learned threshold (e.g., top 1% of historical anomaly scores)."
          },
          {
            "description": "A host (e.g., Jump Server, OT DMZ host) acts as an intermediary, receiving an inbound connection from an IP address not belonging to defined internal IT or OT network ranges and subsequently initiating one or more outbound connections to internal ICS assets (e.g., PLCs, RTUs) within 30 seconds, specifically utilizing ICS-native protocols (e.g., Modbus/TCP on port 502, DNP3 on port 20000, S7 on port 102/TCP, EtherNet/IP on port 44818/TCP).",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "OT DMZ hosts, Jump Servers, SCADA servers, and network segments containing PLCs, RTUs, and other field devices.",
            "action": "1. Symbolic Logic: Monitor Zeek conn.log for inbound connections to designated OT DMZ or Jump Server hosts where id.orig_h is an IP address not within any defined internal IT or OT network ranges. For each such inbound event, immediately query Zeek conn.log for outbound connections from the same id.resp_h (the DMZ/Jump Server) to internal ICS assets within a 30-second window, specifically matching known ICS protocol destination ports (e.g., 502/TCP, 20000/TCP, 102/TCP, 44818/TCP). If a match is found, trigger a critical alert. Additionally, query Windows Event ID 4624 on the DMZ/Jump Server for Logon Type 3 (network logon) or 10 (remote interactive) events within 1 minute prior to the network activity, and Windows Event ID 4688 for the process responsible for the network connections. 2. Statistical Method: For each OT DMZ or Jump Server host, calculate the daily count of unique (external_IP, internal_ICS_IP, ICS_Protocol) triplets observed, where external_IP is the inbound source, internal_ICS_IP is the outbound destination, and ICS_Protocol is derived from the port. Establish a 14-day rolling average and standard deviation for this metric. Alert if the current day's count exceeds the average by 3 standard deviations, or if it falls into the top 99.9th percentile of historical observations, especially if the internal ICS IP is categorized as a high-value asset. This identifies statistically anomalous relaying behavior. 3. Machine Learning: Develop a sequence prediction model (e.g., Hidden Markov Model or Recurrent Neural Network) trained on historical Zeek conn.log data for OT DMZ and Jump Server hosts (e.g., 60 days). The model should learn typical inbound-outbound connection sequences, associated protocols, and timing. Deploy the model to analyze live connection sequences. Alert on sequences that deviate significantly from learned normal patterns, specifically flagging instances where an external inbound connection is immediately followed by an unexpected ICS protocol connection to an internal asset (e.g., a protocol not previously observed in such a sequence or connection to an asset rarely contacted by the DMZ host), indicating a novel or malicious relay with a high anomaly score."
          },
          {
            "description": "A host exhibits network traffic consistent with protocol tunneling, where C2 communications are encapsulated within legitimate protocols (e.g., DNS, HTTP, ICMP). This is evidenced by statistically anomalous data volumes (e.g., high byte counts for DNS queries/responses), unusually long DNS query strings (e.g., >64 characters) or high Shannon entropy (e.g., >4.0 bits/character), non-standard HTTP request methods/user agents, or ICMP packets with unusual data payloads or frequencies, followed by subsequent connections from that same host to other internal ICS assets within a short timeframe (e.g., 60 seconds).",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek icmp.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS servers, hosts with direct or proxied internet access from the OT environment (e.g., Historians, Engineering Workstations), perimeter firewalls/proxies, and network segments where ICMP traffic is prevalent.",
            "action": "1. Symbolic Logic: Create a SIEM rule to flag Zeek dns.log entries where the 'query' field has a length exceeding 64 characters or an entropy score (calculated as Shannon entropy per character) above 4.0 bits/character, or matches known C2 domain generation algorithm (DGA) patterns. For HTTP tunneling, monitor Zeek http.log for non-standard user-agents (e.g., base64 encoded strings), unusual HTTP methods (e.g., CONNECT to non-proxy ports), or 'orig_bytes' for GET requests exceeding the 99th percentile of historical activity. For ICMP tunneling, monitor Zeek icmp.log for unusually large 'uid' field values or 'orig_bytes' values that deviate significantly from standard ICMP packet sizes. Upon detection of any of these, immediately search Zeek conn.log for any new or unusual connections originating from the same 'id.orig_h' to internal ICS assets within 60 seconds. Additionally, query Windows Event ID 4688 on the source host for processes like powershell.exe, cmd.exe, rundll32.exe interacting with network resources around the same time. 2. Statistical Method: For each host, compute a 30-day rolling average and standard deviation for the daily total byte count of DNS queries and responses ('orig_bytes', 'resp_bytes' in dns.log). Alert if a host's daily total DNS bytes exceeds its average by 3 standard deviations, or if it falls into the top 99.9th percentile. Concurrently, calculate the daily average Shannon entropy of DNS 'query' fields and alert if it exceeds the 99.5th percentile of the 30-day baseline. For HTTP, calculate the entropy of 'uri' and 'user_agent' fields in http.log and alert on similar percentile deviations. For ICMP, calculate the 99th percentile of 'orig_bytes' and 'resp_bytes' in icmp.log and alert on values exceeding this threshold. Correlate these anomalous events with subsequent internal connections from Zeek conn.log within a 60-second window. 3. Machine Learning: Train a supervised machine learning classifier (e.g., Random Forest or XGBoost) on Zeek dns.log, http.log, and icmp.log features such as query/URI length, entropy, TLD distribution, presence of numeric/special characters, HTTP method/status codes, ICMP type/code, and packet sizes, labeled as normal or tunneled/DGA. Use a diverse dataset including known C2 samples. Deploy the model to continuously score live DNS, HTTP, and ICMP traffic. When a high-confidence prediction for tunneling (e.g., model score > 0.95) is made for a host, immediately analyze Zeek conn.log for any new or unusual connections from that host to internal ICS assets that follow within 60 seconds, indicative of C2 un-tunneling and proxying. The model should also provide feature importance to aid analyst investigation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]