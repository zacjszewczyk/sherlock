[
  {
    "information_requirement": "Is an adversary using valid accounts to move laterally between ICS assets? (PIR)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0859",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A successful interactive or network authentication event (Windows Event ID 4624, Logon Type 2, 3, or 10) on a critical ICS asset (e.g., HMI, PLC controller, Historian) where the combination of the source IP address (from Zeek conn.log id.orig_h), the destination asset, and the authenticated account (TargetAccountName) does not match a pre-approved, time-bound whitelist derived from change management records or a known-good operational baseline.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), Historian Servers, Active Directory/Authentication servers, Network switches/routers in critical OT segments, IT/OT DMZ gateways, Jump Servers, Safety Instrumented Systems (SIS), Distributed Control Systems (DCS) controllers.",
            "action": "1. Symbolic Logic: Maintain an explicit allow-list of authorized (source_ip, destination_asset, account_name) tuples for successful logins on critical ICS assets. For each successful Windows login (Event ID 4624) on a monitored asset, extract the Source IP, Destination Asset, and TargetAccountName. Join the login event with Zeek conn.log records on the destination asset's IP and timestamp to confirm the external source IP (id.orig_h). Generate a high-severity alert if the observed (id.orig_h, DestinationAsset, TargetAccount) tuple does not exist in the predefined allow-list. 2. Statistical Method: For each (Destination_Asset, TargetAccount) pair from Windows Event ID 4624, establish a historical baseline of all source IP addresses (from Zeek conn.log) seen over the past 90 days. Calculate the entropy and frequency of each source IP for that pair. Generate a medium-severity alert for a successful login where the source IP is new for that specific pair, or where its historical frequency for that pair is below the 1st percentile of observed source IPs, indicating a statistically rare access path. 3. Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on labeled historical login data. Engineer features from Windows Event ID 4624 and Zeek conn.log, including: Source_IP_Subnet (categorical), Destination_Asset_Role (e.g., HMI, EWS), TargetAccount_Privilege_Level (e.g., user, admin), Time_of_Day, Day_of_Week, and historical login frequency for the Source-Destination-Account triplet. Score new login events for anomaly likelihood and generate a high-priority alert for events exceeding a model-tuned anomaly score threshold (e.g., > 0.85)."
          },
          {
            "description": "Observed network connections using administrative protocols (e.g., RDP, SSH, SMB, WinRM) to or between critical ICS assets (e.g., HMIs, EWS, Historian Servers) where the (Source_IP, Destination_IP, User_Account, Protocol) tuple is not on an authorized access matrix or exhibits statistically significant deviations in frequency or data volume compared to its historical baseline.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network switches and routers in critical OT segments, Firewalls at network boundaries (e.g., IT/OT DMZ), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Jump Servers, Remote Access Gateways, Historian Servers, Process Control Networks (PCN) assets, Data Diodes.",
            "action": "1. Symbolic Logic: Maintain a strict 'ICS Administrative Access Control Matrix' defining authorized (Source_Asset_Role, Destination_Asset_Role, User_Group, Protocol) connections. Filter Zeek conn.log for connections where `service` is 'rdp', 'winrm', 'ssh', or 'smb' and `id.resp_h` is a critical ICS asset. Correlate with Windows Event ID 4624 on the destination host to identify the `TargetAccountName`. Generate a critical alert for any connection that violates the predefined access matrix. 2. Statistical Method: For each unique (Source_IP, Destination_IP, Protocol) tuple involving administrative protocols, create a time-series baseline of connection counts and total bytes transferred (`orig_bytes` + `resp_bytes` from Zeek conn.log) aggregated hourly over the past 90 days. Calculate the 7-day rolling average and standard deviation for both metrics. Generate a high-priority alert if the current hourly count or data volume for a tuple exceeds 4 standard deviations above its rolling average. 3. Machine Learning: Employ an unsupervised time-series anomaly detection model (e.g., Prophet) on the hourly volume and byte counts of administrative protocol traffic between critical ICS host segments. Train the model on at least 90 days of historical data, incorporating seasonality and known maintenance windows as regressors. Flag and alert on significant deviations where observed traffic falls outside the model's 99% prediction interval."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has an adversary created or compromised a valid account for persistent access to the ICS environment? (PIR)",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0859",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "The creation of a new local or domain user account (Windows Event ID 4720) on a critical ICS asset, immediately followed by the account being added to a privileged group (Windows Event ID 4732, 4728, or 4756) within a short time window (e.g., 5 minutes), especially when the action occurs outside of standard maintenance periods or is not logged in a change management system.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4732",
              "Windows Event ID 4728",
              "Windows Event ID 4756"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory/LDAP servers, Local security logs on EWS/HMIs/Historian Servers, Configuration management systems for PLCs/RTUs (if applicable), Patch Management/Change Management systems, Jump Servers.",
            "action": "1. Symbolic Logic: Generate a medium-severity alert for any Windows Event ID 4720 on a critical ICS asset. Escalate the alert to critical severity if, within 5 minutes, a corresponding Event ID 4732, 4728, or 4756 is logged for the same `TargetUserName`, indicating elevation to a privileged group. Cross-reference the event timestamp with the change management system; if no corresponding authorized change is found, treat as a confirmed incident. 2. Statistical Method: For all new account creations (Event ID 4720), calculate the Levenshtein distance between the new `TargetUserName` and all existing privileged account names; alert if the distance is 1 or 2. Separately, baseline the normal frequency of account creations per day; alert if the count in a 24-hour period exceeds the 99.5th percentile of the 180-day historical distribution. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost) on historical Event ID 4720 data, labeled as 'authorized' or 'unauthorized'. Engineer features including: `TargetUserName` entropy and length, similarity to existing privileged accounts, `CreatorProcessName`, time of day, and a binary feature for a privileged group addition within 5 minutes. Deploy the model to score new creations, alerting on events with a predicted 'unauthorized' probability above 0.90."
          },
          {
            "description": "A successful authentication event (Windows Event ID 4624) by a privileged OT user account to a critical ICS asset where the source IP address (from Zeek conn.log id.orig_h) is unauthorized, or the login type (e.g., Interactive, RemoteInteractive) or protocol used for the connection is anomalous for that specific user-to-asset context, even if the source IP is permitted.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Jump servers, Firewalls (IT/OT boundary), Active Directory/Authentication servers, Network switches/routers in critical OT segments, Endpoint devices (EWS, HMIs, Historian Servers), Remote Access Gateways.",
            "action": "1. Symbolic Logic: Maintain a strict allow-list of (Source_IP_Range, Destination_Asset, User_Account, Permitted_Login_Type). For each successful login (Event ID 4624), enrich with source IP from Zeek conn.log. Generate a critical alert if the observed (Source_IP, Destination_Asset, User_Account, Logon_Type) tuple violates the allow-list. Additionally, enrich with geo-location data and alert if the login originates from a country never before observed for that user. 2. Statistical Method: For each privileged OT user, establish a baseline of typical source IP subnets, login times, login types, and destination assets. Calculate a multi-factor deviation score for each new login: Source IP not seen in 90 days (+3 points), login time outside user's typical hours (+2 points), login type is anomalous for user (+2 points). Generate a high-priority alert when the cumulative score for a single login event exceeds 4. 3. Machine Learning: Deploy an unsupervised anomaly detection model (e.g., Isolation Forest) on a feature set from privileged logins. Key features should include: Source_IP_Subnet (one-hot encoded), User_Account (one-hot encoded), Destination_Asset_Role (one-hot encoded), Protocol, and Logon_Type (categorical). Train the model on 180 days of data. Flag login events with an anomaly score in the top 0.1% percentile as high-priority, triggering automated playbook enrichment for immediate analyst review."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]