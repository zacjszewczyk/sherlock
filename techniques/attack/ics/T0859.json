[
  {
    "information_requirement": "Is an adversary using valid accounts to move laterally between ICS assets? (PIR)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0859",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "Successful authentication (Windows Event ID 4624) by a service or operator account to a critical ICS host (e.g., HMI, PLC, Historian, EWS) where the source IP address (from Zeek conn.log) is associated with an unauthorized or atypical originating host within the OT network for that specific account and destination pair.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), Historian Servers, Domain Controllers, and any critical asset within the OT network.",
            "action": "1. **Symbolic Logic:** Create an allow-list of authorized `(Source_IP, Destination_IP, User_Account)` tuples for successful logins (Windows Event ID 4624, Zeek conn.log source/destination IP). Generate an alert for any successful login event that does not match an entry on the allow-list. 2. **Statistical Method:** For each `(Destination_IP, User_Account)` pair, calculate the historical frequency of unique `Source_IP` addresses observed over the last 90 days. Flag any login where the `Source_IP` is observed for the first time for that specific `(Destination_IP, User_Account)` pair, or where the `Source_IP` falls below the 1st percentile of observed frequency for that pair. 3. **Machine Learning:** Develop a supervised machine learning model (e.g., Random Forest or SVM) trained on historical `(Source_IP, Destination_IP, User_Account, Login_Time)` data to classify login events as 'normal' or 'anomalous'. Retrain the model weekly with new baseline data. Prioritize review for events classified as 'anomalous'."
          },
          {
            "description": "Detection of network connections (Zeek conn.log) using administrative protocols (e.g., RDP on port 3389, WinRM on ports 5985/5986) between critical ICS hosts (e.g., HMI, EWS, PLC programming port) by a user account (correlated from Windows Event ID 4624) that is not authorized or typically performs such actions based on established operational roles and network segmentation policies.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments encompassing HMIs, EWS, PLCs, RTUs, Historian Servers; any OT DMZ; and internal OT network backbone switches/routers.",
            "action": "1. **Symbolic Logic:** Identify all Zeek conn.log entries where `service` is 'rdp' or 'winrm' and the `id.resp_p` is 3389, 5985, or 5986, with both `id.orig_h` and `id.resp_h` belonging to ICS assets. Compare the `id.orig_h` and `id.resp_h` with a predefined 'approved administrative access matrix' for ICS assets. Alert on any connection that violates this matrix. 2. **Statistical Method:** For each `(Source_IP, Destination_IP, User_Account)` pair, calculate the historical average daily count of RDP/WinRM sessions over the last 60 days. Generate an alert if the current daily count exceeds a threshold (e.g., 3 standard deviations above the mean) or if the count represents a new maximum for that pair, indicating a statistical anomaly. 3. **Machine Learning:** Implement a time-series anomaly detection model (e.g., Isolation Forest or LSTM autoencoder) on the volume and frequency of RDP/WinRM connections between ICS hosts, segmented by `(Source_IP, Destination_IP)`. Train the model on 90 days of baseline data. Alert on significant deviations from the predicted normal patterns, indicating unusual administrative activity."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has an adversary created or compromised a valid account for persistent access to the ICS environment? (PIR)",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0859",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "Successful creation of a new user account (Windows Event ID 4720) on a critical ICS asset (e.g., Engineering Workstation, HMI, Domain Controller, Historian Server) or a local machine account on a PLC, occurring outside of predefined maintenance windows or lacking a corresponding, approved change management ticket.",
            "data_sources": [
              "Windows Event ID 4720"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Domain Controllers serving the OT environment, Historian Servers, and critical server infrastructure within the OT network.",
            "action": "1. **Symbolic Logic:** Immediately alert on any Windows Event ID 4720 (User Account Created) on critical ICS assets. Perform an automatic lookup of the `TargetAccountName` against a blacklist of known suspicious or default account names (e.g., 'admin1', 'testuser', 'backup_svc'). Additionally, check for account names that are highly similar (e.g., Levenshtein distance < 2) to existing legitimate accounts. 2. **Statistical Method:** Establish a baseline for the normal frequency of user account creations (Windows Event ID 4720) on critical ICS assets, calculating the average and standard deviation over the last 180 days. Generate an alert if the number of new accounts created within a 24-hour period exceeds 3 standard deviations above the mean, or if it represents a statistically significant deviation (e.g., using a Z-score calculation). 3. **Machine Learning:** Train a supervised classification model (e.g., Naive Bayes or Logistic Regression) on historical account creation events, using features such as `TargetAccountName` characteristics (length, presence of numbers/special chars), `CreatorProcessName`, and `CreationTime`. Label known legitimate creations as 'normal' and suspicious ones as 'anomalous'. Use the model to score new account creations and prioritize high-score anomalies for investigation."
          },
          {
            "description": "Successful authentication (Windows Event ID 4624) by an OT-privileged user account to an ICS asset where the originating network connection (Zeek conn.log source IP) is outside of the authorized external access ranges (e.g., VPN IP pools, jump server subnets) or originates from a known IT network segment without passing through the designated OT DMZ or secure gateway.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "OT DMZ gateways, Firewall logs at the IT/OT boundary, VPN concentrators, Jump servers, Authentication servers (e.g., Active Directory, RADIUS) for the OT environment, and critical ICS hosts themselves.",
            "action": "1. **Symbolic Logic:** Correlate successful login events (Windows Event ID 4624) on ICS assets with the source IP addresses from Zeek conn.log. Compare the source IP address against a strict allow-list of known, authorized remote access IP ranges (e.g., VPN subnets, jump server IPs). Generate a critical alert for any successful login originating from an IP address not present on this allow-list. 2. **Statistical Method:** For each OT-privileged user account, establish a baseline of typical login source IP addresses, geographic locations, and times of day over the last 90 days. Calculate a deviation score based on a multi-factor comparison (e.g., new source IP for the user, login from a rare country, login outside of normal working hours). Alert when the cumulative deviation score for a login event exceeds a predefined percentile (e.g., 99th percentile) of historical scores, indicating a statistically anomalous access attempt. 3. **Machine Learning:** Deploy an unsupervised machine learning model (e.g., K-Means clustering or Isolation Forest) on a feature set derived from successful login events, including `Source_IP` (geohash), `User_Account`, `Destination_IP`, `Time_of_Day`, and `Day_of_Week`. Train the model on historical login data to identify clusters of normal behavior. Flag login events that fall outside these established clusters as anomalies, indicating potentially compromised credentials or unauthorized access."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]