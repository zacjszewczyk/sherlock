[
  {
    "information_requirement": "Is an adversary exploiting vulnerabilities to escalate privileges on critical ICS assets like Engineering Workstations or HMIs? (PIR)",
    "tactic_id": "TA0111",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T0890",
        "name": "Exploitation for Privilege Escalation",
        "evidence": [
          {
            "description": "A child process with an executable name from a predefined list of known malicious/anomalous binaries (e.g., `cmd.exe`, `powershell.exe`, `pwsh.exe`, `whoami.exe`, `net.exe`, `sc.exe`, `psexec.exe`, `mimikatz.exe`) is observed to be spawned by a parent process identified as a critical ICS application (e.g., `HistorianService.exe`, `HMIServer.exe`, `SCADAManager.exe`) with SYSTEM or Administrator privileges.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), and Historian Servers within the Process Control Network (PCN).",
            "action": "1. **Symbolic Logic:** Identify Windows Event ID 4688 records where `New Process Name` matches a known malicious executable (e.g., `cmd.exe`, `powershell.exe`, `pwsh.exe`, `whoami.exe`, `net.exe`) AND `Parent Process Name` is an executable associated with a whitelisted critical ICS application (e.g., `HistorianService.exe`, `HMIServer.exe`, `SCADAManager.exe`) AND `Parent Process Integrity Level` is 'System' or 'High'. Alert on any matches. 2. **Statistical Method:** For each unique `Parent Process Name` from critical ICS applications, calculate the frequency distribution of its `New Process Name` children over the last 30 days. Flag any `New Process Name` that falls below the 1st percentile of observed frequency for that specific parent, or any `New Process Name` not observed in the last 90 days. 3. **Machine Learning:** Apply a one-class SVM or Isolation Forest model trained on historical `Parent Process Name` and `New Process Name` pairs for critical ICS applications to detect anomalous process creation events. Alert when the model identifies a new process spawn as an outlier, indicating a deviation from established normal behavior patterns."
          },
          {
            "description": "A new Windows service is created (Windows Event ID 4697) on a critical ICS asset where the `Service Name` or `Service File Name` does not match an approved allowlist, or the `Service File Name` path points to a non-standard or user-writable directory (e.g., `C:\\Temp\\`, `C:\\Users\\Public\\`, `C:\\Windows\\Tasks\\`).",
            "data_sources": [
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), HMIs, and Domain Controllers within the Process Control Network (PCN).",
            "action": "1. **Symbolic Logic:** Identify Windows Event ID 4697 records where the `Service Name` or `Service File Name` is NOT present in an established allowlist of legitimate services for the specific host, OR the `Service File Name` contains a path segment from a predefined list of suspicious directories (e.g., `C:\\Temp\\`, `C:\\Users\\Public\\`, `C:\\ProgramData\\`, `C:\\Windows\\Temp\\`). Alert on any matches. 2. **Statistical Method:** For each new service creation (Event ID 4697), calculate the Shannon entropy of the `Service File Name` string. Flag services where the entropy score exceeds the 95th percentile of historical entropy scores for legitimate service executables, indicating potential obfuscation or random naming. 3. **Machine Learning:** Train a binary classifier (e.g., Logistic Regression, Random Forest) using features extracted from `Service Name`, `Service File Name` (path, filename, extension), `Service Type`, and `Service Start Type` from historical Event ID 4697 data. Label known legitimate services as 'benign' and known malicious/anomalous services as 'malicious'. Use the trained model to predict the likelihood of new service creations being malicious, alerting on high probability scores."
          },
          {
            "description": "A network connection (Zeek `conn.log`) originating from a critical ICS asset (EWS, HMI) to an external IP address or domain not previously observed in the last 90 days, or a `http.log` or `smb.log` entry indicating a file transfer of an executable (`.exe`, `.dll`, `.ps1`) to the ICS asset, occurs within 60 seconds prior to a host-based privilege escalation event (e.g., anomalous process creation, new service installation).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek smb.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments connecting EWS, HMIs, and servers within the PCN; network gateways between the PCN and corporate IT network.",
            "action": "1. **Symbolic Logic:** Correlate Zeek `conn.log` entries where `id.orig_h` is an ICS asset and `id.resp_h` is an external IP, with `files.log` entries showing `mime_type` indicating an executable (`application/x-msdownload`, `application/octet-stream`) or `extracted_filename` ending in `.exe`, `.dll`, `.ps1`. Specifically look for these network events occurring within 60 seconds *before* a Windows Event ID 4688 (anomalous process) or 4697 (new service) from the same ICS asset. Alert on any such correlated events. 2. **Statistical Method:** For each ICS asset, establish a baseline of unique destination IP addresses and ports (`id.resp_h`, `id.resp_p`) observed in Zeek `conn.log` over the last 90 days. Calculate the statistical rarity (e.g., inverse frequency) of new `(id.resp_h, id.resp_p)` pairs. Flag connections with a rarity score exceeding the 99th percentile, especially if `orig_bytes` or `resp_bytes` are in the top 95th percentile for that asset, indicating a large, unusual data transfer. 3. **Machine Learning:** Implement a time-series anomaly detection model (e.g., ARIMA, LSTM) on the volume and type of network connections (e.g., `proto`, `service`) from critical ICS assets (Zeek `conn.log`). Train the model on historical network activity. Alert when the model detects significant, sustained deviations in network traffic patterns, especially when correlated with host-based alerts, indicating potential C2 or data exfiltration associated with privilege escalation."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]