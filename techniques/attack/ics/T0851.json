[
  {
    "information_requirement": "Is an adversary using a rootkit to hide their presence on ICS assets? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0851",
        "name": "Rootkit",
        "evidence": [
          {
            "description": "A measurable discrepancy where outbound network connections reported by network sensors (Zeek conn.log) from a critical ICS asset lack a corresponding network event on the host itself (Sysmon Event ID 3, Windows Event ID 5156) or an initiating process (Windows Event ID 4688) within a tight time window (e.g., 5 seconds). This lack of host-level attribution for network traffic is a strong indicator of a rootkit manipulating the OS kernel to hide its activity.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS network security monitoring points (e.g., SPAN ports on switches in Level 2/3), firewalls segmenting OT zones, and logs from critical endpoints such as Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian servers, and OT Domain Controllers.",
            "action": [
              "For each outbound Zeek conn.log entry, join on (timestamp, source IP, source port, dest IP, dest port) against Sysmon Event ID 3 and Windows Event ID 5156 from the source IP within a 5-second window. If no match is found, flag the connection as 'unattributed'. Immediately alert if an 'unattributed' connection's destination is a known malicious IP from a threat intelligence feed or an external IP not on an established egress whitelist.",
              "For each critical host, profile the hourly count of 'unattributed' connections over a 30-day baseline. Alert if the current hourly count exceeds three standard deviations above the baseline mean. Concurrently, calculate the ratio of unattributed bytes sent to total bytes sent per hour. Alert if this ratio suddenly increases by more than 50% over its 7-day moving average, indicating a potential shift to covert exfiltration.",
              "Train and deploy a supervised classification model (e.g., XGBoost, Random Forest) on a labeled dataset of network flows. Use features like: protocol, destination port, duration, orig_bytes, resp_bytes, Zeek conn_state, a binary feature for is_unattributed (from the symbolic logic), destination IP geolocation (is_internal, is_external), and destination ASN. The model will provide a real-time risk score for each flow, alerting on those classified as 'unattributed-suspicious' with high confidence."
            ]
          },
          {
            "description": "A new Windows service is created (Windows Event ID 7045) or modified (Windows Event ID 7040) on an ICS asset, and its configuration exhibits multiple suspicious traits. These include: an executable path in a non-standard directory (e.g., C:\\Users\\, C:\\Temp\\), a service binary that is unsigned or has an invalid signature (Sysmon Event ID 1), a service name or description with high-entropy (random) characters, or a configuration that deviates from established secure baselines for that asset type.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 7040",
              "Sysmon Event ID 1",
              "Windows Registry HKLM\\SYSTEM\\CurrentControlSet\\Services\\"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Domain Controllers in the OT network, Historian Servers, SCADA Servers, OPC Servers, HMI Servers, Remote Terminal Units (RTUs) with Windows OS, Programmable Logic Controllers (PLCs) with embedded Windows OS.",
            "action": [
              "Query for all new service creations (Event ID 7045). For each, check the 'ImagePath' field. Alert if the path is not in an approved directory (e.g., not in C:\\Windows\\system32 or C:\\Program Files\\). Additionally, check the 'ServiceName' against a blocklist of known malware service names. Cross-reference with Sysmon Event ID 1 for the same process to check if the 'Signed' field is 'false' and alert.",
              "For each new service creation (Event ID 7045), calculate the Shannon entropy of the 'ServiceName' and the filename in the 'ImagePath'. Compare these scores to the 95th percentile of entropy scores from a 90-day baseline of legitimate service creations on similar assets. Alert if either score exceeds this threshold. Separately, track the daily count of service modifications (Event ID 7040) per host and alert if the count exceeds the 99th percentile of its historical daily counts.",
              "Develop and deploy an unsupervised anomaly detection model (e.g., Isolation Forest) trained on features from legitimate service creation events (Event ID 7045). Key features include: service name length and entropy, image path depth and entropy, the user account that created the service, the service start type, and a binary feature indicating if the image path is in a user-writable directory. Use the trained model to score all new services in real-time, alerting on any flagged as strong outliers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary using a rootkit to inhibit the response function of an ICS device? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0851",
        "name": "Rootkit",
        "evidence": [
          {
            "description": "A sustained, anomalous increase in failed or incomplete TCP connection states (e.g., 'REJ', 'RSTO', 'S1') in Zeek conn.log for traffic on critical ICS protocol ports (e.g., Modbus/502, S7/102, EtherNet/IP/44818) between supervisory control systems and field devices. This pattern, especially when unidirectional, indicates potential network stack manipulation by a rootkit to selectively drop or reject legitimate control commands or status updates.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments connecting Level 2 (Supervisory Control) and Level 1 (Basic Control) devices, DMZ between IT and OT networks, Process Control Networks (PCN), Industrial Demilitarized Zones (IDMZ), Field Device Networks.",
            "action": [
              "Create a rule that monitors Zeek conn.log for traffic on ports 502, 102, 44818, 20000, 47808. Alert if a unique source-destination pair between an HMI/Server and a PLC/RTU generates more than 10 connections with a conn_state of 'REJ', 'RSTO', or 'S1' within a 60-second window. Escalate the alert priority if orig_bytes > 0 and resp_bytes = 0, indicating a one-way communication attempt was blocked or ignored.",
              "For each critical (HMI <-> PLC) communication pair, establish a 30-day baseline of the distribution of conn_state values within 5-minute intervals. Calculate the Shannon entropy of this distribution for each interval. A stable connection will have very low entropy (dominated by 'SF' - Session Finished). Alert if the entropy for a new interval exceeds three standard deviations from the baseline mean, signifying an abnormal and unstable mix of connection states.",
              "Implement a time-series anomaly detection model, such as an LSTM-based autoencoder, for key HMI-to-PLC communication channels. Feed the model sequences of feature vectors aggregated over 1-minute windows. Features should include: counts of each connection state ('SF', 'REJ', 'S0', etc.), total bytes, total packets, and the average connection duration. The model learns the normal communication 'rhythm'. Alert when the model's reconstruction error for live traffic exceeds a predefined threshold, indicating a significant deviation from the learned normal pattern."
            ]
          },
          {
            "description": "Repeated application crashes (Windows Event ID 1000) of a critical process (e.g., HMI or SCADA software) on an operator workstation, where the crash correlates in time (within 10 seconds) with network traffic to or from a field device (PLC/RTU) on an ICS protocol port, as observed in Zeek conn.log. A faulting module pointing to a low-level system driver (e.g., tcpip.sys, afd.sys) strengthens this evidence, suggesting a rootkit is interfering with I/O operations, causing instability.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Operator Workstations, SCADA Engineering Workstations, Process Control Workstations, Remote Access Jump Hosts for OT.",
            "action": [
              "Create a correlation rule: upon detection of a Windows Event ID 1000 for a whitelisted critical process (e.g., 'HMI_App.exe'), check if the 'FaultingModuleName' is a known system driver. If so, immediately query Zeek conn.log for any traffic involving the host's IP on an ICS port within a +/- 10-second window of the crash timestamp. If a correlation is found, generate a critical alert detailing the crashing application, faulting module, and the communicating field device.",
              "For each critical HMI/SCADA application, build a historical frequency distribution of 'ExceptionCode' values from all Event ID 1000 logs over the past 90 days. When a new crash event occurs, alert if its 'ExceptionCode' falls into the bottom 5th percentile of frequency (i.e., is historically rare). Increase the alert's severity if the rare crash is also correlated with ICS network traffic, as per the symbolic logic.",
              "Train an unsupervised anomaly detection model (e.g., One-Class SVM or Isolation Forest) on features extracted from historical crash events (Event ID 1000) that are deemed 'benign' (e.g., known bugs). Features should include: a one-hot encoded 'ExceptionCode', a categorical hash of the 'FaultingModuleName', and, if correlated, features from the associated Zeek log (protocol, port, byte counts). Deploy the model to score new crash events; alert on any event flagged as an anomaly, as it represents a deviation from known, normal failure modes."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]