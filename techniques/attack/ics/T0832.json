[
  {
    "information_requirement": "Has an adversary manipulated the operator's view of the industrial process? (TA0105 - Impact)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0831",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Detection of network-level anomalies indicative of a Man-in-the-Middle (MitM) attack precursor, such as the observation of duplicate MAC addresses on a single network segment, gratuitous ARP requests not associated with a documented device reboot, or any change in the IP-to-MAC address mapping for a critical ICS asset (e.g., PLC, HMI, RTU) that does not correspond to a documented maintenance activity.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process control network segments connecting PLCs, HMIs, and other critical control system devices within the Operational Technology (OT) network.",
            "action": [
              "Query Zeek `arp.log` and `conn.log` to build a real-time IP-to-MAC mapping. Compare this against a maintained static whitelist of known IP-to-MAC address pairs for critical assets. Generate an alert if `orig_l2_addr` or `resp_l2_addr` in `conn.log`, or any mapping in `arp.log`, contradicts the whitelist for a critical `id.orig_h` or `id.resp_h`. Additionally, monitor `notice.log` for `ARP::Spoofing` or `ARP::Duplicate_IP_Detected` notices and escalate them for investigation.",
              "For each critical IP address, establish a baseline count of associated MAC addresses observed in a 24-hour window, which should normally be 1. Using a sliding 5-minute window, query Zeek `conn.log` and `arp.log` to count distinct MAC addresses associated with each critical IP. Generate an alert if the count exceeds 1, as this is a statistically significant anomaly indicating a potential spoofing event.",
              "Model the OT network's Layer 2 and Layer 3 topology as a graph, where nodes represent IP and MAC addresses and edges represent observed communications from `Zeek conn.log` and `arp.log`. Train a graph neural network (GNN) on historical data to learn the normal network structure. Deploy the model to detect structural anomalies in real-time, such as the formation of a new edge connecting a critical asset's IP to a previously unknown MAC address, which indicates a probable MitM attack."
            ]
          },
          {
            "description": "Detection of an ICS protocol message (e.g., Modbus, DNP3, S7comm) that reports process state information but originates from an unauthorized source IP, is not correlated with a legitimate request from an HMI or historian, or contains process values that are physically inconsistent with the last known state reported by the legitimate PLC.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network gateways between control zones, and network taps monitoring traffic to and from HMIs and Historian servers.",
            "action": [
              "Implement stateful protocol analysis. For PLC response messages (e.g., `is_response=true` in Zeek logs), cache the transaction identifier (e.g., `trans_id` in `modbus.log`). Generate an alert if a response is observed without a corresponding request from a whitelisted HMI or historian IP within a defined timeout period. Additionally, alert if any process state reporting message originates from an IP address not on the pre-approved list of PLCs for that network segment.",
              "For each critical process tag, maintain a time-series of its reported values. When a new value is reported by a PLC, calculate its deviation from the historical rate of change for that tag. Generate an alert if the new value represents a change greater than 3 standard deviations from the established rate of change, especially if no corresponding control action (e.g., a write command) was recently logged for that tag.",
              "Train a sequence model, such as an LSTM or Transformer, on the normal sequences of ICS protocol transactions (request-response pairs) between specific HMIs and PLCs. Use features from Zeek logs like source/destination IP, protocol function code, and inter-transaction timing. Deploy the model to flag any transaction as anomalous if it breaks the learned sequence, such as a PLC response appearing without a preceding HMI request, indicating a potential spoofed message."
            ]
          }
        ]
      },
      {
        "technique_id": "T0867",
        "name": "Use of Legitimate Operational Protocol",
        "evidence": [
          {
            "description": "Detection of ICS protocol write commands (e.g., Modbus Function Codes 0x05, 0x06, 0x15, 0x10) that either originate from an unauthorized source IP, occur at a statistically unusual frequency, or attempt to set a process variable to a value outside of its pre-defined safe engineering limits.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network interfaces of PLCs and other field controllers, particularly on segments accessible by engineering workstations and HMIs.",
            "action": [
              "Create and enforce a rule that generates an alert whenever an ICS write command (e.g., `function_code` IN [5, 6, 15, 16] in `zeek.modbus.log`) is detected where the source IP (`id.orig_h`) is not on a pre-approved list of authorized HMIs and engineering workstations for the target PLC (`id.resp_h`). For each write command, also validate the written `value` against a lookup table of safe engineering limits for the specific register address and alert if the value is out of bounds.",
              "For each authorized HMI-to-PLC communication pair, profile the hourly count of write commands from a 30-day baseline of Zeek ICS logs and calculate the 99th percentile. Generate an alert if the write command count in any given hour exceeds this threshold. Separately, for each process register, alert if a write command attempts to set a `value` that falls more than 4 standard deviations from the historical distribution of values for that register.",
              "Train a classification model (e.g., Random Forest or Gradient Boosting) using labeled historical data from ICS protocol logs. Features should include `id.orig_h`, `id.resp_h`, `function_code`, `value`, `hour_of_day`, and `day_of_week`. Use the trained model to classify new write commands in near real-time as either 'benign' or 'suspicious', flagging the latter for analyst review."
            ]
          }
        ]
      },
      {
        "technique_id": "T0848",
        "name": "Modify Program",
        "evidence": [
          {
            "description": "Detection of a file write, creation, or deletion event on a file within a critical HMI application or project directory (e.g., C:\\Wonderware\\, C:\\Program Files\\Rockwell Software\\) where the event originates from a process not on a pre-approved whitelist, such as a standard HMI editor, vendor patch utility, or approved administrative script.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of HMI application servers, engineering workstations, and historian servers, specifically monitoring application directories and configuration folders.",
            "action": [
              "Implement file integrity monitoring. Create a whitelist of approved process executable paths, hashes (calculated from `NewProcessName` in Event ID 4688), and user accounts (`SubjectUserSid` from Event ID 4663) authorized to modify HMI project files. Monitor `Windows Event ID 4663` (File Write) and alert if a file in a monitored HMI directory is modified by a `ProcessName` or `SubjectUserSid` not on the whitelist.",
              "For processes that perform file modifications in HMI directories (correlate `ProcessId` between Event ID 4688 and 4663), calculate the Shannon entropy of the `ProcessName` field over a 24-hour sliding window. Establish a 30-day baseline to find the 95th percentile of this entropy score. An alert should be triggered if the entropy score spikes above this threshold, indicating an abnormal variety of processes are modifying sensitive files.",
              "Train a sequence analysis model (e.g., a Hidden Markov Model) on the normal sequences of process execution chains on HMI hosts, using `ProcessName` and `ParentProcessName` from `Windows Event ID 4688`. An anomalous sequence, such as `services.exe` spawning `cmd.exe` which then spawns `powershell.exe` to modify an HMI project file (detected via `Event ID 4663`), would be flagged by the model as a high-risk deviation from baselined normal behavior."
            ]
          }
        ]
      },
      {
        "technique_id": "T0832",
        "name": "Manipulation of View",
        "evidence": [
          {
            "description": "A persistent and measurable discrepancy between a process variable's value as read directly from a PLC's network response (e.g., via `zeek.modbus.log`) and the value for the same variable and timestamp recorded by a data historian or displayed on an HMI (inferred from network traffic to those systems). A discrepancy is defined as >2% for analog values or any mismatch for discrete/boolean values.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "HMI servers, Historian servers, and network segments connecting PLCs to HMIs and Historians, focusing on data gateways and visualization platforms.",
            "action": [
              "For critical process tags, perform cross-source validation. Ingest and correlate ICS read responses from PLC IPs (`is_response`=true in Zeek logs) with data sent from HMI/gateway IPs to historian IPs for the same process tag. Account for network latency and use a small time window (e.g., 5 seconds) for correlation. Generate an alert if the values differ by more than a pre-defined engineering threshold (e.g., 2% for analog, any non-match for discrete).",
              "For each critical process tag, create two synchronized time series: (1) the value reported by the PLC (from Zeek logs of PLC responses) and (2) the value recorded by the historian (from HMI/gateway traffic). Calculate a rolling 10-minute Pearson cross-correlation coefficient between these two series. Generate an alert if the correlation coefficient drops below a threshold (e.g., 0.9) for a sustained period (e.g., >5 minutes), indicating a significant divergence between the physical process and the recorded view.",
              "Train a multivariate autoencoder on synchronized time-series data from multiple sources. The input feature vector for each timestamp should include: `[PLC_reported_value, HMI_displayed_value, Historian_recorded_value, associated_control_output_value]`. The model learns the normal, highly correlated state between these values. A high reconstruction error on new data indicates a statistical anomaly and a likely divergence between sources, triggering an alert for a potential view manipulation attack."
            ]
          },
          {
            "description": "Unauthorized modification of HMI graphical configuration or project files (e.g., files with extensions like `.gfx`, `.pvi`, `.xml`, `.ini`), evidenced by a file write (`Windows Event ID 4663`) originating from a process (`ProcessName` from `Windows Event ID 4688`) not on a pre-approved whitelist of HMI development or deployment software.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on HMI servers and engineering workstations, specifically directories containing HMI screen and logic configuration files.",
            "action": [
              "Maintain a strict whitelist of `ProcessName` and `ProcessHash` values for all authorized HMI editing and deployment software. Create a detection rule to monitor `Windows Event ID 4663` for write access (`AccessMask` contains `WRITE_DATA`) to files with HMI-specific extensions (`.gfx`, `.pvi`, `.xml`, etc.) in known project directories. Correlate with the parent process via `ProcessId` to `Windows Event ID 4688` and generate an alert if the `ProcessName` or `ProcessHash` is not on the whitelist.",
              "For all HMI configuration files, establish a 30-day baseline of modification frequency (`Event ID 4663` count) per user, per host, and per process. Generate an alert if the modification count for any single file by a single user or process in a 24-hour period exceeds the 99th percentile of its own historical behavior. This indicates unusually frequent editing activity that could be part of an attack.",
              "Deploy a User and Entity Behavior Analytics (UEBA) model that learns a baseline of normal file modification activity for each user and system process on HMI servers. The model should profile features such as files/paths accessed, frequency, time of day, day of week, and the originating process name and parent process. The model should flag any significant deviation from this baseline, such as an administrator account modifying HMI display files via a script (`powershell.exe`) outside of business hours, instead of using the standard HMI editor (`HMI_Editor.exe`) during the workday."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]