[
  {
    "information_requirement": "Is the adversary attempting to blind operators to the state of the industrial process by causing a Loss of View? (TA0105 - Impact) (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0829",
        "name": "Loss of View",
        "evidence": [
          {
            "description": "Detection of unexpected and sustained termination, error, or hang events for critical HMI application processes (e.g., `view.exe`, `iFIX.exe`) on operator workstations or HMI servers, indicating a potential loss of operator visibility.",
            "data_sources": [
              "Windows Event ID 4689 (Process Termination)",
              "Windows Event ID 1000 (Application Error)",
              "Windows Event ID 1002 (Application Hang)",
              "Windows Event ID 4688 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Operator Workstations and HMI Servers within the Process Control Network (PCN) and DMZ.",
            "action": "1. **Symbolic Logic:** Identify all instances where `Image Name` in Windows Event ID 4689, 1000, or 1002 matches a predefined list of critical HMI application executables (e.g., `view.exe`, `iFIX.exe`, `FactoryTalkView.exe`). Trigger an immediate alert for any single occurrence on a critical workstation, especially if it's the primary HMI. 2. **Statistical Method:** For each critical HMI application process, calculate the rate of Windows Event IDs 1000 and 1002 (Application Error/Hang) per host over a 5-minute rolling window. Establish a baseline for this rate during normal operations. Trigger an alert if the current rate exceeds the 95th percentile or 3 standard deviations above the historical mean for that specific host and application. 3. **Machine Learning:** Implement a time-series anomaly detection model (e.g., Isolation Forest or ARIMA) on the aggregated count of HMI application error/hang events across all HMI servers and operator workstations. Train the model on historical data to learn normal patterns. An alert should be generated when the model detects a significant deviation from the expected pattern, indicating an unusual surge or sustained level of application instability."
          },
          {
            "description": "A sudden and sustained absence or significant reduction of expected periodic network communications (e.g., Modbus/TCP, EtherNet/IP, OPC UA) from critical PLCs/RTUs to the central Data Historian or HMI servers, deviating from established operational baselines.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek opcua.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the Process Control Network (PCN) facilitating communication between Level 0/1 devices (PLCs, RTUs) and Level 2/3 systems (HMI, Historian, Engineering Workstations).",
            "action": "1. **Symbolic Logic:** Identify critical PLC/RTU-to-Historian/HMI communication flows based on source IP, destination IP, and specific ICS protocol ports (e.g., TCP/502 for Modbus, TCP/44818 for EtherNet/IP, TCP/4840 for OPC UA). Establish a rule to alert if a specific, expected communication session (e.g., a connection from `PLC_IP_A` to `Historian_IP_X` on port `502`) is absent for a duration exceeding 150% of its normal polling interval. 2. **Statistical Method:** For each critical PLC/RTU-to-Historian/HMI communication flow (defined by source/destination IP and port), calculate the average number of `conn.log` entries (or protocol-specific log entries like `modbus.log`) per minute over the last 24 hours. Compare this to a baseline established over the previous 7 days. An alert is triggered if the current rate drops below the 5th percentile of the historical baseline, indicating a significant and sustained reduction in expected traffic. 3. **Machine Learning:** Apply a clustering algorithm (e.g., K-means or DBSCAN) to group similar communication patterns (source/destination IP, port, byte counts, connection duration) from `Zeek conn.log` over a normal operational period. Continuously monitor live traffic and classify new communication patterns. An alert is triggered if a critical PLC/RTU-to-Historian/HMI flow suddenly shifts to an unknown cluster or ceases to match any established normal cluster, indicating an anomalous communication state."
          },
          {
            "description": "An abrupt and substantial increase in connection attempts, particularly failed connection attempts, to HMI server IPs and ports, indicative of a potential Denial-of-Service (DoS) attack or resource exhaustion, leading to HMI unresponsiveness.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156 (Windows Filtering Platform Packet Drop/Connection)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments hosting HMI Servers within the Process Control Network (PCN) and any associated DMZ for remote access.",
            "action": "1. **Symbolic Logic:** Create a watchlist of known HMI server IPs and their operational ports (e.g., TCP/80, 443, 5800, 5900, specific SCADA ports). Trigger an alert if `Zeek conn.log` shows more than 50 connections to a single HMI server IP from a single source IP with a `conn_state` of 'S0' (SYN sent, no reply) or 'REJ' (Connection rejected) within a 60-second window, indicating a potential SYN flood or port scan. 2. **Statistical Method:** For each HMI server, calculate two metrics from `Zeek conn.log` over a 1-minute rolling window: 1) the total number of new connections (`conn_state` 'S0' or 'SF') and 2) the ratio of failed connections (`conn_state` 'S0', 'REJ', 'RSTO') to successful connections (`conn_state` 'SF'). Establish baselines for these metrics. An alert is triggered if the total new connection count exceeds the 99th percentile of its historical baseline, OR if the failed-to-successful connection ratio spikes by more than 5 standard deviations from its historical average within a short period. 3. **Machine Learning:** Utilize a supervised machine learning model (e.g., Random Forest Classifier) trained on historical `Zeek conn.log` data labeled with 'normal' and 'DoS attack' patterns (if available, or synthetically generated). The model should analyze features such as connection rate, byte volume, source/destination port distribution, and `conn_state` ratios for traffic destined for HMI servers. An alert is triggered when the model classifies incoming traffic patterns as 'DoS attack' with a high confidence score."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]