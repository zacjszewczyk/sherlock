[
  {
    "information_requirement": "Is an adversary modifying critical process control parameters to impair operations? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0836",
        "name": "Modify Parameter",
        "evidence": [
          {
            "description": "The observation of a 'Write' command targeting a critical ICS register or parameter (e.g., setpoint, motor speed) where the new value is either outside the documented safe operating range or deviates by more than three standard deviations from the historical mean for that specific parameter.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) Segments, PLC/RTU Controllers, SCADA Servers",
            "action": "1. (Symbolic Logic) Maintain a reference table of critical ICS parameters and their documented safe operating ranges (min/max values) from engineering specifications. Create a SIEM rule that filters Zeek ICS protocol logs (e.g., modbus.log, s7comm.log) for 'Write' commands. The rule must trigger an alert if the 'value' field of a detected 'Write' command is outside the defined safe range for the corresponding 'register_address' or 'variable_id'. 2. (Statistical Method) For each critical ICS parameter, execute a query over at least 90 days of historical Zeek ICS logs to calculate the mean and standard deviation of its 'Write' command values. Create a scheduled SIEM query that monitors new 'Write' commands for each parameter and alerts if the current 'value' deviates by more than three standard deviations from the historical mean. 3. (Machine Learning) Train an unsupervised anomaly detection model (e.g., Isolation Forest, One-Class SVM) on historical 'value' data from 'Write' commands for each critical parameter. Deploy the trained model to ingest and score real-time 'Write' commands from Zeek ICS logs. Generate an alert when a 'Write' command's value receives an anomaly score in the top 1st percentile, indicating a statistically rare value."
          },
          {
            "description": "The observation of a 'Write' command to an ICS device originating from a source IP address that is not on the documented allowlist of authorized Engineering Workstations (EWS) or Human-Machine Interfaces (HMIs).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IT/OT Network Boundary, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs)",
            "action": "1. (Symbolic Logic) Maintain an up-to-date allowlist of IP addresses for all authorized EWS and HMI systems. Create a SIEM rule that identifies 'Write' commands in Zeek ICS protocol logs (e.g., modbus.log, s7comm.log) and extracts the source IP address ('id.orig_h'). The rule must trigger an alert if the 'id.orig_h' is not present in the authorized IP allowlist. 2. (Statistical Method) Collect 90 days of Zeek conn.log data. For each unique source-destination IP pair communicating over ICS control ports (e.g., TCP/502, TCP/102), calculate the historical frequency of communication. Create a SIEM query to monitor real-time connections to ICS control ports. Generate an alert if a source IP initiates a connection that results in a 'Write' command, and that source IP's communication frequency with the destination is in the bottom 1st percentile of all historical communication frequencies, indicating a rare connection. 3. (Machine Learning) Train a network flow anomaly detection model (e.g., using an autoencoder or DBSCAN) on aggregated historical Zeek conn.log data, using features such as source/destination IPs, ports, protocols, and connection duration for traffic between IT and OT segments. Deploy the model to analyze real-time Zeek conn.log data. Generate an alert when a new connection pattern, which correlates in time and source/destination with a 'Write' command, is classified as anomalous by the model."
          },
          {
            "description": "The observation of a 'Write' command to an ICS device, originating from an authorized EWS/HMI, that is temporally correlated within a 5-minute window to a successful Windows logon (Event ID 4624) on that EWS/HMI exhibiting multiple anomalous characteristics (e.g., logon outside of normal working hours, from a rare source network).",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Active Directory Domain Controllers",
            "action": "1. (Symbolic Logic) Correlate 'Write' commands from Zeek ICS logs (matching 'id.orig_h' to the EWS/HMI IP) with successful Windows logon events (Event ID 4624) from that same IP within a 5-minute preceding window. Maintain an access control list mapping authorized user accounts ('TargetUserName') to specific ICS devices. Generate an alert if the 'TargetUserName' from the logon event is not authorized to perform a 'Write' on the ICS device targeted in the correlated network log. 2. (Statistical Method) For each authorized user, establish a baseline of normal login characteristics from 90 days of Windows Event ID 4624 data, calculating typical logon hours (hour of day, day of week) and common source workstation names. When a 'Write' command is observed, find the correlated logon and calculate a risk score based on deviations from the user's baseline (e.g., +1 for logon between 10 PM and 6 AM, +2 for a workstation name never used before). Generate an alert if the calculated risk score exceeds the user's 95th percentile of historical login risk scores. 3. (Machine Learning) Deploy a User Behavior Analytics (UBA) model trained on historical user login patterns from Windows Event ID 4624, using features like 'Logon_Type', 'Source_Network_Address', and 'TargetUserName'. When an ICS 'Write' command is observed, feed the correlated logon event from the source EWS/HMI to the UBA model. Generate an alert if the model classifies the logon event as a high-risk anomaly, indicating a potentially compromised account initiated the 'Write' command."
          },
          {
            "description": "The observation of a single, critical control parameter being subjected to a series of 'Write' commands within a 60-second window, where the frequency of writes or the average magnitude of value change significantly exceeds the 99th percentile of historical norms for that parameter.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "PLC/RTU Controllers, Process Control Network (PCN) Segments, SCADA/Historian Servers",
            "action": "1. (Symbolic Logic) For each critical ICS parameter, define a hard threshold for 'Write' command frequency (e.g., 5 'Write' commands within 10 seconds). Create a SIEM rule that filters Zeek ICS protocol logs for 'Write' commands, groups them by the target parameter ('register_address'/'variable_id'), and triggers an alert if the count of 'Write' commands exceeds the defined threshold within the time window. 2. (Statistical Method) For each unique critical ICS parameter, use 90 days of historical Zeek ICS logs to calculate the 99th percentile for: a) the number of 'Write' commands per minute, and b) the average magnitude of value change per 'Write'. Create a SIEM query that, using a 60-second sliding window, calculates the current write frequency and average magnitude of change for each parameter. Generate an alert if either the observed frequency or the average magnitude of change exceeds its established 99th percentile baseline. 3. (Machine Learning) For each critical parameter, train a time-series anomaly detection model (e.g., ARIMA or LSTM) on the historical sequence of its 'Write' command values from Zeek ICS logs. The model learns the normal temporal patterns, value fluctuations, and inter-arrival times of 'Write' commands. Deploy the model to ingest real-time 'Write' command data streams. Generate an alert when the model identifies a sequence of value changes as a temporal anomaly, indicating potential oscillatory manipulation."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]