[
  {
    "information_requirement": "Is an adversary attempting to impact our industrial process by denying operator control? (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0813",
        "name": "Denial of Control",
        "evidence": [
          {
            "description": "Observation of network traffic volume (bytes/connections per second) to a critical ICS device (e.g., PLC IP X.X.X.X, RTU IP Y.Y.Y.Y) exhibiting a sudden, sustained increase exceeding 99th percentile of historical baseline, accompanied by an increase in connection attempts with 'S0' (SYN sent, no reply) or 'REJ' (connection rejected) states, indicating potential resource exhaustion or denial of service.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network boundary points of Level 1 (Control) and Level 2 (Supervisory) ICS network segments, including firewalls and network taps monitoring traffic to PLCs, RTUs, HMIs, and SCADA servers.",
            "action": "1. Symbolic Logic: Identify all Zeek conn.log entries where id.resp_h is a known critical ICS device IP and proto is a common ICS protocol (e.g., Modbus/TCP, EtherNet/IP, S7Comm). Filter for conn_state values of 'S0', 'REJ', or 'RSTO' (connection reset by originator) that exceed a count of 100 within a 60-second window from a single source IP (id.orig_h), or where id.orig_h matches an external IP address not whitelisted for ICS communication. 2. Statistical Method: For each critical ICS device IP, calculate the 5-minute rolling average and 99th percentile for orig_bytes, resp_bytes, and total connection_count from all unique id.orig_h sources over the last 30 days. Generate an alert when the connection count or total bytes sent to a specific ICS device from a single source exceeds its 99th percentile by a factor of 5 or more for at least two consecutive 5-minute intervals. 3. Machine Learning: Apply a time-series anomaly detection model (e.g., Isolation Forest, LSTM-based autoencoder) to the aggregated orig_bytes and connection_count metrics for each critical ICS device, sampled at 1-minute intervals. Train the model on 30 days of historical data and alert on significant deviations from the learned normal pattern, especially when the anomaly score exceeds a predetermined threshold (e.g., a z-score of 3 or higher) and correlates with an increase in 'S0' or 'REJ' connection states."
          },
          {
            "description": "Detection of an ICS protocol command (e.g., Modbus function code 0x05 'Force Single Coil', EtherNet/IP 'Write Tag') sent from an unauthorized source IP or user account, or originating from an unexpected process on an authorized Engineering Workstation (EWS) or HMI, targeting a critical PLC/RTU.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4673"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, and network taps monitoring Level 2 (Supervisory) to Level 1 (Control) network traffic, as well as Active Directory/Identity Management systems for user authentication.",
            "action": "1. Symbolic Logic: Maintain a whitelist of authorized (user_account, workstation_ip, process_name, target_plc_ip, allowed_command_types) tuples for ICS control commands. Query Zeek logs (e.g., modbus.log, s7comm.log, or conn.log with deep packet inspection if available) for control commands sent to critical ICS devices. Correlate id.orig_h (source IP) from Zeek logs with TargetUserName from Windows Event ID 4624 (successful logon) and Process_Name from Windows Event ID 4688 (process creation) on the corresponding workstation. Generate an alert if a command originates from a tuple not present in the whitelist, or if a known malicious command signature (IOC) is detected in the command payload. 2. Statistical Method: Baseline the normal frequency and timing of specific ICS control commands (e.g., 'stop', 'start', 'write') for each authorized (user_account, workstation_ip, target_plc_ip) triplet over the past 90 days. Calculate the inter-quartile range (IQR) for command frequency and time-of-day. Alert on command sequences that occur outside of normal operational hours (e.g., 2 standard deviations from the mean login time) or if a user/workstation attempts to send more than 5 critical commands within a 1-minute window, exceeding the 99th percentile of their historical activity. 3. Machine Learning: Implement a user/entity behavior analytics (UEBA) model (e.g., using unsupervised clustering or a Recurrent Neural Network) to learn normal patterns of ICS command execution by operators from their workstations. Ingest correlated data (user, workstation, process, target PLC, command type, timestamp). Alert when a sequence of commands or an individual command's characteristics (e.g., command type, frequency, target) significantly deviates from the learned normal behavior for that specific operator, indicating a potential compromise or unauthorized activity."
          },
          {
            "description": "Repeated occurrences (e.g., 3 or more within 15 minutes) of critical HMI/SCADA client software (specific executable hmi_client.exe) crashing (Windows Event ID 1000) or becoming unresponsive (Windows Event ID 1002 - Application Hang) on an operator workstation, immediately preceded by anomalous network traffic (e.g., malformed packets, unexpected protocol communication, or high-volume data transfer) destined for that workstation's HMI port.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1002",
              "Zeek conn.log",
              "Zeek dce_rpc.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Operator workstations (Level 2), Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), and network taps monitoring traffic to and from these critical endpoints within the ICS network.",
            "action": "1. Symbolic Logic: Monitor for Windows Event ID 1000 (Application Error) or 1002 (Application Hang) where Faulting_Application_Name matches known HMI/SCADA client executables (e.g., Siemens_WinCC.exe, Rockwell_FactoryTalk.exe). Upon detection, immediately query Zeek conn.log for all inbound network connections (id.resp_h matching the affected workstation IP) within the 60 seconds prior to the event timestamp. Look for connections from known malicious IPs (IOC watchlist), unexpected ports/protocols for HMI communication, or traffic exhibiting characteristics of malformed packets (e.g., orig_bytes significantly smaller than resp_bytes for a protocol, or duration being extremely short for many connections). 2. Statistical Method: For each critical HMI/SCADA workstation, establish a baseline of normal inbound orig_bytes and connection_count over 1-minute intervals, segmented by id.orig_h and id.resp_p (destination port), using the past 30 days of Zeek conn.log data. When a Windows Event ID 1000/1002 for an HMI application occurs, analyze the network traffic in the preceding 5 minutes. Generate an alert if the inbound orig_bytes or connection_count from a single source IP to the HMI's listening port exceeds the 99th percentile of its historical baseline by a factor of 3 or more. 3. Machine Learning: Develop a supervised machine learning classifier (e.g., Random Forest, SVM) trained on network flow features (e.g., orig_bytes, resp_bytes, duration, conn_state distribution, id.orig_p entropy) extracted from Zeek conn.log data that immediately preceded known HMI/SCADA crashes (labeled as 'malicious') versus normal operational periods (labeled as 'benign'). When a new HMI crash event occurs, use the network traffic from the preceding 30 seconds as input to the classifier to predict if the traffic pattern is indicative of an attack, alerting on high confidence 'malicious' classifications."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]