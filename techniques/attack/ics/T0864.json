[
  {
    "information_requirement": "Is an adversary leveraging a transient cyber asset for initial access into the ICS environment?",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0864",
        "name": "Transient Cyber Asset",
        "evidence": [
          {
            "description": "A network connection is initiated by a MAC address (source_mac from Zeek conn.log) or IP address (id.orig_h from Zeek conn.log) that has not been observed communicating within the specific ICS network segment (e.g., Level 2 Process Control Network, Level 3.5 Manufacturing Zone) in the last 30 days and is not documented in the ICS asset inventory (CMDB) or an approved segment-specific whitelist. This connection targets an ICS host (e.g., PLC, HMI, Historian) within that segment.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network ingress/egress points for ICS zones (e.g., Level 2 Process Control Network, Level 3.5 Manufacturing Zone), especially within maintenance and engineering VLANs, IT/OT DMZ gateways, core ICS network switches, and where transient devices (e.g., engineering laptops, diagnostic tools) connect. Also, Jump Servers and Bastion Hosts within the IT/OT DMZ.",
            "action": "1. Symbolic Logic: For each unique source_mac or id.orig_h observed in Zeek conn.log within any ICS network segment that has not been seen in the past 30 days, perform a lookup against the authoritative ICS asset inventory (CMDB) and any segment-specific whitelist. If the MAC or IP address is not found in either the CMDB or the whitelist, generate a high-priority alert with fields including ts, id.orig_h, source_mac, id.resp_h, id.resp_p, proto, and the identified ICS segment. 2. Statistical Method: For each ICS network segment, calculate the daily count of unique source_mac and id.orig_h values from Zeek conn.log that were not observed in the previous 7 days. Establish a 60-day historical baseline for this 'new-to-7-day-window device count' metric. Trigger a medium-priority alert if the current daily 'new-to-7-day-window device count' for any segment exceeds the 99th percentile of its historical baseline, indicating an unusual surge in novel device appearances. 3. Machine Learning Application: Train an unsupervised clustering algorithm (e.g., DBSCAN or Isolation Forest) on historical Zeek conn.log data from each ICS segment. Use features such as id.orig_h (hashed for anonymity), source_mac (hashed), id.resp_h (hashed), id.resp_p, proto, duration, orig_bytes, and resp_bytes. Deploy the model to continuously process new Zeek conn.log entries. Flag any connection that is identified as an outlier by Isolation Forest or does not belong to a large, established cluster by DBSCAN. Generate a medium-priority alert if an anomaly score (e.g., Isolation Forest anomaly score > 0.6) or outlier detection indicates a potentially unauthorized device or connection pattern."
          },
          {
            "description": "A network connection is initiated by a known transient cyber asset (identified by id.orig_h or source_mac from Zeek conn.log, matching the ICS asset inventory) where its communication pattern statistically deviates from its established 60-day historical behavioral baseline. Deviations include: Connecting to destination IPs or ports (from id.resp_h, id.resp_p) not present in its top 99th percentile of historical activity; Using protocols (proto) not observed in its historical activity; Exhibiting data volume (orig_bytes + resp_bytes) that exceeds 3 standard deviations from its average hourly volume; Connecting to external networks (from Zeek dns.log, http.log) outside of documented maintenance windows or to known malicious domains/IPs.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network ingress/egress points for ICS zones, especially at the boundaries of Level 2/3.5 networks, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historians, Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), and network gateways connecting the Process Control Network (PCN) to corporate IT or external networks. Also, the transient asset's point of connection to the ICS network and any associated management/maintenance VLANs.",
            "action": "1. Symbolic Logic: For each known transient asset (identified by id.orig_h or source_mac from Zeek conn.log, correlated with the ICS asset inventory), maintain an up-to-date watchlist of authorized destination IPs, ports, and protocols for ICS assets that it is permitted to communicate with. Alert immediately on any connection where the id.resp_h/id.resp_p/proto combination is not explicitly whitelisted for that transient asset and destination ICS asset pair. Additionally, alert on connections from transient assets to known malicious external IPs (from threat intelligence feeds via id.resp_h in Zeek conn.log) or unapproved external domains (query in Zeek dns.log, host in Zeek http.log). 2. Statistical Method: For each known transient asset, establish a 60-day rolling baseline of its communication patterns from Zeek conn.log and dns.log. This baseline should include: the top 99th percentile of destination IPs (id.resp_h) and ports (id.resp_p), average hourly data volume (orig_bytes + resp_bytes), and the frequency of unique destination hosts. Calculate the Z-score for observed values against their baselines. Generate a medium-priority alert if: a) A connection is made to an id.resp_h/id.resp_p outside the 99th percentile of its historical activity, b) The hourly data volume for any connection exceeds 3 standard deviations (Z-score > 3) from its 60-day average, or c) The number of unique destination hosts contacted by the transient asset within an hour exceeds the 99th percentile of its historical hourly unique host count. 3. Machine Learning Application: Train a Prophet time-series model for each known transient asset to forecast its expected hourly data volume (orig_bytes + resp_bytes) and count of unique destination IPs (id.resp_h) from Zeek conn.log. Generate a medium-priority alert when the observed hourly values deviate from the forecasted range by more than 2 standard deviations for at least 3 consecutive hours. Additionally, train a supervised classifier (e.g., Random Forest or XGBoost) using historical Zeek conn.log data, with features such as proto, id.resp_p, id.resp_h (hashed), duration, orig_bytes, resp_bytes, and connection entropy. The model should classify connections from transient assets as 'normal' or 'anomalous'. Alert on connections classified as 'anomalous' with a confidence score above 0.75, indicating a deviation from learned benign communication patterns."
          },
          {
            "description": "An executable file or script (identified by filename and file_type from Zeek files.log, smb_files.log, or http.log, with extensions such as .exe, .dll, .bat, .ps1, .vbs, .py) is transferred from a transient cyber asset (id.orig_h from Zeek logs, matching ICS inventory) to an ICS host (id.resp_h from Zeek logs). Subsequently, within 5 minutes of the file transfer completion (ts from Zeek logs), a process creation event (Windows Event ID 4688) occurs on that ICS host where the New Process Name (Image field) matches the transferred file's filename (case-insensitive).",
            "data_sources": [
              "Zeek files.log",
              "Zeek smb_files.log",
              "Zeek http.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historians, file servers, and other Windows-based servers within the Process Control Network (PCN), especially endpoints configured to accept file transfers from transient devices. Also, network segments where transient assets connect and hosts within those segments, and IT/OT DMZ file transfer zones.",
            "action": "1. Symbolic Logic: Ingest Zeek files.log (and/or smb_files.log, http.log) and Windows Event ID 4688 (Process Creation) into a SIEM. Correlate events where a file transfer from a known transient asset IP (id.orig_h in Zeek logs) to an ICS host IP (id.resp_h in Zeek logs) is observed, and the transferred file (filename, file_type) has an executable extension (.exe, .dll, .bat, .ps1, .vbs, .py). Within 5 minutes (based on ts from Zeek logs and TimeCreated from Event ID 4688) of the file transfer, check for a corresponding Windows Event ID 4688 on the destination ICS host where the 'New Process Name' (Image) matches the transferred filename (case-insensitive). Generate a high-priority alert. Additionally, check the file_hash from Zeek logs against a threat intelligence blacklist for known malicious hashes. 2. Statistical Method: For all file transfers from transient assets to ICS hosts (Zeek files.log), calculate the Shannon entropy of the filename and the file_contents (if available, or a sample). Establish a 90-day historical baseline of filename entropy and file_contents entropy for legitimate ICS software and scripts observed in the environment. Generate a medium-priority alert for any file transfer where the filename entropy or file_contents entropy exceeds the 99th percentile of this baseline, as unusually high entropy can indicate obfuscation or packed malware. 3. Machine Learning Application: Train a supervised classification model (e.g., Gradient Boosting Machine or Random Forest) using historical labeled data of file transfers (Zeek files.log) and subsequent process creations (Windows Event ID 4688). Features should include file_type, id.orig_h (hashed), id.resp_h (hashed), transfer_protocol, file_size, filename_entropy, file_hash_reputation (from external services), process_command_line_entropy, and the time difference between transfer and execution. The model should classify observed file transfer-execution pairs as 'benign' or 'malicious'. Generate a high-priority alert for any pair classified as 'malicious' with a confidence score exceeding 0.8, indicating potential unauthorized code execution."
          },
          {
            "description": "Execution of a process (Windows Event ID 4688: New Process Name) on an ICS host, initiated by a user session where the LogonId (Windows Event ID 4624) or id.orig_h (Zeek rdp.log) is associated with a known transient cyber asset. The executed process is a common administrative or engineering tool (e.g., net.exe, ipconfig.exe, powershell.exe, wmic.exe, or vendor-specific ICS configuration utilities). The command-line arguments (Command Line field from Windows Event ID 4688) exhibit one or more of the following characteristics: Contain keywords indicative of reconnaissance or malicious activity; Are entirely new and have not been observed for that specific tool and host in the last 60 days; Exhibit a Jaccard similarity score below 0.6 when compared to baselined legitimate command-line arguments for that specific tool and host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek rdp.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Domain Controllers, Bastion Hosts, and other Windows-based servers within the ICS environment, particularly endpoints where transient assets establish direct or indirect interactive sessions via RDP or other remote access protocols. Also, the transient asset's point of connection to the ICS network, and any network segments where DNP3/Modbus communications are monitored.",
            "action": "1. Symbolic Logic: Ingest Windows Event ID 4688 (Process Creation) and Windows Event ID 4624 (Successful Logon) into a SIEM. Identify interactive sessions originating from known transient assets by correlating LogonId from Event ID 4688 with LogonId from Event ID 4624 (where Source Network Address matches transient asset IPs), or by analyzing id.orig_h in Zeek rdp.log. For processes created within these sessions, monitor Event ID 4688 (New Process Name and Command Line fields) for the execution of administrative tools (e.g., net.exe, powershell.exe, wmic.exe, cmd.exe). Generate a high-priority alert if the Command Line contains known malicious keywords or arguments (e.g., mimikatz, Set-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\RemoteAccess, whoami /all, net group 'Domain Admins', Get-ADComputer -Filter * -Properties *, Invoke-Mimikatz). Additionally, monitor Zeek dnp3.log and modbus.log for unexpected write commands to critical control registers or functions (function_code, register_address, value) originating from transient asset IPs, especially outside of scheduled maintenance windows. 2. Statistical Method: For each ICS host and administrative tool (e.g., powershell.exe, net.exe), establish a 90-day rolling baseline of legitimate command-line arguments and their execution frequency from Windows Event ID 4688. When a new Command Line is observed from a transient asset session, calculate its Jaccard similarity coefficient against the baselined arguments for that tool. Generate a medium-priority alert if the similarity score is below 0.6, indicating a novel or significantly altered command. Additionally, monitor the hourly count of unique Command Line executions originating from transient asset sessions. Trigger an alert if this count exceeds the 99th percentile of the historical hourly unique command count for that specific transient asset and host, suggesting unusual activity. 3. Machine Learning Application: Train a Natural Language Processing (NLP) model (e.g., a pre-trained BERT model fine-tuned for command-line analysis or TF-IDF with a Logistic Regression classifier) on historical Windows Event ID 4688 Command Line arguments, classifying them as 'benign' or 'malicious'. Deploy the model to analyze Command Line arguments executed from transient asset sessions. Generate a high-priority alert for any command classified as 'malicious' with a confidence score exceeding 0.8. Furthermore, train a Hidden Markov Model (HMM) or a Recurrent Neural Network (RNN) on sequences of process execution events (Windows Event ID 4688, using New Process Name and Command Line as features) from transient asset sessions to learn common execution flows. Alert on sequences that exhibit a low probability under the trained model (e.g., probability score < 0.05), indicating a deviation from normal operational procedures or a potentially malicious multi-stage execution."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]