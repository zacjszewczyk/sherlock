[
  {
    "information_requirement": "Is an adversary attempting to map our industrial control process? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0861",
        "name": "Point & Tag Identification",
        "evidence": [
          {
            "description": "Detection of a new, previously unobserved source IP address initiating ICS protocol communication (e.g., Modbus, EtherNet/IP, DNP3, OPC-UA) with a Programmable Logic Controller (PLC), Remote Terminal Unit (RTU), or Human Machine Interface (HMI). Alternatively, an established ICS host exhibiting a statistically significant deviation (e.g., 3 standard deviations above baseline) in the volume of ICS read requests (e.g., Modbus Function Code 0x03/0x04, EtherNet/IP Get_Attribute_All, OPC-UA Read Service) or an unusual increase in unique destination IP addresses contacted within the Process Control Network (PCN) compared to its 7-day historical baseline.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek ethernetip.log",
              "Zeek dnp3.log",
              "Zeek opcua.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments containing PLCs, RTUs, HMIs, and other control devices; Network intrusion detection systems (NIDS) or firewalls monitoring PCN boundaries; DMZ segments for OPC-UA servers.",
            "action": "1. **Symbolic Logic:** Identify all unique `id.orig_h` (source IP addresses) from `zeek_modbus.log`, `zeek_ethernetip.log`, `zeek_dnp3.log`, and `zeek_opcua.log` over a 24-hour period. Maintain a regularly updated allowlist of known and authorized ICS hosts (e.g., HMIs, engineering workstations, historians). Generate a high-priority alert when an `id.orig_h` not present on the allowlist initiates any Modbus, EtherNet/IP, DNP3, or OPC-UA communication (e.g., any entry in the respective Zeek logs where `id.orig_h` is not allowlisted). Include the protocol, source IP, and destination IP in the alert.\n2. **Statistical Method:** For each established ICS host (`id.orig_h`) communicating with PLCs/RTUs, establish a 7-day rolling baseline for the hourly count of Modbus read requests (e.g., `modbus.func=3` or `modbus.func=4`), EtherNet/IP Get_Attribute_All requests (`ethernetip.command=0x6F`), DNP3 Read requests (`dnp3.func=0x01`), and OPC-UA Read Service calls (`opcua.service=Read`). Calculate the mean and standard deviation for these hourly counts. Generate an alert if the current hourly count for any of these request types from a specific host exceeds its mean by 3 standard deviations or the 99th percentile, indicating a statistically significant increase in enumeration activity.\n3. **Machine Learning:** Apply a time-series anomaly detection model (e.g., Isolation Forest or Prophet) to the hourly volume of unique destination IP addresses contacted by each ICS host within the PCN, and the hourly volume of total ICS protocol packets generated by each source IP. Train the model on 30 days of historical data. Alert when the model identifies an anomaly score exceeding the 95th percentile of historical anomaly scores, indicating a significant change in network enumeration behavior that deviates from learned normal patterns."
          },
          {
            "description": "Windows Event ID 4663 (File System) indicating specific access types (e.g., `AccessMask` containing `0x1` for ReadData, `0x80` for Delete, or `0x100` for ReadAttributes) to known ICS project files (e.g., `.ACD`, `.L5K`, `.CTL`, `.ap16`, `.XML` for tag exports, `.csv` exports of tag databases) by an unauthorized user account, a non-allowlisted process, or from an unusual network path/share, specifically targeting tag database files or configuration exports.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and central repositories for ICS project files; File servers storing ICS configurations and tag databases; Historian servers and their configuration directories.",
            "action": "1. **Symbolic Logic:** Configure Windows auditing for `Event ID 4663` (File System) on critical directories containing ICS project files and tag database exports (e.g., `*.ACD`, `*.L5K`, `*.CTL`, `*.ap16`, `*.XML`, `*.csv`). Define an allowlist of authorized `SubjectUserName` (user accounts/groups) and `ProcessName` (e.g., `Studio5000.exe`, `RSLogix5000.exe`, `TiaPortal.exe`, `FactoryTalkView.exe`, `csv.exe` if legitimate) associated with legitimate access. Generate an alert for any `Event ID 4663` where `Object Name` matches an ICS project file extension or known tag export filename pattern, and the `SubjectUserName` or `ProcessName` is not on the allowlist. Specifically flag access where `AccessMask` includes `0x1` (ReadData) or `0x100` (ReadAttributes) by generic system processes (`cmd.exe`, `powershell.exe`, `explorer.exe` from non-user context) or network shares from non-EWS hosts.\n2. **Statistical Method:** For each authorized user account and EWS, establish a rolling 7-day baseline for the number of unique ICS project files accessed per hour (based on `Event ID 4663` `Object Name` unique values) and the total volume of read operations (count of `Event ID 4663` with `AccessMask` `0x1` or `0x100`) to these file types. Calculate the mean and 99th percentile for these hourly metrics. Alert if a user's or EWS's activity in a 1-hour window exceeds the 99th percentile for either metric, indicating an unusual volume of file enumeration or tag database access.\n3. **Machine Learning:** Implement a User and Entity Behavior Analytics (UEBA) model that profiles normal access patterns for ICS project files by each user and workstation. Train the model on historical `Event ID 4663` data to identify typical access times, file types, process interactions, and `AccessMask` values. Alert when the model detects a significant deviation from the established behavioral profile (e.g., a user accessing an unusual number of different ICS project file types, or accessing files at atypical hours, or using a process not historically associated with such file access), indicating potential credential abuse or an adversary enumerating files for tag identification."
          },
          {
            "description": "Detection of a new, unbaselined source IP address connecting to the historian database port (e.g., 1433/TCP for MS SQL, 5432/TCP for PostgreSQL, 3306/TCP for MySQL, specific OPC-UA server ports). Alternatively, an established client exhibiting an anomalous volume of data transferred (`resp_bytes` in Zeek `conn.log`) or an unusual number of login failures (`Windows Event ID 4625`) preceding a successful login (`Windows Event ID 4624`) to the historian server within a short timeframe (e.g., 5 minutes), suggesting brute-force or credential stuffing attempts followed by data access.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Data Historian server(s); Database servers; Firewall/Router logs at network segment boundaries; OPC-UA server network interfaces.",
            "action": "1. **Symbolic Logic:** Identify all unique `id.orig_h` (source IPs) from `zeek_conn.log` where `id.resp_p` (destination port) matches known historian database ports (e.g., 1433/TCP, 5432/TCP, 3306/TCP, 4840/TCP for OPC-UA). Maintain an allowlist of authorized historian client IPs. Generate an alert when an `id.orig_h` not on the allowlist attempts to connect to any historian database port. Additionally, monitor `Windows Event ID 4625` (Account Logon Failed) on historian servers for a high volume of failed logins (e.g., 10+ failures) from a single source within a 5-minute timeframe, immediately followed by a `Windows Event ID 4624` (Account Logon Successful) from the same source IP and `SubjectUserName`.\n2. **Statistical Method:** For all successful connections to the historian's database port (from `zeek_conn.log`), establish a 7-day rolling baseline for the `resp_bytes` (response bytes) field, grouped by `id.orig_h` (source IP) and `id.resp_h` (historian IP) and `id.resp_p` (port). Calculate the mean and standard deviation of `resp_bytes` for each unique (source, destination, port) triplet. Generate an alert when a single connection's `resp_bytes` value exceeds its mean by 4 standard deviations, or when the hourly sum of `resp_bytes` for a given source IP to a specific historian port exceeds the 99th percentile of its historical hourly sums, indicating an unusually large data retrieval possibly for tag database exfiltration.\n3. **Machine Learning:** Develop a User and Host Behavior Analytics (UHBA) model that profiles the typical data retrieval patterns from the historian. Train the model on historical `zeek_conn.log` data, focusing on `id.orig_h`, `id.resp_h`, `id.resp_p`, `orig_bytes`, and `resp_bytes`. The model should learn typical data transfer volumes, frequencies, and connection durations for each client. Alert when the model identifies a significant deviation in data transfer volume or frequency for a specific client (e.g., a client pulling a volume of data significantly larger than its learned baseline, or accessing the historian at atypical frequencies or times, or connections with unusually long durations), indicating potential bulk data exfiltration or tag database dump attempts."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]