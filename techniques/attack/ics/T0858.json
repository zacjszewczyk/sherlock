[
  {
    "information_requirement": "Is an adversary changing PLC operating modes to bypass security controls or prepare for further action? (TA0103 - Evasion)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0858",
        "name": "Change Operating Mode",
        "evidence": [
          {
            "description": "Detection of a specific S7comm 'Set CPU Mode' function call or EtherNet/IP 'Set Attribute Single' service for 'Operating Mode' on a PLC, where the target mode is 'PROGRAM', 'REMOTE', or 'STOP', occurring outside of predefined, authorized maintenance windows, or without an associated work order ID.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) monitoring points (e.g., network taps/SPAN ports on Level 1 PLC subnets and Level 2 SCADA/HMI networks), DMZ gateways between IT/OT networks, critical control loops.",
            "action": "1. **Symbolic Logic:** Implement a correlation rule that identifies all ICS protocol mode change commands (e.g., S7comm 'Set CPU Mode' function code 0x29) and checks if the timestamp falls outside of a predefined, authorized maintenance schedule stored in a CMDB or calendar system. Alert on any detected mode change command. 2. **Statistical Method:** Establish a daily baseline for the volume and frequency of mode change commands per PLC. Calculate the 99th percentile for mode changes during non-maintenance hours. Alert if the number of mode changes for a specific PLC exceeds this percentile, indicating statistically significant anomalous activity. 3. **Machine Learning:** Train a time series anomaly detection model (e.g., Isolation Forest or Prophet) on historical mode change events (type of change, source, destination, timestamp). The model should learn normal operational patterns and alert when a mode change event deviates significantly from the learned patterns, particularly during periods of expected inactivity."
          },
          {
            "description": "An S7comm 'Set CPU Mode' function call or EtherNet/IP 'Set Attribute Single' service for 'Operating Mode' is observed originating from a source IP address or MAC address that is not present in the authorized Engineering Workstation (EWS) inventory or designated jump server allowlist.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek modbus.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) network segments, firewall logs between EWS and PLCs, authentication servers for remote access to OT assets, PCN monitoring points (Level 1 and 2).",
            "action": "1. **Symbolic Logic:** Maintain an explicit, up-to-date allowlist of authorized EWS IP addresses and MAC addresses. For every observed PLC mode change command in ICS protocol logs (e.g., 'Set CPU Mode' in Zeek s7comm.log), extract the source IP/MAC and compare it against the allowlist. Trigger a high-severity alert if the source is not on the allowlist. 2. **Statistical Method:** Analyze Zeek conn.log to identify the top N talkers to each PLC over a rolling 7-day window. Calculate the relative frequency of unique source IPs initiating mode changes. Alert on any source IP that has a significantly lower historical frequency (e.g., below the 1st percentile of known EWS activity) or is entirely new, but initiates a mode change command. 3. **Machine Learning:** Develop a classification model (e.g., Random Forest or SVM) trained on historical network connections to PLCs, using features such as source IP, destination IP, port, protocol, time of day, day of week, and historical activity scores. The model should classify observed mode change connections as 'authorized' or 'unauthorized' based on these features, flagging anomalous source activity."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary executing unauthorized program changes by manipulating PLC operating modes? (TA0104 - Execution)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0858",
        "name": "Change Operating Mode",
        "evidence": [
          {
            "description": "An observed sequence of ICS protocol commands to a single PLC: 1) a 'Set CPU Mode' (S7comm) or 'Set Attribute Single' (EtherNet/IP) command changing the mode to 'PROGRAM' or 'REMOTE', 2) a 'Program Download' (T0843) command, and 3) a subsequent 'Set CPU Mode' or 'Set Attribute Single' command changing the mode back to 'RUN', all originating from the same source and targeting the same destination within a configurable time window (e.g., 15 minutes).",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) monitoring points, specifically subnets containing critical Level 1 PLCs, and network segments connecting them to Level 2 SCADA/HMI systems and EWS.",
            "action": "1. **Symbolic Logic:** Implement a stateful correlation rule in a SIEM that tracks specific ICS protocol function codes. Trigger a high-severity alert if the sequence [S7comm 'Set CPU Mode' to PROGRAM/REMOTE] -> [S7comm 'Download Block' or EtherNet/IP 'Download Data'] -> [S7comm 'Set CPU Mode' to RUN] is observed from a single source IP to a single destination PLC within a 15-minute window. 2. **Statistical Method:** Baseline the typical time duration for authorized PLC program changes (mode change, download, mode change back). Calculate the median and interquartile range (IQR) for this duration. Alert if an observed sequence completion time is significantly shorter than the 1st percentile of the historical distribution, suggesting an automated or rushed malicious activity. 3. **Machine Learning:** Utilize a sequence anomaly detection model (e.g., Hidden Markov Model or a Recurrent Neural Network) trained on historical sequences of PLC commands. The model should learn the expected order, timing, and source/destination patterns of legitimate program updates and flag any observed sequence that deviates from these learned normal patterns as anomalous."
          },
          {
            "description": "A process other than an authorized ICS engineering application (e.g., TIA Portal, Studio 5000) on an Engineering Workstation (EWS) is observed initiating an outbound network connection (identified by Zeek conn.log) to a PLC, immediately followed by an ICS protocol command (e.g., S7comm 'Set CPU Mode') to change the PLC's operating mode.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices designated as EWS, network segments where EWS reside, enterprise network proxies for outbound connections from EWS, host-based monitoring agents on EWS.",
            "action": "1. **Symbolic Logic:** Maintain a whitelist of authorized EWS processes (e.g., `TIA.exe`, `Studio5000.exe`) and their expected command-line arguments. Correlate `Windows Event ID 4688` (process creation with command line) and `Windows Event ID 5156` (outbound connection attempt by process) with `Zeek conn.log` entries to PLCs. Alert if a process not on the whitelist initiates a connection to a PLC that subsequently issues a mode change command. 2. **Statistical Method:** Baseline the frequency of non-whitelisted processes on EWS making outbound connections to PLCs. Calculate an entropy score for the diversity of processes initiating connections to PLCs over a 24-hour window. An increase in entropy (more varied processes) or a sudden appearance of low-frequency processes initiating mode changes could indicate anomalous behavior. 3. **Machine Learning:** Train a supervised classification model (e.g., Gradient Boosting or Logistic Regression) using features extracted from `Windows Event ID 4688` (process name, parent process, command line, user, integrity level) and `Zeek conn.log` (destination IP, port, protocol, connection duration) to classify process-initiated PLC connections as legitimate or malicious, specifically looking for indicators of suspicious process behavior leading to mode changes."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]