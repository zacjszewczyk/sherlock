[
  {
    "information_requirement": "Is the adversary executing unauthorized scripts on critical ICS assets like Engineering Workstations or HMIs? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0853",
        "name": "Scripting",
        "evidence": [
          {
            "description": "Anomalous execution of PowerShell (`powershell.exe`) on a critical ICS asset, such as an Engineering Workstation (EWS) or Human-Machine Interface (HMI), especially if the script content is obfuscated or initiates external network connections.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers",
            "action": "Monitor for `powershell.exe` process creation (Windows Event ID 4688) on critical ICS assets. Enable and analyze PowerShell Script Block logs (Windows Event ID 4104) for high-entropy content or ICS-specific keywords. Correlate script execution timestamps with Zeek conn.log to identify any subsequent anomalous network connections to external IPs. Establish a baseline of legitimate script activity; alert on any deviation, as any scripting on these systems is inherently suspicious."
          },
          {
            "description": "Execution of a Python interpreter (`python.exe`) on an OT asset where it is not part of the standard, approved software baseline. The script may have been recently downloaded over the network.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), OT Network Segments, DMZ Servers",
            "action": "Create an approved whitelist of hosts and parent processes authorized to launch `python.exe`. Monitor for process creation (Windows Event ID 4688) of Python interpreters on all other OT assets. Hunt for the transfer of files with `.py` extensions in Zeek files.log and http.log. Correlate the timestamp and destination host of the file transfer with subsequent process execution events to trace the attack chain. Calculate the rarity of source domains for `.py` file downloads to flag suspicious origins."
          },
          {
            "description": "Execution of Windows Script Host (`wscript.exe` or `cscript.exe`) with unusual command-line arguments or targeting script files located in non-standard directories (e.g., temporary user folders).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs)",
            "action": "Monitor for process creation events (Windows Event ID 4688) for `wscript.exe` and `cscript.exe` on sensitive ICS hosts. Establish a strict baseline of known-good command-line arguments for these processes; any deviation should be investigated. Use statistical methods to calculate the entropy of command-line arguments to detect obfuscation. Alert on executions from atypical file paths such as `%TEMP%`, `%APPDATA%`, or `C:\\Users\\Public\\`."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]