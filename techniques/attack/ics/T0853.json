[
  {
    "information_requirement": "Is the adversary executing unauthorized scripts on critical ICS assets like Engineering Workstations or HMIs? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0853",
        "name": "Scripting",
        "evidence": [
          {
            "description": "A powershell.exe process event (Sysmon Event ID 1, Windows Event ID 4688) or script block log (Windows Event ID 4104) on a critical ICS asset that exhibits one or more of the following: 1. A command line containing high-risk flags (-EncodedCommand, -ExecutionPolicy Bypass, -NonInteractive, -WindowStyle Hidden), or download cradle patterns (IEX(New-Object Net.WebClient).DownloadString). 2. A parent process not on an established allow-list for ICS assets (e.g., parent is winword.exe, chrome.exe). 3. Script block content with a Shannon entropy score exceeding the 98th percentile of the host's 30-day baseline or containing high-risk .NET API calls like 'System.Reflection.Assembly.Load'. 4. An associated outbound network connection (Zeek conn.log) from the powershell.exe process to an IP/domain on a threat intelligence feed or to a destination port outside the 99% most common ports for the asset.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, Process Servers, Jump Servers, Domain Controllers",
            "action": "1. Symbolic Logic: Create a high-severity detection rule to alert on any powershell.exe process creation (Windows Event ID 4688 or Sysmon Event ID 1) where the command line contains the strings: '-EncodedCommand', '-ExecutionPolicy Bypass', 'IEX(New-Object Net.WebClient).DownloadString', or '-W Hidden'. Create a medium-severity rule to alert when the parent process of powershell.exe is not in the set {'explorer.exe', 'cmd.exe', 'pwsh.exe', 'sqlagent.exe'}. Correlate powershell.exe process creation with subsequent network connections (Zeek conn.log) from the same host; alert if the destination IP is present in threat intelligence feeds. 2. Statistical Method: For each host in the NAI, compute a 30-day rolling baseline of Shannon entropy for all PowerShell script block content (Windows Event ID 4104). Alert when any new script block's entropy exceeds the 98th percentile for its host. For each user and host, establish a 30-day baseline for PowerShell command-line length and argument count. Alert if a new command's length or argument count exceeds 3 standard deviations from the user's or host's historical mean. 3. Machine Learning: Apply a trained text classification model (e.g., FastText) to all script block content (Windows Event ID 4104). Generate an alert for any script with a predicted malicious probability score greater than 0.85. Feed process event features (parent process, command-line length, user, hour of day) from Sysmon Event ID 1 into a trained Isolation Forest model. Alert on any event flagged as an anomaly (score < 0), indicating a deviation from established normal execution patterns."
          },
          {
            "description": "A python.exe or pythonw.exe process event (Sysmon Event ID 1, Windows Event ID 4688) on a critical ICS asset that meets one or more of these conditions: 1. The full path of the interpreter is not on a pre-defined application allow-list for that asset class. 2. The process executes a .py or .pyc file (Sysmon Event ID 1) that was created on the host (Zeek files.log, Sysmon Event ID 11) within the previous 10 minutes. 3. The process spawns from a parent process not on an established allow-list (e.g., a SCADA application process). 4. The process makes a DNS request (Zeek dns.log) for a domain with an inverse domain frequency (IDF) score in the top 1% (most rare) for the OT network, or initiates a network connection (Zeek conn.log) to a known malicious IP.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Zeek files.log",
              "Zeek http.log",
              "Zeek smb.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Process Control Servers, Data Historians, OT Network Segments, Jump Servers",
            "action": "1. Symbolic Logic: Create a high-severity detection rule to alert on any execution of python.exe or pythonw.exe (Windows Event ID 4688, Sysmon Event ID 1) where the process path is not on the approved software inventory list for the specific NAI asset type. Create a correlation rule that joins file transfer logs (Zeek files.log, http.log, smb.log) for files ending in .py or .pyc with process execution logs (Sysmon Event ID 1) on the destination host. Alert if the process execution occurs within 15 minutes of the file transfer. Alert if a python.exe process initiates a network connection (Zeek conn.log) to any IP address present on an active threat intelligence feed. 2. Statistical Method: For each host, maintain a list of all historically executed Python script paths from command-line arguments (Event ID 4688/Sysmon Event ID 1). Alert on any execution of a Python script from a path that has never been observed on that specific host before. Calculate the inverse domain frequency (IDF) for all DNS queries (Zeek dns.log) across the OT network over a rolling 30-day window. For DNS queries originating from a python.exe process, alert if the requested domain's IDF score is in the top 1% (i.e., is one of the rarest domains requested across the entire network). 3. Machine Learning: Apply a trained One-Class SVM model to score all Python execution events based on features including parent process name, command-line arguments, user context, and network connection patterns. Alert on any execution flagged as an outlier. On file write events for .py files (Sysmon Event ID 11), apply a pre-trained Gradient Boosting classifier to the file's content, extracting features like imported libraries and function calls (e.g., 'eval', 'exec'). Alert if the file is classified as malicious with a confidence score > 0.90."
          },
          {
            "description": "A wscript.exe or cscript.exe process event (Sysmon Event ID 1, Windows Event ID 4688) on a critical ICS asset that meets one or more of these criteria: 1. The executed script file (.js, .vbs, .wsf) resides in a high-risk directory like '%TEMP%', '%APPDATA%', or 'C:\\Users\\Public\\'. 2. The parent process is an Office application (winword.exe, excel.exe), a web browser, or a PDF reader. 3. The command-line argument containing the script path has a length that exceeds the 99th percentile of the host's 90-day baseline for wscript/cscript executions. 4. The process initiates an outbound network connection (Zeek conn.log) to an IP on a threat intelligence feed or to a destination never before seen from that host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, Process Servers, Jump Servers",
            "action": "1. Symbolic Logic: Create a high-severity detection rule to alert on any execution of wscript.exe or cscript.exe (Sysmon Event ID 1) where the parent process name is in the set {'winword.exe', 'excel.exe', 'outlook.exe', 'acrord32.exe', 'chrome.exe', 'firefox.exe'}. Create a correlation rule that looks for a file creation event (Sysmon Event ID 11) for a file with a .js, .vbs, or .wsf extension in a temporary directory, followed within 5 minutes by a process execution (Sysmon Event ID 1) of that same file by wscript.exe or cscript.exe. Alert on any outbound network connection from wscript.exe or cscript.exe to an IP address on a threat intelligence feed. 2. Statistical Method: For each host, establish a 90-day rolling baseline of command-line lengths for all wscript.exe and cscript.exe executions (Event ID 4688). Alert if a new execution's command-line length exceeds the 99th percentile of the historical baseline for that host. Maintain a frequency map of all script file extensions executed by wscript.exe and cscript.exe across the NAI. Alert if an extension that has not been seen in the past 90 days (e.g., .jse, .vbe) is executed. 3. Machine Learning: Apply a DBSCAN clustering model to process event data (Sysmon Event ID 1) for wscript.exe and cscript.exe. Use features including parent process name, tokenized command-line arguments, user context, and execution hour. Any execution that is classified as a 'noise' point (i.e., does not belong to any cluster) should generate an alert for analyst investigation as a potential anomaly."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]