[
  {
    "information_requirement": "Is an adversary attempting to upload and exfiltrate PLC logic for reconnaissance? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0845",
        "name": "Program Upload",
        "evidence": [
          {
            "description": "Observed network traffic originating from a PLC destined for an Engineering Workstation (EWS) or other non-PLC device, where the `resp_bytes` value in `zeek conn.log` for a single session or aggregated over a short period (e.g., 5 minutes) significantly exceeds a predefined threshold (e.g., >1MB for S7comm, >500KB for EtherNet/IP) or deviates by more than 3 standard deviations from the historical average calculated over the past 30 days for that specific PLC-client pair. This transfer is observed on ICS programming ports (e.g., TCP/102 for S7comm, TCP/44818 for EtherNet/IP) and is not consistent with known, scheduled operational polling or legitimate program downloads/uploads.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps/SPAN ports on Process Control Network (PCN) switches, particularly at Level 1.5/2 (between Control Devices and Supervisory Control/EWS) of the Purdue Model; also at the ICS Demilitarized Zone (DMZ) firewall for potential exfiltration.",
            "action": "1. Symbolic Logic (Rule-based Protocol Command Matching): Query `zeek s7comm.log` and `zeek enip.log` for records where `function_code` matches `0x1A` (S7comm Upload) or `0x1B` (S7comm Read Block), or `Service Code` matches `0x4B` (EtherNet/IP Upload Data) or `0x4C` (EtherNet/IP Read Data). Filter these events to identify those originating from known PLC IP addresses. Cross-reference the destination IP addresses with a whitelist of authorized EWS for each PLC. Generate a high-priority alert immediately if such a code is detected destined for an unauthorized IP address or if the event occurs outside of documented, scheduled maintenance windows (e.g., Monday-Friday 08:00-17:00, excluding scheduled shifts). 2. Statistical (Baseline Deviation for Data Volume): For each unique (source_ip=PLC IP, dest_ip=EWS IP, dest_port=ICS programming port) communication pair, aggregate `resp_bytes` from `zeek conn.log` over 5-minute intervals. Establish a 30-day rolling baseline of the mean and standard deviation for these aggregated `resp_bytes` values for each pair, specifically excluding data from known, scheduled program downloads. Alert when the aggregated `resp_bytes` for a 5-minute interval from a PLC to an EWS exceeds the 99th percentile or is greater than the mean plus 3 standard deviations of its historical baseline, indicating an unusually large data transfer from the PLC. 3. Machine Learning (Time Series Anomaly Detection): Train an unsupervised time-series anomaly detection model (e.g., Isolation Forest, ARIMA, or a deep autoencoder) on the sum of `resp_bytes` and `orig_bytes` from `zeek conn.log`, `zeek s7comm.log`, and `zeek enip.log` for all connections on ICS programming ports between PLCs and EWS, aggregated within rolling 5-minute windows. Input features should include total `resp_bytes`, total `orig_bytes`, and the count of connections. Exclude known scheduled activities and legitimate program downloads/uploads from the training data. Deploy the model to continuously monitor live data. Flag and alert on sustained deviations where the anomaly score exceeds a predefined threshold (e.g., top 1% of scores), indicating a significant and unusual increase in data transfer volume from PLCs over time."
          },
          {
            "description": "A process creation event (`Windows Event ID 4688`) for an ICS engineering application (e.g., TIA Portal, Studio 5000) where the `ParentProcessName`, `CommandLine`, `User`, or `InitiatingProcessPath` deviates from a defined whitelist or a historical baseline established over the past 30 days. This activity is immediately followed by or concurrent with an outbound network connection from the host (`Windows Event ID 5156`) to a PLC's programming port (e.g., TCP/102, TCP/44818).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint agents on Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) within the PCN, specifically monitoring process execution and network connections.",
            "action": "1. Symbolic Logic (Whitelist/Blacklist Rule for Process Execution): Maintain a whitelist of authorized `User` accounts, `ParentProcessName` values, `ProcessPath` values, and known `CommandLine` arguments for ICS engineering applications (e.g., `Siemens.Automation.Portal.exe`, `Studio5000.exe`). Query `Windows Event ID 4688` for process creation events related to these applications. Generate a high-priority alert if an engineering application is launched by a `User` not in the whitelist, from a `ProcessPath` not in the whitelist (e.g., `C:\\Users\\Public\\Downloads\\`), spawned by an unusual `ParentProcessName` (e.g., `powershell.exe`, `cmd.exe` directly initiating the engineering application), or executed with a blacklisted or anomalous `CommandLine` argument. 2. Statistical (Command-Line Entropy & Frequency Analysis): For each unique engineering application process (e.g., `Siemens.Automation.Portal.exe`), track the daily execution count and calculate the Shannon entropy of its `CommandLine` arguments over a 30-day rolling period. Alert if the daily execution count exceeds the 99th percentile of its historical average, or if the `CommandLine` entropy deviates by more than 3 standard deviations from the historical mean. Additionally, perform frequency analysis on `CommandLine` arguments over the last 30 days and generate an alert for arguments occurring less than 0.1% of the time or that are completely new. 3. Machine Learning (Behavioral Anomaly & Correlation): Train a supervised classification model (e.g., Random Forest, XGBoost) using historical `Windows Event ID 4688` (process creation) and `Windows Event ID 5156` (outbound network connection) data from EWS. Label known legitimate activities as 'normal' and simulated or known malicious program upload attempts as 'anomalous'. Features should include `User`, `ProcessName`, `ParentProcessName`, `CommandLine` entropy, `DestinationIP` class (e.g., internal/external, ICS/IT), `DestinationPort` (specifically ICS programming ports), `TimeOfDay`, and `DayOfWeek`. Deploy the model for real-time inference. Generate a high-priority alert when a process creation event for an engineering application, followed within 60 seconds by an outbound network connection to a PLC on an ICS programming port, is classified as 'anomalous program upload attempt' by the model."
          },
          {
            "description": "A `Windows Event ID 4624` (Successful Logon) on an Engineering Workstation (EWS) exhibits multiple anomalous characteristics simultaneously (e.g., source IP not from known subnets, logon occurring outside of typical working hours for that user based on a 30-day baseline, or `LogonType` inconsistent with historical patterns for that user/EWS pair). This anomalous logon is immediately followed by outbound network connections from the EWS to a PLC on ICS programming ports (e.g., TCP/102, TCP/44818) with characteristics indicative of a program upload (e.g., large `resp_bytes` or specific function codes).",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory domain controllers (for centralized authentication logs), endpoint agents on Engineering Workstations (EWS), and network taps/SPAN ports on PCN switches between EWS and PLCs.",
            "action": "1. Statistical (Multi-Factor Baseline Deviation for Logon): For each `Windows Event ID 4624` (Successful Logon) on EWS, establish a 30-day rolling baseline for each user's typical `LogonTime` (e.g., hourly distribution, day of week), `SourceIpAddress` (e.g., /24 subnet), and `LogonType`. Calculate a risk score for each logon: assign points for deviations such as `SourceIpAddress` outside known subnets, `LogonTime` outside the 95th percentile of typical login times, or a `LogonType` that is new or rare for that user on that EWS. Generate a medium-priority alert if a logon's cumulative risk score exceeds a predefined threshold (e.g., top 5% of historical scores) or if it exhibits a completely new and high-risk `LogonType`. 2. Symbolic Logic (Rule-Based Correlation with Upload Activity): Upon detection of a medium-priority anomalous logon event (from step 1) on an EWS, immediately query `Zeek conn.log`, `zeek s7comm.log`, and `zeek enip.log` for outbound connections from that EWS to PLCs on ICS programming ports (TCP/102, TCP/44818) within the subsequent 15 minutes. Generate a high-priority alert if these correlated connections exhibit program upload function codes (e.g., S7comm `function_code = 0x1A`, EtherNet/IP `Service Code = 0x4B`) or show `resp_bytes` exceeding a predefined threshold for a typical program upload (e.g., >1MB for S7comm, >500KB for EtherNet/IP) from the PLC to the EWS. 3. Machine Learning (User Entity Behavior Analytics - UEBA): Implement a User Entity Behavior Analytics (UEBA) model (e.g., an unsupervised anomaly detection model like Isolation Forest or one-class SVM) that continuously profiles user logon behavior on EWS. The model should analyze features such as `LogonTime`, `DayOfWeek`, `SourceIpAddress` (geospatial/network context), `LogonType`, frequency of EWS access, and historical data transfer volumes from EWS to PLCs. The model assigns a dynamic risk score to each logon. Generate a high-priority alert for logons that generate a risk score in the top 1% of historical scores, indicating a significant deviation from the user's established normal behavior profile. This alert should trigger further correlation checks (e.g., using the symbolic logic from step 2) for subsequent program upload activity to PLCs."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]