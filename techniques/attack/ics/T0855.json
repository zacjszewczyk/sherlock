[
  {
    "information_requirement": "Is an adversary attempting to impair process control by sending unauthorized command messages? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0855",
        "name": "Unauthorized Command Message",
        "evidence": [
          {
            "description": "An ICS command message (e.g., Modbus Write, DNP3 Operate) originates from a source IP address not on the established whitelist of authorized engineering workstations (EWS), HMIs, or control servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments, specifically monitoring traffic to and from PLCs, RTUs, and other field controllers.",
            "action": "Maintain an explicit allow-list of IP addresses for all authorized devices (EWS, HMIs) permitted to send command messages. Monitor Zeek's ICS protocol logs (e.g., modbus.log) for any write/operate function codes. For each such command, compare the originating IP address ('id.orig_h' in Zeek logs) against the allow-list. Alert on any command originating from an unauthorized IP. Use descriptive statistics to track the volume of commands from all sources; a new, unauthorized source appearing in the top 95th percentile of command initiators is a high-fidelity alert."
          },
          {
            "description": "A legitimate ICS command message is sent at a time that is statistically anomalous compared to established operational baselines, such as during non-operational hours or outside of scheduled maintenance windows.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Data historians and network taps monitoring communication between HMIs and PLCs.",
            "action": "For critical ICS commands identified in Zeek protocol logs, perform a time-series analysis on at least 30 days of historical data to establish a baseline of normal activity by hour of the day and day of the week. Calculate the mean and standard deviation of command counts for each time window. Generate an alert when the volume of a specific command in a given time window exceeds a statistical threshold (e.g., 3 standard deviations from the mean), indicating an unusual burst of activity or activity at a strange time."
          },
          {
            "description": "On a Windows-based HMI or EWS, a legitimate ICS control application process is spawned by an unusual parent process (e.g., powershell.exe, cmd.exe, wscript.exe) immediately before a command message is sent to a controller.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices functioning as Human-Machine Interfaces (HMIs) and Engineering Workstations (EWS).",
            "action": "On critical Windows-based ICS hosts, monitor for process creation events (Windows Event ID 4688). Establish a baseline of normal parent-child process relationships for known ICS applications. Create a detection rule that alerts when a process like 'powershell.exe' or 'cmd.exe' is the parent of a critical ICS application process. Correlate the timestamp of this alert with network connection logs (Zeek conn.log) from the same host to determine if an outbound connection to a known PLC or RTU IP address occurred within seconds of the anomalous process creation."
          },
          {
            "description": "An ICS command message contains function codes or data values that are syntactically valid but logically unsafe or physically impossible for the target device, such as setting a valve to 150% open or a temperature setpoint far outside its operational tolerance.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN), with a focus on traffic destined for critical final control elements (e.g., actuators, valves, breakers).",
            "action": "In collaboration with process engineers, define safe operational envelopes (min/max values, valid function codes) for critical control points. Parse the data fields from Zeek's ICS protocol logs for write/operate commands. Compare the values in these commands against the predefined safe envelopes. Alert on any command containing a value that violates these process-aware rules. Calculate the entropy of the data value field for specific commands over time; a sudden and significant change in entropy could indicate an adversary is fuzzing parameters or sending malformed, unauthorized values."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]