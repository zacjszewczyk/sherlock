[
  {
    "information_requirement": "Has an adversary successfully executed an action that has resulted in, or is intended to cause, physical damage to operational technology property? (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0832",
        "name": "Manipulation of Control",
        "evidence": [
          {
            "description": "An ICS write command, captured in network protocol logs (e.g., Zeek Modbus, DNP3, ENIP), targets a critical control register (e.g., motor speed, valve position) and sets its value outside of predefined engineering safety limits. This includes commands intended to induce physical stress such as mechanical fatigue (e.g., rapid, alternating open/close commands to a valve, defined as 5 or more state changes within 1 second) or thermal shock (e.g., commanding a heater to maximum output while a cooling system is simultaneously commanded off). The command is not correlated with any authorized HMI interaction, EWS program download, or scheduled maintenance activity within a 15-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek opc_ua.log",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments, Safety Instrumented System (SIS) network segments, PLC/RTU network interfaces, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA Servers, Data Historian servers.",
            "action": "1. Symbolic Logic (IOC Match): Maintain an asset inventory of critical PLC registers with their documented safe operating ranges (min/max values) and read/write status. Create a rule to ALERT if an ICS 'write' command (e.g., modbus.func=6 or 16) targets a critical register and its value is outside the defined safe range. Create a second rule to ALERT if a 'write' command targets a register defined as 'read-only'. Create a third rule to ALERT if the count of 'write' commands to the same register with alternating values (e.g., 0 -> 1 -> 0) exceeds 3 within a 5-second window.\n2. Statistical Method: For each critical process parameter (e.g., temperature, pressure), establish a 30-day rolling baseline of its distribution, calculating the 1st and 99th percentiles while excluding known maintenance periods. ALERT if a live parameter reading falls outside this [1st-99th] percentile range for more than 3 consecutive polling cycles. For interdependent systems (e.g., motor RPM, current draw, and temperature), calculate the Mahalanobis distance of the current state vector from the centroid of its normal operating baseline. ALERT if this distance exceeds the 99.9th percentile of historical distances, indicating a state that is anomalous in its combination of values.\n3. Machine Learning Application: Train a One-Class Support Vector Machine (OCSVM) on a 30-day baseline of normal operating data vectors, where each vector is [register_address, value]. Feed live 'write' commands into the model; a prediction of '-1' (outlier) indicates a deviation from learned normal commands. Implement a time-series anomaly detection model (e.g., Isolation Forest) on features aggregated per minute, such as: a) frequency of 'write' commands, b) entropy of target register addresses, and c) ratio of 'write' to 'read' commands. ALERT on statistically significant changepoints or spikes in these metrics.\n4. Correlation: Upon an alert, 1. Retrieve the source IP and timestamp from the anomalous Zeek ICS log entry. 2. Pivot to zeek_conn.log using the IP and timestamp to identify the full connection details. 3. Pivot to the source host's logs and query for Windows Event ID 4624 (Logon) and 4688 (Process Creation) within a +/- 5-minute window to identify the user and process that initiated the network connection. 4. Cross-reference the user, host, and time with change management records to rule out authorized activity."
          }
        ]
      },
      {
        "technique_id": "T0816",
        "name": "Device Restart/Shutdown",
        "evidence": [
          {
            "description": "An unscheduled or unauthorized shutdown or restart of a critical ICS asset (e.g., a PLC controlling a turbine, an HMI for a safety system) is observed, indicated by Windows Event ID 1074 (user-initiated shutdown/restart) or Windows Event ID 6008 (unexpected shutdown). The shutdown is initiated by an unauthorized user (not on the approved admin list), a suspicious process (e.g., powershell.exe, psexec.exe), or occurs after a chain of preceding suspicious activities. This event lacks correlation with any pre-approved change management ticket, scheduled maintenance, or system update, and could lead to physical damage due to an uncontrolled process stop.",
            "data_sources": [
              "Windows Event ID 1074",
              "Windows Event ID 6008",
              "Windows Event ID 4624",
              "Windows Event ID 4648",
              "Windows Event ID 4672",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek rdp.log",
              "Zeek smb.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Process Historians, SCADA Servers, Engineering Workstations, Domain Controllers within the ICS environment, Network boundary sensors for ICS segments, Remote Terminal Units (RTUs) with logging capabilities.",
            "action": "1. Symbolic Logic (IOC Match): Maintain a watchlist of critical ICS hostnames and a list of authorized administrator accounts. Create a rule to ALERT if (EventID is 1074 on a host in the watchlist) AND (the associated User is NOT in the admin list OR the Initiating Process Name is in a list of suspicious processes like 'powershell.exe', 'cmd.exe', 'psexec.svc')). Create a second rule to ALERT if (EventID is 6008 on a host in the watchlist) AND (no corresponding EventID 1074 is found within the previous 5 minutes).\n2. Statistical Method: For each critical ICS asset, establish a 30-day rolling baseline for the frequency of EventID 1074 and 6008, excluding scheduled maintenance windows. ALERT if the 24-hour count exceeds the 99th percentile of this baseline. Establish a baseline for hourly unique source IPs connecting via RDP (zeek_rdp.log) to critical assets. ALERT if a shutdown event is preceded within 60 minutes by an hourly unique IP count exceeding the 95th percentile of its baseline.\n3. Machine Learning Application: Train a binary classification model (e.g., Random Forest) to predict if a Windows Event ID 1074 is 'malicious' (1) or 'benign' (0). Features should include: time_of_day, day_of_week, is_admin_user (boolean), logon_type (from preceding EventID 4624), process_name (one-hot encoded), and is_external_ip (from preceding zeek_conn.log). Use a clustering algorithm (e.g., DBSCAN) on pre-shutdown activity features (source_ip, user_account, processes_created) to identify new clusters of activity that do not match known 'benign administrative' patterns.\n4. Correlation: Upon an anomalous shutdown alert, 1. Immediately query the affected host for all relevant security events (4624, 4648, 4672, 4688, 4720) in the 60 minutes prior. 2. Query network logs (zeek_conn.log, rdp.log, smb.log) for all connections to and from the host in the same time window. 3. Reconstruct the event timeline to identify the initial access vector (e.g., RDP from an unusual IP), any privilege escalation (EventID 4672), and the final command execution (EventID 4688 creating shutdown.exe) that led to the shutdown."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]