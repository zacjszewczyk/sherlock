[
  {
    "information_requirement": "Is an adversary attempting to exploit our public-facing ICS applications for initial access? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0819",
        "name": "Exploit Public-Facing Application",
        "evidence": [
          {
            "description": "Observable network traffic patterns indicating an attempted or successful exploit: 1) A significant increase (e.g., 3 standard deviations above the 30-day moving average within a 15-minute window) in inbound connection attempts or total bytes to a public-facing ICS application port (e.g., 80/TCP, 443/TCP, 502/TCP for Modbus, 20000/TCP for DNP3, 4840/TCP for OPC UA). 2) Inbound connections from a source IP/ASN identified on a threat intelligence blacklist, or originating from an unexpected geographic region (e.g., not observed in the last 90 days or outside approved countries). 3) Multiple failed authentication attempts (e.g., >5 attempts within 60 seconds from a single source IP targeting a web login form or application API) immediately followed by a successful authentication event from the same source IP to the ICS application. 4) Protocol anomalies detected, such as malformed packets or unexpected protocol behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek notice.log",
              "Zeek weird.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications (e.g., Historians, Web HMIs, Remote Access Gateways, OPC UA Servers, SCADA Servers, ICS API Gateways)",
            "action": "1. Symbolic Logic (IOC Match & Correlation): Search Zeek http.log uri, request_body, and user_agent fields for known web exploit signatures (e.g., SQL injection like ' or 1=1--, command injection, path traversal, web shell indicators) using pre-defined regular expressions or Yara rules. Concurrently, cross-reference source IPs (id.orig_h) from Zeek conn.log against up-to-date threat intelligence feeds for known malicious IPs, ASNs, or TOR exit nodes. Correlate Windows Event ID 4625 (failed logins) for the public-facing application's service account with a subsequent Windows Event ID 4624 (successful login) from the same SourceNetworkAddress within a 5-minute window. Generate an alert for any matches or for alerts from Zeek's notice.log or weird.log.\n2. Statistical Method (Baseline & Percentile Threshold): For each public-facing ICS application (destination IP and port), establish a 30-day moving average and standard deviation for inbound connection count and total bytes (from Zeek conn.log) per source IP. Set a threshold to alert if any source IP's connection count or total bytes exceeds the mean by 3 standard deviations within a 15-minute window, or if it falls into the top 99th percentile of all source IPs for that period. Additionally, enrich Zeek conn.log id.orig_h with geolocation data and alert on connections originating from countries or ASNs not observed in the preceding 90 days, particularly if the connection count exceeds the 75th percentile for that destination port. Calculate Shannon entropy of Zeek http.log URI strings per source IP and alert on values 2+ standard deviations above the norm, suggesting scanning or fuzzing activity.\n3. Machine Learning Application (Anomaly Detection & Classification): Apply a clustering algorithm (e.g., DBSCAN) to Zeek conn.log entries targeting ICS applications, utilizing features such as orig_bytes, resp_bytes, duration, orig_pkts, resp_pkts, proto, and conn_state to identify anomalous connection clusters that deviate from established normal communication patterns. Train a binary classifier (e.g., Isolation Forest, SVM) on historical Zeek http.log data to detect anomalous HTTP requests based on uri_len, param_count, method, status_code, and Shannon entropy of request_body or user_agent string. Flag requests with a high anomaly score, especially when correlated with Zeek notice.log events like 'Scan::Address_Scan' or 'HTTP::Unusual_User_Agent'."
          },
          {
            "description": "An unauthorized or anomalous child process is spawned by a public-facing ICS application process on a DMZ server. This includes: 1) A child process identified as an interactive shell (powershell.exe, cmd.exe, sh.exe, bash.exe), a data transfer utility (bitsadmin.exe, certutil.exe, wget.exe, curl.exe), a reconnaissance tool (whoami.exe, ipconfig.exe, net.exe, systeminfo.exe, tasklist.exe, nltest.exe), or a known malware payload (based on hash or signature), where the parent process is a legitimate ICS application (e.g., HistorianService.exe, WebHMI.exe, OPCUA_Server.exe). 2) This process creation event is not part of the ICS application's established operational process whitelist. 3) The process creation occurs within 300 seconds of an inbound network connection (Zeek conn.log) to the server from an external IP address, especially if that connection involved suspicious HTTP requests (Zeek http.log) or showed signs of exploitation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ, Linux-based web servers for ICS applications) located in the Purdue Level 3.5 DMZ.",
            "action": "1. Symbolic Logic (Whitelist & Correlation): Maintain a strict whitelist of legitimate parent-child process relationships for each public-facing ICS application process. Generate an immediate alert if Windows Event ID 4688 records an ICS application process as ParentProcessName and a non-whitelisted executable (e.g., powershell.exe, cmd.exe, certutil.exe, net.exe, whoami.exe, wmic.exe) as NewProcessName, or if CommandLine contains suspicious strings (e.g., 'base64', 'download', 'invoke-expression'). Prioritize alerts where this process creation is correlated with an inbound Zeek conn.log entry from an external IP to the server's public-facing port within a 5-minute window, especially if the conn.log or http.log indicates suspicious activity (e.g., HTTP POST to an unusual URI).\n2. Statistical Method (Rarity & Entropy Analysis): For each public-facing ICS application server, establish a baseline of normal parent-child process relationships and command-line argument structures from Windows Event ID 4688. Alert on the first-ever occurrence of a new parent-child pair or a command-line argument that falls in the 1st percentile of historical frequency. Calculate the Shannon entropy of NewProcessName and CommandLine values within rolling 1-hour windows. Generate an alert if the current entropy score for either metric deviates by more than 2 standard deviations from the historical mean, indicating a sudden increase in diverse or obfuscated process creations or command line arguments.\n3. Machine Learning Application (Behavioral Anomaly Detection): Train a behavioral anomaly detection model (e.g., Isolation Forest or One-Class SVM) on historical Windows Event ID 4688 data from public-facing ICS application servers, using features such as ParentProcessName, NewProcessName, CommandLine (hashed or vectorized), and User. The model should learn normal process execution patterns for each ICS application. Flag new process creations by ICS applications that are scored as anomalous by the model, particularly when preceded by suspicious network activity (e.g., high volume, exploit patterns) identified from Zeek conn.log and http.log within a 5-minute time frame."
          },
          {
            "description": "Unauthorized outbound network connections from a public-facing ICS application server in the DMZ to internal ICS network segments. This includes: 1) Connections from a Purdue Level 3.5 server to destination IPs or ports within internal Purdue Level 3 (Site Control) or Level 2 (Area Control) network segments that are not part of the server's explicitly defined and whitelisted outbound communication profile. 2) Communication using protocols typically associated with lateral movement or remote access (e.g., SMB 445/TCP, RDP 3389/TCP, SSH 22/TCP) or ICS-specific protocols (e.g., Modbus TCP 502/TCP, S7COMM 102/TCP, EtherNet/IP 44818/TCP) when these are not legitimately required for the application's function. 3) Connections targeting critical ICS assets such as PLCs, RTUs, Engineering Workstations, or SCADA servers that the public-facing application server should not directly communicate with.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ. Internal ICS network segments.",
            "action": "1. Symbolic Logic (Whitelist & Blacklist): Maintain a strict whitelist of allowed outbound connections from public-facing ICS servers to internal ICS network segments, specifying source IP, destination IP, destination port, and protocol (from Zeek conn.log). Generate an immediate alert for any connection from a public-facing ICS server to the internal ICS network that is not explicitly whitelisted. Prioritize alerts if the destination port corresponds to remote access (3389/RDP, 22/SSH), file transfer (445/SMB), or ICS protocols (502/Modbus, 102/S7COMM) and the destination IP is in a critical ICS segment. Monitor Zeek dns.log for outbound DNS queries from these servers resolving internal-only hostnames or known C2 domains.\n2. Statistical Method (Jaccard Index & Data Volume): For each public-facing ICS server, establish a 30-day baseline set of unique destination IPs, ports, and protocols contacted within the internal ICS network from Zeek conn.log. Calculate the Jaccard index comparing the set of connections in a rolling 1-hour window against this baseline. Alert if the similarity score drops below a threshold (e.g., 0.6), indicating significant deviation. Additionally, establish a moving average for the volume of data transferred (orig_bytes + resp_bytes) to internal segments and alert on spikes that are 3+ standard deviations above the mean, which could indicate data exfiltration or tool transfer.\n3. Machine Learning Application (Graph-based Anomaly Detection): Model the network as a graph using Zeek conn.log data, where nodes are hosts and edges represent connections. Train a graph neural network (GNN) on historical traffic to learn normal communication patterns between the DMZ and internal ICS zones. Flag new connections or significant changes in edge properties (e.g., a DMZ server initiating an RDP connection to an engineering workstation for the first time) that are identified as anomalous by the model, as these may indicate lateral movement."
          },
          {
            "description": "Anomalous file creation or modification on a public-facing ICS application server, suggesting the placement of a web shell or other malicious tool. This includes: 1) Creation of files with executable or script extensions (e.g., .aspx, .jsp, .php, .sh, .ps1) in web-accessible directories by the application's service account. 2) Creation of a file whose content has high Shannon entropy (e.g., > 7.0), suggesting it is packed, encrypted, or obfuscated. 3) Modification of existing application configuration files (e.g., web.config) to alter security settings or redirect traffic. 4) A file is created on the server within 5 minutes of an HTTP POST request to the server from an external source.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).",
            "action": "1. Symbolic Logic (Signature & Correlation): Use file integrity monitoring or event-driven checks to scan newly created files in web directories against a library of YARA rules for known web shells. Correlate file creation events (e.g., Windows Event ID 4663 with Accesses containing 'WriteData' or 'AppendData') with preceding Zeek http.log entries showing an HTTP POST from an external IP to the same server within a 5-minute window. Alert if the created file has an extension associated with web shells (.aspx, .jsp, etc.) and the creating process is the web server or ICS application process.\n2. Statistical Method (Frequency & Entropy Analysis): Establish a baseline of file extensions and creation paths for each public-facing ICS application. Alert on the creation of a file with an extension that has not been seen in the last 90 days or whose creation path is rare (e.g., in the bottom 5th percentile of frequency). If using Zeek files.log, calculate the Shannon entropy for all newly observed file contents (fuid). Alert if a file's entropy score is >7.0 (for text-based files) or exceeds the 98th percentile for its observed mime_type, indicating potential obfuscation or encryption.\n3. Machine Learning Application (Classification): Train a classification model (e.g., Random Forest) on file metadata to distinguish between legitimate and malicious file creations. Features can include file path, file extension, creating process name, file size, and the entropy of the filename. The model can be trained on known-good application behavior and known-bad web shell characteristics. Flag any file creation event classified as malicious with a high confidence score, and elevate the priority if it is correlated with a network anomaly from the same source IP."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]