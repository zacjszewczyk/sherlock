[
  {
    "information_requirement": "Is an adversary attempting to inhibit response functions by changing credentials on critical ICS devices? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0892",
        "name": "Change Credential",
        "evidence": [
          {
            "description": "Observed process creation of known ICS engineering software (e.g., 'TIA Portal.exe', 'Studio5000.exe') on an Engineering Workstation (EWS) originating from a user account not explicitly authorized for that software, or occurring outside of established operational hours (e.g., 95th percentile of normal execution times).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) within the Process Control Network (PCN)",
            "action": "1. **Symbolic Logic**: Maintain a whitelist of authorized user accounts and specific ICS engineering software executables (e.g., 'TIA Portal.exe', 'Studio5000.exe', 'ControlBuilder.exe') for each EWS. Generate an alert for Windows Event ID 4688 where a whitelisted executable is launched by a `SubjectUserName` not present in the authorized list for that specific EWS. 2. **Statistical Method**: For each EWS and authorized user, establish a baseline of typical execution times for ICS engineering software (Windows Event ID 4688). Calculate the 95th percentile for these execution timestamps. Alert when an execution occurs outside of these established bounds, particularly during non-operational hours (e.g., between 10 PM and 6 AM for software typically used during business hours). 3. **Machine Learning/Time Series**: For each EWS, collect Windows Event ID 4688 data for ICS engineering software executions over a 30-day period. Apply a time-series anomaly detection algorithm (e.g., simple moving average with standard deviation thresholds) to identify significant deviations in execution frequency or duration from the established baseline, signaling unusual activity patterns."
          },
          {
            "description": "Observed network communication from an Engineering Workstation (EWS) or another management host to a Programmable Logic Controller (PLC) or Remote Terminal Unit (RTU) containing specific ICS protocol function codes or commands (e.g., S7COMM 'Setup Communication', Modbus 'Write Multiple Registers' to a password-specific address) that are known to modify or set device credentials, occurring outside of a scheduled maintenance period.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the Process Control Network (PCN) where Engineering Workstations (EWS) communicate with Programmable Logic Controllers (PLCs) or Remote Terminal Units (RTUs), including DMZs or firewalls separating these zones.",
            "action": "1. **Symbolic Logic**: Identify specific ICS protocol function codes or commands (e.g., S7COMM Function Code '0x00', Subfunction '0x04' for 'Setup Communication' with specific parameters indicating password change; Modbus Function Code '0x10' 'Write Multiple Registers' to known password/key registers) associated with credential modification. Alert when these specific commands are observed in Zeek s7comm.log or modbus.log originating from an EWS destined for a critical controller. 2. **Statistical Method**: For each EWS-to-controller communication pair, establish a historical baseline of observed ICS protocol function codes and their frequencies (e.g., from Zeek s7comm.log or modbus.log). Calculate the relative frequency of each function code over a 24-hour rolling window. Alert when a function code known for credential modification, which has a historical frequency below the 1st percentile, is observed. 3. **Machine Learning/Entropy**: For each EWS-to-controller communication pair, calculate the Shannon entropy of observed ICS protocol function codes within a 1-hour sliding window from Zeek s7comm.log or modbus.log. Establish a baseline range for entropy scores. Alert on significant drops in entropy (e.g., below the 5th percentile of historical entropy values), which could indicate a highly repetitive and potentially malicious sequence of commands, such as repeatedly attempting to change a credential."
          },
          {
            "description": "A causal chain of events where an unauthorized or anomalous user logon to an Engineering Workstation (EWS) is immediately followed by the execution of ICS engineering software, which then correlates with network communication from that EWS to a critical controller containing commands indicative of a credential change.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) within the Process Control Network (PCN), Active Directory/Authentication Servers, and network perimeter devices between the IT and OT networks.",
            "action": "1. **Symbolic Logic (Rule-based correlation)**: Create a correlation rule that triggers when: (a) Windows Event ID 4624 (successful logon) on an EWS from a source IP not on an approved list for that user/EWS, OR the `LogonType` is indicative of remote access (e.g., '10 - RemoteInteractive') from an unusual source. (b) Followed within 5 minutes by Windows Event ID 4688 (process creation) on the same EWS, where `NewProcessName` matches a known ICS engineering software executable. (c) Followed within 10 minutes by Zeek conn.log entries from the EWS's IP to a critical controller's IP on a known ICS protocol port (e.g., 102/tcp, 502/tcp), AND Zeek s7comm.log or modbus.log entries showing credential modification commands. This chain of events should generate a high-priority alert. 2. **Statistical Method**: Establish a baseline of typical login times and source IP ranges for each authorized user on each EWS (Windows Event ID 4624). Calculate the Z-score for each login event based on time-of-day and source IP rarity. Simultaneously, baseline the frequency of ICS software executions (Windows Event ID 4688) and controller communication from EWS (Zeek logs). Alert when a login event with a Z-score exceeding 2.5 standard deviations is observed, *and* is followed within a defined time window (e.g., 15 minutes) by a sudden spike in ICS software execution or controller communication frequency that also exceeds a 2.5 standard deviation threshold. 3. **Machine Learning/Behavioral Anomaly Detection**: Implement a behavioral anomaly detection model (e.g., using a simple clustering algorithm or Isolation Forest on historical user activity) that profiles normal user behavior on EWS hosts, including login patterns (Windows Event ID 4624), process execution (Windows Event ID 4688), and network communication to controllers (Zeek logs). Train the model on these multi-dimensional features. Flag and alert on any new activity sequence that deviates significantly from established clusters of normal behavior, indicating a potential compromise and credential modification attempt."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]