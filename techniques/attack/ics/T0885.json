[
  {
    "information_requirement": "Is an adversary using a commonly used ICS or IT port for Command and Control?",
    "tactic_id": "TA0101",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T0885",
        "name": "Commonly Used Port",
        "evidence": [
          {
            "description": "Network connections observed on a commonly used IT or OT port (e.g., TCP/80, TCP/443, TCP/53, TCP/502, TCP/102, TCP/20000, TCP/44818) where the Zeek-identified application protocol (service field) does not align with the standard protocol expected for that destination port (e.g., HTTP on port 80, Modbus on port 502).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IT/OT network boundary, ICS DMZ, network segments connecting to the internet",
            "action": "1. Symbolic Logic: Filter Zeek conn.log for connections where id.resp_p (destination port) is one of the commonly used ports (e.g., 80, 443, 53, 502, 102, 20000, 44818) AND the service field does NOT match the expected protocol for that port (e.g., if id.resp_p is 80 and service is not 'http' or 'ssl', or if id.resp_p is 502 and service is not 'modbus'). 2. Statistical Method: Calculate the daily count and byte volume of these protocol mismatches per unique id.orig_h (source IP) over the last 30 days. Identify source IPs where the count or byte volume of mismatches exceeds the 95th percentile for that IP's historical activity or the network-wide average for such events, indicating a statistically significant deviation. 3. Machine Learning: Apply a classification model (e.g., a Random Forest classifier) trained on historical conn.log data, using features such as id.resp_p, service, duration, orig_bytes, resp_bytes, and orig_pkts, to identify connections exhibiting characteristics of protocol tunneling or masquerading that deviate from normal baseline behavior on these ports. Flag connections classified as anomalous."
          },
          {
            "description": "An ICS/OT asset (e.g., PLC, HMI, Engineering Workstation) initiates an outbound TCP or UDP connection to an IP address that is not part of the organization's internal IP space (e.g., RFC1918, defined internal subnets) or an approved external whitelist, utilizing a commonly used port (e.g., TCP/80, TCP/443, TCP/53, TCP/502). This connection is observed in network flow logs and, for Windows hosts, may be correlated with process creation and network connection events.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS DMZ, ICS Level 2 (Supervisory Control) and Level 1 (Basic Control) networks, Engineering Workstations, HMIs, Process Control Networks",
            "action": "1. Symbolic Logic: From Zeek conn.log, identify connections where id.orig_h belongs to a known ICS asset (from asset inventory) and id.resp_h is NOT an internal IP address (e.g., not RFC1918, not on an approved external whitelist) AND id.resp_p is a commonly used port (e.g., 80, 443, 53, 502, 102). Correlate with Windows Event ID 5156 on Engineering Workstations to identify processes initiating these connections, flagging any non-whitelisted processes. 2. Statistical Method: For each ICS asset, track the frequency and volume of outbound connections to external IPs on common ports over time. Calculate the moving average and standard deviation of these metrics over a 7-day window. Alert when an asset's outbound connection count or byte volume to external IPs on common ports exceeds three standard deviations from its established baseline, or when a sudden increase (e.g., >500% increase in 1 hour) is observed. 3. Machine Learning: Employ a clustering algorithm (e.g., K-Means or DBSCAN) on connection metadata (source/destination IP, port, protocol, byte counts) originating from ICS assets to identify clusters of similar outbound connections. Flag clusters that are distinct from established normal behavior, particularly those connecting to external, unknown IPs on common ports, as potential C2."
          },
          {
            "description": "Network connections on commonly used IT/OT ports (e.g., TCP/80, TCP/443, TCP/53, TCP/502, TCP/102, TCP/44818) that exhibit statistically anomalous characteristics in Zeek conn.log fields such as duration, orig_bytes, resp_bytes, or orig_pkts/resp_pkts, or in dns.log fields like query_len or answer_len, indicating deviation from established baseline behaviors for that port and protocol within the ICS environment.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core ICS network switches, Level 3 (Manufacturing Operations) and Level 2 (Supervisory Control) network segments, perimeter network sensors, DNS servers within the ICS network",
            "action": "1. Symbolic Logic: Filter Zeek conn.log for connections on common ports (e.g., 80, 443, 53, 502, 102, 44818). For connections where service is 'dns', identify dns.log entries with query_len or answer_len exceeding a static threshold (e.g., >255 bytes) or containing non-standard ASCII characters, which may indicate DNS tunneling. 2. Statistical Method: For each (id.orig_h, id.resp_h, id.resp_p) tuple, establish a rolling baseline (e.g., 7-day average and standard deviation) for duration, orig_bytes, and resp_bytes. Calculate an entropy score for the payload content (if available, e.g., from Zeek http.log or ssl.log for HTTP/HTTPS traffic, or from conn.log for other protocols based on byte distribution). Flag connections where any of these metrics (duration, byte counts, entropy) exceed the 99th percentile or three standard deviations from their respective baselines for that specific communication pair and port. 3. Machine Learning: Implement a time-series anomaly detection model (e.g., Isolation Forest or Prophet) on the aggregated orig_bytes and resp_bytes per minute for each critical ICS asset and common port combination. Detect and alert on sustained deviations or sudden spikes in data volume that fall outside the predicted range, indicating abnormal data transfer activity on these ports."
          },
          {
            "description": "A non-whitelisted or non-browser application process on an Engineering Workstation or HMI initiates recurrent, periodic outbound TCP connections to an external destination on common web ports (TCP/80, TCP/443). These connections exhibit characteristics in Zeek conn.log and Windows Event Logs consistent with beaconing, such as consistent inter-arrival times between connections and persistently low data volume per connection.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Level 2 (Supervisory Control) and Level 3 (Manufacturing Operations) endpoints, Engineering Workstations, HMIs, IT/OT network boundary",
            "action": "1. Symbolic Logic: Filter Windows Event ID 4688 (Process Creation) and Windows Event ID 5156 (WFP Permitted Connection) on Engineering Workstations and HMIs. Identify processes (NewProcessName) making outbound connections (DestinationPort 80 or 443) where NewProcessName is NOT a whitelisted web browser (e.g., chrome.exe, firefox.exe, msedge.exe). Cross-reference with Zeek conn.log for these source IPs and ports, looking for service fields 'http' or 'ssl' not associated with legitimate browser activity. 2. Statistical Method: For each unique (id.orig_h, id.resp_h, id.resp_p) tuple identified in Zeek conn.log on ports 80/443, calculate the inter-arrival time (time delta) between consecutive connections. Compute the standard deviation of these inter-arrival times over a rolling 1-hour window. Flag connections where the standard deviation is below a threshold (e.g., <5 seconds for at least 5 connections within the window) and orig_bytes + resp_bytes is consistently low (e.g., <1KB per connection), indicating periodic, low-volume beaconing. 3. Machine Learning: Apply a supervised machine learning model (e.g., SVM or Logistic Regression) trained on known beaconing patterns vs. legitimate web traffic. Features for the model would include connection frequency, inter-arrival time standard deviation, byte entropy, orig_bytes/resp_bytes distribution, and service field from Zeek conn.log. Use this model to classify suspicious outbound connections from ICS endpoints on ports 80/443 as either legitimate or beaconing C2."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]