[
  {
    "information_requirement": "Is an adversary executing unauthorized code on critical ICS assets (e.g., HMI, EWS) by directly interacting with the operating system's native API? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0834",
        "name": "Native API",
        "evidence": [
          {
            "description": "Observable Windows Event ID 4688 records from critical ICS assets (e.g., HMIs, EWS) indicating a process creation event where a parent process, explicitly whitelisted as a critical ICS application (e.g., 'HMI_Runtime.exe', 'Vendor_App.exe'), spawns a child process that is not present in a pre-approved, regularly reviewed whitelist of expected parent-child process relationships for that critical asset. Specific instances of this evidence include the creation of known command interpreters (e.g., 'cmd.exe', 'powershell.exe'), scripting engines (e.g., 'wscript.exe', 'cscript.exe'), or any executable whose digital signature status in the event log is 'Unsigned', 'Bad Signature', 'Expired', or where the 'Signer' field does not match an approved vendor. Enhanced weighting is applied if the 'NewProcessPath' field indicates an ephemeral or user-writable directory (e.g., '%TEMP%', 'C:\\Windows\\Temp', 'C:\\Users\\*\\AppData\\Local\\Temp').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) within the control network, Human-Machine Interfaces (HMI) on the plant floor, ICS Application Servers hosting SCADA/DCS components, Data Historian Servers",
            "action": "1. Symbolic Logic: On critical ICS assets (EWS, HMI, ICS Application Servers), query Windows Event ID 4688 for process creation events. Implement a rule to generate an immediate high-priority alert if the 'ParentProcessName' field matches an entry in the 'Critical ICS Application Whitelist' AND the 'NewProcessName' field matches any of {'cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe'}. Additionally, create a rule to alert if a 'NewProcessCommandLine' contains a path indicating an ephemeral or user-writable directory (e.g., '%TEMP%', 'C:\\Windows\\Temp', 'C:\\Users\\*\\AppData\\Local\\Temp'). A third rule should alert if the 'SignatureStatus' field of 'NewProcessName' indicates {'Unsigned', 'Bad Signature', 'Expired', 'Revoked'} or if the 'Signer' field does not match an approved vendor from the 'Approved ICS Software Vendors' list, specifically for processes expected to be signed.\n2. Statistical Method: For each unique parent-child process pair ('ParentProcessName', 'NewProcessName') observed from Windows Event ID 4688 on critical ICS assets, establish a 30-day rolling baseline of the average daily execution count and the Shannon entropy of their 'NewProcessCommandLine' arguments. Continuously calculate the z-score for the observed daily execution count of each parent-child pair against its baseline mean and standard deviation. Simultaneously, calculate the z-score for the Shannon entropy of 'NewProcessCommandLine' arguments for each pair. Generate an alert if the execution count z-score falls below -3 (indicating an abnormally rare or new event for a previously common pair, or a significant decrease in frequency) OR if the command-line argument entropy z-score exceeds +3 (indicating unusually varied or randomized command-line parameters, potentially indicative of polymorphic behavior or exploitation).\n3. Machine Learning: Implement an Isolation Forest anomaly detection model. Train the model using 90 days of Windows Event ID 4688 data from critical ICS assets. Engineer features from 'ParentProcessName', 'NewProcessName', 'NewProcessCommandLine' (using techniques like TF-IDF or word embeddings for tokenization), 'SubjectUserName', 'NewProcessPath', and 'SignatureStatus'. Continuously feed new process creation events into the trained model. Generate a high-priority alert for any event where the calculated anomaly score exceeds the 95th percentile of anomaly scores observed during the training period, indicating a statistically significant deviation from established normal ICS process behavior."
          },
          {
            "description": "Observable outbound network connection records in Zeek conn.log and DNS query records in Zeek dns.log, originating from an application process identified as critical ICS via correlation with Windows Event ID 5156 ('Application Name' field). This evidence specifically includes: 1) Connections where the 'proto' field in conn.log indicates a non-industrial protocol (e.g., 'TCP/80', 'TCP/443', 'TCP/3389', 'TCP/445') originating from an ICS network segment where only industrial protocols (e.g., Modbus, OPC UA, DNP3) are expected. 2) Connections where the 'id.resp_h' field in conn.log resolves to an IP address outside of the defined internal ICS/OT subnet ranges (e.g., RFC1918 ranges not designated for OT, or public IPs). 3) DNS queries where the 'query' field in dns.log is not present in the ICS network's pre-approved domain whitelist. This collective deviation from an established operational baseline for critical ICS applications constitutes the evidence.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Perimeter of ICS Network Segments (e.g., Level 3 to Level 3.5/4), Industrial Demilitarized Zone (IDMZ) egress points, Internet Gateway Proxies",
            "action": "1. Symbolic Logic: Establish correlation rules between 'Application Name' from Windows Event ID 5156 on critical ICS assets and network activity in Zeek conn.log ('id.orig_h', 'id.resp_h', 'id.resp_p', 'proto') and Zeek dns.log ('id.orig_h', 'query'). Generate an immediate high-priority alert if: a) An ICS application (e.g., 'SCADA_Server.exe') initiates an outbound connection where the 'id.resp_p' and 'proto' indicate a non-industrial protocol (e.g., 'TCP/80', 'TCP/443', 'TCP/3389', 'TCP/445') from an ICS network segment. b) An ICS application connects to an 'id.resp_h' that is not within the 'Pre-Approved ICS Internal IP Ranges' (e.g., 10.10.0.0/16, 172.16.0.0/20) or is matched against a regularly updated global threat intelligence blacklist. c) An ICS application performs a DNS query ('query' field) that is not present in the 'ICS Approved Domain Whitelist'.\n2. Statistical Method: For each critical ICS application (identified and grouped by 'Application Name' from Windows Event ID 5156), establish a 30-day rolling baseline of its Zeek conn.log and dns.log activity. For each application, calculate the daily metrics: total outbound connections, total bytes transferred, and the Shannon entropy of destination IP addresses ('id.resp_h') and queried domain names ('query'). Continuously monitor these metrics by calculating their 7-day moving average and standard deviation. Generate a moderate-priority alert if any metric's 7-day moving average exceeds its 3-sigma upper control limit (i.e., Moving Average + 3 * Standard Deviation) of the baseline, indicating a statistically significant anomalous increase in network activity or diversification of communication targets for that specific ICS application.\n3. Machine Learning: Implement an XGBoost classification model. Train the model using 90 days of labeled Zeek conn.log and dns.log data, correlated with 'Application Name' from Windows Event ID 5156 from ICS assets. Engineer features including 'duration', 'orig_bytes', 'resp_bytes', 'proto', 'service', 'conn_state', 'query_name_length', 'entropy_of_query_name', and a boolean indicator for 'is_internal_dest_ip'. Retrain the model monthly with newly labeled data to maintain accuracy. For new network connection events, generate a high-priority alert if the model's classification probability for 'malicious' or 'command-and-control (C2)' activity exceeds 0.9, indicating a high likelihood of adversarial communication by an ICS application."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]