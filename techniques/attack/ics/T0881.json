[
  {
    "information_requirement": "Is the adversary attempting to inhibit critical ICS processes or response functions by stopping services? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0881",
        "name": "Service Stop",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688 or Sysmon Event ID 1) is recorded where the command line invokes a service stop utility (e.g., 'sc.exe stop', 'net.exe stop', 'Stop-Service') targeting a critical ICS service. This is correlated with a subsequent service stop event (Windows Event ID 7036) for the same service on the same host within a 15-second window.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 7036",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human Machine Interfaces (HMIs), Historian Servers, OPC Servers, Application Servers, Domain Controllers, and Jump Servers within the Process Control Network (PCN) or OT DMZ.",
            "action": [
              "Create a detection rule that joins process creation events (Windows Event ID 4688/Sysmon 1) with service status events (Windows Event ID 7036) on Hostname within a 15-second window. Alert if: (a) ProcessName is 'sc.exe', 'net.exe', 'powershell.exe', or 'taskkill.exe' AND CommandLine contains 'stop' or '/F'; (b) the targeted service name in the command line matches the ServiceName in Event 7036 and is on a maintained list of critical ICS services; AND (c) the initiating user account is not on an approved list of administrative accounts or the event is outside a pre-defined maintenance window.",
              "For each critical ICS service on each host, establish a 90-day baseline of legitimate service stop events (as identified by the symbolic logic but initiated by approved accounts). Profile the user, parent process, and hour of day. For each new service stop event, generate a risk score: +1 if the user has never stopped this service before, +1 if the parent process has never initiated a stop for this service. Alert if the cumulative risk score is 2 or greater, or if the event time falls in the bottom 5th percentile of historical stop times for that service.",
              "Train an Isolation Forest model using features from historical legitimate service stop events (Sysmon Event ID 1), including TF-IDF vectors of the command-line arguments and one-hot encoded parent process names. Deploy the model to score new service stop command-line events in real-time. Generate a high-severity alert if the model assigns an anomaly score in the top 1% of all scores, indicating a highly unusual command structure or parent process, and correlate this with the corresponding service stop event (Windows Event ID 7036)."
            ]
          },
          {
            "description": "A critical ICS service stop event (Windows Event ID 7036) is preceded within a 5-minute window by one or more anomalous inbound network connections to the same host, identified in Zeek conn.log. Anomalies include connections from rare source IPs, use of non-standard remote administration ports, or statistically unusual data transfer volumes.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 7036",
              "Zeek dce_rpc.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at key ingress/egress points of OT network segments, OT DMZ, and span ports monitoring traffic to critical control system hosts (e.g., EWS, HMIs, Historians).",
            "action": [
              "Upon detecting a critical service stop (Windows Event ID 7036), query Zeek conn.log and dce_rpc.log for events where the `id.resp_h` matches the host's IP in the 5 minutes prior. Alert if: (a) `id.orig_h` is from an untrusted or non-corporate IP space; (b) `id.resp_p` is a remote administration port (e.g., 3389, 5985, 445) and `id.orig_h` is not a designated administrative jump host; OR (c) a corresponding dce_rpc.log event shows a Service Control Manager ('scmr') operation.",
              "For each critical host, maintain a 30-day rolling baseline from Zeek conn.log of: (a) the frequency distribution of inbound source IPs (`id.orig_h`), and (b) the 95th percentile for connection bytes (`orig_bytes` + `resp_bytes`). When a service stop (Event ID 7036) occurs, analyze inbound connections in the prior 5 minutes. Alert if any preceding connection has a source IP in the bottom 5% of historical frequency or has a total byte count exceeding the 95th percentile baseline for that host.",
              "For each critical host, train an autoencoder neural network on feature vectors from 60 days of its historical Zeek conn.log data (features: protocol, duration, orig_bytes, resp_bytes, conn_state). When a service stop (Event ID 7036) occurs, process connection logs from the preceding 5 minutes through the trained model. Generate a high-severity alert if any connection produces a reconstruction error in the 99th percentile of historical errors, indicating it is highly anomalous compared to the learned normal network behavior for that host."
            ]
          },
          {
            "description": "A critical ICS service enters a 'stopped' state (Windows Event ID 7036), but this event is not preceded by any corresponding service stop command (Windows Event ID 4688/Sysmon 1) or a service crash event (Windows Event ID 7034) on the same host within a 60-second window. This lack of correlated events suggests a non-standard termination method, such as a direct API call from a malicious process.",
            "data_sources": [
              "Windows Event ID 7036",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 7034"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint logging on critical ICS assets including Engineering Workstations (EWS), Human Machine Interfaces (HMIs), Historian Servers, OPC Servers and other critical application servers.",
            "action": [
              "Create a rule that triggers on a Windows Event ID 7036 for a critical ICS service entering a 'stopped' state. Perform a negative lookbehind search on the same host for the preceding 60 seconds. Generate a high-severity alert if there is NO corresponding process creation (Event ID 4688/Sysmon 1) with a service stop command line AND NO corresponding service crash event (Event ID 7034) for the same service name.",
              "For each critical ICS service, establish a 30-day baseline for the hourly count of 'spontaneous' stops (as defined by the symbolic logic). Calculate the mean and standard deviation of these stops per hour. Generate a medium-severity alert if the count of spontaneous stops in any given hour exceeds the historical mean by more than 3 standard deviations (a Z-score > 3), indicating an abnormal burst of unexplained service terminations.",
              "For each critical service, train a time-series forecasting model (e.g., SARIMA) on the historical hourly count of 'spontaneous' stops to learn its normal operational rhythm, including daily or weekly seasonality. Compare the real-time hourly count against the model's forecast. Generate a high-severity alert if the actual count falls outside the model's 99% confidence interval, indicating a statistically significant deviation from the expected number of unexplained stops."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]