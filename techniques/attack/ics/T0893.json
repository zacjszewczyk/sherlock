[
  {
    "information_requirement": "Is an adversary collecting sensitive project files or configuration data from our ICS assets? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0807",
        "name": "Command-Line Interface",
        "evidence": [
          {
            "description": "Evidence of local data collection is present when a command-line interpreter (`cmd.exe`, `powershell.exe`) executes file system enumeration or data movement commands (`dir`, `copy`, `type`, `xcopy`, `robocopy`, `findstr`, `certutil`, `bitsadmin`) targeting directories known to contain critical ICS data or files with sensitive extensions (e.g., `.ACD`, `.L5K`, `.SCX`, `.HMI`, `.cfg`, `.bak`, `.sql`). This activity is confirmed as malicious when it meets several criteria simultaneously: the count of unique sensitive files accessed by a user or process within a 5-minute window exceeds the 99th percentile of their established baseline; the command is followed by the invocation of an archiving utility (`tar`, `zip`, `7z`); and the parent process is not on an approved whitelist (e.g., the command originates from a web server process or Microsoft Office application instead of `explorer.exe`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5145",
              "Zeek conn.log",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Data Historians, Asset Management Servers, Process Control Servers, File Shares hosting ICS project files (e.g., .ACD, .L5K, .SCX, .HMI), and Jump Servers providing access to the OT network.",
            "action": [
              "Create a correlation rule in the SIEM that triggers an alert when a Windows Event ID 4688, showing the launch of `cmd.exe` or `powershell.exe`, is observed with a command line containing file access keywords (`dir`, `copy`, `type`, `xcopy`, etc.) and a target path matching a list of sensitive ICS directories or file extensions (`.ACD`, `.L5K`, etc.). The alert's severity is escalated if this event is followed within 60 seconds by a Windows Event ID 5145 from the same host, showing access to a file on a designated sensitive file share, and the parent process in the initial Event 4688 is not `explorer.exe` or another whitelisted administrative tool.",
              "For each user and host combination in the NAI, ingest Windows Event ID 5145 and Zeek `smb_files.log` to establish a 30-day baseline of hourly activity. Profile two key metrics: 1) the count of unique sensitive ICS files accessed, and 2) the total volume of data read from sensitive file shares. Calculate a composite risk score for each user by converting their hourly metrics into z-scores against their individual baseline. An alert is generated when a user's composite score (e.g., the sum of the two z-scores) exceeds a set threshold (e.g., >4), indicating a statistically significant deviation in both access patterns and data volume.",
              "From Windows Event ID 4688 logs, extract feature vectors for each `cmd.exe` and `powershell.exe` execution, including command-line length, argument count, character entropy, and boolean flags for sensitive keywords and file extensions. Apply the DBSCAN clustering algorithm to this feature set. Analyze the output: small, dense clusters and points classified as noise represent anomalous command-line activity that deviates from established operational patterns and warrant investigation as potential low-and-slow collection. For time-series analysis, apply an Isolation Forest model to the per-hour frequency of file access commands (from Event ID 4688) and data transfer volume (from Zeek `smb_files.log`), using temporal features like hour-of-day and day-of-week. This model can detect sudden, bursty collection activities that might not trigger simple threshold-based alerts."
            ]
          }
        ]
      },
      {
        "technique_id": "T0853",
        "name": "Scripting",
        "evidence": [
          {
            "description": "Evidence of scripted data collection is present when a script (`powershell.exe`, `python.exe`, `wscript.exe`) is executed that reads multiple sensitive ICS project files or configurations (e.g., `.ACD`, `.L5K`, `.SCX`, `.HMI`). The activity is confirmed as malicious if the script's content (e.g., from PowerShell `ScriptBlockText`) exhibits a character entropy score exceeding the 99th percentile of benign scripts, contains functions for data compression (`Compress-Archive`), encoding (`[Convert]::ToBase64String`), or exfiltration (`Invoke-WebRequest`, `System.Net.Sockets.TCPClient`), and is executed by an anomalous parent process (e.g., `svchost.exe`, a web server process) not on an approved administrative whitelist.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Windows Event ID 4103",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek smb_mapping.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Data Historians, Asset Management Servers, Process Control Servers, Configuration Management Servers, and File Servers/Shares containing ICS project or configuration files.",
            "action": [
              "Deploy a SIEM detection rule that correlates a process creation event (Windows Event ID 4688) for a script interpreter (`powershell.exe`, `wscript.exe`) with a corresponding script block log (Windows Event ID 4104 for PowerShell) from the same host within a 5-second window. The rule triggers a high-severity alert if the `ScriptBlockText` contains both a file access cmdlet (`Get-Content`, `Get-ChildItem`) targeting a sensitive ICS file path AND a keyword indicative of data staging or exfiltration, such as `Compress-Archive`, `[Convert]::ToBase64String`, `Invoke-WebRequest`, or `-f` (format operator for obfuscation).",
              "For each script execution captured in Windows Event ID 4104, calculate the character entropy of the `ScriptBlockText`. Maintain a 30-day rolling baseline of entropy scores for all scripts executed in the environment and alert when a script's entropy exceeds the 99.5th percentile. Additionally, for each user, profile the daily count of sensitive file access cmdlet usage (`Get-Content`, etc.). Calculate a 30-day moving average and standard deviation for this count per user, and flag any user whose daily usage exceeds three standard deviations from their personal average, indicating an unusual level of script-based file interaction.",
              "Train a supervised classification model, such as a Random Forest or Gradient Boosting Machine, to distinguish between benign and malicious script executions. Engineer features from Event IDs 4104 and 4688, including: script block length, character entropy, ratio of special characters, count of sensitive ICS-related keywords, count of networking cmdlets (e.g., `Invoke-WebRequest`), and a one-hot encoded vector for the parent process name. Deploy the trained model to score new script executions in near real-time. For relationship analysis, construct a heterogeneous graph where nodes represent users, processes, files, and remote IP addresses. Use graph algorithms to identify anomalous paths, such as a low-reputation user node executing a new script process that accesses multiple high-centrality project file nodes and subsequently creates a connection to a new external IP address node."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]