[
  {
    "information_requirement": "Is an adversary collecting sensitive project files or configuration data from our ICS assets? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0807",
        "name": "Command-Line Interface",
        "evidence": [
          {
            "description": "An anomalous number of file system commands (`dir`, `copy`, `type`, `xcopy`, `robocopy`, `findstr`) are executed by a command-line interpreter (`cmd.exe`, `powershell.exe`) targeting directories known to contain ICS project files or configurations. Anomalous activity is defined as accessing a number of unique sensitive files that exceeds a statistically-derived baseline within a short time window (e.g., 5 minutes), the use of archiving tools (`tar`, `zip`) via command line, or execution by an atypical parent process (e.g., a web server process, Microsoft Office application).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5145",
              "Zeek conn.log",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Process Control Servers, File Shares hosting ICS project files (e.g., .ACD, .L5K, .SCX, .HMI), and Jump Servers providing access to the OT network.",
            "action": "1. Symbolic Logic: Create a SIEM detection rule for Windows Event ID 4688 where `NewProcessName` is `cmd.exe` or `powershell.exe` AND the `CommandLine` field contains file access keywords (`dir`, `copy`, `type`, `xcopy`, `robocopy`, `findstr`) AND targets known sensitive ICS file extensions (`.ACD`, `.L5K`, `.SCX`, `.HMI`, `.XML`, `.INI`, `.CSV`, `.DB`) or directory paths. Escalate the priority if the `ParentProcessName` is not `explorer.exe` or a known administrative tool, or if the process chain originates from a network-facing application.\n2. Statistical Method: For each NAI, ingest Windows Event ID 4688 and 5145 logs to establish a baseline of file access activity. Calculate the 99th percentile for the number of unique sensitive files accessed per user per hour via command-line interpreters. Generate an alert when a user's activity exceeds this threshold. Additionally, monitor the total data volume read from file shares (via Zeek `smb_files.log` or Event ID 5145) and flag any user whose hourly data transfer volume deviates more than 3 standard deviations from their own 30-day moving average.\n3. Machine Learning: Construct a feature vector for each command-line execution (Event ID 4688) that includes command-line length, argument count, character entropy, and presence of sensitive keywords. Use a clustering algorithm like DBSCAN to identify outlier commands that do not belong to established clusters of benign administrative activity. For time-series analysis, ingest process creation logs and use an Isolation Forest model to detect anomalous spikes in the frequency of file access commands, using hour-of-day and day-of-week as temporal features."
          }
        ]
      },
      {
        "technique_id": "T0853",
        "name": "Scripting",
        "evidence": [
          {
            "description": "Execution of a script (`powershell.exe`, `python.exe`, `wscript.exe`) that reads or enumerates multiple files from sensitive ICS directories or targets files with extensions like `.ACD` or `.L5K`. The activity is considered highly anomalous if the script's command line or content has a high entropy score, contains commands to compress data (`Compress-Archive`) or encode data, and is executed by an uncommon parent process (e.g., `svchost.exe`, a web server process).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Windows Event ID 4103",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek smb_mapping.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Process Control Servers, Configuration Management Servers, and File Servers/Shares containing ICS project or configuration files.",
            "action": "1. Symbolic Logic: Create a SIEM rule that correlates a scripting engine process creation (Event ID 4688) with its corresponding script block log (Event ID 4104) within a one-second window. Alert if the `ScriptBlockText` contains both file access cmdlets (`Get-ChildItem`, `Get-Content`) AND keywords for sensitive ICS file extensions or project directories. Escalate priority if the `ScriptBlockText` also contains data compression (`Compress-Archive`) or encoding (`[Convert]::ToBase64String`) functions.\n2. Statistical Method: For each scripting engine, calculate a baseline entropy score for the `CommandLine` field (from Event ID 4688) and the `ScriptBlockText` field (from Event ID 4104) across all NAIs. Trigger an alert when a script's entropy exceeds the 99.5th percentile of its respective baseline, indicating potential obfuscation. Separately, profile the frequency of sensitive file access cmdlet usage per user per day and flag any user whose daily count deviates more than 3 standard deviations from their historical 30-day average.\n3. Machine Learning: Train a supervised classification model (e.g., Random Forest) on labeled benign and malicious script samples. Extract features from Event ID 4104 and 4688, including script block length, entropy, presence of specific cmdlets (e.g., `Invoke-Expression`), parent process name, and command-line arguments. Deploy the model to classify new script executions in near real-time. For relationship analysis, construct a graph where nodes are users, processes, and files, and edges represent access. Use a graph-based anomaly detection algorithm to find unusual subgraphs, such as a user running a script that accesses numerous project files and then initiates a new network connection to an external IP, by correlating Windows events with Zeek `conn.log`."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]