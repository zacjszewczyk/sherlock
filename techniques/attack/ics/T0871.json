[
  {
    "information_requirement": "Is an adversary leveraging native ICS APIs for unauthorized execution on control system devices? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0871",
        "name": "Execution through API",
        "evidence": [
          {
            "description": "An API call targeting a control device (e.g., PLC, RTU) originates from a host not on the approved list of Engineering Workstations or HMIs, or from an unexpected network segment.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The network boundary between the enterprise (Level 4/5) and control system (Level 3) networks, the Process Control Network (Level 2), Engineering Workstations (EWs), and Human-Machine Interfaces (HMIs).",
            "action": "Maintain an asset inventory mapping approved source hosts (EWs, HMIs) to target control devices (PLCs, RTUs). Monitor Zeek conn.log for connections to PLCs/RTUs on specific ICS protocol ports (e.g., Modbus TCP 502, DNP3 20000, S7comm 102). For each connection, check if the source IP (`id.orig_h`) is on the approved list for the destination IP (`id.resp_h`) and its associated port. Alert on any connection from an unauthorized source IP. Correlate the timestamp and connection tuple from Zeek with Windows Event ID 4688 on the identified source host to discover the process that initiated the unauthorized API call."
          },
          {
            "description": "A specific, high-risk API function call (e.g., stop, restart, program download, firmware update) is observed, which deviates from the established operational baseline for the source-destination pair or occurs outside of a scheduled maintenance window.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps on the Process Control Network, particularly at network choke points in front of critical PLCs and controllers.",
            "action": "Utilize Zeek's ICS protocol analyzers to parse function codes from network traffic. Establish a baseline of normal function codes used between specific HMI/EWS and PLC/RTU pairs by calculating the frequency of each function code over a 30-day operational period. Create a high-priority alert list for critical function codes (e.g., 'Stop PLC', 'Program Download', 'Clear Memory'). Alert immediately if a function from this list is observed. For other functions, calculate their rarity (e.g., functions in the 5th percentile of usage) for a given source-destination pair and alert on their use, as they may represent unusual diagnostic or engineering commands."
          },
          {
            "description": "The volume or sequence of API calls from a single source to a single destination exceeds a statistically determined threshold or violates a known operational logic.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The Process Control Network, Historian servers, and Engineering Workstations.",
            "action": "For each source-destination pair communicating over an ICS protocol, establish a baseline for the number of connections per minute in Zeek conn.log. Use a sliding window to calculate the rate of API calls (approximated by connections or protocol-specific log entries). Alert if the rate exceeds a dynamic threshold (e.g., 3 standard deviations above the mean for that specific hour of the day or operational shift). Separately, analyze the sequence of function codes from protocol logs (e.g., Zeek modbus.log). A normal process may be a sequence of 'Read' followed by a single 'Write'. An abnormal sequence, such as multiple 'Write' commands without intermittent 'Reads', could indicate malicious activity. Model valid state transitions and alert on sequences that violate the model."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]