[
  {
    "information_requirement": "Is an adversary leveraging native ICS APIs for unauthorized execution on control system devices? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0871",
        "name": "Execution through API",
        "evidence": [
          {
            "description": "Detection of a TCP/UDP connection from a source IP address not explicitly authorized in the asset inventory to an ICS control device (PLC, RTU, IED) on a standard or non-standard ICS protocol port (e.g., Modbus TCP 502, DNP3 20000, S7comm 102), or from a source IP belonging to an unapproved network subnet as defined by the network segmentation policy.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments containing Engineering Workstations (EWs), Human-Machine Interfaces (HMIs), and critical control devices (PLCs, RTUs) within the Process Control Network (Level 2), and network ingress/egress points between different Purdue Model layers.",
            "action": "First, establish and maintain a comprehensive asset inventory that maps authorized Engineering Workstations (EWs) and Human-Machine Interfaces (HMIs) (source IPs) to their respective control system devices (PLCs, RTUs) and the specific ICS protocol ports (e.g., Modbus TCP 502, DNP3 20000, S7comm 102) they are permitted to communicate with. Configure a SIEM rule to monitor Zeek `conn.log` for any connection where `id.resp_p` (destination port) matches a known ICS protocol port and the `id.orig_h` (source IP) is *not* present in the authorized asset inventory for that `id.resp_h` (destination IP). Immediately alert on such unauthorized connections (Symbolic Logic). For each `id.resp_h` (control device), calculate a 30-day moving average and standard deviation of unique `id.orig_h` (source IPs) observed communicating on ICS protocol ports over hourly windows. Alert if the number of unique source IPs for a given control device in an hour exceeds the mean by 3 standard deviations, indicating an unusual surge in communication sources (Statistical Method). Develop a machine learning model (e.g., an Isolation Forest or One-Class SVM) trained on historical Zeek `conn.log` data to identify anomalous source-destination-port tuples. Feature engineering should include `id.orig_h`, `id.resp_h`, `id.resp_p`, `proto`, and temporal features (hour of day, day of week). Alert when the model flags a connection as an outlier, particularly if it involves an ICS protocol port and a control device (Machine Learning). For any triggered unauthorized connection alert, correlate the Zeek `conn.log` event (timestamp, source IP) with Windows Event ID 4688 (Process Creation) on the source host. Search for processes initiated around the connection time that could have established the network communication, providing context on the execution method."
          },
          {
            "description": "Detection of specific, critical ICS protocol function codes (e.g., Modbus FC 0x05, S7comm 'PLC Stop', DNP3 'Control Operate' with trip/close, IEC 61850 'Block' commands) within network traffic, originating from any source, especially if observed outside of documented maintenance windows or from a source IP not authorized to issue such commands to the destination control device.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps or SPAN ports deployed within the Process Control Network (Level 2) at critical choke points (e.g., in front of safety PLCs, between HMI/EWS and control devices) and on network segments where Engineering Workstations (EWs) and Human-Machine Interfaces (HMIs) reside.",
            "action": "Define a comprehensive list of high-risk ICS protocol function codes (e.g., Modbus FC 0x05/0x06/0x10, S7comm 'PLC Stop', 'Program Download', DNP3 'Control Operate' with trip/close, IEC 61850 'Block' commands) for each critical control device. Configure SIEM rules to immediately alert whenever any of these high-risk function codes are observed in Zeek `modbus.log`, `dnp3.log`, `s7comm.log`, or other relevant protocol logs, regardless of source, especially if outside of scheduled maintenance windows (Symbolic Logic). For each unique source-destination pair (e.g., HMI-PLC), establish a 60-day baseline of the frequency of all observed ICS function codes using Zeek protocol logs. Calculate the Z-score for the occurrence of each function code within a rolling hourly window. Alert when a function code's Z-score for a given pair exceeds a threshold (e.g., 3.0), indicating a statistically significant deviation from its typical usage pattern. Additionally, monitor for function codes that fall within the bottom 5th percentile of historical usage for that specific source-destination pair, alerting on their infrequent appearance (Statistical Method). Implement a sequential anomaly detection model (e.g., a Hidden Markov Model or Recurrent Neural Network) that learns the normal sequence of ICS function calls for critical control processes. Train the model on historical Zeek protocol logs, capturing the order and timing of function codes between specific source-destination pairs. Alert when the observed sequence of function codes deviates significantly from the learned normal patterns, indicating potential manipulation of operational logic (Machine Learning). Correlate any triggered alerts with change management records and maintenance schedules to determine if the observed activity was authorized. Enrich alerts with information about the source and destination devices from the asset inventory."
          },
          {
            "description": "Detection of an anomalous volume (e.g., significantly higher or lower than baseline) of ICS protocol messages or API calls, or an atypical sequence of ICS function codes, observed between an authorized source (e.g., HMI, EWS) and a control device (PLC, RTU), indicating potential automated execution or manipulation of industrial processes.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the Process Control Network (Level 2), particularly those connecting Engineering Workstations (EWs), Human-Machine Interfaces (HMIs), control devices (PLCs, RTUs), and Historian servers (Level 3.5).",
            "action": "For each unique source-destination pair communicating over ICS protocols, establish a 30-day baseline of the average number of Zeek `conn.log` entries (approximating API calls) per 5-minute interval. Calculate the moving average and standard deviation of this rate. Configure an alert if the current 5-minute connection rate for any pair exceeds the baseline mean by 3 standard deviations for that specific time of day and day of week, indicating an unusually high volume of communication (Statistical Method). Develop a machine learning model (e.g., an LSTM or another sequence-based model) to learn the normal operational sequences of ICS function codes (from Zeek `modbus.log`, `dnp3.log`, `s7comm.log`) between critical source-destination pairs. Train the model to predict the next expected function code in a sequence. Alert when the observed function code deviates from the model's high-confidence prediction, indicating a potential violation of operational logic or an unexpected command sequence. For example, multiple 'Write' commands without preceding 'Read' operations could be flagged (Machine Learning). Define a set of 'forbidden' or 'highly suspicious' ICS command sequences based on operational knowledge (e.g., a 'Start' command immediately followed by a 'Stop' command for the same process without intermediate status reads). Implement SIEM rules to detect these exact sequences within a defined short time window (e.g., 30 seconds) in the Zeek protocol logs. Alert on any match, as these could indicate rapid, unauthorized manipulation (Symbolic Logic). Enrich any volume or sequence anomaly alerts with detailed information from the asset inventory, including device type, criticality, and responsible team, to facilitate rapid response."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]