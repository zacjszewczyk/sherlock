[
  {
    "information_requirement": "Is an adversary attempting to discover the communication patterns and device roles within the ICS network? (PIR)",
    "tactic_id": "TA0102",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T0840",
        "name": "Network Connection Enumeration",
        "evidence": [
          {
            "description": "Execution of network enumeration utilities (e.g., netstat.exe, arp.exe, nbtstat.exe, ipconfig.exe, route.exe, Get-NetTCPConnection, Get-NetNeighbor) via process creation events (Windows Event ID 4688) on critical ICS assets. This is particularly suspicious if the parent process is not a standard system utility or approved automation script (e.g., cmd.exe, powershell.exe, wscript.exe, explorer.exe from an interactive logon) or if it occurs outside of documented maintenance windows.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices of critical ICS assets (Engineering Workstations, HMIs, Historian Servers, Data Gateways, Operator Workstations)",
            "action": "1. Symbolic Logic: Query Windows Event ID 4688 logs from critical ICS assets (Engineering Workstations, HMIs, Historian Servers) for process creation events where NewProcessName is one of ['netstat.exe', 'arp.exe', 'nbtstat.exe', 'ipconfig.exe', 'route.exe', 'Get-NetTCPConnection.exe', 'Get-NetNeighbor.exe'] AND ParentProcessName is one of ['cmd.exe', 'powershell.exe', 'wscript.exe', 'explorer.exe'] AND the process is initiated by a non-service account or an account not associated with approved automation. Alert on any matches. 2. Statistical Method: For each unique LogonGuid (user session) and Computer (host), establish a 30-day historical baseline of typical execution times (e.g., hour of day) and frequencies for these network enumeration utilities. Calculate the percentile rank for the current execution count and time relative to its baseline. Alert if the execution count exceeds the 99th percentile or if execution occurs during non-working hours (e.g., 8 PM - 6 AM local time) for that specific host without a documented change request. 3. Machine Learning (Behavioral Anomaly Detection): Train a supervised model using historical Windows Event ID 4688 data to classify 'normal' versus 'anomalous' executions of these utilities. Features could include NewProcessName, ParentProcessName, CommandLine, User, LogonType, ProcessCreationTime_Hour, ProcessCreationTime_DayOfWeek. Flag new executions that are classified as anomalous, especially those with low probability scores for the 'normal' class."
          },
          {
            "description": "An ICS host (e.g., Engineering Workstation, HMI, SCADA Server) initiating a significantly elevated number of new TCP or UDP connections to a diverse set of internal destination IPs or unique destination ports within a short time window (e.g., 3-5 minutes), as identified in Zeek conn.log. This activity is considered anomalous if it deviates substantially from the host's established communication baseline.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS network segments (Process Control Network - PCN), Network choke points between IT and OT networks (DMZ, Purdue Model Zone 3.5), SCADA/DCS networks",
            "action": "1. Symbolic Logic: Query Zeek conn.log for new connections originating from known ICS hosts. Exclude connections associated with explicitly whitelisted asset management tools or vulnerability scanners that operate within documented maintenance windows. Identify source IPs (id.orig_h) with a proto of 'tcp' or 'udp' and a conn_state of 'S0' (SYN sent, no reply) or a high number of 'REJ' (connection refused) states, indicating potential scanning activity. 2. Statistical Method: For each ICS source IP (id.orig_h), calculate the following metrics within a 5-minute sliding window: count of unique destination IPs (id.resp_h), count of unique destination ports (id.resp_p), and the Shannon entropy of destination IPs. Establish a 30-day historical baseline for each metric per source IP. Alert if any of these metrics for a source IP exceeds its 99th percentile or 3 standard deviations from its historical mean. A high entropy of destination IPs (e.g., > 2.0) combined with an elevated count of unique destinations is a strong indicator of enumeration. 3. Machine Learning (Time Series Anomaly Detection): Apply a time series anomaly detection model (e.g., Isolation Forest, Prophet) to the daily or hourly count of unique destination IPs and unique destination ports per ICS source IP over the past 90 days. Flag significant spikes or sustained deviations from the learned normal patterns as potential enumeration, especially for hosts that typically have very stable communication partners."
          },
          {
            "description": "Observation of a source IP address not belonging to the approved list of ICS client devices (e.g., HMIs, SCADA servers, Engineering Workstations) attempting to establish connections to multiple unique destination IPs on known ICS protocol ports (e.g., Modbus TCP 502, DNP3 20000, S7comm 102, EtherNet/IP 44818, OPC UA 4840) within the Process Control Network, as documented in Zeek conn.log.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) subnets containing PLCs, RTUs, and other field controllers, ICS DMZ, Control Server segment",
            "action": "1. Symbolic Logic: Identify all source IPs (id.orig_h) in Zeek conn.log that are not on the approved list of ICS client devices (e.g., HMIs, SCADA servers, Engineering Workstations) for the PCN. For these unapproved source IPs, filter for connections where id.resp_p is one of the known ICS protocol ports: [502 (Modbus TCP), 102 (S7comm), 20000 (DNP3), 44818 (EtherNet/IP), 4840 (OPC UA), 2404 (IEC 60870-5-104)]. Alert on any connection attempts from unapproved source IPs to these ports. 2. Statistical Method: For each unapproved source IP identified in step 1, within a 10-minute sliding window, count the number of unique destination IPs (id.resp_h) and unique destination ports (id.resp_p) it attempts to connect to using ICS protocols. Calculate the Shannon entropy of the id.resp_p values for these connections. Alert if any unapproved source IP attempts to connect to more than 3 unique destination IPs or more than 2 unique ICS protocol ports, or if the entropy of id.resp_p exceeds 1.5, indicating broad scanning for ICS services. 3. Machine Learning (Unsupervised Anomaly Detection): Apply an unsupervised anomaly detection algorithm (e.g., Isolation Forest or One-Class SVM) to Zeek conn.log data originating from non-ICS client hosts within the PCN. Use features such as unique_dest_ips_ics_ports_count, unique_dest_ports_ics_ports_count, total_connection_count_ics_ports, and entropy_of_dest_ports_ics_ports. Flag connections from hosts that are identified as outliers or significant deviations from the learned 'normal' non-ICS client communication patterns as potential enumeration."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]