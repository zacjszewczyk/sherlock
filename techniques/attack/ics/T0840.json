[
  {
    "information_requirement": "Is an adversary attempting to discover the communication patterns and device roles within the ICS network? (PIR)",
    "tactic_id": "TA0102",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T0840",
        "name": "Network Connection Enumeration",
        "evidence": [
          {
            "description": "The execution of a built-in network enumeration utility (e.g., netstat.exe, arp.exe, ipconfig.exe) on a critical ICS asset, where the process is spawned by an interactive user session or a non-standard parent process, or occurs outside of a scheduled maintenance window.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices of critical ICS assets (Engineering Workstations, HMIs, Historian Servers, Data Gateways, Operator Workstations)",
            "action": "1. Symbolic Logic: Create a rule to alert on Windows Event ID 4688 where the 'NewProcessName' is one of ['netstat.exe', 'arp.exe', 'nbtstat.exe', 'ipconfig.exe', 'route.exe'] AND the 'ParentProcessName' is one of ['cmd.exe', 'powershell.exe', 'explorer.exe'] AND the event occurs on a host within the NAI. For PowerShell (Event ID 4104), alert if the script block contains 'Get-NetTCPConnection' or 'Get-NetNeighbor' and is not part of an approved script. 2. Statistical Method: For each host in the NAI, establish a 30-day historical baseline of the hourly execution count for each monitored utility. Calculate the z-score for the current hourly count against this baseline. An alert is triggered if the z-score exceeds a threshold, for example, $$ z > 3 $$, indicating a statistically significant increase in execution frequency. 3. Machine Learning: Train an unsupervised anomaly detection model (e.g., Isolation Forest) using historical Event ID 4688 data from the NAI. Use features such as 'NewProcessName', 'ParentProcessName', 'User', 'LogonType', hour of day, and day of week. Flag any new process execution that the model identifies as an outlier for analyst investigation."
          },
          {
            "description": "An ICS host initiating new TCP or UDP connections to a number of unique internal destination IP addresses or ports that exceeds its established behavioral baseline within a short time window (e.g., 5 minutes).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS network segments (Process Control Network - PCN), Network choke points between IT and OT networks (DMZ, Purdue Model Zone 3.5), SCADA/DCS networks",
            "action": "1. Symbolic Logic: In Zeek conn.log, monitor for a single source IP (id.orig_h) from the NAI connecting to more than 15 unique destination IPs (id.resp_h) on the internal network within a 5-minute window, particularly where the connection state (conn_state) is 'S0' (connection attempt, no reply) or 'REJ' (connection rejected). 2. Statistical Method: For each source host (id.orig_h) in the NAI, create a 30-day baseline of the following metrics calculated in 5-minute windows: a) count of unique destination IPs, b) count of unique destination ports, and c) the Shannon entropy of destination IPs, given by $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$. Trigger an alert if any current metric exceeds the 98th percentile of its historical baseline. 3. Machine Learning: For each critical source host, model the hourly count of unique destination IPs as a time series. Use an algorithm like SARIMA or Prophet to forecast the expected connection count and its confidence interval. Generate an alert if the observed count significantly exceeds the forecasted upper confidence bound, indicating an anomalous spike in network enumeration activity."
          },
          {
            "description": "A device whose IP address is not on the authorized asset allow-list for the Process Control Network (PCN) attempts to establish connections with devices inside the PCN using common ICS protocols.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) subnets containing PLCs, RTUs, and other field controllers, ICS DMZ, Control Server segment",
            "action": "1. Symbolic Logic: Maintain an explicit allow-list of authorized source IP addresses for the PCN. Query Zeek conn.log for any connection where 'id.orig_h' is NOT in the allow-list AND 'id.resp_p' is in the set of common ICS ports [502, 102, 20000, 44818, 4840, 2404]. Any resulting match is a high-fidelity alert for unauthorized communication. 2. Statistical Method: For any source IP not on the PCN allow-list, count the number of unique destination IPs it connects to on ICS ports within a 10-minute window. Trigger an alert if an unapproved source IP attempts to connect to more than 2 unique destination IPs or more than 1 unique ICS port, indicating a targeted scan for control systems. 3. Machine Learning: Create feature vectors for each source host communicating within the NAI, using Zeek conn.log data. Features can include connection count, ratio of ICS to non-ICS ports, number of unique destination hosts, and average data volume. Use a clustering algorithm like DBSCAN to group hosts into behavioral profiles. Flag any host that is classified as noise/outlier as a potential unauthorized device performing enumeration."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]