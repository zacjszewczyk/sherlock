[
  {
    "information_requirement": "Is an adversary performing automated collection of data from our ICS/OT environment? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0802",
        "name": "Automated Collection",
        "evidence": [
          {
            "description": "A single source IP address initiates successful TCP connections to more than 20 distinct destination IP addresses within the ICS network over a 5-minute rolling window, where the number of distinct destinations exceeds the 99th percentile of baseline connections for that source. This activity is not associated with known legitimate polling or HMI refresh cycles.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps/SPAN ports on ICS network segments (Control Network, Process Network, DMZ)",
            "action": "1. **Statistical (Baseline Deviation):** For all `Zeek conn.log` entries, identify source IP addresses (`id.orig_h`) connecting to known ICS device IP ranges/subnets. Calculate the number of unique destination IP addresses (`id.resp_h`) and the total connection count for each source IP over a rolling 5-minute window. Establish a dynamic baseline (e.g., using a 7-day historical average plus 3 standard deviations or 99th percentile) for these metrics for each source IP. Generate an alert when a source IP's unique destination count or total connection count exceeds its established baseline. 2. **Symbolic Logic (IOC Match):** Implement a watchlist of known malicious IP addresses or C2 domains associated with ICS threats. If any `Zeek conn.log` entry shows connections to these IPs/domains, generate an immediate high-priority alert. 3. **Machine Learning (Anomaly Detection):** Apply an unsupervised machine learning anomaly detection algorithm (e.g., Isolation Forest or One-Class SVM) to `Zeek conn.log` data, using features such as connection count, unique destination count, protocol distribution, and byte transfer rates per source IP over 5-minute intervals. Train the model on historical 'normal' ICS network traffic. Alert on source IPs identified as anomalous by the model, indicating deviations from learned normal behavior that could signify automated collection."
          },
          {
            "description": "A process creation event (Windows Event ID 4688) on a critical ICS asset (e.g., Engineering Workstation, HMI) where the `New Process Name` or `Command Line` contains known scripting interpreters (e.g., `powershell.exe`, `python.exe`, `wscript.exe`, `cscript.exe`) or unapproved executables, immediately followed by the same source host initiating more than 10 new network connections to 5 or more distinct internal ICS IP addresses within 60 seconds. This combination exceeds the host's normal baseline for new connections following any process creation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host logging agents on Engineering Workstations (EWS), Operator Stations / HMIs, ICS Application Servers; Network taps/SPAN ports near these assets.",
            "action": "1. **Symbolic Logic (Allowlist Deviation):** Establish and maintain a strict allowlist of approved process names and command-line arguments for critical ICS assets (EWS, HMIs) based on `Windows Event ID 4688`. Generate a high-priority alert for any process creation event that deviates from this allowlist or involves known scripting interpreters (e.g., `powershell.exe`, `python.exe`, `wscript.exe`) not explicitly approved for that system. 2. **Statistical (Correlation & Baseline):** For any alert from detection method 1, enrich the event with network connection data from `Zeek conn.log` for the same source host within a 60-second window after the process creation. Calculate the number of new connections and unique destination IPs. Compare these counts against a historical baseline (e.g., 99th percentile) for that host's network activity following *any* process creation. Alert if both the process creation is anomalous AND the subsequent network activity exceeds its baseline, indicating an unusual burst of connections. 3. **Machine Learning (Command Line Entropy & Time Series):** Calculate the Shannon Entropy of the command line arguments for all `Windows Event ID 4688` events on critical ICS assets. Train a machine learning classifier (e.g., Logistic Regression or Random Forest) to distinguish between normal and anomalous command lines based on entropy, length, character sets, and presence of suspicious keywords. Alert on processes identified as anomalous, especially when correlated with an increase in network traffic patterns detected by a time-series anomaly detection algorithm on `Zeek conn.log` for the same host."
          },
          {
            "description": "A single source IP address generates more than 50 successful network logon events (Windows Event ID 4624, Logon Type 3) to a specific ICS server (e.g., OPC, Historian) within a 5-minute window, where the event rate for that source-destination pair exceeds the 99th percentile of the established baseline. This activity is not associated with scheduled administrative tasks or known legitimate applications.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host logging agents on OPC Servers, Data Historians, Domain Controllers servicing the ICS environment; Network taps/SPAN ports near these servers.",
            "action": "1. **Statistical (Rate Anomaly):** For `Windows Event ID 4624` (successful network logon, Logon Type 3) on ICS servers, calculate the rate of successful logons per minute for each unique source IP (`IpAddress`) to destination server. Establish a dynamic baseline (e.g., 99th percentile or mean + 3 standard deviations over 7 days) for this rate for each source-destination pair. Generate an alert if the current rate exceeds the established baseline, indicating a potential brute-force or automated enumeration attempt. 2. **Symbolic Logic (Watchlist/Role-Based Access):** Maintain a watchlist of known compromised accounts or suspicious IP addresses. If `Windows Event ID 4624` events show successful logons by any account on this watchlist, or from any IP on this watchlist, generate an immediate high-priority alert. Additionally, identify logons from accounts not typically used for network access to these specific ICS servers. 3. **Machine Learning (Time Series Forecasting):** Apply a time-series anomaly detection algorithm (e.g., ARIMA, Prophet, or a deep learning approach like LSTMs) to the logon rate data (`Windows Event ID 4624`, Logon Type 3) for each source IP to destination server pair. Train the model on historical logon patterns. Alert when the model detects a statistically significant deviation from the predicted logon rate, indicating a sudden surge or unusual pattern that could signify automated collection activity. Correlate with `Zeek conn.log` to confirm corresponding network traffic volume and protocol usage."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]