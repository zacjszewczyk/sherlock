[
  {
    "information_requirement": "Is an adversary performing automated collection of data from our ICS/OT environment? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0802",
        "name": "Automated Collection",
        "evidence": [
          {
            "description": "A single source IP establishes connections with a number of unique destination IPs on ICS-specific ports (e.g., 502, 102, 44818) that exceeds a statistically-derived baseline (e.g., 99th percentile) within a 5-minute window, and is not associated with an authorized scanner.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps/SPAN ports on ICS network segments (Control Network, Process Network, DMZ), specifically monitoring traffic to/from PLCs, RTUs, and HMIs.",
            "action": [
              "1. Maintain a watchlist of known malicious IPs and an allowlist of authorized network and asset scanners. 2. Query Zeek conn.log for connections where 'id.orig_h' matches the malicious IP watchlist and generate a high-priority alert. 3. Query Zeek conn.log for hosts not on the authorized scanner allowlist connecting to more than 20 unique 'id.resp_h' on common ICS ports (e.g., 502, 102, 44818, 20000, 47808) within a 5-minute window and generate a medium-priority alert.",
              "1. For each 'id.orig_h' in Zeek conn.log, establish a 30-day baseline of the 99th percentile for the count of unique 'id.resp_h' per 5-minute rolling window. 2. In real-time, calculate the current count of unique 'id.resp_h' for each source IP over the last 5 minutes. 3. Generate a medium-priority alert if the current count for a source IP exceeds its 99th percentile baseline, including the source IP, destination count, and baseline value in the alert. 4. As an enrichment, calculate the Shannon entropy of 'id.resp_p' (destination ports) for the anomalous source IP; a high entropy value strengthens the evidence of scanning.",
              "1. Train an unsupervised anomaly detection model (e.g., Isolation Forest) on a 30-day baseline of normal ICS network traffic from Zeek conn.log. 2. Create feature vectors for each 'id.orig_h' per 5-minute window, including: count of unique destination IPs, count of unique destination ports, total connection count, sum of 'orig_bytes', and protocol distribution. 3. Feed new, real-time feature vectors into the model. 4. Generate an alert if the model flags a source IP as anomalous, indicating a deviation from normal network behavior consistent with automated collection."
            ]
          },
          {
            "description": "A process creation event on an ICS asset (EWS, HMI) involving a scripting interpreter or a non-allowlisted executable is immediately followed by a network connection burst from that host to multiple unique ICS devices within 60 seconds.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host logging agents on Engineering Workstations (EWS), Operator Stations / HMIs, and ICS Application Servers; Network taps/SPAN ports positioned to capture traffic originating from these assets.",
            "action": [
              "1. Maintain a strict process allowlist (by 'NewProcessName' and 'CommandLine' hash) for critical ICS assets. 2. Monitor Windows Event ID 4688 for process creations. 3. Generate a high-priority alert if a 'NewProcessName' is not on the allowlist, or if 'CommandLine' contains scripting interpreters (powershell.exe, python.exe, wscript.exe) or known reconnaissance tools (nmap.exe, masscan.exe).",
              "1. Upon a symbolic alert for a suspicious process, trigger a correlated query. 2. Using the timestamp and hostname from the Windows Event ID 4688 alert, query Zeek conn.log for all connections originating from the host's IP within the next 60 seconds. 3. Count the number of unique 'id.resp_h'. 4. Compare this count to a host-specific 99th percentile baseline for post-process-creation network activity. Escalate the initial alert to critical if the baseline is exceeded.",
              "1. Deploy a pre-trained classification model to score the maliciousness of command lines from Windows Event ID 4688 in real-time, based on features like length, entropy, and keyword presence. 2. Concurrently, use a time-series anomaly detection model on Zeek conn.log data to identify sudden spikes in connection counts from individual hosts. 3. Generate a high-confidence alert when the command line classifier flags a process as suspicious AND the network model detects a connection burst from the same host within a 60-second window."
            ]
          },
          {
            "description": "A single user account or source IP generates a number of successful network logon events (Windows Event ID 4624, Logon Type 3) to ICS servers that exceeds 3 standard deviations above the 30-day mean for that source-destination pair within a 10-minute window.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host logging agents on OPC Servers, Data Historians, and Domain Controllers servicing the ICS environment; Network taps/SPAN ports near these servers to correlate logon events with protocol-level traffic.",
            "action": [
              "1. Monitor Windows Event ID 4624 with Logon Type 3 on critical ICS servers (Historians, OPC Servers). 2. Maintain a watchlist of suspicious user accounts and source IPs. Generate a high-priority alert if 'AccountName' or 'IpAddress' in the event matches the watchlist. 3. Generate a medium-priority alert if a successful logon occurs from an account not in an approved Active Directory group for that server, or if a non-service account logs on outside of defined business hours.",
              "1. For each unique source-IP-to-destination-server pair, establish a 30-day baseline (mean and standard deviation) for successful logon counts (Event ID 4624, Type 3) per 10-minute rolling window. 2. In real-time, count the logons for each pair over the last 10 minutes. 3. Generate an alert if the current count exceeds the historical mean by more than 3 standard deviations.",
              "1. Train a time-series forecasting model (e.g., ARIMA) on the aggregated count of successful logons per 10-minute interval for each critical ICS server. 2. In real-time, generate an alert if the observed logon count significantly exceeds the model's forecasted value (i.e., falls outside the 99% prediction interval). 3. Automatically enrich the alert by querying Zeek conn.log for a corresponding increase in ICS protocol traffic (e.g., OPC, S7, Modbus) between the source and destination IPs, confirming the logon activity is being used for data collection."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]