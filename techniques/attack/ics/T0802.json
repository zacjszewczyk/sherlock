[
  {
    "information_requirement": "Is an adversary performing automated collection of data from our ICS/OT environment? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0802",
        "name": "Automated Collection",
        "evidence": [
          {
            "description": "A single source IP address initiates successful TCP connections to more than 20 distinct destination IP addresses within the ICS network over a 5-minute rolling window, where the number of distinct destinations exceeds the 99th percentile of baseline connections for that source. This activity is not associated with known legitimate polling or HMI refresh cycles.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps/SPAN ports on ICS network segments (Control Network, Process Network, DMZ), specifically monitoring traffic to/from PLCs, RTUs, and HMIs.",
            "action": "1. **Statistical (Baseline Deviation):** Query `Zeek conn.log` for all successful TCP connections (`conn_state='SF'`) within defined ICS IP ranges. For each `id.orig_h`, calculate the count of unique `id.resp_h` (destination IPs) and the total connection count over a rolling 5-minute window. Establish a 7-day historical baseline for these metrics, using the 99th percentile for unique destinations and total connections for each `id.orig_h`. Generate an alert when either metric for a given `id.orig_h` consistently exceeds its established 99th percentile baseline. 2. **Symbolic Logic (IOC Match):** Create a lookup table or watchlist of known malicious IP addresses (e.g., from CISA advisories for ICS threats) or suspicious ports (e.g., non-standard OPC ports). Query `Zeek conn.log` to identify any connections where `id.orig_h` or `id.resp_h` matches an entry in the malicious IP watchlist, or where `id.resp_p` indicates an unapproved port for ICS communications. Immediately generate a high-priority alert, including details of the connection and the matched IOC/port. 3. **Machine Learning (Anomaly Detection):** Feed aggregated `Zeek conn.log` features (e.g., 5-minute rolling averages of unique destination IPs, total connections, byte transfer rates, and protocol distribution per `id.orig_h`) into a pre-trained unsupervised anomaly detection model (e.g., Isolation Forest). The model should be trained on historical 'normal' ICS network traffic. If the model outputs an anomaly score exceeding a predefined threshold (e.g., top 1% of scores), generate an alert identifying the `id.orig_h` as potentially performing automated collection."
          },
          {
            "description": "A process creation event (Windows Event ID 4688) on a critical ICS asset (e.g., Engineering Workstation, HMI) where the `New Process Name` or `Command Line` contains known scripting interpreters (e.g., `powershell.exe`, `python.exe`, `wscript.exe`, `cscript.exe`) or unapproved executables, immediately followed by the same source host initiating more than 10 new network connections to 5 or more distinct internal ICS IP addresses within 60 seconds. This combination exceeds the host's normal baseline for new connections following any process creation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host logging agents on Engineering Workstations (EWS), Operator Stations / HMIs, ICS Application Servers; Network taps/SPAN ports near these assets to capture traffic originating from them.",
            "action": "1. **Symbolic Logic (Allowlist Deviation):** On critical ICS assets (Engineering Workstations, HMIs, ICS Application Servers), continuously monitor `Windows Event ID 4688` (Process Creation). Maintain an allowlist of approved `New Process Name` and `Command Line` patterns specific to each asset, established over a 30-day baseline period. Generate a high-priority alert for any process creation event that is not on the allowlist, or if the `Command Line` contains known scripting interpreters (`powershell.exe`, `python.exe`, `wscript.exe`, `cscript.exe`) or unapproved administrative tools without explicit approval. 2. **Statistical (Correlation & Baseline):** For any alert triggered by method 1, correlate the event with `Zeek conn.log` entries where `id.orig_h` matches the host IP of the `Windows Event ID 4688` alert, within a 60-second window *after* the process creation. Calculate the number of unique `id.resp_h` and total successful connections (`conn_state='SF'`) for that host within this window. Establish a 7-day historical baseline (e.g., 99th percentile) for new connections following *any* process creation on that specific host. Alert if both the process creation is anomalous (from method 1) AND the subsequent network activity (unique destinations or total connections) exceeds its established 99th percentile baseline. 3. **Machine Learning (Command Line Anomaly & Network Burst):** For `Windows Event ID 4688` events on critical ICS assets, apply a pre-trained machine learning model (e.g., a Random Forest classifier) that uses features like command line entropy, length, character distribution, and presence of suspicious keywords to classify command lines as normal or anomalous. Simultaneously, use a time-series anomaly detection model on `Zeek conn.log` to identify sudden, significant spikes in connections (e.g., >2 standard deviations from mean) from individual hosts. Generate an alert when an anomalous process creation is detected AND a corresponding network connection burst from the same host is identified within a 60-second window."
          },
          {
            "description": "A single source IP address generates more than 50 successful network logon events (Windows Event ID 4624, Logon Type 3) to a specific ICS server (e.g., OPC, Historian) within a 5-minute window, where the event rate for that source-destination pair exceeds the 99th percentile of the established baseline. This activity is not associated with scheduled administrative tasks or known legitimate applications.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host logging agents on OPC Servers, Data Historians, Domain Controllers servicing the ICS environment; Network taps/SPAN ports near these servers and in the DMZ.",
            "action": "1. **Statistical (Rate Anomaly):** Query `Windows Event ID 4624` (successful network logon, `Logon Type 3`) on critical ICS servers (e.g., OPC, Historian). For each unique combination of `Source IP Address` and `Target Server Name`, calculate the count of successful logons within a 5-minute rolling window. Establish a 7-day historical baseline (e.g., 99th percentile) for this logon rate for each source-destination pair. Generate an alert when the current 5-minute logon rate for any pair exceeds its established 99th percentile baseline. 2. **Symbolic Logic (Watchlist/Role-Based Access):** Maintain a watchlist of known compromised `Account Name` or suspicious `Source IP Address` values. Continuously monitor `Windows Event ID 4624` (Logon Type 3). Generate an immediate high-priority alert if the `Account Name` or `Source IP Address` associated with a successful logon matches an entry on the watchlist. Additionally, identify successful logons to critical ICS servers from `Account Name`s that are not part of an approved role-based access control group for those specific servers, or from `Logon Type`s unexpected for ICS access (e.g., type 10 - RemoteInteractive). 3. **Machine Learning (Time Series Forecasting):** Apply a pre-trained time-series anomaly detection model (e.g., Prophet or ARIMA) to the aggregated logon rate data (successful `Windows Event ID 4624` with `Logon Type 3` per `Source IP Address` to `Target Server Name` over 5-minute intervals). Train the model on historical normal logon patterns. Generate an alert when the model detects a statistically significant deviation from the predicted logon rate, indicating a sudden surge or unusual pattern. Correlate these alerts with `Zeek conn.log` for the same time period and source/destination IPs to confirm corresponding network traffic volume and protocol usage, such as a high volume of `modbus`, `s7comm`, or `opc` traffic."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]