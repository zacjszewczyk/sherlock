[
  {
    "information_requirement": "Has an adversary modified the tasking of an ICS controller to execute unauthorized code? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0821",
        "name": "Modify Controller Tasking",
        "evidence": [
          {
            "description": "A network connection containing a controller logic or configuration modification command (e.g., S7comm 'Download block' (0x1A), 'Write System Data' (0x28); Modbus 'Write Multiple Registers' (0x10); EtherNet/IP 'Write Tag' (0x4B)) is observed where the source IP address is not in the approved Engineering Workstation (EWS) allowlist, or the activity occurs outside a documented maintenance window.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the Process Control Network (PCN) where Engineering Workstations (EWS) communicate with controllers; network taps at the PCN/DMZ boundary; SPAN ports on core switches; Virtual LANs (VLANs) dedicated to Safety Instrumented Systems (SIS) and Basic Process Control Systems (BPCS).",
            "action": [
              "Create a SIEM rule that triggers when a Zeek protocol log detects an ICS modification function code (e.g., `s7comm.log:function` is 'Download block', `modbus.log:func_code` is 16). The rule logic must be: (ICS_Modification_Command_Detected) AND (source_ip NOT IN EWS_Allowlist OR timestamp NOT WITHIN Approved_Maintenance_Windows). On alert, enrich with connection details from `conn.log` (uid, duration, service) and provide the full protocol log entry.",
              "For each unique source IP to destination controller IP pair, establish a 90-day historical baseline of hourly counts for modification-related function codes. Calculate the mean (\\u03bc) and standard deviation (\\u03c3) for these counts. Generate an alert when the command count for any pair in a given hour exceeds \\u03bc + 3\\u03c3 and the raw count is greater than 5, indicating a statistically significant increase in programming activity.",
              "Train a time-series anomaly detection model (e.g., Prophet or LSTM) on the aggregated count of all modification-related function codes across the network, sampled in 15-minute intervals. Include features for raw count, day of week, hour of day, and a binary flag for `is_maintenance_window`. An alert is generated when the model flags a time window as anomalous with a confidence score > 0.99, indicating activity inconsistent with historical operational rhythms."
            ]
          },
          {
            "description": "An ICS engineering software process (e.g., TIA Portal.exe, Studio 5000.exe, ControlLogix Designer.exe) is created on an Engineering Workstation (EWS) by an unauthorized user account, from a suspicious parent process (e.g., powershell.exe, wscript.exe, rundll32.exe), or at an anomalous time, and is immediately followed by a network connection from the EWS to an ICS controller IP address.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4672",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Dedicated Engineering Workstations (EWS); Active Directory Domain Controllers authenticating PCN users; Endpoint Detection and Response (EDR) platforms deployed on EWS hosts.",
            "action": [
              "Create a SIEM correlation rule that monitors for Windows Event ID 4688 (Process Creation) on EWS hosts. The rule triggers if `NewProcessName` matches known ICS software and (`SubjectUserSid` is NOT in the authorized engineers group OR `ParentProcessName` is in a blocklist like ['powershell.exe', 'cmd.exe', 'wscript.exe']). Correlate this with a subsequent Windows Event ID 5156 (WFP Connection Permitted) from the same Process ID to a known controller IP/port within 60 seconds to increase alert fidelity.",
              "For each authorized user, profile the historical frequency of the three-tuple (user, workstation_hostname, hour_of_day) for ICS software execution events (EID 4688). Calculate the probability for each tuple based on 90 days of activity. Generate a medium-severity alert if an execution event occurs with a tuple probability in the bottom 5th percentile (i.e., a rare combination of user, machine, and time), and a high-severity alert if the tuple has never been seen before.",
              "Implement a User Behavior Analytics (UBA) model using an Isolation Forest or Autoencoder. Create a feature vector for each user session on an EWS, including: login time and type (EID 4624); command line length and entropy (EID 4688); parent-child process relationships (EID 4688); special privileges assigned (EID 4672); and count of network connections to controller subnets (EID 5156 or Zeek conn.log). The model assigns an anomaly score to each session; scores exceeding the 99.5th percentile of historical scores indicate a likely compromised account or malicious insider activity."
            ]
          },
          {
            "description": "A discrepancy is detected between a controller's running task configuration and its authoritative baseline, evidenced by a cryptographic hash mismatch. Alternatively, an anomalous volume or sequence of configuration write commands (e.g., S7comm 'Write block', 'Write System Data') is observed on the network, suggesting an unmanaged or malicious change.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Controller configuration backups / 'golden image' repository",
              "Controller internal logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Directly on Programmable Logic Controllers (PLCs) and Distributed Control Systems (DCS); Secure baseline repository or Configuration Management Database (CMDB) storing controller golden images; Network segments carrying configuration traffic between EWS and controllers.",
            "action": [
              "Automate a script to periodically (e.g., every 4 hours) poll critical controllers to retrieve their tasking configuration blocks. For each retrieved configuration, compute its SHA-256 hash. Compare this computed hash against a stored, known-good hash from a secure 'golden image' repository. Generate a critical alert if the hashes do not match. The alert must include the controller IP, timestamp, expected hash, and actual hash.",
              "For each controller, establish a 30-day baseline of the hourly count and Shannon entropy of configuration write commands observed in Zeek logs. Calculate the 98th percentile for both the hourly command count and the hourly entropy. Generate an alert if, for a single controller, the count of change commands in any given hour exceeds its 98th percentile threshold OR the entropy of commands exceeds its 98th percentile, indicating an abnormally high rate or variety of modification activity.",
              "Develop a supervised Random Forest classification model to classify observed configuration changes as 'Benign' or 'Malicious'. Train the model using labeled historical data. Features should include: source IP, user account (if available), type and code of change command, controller ID, size of data block written, target memory address/block number, time of day, day of week, and a binary feature `is_change_ticket_open`. The model will classify new changes in real-time and trigger alerts for any change classified as 'Malicious'."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]