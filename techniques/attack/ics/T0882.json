[
  {
    "information_requirement": "Has the adversary stolen operational information from the ICS environment?",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0882",
        "name": "Theft of Operational Information",
        "evidence": [
          {
            "description": "Hourly data transfer volume from a critical ICS asset (e.g., Engineering Workstation, Data Historian) to an internal or external destination that consistently exceeds a statistically significant baseline (e.g., 99th percentile) or connects to a newly observed, high-entropy, or suspicious domain, indicating bulk data exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "OT-to-IT network gateways, firewalls, Engineering Workstations, Data Historians, DMZ segments, internal network segments hosting critical ICS servers, Internet egress points.",
            "action": "1. **Symbolic Logic (IOC/Keyword):** Query Zeek `conn.log` for connections originating from critical ICS assets (Engineering Workstations, Data Historians) to known malicious IP addresses or domains listed in threat intelligence feeds. Additionally, identify connections to high-entropy domains or domains recently registered (e.g., within the last 30 days) by cross-referencing `dns.log` with WHOIS data or domain registration databases. 2. **Statistical Method (Percentile/Std Dev):** For each critical ICS asset, establish a 30-day baseline of hourly outbound data transfer volume (sum of `orig_bytes` in `conn.log`). Calculate the 99th percentile for each asset's hourly volume. Alert when an asset's current hourly outbound data transfer volume exceeds this 99th percentile. Concurrently, calculate the standard deviation for the count of unique destination IPs per hour for each asset, and alert when this count exceeds 3 standard deviations from the mean. 3. **Machine Learning (Time Series Anomaly Detection):** Apply a time series anomaly detection model (e.g., Isolation Forest, Prophet) to the hourly outbound data volume (`orig_bytes` from `conn.log`) for each critical ICS asset. Train the model on at least 60 days of historical data. Generate an alert when the model identifies a significant anomaly score, indicating a deviation from expected data transfer patterns that could signify exfiltration."
          },
          {
            "description": "Archiving or compression utilities are executed on a critical ICS asset (e.g., Engineering Workstation, ICS Application Server, File Server) with command-line arguments specifying sensitive operational file types (e.g., `.L5K`, `.ACD`, `.hmi`, `.csv`, `.bak`) or known directories containing such files, especially when initiated by an unusual user or at an atypical time.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, ICS Application Servers, File servers hosting project data, SCADA/HMI servers, Historian servers.",
            "action": "1. **Symbolic Logic (IOC/Keyword):** Query Windows Event ID 4688 (Process Creation) on critical ICS assets (Engineering Workstations, ICS Application Servers, File Servers) for `ProcessName` matching known archiving utilities (e.g., `7z.exe`, `rar.exe`, `zip.exe`, `tar.exe`, `WinRAR.exe`, `WinZip.exe`). Within these events, analyze the `CommandLine` field for keywords or file extensions associated with sensitive operational data (e.g., `.L5K`, `.ACD`, `.hmi`, `.gpx`, `.csv`, `.bak`, `config`, `project`, `recipe`, `design`). Alert on any matches. 2. **Statistical Method (Frequency/Baseline):** For each critical ICS asset, establish a 30-day baseline for the frequency of execution of archiving utilities per user. Calculate the daily average and standard deviation. Alert when a user's daily execution count for these utilities exceeds 3 standard deviations from their individual baseline, or if it's the first observed execution of such a utility by that user on that specific asset within the last 90 days. 3. **Machine Learning (Behavioral Anomaly Detection):** Develop a machine learning model (e.g., One-Class SVM or Isolation Forest) trained on historical Windows Event ID 4688 data from critical ICS assets, focusing on process creation events for archiving utilities and their `CommandLine` arguments. The model should learn normal patterns of utility usage (user, time, target directories). Alert when the model identifies a significant anomaly score for such process creations, indicating an unusual or out-of-character staging activity."
          },
          {
            "description": "A user account or automated process on an ICS asset (e.g., Engineering Workstation, File Server) generates an unusually high count of distinct file access events (read/write/delete) for sensitive operational files within a defined short time window (e.g., 15 minutes), significantly exceeding established baselines for that user or role.",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers containing operational design documents, PLC/HMI project repositories, Engineering Workstations, Historian file shares, SCADA client machines.",
            "action": "1. **Symbolic Logic (IOC/Keyword):** Query Windows Event ID 4663 (File System Access) on critical ICS file shares and Engineering Workstations. Filter for `ObjectName` matching known sensitive operational file paths or extensions (e.g., `*.L5K`, `*.ACD`, `*.hmi`, `*.gpx`, `*.scada`, `*config.xml`, `*recipe.json`) and specific `AccessMask` values indicating read or write access. Alert on any access to these critical files by accounts typically not associated with their management (e.g., standard user accounts attempting to access PLC project files). 2. **Statistical Method (Std Dev/Entropy):** For each user and critical ICS asset, establish a 30-day baseline of the average number of *distinct* files accessed per 15-minute window (Windows Event ID 4663). Calculate the mean and standard deviation for this count. Alert when a user's distinct file access count in a 15-minute window exceeds 3 standard deviations above their baseline. Additionally, calculate the Shannon entropy of accessed file extensions within a 15-minute window per user; alert if the entropy score deviates significantly (e.g., 2 standard deviations) from the user's historical average, indicating access to an unusually diverse set of file types. 3. **Machine Learning (User and Entity Behavior Analytics - UEBA):** Implement a UEBA model that profiles normal file access behavior for each user and process on critical ICS assets, based on Windows Event ID 4663 data (considering factors like time of day, day of week, number of unique files, file types, and access patterns). Train the model on at least 90 days of historical data. Generate an alert when the model identifies an access pattern that significantly deviates from the established behavioral profile, indicating a potential insider threat or compromised credential attempting to collect operational data."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]