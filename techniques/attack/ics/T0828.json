[
  {
    "information_requirement": "Have adversary actions resulted in a disruption of critical industrial processes, leading to a loss of productivity and revenue?",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0836",
        "name": "Modify Parameter",
        "evidence": [
          {
            "description": "A critical control system parameter (e.g., Modbus register value, DNP3 point value, EtherNet/IP tag) is observed in Zeek logs (modbus.log, dnp3.log, enip.log) being written to a value that is outside its defined safe operating range (e.g., \u00b110% of its nominal setpoint, or beyond hard-coded safety limits) as specified in engineering documentation, or exhibits a deviation exceeding 3 standard deviations from its 30-day historical mean, and this write operation is not accompanied by a corresponding entry in the change management system or an authorized maintenance schedule.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Control Network segments (Level 1/2) where PLCs, RTUs, and HMIs communicate; Engineering Workstations (EWS) and Operator Stations (HMI) for host logs; Historian Servers and Process Data Archives for historical context.",
            "action": "1. (Symbolic Logic) Identify specific write function codes/messages in Zeek modbus.log, dnp3.log, and enip.log targeting known critical process parameters (e.g., pump speed, valve position, temperature setpoint). Maintain an up-to-date whitelist of authorized source IPs (e.g., specific EWS, HMI) and user accounts (correlating with successful logins in Windows Event ID 4624 on EWS/HMI) permitted to initiate these write operations. Generate an alert for any critical parameter write command originating from a source IP or user account not present on the whitelist. 2. (Statistical Method) For each critical parameter, calculate its historical 5th to 95th percentile operating range and its average modification frequency over a 30-day period from relevant Zeek ICS protocol logs. Trigger an alert if a parameter value is written outside this established percentile range, or if the number of write operations for a specific parameter exceeds 3 standard deviations from its historical 30-day average within a 5-minute rolling window. 3. (Machine Learning) Apply a supervised classification model (e.g., Random Forest or SVM) trained on historical 'normal' ICS parameter value changes and write operations from Zeek logs, enriched with user login data (Windows Event ID 4624) and process creation data (Windows Event ID 4688) from EWS. The model should classify incoming parameter write events as 'normal' or 'anomalous'. Generate an alert when a write operation is classified as anomalous, especially when correlated with unusual process creation or user activity on associated EWS."
          }
        ]
      },
      {
        "technique_id": "T0816",
        "name": "Denial of Service",
        "evidence": [
          {
            "description": "A critical control system device (e.g., PLC, HMI, Historian) exhibits a sustained increase (e.g., >50% above 30-day average) in network response time (e.g., RTT in Zeek conn.log), an abnormally high volume of ingress network traffic (>200% above 30-day average packets/sec from Zeek conn.log) with a high rate of connection attempts (e.g., >100 SYN packets/sec to a single target IP in Zeek tcp.log), or a significant increase in connection failures (e.g., >10% of connections in Zeek conn.log showing 'S0', 'S1', or 'REJ' states), leading to observed loss of view or control as indicated by HMI alarms or process data gaps.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek tcp.log",
              "Zeek udp.log",
              "Zeek icmp.log",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Control Network segments (Level 1/2) for network traffic monitoring; Critical ICS Devices (PLCs, RTUs, HMIs, Historians) for direct network interaction; Gateway devices between IT and OT networks for boundary traffic analysis.",
            "action": "1. (Statistical Method) Using Zeek conn.log, establish a 30-day baseline for the average connection volume (connections per second) and the ratio of failed connections (states 'S0', 'S1', 'REJ') to successful connections ('SF') for each critical ICS device IP. Monitor for any 1-minute rolling window where the connection volume or failure ratio exceeds 3 standard deviations from its established baseline, triggering an alert for potential DoS. 2. (Symbolic Logic) Analyze Zeek tcp.log and udp.log for an abrupt increase in fragmented packets (e.g., ip_frag_offset != 0) or packet sizes exceeding typical MTU to critical ICS devices, or a sustained high volume of traffic (>1000 packets/sec) from a single, unapproved source IP. Specifically, identify patterns indicative of SYN floods (high count of 'S0' states in Zeek conn.log without corresponding 'SF') or UDP floods (high volume of UDP traffic to common service ports from a single source in Zeek udp.log). Alert if traffic volume from an unknown source to a critical device exceeds 1000 packets per second, or if more than 50% of traffic to a critical device is fragmented. 3. (Machine Learning) Implement a time series anomaly detection model (e.g., Prophet or LSTM) on network traffic volume (bytes/packets per second) and connection failure rates to and from critical ICS devices, using Zeek conn.log. Train the model on historical normal operational data (e.g., 90 days). Generate an alert when the model detects an unusual surge or sustained drop in traffic volume or a spike in connection failures that deviates significantly from the predicted pattern, indicating a potential DoS or network disruption. Correlate these network anomalies with Windows Event ID 4697 (Service Installation) on EWS/HMI to detect newly installed services that could be attack tools."
          }
        ]
      },
      {
        "technique_id": "T0855",
        "name": "Unauthorized Command Message",
        "evidence": [
          {
            "description": "A critical command message (e.g., Modbus function code 0x05/0x06 with specific coil/register values for emergency stop, DNP3 freeze/reset commands, EtherNet/IP shutdown requests) directly impacting process operation is observed in Zeek ICS protocol logs (modbus.log, dnp3.log, enip.log), originating from a source IP or user account not present on an authorized whitelist, or occurring outside of established operational hours (e.g., 99th percentile deviation from normal command timing) and without a corresponding entry in the change management system.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Windows Event ID 4624",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and Operator Stations (HMI) for command origination; PLC/RTU Networks and ICS Supervisory Network (Level 2) for command transmission and execution; Authentication Servers for user context.",
            "action": "1. (Symbolic Logic) Identify known critical command messages (e.g., Modbus write commands for emergency stops, DNP3 freeze/reset commands, EtherNet/IP shutdown requests) within Zeek modbus.log, dnp3.log, or enip.log. Maintain a strict whitelist of authorized source IPs (e.g., specific EWS, HMI) and authenticated user accounts (from Windows Event ID 4624) permitted to issue these commands. Alert immediately on any identified critical command originating from a non-whitelisted IP or user, or if the command is observed outside of documented operational schedules. 2. (Statistical Method) Establish a baseline for the frequency and timing of critical command messages from authorized sources over a 30-day period. Calculate the entropy score for the source IPs and command types observed within a 1-hour sliding window. A sudden drop in entropy (e.g., many identical critical commands from a single new source) or commands occurring outside the 99th percentile of normal operational hours for that specific command type should trigger an alert. 3. (Machine Learning) Utilize a supervised machine learning model (e.g., Isolation Forest, One-Class SVM) to profile typical command sequences and user interaction patterns on HMIs and EWS. Train the model using historical Zeek ICS protocol logs combined with Windows Event ID 4624 (successful logins) and 4663 (object access related to HMI applications/configuration files). Generate an alert when a command message or sequence of commands deviates significantly from the established normal operational sequences or user behavior profiles, indicating an anomalous or potentially unauthorized command chain. Prioritize alerts where command messages are correlated with unauthorized file access (Windows Event ID 4663) to critical HMI configuration files."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]