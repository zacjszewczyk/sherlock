[
  {
    "information_requirement": "Is an unauthorized device acting as a master/control server on the ICS network? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0848",
        "name": "Rogue Master",
        "evidence": [
          {
            "description": "Detection of specific ICS protocol write/control function codes (e.g., Modbus function codes 0x05, 0x06, 0x0F, 0x10; DNP3 function code 'WRITE') originating from a source IP address not present in the authoritative whitelist of authorized master servers for the respective ICS protocol, observed in network traffic.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Industrial Demilitarized Zone (IDMZ) network sensors, Process Control Network (PCN) Segments, SCADA/HMI network zone, Control network zones.",
            "action": "1. Symbolic Logic: Maintain an authoritative asset inventory (e.g., CMDB, static lookup table in SIEM) of all authorized master server IP addresses and their associated ICS protocols. Continuously monitor Zeek modbus.log for 'modbus_func' values 0x05, 0x06, 0x0F, 0x10, and Zeek dnp3.log for 'dnp3_func' == 'WRITE'. Filter for these control commands and check if the 'id.orig_h' (source IP) of the command is NOT present in the authoritative master server IP whitelist. Generate a high-severity alert for any such finding, indicating an unauthorized device attempting to issue control commands.\n2. Statistical Method: For all observed control commands (filtered as per symbolic logic), calculate the daily unique count of 'id.orig_h' (source IPs) for each ICS protocol. Establish a 7-day rolling baseline for this unique IP count. Trigger an alert if the daily unique source IP count deviates above the 99th percentile of its baseline. Additionally, alert if any new 'id.orig_h' (not on the authorized list) attempts more than 5 control commands of any type within a 60-second window, suggesting a sudden burst of activity from a potentially rogue master.\n3. Machine Learning: Apply a pre-trained time series anomaly detection model (e.g., Isolation Forest, Prophet) to daily aggregated counts of specific control commands (e.g., Modbus write functions, DNP3 WRITE) from each authorized master IP over a 30-day period. Apply the trained model to new daily aggregates. Alert when the model identifies a new source IP exhibiting control command patterns (volume, frequency, specific function codes) outside the 99th percentile of established baselines for any legitimate master, or when an authorized master IP's command pattern deviates significantly from its own baseline, suggesting impersonation or compromise."
          },
          {
            "description": "Detection of an outstation (e.g., PLC, RTU) initiating a TCP or UDP network connection to a destination IP address and port (specifically Modbus 502/TCP, DNP3 20000/TCP, or other known ICS master service ports) that is not included in its pre-defined, authorized communication whitelist of legitimate master servers, observed in network connection logs.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Industrial Demilitarized Zone (IDMZ) network sensors, Process Control Network (PCN) switch port mirrorings, Individual outstation network segments.",
            "action": "1. Symbolic Logic: Establish and maintain a 'whitelist' of authorized outstation-to-master communication pairs ('id.orig_h' -> 'id.resp_h', 'id.resp_p'). This whitelist should be derived from a 30-day observation period of Zeek conn.log, focusing on connections initiated by outstations to known master-specific ports (e.g., 502/TCP for Modbus, 20000/TCP for DNP3). Generate a high-severity alert for any new 'id.resp_h' (destination IP) observed communicating with an outstation on a master-specific port that is NOT present in the authorized whitelist.\n2. Statistical Method: For each outstation ('id.orig_h'), calculate the daily unique count of destination IP addresses ('id.resp_h') it communicates with on master-specific ports. Establish a 7-day rolling baseline for this metric for each outstation. Trigger an alert if the daily unique destination IP count for any outstation exceeds the 99th percentile of its historical baseline. Additionally, alert if a new destination IP (not in the whitelist) is observed communicating with more than 3 distinct outstations within a 5-minute window on master-specific ports, indicating a potentially new, widespread rogue master attempting to connect to multiple outstations.\n3. Machine Learning: Apply a pre-trained clustering model (e.g., K-Means, DBSCAN) to Zeek conn.log data for outstation-initiated connections on master-specific ports. The model, trained on 60 days of historical data, uses features such as 'id.resp_h', 'id.resp_p', 'proto', 'duration', and 'orig_bytes' to identify clusters representing normal communication patterns. Alert when a new connection from an outstation to a destination IP/port is classified as an outlier or falls into a 'sparse' cluster, indicating a statistically anomalous communication partner, potentially a rogue master."
          },
          {
            "description": "Observation of a designated master server's IP address being associated with a MAC address that does not match its authoritative, pre-defined MAC address, or being associated with multiple distinct MAC addresses within a 5-minute window, indicating ARP spoofing, MAC spoofing, or device impersonation in network traffic.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed Layer 2/3 Industrial Ethernet Switches with port security enabled, The legitimate master servers, Engineering Workstations (EWS) network segments, Industrial firewalls within the process control network.",
            "action": "1. Symbolic Logic: Create and maintain a static, authoritative mapping of critical master server IP addresses to their legitimate MAC addresses (e.g., 'master_ip_1' -> 'master_mac_1'). Continuously monitor Zeek arp.log for 'src_hw' (source MAC) and 'src_ip' (source IP), and Zeek conn.log for 'id.orig_h' (source IP) and 'id.orig_l2_addr' (source MAC). Generate a high-severity alert if a master server's IP address ('src_ip' or 'id.orig_h') is observed to be associated with a MAC address that DOES NOT match its authoritative mapping. Also, alert if a master IP is associated with more than one unique MAC address within a 5-minute window in either Zeek arp.log or conn.log.\n2. Statistical Method: For each master server IP address, track the daily unique count of associated MAC addresses observed in Zeek arp.log and Zeek conn.log. Establish a 7-day rolling baseline for this metric. Generate an alert if the unique MAC address count for a master IP exceeds 1 (indicating multiple MACs for one IP) or if it deviates above the 99th percentile of its historical baseline, suggesting an unusual change in network identity. Additionally, calculate the rate of ARP requests/replies for master IPs; alert if this rate exceeds 3 standard deviations from the 30-day average.\n3. Machine Learning: Apply a pre-trained time series anomaly detection model (e.g., Isolation Forest, ARIMA) to Zeek arp.log and Zeek conn.log data for critical master server IP-to-MAC address bindings. The model, trained on 30 days of historical data, learns the expected MAC address for each master IP and its typical ARP activity. Generate an alert when the model detects a statistically significant change in the MAC address associated with a master IP, or a sudden, anomalous increase (e.g., 3 standard deviations above baseline) in the rate of ARP requests/replies for a master IP from different MAC addresses, indicating potential ARP cache poisoning or a rogue device attempting to take over."
          },
          {
            "description": "Detection of a critical control system master service on a designated Windows-based master server transitioning to a 'stopped' state (Windows Event ID 7036, 'Service Status: stopped') outside of a documented, approved maintenance window, or without explicit and authorized administrative action, indicating potential malicious shutdown or disruption.",
            "data_sources": [
              "Windows Event ID 7036 (Service Control Manager)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Windows Event Log collection for SCADA/HMI servers, Primary and backup Windows-based master/control servers, Any HMI/SCADA workstations running critical master components.",
            "action": "1. Symbolic Logic: On all Windows-based master servers, ensure logging captures Windows Event ID 7036 for service state changes. Identify the exact service names for critical master control applications (e.g., 'Rockwell FactoryTalk HMI Server', 'Siemens WinCC Runtime', 'OSISoft PI Data Archive'). Create a SIEM rule to alert with high severity if any of these specific services report a 'Service Status' of 'Stopped' and the 'Event ID' is 7036. Cross-reference this with an approved, scheduled maintenance window lookup table to filter out planned outages. Alert if the event occurs outside these windows.\n2. Statistical Method: For each critical master service, establish a 30-day rolling baseline of its normal operational state, specifically tracking the daily frequency and total duration of 'stopped' events. Calculate the average daily duration a service is in a 'stopped' state. Generate an alert if a service's 'stopped' duration exceeds the 99th percentile of its historical average, or if the frequency of 'stopped' events increases by a statistically significant margin (e.g., 3 standard deviations above the mean) within a 24-hour period, indicating abnormal service instability or malicious shutdown attempts.\n3. Machine Learning: Apply a pre-trained multi-class classification model (e.g., Random Forest, SVM) to new Windows Event ID 7036 occurrences on critical master servers. The model, trained on historical data, uses features like 'Service Name', 'Service Status', 'User', 'Time of Day', and 'Day of Week' to classify service stop events into 'normal stop', 'planned stop', or 'unplanned stop'. An alert should be triggered with high confidence for events classified as 'unplanned stop', especially if associated with unusual user accounts or occurring during non-operational hours, suggesting an adversary-induced service disruption."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]