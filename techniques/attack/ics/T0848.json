[
  {
    "information_requirement": "Is an unauthorized device acting as a master or control server on the ICS network? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0848",
        "name": "Rogue Master",
        "evidence": [
          {
            "description": "An IP address not on the authoritative master server whitelist sends ICS write/control commands (e.g., Modbus function codes 5, 6, 15, 16; DNP3 function code 'WRITE') over the network.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network TAPs or SPAN ports on switches within the Process Control Network (PCN), specifically monitoring traffic to and from PLCs and RTUs, and at the boundary between the PCN and the Industrial DMZ.",
            "action": "1. Symbolic Logic: Maintain an authoritative asset inventory (e.g., in a SIEM watchlist or lookup file) of all authorized master server IP addresses. Create a detection rule that continuously monitors Zeek modbus.log for events where `func` is one of `Write Single Coil` (5), `Write Single Register` (6), `Write Multiple Coils` (15), or `Write Multiple Registers` (16), and dnp3.log for events where `func_name` is `WRITE`. The rule must trigger a high-severity alert if the source IP (`id.orig_h`) of such a command is not present in the authorized master server IP list.\n2. Statistical Method: For all observed ICS write commands, calculate the hourly count of unique source IPs (`id.orig_h`) not on the authorized master list. Establish a 30-day rolling baseline (mean and standard deviation) for this count. Trigger a medium-severity alert if the hourly count exceeds 3 standard deviations above the mean. Additionally, create a high-severity alert if any single unauthorized IP sends more than 5 write commands within a 60-second window, suggesting a targeted attack from a single rogue device.\n3. Machine Learning: Use a time series anomaly detection model (e.g., Isolation Forest) trained on historical data (e.g., 90 days) of write command volumes, frequencies, and function code distributions per authorized master IP. Continuously apply the model to live traffic. Generate a high-severity alert when the model flags a new, unauthorized source IP exhibiting command patterns that are statistical outliers compared to the learned normal behavior of legitimate masters."
          },
          {
            "description": "An outstation (e.g., PLC, RTU) initiates a network connection to an IP address that is not on its pre-approved list of master servers, specifically on common ICS ports (e.g., 502/TCP, 20000/TCP).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors (TAPs/SPANs) monitoring traffic from network segments containing outstations like PLCs and RTUs, and on core switches within the Process Control Network (PCN).",
            "action": "1. Symbolic Logic: For each outstation IP address, maintain a strict whitelist of authorized destination master IP addresses and ports it is allowed to communicate with. Create a detection rule that monitors Zeek conn.log and generates a high-severity alert for any connection initiated by a known outstation IP to a destination IP/port pair not on its specific whitelist, particularly for ports like 502/TCP (Modbus) or 20000/TCP (DNP3).\n2. Statistical Method: For each outstation IP, establish a baseline of its communication 'fan-out' by calculating the rolling 7-day average of unique destination IPs it connects to on ICS ports. Generate a medium-severity alert if the daily count of unique destination IPs for any outstation exceeds 3 standard deviations from its baseline, detecting an outstation suddenly communicating with an abnormally high number of new potential masters.\n3. Machine Learning: Apply an unsupervised clustering model (e.g., DBSCAN) to Zeek conn.log data, using features such as `id.orig_h`, `id.resp_h`, `id.resp_p`, and `proto`. Train the model on 30-60 days of data to learn normal communication clusters. Score new connections against this model. Connections that are classified as outliers or noise points by the model represent anomalous communication paths and should generate a medium-severity alert, flagging potential connections to a rogue master."
          },
          {
            "description": "A master server's IP address is observed in network traffic with a MAC address that does not match its known, authoritative MAC address, or the IP is seen flapping between multiple MAC addresses.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek arp.log",
              "Zeek dhcp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring Layer 2 traffic on all subnets containing critical ICS assets, particularly the subnet of the primary and backup master servers. Data can also be sourced from ARP tables on managed switches and routers within the PCN.",
            "action": "1. Symbolic Logic: Maintain a static, authoritative IP-to-MAC address mapping for all critical master servers in a SIEM lookup file. Create a detection rule that monitors Zeek arp.log and conn.log. Generate a critical-severity alert if a packet is observed where a master server's IP (`src_ip` in arp.log, `id.orig_h` or `id.resp_h` in conn.log) is associated with a MAC address (`src_hw` in arp.log, `id.orig_l2_addr` or `id.resp_l2_addr` in conn.log) that does not match the authoritative mapping.\n2. Statistical Method: For each master server IP, track the number of unique MAC addresses associated with it over a 5-minute window. Generate a high-severity alert if this count is greater than 1. Additionally, calculate the entropy of the `src_hw` field in Zeek arp.log for ARP replies concerning the master's IP. A sudden spike in entropy from a baseline of zero indicates potential ARP cache poisoning attempts from multiple sources.\n3. Machine Learning: Use a time series anomaly detection model to monitor the rate of ARP requests and replies for each master server's IP. Train the model on historical Zeek arp.log data to learn the normal baseline of ARP activity. A sudden, anomalous spike in ARP traffic volume (e.g., exceeding the 99th percentile of the predicted range) for a master's IP can indicate an adversary attempting to poison ARP caches and should generate a high-severity alert."
          },
          {
            "description": "A critical master server software service (e.g., HMI server, data historian) on a Windows host enters a 'stopped' state outside of a scheduled maintenance window.",
            "data_sources": [
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Windows Event Log collection for SCADA/HMI servers, Primary and backup Windows-based master/control servers, Any HMI/SCADA workstations running critical master components.",
            "action": "1. Symbolic Logic: Maintain a list of critical service names for all master servers (e.g., 'FactoryTalk HMI Server', 'WinCC Runtime'). Create a SIEM rule to generate a high-severity alert whenever a Windows Event ID 7036 is logged for one of these services where the new state is 'stopped'. Correlate this alert with a maintenance calendar API or lookup file to suppress alerts for planned downtime.\n2. Statistical Method: For each critical service, establish a 30-day baseline for the frequency of stop events (Event ID 7036). The expected baseline should be near zero for a stable system. Generate a high-severity alert if the count of stop events in a 24-hour period is greater than 1, or exceeds 3 standard deviations above its long-term mean, indicating unusual service instability.\n3. Machine Learning: Use a sequence analysis model or correlation rule engine. Train the model to recognize malicious event sequences, such as a suspicious login (Event ID 4624 from a rare IP) or remote process creation (Event ID 4688) immediately preceding a critical service stop (Event ID 7036). Generate a critical-severity alert when a service stop is part of a sequence of events flagged as anomalous or malicious by the model, indicating a targeted shutdown."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]