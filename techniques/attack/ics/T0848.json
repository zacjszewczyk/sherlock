[
  {
    "information_requirement": "Is an unauthorized device acting as a master/control server on the ICS network? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0848",
        "name": "Rogue Master",
        "evidence": [
          {
            "description": "Observation of control commands (e.g., Modbus function code 0x05 Write Single Coil, DNP3 control relay output block, or similar write functions in other ICS protocols) originating from an IP address that is not explicitly defined in the authoritative asset inventory as a legitimate master server.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS network segments hosting master servers, outstations (PLCs, RTUs), and protocol gateways. This includes the SCADA/HMI network zone and control network zones.",
            "action": "1. Symbolic Logic: Maintain an authoritative asset inventory (e.g., CMDB, static lookup table in SIEM) of all authorized master server IP addresses. Continuously monitor Zeek modbus.log for 'modbus_func' values 0x05, 0x06, 0x0F, 0x10, and Zeek dnp3.log for 'dnp3_func' == 'WRITE'. Filter for these control commands and check if the 'id.orig_h' (source IP) of the command is NOT present in the authoritative master server IP list. Generate a high-severity alert for any such finding, indicating an unauthorized device attempting to issue control commands.\n2. Statistical Method: For all observed control commands (filtered as above), calculate the daily unique count of 'id.orig_h' (source IPs). Establish a 7-day rolling baseline for this unique IP count. Trigger an alert if the daily unique source IP count deviates above the 99th percentile of the baseline. Additionally, alert if any new 'id.orig_h' (not on the authorized list) attempts more than 5 control commands within a 60-second window, suggesting a sudden burst of activity from a potentially rogue master.\n3. Machine Learning: Train a time series anomaly detection model on the volume, frequency, and specific 'modbus_func'/'dnp3_func' types of control commands originating from each known master server over a 30-day period. Apply this model to incoming ICS protocol logs. Generate an alert if a source IP (especially an unknown one) exhibits a control command pattern (e.g., sequence of commands, volume changes, specific function codes) that significantly deviates from established normal operational baselines for legitimate masters, indicating a potential rogue master attempting to mimic or disrupt operations."
          },
          {
            "description": "An outstation (e.g., PLC, RTU) establishes a network connection (TCP/UDP) to a destination IP address and port that is not part of its pre-defined, authorized communication baseline with legitimate master servers. This specifically focuses on connections initiated by outstations to known master service ports (e.g., Modbus 502/TCP, DNP3 20000/TCP).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic ingress/egress points for the process control network, including the DMZ separating IT from OT, and individual outstation network segments.",
            "action": "1. Symbolic Logic: Establish and maintain a 'whitelist' of authorized outstation-to-master communication pairs ('id.orig_h' -> 'id.resp_h', 'id.resp_p'). This whitelist should be derived from a 30-day observation period of Zeek conn.log, focusing on connections initiated by outstations to known master-specific ports (e.g., 502/TCP for Modbus, 20000/TCP for DNP3). Generate a high-severity alert for any new 'id.resp_h' (destination IP) observed communicating with an outstation on a master-specific port that is NOT present in the authorized whitelist.\n2. Statistical Method: For each outstation ('id.orig_h'), calculate the daily unique count of destination IP addresses ('id.resp_h') it communicates with on master-specific ports. Establish a 7-day rolling baseline for this metric for each outstation. Trigger an alert if the daily unique destination IP count for any outstation exceeds the 99th percentile of its historical baseline. Additionally, alert if a new destination IP (not in the whitelist) is observed communicating with more than 3 distinct outstations within a 5-minute window, indicating a potentially new, widespread rogue master attempting to connect to multiple outstations.\n3. Machine Learning: Apply a clustering algorithm (e.g., K-Means or DBSCAN) to Zeek conn.log data for outstation-initiated connections on master-specific ports. Use features such as 'id.resp_h', 'id.resp_p', 'proto', 'duration', and 'orig_bytes'. Train the model on historical data (e.g., 60 days) to identify clusters representing normal communication patterns. Flag any new connection from an outstation to a destination IP/port that falls into a 'sparse' or 'outlier' cluster, indicating a highly unusual communication partner, potentially a rogue master."
          },
          {
            "description": "A designated master server's IP address is observed to be associated with a new or unauthorized MAC address in network traffic, or with multiple distinct MAC addresses simultaneously, indicating potential ARP spoofing, MAC spoofing, or device impersonation.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The legitimate master servers, Engineering Workstations (EWS), network switches, and industrial firewalls within the process control network.",
            "action": "1. Symbolic Logic: Create and maintain a static, authoritative mapping of critical master server IP addresses to their legitimate MAC addresses (e.g., 'master_ip_1' -> 'master_mac_1'). Continuously monitor Zeek arp.log for 'src_hw' (source MAC) and 'src_ip' (source IP), and Zeek conn.log for 'id.orig_h' (source IP) and 'id.orig_l2_addr' (source MAC). Generate a high-severity alert if a master server's IP address ('src_ip' or 'id.orig_h') is observed to be associated with a MAC address that DOES NOT match its authoritative mapping. Also, alert if a master IP is associated with more than one unique MAC address within a 5-minute window.\n2. Statistical Method: For each master server IP address, track the daily unique count of associated MAC addresses observed in Zeek arp.log and conn.log. Establish a 7-day rolling baseline for this metric. Generate an alert if the unique MAC address count for a master IP exceeds 1 (indicating multiple MACs for one IP) or if it deviates from the 99th percentile of its historical baseline, suggesting an unusual change in network identity. Additionally, calculate the rate of ARP requests/replies for master IPs; alert if this rate exceeds 3 standard deviations from the 30-day average.\n3. Machine Learning: Train a time series anomaly detection model on the frequency and consistency of IP-to-MAC address bindings for critical master servers over a 30-day period using Zeek arp.log and conn.log. The model should learn the expected MAC address for each master IP and its typical ARP activity. Generate an alert when the model detects a statistically significant change in the MAC address associated with a master IP, or a sudden, anomalous increase in the rate of ARP requests/replies for a master IP from different MAC addresses, indicating potential ARP cache poisoning or a rogue device attempting to take over."
          },
          {
            "description": "A critical control system master service on a designated Windows-based master server transitions to a 'stopped' state (or fails to start) outside of a documented and approved maintenance window, or without explicit and authorized administrative action.",
            "data_sources": [
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Primary and backup Windows-based master/control servers, and any HMI/SCADA workstations running critical master components.",
            "action": "1. Symbolic Logic: On all Windows-based master servers, ensure logging captures Windows Event ID 7036 (Service Control Manager) for service state changes. Identify the exact service names for critical master control applications (e.g., 'Rockwell FactoryTalk HMI Server', 'Siemens WinCC Runtime', 'OSISoft PI Data Archive'). Create a SIEM rule to alert with high severity if any of these specific services report a 'Service Status' of 'Stopped' (or 'Stop Pending', 'Failure') and the 'Event ID' is 7036. Cross-reference this with an approved, scheduled maintenance window lookup table to filter out planned outages. Alert if the event occurs outside these windows.\n2. Statistical Method: For each critical master service, establish a 30-day rolling baseline of its normal operational state, specifically tracking the daily frequency and duration of 'stopped' events. Calculate the average daily duration a service is in a 'stopped' state. Generate an alert if a service's 'stopped' duration exceeds the 99th percentile of its historical average, or if the frequency of 'stopped' events increases by a statistically significant margin (e.g., 3 standard deviations above the mean) within a 24-hour period, indicating abnormal service instability or malicious shutdown attempts.\n3. Machine Learning: Implement a multi-class classification model (e.g., Random Forest or SVM) trained on historical Windows Event ID 7036 data for critical master services. Use features such as 'Service Name', 'Service Status', 'User', 'Time of Day', and 'Day of Week' (extracted from event timestamps). Label historical events as 'normal stop', 'planned stop', or 'unplanned stop'. Deploy the model to classify new service stop events. An alert should be triggered for events classified as 'unplanned stop' with high confidence, especially if associated with unusual user accounts or occurring during non-operational hours, suggesting an adversary-induced service disruption."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]