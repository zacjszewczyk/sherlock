[
  {
    "information_requirement": "Is an adversary executing unauthorized code on critical ICS components (e.g., EWS, HMI) by manipulating legitimate industrial processes? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0874",
        "name": "Hooking",
        "evidence": [
          {
            "description": "A critical ICS process (e.g., 'HMIRuntime.exe', 'RSLogix.exe') loads a DLL that meets one or more of the following criteria: the DLL's signature is invalid or it is unsigned; its file path originates from a user-writable or temporary directory (e.g., C:\\ProgramData, C:\\Users\\*\\AppData\\); or its hash is statistically rare, appearing in the bottom 1st percentile of all DLLs loaded across the ICS environment in the last 30 days.",
            "data_sources": [
              "Windows Event ID 7 (Sysmon - Image Loaded)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Operator Stations, Process Control Servers (e.g., Historians, Domain Controllers in the PCN)",
            "action": [
              "Query for Windows Event ID 7 where the parent process 'Image' is a known critical ICS application. Generate an alert if the loaded module ('ImageLoaded') matches any of these conditions: a) 'Signed' is 'false' or 'SignatureStatus' is 'invalid', b) the 'ImageLoaded' path is not in a pre-defined allowlist of DLL paths for that parent process, or c) the 'ImageLoaded' path matches a blocklist of suspicious directories like 'C:\\Windows\\Temp' or 'C:\\Users\\*\\Downloads'.",
              "For all Windows Event ID 7 events associated with critical ICS processes, calculate the 30-day prevalence of each 'ImageLoadedHash' across all ICS hosts. Alert if a newly loaded module's hash falls below a 1st percentile threshold. Separately, calculate the Shannon entropy of the 'ImageLoaded' file path string; alert if the entropy value exceeds 3 standard deviations from the mean entropy calculated for that process's legitimate DLLs, suggesting an obfuscated or randomized path.",
              "Train an unsupervised anomaly detection model (e.g., Isolation Forest) on historical Windows Event ID 7 data for critical ICS processes. Use features such as 'ImageLoaded' path characteristics (e.g., directory depth, entropy), 'ImageLoadedHash' (as a categorical feature), 'Signed' and 'SignatureStatus' values, and the time of day. The model will create a baseline of normal module loading behavior. Generate an alert when a new module load event is flagged as a high-scoring anomaly, indicating a significant deviation from the established normal profile."
            ]
          },
          {
            "description": "A critical ICS process, potentially after being hooked, initiates a network connection to a destination IP, port, or DNS domain that has not been previously observed for that specific process. This indicates a potential command and control (C2) channel or data exfiltration.",
            "data_sources": [
              "Windows Event ID 3 (Sysmon - Network Connection)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) Segments, EWS, HMIs, Historian Servers, Network Gateways",
            "action": [
              "Correlate Windows Event ID 3 (Sysmon) and Zeek conn.log data to identify network connections from critical ICS processes. Alert if the 'DestinationIp' or 'DestinationPort' is not on an established allowlist for that process. Concurrently, monitor Zeek dns.log for queries originating from ICS assets and match the 'query' field against a threat intelligence feed of known malicious domains, alerting on any match.",
              "For each critical ICS process, build a 90-day baseline of unique 'DestinationIp' and 'DestinationPort' pairs from Zeek conn.log and Windows Event ID 3. Alert when a new connection is made to an IP or port that falls into the bottom 1st percentile of frequency for that process. Prioritize alerts for connections to external IP addresses not associated with known vendors or cloud services.",
              "Deploy an autoencoder model trained on historical, correlated network data (Sysmon Event ID 3, Zeek conn.log, Zeek dns.log) for each critical ICS process. Use features like 'DestinationIp', 'DestinationPort', 'Protocol', byte counts ('orig_bytes', 'resp_bytes'), and connection duration. The model will learn the normal 'shape' of network traffic. Alert when a new connection produces a high reconstruction error, indicating it does not conform to the learned normal patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary escalating privileges on ICS hosts to gain deeper control over critical industrial processes? (PIR)",
    "tactic_id": "TA0111",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T0874",
        "name": "Hooking",
        "evidence": [
          {
            "description": "A critical ICS process running with high or system-level privileges ('IntegrityLevel' of 'High' or 'System') loads a DLL that is unsigned, has an invalid signature, originates from a non-standard directory, or has a hash that is exceptionally rare (e.g., below the 0.5th percentile of prevalence across the environment). This is a strong indicator of an attempt to inject malicious code into a high-privilege process.",
            "data_sources": [
              "Windows Event ID 7 (Sysmon - Image Loaded)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Domain Controllers, Application Servers within the PCN",
            "action": [
              "Query Windows Event ID 7 for events where the parent process 'Image' is a critical ICS application and its 'IntegrityLevel' is 'High' or 'System'. Maintain a strict allowlist of known-good 'ImageLoadedHash' and 'ImageLoaded' paths for these privileged processes. Generate a high-severity alert for any module load that is not on this strict allowlist or that originates from a user-writable directory.",
              "For module loads into privileged ICS processes (per Sysmon Event ID 7), calculate the prevalence of the 'ImageLoadedHash' across all endpoints over the last 30 days. Alert if the prevalence is below the 0.5th percentile. Additionally, calculate the Shannon entropy of the 'ImageLoaded' path; alert if the entropy is greater than 4.5 or exceeds 3 standard deviations from the mean for that process, suggesting a randomized or obfuscated path used to evade static defenses.",
              "Train a One-Class SVM model specifically on Windows Event ID 7 data for critical ICS processes running with elevated privileges. Features should include 'ImageLoadedHash', 'Signed' status, 'SignatureStatus', and vectorized path features. This specialized model will create a highly constrained baseline for normal behavior. Alert on any new module load classified as an anomaly, as any deviation in privileged process behavior is highly suspect."
            ]
          },
          {
            "description": "A critical ICS process spawns an unexpected child process, such as a command shell ('cmd.exe', 'powershell.exe') or a system utility ('net.exe', 'sc.exe'), which is not part of its normal operational baseline. This is often the result of successful code injection via hooking, where the injected code then executes a new command or tool.",
            "data_sources": [
              "Windows Event ID 7 (Sysmon - Image Loaded)",
              "Windows Event ID 4688 (Security - A process has been created)",
              "Windows Event ID 1 (Sysmon - Process Create)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), HMIs, Historian Servers",
            "action": [
              "Create a correlation rule that triggers when a critical ICS process (Parent) spawns a child process (Child) within 60 seconds of a suspicious module load (Sysmon Event ID 7). The rule should specifically look for child processes on a blocklist, such as 'cmd.exe', 'powershell.exe', 'wmic.exe', 'rundll32.exe', or 'net.exe'. Alert on this chained sequence of events, providing details from both the module load and the process creation.",
              "For each critical ICS parent process, establish a baseline of normal child processes using Sysmon Event ID 1 data over 90 days. For each new parent-child relationship, calculate a rarity score based on the child process name and the command-line arguments. Alert if the child process name is not in the baseline or if the Jaccard distance between the new command-line arguments and the baseline arguments for that child process exceeds a threshold (e.g., 0.8), indicating significantly different parameters.",
              "Use a graph-based anomaly detection model to map normal parent-child process relationships across the ICS environment, using Sysmon Event ID 1 and 4688 data. The graph should model nodes as processes and edges as creation events, with features like command-line arguments and user context. Alert when a new edge is created that is structurally anomalous (e.g., a critical HMI process spawning 'powershell.exe' for the first time) or when an edge appears in a suspicious sequence, such as following a rare module load event."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]