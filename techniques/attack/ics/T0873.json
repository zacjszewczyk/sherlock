[
  {
    "information_requirement": "Is an adversary attempting to achieve persistence by modifying ICS project files?",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0873",
        "name": "Project File Infection",
        "evidence": [
          {
            "description": "Observed file modification (write or delete) events targeting known ICS engineering project file extensions (e.g., .ACD, .S7P, .L5K, .RSS) on designated ICS file shares or local engineering workstations, particularly when originating from unauthorized users or hosts, or occurring outside of established change management processes.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Project File Shares (e.g., dedicated SMB shares for engineering files) and Engineering Workstations within the DMZ or PCN.",
            "action": "1. Symbolic Logic: For Windows Event ID 4663, filter for ObjectType 'File' and AccessMask values indicating write (0x2) or delete (0x10000) operations. Identify events where the ObjectName path contains known ICS project file extensions (.ACD, .S7P, .L5K, .RSS) and the SubjectUserName is not in the 'AuthorizedICS_Engineers' group, or the SourceAddress is not within the defined 'ICS_Engineering_Subnets' list. Generate an alert with details including ObjectName, SubjectUserName, and SourceAddress. 2. Statistical Method: For each unique SubjectUserName and SourceAddress, establish a rolling 30-day baseline of daily file modification counts (Windows Event ID 4663 for ICS project files). Calculate the 99th percentile for these counts, segmented by day of the week and time of day (e.g., business hours vs. off-hours). Generate an alert if a user's or host's modification count for ICS project files exceeds its established 99th percentile, or if modifications occur outside of the normal engineering work schedule (e.g., 2 standard deviations from mean activity time). 3. Machine Learning Application: Utilize a time-series anomaly detection model (e.g., Prophet or LSTM Autoencoder) on aggregated hourly byte counts from Zeek smb_files.log for transfers involving ICS project file extensions. Train the model on 90 days of historical data from authorized engineering workstations and file shares to learn normal transfer volumes and patterns. Flag as anomalous any hourly aggregate byte count that deviates significantly (e.g., exceeding the model's anomaly score threshold) from the predicted normal range, indicating potential unauthorized data movement or project file exfiltration."
          },
          {
            "description": "Observed network connections to known PLC IP addresses on standard engineering programming ports (e.g., TCP/44818 for EtherNet/IP, TCP/102 for S7COMM), particularly when originating from hosts not explicitly authorized for PLC programming, or when occurring outside of documented operational or maintenance windows. This activity may be correlated with the execution of engineering software processes on the originating host.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS DMZ (Level 3.5), Process Control Network (Level 2/1), and Engineering Workstations.",
            "action": "1. Symbolic Logic: From Zeek conn.log, filter for connections where id.resp_p is 44818 or 102, and id.resp_h is a known PLC IP address. Identify connections where id.orig_h is not present in the 'Authorized_ICS_Engineering_Workstations' asset list. Additionally, correlate these suspicious network connections with Windows Event ID 4688 on the originating host (id.orig_h), looking for NewProcessName values containing 'Studio5000.exe', 'TIA Portal.exe', 'Step7.exe', or other known engineering software executables. Generate an alert if both conditions are met, or if the network connection occurs outside of documented PLC programming windows (e.g., 08:00-17:00 M-F). 2. Statistical Method: For each unique PLC IP (id.resp_h) and programming port (id.resp_p), establish a rolling 30-day baseline of hourly connection counts and average connection durations from Zeek conn.log. Calculate the 99th percentile for these metrics. Generate an alert if the current hourly connection count or average duration from any id.orig_h to a PLC on a programming port exceeds its established 99th percentile. Also, calculate the Z-score for connection duration and flag connections where duration is more than 3 standard deviations from the mean for that PLC and port. 3. Machine Learning Application: Develop a supervised machine learning classification model (e.g., Random Forest or XGBoost) using Zeek conn.log data. Train the model on labeled historical data, with features including 'duration', 'orig_bytes', 'resp_bytes', 'id.orig_h' (one-hot encoded or embedded), 'id.resp_p', and time-of-day/day-of-week. Label known legitimate PLC programming sessions as 'benign' and known unauthorized or suspicious sessions as 'malicious'. The model will classify new connections to PLCs on programming ports as 'benign' or 'malicious', triggering an alert for high-confidence 'malicious' classifications."
          },
          {
            "description": "Detection of a PLC mode change command (e.g., from RUN to PROGRAM or REMOTE) identified in specific Zeek protocol logs (s7comm.log, enip.log), immediately preceding or concurrent with a significant and sustained increase in data transfer volume (orig_bytes + resp_bytes) to the same PLC on known engineering programming ports, indicative of a project download operation.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (Level 2/1) segments where PLCs reside.",
            "action": "1. Symbolic Logic: From Zeek s7comm.log or enip.log, identify events explicitly indicating a PLC mode change (e.g., RUN to PROGRAM). Within 60 seconds of such an event, from Zeek conn.log, identify connections to the same PLC IP address on programming ports (id.resp_p 44818 or 102) where the combined orig_bytes and resp_bytes exceed a static threshold (e.g., 500KB). Alert if these conditions are met, especially if the source host (id.orig_h) is not an authorized engineering workstation or the activity occurs outside scheduled maintenance windows. 2. Statistical Method: For each unique PLC IP (id.resp_h) and programming port (id.resp_p), establish a rolling 30-day baseline of the total bytes transferred (orig_bytes + resp_bytes) per connection from Zeek conn.log. Calculate the 99th percentile of this metric. Generate an alert if any single connection event's total byte transfer to a PLC on a programming port exceeds this 99th percentile. Additionally, monitor the connection count and total byte volume within a 5-minute rolling window. Alert if this window's activity deviates by more than 3 standard deviations from the historical mean for that PLC and time of day, indicating a sudden surge in project-related data transfer. 3. Machine Learning Application: Apply a time-series anomaly detection model (e.g., Isolation Forest or Prophet) to the aggregated sum of orig_bytes and resp_bytes from Zeek conn.log for each PLC IP address and programming port, sampled every 5 minutes. Train the model on 90 days of historical data to establish normal data transfer patterns for project downloads (infrequent, large bursts) versus routine network traffic. Flag any 5-minute interval where the observed data transfer volume significantly exceeds the model's predicted range (e.g., anomaly score above threshold), especially if this occurs outside of documented maintenance or engineering windows, indicating a potentially unauthorized project download."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]