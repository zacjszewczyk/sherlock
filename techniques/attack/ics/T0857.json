[
  {
    "information_requirement": "Is an adversary attempting to inhibit response functions by modifying system firmware? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0857",
        "name": "System Firmware",
        "evidence": [
          {
            "description": "A file transfer, with a size exceeding 2 standard deviations from the device-specific baseline firmware size (typically 5MB-50MB for ICS devices), identified as a firmware image (based on specific file extensions like .bin, .hex, .img, .fw, recognized MIME types such as application/octet-stream or application/x-firmware, or magic bytes signature analysis), is sent to a critical ICS device (e.g., PLC, RTU) over an unauthorized protocol (e.g., HTTP, SMB) or an expected protocol (e.g., FTP/21, TFTP/69, vendor-specific ports) from a source IP address not present in the authorized firmware update source list, or occurring outside of the predefined maintenance window (e.g., 08:00-17:00 M-F) for that device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek ftp.log",
              "Zeek tftp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments hosting PLCs/RTUs, Network segments containing Engineering Workstations (EWS), Industrial Demilitarized Zone (IDMZ) for vendor remote access, Enterprise/ICS network boundary points.",
            "action": "1. Symbolic Logic (IOC): Identify all Zeek conn.log entries for connections to known critical ICS device IPs (e.g., id.resp_h in conn.log) on common firmware update ports (e.g., 21, 69, or vendor-specific ports). Cross-reference the source IP (id.orig_h in conn.log) with an approved list of EWS, vendor jump boxes, and authorized update servers. Generate a high-priority alert on any connection from an unauthorized source IP. 2. Statistical Method: For each critical ICS device (identified by id.resp_h), establish a baseline of historical firmware update file sizes from Zeek files.log (field seen_bytes) over the last 90 days. Calculate the mean and standard deviation of seen_bytes. Alert on any firmware transfer where seen_bytes falls outside the 99th percentile or exceeds 3 standard deviations from the mean for that specific device. Additionally, establish a baseline of typical transfer times (ts in conn.log); alert on transfers occurring outside the 95th percentile of normal operational hours for that device. 3. Machine Learning: Train a time-series anomaly detection model (e.g., Isolation Forest or Prophet) on the frequency and volume (bytes_orig or bytes_resp from conn.log) of firmware-like file transfers (identified by mime_type, file_extension, or magic bytes from files.log) to critical ICS devices. Alert when the model identifies a significant deviation from the learned normal pattern, especially concerning transfer volume spikes or transfers during previously inactive periods for that device, indicating an anomaly score exceeding the 99th percentile."
          },
          {
            "description": "Execution of a known ICS vendor firmware update utility (e.g., 'Siemens_Tia_Updater.exe', 'Rockwell_Firmware_Tool.exe'), identified by filename, cryptographic hash (MD5/SHA256), or digital signature, on an Engineering Workstation (EWS) or Human-Machine Interface (HMI) by a user account not explicitly authorized for firmware maintenance (e.g., not a member of a 'Firmware Admins' group), or occurring outside of a predefined, scheduled maintenance window (e.g., not between 08:00-17:00 M-F) for that specific device.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4672"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) in the PCN, Human-Machine Interfaces (HMIs) in the PCN, Active Directory domain controllers, Identity Management servers.",
            "action": "1. Symbolic Logic (IOC): Maintain a centralized watchlist of known ICS vendor firmware update executable names (e.g., 'Siemens_Tia_Updater.exe', 'Rockwell_Firmware_Tool.exe') and their corresponding MD5/SHA256 hashes. Monitor Windows Event ID 4688 (Process Creation - New Process Name and New Process Command Line fields) on all EWS and HMIs for process names or hashes matching this watchlist. Immediately alert on any match. Additionally, correlate with Windows Event ID 4624 (Logon Type - user) to identify the executing user (TargetUserName) and check against an authorized user/group list (e.g., Active Directory group membership). 2. Statistical Method: For each EWS/HMI, establish a baseline of typical execution times (Event Creation Time) for firmware update utilities using historical Windows Event ID 4688 data over the last 180 days. Calculate the 95th percentile for execution times. Flag any execution occurring outside this percentile. Additionally, calculate the historical frequency of update utility usage per user (Security ID in Event 4688 or 4624) and flag executions by users who are in the lowest 5th percentile of historical usage for that utility or have no prior history of executing it. 3. Machine Learning: Implement a User and Entity Behavior Analytics (UEBA) model (e.g., using clustering or classification algorithms like K-Means or Random Forest) that profiles normal process execution patterns for each EWS/HMI and user account. This model should consider factors like process parent-child relationships (ParentProcessName, ProcessName in Event 4688), command-line arguments (CommandLine in Event 4688), and execution frequency. Alert when the model identifies an execution of a firmware update utility that significantly deviates from the established behavioral baseline for that specific user or workstation, indicating an anomalous activity score (e.g., exceeding the 99th percentile of historical anomaly scores)."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary establishing persistence by implanting malicious system firmware? (PIR)",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0857",
        "name": "System Firmware",
        "evidence": [
          {
            "description": "A critical ICS device (PLC, RTU) exhibits a statistically significant change in communication patterns (e.g., a >30% increase/decrease in data volume (bytes_orig/bytes_resp), appearance of a new destination IP (id.resp_h) not seen in the last 90 days, observation of a new protocol (proto) or service (service) not typically associated with the device, or a change in connection frequency (number of connections per minute) by >2 standard deviations) within 60 minutes following a detected or suspected firmware transfer event to that device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments containing critical controllers (PLCs/RTUs), Network egress points from the Process Control Network (PCN), Industrial Demilitarized Zone (IDMZ) gateways, Enterprise network proxy servers.",
            "action": "1. Symbolic Logic (IOC): After a detected firmware update event for a specific ICS device (identified by id.resp_h from conn.log), monitor Zeek conn.log for that device for new connections (e.g., to id.resp_h or query in dns.log) to known malicious C2 IP addresses or domains from current threat intelligence feeds within the subsequent 60 minutes. Alert immediately if a match is found. Also, check for connections to non-standard or unexpected ports (id.resp_p) for that device based on an approved port list. 2. Statistical Method: For each critical ICS asset (identified by id.resp_h), establish a 90-day baseline of its normal communication patterns from Zeek conn.log, including destination IPs (id.resp_h), ports/protocols (id.resp_p, proto), connection duration (duration), and data volume (bytes_orig, bytes_resp) aggregated hourly. After a detected firmware update, calculate the Z-score for the subsequent 60 minutes of communication metrics. Alert if any metric exceeds 3 standard deviations from its baseline. Additionally, calculate the entropy of destination ports and protocols; alert on a significant increase (e.g., >25%) in entropy. 3. Machine Learning: Deploy a time-series anomaly detection model (e.g., LSTM autoencoder or ARIMA) on the aggregated communication metrics (e.g., bytes_orig/second, connections/second, unique destination IPs/second) for each critical ICS device. This model should be trained on historical Zeek conn.log data. After a firmware update, run the real-time communication data through the model and alert on any significant anomaly scores (e.g., exceeding the 99th percentile of historical anomaly scores) within the post-update observation window."
          },
          {
            "description": "A file identified as a firmware image (based on specific file extensions like .bin, .hex, .img, .fw, recognized MIME types, or magic bytes signature analysis) is transferred over the network, and its cryptographic hash (MD5, SHA256 from files.log) does not exactly match any known-good, approved firmware versions for the target device maintained in the central firmware repository, or it matches a hash on a known-malicious firmware blacklist.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments, Engineering Workstations (EWS), Centralized firmware management servers/repositories, Network File Shares in the PCN, File integrity monitoring systems.",
            "action": "1. Symbolic Logic (IOC): Maintain a central database of cryptographic hashes (MD5/SHA256) for all approved firmware versions for every ICS device, linked to the device model and version. When Zeek files.log identifies a file transfer with a MIME type (e.g., 'application/octet-stream', 'application/x-firmware') or extension (e.g., '.bin', '.hex', '.img') associated with firmware, extract its hash (md5 or sha256 field). Perform an exact match lookup against the approved firmware database. Generate a high-severity alert if the hash is not found or matches a known-malicious firmware hash blacklist. 2. Statistical Method: For each ICS device type, establish a baseline of the typical frequency of firmware updates over the last year. Use Zeek files.log to track firmware transfers to specific target devices (fuid and tx_hosts fields). If an unknown firmware hash is detected for a device, calculate the current update frequency for that device. If the current frequency is significantly higher (e.g., >95th percentile for that device type) than the baseline, escalate the alert severity, as this might indicate repeated attempts or malicious re-flashing. 3. Machine Learning: Develop a binary classification model (e.g., Random Forest or SVM) trained on metadata from Zeek files.log (e.g., total_bytes, mime_type, file_extension, source_port, destination_port from conn.log via fuid) to classify files as 'likely firmware' or 'not firmware.' For files classified as 'likely firmware,' extract the hash and compare against the approved/blacklisted hash databases. This helps catch obfuscated or unknown firmware formats that bypass simple rule-based identification by analyzing file characteristics."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]