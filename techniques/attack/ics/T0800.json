[
  {
    "information_requirement": "Is the adversary attempting to inhibit or disable safety and protection functions? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0800",
        "name": "Activate Firmware Update Mode",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) on an Engineering Workstation (EWS) or jump server for a known firmware update utility or general-purpose scripting engine (e.g., PowerShell, cmd.exe). The command-line arguments for this process contain keywords associated with firmware updates or device mode changes (e.g., 'firmware', 'flash', 'maintenance'). This host event is temporally correlated (within 60 seconds) with network traffic anomalies observed in Zeek logs, specifically: 1) a high-volume data transfer (e.g., >1MB) from the EWS to a target ICS device over a firmware-related port (e.g., FTP, TFTP, HTTP, or vendor-specific), or 2) a sustained cessation (>90 seconds) of the ICS device's expected periodic communications (e.g., status polls, heartbeats).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek ftp.log",
              "Zeek http.log",
              "Zeek tftp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), and Jump Servers within the Process Control and Supervisory network segments (Purdue Level 2/3), and network TAPs monitoring traffic to and from these assets.",
            "action": "1. Symbolic Logic (SIEM Query): Create a SIEM rule that triggers on Windows Event ID 4688 from hosts within the EWS/HMI NAI. The rule logic is as follows: `(ProcessName IN ['powershell.exe', 'cmd.exe', 'wscript.exe', 'putty.exe', 'TTU.exe', 'UnityPro.exe', 'Studio5000.exe', 'TiaPortal.exe']) AND (CommandLine CONTAINS ['firmware', 'update', 'flash', 'reset', 'maintenance', 'mode', '/f', '/m', '/u', '/r'])`. Correlate this alert with Zeek conn.log data within 60 seconds of the event. Escalate the alert severity if the destination IP from the host event is an ICS device and network traffic to it on ports 21, 23, 69, 80, 443, 502, or other known vendor management ports either spikes in volume (orig_bytes > 1MB) or ceases entirely (no packets for >90 seconds).\n2. Statistical Method (Baseline & Anomaly): For each EWS/HMI host, establish a 30-day baseline of command-line arguments used with common scripting engines and vendor tools. Calculate the entropy and character-length distribution for all observed command lines. Create a statistical alert that triggers when a new command line for a relevant process has an entropy score or length that is greater than the 99th percentile of the baseline, or a Levenshtein distance > 10 from the nearest known benign command. Concurrently, baseline the hourly network connection count and total bytes transferred from the EWS to critical ICS device groups. If the host-based statistical anomaly occurs, check if the corresponding network metrics for the target device deviate by more than 3 standard deviations from their hourly baseline within the next 5 minutes.\n3. Machine Learning (Classification & Correlation): Deploy a classification model (e.g., Random Forest, Gradient Boosting) trained on labeled historical data (Windows Event ID 4688). Engineer features such as: process name (one-hot encoded), command-line keyword counts, command-line entropy, source hostname, user context, and time-of-day (e.g., 'is_business_hours', 'is_maintenance_window'). The model should classify each execution as 'Benign', 'Maintenance', or 'Suspicious-Update'. Feed 'Suspicious-Update' classifications into a secondary time-series anomaly detection model (e.g., Isolation Forest) that also ingests correlated network features from Zeek (connection rate, byte volume, protocol mix) for the target device. An alert is generated when the classifier flags a suspicious process and the time-series model detects a concurrent anomaly in the device's network behavior."
          },
          {
            "description": "Observation of specific, low-prevalence ICS protocol commands designed to alter device operational states, such as entering maintenance or firmware update modes. Examples include Modbus Function Code 17 (Write Multiple Registers) to a known mode-control register, DNP3 Function Code 13 (Cold Restart), or an EtherNet/IP 'Set_Attribute_Single' service call to a device's mode object. The command's appearance is immediately followed by a statistically significant and sustained deviation from the device's established communication baseline, such as a complete halt in polling responses or heartbeat messages for over 90 seconds.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensor appliances (e.g., Zeek sensors) deployed on SPAN ports or network TAPs at the boundaries between Purdue Levels 1 (Basic Control), 2 (Area Supervisory Control), and 3 (Site Control), with a focus on traffic flows involving critical PLCs, RTUs, and protection relays.",
            "action": "1. Symbolic Logic (SIEM Query): Deploy SIEM rules that monitor Zeek's ICS protocol logs for specific state-change commands targeting critical assets. Rule examples: `(log_source='zeek_modbus.log' AND function_code='17' AND register_address IN [list_of_mode_registers])`, `(log_source='zeek_dnp3.log' AND function_code='13')`, `(log_source='zeek_enip.log' AND service_name='Set_Attribute_Single' AND class_id='2' AND instance_id='1')`. Trigger a high-priority alert if the command's source IP is not on a pre-approved list of management stations or if the command occurs outside of a scheduled and documented maintenance window.\n2. Statistical Method (Baseline & Deviation): For each critical ICS device, create a 30-day rolling baseline of its communication profile using Zeek conn.log and protocol logs. Key metrics include: mean time between polling requests, polling response rate (%), distribution of function codes, and hourly connection volume (bytes/packets). An alert is triggered if, within 5 minutes of a suspicious command identified by the symbolic rule, the device's profile deviates significantly. For example: `(mean_time_between_polls > 99th_percentile)` OR `(polling_response_rate < 5th_percentile)` for a period exceeding 90 seconds.\n3. Machine Learning (Multivariate Anomaly Detection): Implement a multivariate time-series anomaly detection model, such as a Variational Autoencoder (VAE), for each critical device or device group. The model should be trained on a feature vector representing the device's normal operational state, derived from Zeek logs. Features should include: connection count, total bytes, protocol mix (TCP/UDP), distribution of Modbus function codes, count of DNP3 object groups, and ENIP service counts, all aggregated into 1-minute time windows. An alert is generated when the model's reconstruction error for a given time window exceeds a dynamically set threshold (e.g., > 99.5th percentile of reconstruction errors from the training set), indicating the device's communication pattern is highly anomalous and does not conform to its learned 'normal' behavior."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]