[
  {
    "information_requirement": "Has an adversary modified program logic on an ICS controller to establish persistence?",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0889",
        "name": "Modify Program",
        "evidence": [
          {
            "description": "An ICS program modification command (e.g., S7COMM 'Program Download', Modbus 'Write Multiple Registers', EtherNet/IP 'Write Tag') is observed in network traffic, where the command's source IP is not in the authorized Engineering Workstation (EWS) allowlist, or the command occurs outside of a scheduled maintenance window.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at choke points between the enterprise network (Level 4/5) and the process control network (Level 3), taps on EWS subnets (Level 3), and span ports monitoring traffic to and from critical PLCs/controllers (Level 1/2).",
            "action": [
              "Create a detection rule that triggers when Zeek logs (e.g., `s7comm.log`, `modbus.log`, `enip.log`) show a program modification function code. The rule must enrich the event with the source IP from `conn.log` and compare it against a maintained allowlist of EWS IP addresses and a schedule of approved maintenance windows. Alert if the source IP is not on the allowlist or the event time is outside a scheduled window.",
              "For each unique controller IP, ingest ICS protocol logs into a time-series database to track the hourly count of program modification commands. Calculate a 30-day rolling baseline with the mean and standard deviation for each hour of the day. Generate a medium-severity alert if the command count for a given hour exceeds its baseline mean by 3 standard deviations, indicating a statistically anomalous burst of modification activity.",
              "Train a multi-variate time-series anomaly detection model (e.g., LSTM Autoencoder) using features from Zeek logs. Features should include: count of modification commands per minute, source/destination IP pair, protocol used, and payload size. The model learns the normal patterns of program modifications. Deploy the model to score live traffic and generate a high-severity alert when the reconstruction error for a time window exceeds a dynamically tuned threshold, indicating activity that deviates from learned legitimate behavior."
            ]
          },
          {
            "description": "An ICS controller mode change command (e.g., S7COMM 'CPU Control' to STOP/PROGRAM, EtherNet/IP 'Set Attribute Single' to change operational mode) is observed that either originates from an unauthorized source IP or is not correlated with an approved change management ticket.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network interfaces of critical PLCs/Controllers (Level 1/2), Process Control Network (Purdue Level 2/3) monitoring points, network choke points between Level 3 and Level 2, and logs from change management systems.",
            "action": [
              "Implement a SIEM rule to detect specific controller mode change commands (e.g., to 'STOP' or 'PROGRAM') in Zeek ICS protocol logs. For each detection, the rule must automatically query a change management system's API or database for an approved ticket corresponding to the controller and timestamp. Alert if no approved ticket exists or if the source IP (from `conn.log`) is not on the authorized EWS allowlist.",
              "For each critical controller, calculate the 99th percentile of daily time spent in a non-'RUN' state (e.g., 'STOP', 'PROGRAM') over a 90-day baseline period using Zeek protocol logs. Create a scheduled query that runs daily to calculate the total time spent in these states for the past 24 hours. Generate an alert if this duration exceeds the 99th percentile threshold, indicating the controller was in a modifiable state for an unusually long time.",
              "Develop a sequence analysis model, such as a Hidden Markov Model (HMM), to learn the legitimate sequences of controller state transitions. Train the model on historical sequences of events from Zeek logs, including state changes, source IPs, and subsequent commands (e.g., 'STOP' from authorized EWS -> 'DOWNLOAD' -> 'RUN'). Generate an alert when an observed sequence has a low probability under the trained model, such as a 'STOP' command not followed by an authorized action or a state change originating from an unknown IP."
            ]
          },
          {
            "description": "A comparison between an ICS project file on an Engineering Workstation (EWS) or a program on a controller and its 'golden' baseline reveals a mismatch in file hash, size, modification timestamp, or logical content.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 11 (Sysmon)",
              "Windows Event ID 23 (Sysmon)",
              "Windows Event ID 4663",
              "ICS Integrity Monitoring System Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of Engineering Workstations (EWS) (Level 3), version control systems for ICS projects, centralized log servers, network file transfer inspection points (Level 3), and dedicated ICS integrity monitoring platforms.",
            "action": [
              "On EWS hosts, deploy a file integrity monitoring rule using Sysmon to watch for write events (Event ID 11) or deletions (Event ID 23) affecting critical ICS project file directories (e.g., `*.ACD`, `*.S7P`). For file transfers detected in `Zeek files.log`, automatically compare the file's MD5/SHA256 hash against a threat intelligence feed of known-malicious hashes. Alert on any unauthorized modification or match to a malicious hash.",
              "For all ICS project files transferred over the network and logged in `Zeek files.log`, calculate the Shannon entropy of the file content. Establish a baseline entropy range for each known, legitimate file type (e.g., `.ACD` files typically have an entropy between $$4.5$$ and $$5.5$$). Generate an alert if a transferred file's entropy score is a statistical outlier (e.g., > $$7.0$$, suggesting encryption, or < $$2.0$$, suggesting null-padding) for its file type.",
              "Train a Random Forest classifier to distinguish between 'authorized' and 'unauthorized' modifications to ICS project files. Engineer features from EWS logs (Sysmon, Windows Event Logs) and network logs (Zeek). Features should include: process that wrote the file (Sysmon Event ID 11), user account associated with the process (Windows Event ID 4624), time of day, file entropy (`Zeek files.log`), and whether the file transfer originated from an authorized EWS IP. Alert when the model classifies a file modification or transfer as 'unauthorized' with a confidence score above 95%."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]