[
  {
    "information_requirement": "Is an adversary attempting to gain initial access to the ICS environment via spearphishing attachments? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0865",
        "name": "Spearphishing Attachment",
        "evidence": [
          {
            "description": "An internal email recipient, identified as a high-risk role (e.g., ICS engineer, control room operator, IT/OT administrator), receives an email containing an attachment where the file extension or MIME type is categorized as suspicious (e.g., `.exe`, `.dll`, `.js`, `.vbs`, `.chm`, `.iso`, `.zip` containing executables, macro-enabled documents like `.docm`, `.xlsm`). The email's subject line or attachment filename explicitly contains keywords relevant to the ICS environment (e.g., 'PLC Firmware Update', 'SCADA System Alert', 'HMI Configuration', 'Project Schematics for Plant X').",
            "data_sources": [
              "Zeek smtp.log",
              "Zeek files.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Email Gateway, OT Network Mail Relay (if present), Corporate-to-OT DMZ, Engineering Workstations (local email client logs), Control System Network (for internal email traffic if applicable)",
            "action": "1. **Symbolic Logic:** Establish and maintain watchlists for: 1) high-risk recipient email addresses (e.g., `engineer@org.com`, `operator@org.com`), 2) ICS-specific keywords (`PLC`, `SCADA`, `HMI`, `firmware`, `control system`), and 3) suspicious file extensions/MIME types (`.exe`, `.dll`, `.vbs`, `application/x-msdownload`, `application/x-zip-compressed` containing executables). Query Zeek `smtp.log` for emails where the recipient matches a watchlist entry, the subject or filename (from `files.log` correlated by `fuid`) contains an ICS keyword, and the attachment type is suspicious. Immediately alert on any matches. 2. **Statistical Method:** For all attachments extracted by Zeek `files.log` from emails (correlated via `fuid` with `smtp.log`), calculate the Shannon entropy of the attachment filename and the file content (if feasible and within policy). Establish a baseline for entropy values of legitimate files. Flag and alert on attachments sent to high-risk recipients where filename entropy exceeds the 95th percentile of the baseline for known benign files, or where content entropy is indicative of packed/encrypted malware. Additionally, analyze sender domain reputation and email volume; alert on senders with low reputation scores or anomalous spikes in email volume to high-risk recipients. 3. **Machine Learning:** Apply a supervised machine learning model (e.g., Random Forest or SVM) trained on historical email metadata (sender, recipient, subject length, attachment type, presence of keywords, entropy scores) to classify incoming emails as 'phishing' or 'benign'. Retrain the model periodically with new data. Alert on emails classified as 'phishing', especially when targeting high-risk ICS roles. Furthermore, use time-series anomaly detection on the frequency of suspicious attachment types observed in `files.log` from email traffic; alert if the rate deviates significantly (e.g., >3 standard deviations) from the historical norm."
          }
        ]
      },
      {
        "technique_id": "T0863",
        "name": "User Execution",
        "evidence": [
          {
            "description": "On an ICS engineering workstation, HMI, or operator console, a known legitimate application (e.g., `WINWORD.EXE`, `EXCEL.EXE`, `ACROBAT.EXE`, `NOTEPAD.EXE`) is observed to be the parent process of an unexpected child process, specifically a command-line interpreter (`cmd.exe`), scripting engine (`powershell.exe`, `wscript.exe`, `cscript.exe`), or system utility (`rundll32.exe`, `mshta.exe`, `certutil.exe`). This event occurs within 5 minutes of the workstation user interacting with an email attachment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, Human-Machine Interfaces (HMIs), Operator Consoles, Jump Servers within the OT network",
            "action": "1. **Symbolic Logic:** Monitor Windows Event ID 4688 on all hosts within the NAI. Create a whitelist of approved parent-child process relationships for common applications (e.g., `WINWORD.EXE` spawning `OUTLOOK.EXE` for email). Immediately alert on any instance where a document-handling application (`WINWORD.EXE`, `EXCEL.EXE`, `ACROBAT.EXE`) is the parent of a command-line interpreter or scripting engine (`cmd.exe`, `powershell.exe`, `wscript.exe`, `cscript.exe`, `mshta.exe`) or a known system utility used for execution (`rundll32.exe`, `certutil.exe`), and this relationship is not on the whitelist. 2. **Statistical Method:** For each unique parent-child process pair observed via Windows Event ID 4688, calculate its historical frequency across all hosts in the NAI over a 30-day rolling window. Establish a baseline for each host or group of hosts. Alert when a parent-child process pair, particularly involving document-handling applications and scripting engines, occurs at a frequency below the 1st percentile of its historical occurrences (indicating extreme rarity) or when its frequency suddenly spikes by more than 3 standard deviations from the mean for a specific host. 3. **Machine Learning:** Implement a process tree anomaly detection model (e.g., using graph embeddings or sequence analysis) on Windows Event ID 4688 data. Train the model on benign process execution patterns from engineering workstations. Alert when the model identifies a process execution chain that deviates significantly from established benign patterns, especially if the chain originates from a user-launched application and leads to execution of suspicious binaries. This can help detect polymorphic or previously unseen execution paths."
          },
          {
            "description": "A process, identified as suspicious due to its creation chain (e.g., spawned by an office application from an attachment), initiates an outbound network connection. The destination IP address, domain, or port is either known malicious (via threat intelligence), belongs to a country or ASN not typically accessed by the host, or deviates statistically significantly from the host's historical network activity patterns (e.g., unusual destination port for a given application).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, HMIs, Operator Consoles, OT Network Egress Firewalls, Industrial Demilitarized Zone (IDMZ) Firewalls, Corporate-to-OT DMZ",
            "action": "1. **Symbolic Logic:** Correlate Windows Event ID 4688 (Process Creation) with Zeek `conn.log`, `dns.log`, `http.log`, and `ssl.log` where the `uid` or `id.orig_h` matches the host and the `ts` is within 120 seconds of a suspicious process creation. For each outbound connection, perform a threat intelligence lookup on the destination IP address/domain. Immediately alert on connections to known malicious IPs, domains, or C2 infrastructure identified by IOC feeds. Additionally, maintain a whitelist of approved destination countries/ASNs for ICS assets; alert on connections to destinations outside this whitelist. 2. **Statistical Method:** For each host in the NAI, establish a baseline of its normal network connection patterns using Zeek `conn.log` (e.g., common destination IP/port pairs, byte volumes, protocol distribution). Calculate the frequency of unique destination IP addresses, ports, and protocols over a 7-day rolling window. Alert when a connection from a host exhibits a destination IP/port combination that falls below the 5th percentile of historical frequency for that host, or when the connection volume (bytes_orig or bytes_resp) to a specific destination deviates by more than 3 standard deviations from the host's historical average for that destination. Use entropy calculation on destination ports or application layer protocols to identify unusual communication patterns. 3. **Machine Learning:** Apply an unsupervised anomaly detection algorithm (e.g., Isolation Forest or One-Class SVM) to Zeek `conn.log` data, specifically focusing on connections originating from hosts within the NAI. The model should consider features such as destination IP, port, protocol, connection duration, and byte counts. Train the model on historical benign network traffic. Alert when the model identifies connections with high anomaly scores, indicating a significant deviation from learned normal behavior, potentially signaling C2 communication or data exfiltration initiated by a compromised process."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]