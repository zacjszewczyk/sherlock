[
    {
        "information_requirement": "Is the adversary modifying file or directory permissions to evade defenses?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1222.001",
                "name": "Windows File and Directory Permissions Modification",
                "evidence": [
                    {
                        "description": "A known malicious process, identified by its file hash, executes commands to modify file or directory permissions.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Continuously monitor process creation events (Windows Event ID 4688) and calculate the hash of the creating process image. Correlate this hash against a high-confidence threat intelligence feed of known malicious file hashes. If a process with a known-bad hash is observed executing `icacls.exe`, `cacls.exe`, `takeown.exe`, `attrib.exe`, or `powershell.exe`, generate a high-severity alert for investigation."
                    },
                    {
                        "description": "Execution of native Windows tools or PowerShell cmdlets with specific arguments known to weaken security, such as granting 'FullControl' to 'Everyone' on system files.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor process creation events (Windows Event ID 4688) for command-line arguments. Use regular expression matching to flag executions of `icacls`, `takeown`, or PowerShell (`Set-Acl`, `Add-NTFSAccess`) that grant broad permissions (e.g., `:F`, `:M`, `FullControl`) to permissive groups (`Everyone`, `Authenticated Users`, `Users`) on sensitive directories (e.g., `C:\\Windows`, `%PROGRAMDATA%`). Also flag `takeown.exe` targeting files in `%SystemRoot%` or `attrib.exe` used to unhide system files (`-s -h`). Correlate these events with the parent process to identify non-standard execution contexts."
                    },
                    {
                        "description": "Permissions are modified on specific files or registry keys commonly targeted to enable persistence or hijack execution flow, such as accessibility binaries.",
                        "data_sources": [
                            "Windows Event ID 4670",
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for permission modification events on a curated watchlist of high-risk assets, including files (Windows Event ID 4670) and registry keys (Windows Event ID 4657). This list should include accessibility features (`sethc.exe`, `Utilman.exe`), service binaries, scheduled task actions, and common DLL hijacking paths. As legitimate changes to these assets are rare, any modification should generate an alert for immediate review. Use descriptive statistics to confirm that legitimate changes are near-zero frequency."
                    },
                    {
                        "description": "A single process or user account modifies permissions on an unusually large number of files or directories within a short time frame, suggesting bulk permission changes to enable broader access.",
                        "data_sources": [
                            "Windows Event ID 4670"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Aggregate permission modification events (Windows Event ID 4670) by the subject user (`SubjectUserName`) and process (`ProcessName`) over sliding time windows (e.g., 5-10 minutes). Calculate the count of unique objects (`ObjectName`) modified by each subject. Establish a baseline of normal activity for administrative and user accounts. Use statistical methods like Inter-Quartile Range (IQR) or Z-scores to identify subjects performing an anomalously high number of permission changes. A box-plot visualization of modification counts per user can help analysts spot significant outliers."
                    },
                    {
                        "description": "File or directory permission modifications occur as part of a larger chain of suspicious activities, such as being immediately followed by the placement of a new executable and outbound network connections.",
                        "data_sources": [
                            "Windows Event ID 4670",
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Develop a chained-event detection rule correlating events across data sources within a defined session window (e.g., 30 minutes) on a single host. Use correlation analysis to look for the sequence: 1. A permission modification on a directory (Event ID 4670). 2. A new file is written to that same directory (requires file creation monitoring or can be inferred from Event ID 4688). 3. The new file is executed (Event ID 4688). 4. The new process initiates outbound network connections (Zeek conn.log). Linking these events by host, timestamp, and process IDs builds a high-fidelity alert for this behavioral TTP."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
