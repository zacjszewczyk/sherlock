[
  {
    "information_requirement": "Is an adversary using a compromised mobile device to move laterally within our internal network by exploiting remote services? (PIR)",
    "tactic_id": "TA0033",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1428",
        "name": "Exploitation of Remote Services",
        "evidence": [
          {
            "description": "A single source IP, correlated to a mobile device via VPN or internal Wi-Fi DHCP logs, establishes connections to a statistically anomalous number of unique internal hosts on common remote service ports (e.g., 445/SMB, 3389/RDP, 22/SSH, 5985/WinRM). This scanning activity, defined as exceeding the 98th percentile of connections in a 5-minute window, is followed within 60 minutes by a successful remote logon (Windows Event ID 4624 with Logon Type 3 or 10) on one of the targeted hosts originating from the same source IP.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Windows Event ID 4624",
              "VPN Access Logs",
              "DHCP Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators, Internal Wi-Fi Access Points, Core network switches, Domain Controllers, and high-value internal servers.",
            "action": "1. (Symbolic) Create a SIEM rule that triggers when Zeek notice.log reports a Scan::Port_Scan from an IP within the mobile device IP range. The rule should then query for a subsequent successful Windows Event ID 4624 (Logon Type 3 or 10) from the same source IP to one of the scanned destinations within the next 60 minutes. A match on both conditions generates a high-priority alert. 2. (Statistical) For each source IP in the mobile device IP range, maintain a 5-minute rolling count of unique destination IPs and unique destination ports contacted, using Zeek conn.log. Establish a dynamic baseline distribution for these counts across all mobile devices. Generate an alert when a device's count for either metric exceeds the 98th percentile of its own historical baseline or the global baseline for all mobile devices. Further score the alert by calculating the Shannon entropy of the destination port set; a high entropy score combined with low originated bytes per connection strongly indicates a port scan. 3. (Machine Learning) Train an isolation forest or Local Outlier Factor (LOF) model for unsupervised anomaly detection on 5-minute session windows for each mobile device IP. Engineer features such as: count of unique destination IPs, count of unique destination ports, entropy of destination ports, ratio of successful to failed connections (from conn.log conn_state), total bytes sent/received, and a binary flag for connections to known high-value assets. A high anomaly score for a device's session indicates behavior deviating from its normal activity profile, such as scanning."
          },
          {
            "description": "A critical network-facing service process (e.g., w3wp.exe for IIS, smbd for SMB, svchost.exe for RDP) on an internal server unexpectedly terminates (Windows Event ID 7034 or 7031) or the process itself crashes (Windows Event ID 1000) within 60 seconds of receiving a network connection from an IP address associated with a mobile device.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 7034",
              "Windows Event ID 7031",
              "Zeek conn.log",
              "Zeek http.log",
              "VPN Access Logs",
              "DHCP Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application servers, database servers, and workstations hosting remote services (e.g., RDP, SMB, HTTP) accessible from the internal network.",
            "action": "1. (Symbolic) Create a SIEM alert that triggers on Windows Event ID 1000, 7031, or 7034 for a predefined list of critical service processes. The rule's response action is to automatically query Zeek conn.log for all connections to the affected host in the preceding 2 minutes. If the source IP of a recent connection is from a mobile device range and protocol-specific logs (e.g., Zeek http.log) show malformed requests or non-standard methods, generate a high-priority alert. 2. (Statistical) For each critical service on each server, model the baseline crash rate using a Poisson distribution over a 30-day period, as crashes are rare events. An alert is triggered if the observed number of crashes in a given hour is a statistically significant outlier (e.g., a p-value < 0.01) and is temporally correlated with a spike in connection attempts from the mobile IP range. 3. (Machine Learning) Train a supervised classifier (e.g., XGBoost) on historical crash events labeled as 'benign' or 'exploit-induced'. Extract features from the network connection immediately preceding the crash, including: source IP reputation, protocol, total bytes, payload entropy (if full packet capture is available), and specific fields from protocol logs (e.g., HTTP method, URI length, User-Agent string, presence of known exploit patterns in URI). Classify new crashes in real-time; a classification of 'exploit-induced' for a crash linked to a mobile-sourced connection generates a high-priority alert."
          },
          {
            "description": "A network-facing service process (e.g., w3wp.exe, httpd.exe, svchost.exe) on an internal server, running in a non-interactive session, spawns a suspicious child process (e.g., cmd.exe, powershell.exe, rundll32.exe). This process creation event (Windows Event ID 4688) occurs within 5 seconds of an inbound network connection from a mobile device's IP address recorded in Zeek conn.log.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "VPN Access Logs",
              "DHCP Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web servers, application servers, and other systems running remotely accessible services.",
            "action": "1. (Symbolic) Implement a SIEM correlation rule that triggers on Windows Event ID 4688 where the ParentProcessName is a known network service (e.g., w3wp.exe, sqlservr.exe) and the NewProcessName is a command-line interpreter or living-off-the-land binary (e.g., cmd.exe, powershell.exe, whoami.exe). The rule must then confirm an inbound network connection from a mobile device IP to the host in Zeek conn.log within the preceding 5 seconds to generate a critical alert. 2. (Statistical) Build a baseline of normal parent-child process relationships from 30 days of Windows Event ID 4688 logs, calculating the probability of each observed pair. For any low-probability pair (p < 0.001) involving a network service as the parent, analyze the command-line arguments. Generate an alert if the command-line's character-level entropy, length, or ratio of non-alphanumeric characters exceeds 3 standard deviations from the established baseline for that specific child process. 3. (Machine Learning) Utilize a pre-trained NLP transformer model (e.g., a fine-tuned DistilBERT) to classify command-line arguments from process creation events spawned by network services. The model should be trained on a labeled dataset of benign and malicious command lines. When a network service spawns a process immediately following a connection from a mobile device, pass the full command line to the model. A 'malicious' classification with a confidence score > 0.90 triggers a critical alert for immediate investigation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]