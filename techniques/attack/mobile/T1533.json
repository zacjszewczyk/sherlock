[
  {
    "information_requirement": "Is an adversary collecting sensitive data from local files or databases on our mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1533",
        "name": "Data from Local System",
        "evidence": [
          {
            "description": "An application process exhibits an anomalously high rate of file read operations, particularly on sensitive user directories, suggesting bulk data scraping.",
            "data_sources": [
              "MDM/EDR agent file system logs",
              "Android logcat logs",
              "iOS Unified Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User data partitions and application sandboxes on mobile devices (e.g., /data/data/, /var/mobile/Containers/Data/Application/)",
            "action": "Using MDM/EDR agent data, monitor file open/read system calls per process. Establish a baseline for the number of file read operations per process per minute. Use a statistical model to flag processes that exhibit a sustained read rate exceeding a dynamic threshold (e.g., 3 standard deviations above the 7-day rolling average). Assign a higher risk score to anomalous activity targeting known sensitive directories like those for contacts, photos, or messaging apps."
          },
          {
            "description": "A process not associated with system authentication or user-approved credential management attempts to access the device's keychain, keystore, or other credential storage locations.",
            "data_sources": [
              "MDM/EDR API monitoring logs",
              "OS-level security audit logs (if available)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Device credential management services (e.g., Android Keystore, iOS Keychain)",
            "action": "Define an allowlist of legitimate processes and system services authorized to access the device's primary credential store (e.g., 'securityd' on iOS). Configure MDM/EDR policies to generate a high-severity alert for any API call to the credential store originating from a process not on the allowlist. The action should trigger an immediate investigation into the application's origin, permissions, and recent activities."
          },
          {
            "description": "Creation of large archive files (e.g., .zip, .tar, .7z) in user-writable storage, especially by a process that is not a standard file manager or backup utility.",
            "data_sources": [
              "MDM/EDR agent file system creation logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal and external user storage locations on mobile devices (e.g., /storage/emulated/0/, /sdcard/, /var/mobile/Library/)",
            "action": "Continuously monitor file creation events for files with archive extensions (.zip, .rar, .tar, .7z). For each event, analyze the parent process. If the process is not a known, legitimate utility (e.g., Files by Google, iOS Files app), increase its risk score. Further analyze the file's name; calculate the Shannon entropy of the filename to detect randomized names used to evade simple pattern matching. Correlate the creation of a large archive with subsequent network connections to suspicious domains or IP addresses."
          },
          {
            "description": "An application requests or uses permissions to access broad categories of sensitive data (e.g., photos, contacts, location, files) that are not justified by its core functionality.",
            "data_sources": [
              "MDM application inventory logs",
              "App store manifests",
              "Android logcat permission grant logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The application ecosystem on managed mobile devices.",
            "action": "Perform a periodic audit of all installed applications and their granted permissions. For each app, compare its permissions against a baseline of expected permissions for its category (e.g., a calculator app should not need contact access). Create a 'permission risk score' for each app based on the quantity and sensitivity of its permissions relative to its function. Investigate apps with the highest risk scores, and consider blocklisting applications that exhibit clear permission overreach."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]