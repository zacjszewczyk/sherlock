[
  {
    "information_requirement": "Is an adversary performing an Adversary-in-the-Middle (AitM) attack to intercept or manipulate traffic from corporate mobile devices?",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1638",
        "name": "Adversary-in-the-Middle",
        "evidence": [
          {
            "description": "A TLS session initiated by a managed mobile device, captured in Zeek logs, shows a 'validation_status' other than 'ok' (e.g., 'self signed certificate in certificate chain', 'unable to get local issuer certificate'). This indicates a potential TLS interception attempt using a non-trusted certificate.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, network egress points, DNS resolvers, network sensor collectors (e.g., Zeek cluster), and Certificate Authority infrastructure.",
            "action": [
              "Create a SIEM rule to join Zeek ssl.log and x509.log on the 'uid' field. Trigger a high-priority alert when a connection from a mobile device IP range has a 'validation_status' not equal to 'ok'. Enrich the alert with the certificate issuer (x509.log:certificate.issuer) and subject (x509.log:certificate.subject). Check the issuer against a trusted CA list and the certificate serial number against public Certificate Transparency (CT) logs.",
              "For each mobile device IP and for each server name (SNI), establish a 30-day rolling baseline of the ratio of error-status TLS connections to total TLS connections. Alert if this ratio for any device-SNI pair exceeds the 99th percentile of its own history. Separately, monitor the hourly count of non-'ok' statuses for the entire mobile subnet and alert if the count exceeds 3 standard deviations from the established seasonal baseline.",
              "Train a time-series anomaly detection model (e.g., Prophet or an LSTM-based autoencoder) on the volume and type of certificate validation errors. Features should include server_name (SNI), validation_status, issuer, certificate.key_alg, certificate.sig_alg, and source/destination geo-data. An unexplained spike in the error count that deviates significantly from the forecasted model's confidence interval should trigger an alert for potential widespread AiTM activity."
            ]
          },
          {
            "description": "A network connection from a managed mobile device uses a common VPN protocol/port (e.g., IPsec on UDP 500/4500, OpenVPN on TCP 1194, WireGuard on UDP 51820) to an external destination IP/ASN not on the corporate-sanctioned VPN gateway list. This is often correlated with a non-standard VPN profile installation logged by an MDM/UEM.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/UEM logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, corporate firewalls, and MDM/UEM servers.",
            "action": [
              "Maintain an allow-list of sanctioned corporate VPN gateway IP addresses and ASNs. Create a SIEM rule to alert on any connection from a mobile device IP range to a destination IP not on this list, using common VPN ports. Enrich alerts with passive DNS, WHOIS, and GeoIP data for the destination and cross-reference MDM/UEM logs for recent VPN profile installations on the source device.",
              "From Zeek conn.log, group connections by source mobile IP and destination IP/port. Calculate the inter-arrival time between connections. Alert if the variance of inter-arrival times for a non-sanctioned VPN-like connection is below the 5th percentile of all connections for that user, indicating a highly regular beacon. Also, alert if connection duration and total bytes sent exceed the 95th percentile of the user's historical baseline.",
              "Use an unsupervised learning model, such as an Isolation Forest, to identify outlier network sessions from mobile devices. Features should include destination port, protocol, connection duration, total_bytes, destination_ASN_rarity, a boolean for 'is_sanctioned_vpn_ip', connection_periodicity_variance, and destination_ip_passive_dns_hits. Sessions identified as anomalies should be flagged as potential rogue VPN tunnels."
            ]
          },
          {
            "description": "A sequence of network events from a single mobile device IP within a short time window (<60s) consists of: 1) A DNS query for a high-entropy or newly registered domain, 2) a subsequent HTTP/S connection to the resolved IP, and 3) a data upload significantly larger than the device's historical baseline.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS resolvers, web proxies/egress points, network traffic sensors (e.g., Zeek cluster), and threat intelligence platform feeds.",
            "action": [
              "Correlate Zeek dns.log queries against threat intelligence feeds (malicious, DGA) and domain age data. If a mobile device queries a domain registered < 30 days ago, create a high-priority alert if it is followed by an HTTP POST request or a connection where 'conn.log:orig_bytes' exceeds the 95th percentile of historical uploads for that device within a 60-second window.",
              "For domains in Zeek dns.log, calculate the Shannon entropy of the query name. Alert on any domain whose entropy score exceeds the 98th percentile of the baseline. Also, calculate a 'least-seen' score by stack counting the public suffix + 1 domain and alert on domains requested by fewer than 3 devices organization-wide in the last 30 days. Track the ratio of DNS queries to subsequent TCP connections per user and alert on high ratios.",
              "Develop a sequence classification model (e.g., LSTM or GRU) trained on legitimate user session event sequences. Feed the model sequences of features including dns_query_entropy, dns_query_type, domain_age, domain_request_rarity, http_method, http_user_agent_rarity, conn_duration, and orig_bytes. An event sequence classified as anomalous, especially one matching a 'rare DNS -> HTTP -> large upload' pattern, should be flagged as a potential AiTM-facilitated C2 channel."
            ]
          },
          {
            "description": "An APK file is downloaded to a managed Android device from a web source other than an approved app store. Within 24 hours, the device makes network connections involving anomalously large data uploads to a destination not previously associated with the device's traffic profile.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek conn.log",
              "MDM/UEM logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, MDM/UEM servers, network egress points, corporate application store, and network file analysis systems.",
            "action": [
              "Monitor Zeek files.log for transfers with mime-type 'application/vnd.android.package-archive'. Using the 'uid', extract the download source from 'http.log:host'. Alert if the host is not on an approved list (e.g., Google Play, corporate store). Automatically submit the file hash to a sandbox and threat intelligence platform. Escalate the alert if the hash is identified as malicious.",
              "For each mobile device, baseline the daily volume of data uploaded and the Shannon entropy of the set of destination IPs contacted. Alert if a device's daily upload volume to a non-corporate service exceeds 3 standard deviations from its 30-day average, or if the destination IP entropy spikes, especially if this occurs within 24 hours of a non-sanctioned APK installation event.",
              "Train a classifier (e.g., Random Forest) to produce a risk score for connections following a sideloaded app installation. Features should include apk_source_domain_reputation, apk_hash_malicious_ratio_from_TI, time_since_install, destination_ip_rarity, destination_port, total_bytes, connection_duration, post_install_destination_ip_entropy, and destination_ASN_rarity. A high cumulative risk score triggers a device quarantine."
            ]
          },
          {
            "description": "A mobile device management (MDM/UEM) or network access control (NAC) agent reports the device is connected to a Wi-Fi BSSID that spoofs a corporate SSID but is not on the approved BSSID list, or reports a change in the L2 default gateway MAC address for a known, trusted network.",
            "data_sources": [
              "MDM/UEM logs",
              "Network Access Control (NAC) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, MDM/UEM servers, corporate wireless LAN controllers, and NAC systems.",
            "action": [
              "Maintain an allow-list of approved BSSIDs for all corporate SSIDs. Create a rule that alerts when an MDM/UEM or NAC log shows a device connected to an unapproved BSSID while using a corporate SSID name. Additionally, alert if the reported default gateway MAC address for a corporate network changes. Correlate with physical location data if possible.",
              "For each corporate SSID, build a historical distribution of all BSSIDs and their manufacturer OUIs seen over the last 90 days. Alert on any new BSSID that appears and is associated with a corporate SSID, especially if the OUI corresponds to a consumer-grade manufacturer in an otherwise enterprise environment (e.g., a TP-Link AP appearing among Cisco APs).",
              "Train a clustering model (e.g., DBSCAN) on Wi-Fi connection properties reported by MDM/NAC agents. Features should include BSSID, bssid_oui_manufacturer, reported_signal_strength, channel, channel_band (2.4/5/6 GHz), and security_type. Legitimate connections should form dense clusters. New connections identified as noise points (outliers) may represent connections to rogue APs and should be flagged for investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]