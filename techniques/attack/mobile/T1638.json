[
  {
    "information_requirement": "Is an adversary performing an Adversary-in-the-Middle (AitM) attack to intercept or manipulate traffic from corporate mobile devices?",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1638",
        "name": "Adversary-in-the-Middle",
        "evidence": [
          {
            "description": "A network connection from a managed mobile device to a reputable external service presents an SSL/TLS certificate with a validation status other than 'ok' in Zeek's ssl.log. High-risk statuses include 'self signed certificate in certificate chain', 'unable to get local issuer certificate', and 'certificate has expired'.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, network egress points, DNS resolvers, network sensor collectors (e.g., Zeek cluster), and Certificate Authority infrastructure.",
            "action": "1. (Symbolic) Ingest Zeek ssl.log and x509.log, joining records on the 'uid' field. Trigger a high-priority alert when a connection from a mobile device IP range has a 'validation_status' other than 'ok'. Prioritize alerts for statuses like 'self signed certificate in certificate chain' and 'unable to get local issuer certificate'. Enrich alerts with the certificate issuer and subject from x509.log and check the issuer against both an internal list of trusted CAs and a threat intelligence feed of malicious issuers. 2. (Statistical) For each mobile device IP, establish a 30-day rolling baseline of the ratio of error-status connections to total TLS connections. Alert if this ratio for any device exceeds the 99th percentile of its own history, or if the hourly count of non-'ok' statuses for an entire mobile subnet exceeds 3 standard deviations from its baseline. 3. (Machine Learning) Train a time-series anomaly detection model (e.g., Prophet or an LSTM-based autoencoder) on the volume and type of certificate validation errors per network segment. Features should include server_name (SNI), validation_status, issuer, and source/destination geo-data. An unexplained spike in the error count that deviates significantly from the forecasted model's confidence interval should trigger an alert."
          },
          {
            "description": "A managed mobile device establishes a network connection consistent with a VPN tunnel (e.g., using ports UDP 500, UDP 4500, TCP/UDP 51820, TCP 1194) to a destination IP not on the allow-list of corporate VPN gateways. This may be accompanied by an MDM/UEM log indicating a non-standard application has registered VPN permissions.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/UEM logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, corporate firewalls, and MDM/UEM servers.",
            "action": "1. (Symbolic) Maintain an allow-list of sanctioned corporate VPN gateway IPs and ASNs. Create a SIEM rule to alert on any connection from a mobile device IP range to a destination IP not on this list, using common VPN ports (e.g., UDP/500, UDP/4500, TCP/1194, TCP/443, TCP/UDP 51820). Enrich the alert with WHOIS and GeoIP data for the destination and cross-reference MDM/UEM logs for any recent VPN profile installations. 2. (Statistical) From Zeek conn.log, group connections by source mobile IP. For each device, calculate the 95th percentile for connection duration and total bytes sent/received over a 30-day baseline. Alert if a new connection to a non-sanctioned destination on a VPN-like port exceeds both of these historical thresholds. Additionally, calculate the rarity of the destination IP/ASN pair across all mobile devices; a connection to a destination seen by only one device is highly suspicious. 3. (Machine Learning) Use an unsupervised learning model (e.g., Isolation Forest) to identify outlier network sessions from mobile devices. Features should include destination port, protocol, duration, total_bytes, destination_ASN_rarity, and a boolean for 'is_sanctioned_vpn_ip'. Sessions identified as anomalies, especially those with long durations and high data volumes to rare destinations, should be flagged for analyst review."
          },
          {
            "description": "A temporal sequence of events from a single mobile device IP shows: 1) a DNS query for a high-entropy or newly registered domain, followed within seconds by 2) an HTTP/S connection to the resolved IP, and 3) a significant data upload (orig_bytes) observed in the corresponding connection log that is anomalous for the device.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS resolvers, web proxies/egress points, network traffic sensors (e.g., Zeek cluster), and threat intelligence platform feeds.",
            "action": "1. (Symbolic) Correlate Zeek dns.log queries against threat intelligence feeds for malicious, newly registered (NRD), or DGA-flagged domains. If a match occurs from a mobile device IP, create a high-priority alert if it is followed by an HTTP POST request or a connection where 'conn.log:orig_bytes' exceeds the 95th percentile of historical uploads for that device to the same destination service category within a 60-second window. 2. (Statistical) For domains in Zeek dns.log queried by mobile devices, calculate the Shannon entropy of the subdomain portion. Alert on any domain whose entropy score exceeds the 98th percentile of the baseline. Also, calculate the 'least-seen' score by stack counting the public suffix + 1 domain (e.g., evil.com) and alert on domains requested by fewer than 3 devices in the organization within the last 30 days. 3. (Machine Learning) Develop a sequence classification model (e.g., LSTM or GRU) trained on legitimate user session event sequences. The model should be fed sequences of features including dns_query_entropy, domain_age, domain_request_rarity, http_method, user_agent, conn_duration, and orig_bytes. An event sequence classified as anomalous, especially one matching a 'rare DNS -> HTTP -> large upload' pattern, should be flagged as a potential AiTM-facilitated C2 channel."
          },
          {
            "description": "An Android device downloads an application package (APK) from a source not on the corporate allow-list, as seen in Zeek files.log. Within 24 hours, the same device initiates one or more network connections with large data uploads (orig_bytes) to a destination IP not previously associated with the device's normal traffic profile.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "MDM/UEM logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, MDM/UEM servers, network egress points, corporate application store, and network file analysis systems.",
            "action": "1. (Symbolic) Monitor Zeek files.log for transfers with mime-type 'application/vnd.android.package-archive' (APK). If the download source (http.log:host) is not on an approved list (e.g., Google Play, corporate store), check against threat intelligence. If the source is suspicious or the app is unmanaged (per MDM logs), create an alert if the device subsequently initiates a connection where 'orig_bytes' exceeds its typical upload baseline to an un-categorized or suspicious destination. 2. (Statistical) For each mobile device, baseline the daily volume of data uploaded to various service categories (e.g., cloud storage, social media). Alert if a device's daily upload volume to a non-corporate or un-categorized service exceeds 3 standard deviations from its 30-day average, especially if this occurs within 24 hours of a non-sanctioned APK installation event. Also, track the rate of new destination IPs contacted by a device post-install and alert on a sudden spike. 3. (Machine Learning) Train a classifier (e.g., Random Forest) to produce a risk score for connections following a sideloaded app installation. Features should include apk_source_domain_reputation, time_since_install, destination_ip_rarity, destination_port, total_bytes, connection_duration, and destination_ASN_rarity. A high cumulative risk score for a device post-installation would trigger a comprehensive device review."
          },
          {
            "description": "A managed mobile device connects to a Wi-Fi network (BSSID) that is not on the list of known corporate or trusted SSIDs, or it reports a change in the default gateway MAC address for a known corporate SSID, suggesting an ARP spoofing or evil twin attack.",
            "data_sources": [
              "MDM/UEM logs",
              "Windows Event ID 8003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, MDM/UEM servers, and corporate wireless LAN controllers.",
            "action": "1. (Symbolic) Maintain an allow-list of approved BSSIDs for all corporate office SSIDs. Create a rule that alerts when an MDM/UEM log or Windows Event ID 8003 (from Microsoft-Windows-WLAN-AutoConfig/Operational log) shows a device connected to an unapproved BSSID while using a corporate SSID name. Additionally, alert if the reported default gateway MAC address for a corporate network changes for a specific device. 2. (Statistical) For each corporate SSID, build a historical distribution of all BSSIDs seen over the last 90 days. Alert on any new BSSID that appears and is associated with a corporate SSID, as this could be a new but unauthorized access point or an evil twin. Calculate the rarity of a given BSSID/gateway MAC address pairing; a very rare pairing is suspicious. 3. (Machine Learning) Train a clustering model (e.g., DBSCAN) on Wi-Fi connection properties reported by MDM agents (e.g., BSSID, signal strength, channel, security type, gateway MAC). Legitimate connections should form dense clusters for each physical location. New connections identified as noise points (outliers) may represent connections to rogue APs and should be flagged for investigation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]