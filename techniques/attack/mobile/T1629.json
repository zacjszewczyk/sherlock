[
  {
    "information_requirement": "Is the adversary attempting to impair or disable security defenses on our mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629",
        "name": "Impair Defenses",
        "evidence": [
          {
            "description": "A managed mobile device, identified by its unique ID in MDM logs, fails to send its periodic heartbeat signal to the MDM/MTD management server. The time since the last successful check-in exceeds a device-specific, dynamically calculated baseline, and MDM audit logs show no corresponding authorized administrative action (e.g., 'unenroll', 'decommission') for the device during that time.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/MTD Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Organization's internet gateway, Wi-Fi network infrastructure, and MDM/MTD Management Servers",
            "action": "1. (Symbolic) Create a correlation rule that triggers when a device misses a scheduled check-in. The rule should query MDM/MTD audit logs for the device ID within a +/- 5-minute window of the missed check-in. If no 'unenroll', 'wipe', or 'decommission' event is found, generate an alert. 2. (Statistical) For each device, ingest MDM check-in timestamps or Zeek conn.log sessions to the MDM server into a time-series database. Calculate the 99th percentile of check-in intervals over the last 30 days. Create a scheduled query that runs every 5 minutes to identify devices where the current time minus the last check-in timestamp is greater than this 99th percentile value. 3. (Machine Learning) Develop a per-device time-series forecasting model (e.g., Prophet, ARIMA) trained on the sequence of check-in timestamps from MDM logs. The model will predict the next expected check-in time. Generate an alert if an actual check-in event is not observed within a statistically determined grace period (e.g., 3 standard deviations of prediction error) of the forecasted time."
          },
          {
            "description": "A mobile device's network traffic, observed via network sensors, indicates communication with infrastructure known to host mobile rooting kits, spyware, or tools designed to disable security software. This is evidenced by (1) DNS queries or TLS connections (via SNI) to domains/IPs on a threat intelligence feed specializing in mobile threats, or (2) the download of an Android Application Package (.apk) or iOS App Store Package (.ipa) whose file hash is associated with known defense impairment tools.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek files.log",
              "Threat Intelligence Platform (TIP) Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Organization's internet gateway and Wi-Fi network infrastructure",
            "action": "1. (Symbolic) Continuously match the 'query' field in Zeek dns.log, 'server_name' field in ssl.log, and 'host' field in http.log against a TIP feed of known malicious domains for mobile malware. Concurrently, match the 'fuid' and 'md5'/'sha1' fields from Zeek files.log against a hash list of known defense impairment tools (e.g., Magisk, specific spyware variants). Generate a high-priority alert on any match. 2. (Statistical) From Zeek dns.log, for queries not on an approved domain list, calculate the Shannon entropy of the queried domain using the formula $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$. Flag domains with entropy scores over 4.0 (common in DGA). Separately, calculate the rarity of the User-Agent string from http.log across the mobile device fleet. A User-Agent seen on <1% of devices making suspicious connections warrants investigation. 3. (Machine Learning) Employ a supervised classification model (e.g., XGBoost) trained on labeled Zeek connection data. Features should include connection duration, data volume sent/received, JA3/JA3S hashes, TLS SNI entropy, and one-hot encoded User-Agent strings. The model should classify each new connection's likelihood of being malicious. An alert is triggered if the model's confidence score exceeds a pre-set threshold (e.g., 0.90), especially when correlated with a rare User-Agent."
          },
          {
            "description": "An explicit alert is generated by the Mobile Threat Defense (MTD) or Mobile Device Management (MDM) platform indicating a direct attempt to weaken security posture. This includes: (1) the forceful termination of a monitored security process (e.g., the MTD agent), (2) unauthorized modification of a security configuration profile (e.g., disabling 'Google Play Protect'), or (3) an application being granted a high-risk permission (e.g., Android 'Device Administrator', enabling 'Install from Unknown Sources') without a corresponding IT ticket or approval.",
            "data_sources": [
              "Mobile Threat Defense (MTD) Agent Logs",
              "Mobile Device Management (MDM) Compliance Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device endpoints and MDM/MTD Management Servers",
            "action": "1. (Symbolic) Create a SIEM correlation rule that triggers on specific event IDs from MDM/MTD logs corresponding to 'Security Agent Process Terminated', 'Compliance Policy Violation: [Policy Name]', or 'High-Risk Permission Granted: [Permission Name]'. The rule should cross-reference a list of monitored security processes and high-risk permissions. An alert is generated if the event is not associated with an authorized change request ID. 2. (Statistical) Establish a baseline rate of compliance alerts and permission grants per device and per user role (e.g., 'Developers', 'Executives') over a 30-day rolling window. Generate a 'Peer Group Anomaly' alert if a single device or user generates a number of these events that exceeds 3 standard deviations above the mean for their respective group, indicating a potential outlier. 3. (Machine Learning) Utilize a UEBA platform to ingest a stream of events from MDM/MTD, authentication, and network logs. Train a sequence-to-sequence autoencoder to learn normal event chains for each user. An alert is triggered when an observed sequence has a high reconstruction error, indicating anomaly. For example, a high-risk sequence could be: [User logs in from new country] -> [New app installed from non-store source] -> [App granted Device Admin rights] -> [MTD agent process terminates]."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ],
    "references": [
      {
        "id": 1,
        "text": "Samsung Knox Mobile Threat Defense. Samsung. Retrieved September 29, 2025, from https://www.samsungknox.com/en/solutions/mobile-threat-defense"
      }
    ]
  }
]