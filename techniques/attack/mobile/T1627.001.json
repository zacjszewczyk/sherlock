[
  {
    "information_requirement": "Is the adversary using geofencing to evade detection or analysis on our mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1627.001",
        "name": "Geofencing",
        "evidence": [
          {
            "description": "An application's manifest, retrieved via static analysis, requests high-risk, persistent location permissions (`android.permission.ACCESS_BACKGROUND_LOCATION` or an `NSLocationAlwaysAndWhenInUseUsageDescription` key with a corresponding `requestAlwaysAuthorization()` call), while its functional category (e.g., 'Productivity', 'Finance') as defined by the app store or corporate policy has no plausible requirement for such access.",
            "data_sources": [
              "MDM App Inventory Report",
              "Static Analysis Tool Output (e.g., MobSF JSON report)",
              "Corporate Application Policy",
              "Application Store Metadata"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform, Application Vetting Sandbox, Corporate App Store Repository, Managed Mobile Endpoints",
            "action": [
              "Using MDM inventory data, identify all applications with the `android.permission.ACCESS_BACKGROUND_LOCATION` or `NSLocationAlwaysAndWhenInUseUsageDescription` permission. Cross-reference this list against a policy-defined set of application categories (e.g., 'Navigation', 'Weather') where such access is justified. Generate an alert for any application that possesses the permission but does not belong to an approved category.",
              "For all managed mobile applications, group by their official App Store category. For each category, calculate the prevalence rate (as a percentage) of applications requesting `ACCESS_BACKGROUND_LOCATION`. Flag any application that requests this permission while belonging to a category where the prevalence rate is a statistical outlier (e.g., below the 5th percentile for that permission across all categories), indicating anomalous behavior relative to its peers.",
              "Apply a pre-trained classification model (e.g., Random Forest, Gradient Boosting) to the static features of a new or updated application. Features must include the full set of requested permissions (one-hot encoded), presence of specific geofencing API calls (e.g., `GeofencingClient`, `CLLocationManager`), and the application's category. Generate an alert for manual review if the model outputs a malicious probability score exceeding a defined threshold (e.g., > 0.85)."
            ]
          },
          {
            "description": "In a dynamic analysis sandbox, a simulated change in the device's GPS coordinates from a 'permitted' region to a 'restricted' one (or vice versa) triggers an abrupt and sustained change in the application's network behavior. This is confirmed within 120 seconds of the location change by observing either: 1) The cessation of periodic network callbacks (beacons) in Zeek conn.log, 2) A greater than 80% reduction in total egress data volume in Zeek conn.log, or 3) A quantifiable shift in DNS requests from high-entropy to common service domains in Zeek dns.log.",
            "data_sources": [
              "Mobile Application Vetting Sandbox Logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Vetting Sandbox, Network Egress Points (VPN, Corporate Wi-Fi), DNS Resolvers, Web Proxy Servers",
            "action": [
              "In a dynamic analysis sandbox, establish a 10-minute baseline of the application's network activity using `Zeek conn.log` to identify any periodic connections (beacons) to a consistent destination IP/port. Simulate a GPS location change to a country outside the organization's primary area of operations. Generate an alert if the identified beaconing activity ceases and does not resume for at least 5 minutes after the location change.",
              "During the sandboxed analysis, capture all network traffic via Zeek logs. In 60-second windows, calculate two metrics: the Shannon entropy of the set of requested second-level domains from `Zeek dns.log` and the 90th percentile of outbound bytes (`orig_bytes`) per connection from `conn.log`. After simulating the GPS location change, compare the post-change moving average of these metrics to the pre-change baseline. Generate an alert if the DNS entropy drops by more than 1.5 standard deviations AND the 90th percentile of `orig_bytes` drops by more than 75%.",
              "Train a multivariate time-series anomaly detection model (e.g., LSTM autoencoder) on baseline network telemetry (e.g., connection count, total `orig_bytes`, DNS request count from Zeek logs) from known-good sandboxed applications. During analysis of a new app, feed its live telemetry into the model and introduce the simulated GPS location change as an exogenous event. A high reconstruction error immediately following the location change, which then settles into a new, stable low-activity state, indicates a high probability of geofencing-based evasion and should trigger an alert."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]