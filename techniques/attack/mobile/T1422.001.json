[
  {
    "information_requirement": "Is an adversary performing network discovery on a compromised mobile device? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1422.001",
        "name": "Internet Connection Discovery",
        "evidence": [
          {
            "description": "Execution of network diagnostic commands (e.g., 'netstat', 'ping', 'ifconfig', 'getprop') on a mobile endpoint, where the parent process is not on a pre-defined allowlist of authorized system or administrative tools, and the execution context is a remote shell (e.g., via Android Debug Bridge) outside of a documented maintenance window.",
            "data_sources": [
              "Mobile EDR process execution logs",
              "Android Debug Bridge (ADB) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices (Android, iOS), Mobile Device Management (MDM) servers, Endpoint Detection and Response (EDR) platform consoles",
            "action": [
              "Create a detection rule that alerts when a process creation event on a mobile endpoint contains command-line arguments matching 'netstat', 'ping', 'ifconfig', or 'getprop net.dns1', and the parent process is not on a pre-defined allowlist of system utilities (e.g., 'system_server', 'zygote') or approved MDM clients. Correlate with ADB logs to confirm if the session originates from a remote, non-development source IP.",
              "For each mobile device, maintain a 30-day baseline of all command-line executions. Calculate the fleet-wide rarity of each executed command. Alert if a network discovery command is executed and its rarity score is in the top 5% across the fleet. Additionally, monitor the daily count of such commands per device and alert if the count exceeds the 99th percentile of that device's own historical daily execution volume.",
              "Train a Random Forest classification model using labeled historical mobile process data. Features should include: tokenized command-line arguments, parent process name, process privileges, execution hour-of-day, and a binary feature indicating if the process was spawned from a remote shell. Deploy the model to score new process events in real-time and alert when the probability of malice exceeds a pre-determined confidence threshold (e.g., 0.90)."
            ]
          },
          {
            "description": "A mobile device's IP address generates a burst of network connections within a 60-second window exhibiting all of the following: 1) DNS queries for more than 10 distinct, high-availability domains (e.g., google.com, cloudflare.com); 2) A high ratio ($$>80\\%$$) of TCP connections with a duration less than 1 second; 3) Low data transfer per connection (total bytes $$< 1024$$). This pattern indicates automated probing rather than user browsing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, corporate Wi-Fi controllers, VPN concentrators, Internal DNS resolvers",
            "action": [
              "Implement a detection rule that alerts when an outbound connection from a mobile device IP range matches a destination IP on a high-confidence threat intelligence feed for C2 servers. Upon alert, automatically enrich the event with the corresponding DNS query from Zeek dns.log and device owner information from the MDM platform.",
              "Aggregate Zeek conn.log and dns.log data per source IP into 1-minute tumbling windows. For each window, calculate the Shannon entropy of destination IP addresses, the count of unique domains queried, and the ratio of short-lived ($$<1s$$) to total connections. Establish a 28-day baseline for these metrics for each device. Generate an alert when two or more of these metrics simultaneously exceed 3 standard deviations from their respective means for that device.",
              "Deploy an unsupervised Isolation Forest model to detect anomalies in network traffic per mobile device. Engineer features for 1-minute windows, including: connection count, total bytes transferred, ratio of TCP to UDP connections, destination port entropy, and the count of distinct destination Autonomous Systems (ASNs). Investigate any device flagged as a significant outlier by the model as a potential instance of network discovery."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]