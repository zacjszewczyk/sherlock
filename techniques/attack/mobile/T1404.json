[
  {
    "information_requirement": "Has an adversary successfully elevated privileges on a mobile device by exploiting a software vulnerability? (PIR)",
    "tactic_id": "TA0029",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1404",
        "name": "Exploitation for Privilege Escalation",
        "evidence": [
          {
            "description": "An MDM/UEM platform log event explicitly records a change in a device's integrity status. This is observed as a field such as `isJailbroken` or `isRooted` changing from `false` to `true`, or a `complianceStatus` field transitioning to `non-compliant` with an associated reason code indicating `Rooting Detected` or `Device Integrity Compromise` [1].",
            "data_sources": [
              "MDM/UEM compliance logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM management servers, cloud management console, managed mobile devices (corporate and BYOD), enterprise network gateways, VPN concentrators, and DNS resolvers.",
            "action": [
              "Configure a real-time SIEM correlation rule to generate a critical alert immediately upon ingestion of an MDM/UEM log where a device's `isJailbroken` or `isRooted` field value changes to `true` or the `complianceStatus` becomes `non-compliant` with a reason matching a device integrity failure.",
              "For any device triggering the alert, query its network logs (Zeek conn.log) for the 24 hours preceding the event. For each connection, calculate the rarity of the destination port and destination ASN against the device's 30-day baseline. Flag any connection where the destination port's frequency is below the 5th percentile and the ASN is new for that device. A cumulative score exceeding a predefined threshold indicates suspicious precursor activity.",
              "For flagged connections, extract features including connection duration, bytes sent/received, protocol, destination port rarity score, and the JA3/JA3S hash from Zeek ssl.log. Feed these features into a pre-trained Isolation Forest anomaly detection model. Flag connections receiving a high anomaly score that occur within 60 minutes of the root/jailbreak detection as a likely exploit delivery or C2 channel."
            ]
          },
          {
            "description": "A log from an MDM/UEM or Mobile Threat Protection (MTP) platform records the installation or execution of a mobile application whose attributes match a known malicious indicator. The match is identified by comparing the application's SHA256 file hash, package name (e.g., `com.exploit.pwn`), or code-signing certificate serial number against a curated threat intelligence feed.",
            "data_sources": [
              "MDM/UEM application inventory logs",
              "Mobile Threat Protection (MTP) agent logs",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile devices with MTP agents, MDM/UEM management console, integrated threat intelligence platforms, network egress points, and corporate Wi-Fi infrastructure.",
            "action": [
              "Implement a continuous SIEM rule that cross-references all application installation events from MDM/MTP logs against a threat intelligence database of malicious mobile application hashes, package names, and signing certificates. Trigger a high-severity alert on any match.",
              "For any alerted device, analyze its DNS query history (Zeek dns.log) from the 24 hours prior to installation. Calculate the Shannon entropy of the queried FQDNs. Flag domains where the entropy score exceeds the 95th percentile for the device's peer group (e.g., all iOS devices in the marketing department). Additionally, calculate the ratio of NXDOMAIN responses to total queries; a ratio exceeding 3 standard deviations from the device's 30-day moving average indicates potential C2 beaconing.",
              "Analyze network sessions (Zeek http.log, ssl.log) associated with application downloads preceding the malicious app installation. Use a pre-trained Random Forest classification model to identify malicious downloads based on features including: User-Agent string, JA3/JA3S hash, the ratio of uppercase to lowercase characters in the URL path, SSL certificate validity period, and destination IP reputation score. A session classified as 'malicious' is a likely exploit delivery vector."
            ]
          },
          {
            "description": "A Mobile Threat Protection (MTP) agent log records a sequence of anomalous system-level events or API calls originating from a single, non-system application. This is observed as a process attempting to read or write to protected memory regions, making an unusually high frequency of privileged API calls, or spawning unexpected child processes such as `su` or `sh`.",
            "data_sources": [
              "Mobile Threat Protection (MTP) process event logs",
              "Mobile Threat Protection (MTP) API call logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices (corporate and BYOD) with MTP agents installed, Enterprise network gateways, DNS resolvers.",
            "action": [
              "Create a SIEM rule to generate a high-severity alert on any MTP log event where a non-system, user-installed application process is observed spawning a shell process (e.g., `su`, `sh`) or modifying a critical system file outside of its designated container.",
              "For each application process on a device, establish a baseline of normal API call frequency (e.g., calls per minute) and the distinct set of API calls made. Monitor for deviations where a process's API call rate exceeds the 99th percentile of its historical baseline, or when it begins using API calls never before seen for that application. A significant deviation triggers an alert for review.",
              "Utilize a pre-trained LSTM autoencoder on legitimate API call sequences from benign applications. Feed real-time API call sequences from MTP logs into the model. A high reconstruction error for a given sequence indicates it is anomalous and may represent a multi-stage exploit chain. Correlate this anomaly with suspicious network beaconing from the same device in Zeek conn.log."
            ]
          },
          {
            "description": "A change is detected in a mobile device's security configuration that deviates from the corporate policy enforced by an MDM/UEM platform. This includes events such as the enabling of 'Developer Mode' on Android, the installation of a new trusted root certificate, or a change in settings that permits app installation from 'Unknown Sources'.",
            "data_sources": [
              "MDM/UEM configuration logs",
              "MDM/UEM compliance logs",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM management console, managed mobile devices, enterprise certificate authorities, network gateways.",
            "action": [
              "Create a SIEM rule to alert on any MDM/UEM log event indicating a policy-violating configuration change, such as a field `developerMode_enabled` changing to `true` or `unknownSources_allowed` changing to `true`.",
              "For each device, establish a baseline set of trusted root certificate issuer and serial numbers. Periodically query Zeek x509.log for all certificates observed in traffic originating from that device. Calculate the Jaccard similarity index between the baseline certificate set and the currently observed set. A score below a defined threshold (e.g., 0.95) indicates a change in the trusted certificate store, warranting investigation.",
              "Train a One-Class SVM model on feature sets representing compliant mobile device configurations (e.g., boolean flags for developer mode, unknown sources, USB debugging; count of installed configuration profiles). Feed real-time configuration snapshots from MDM/UEM logs into the model. Flag any device configuration classified as an outlier as potentially compromised by a privilege escalation exploit that is altering security settings."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]