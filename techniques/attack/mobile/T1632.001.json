[
  {
    "information_requirement": "Has an adversary modified device security policies to evade defenses? (TA0030 - Defense Evasion) (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1632.001",
        "name": "Code Signing Policy Modification",
        "evidence": [
          {
            "description": "A state change to 'granted' is observed for the Android 'REQUEST_INSTALL_PACKAGES' permission for an application whose package name is not on the organizational allowlist of approved installers.",
            "data_sources": [
              "MDM ApplicationPermissionState Log",
              "MDM ApplicationInventory Report"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android device fleet; MDM Management Server; Organizational App Store Servers",
            "action": "1. (Symbolic) Maintain an explicit allowlist of package names authorized to hold the 'REQUEST_INSTALL_PACKAGES' permission (e.g., 'com.android.vending'). Create a SIEM rule to query MDM logs for permission state changes. Generate a high-severity alert when this permission is granted to any package name not on the allowlist. 2. (Statistical) For each app granted the installer permission, query the MDM application inventory to calculate its fleet-wide installation prevalence. Establish a prevalence baseline for all apps over the last 90 days. Calculate the 5th and 10th percentile prevalence thresholds. Flag any app granted this permission whose prevalence falls below the 5th percentile, as this indicates a rare or non-standard application is acting as an installer. 3. (Machine Learning) Train a logistic regression classifier to predict the probability of a 'REQUEST_INSTALL_PACKAGES' permission grant being malicious. Use features such as: application prevalence (numeric, normalized), application category (one-hot encoded), installation source (e.g., 'Google Play', 'sideloaded', 'MDM Push', 'Unknown'), the total count of other 'dangerous' permissions requested by the app (numeric), and a binary flag indicating if the app is managed by MDM. An output probability score greater than 0.8 should trigger an automated investigation or high-priority analyst alert."
          },
          {
            "description": "The SHA-256 thumbprint of a user-added CA certificate on an Android device is detected and does not match any certificate on the organizational allowlist of trusted CAs.",
            "data_sources": [
              "MDM DeviceCertificateInventory Report",
              "MDM SecurityCompliance Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android device fleet; MDM Management Server; Public Key Infrastructure (PKI) Servers",
            "action": "1. (Symbolic) Maintain an allowlist of SHA-256 thumbprints for all organizationally approved user-added CA certificates. Periodically query the MDM device certificate inventory. Compare the set of installed user-added CA thumbprints on each device against the allowlist. Generate a high-severity alert for any thumbprint present on a device but not in the allowlist. 2. (Statistical) For any non-allowlisted CA certificate identified, calculate the Shannon entropy of its 'Subject' and 'Issuer' distinguished name (DN) fields. Concurrently, query the MDM inventory to calculate the certificate's prevalence as a percentage of devices on which it is installed. A certificate with high entropy in its DN fields (e.g., > 4.0, suggesting randomization) and low prevalence (e.g., < 1% of devices) is a high-confidence indicator of a targeted attack and must be escalated. 3. (Machine Learning) Use an Isolation Forest model, trained on the attributes of known-good, allowlisted certificates, to detect anomalous CAs. Engineer features including: certificate validity period (numeric, in days), public key size (numeric, e.g., 2048, 4096), Subject and Issuer string lengths (numeric), the count of Subject Alternative Names (SANs) (numeric), a binary flag for 'is_self_signed', and the number of days until expiration. The model assigns an anomaly score to each new, unknown certificate; scores in the top 1% of anomalies indicate a high degree of deviation and require immediate analyst review."
          },
          {
            "description": "An installed iOS Configuration Profile is detected with a 'PayloadIdentifier' or 'ProfileIdentifier' that is not on the organizational allowlist for the device's assigned user group or management policy.",
            "data_sources": [
              "MDM DeviceProfileInventory Report",
              "MDM DeviceCompliance Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed iOS device fleet; MDM Management Server; Apple Push Notification service (APNs) infrastructure",
            "action": "1. (Symbolic) For each device management group, maintain an allowlist of approved Configuration Profile 'PayloadIdentifier' values. Script a periodic query of MDM device profile inventories. For each device, perform a set difference between the installed profile identifiers and the approved allowlist for its assigned group. Generate an alert for any profile identifier found on the device that is not on the corresponding allowlist. 2. (Statistical) From MDM logs, extract the installation timestamp for every configuration profile across the fleet. Establish a baseline distribution of installation counts per hour for each day of the week over the last 90 days. Use a modified Z-score to identify any installation that occurs at a statistically anomalous time (e.g., > 3.5 standard deviations from the mean for that hour/day slot). Flag these profiles and the associated devices for review. 3. (Machine Learning) Implement a time-series anomaly detection model, such as Prophet or a Seasonal-ARIMA model, on the aggregate count of new profile installations per hour across the entire fleet. The model learns the normal rhythm of deployments (e.g., spikes on patch days, low activity on weekends). A sudden spike in installations that is flagged as an anomaly by the model and does not correlate with a scheduled IT change request indicates a potential widespread campaign and should trigger a high-severity, fleet-wide alert for immediate triage."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]