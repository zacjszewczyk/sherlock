[
  {
    "information_requirement": "Is a compromised mobile device being used to perform network service discovery on the internal network? (TA0032 - Discovery)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1423",
        "name": "Network Service Scanning",
        "evidence": [
          {
            "description": "A mobile device IP address initiates a high volume of connection attempts to many unique internal IP addresses (horizontal scan) or many unique ports on a single internal host (vertical scan) over a short period. This activity is anomalous compared to the device's own historical behavior and the behavior of its peer group.",
            "data_sources": [
              "Zeek conn.log",
              "DHCP Server Logs",
              "VPN Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools), Core network switches, VPN concentrators, DHCP servers",
            "action": [
              "Deploy network canaries (honeypots) on unused IP addresses within mobile-accessible network segments. Create a high-priority alert to trigger on any connection attempt from a mobile device IP range to a canary IP or a predefined canary port on a production server.",
              "For each mobile device IP, query Zeek conn.log every 5 minutes to count unique destination IPs and unique destination ports. Compare these counts against a 7-day rolling baseline for the individual device. Generate an alert if the count of unique IPs or ports exceeds 3 standard deviations from the device's baseline and also crosses the 99th percentile for the entire mobile device population during the same time window.",
              "Generate a daily feature set for each mobile device from Zeek conn.log, including metrics like unique destination IP count, unique port count, ratio of successful to failed connections, and destination port entropy. Apply a density-based clustering algorithm (e.g., DBSCAN) to this feature set to identify outlier devices whose network behavior does not conform to any established cluster, indicating potential scanning activity."
            ]
          },
          {
            "description": "A mobile device IP generates a statistically significant ratio of failed or rejected connections (e.g., Zeek conn_state 'S0', 'REJ', 'RSTO', 'RSTR') to successful connections ('SF'), indicating a potential scan against closed ports or firewalled hosts.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools), Core network switches, Network firewalls",
            "action": [
              "Create a real-time rule to alert when a single mobile source IP address generates more than 10 connections with a 'REJ' state in Zeek conn.log to a single destination host within a 1-minute window. This indicates a host-based firewall is actively rejecting scan attempts.",
              "Every 10 minutes, calculate the ratio of failed connection states (S0, REJ, RSTO, RSTR) to successful states (SF) in Zeek conn.log for each mobile device IP. Generate an alert if this ratio exceeds the 95th percentile for all mobile devices, indicating an unusually high rate of connection failures.",
              "For each mobile device, apply a time series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the per-minute count of failed connection states (S0, REJ). Train the model on historical data to learn the normal baseline of connection failures and alert on statistically significant spikes that deviate from this learned pattern."
            ]
          },
          {
            "description": "Traffic originating from a mobile device IP matches known signatures of scanning tools (e.g., specific User-Agent strings in http.log, payload patterns) or triggers Zeek's built-in scanning detection notices (e.g., Scan::Port_Scan).",
            "data_sources": [
              "Zeek notice.log",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek signatures.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network tap or span port monitoring the ingress/egress of mobile device network segments (Wi-Fi, VPN).",
            "action": [
              "Monitor Zeek notice.log for 'Scan::Port_Scan' and 'Scan::Address_Scan' events where the originator IP is from a mobile device subnet. Create a high-priority alert for these events. Additionally, implement and monitor signatures for known scanner User-Agent strings (e.g., 'Nmap Scripting Engine', 'masscan') in Zeek http.log.",
              "For TCP sessions from mobile IPs where the application protocol is not identified ('OTH' in Zeek conn.log), calculate the Shannon entropy of the initial payload data (e.g., first 64 bytes). Generate an alert if a device's average payload entropy over a 10-minute window exceeds the 98th percentile of all mobile devices, which can indicate randomized or unusual probe packets.",
              "Train a supervised classification model (e.g., Random Forest) using labeled historical data containing both benign and known scanning traffic. Use features from Zeek conn.log like duration, packet/byte counts, TCP flags, and connection state. Apply the trained model to classify new network flows from mobile devices in near-real-time to predict and alert on scanning activity."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]