[
  {
    "information_requirement": "Is an adversary using masquerading techniques on corporate mobile devices to evade detection? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1655.001",
        "name": "Match Legitimate Name or Location",
        "evidence": [
          {
            "description": "A mobile application installed on a managed device possesses a display name, package name, or icon hash that is identical or has a Levenshtein distance less than 3 compared to a known legitimate application, but its signer certificate thumbprint does not match the verified certificate for that application. Alternatively, the application's package name or signer certificate hash matches an entry on a known-malicious indicator feed.",
            "data_sources": [
              "Mobile Device Management (MDM) Application Inventory Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) server database; Cloud-hosted MDM administrative consoles; Corporate-managed iOS and Android devices.",
            "action": [
              "Continuously query MDM application inventory logs for installed package names and signer certificate hashes. Compare these values against a threat intelligence feed of known-malicious or typosquatted application identifiers and certificates. Generate a high-severity alert for any match found.",
              "Build and maintain an organizational allowlist of (display_name, package_name, signer_certificate_thumbprint, icon_hash) tuples for all approved applications. Periodically group all installed applications by display name or icon hash. Generate a medium-severity alert if any group contains more than one unique (package_name, signer_certificate_thumbprint) combination. Separately, calculate the Levenshtein distance between all installed package names and the package names on the allowlist; flag any application with a distance score > 0 and < 3 for manual review as potential typosquatting.",
              "Train a classification model (e.g., Random Forest) using features extracted from application manifests (e.g., permission count, declared high-risk permissions, number of exported components) and package name characteristics (e.g., character entropy, n-gram frequency, number of segments). Score all newly installed applications and flag those classified as 'potential masquerade' with a model confidence score exceeding 0.85 for analyst investigation."
            ]
          },
          {
            "description": "A mobile application, previously flagged as potentially masquerading, generates network traffic that deviates from the established baseline of the legitimate application it mimics. Deviations include connections to known malicious domains, domains with a Shannon entropy score > 4.5, connections on destination ports not present in the legitimate application's baseline profile, or the use of a client TLS fingerprint (JA3) associated with known malware.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Mobile Device Management (MDM) Application Inventory Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (Firewalls, Proxies), Corporate WiFi network segments, and VPN concentrators",
            "action": [
              "Using the device IP from MDM logs, filter network logs (Zeek dns.log, ssl.log, conn.log) for traffic originating from devices with a suspected masquerading application. Join DNS queries against a threat intelligence feed of known C2 domains and join client TLS JA3 hashes from ssl.log against a feed of known malicious fingerprints. Generate a high-severity alert on any match.",
              "For each domain queried by the suspect application (from Zeek dns.log), calculate its Shannon entropy. Flag domains with an entropy score exceeding the 98th percentile of the 30-day organizational DNS query baseline. From Zeek conn.log, compare the set of destination ports and protocols used by the suspect application against the established baseline for the legitimate application; alert if the suspect application uses ports or protocols outside the baseline set.",
              "Apply a pre-trained time-series anomaly detection model (e.g., LSTM Autoencoder) to a multivariate vector of network features aggregated in 5-minute intervals per device (e.g., total bytes sent, total bytes received, connection count, unique destination IP count). The model should be trained on historical data from devices running only the legitimate version of the application. Flag any time window for the suspect device where the model's reconstruction error is identified as a significant anomaly, indicating behavior inconsistent with the legitimate application."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]