[
  {
    "information_requirement": "Is an adversary using our managed mobile devices to generate fraudulent or malicious outbound traffic? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1643",
        "name": "Generate Traffic from Victim",
        "evidence": [
          {
            "description": "Evidence of anomalous SMS activity from a managed mobile device, defined by either: (1) any outbound SMS message sent to a destination number present on a threat intelligence blocklist of premium-rate or fraudulent numbers, or (2) a daily SMS volume originating from a non-messaging application that exceeds a statistically significant baseline (e.g., 3 standard deviations above the device's 30-day mean or the 99th percentile of its peer group).",
            "data_sources": [
              "Carrier billing records",
              "Mobile Device Management (MDM) application inventory logs",
              "MDM application permission logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet, MDM servers, and Telecommunications provider billing systems",
            "action": "1. (Symbolic) Configure a SIEM rule to query carrier SMS logs every 15 minutes. Compare the destination_number field against a continuously updated threat intelligence list of known premium-rate and fraudulent numbers. Trigger a high-severity alert if a match is found, including the device ID, user, application name (if available from MDM), and destination number. 2. (Statistical) For each managed Android device, use MDM logs to identify applications with the `SEND_SMS` permission not categorized as 'Messaging'. For these applications, establish a 30-day rolling baseline of daily SMS volume using carrier logs, calculating the mean and standard deviation per device. Create a scheduled query to run daily that compares the current day's SMS count from these apps against the baseline. Trigger a medium-severity alert if the count exceeds the device's mean by 3 standard deviations or is above the 99th percentile for all non-messaging apps across the fleet. 3. (Machine Learning) Engineer features from MDM and carrier logs including: application category, `SEND_SMS` permission status, daily SMS count, count of unique recipients, destination country codes, and time-of-day statistics (e.g., percentage of SMS sent outside of 8am-6pm local time). Train a Random Forest classification model on historically labeled data (benign vs. known fraud). Deploy the model to score each device's daily activity, triggering a high-severity alert for any device with a 'fraudulent' classification and a model confidence score greater than 0.90, and initiate an automated device quarantine via MDM."
          },
          {
            "description": "Evidence of automated, repetitive network traffic from a managed mobile device, defined by a combination of: (1) a volume of DNS queries or HTTP/S requests in a short time window (e.g., one hour) that exceeds the 95th percentile of the device's historical baseline, (2) low Shannon entropy (< 2.5) in the FQDNs of DNS queries, indicating non-randomness, and (3) a high ratio of connections to data transferred (e.g., > 10 connections per kilobyte), suggesting many small, non-payload-bearing connections.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, DNS resolvers, and Internet web proxies",
            "action": "1. (Symbolic) Integrate threat intelligence feeds for ad fraud, click fraud, and app-ranking manipulation services into the SIEM. Create a real-time correlation rule that inspects `Zeek dns.log` (query field) and `Zeek http.log` (host and uri fields) from managed mobile device IP ranges. Trigger a medium-severity alert if a request matches an indicator from the feed, including the source IP, destination domain/URL, and the HTTP user agent from `Zeek http.log`. 2. (Statistical) Create a scheduled query to run hourly against Zeek logs for each mobile device IP. Calculate the following metrics: a) total connection count from `conn.log`, b) Shannon entropy of the `query` field in `dns.log`, and c) the ratio of connection count (`conn.log`) to total bytes transferred (`orig_bytes` + `resp_bytes` in `conn.log`). Establish a 30-day rolling baseline for these hourly metrics for each device. Trigger a medium-severity alert if the connection count exceeds the 95th percentile of its baseline AND the DNS query entropy is below a threshold of 2.5. 3. (Machine Learning) Aggregate Zeek log data into 5-minute windows for each device IP. Engineer time-series features such as: connection count, unique DNS queries, total bytes transferred, DNS query entropy, and ratio of short-lived connections (< 5 seconds). Train an Isolation Forest model on at least 30 days of historical data to learn each device's normal traffic patterns. Deploy the model to score new 5-minute windows in near real-time, triggering an alert when the anomaly score for a device's traffic window exceeds a predefined threshold indicating a significant deviation from its norm."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]