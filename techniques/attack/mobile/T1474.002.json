[
  {
    "information_requirement": "Has an adversary gained initial access to our mobile device fleet through a compromised hardware supply chain? (TA0027 - Initial Access) (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1474.002",
        "name": "Compromise Hardware Supply Chain",
        "evidence": [
          {
            "description": "A mobile device reports a boot-level security state of 'unlocked' or a secure boot integrity check result of 'failed', where the event is not correlated with an authorized change request or a registered developer device profile within a 24-hour window.",
            "data_sources": [
              "MDM device attestation logs",
              "Change management database records",
              "Developer device registration list"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM platform servers, asset management database, and endpoint mobile devices.",
            "action": "1. (Symbolic) Correlate MDM device attestation logs with change management and developer device databases. Trigger an alert for any device reporting a `bootloader_status` of `unlocked` or a `secure_boot_check` of `failed` that does not have a matching `device_id` in the developer database or an approved change ticket within the last 24 hours. 2. (Statistical) For each device model and OS version pair, calculate a 30-day rolling baseline of the daily attestation failure rate. Compute the daily Z-score for this rate. An alert is triggered if $$ Z = (x - \\mu) / \\sigma > 3 $$, where $$ x $$ is the current day's failure rate, $$ \\mu $$ is the 30-day mean, and $$ \\sigma $$ is the 30-day standard deviation, indicating a statistically significant increase in failures for that cohort. 3. (Machine Learning) Deploy a trained classification model (e.g., Random Forest) that uses features including device model, OS version, user role, device age, and time of day to predict malicious attestation failures. Ingest historical, labeled attestation data for training. An alert is generated when the model predicts a new failure event with a confidence score exceeding a predefined threshold (e.g., 0.85)."
          },
          {
            "description": "A device from a new procurement batch reports hardware or firmware identifiers (e.g., baseband version, build number, kernel version) that deviate from a pre-defined 'golden manifest' for that batch or are identified as statistical outliers within the batch's population.",
            "data_sources": [
              "MDM device inventory logs",
              "Procurement records",
              "Golden manifest files"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM platform, asset management database, and procurement systems.",
            "action": "1. (Symbolic) Upon ingestion of a new procurement batch, execute a query against the MDM inventory for all devices associated with the `procurement_batch_id`. For each device, compare reported identifiers (`baseband_version`, `build_number`, `kernel_version`) against a golden manifest for that specific model and purchase order. Any device with a non-matching identifier is flagged for manual review. 2. (Statistical) For a given `procurement_batch_id`, calculate the frequency distribution for each key firmware identifier. Flag any identifier value that appears in less than 1% of the devices in the batch. This low prevalence suggests a potential one-off modification and should be investigated. 3. (Machine Learning) For a new procurement batch, create a feature vector for each device from its hardware and firmware identifiers. Apply a density-based clustering algorithm (e.g., DBSCAN) to these vectors. Devices that the algorithm classifies as noise points (i.e., not belonging to a dense cluster) are considered outliers, automatically quarantined via MDM, and flagged for physical inspection."
          },
          {
            "description": "Within the first 60 minutes of a successful MDM enrollment, a new mobile device initiates an outbound network connection to a destination IP address or resolves a Fully Qualified Domain Name (FQDN) that is not present on the established allow-list for device provisioning and OS updates.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM enrollment logs",
              "Provisioning network allow-list"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and the MDM platform server.",
            "action": "1. (Symbolic) Create a real-time rule that triggers on an MDM enrollment log event. For the enrolling device's source IP, monitor Zeek conn.log and dns.log for 60 minutes. Compare the destination IP (`id.resp_h`) and queried FQDN (`query`) against an allow-list of approved provisioning and update servers. Any connection or query to an unlisted destination generates a high-severity alert. 2. (Statistical) For all DNS queries (`dns.log`) from the device in the initial 60-minute window, calculate the Shannon entropy of the queried FQDN's second-level domain. An alert is triggered if $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$ exceeds a pre-computed 95th percentile threshold based on normal corporate DNS traffic, indicating potential Domain Generation Algorithm (DGA) activity. 3. (Machine Learning) Use a trained time-series autoencoder (e.g., LSTM-based) to analyze the sequence of network connection metadata (destination port, protocol, bytes out, connection duration) from Zeek conn.log during the initial 60-minute provisioning window. A high reconstruction error score, indicating a significant deviation from normal behavior learned from historical provisioning sessions, triggers an alert for anomalous network activity."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]