[
  {
    "information_requirement": "Is an adversary attempting to evade defenses by locking users out of their mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629.002",
        "name": "Device Lockout",
        "evidence": [
          {
            "description": "A mobile application is granted 'Device Administrator' privileges, and the application's package name or signing certificate is either found on a threat intelligence blocklist, OR it was installed from an 'unknown source' (sideloaded), OR its installation prevalence is within the bottom 5th percentile of all applications across the managed device fleet.",
            "data_sources": [
              "MDM application inventory and event logs",
              "Mobile EDR process and permission grant logs",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices; Mobile Device Management (MDM) servers; Application Vetting and Sandboxing Environments; Enterprise Application Stores",
            "action": [
              "Query MDM and Mobile EDR logs for all 'Device Administrator Enabled' events. For each event, join the application's package name and signing certificate hash against a threat intelligence feed of known malicious indicators. Generate a high-severity alert for any match.",
              "For every 'Device Administrator Enabled' event, calculate a risk score. Increment the score for each of the following conditions: 1) the application package name is not on the approved corporate application allowlist; 2) the installation source is identified as 'unknown' or 'sideloaded'; 3) the application's total installation count across all managed devices falls below the 5th percentile (rare application). Alert on any application where the cumulative risk score exceeds a defined threshold (e.g., >1).",
              "Develop and apply a logistic regression classification model to score applications that request Device Administrator rights. Feature engineering should include: installation source (one-hot encoded), time delta between installation and administrator grant, total number of other permissions requested, application age on public app stores, and whether the signing certificate is self-signed. Flag applications with a predicted malice probability above $$ 0.85 $$ for analyst review."
            ]
          },
          {
            "description": "Network traffic originating from a mobile application with either 'Device Administrator' or `SYSTEM_ALERT_WINDOW` permissions exhibits one or more of the following: 1) communication with a destination IP/domain on a threat intelligence blocklist; 2) resolution of a DNS name whose character-level entropy score is above the 98th percentile of all lookups; 3) an outbound data transfer volume (e.g., in a 1-hour window) that is more than three standard deviations above the application's historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "MDM Application Inventory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Our organization's internet gateway; Corporate DNS resolvers; Network proxies; VPN Concentrators",
            "action": [
              "Correlate MDM logs (to identify devices with privileged apps) with network logs (Zeek conn.log) using the device's source IP address and event timestamps. Create a rule that generates a high-severity alert when an application possessing 'Device Administrator' or 'SYSTEM_ALERT_WINDOW' permissions communicates with a destination IP address or domain present on an active threat intelligence blocklist.",
              "Using Zeek dns.log, calculate the Shannon entropy for all queried domain names. For each application with elevated permissions, establish a baseline of domain entropy scores over a 30-day period. Generate an alert if such an application queries a new domain whose entropy score exceeds the 98th percentile of the established baseline, indicating a potential DGA.",
              "For each unique application/user pair, model the hourly outbound data volume (`orig_bytes` from Zeek conn.log) using a time-series anomaly detection algorithm like Seasonal-ARIMA. Train the model on at least 30 days of historical data. The model should automatically flag any hourly data volume that it identifies as a significant anomaly, which could indicate unexpected C2 communication or data staging associated with a lockout attempt."
            ]
          },
          {
            "description": "A mobile application possessing the `SYSTEM_ALERT_WINDOW` (overlay) permission remains the active foreground process for a duration that is statistically anomalous and occurs without corresponding user input events. An anomalous duration is defined as a continuous foreground session exceeding the 98th percentile of the historical average for that specific application on that user's device.",
            "data_sources": [
              "Mobile Application Vetting Scans",
              "Mobile EDR Process and Activity Logs",
              "Android Logcat",
              "MDM Application Installation Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application sandboxing environments; Corporate-managed mobile devices; Enterprise app stores and repositories; Mobile Endpoint Detection and Response (EDR) platform",
            "action": [
              "Create a detection rule that joins data from the application vetting sandbox and MDM logs. The rule should trigger a high-priority alert if an application is installed on a managed device from an 'unknown source' (from MDM logs) AND the application's manifest file (from vetting scan) contains the `SYSTEM_ALERT_WINDOW` permission request.",
              "From Mobile EDR activity logs, compute a rolling 30-day baseline of foreground session durations for each application on a per-user basis. Create a rule that alerts when an application with `SYSTEM_ALERT_WINDOW` permission has a foreground session duration that exceeds the 98th percentile of its baseline AND has zero associated user input events (e.g., taps, swipes) during that session.",
              "Implement an unsupervised Isolation Forest model to detect anomalous application sessions indicative of overlay attacks. Ingest features from Mobile EDR logs such as: session duration, CPU usage, memory consumption, network data sent/received during the session, and the count of user input events. The model should score each session, and any session receiving an anomaly score in the top 1% should be flagged for analyst review as a potential device lockout."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]