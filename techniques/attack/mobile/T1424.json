[
  {
    "information_requirement": "Is an adversary attempting to discover running processes on our managed mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1424",
        "name": "Process Discovery",
        "evidence": [
          {
            "description": "A mobile device exfiltrates a process list over the network, observable as an HTTP/S POST request with a high-entropy body (e.g., > 4.5 Shannon entropy) or a DNS query with a subdomain label exceeding the 99th percentile of observed lengths, indicating encoded or compressed data.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi access points, network egress points, DNS servers, VPN concentrators, web proxies.",
            "action": "1. (Symbolic) Create a SIEM rule that triggers when Zeek conn.log shows a connection from a mobile device IP range to a destination IP or domain on a C2 threat intelligence list AND Zeek http.log shows a corresponding HTTP POST request to that destination. 2. (Statistical) For all outbound HTTP POST requests from the mobile VLAN, calculate the Shannon entropy of the POST body (from Zeek files.log or packet captures) and the URI length. For all DNS queries (Zeek dns.log), calculate the length and character set entropy of the query name. Establish 30-day rolling baselines for these metrics per user and per device. Generate an alert when a value exceeds the 99.5th percentile of its respective baseline, especially if the destination is a newly observed domain (NOD). 3. (Machine Learning) Train a Random Forest classifier to identify exfiltration. Use features from Zeek logs including: request body entropy, URI length, query name length, query name entropy, connection duration, bytes sent, destination port, domain age, destination ASN rarity, and TLS cipher suite popularity. Use a separate LSTM autoencoder trained on a time-series of bytes sent per device per hour to detect anomalous spikes in outbound traffic volume."
          },
          {
            "description": "On a host computer connected to a mobile device via USB, the Android Debug Bridge process (adb.exe) spawns a child process for host process enumeration (e.g., 'tasklist.exe', 'ps.exe', or 'powershell.exe' with 'Get-Process' in the command line). This is identified by a Windows Event ID 4688 where ParentProcessName is 'adb.exe', NewProcessName is a known enumeration utility, and the CommandLine field contains relevant arguments.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Logging (Event ID 4104)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Employee workstations, developer machines, privileged user workstations, Jump servers, Virtual Desktop Infrastructure (VDI) instances.",
            "action": "1. (Symbolic) Create a high-severity SIEM alert for any Windows Event ID 4688 where ParentProcessName ends with 'adb.exe' and NewProcessName is one of 'tasklist.exe', 'ps.exe', 'wmic.exe', or 'powershell.exe'. For PowerShell, the rule must inspect the command line arguments from the event or associated PowerShell logs (Event ID 4104) for 'Get-Process', 'gps', or 'ps'. 2. (Statistical) For all hosts where 'adb.exe' is observed, build a baseline of common child processes spawned. Calculate an environmental prevalence score for each parent-child process pair (e.g., ('adb.exe', 'tasklist.exe')). An alert is triggered when a pair with a prevalence score below a threshold (e.g., seen on <1% of hosts where adb.exe is used) is observed, or if any such pair is observed on a host not belonging to a pre-defined 'Developer Workstations' group. 3. (Machine Learning) Utilize an Isolation Forest model on Windows Event ID 4688 data. Features should include ParentProcessName, NewProcessName, user context, host group (developer vs. non-developer), and command line argument length and entropy. The model will identify anomalous process lineage, such as 'adb.exe' spawning 'tasklist.exe' on a finance team member's machine, as a high-scoring outlier."
          },
          {
            "description": "A mobile device establishes network connections to domains, IPs, or URLs associated with mobile device rooting (Android) or jailbreaking (iOS) toolkits. This is observed in network logs as DNS queries for known malicious domains, direct-to-IP connections, or specific URI patterns in HTTP requests, which are often precursors to enabling process discovery on modern OS versions.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network egress points, guest Wi-Fi networks, Mobile Device Management (MDM) platforms, DNS resolvers, Cloud Access Security Broker (CASB) logs.",
            "action": "1. (Symbolic) Continuously ingest and update a threat intelligence feed of domains, IPs, and JA3/JA3S hashes associated with mobile rooting/jailbreaking tools. Create a real-time SIEM rule to match DNS queries (dns.log), HTTP host headers (http.log), TLS SNI fields (ssl.log), and destination IPs (conn.log) from the mobile device IP range against this feed. Any match triggers an immediate, high-severity alert. 2. (Statistical) For each mobile device, monitor for spikes in DNS queries to newly observed domains (NODs). Generate an alert if a device queries >10 NODs (where domain age < 30 days) within a 5-minute window. Correlate this with a high count (>95th percentile) of non-standard port connections (Zeek conn.log) or connections using self-signed TLS certificates (Zeek ssl.log) from the same device in the same time window. 3. (Machine Learning) Implement a domain reputation scoring model using a gradient boosting classifier (e.g., XGBoost). Features should include domain age, DNS query-to-answer ratio, TTL value, presence on threat feeds, TLS certificate issuer, and lexical features of the domain name (e.g., length, entropy). Use a time-series anomaly detection model to flag any device whose average destination reputation score drops significantly. Correlate these network-based flags with 'rooted' status alerts from an integrated Mobile Device Management (MDM) platform to confirm the device state."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]