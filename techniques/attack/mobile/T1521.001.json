[
  {
    "information_requirement": "Is an adversary using symmetric cryptography for command and control (C2) communications originating from managed mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1521.001",
        "name": "Symmetric Cryptography",
        "evidence": [
          {
            "description": "A mobile application establishes periodic network connections (beacons) to a single external IP address or domain. Over a 1-hour window, the inter-arrival time of these connections has a standard deviation below 5 seconds. The payload of these connections exhibits a calculated Shannon entropy score greater than $$ 7.5 $$, indicating encryption or compression. Additionally, the destination port used is a high-numbered port ($$ > 1024 $$) not registered to a common application or does not match the application profile associated with the source process.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Mobile Device Management (MDM) network flow logs",
              "Mobile EDR network connection logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, Corporate Wi-Fi network sensors, VPN concentrators, Internet Gateway / Egress Firewall, Cloud Access Security Broker (CASB)",
            "action": "1. (Symbolic) Correlate destination IPs and domains from mobile device network logs (Zeek conn.log, MDM logs) against threat intelligence feeds for known C2 infrastructure. Generate a high-severity alert for any match. 2. (Statistical) For each mobile device (source IP), group outbound connections by destination IP over a 1-hour sliding window. Calculate the standard deviation of inter-arrival times for each group. Flag groups where the standard deviation is below a dynamic threshold, such as the 5th percentile of all device inter-arrival time deviations. For flagged flows, use Zeek file extraction data to calculate the Shannon entropy of the payload. Create a risk score: add +3 for inter-arrival standard deviation < 5s, +3 for entropy > $$ 7.5 $$, +2 for destination port > 1024, +2 for destination ASN being a residential or cloud hosting provider. Alert on any device with a cumulative score > 5. 3. (Machine Learning) Train a Random Forest classifier to identify C2 beaconing. Use a labeled dataset of known benign and malicious mobile traffic. Features should include: inter-arrival time standard deviation, payload entropy, connection duration, total bytes sent/received, destination port, destination IP reputation, and the ratio of outbound to inbound packets. In parallel, deploy a time-series anomaly detection model (e.g., ARIMA or LSTM) on a per-device basis to monitor the volume of high-entropy outbound traffic. An alert from the time-series model should trigger a scoring run with the Random Forest classifier for the anomalous traffic."
          },
          {
            "description": "A TCP connection from a mobile device to an external destination on port 443 is observed in Zeek conn.log, but no corresponding TLS handshake is recorded in Zeek ssl.log for the same connection UID. Alternatively, a UDP connection on port 53 is observed, but no corresponding DNS query is recorded in Zeek dns.log for the same UID.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Internal DNS resolvers, Cloud Access Security Broker (CASB) logs, Core network switches",
            "action": "1. (Symbolic) Join network connection logs (Zeek conn.log) with application protocol logs (Zeek ssl.log, dns.log) using the connection UID. Create a rule that alerts on any connection where `conn.log.service` is 'ssl' or 'dns' but a corresponding entry in `ssl.log` or `dns.log` is absent. Further prioritize alerts where the destination IP is on a threat intelligence list or its ASN is not a major CDN or cloud provider. 2. (Statistical) For each mobile device, calculate a daily 'protocol mismatch ratio' defined as $$ (\\text{count of non-TLS connections on port 443}) / (\\text{total connections on port 443}) $$. Establish a 30-day rolling average of this ratio as a baseline for each device and for the entire mobile device population. Alert when a device's daily ratio exceeds its own 98th percentile or is more than 3 Median Absolute Deviations (MAD) from the population median. 3. (Machine Learning) Train an unsupervised anomaly detection model, such as an Isolation Forest or a One-Class SVM, on features from legitimate, protocol-matched connections. Features should include: port, protocol, duration, sent bytes, received bytes, Zeek's 'service' field, the 'history' string, and a boolean flag for 'has_matching_app_log'. Apply the trained model to score all new mobile device connections. Connections with high anomaly scores represent significant deviations from normal protocol behavior and should be investigated as potential C2 tunneling."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]