[
  {
    "information_requirement": "Is an adversary attempting to intercept credentials or access tokens by hijacking URI schemes on mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1635.001",
        "name": "URI Hijacking",
        "evidence": [
          {
            "description": "A mobile device inventory scan identifies an application that has registered a URI scheme identical to a legitimate, trusted application, but possesses a different package ID or signing certificate than the one defined in a curated allowlist. The identified application also exhibits one or more high-risk attributes, such as being sideloaded, having a low threat intelligence reputation, or requesting an excessive number of permissions.",
            "data_sources": [
              "MDM Application Inventory Log",
              "MTD Application Scan Log",
              "Threat Intelligence Platform Reputation Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed Mobile Endpoints (iOS/Android), Mobile Device Management (MDM) Server, Mobile Threat Defense (MTD) Platform, Application Vetting System",
            "action": [
              "Define and maintain an allowlist of trusted application package IDs, signing certificates, and their corresponding URI schemes. In a SIEM, join the mobile application inventory data with this allowlist on the `uri_scheme` field. Trigger an alert for any entry where the `uri_scheme` matches but the `package_id` or `signing_certificate` does not match the allowlist entry for that scheme. Increase alert severity if the application's source is 'sideloaded' or 'unofficial-app-store'.",
              "For each sensitive URI scheme (e.g., 'msauth://', 'okta://'), calculate the number of unique `package_id`s registered to it across the device fleet. Establish a 30-day moving average and standard deviation for this count. Generate an alert if the daily count for any sensitive scheme exceeds 3 standard deviations above the moving average. Separately, calculate the fleet-wide prevalence percentile for every `package_id`. Alert if a package with a prevalence below the 5th percentile registers a URI scheme used by a package with a prevalence above the 95th percentile, indicating a rare app impersonating a common one.",
              "Develop and deploy a risk classification model (e.g., Logistic Regression or Gradient Boosting) to score each newly observed application-URI registration. Engineer features including: `is_sideloaded` (boolean), `has_untrusted_signer` (boolean), `permission_count` (integer), `is_sensitive_scheme` (boolean), `package_prevalence_percentile` (float), `package_age_days` (integer), and `threat_intel_score` (float from 0 to 1). Train the model on historical data labeled by security analysts. In production, score each new registration and generate a high-severity alert for any application-URI pair with a risk score exceeding a predetermined threshold (e.g., > 0.85) and queue for analyst review."
            ]
          },
          {
            "description": "A mobile device generates multiple 'application chooser' dialog events for a single, sensitive URI scheme within a short time frame, such as 5 minutes. The rate of these events is anomalous when compared to the device's own historical baseline or the fleet-wide average for that URI scheme.",
            "data_sources": [
              "MTD Security Event Log",
              "Android Logcat Data Stream",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed Mobile Endpoints (iOS/Android), Mobile Threat Defense (MTD) Platform, Network Gateways (VPN Concentrators, Proxies)",
            "action": [
              "Create a SIEM correlation rule that triggers on MTD logs where `event_type` is 'app_chooser_dialog_shown' and the `uri_scheme` is on a watchlist of sensitive schemes (e.g., for SSO, finance, email). Generate a high-severity alert if a single `device_id` produces more than 2 such events for the same `uri_scheme` within a 5-minute window. Enrich the alert with the source IP from `Zeek conn.log` and the referring URL and user-agent from `Zeek http.log` from the same timeframe to identify potential phishing sources.",
              "For each `user_id`, ingest 'app_chooser_dialog_shown' event counts, aggregated hourly, into a time-series database. Calculate a 30-day baseline mean and standard deviation of hourly events for each user. Generate a medium-severity alert if a user's hourly event count exceeds their personal mean by more than 3 standard deviations, indicating a behavioral anomaly specific to that user.",
              "Implement a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD or Prophet) on the aggregated count of 'app_chooser_dialog_shown' events per hour across the entire mobile fleet. The model must be trained to account for normal business-hour patterns and weekly seasonality. Trigger an alert when the observed event count significantly deviates from the model's predicted forecast band. Automatically enrich the alert with the top contributing `uri_schemes`, `package_names`, `device_ids`, and referring URLs from `Zeek http.log` during the anomalous period to provide immediate investigation context."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]