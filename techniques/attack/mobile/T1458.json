[
  {
    "information_requirement": "Has an adversary gained initial access to a mobile device via a physical USB connection? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1458",
        "name": "Replication Through Removable Media",
        "evidence": [
          {
            "description": "A process associated with mobile device interaction (e.g., adb.exe, ideviceinstaller.exe) executes on a host within a 5-minute window of a USB device connection event. The process exhibits one or more anomalous characteristics: 1) its command-line arguments have a Shannon entropy value greater than the 98th percentile for that process across the enterprise, 2) it initiates a network connection to a domain with a reputation score below 20 (on a 1-100 scale), or 3) it connects to a destination IP address not previously associated with that process or host in the last 60 days.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows-DriverFrameworks-UserMode/Operational Event ID 2003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints with USB ports (corporate workstations, employee laptops, IT helpdesk workstations), public charging kiosks within corporate facilities, DNS servers, and network gateways.",
            "action": "Correlate USB device connection events (Windows-DriverFrameworks-UserMode/Operational Event ID 2003) with process creation (Windows Event ID 4688, Sysmon Event ID 1) and network logs (Zeek conn.log, Sysmon Event ID 3) on the same host within a 5-minute window. First, create a watchlist of mobile management processes (e.g., 'adb.exe', 'ideviceinstaller.exe', 'iFunBox.exe', 'libimobiledevice', 'fastboot.exe'). Generate a high-severity alert if a process from this list is unsigned, runs from a non-standard path (e.g., %TEMP%), and initiates a network connection to an IP or domain on a threat intelligence feed (symbolic logic). Second, for each process on the watchlist, establish a baseline of command-line argument Shannon entropy and length. Generate a medium-severity alert if a new execution's entropy exceeds the 98th percentile for that process, or if the command-line length exceeds 3 standard deviations from its historical mean, suggesting obfuscation or an unusual command (statistical method). Third, train a one-class SVM (Support Vector Machine) on features of 'normal' network connections from these tools (e.g., destination port, data volume, domain reputation, ASN of destination IP). Flag any new connections that the model classifies as anomalous, particularly if they occur shortly after a USB connection event, for analyst investigation (machine learning method)."
          },
          {
            "description": "Within 5 minutes of a mobile device USB connection, a host PC generates DNS queries where: 1) the number of unique, previously unseen domains (not observed in the last 30 days) is > 3 standard deviations above the host's daily baseline, 2) the ratio of rare TLDs (e.g., .xyz, .club, .top) to common TLDs (.com, .org, .net) exceeds the 99th percentile for the organization, or 3) the average Shannon entropy of the queried domain names is > 4.0, suggesting algorithmic generation.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Sysmon Event ID 22",
              "Windows-DriverFrameworks-UserMode/Operational Event ID 2003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate workstations, guest network segments, internet gateway, DNS servers, Endpoint Detection and Response (EDR) logs.",
            "action": "Correlate USB device connection events (Windows-DriverFrameworks-UserMode/Operational Event ID 2003) with subsequent DNS queries (Zeek dns.log, Sysmon Event ID 22) from the same host. First, check all domains queried within 5 minutes of the connection against a threat intelligence feed for known malicious, DGA-generated, or newly registered domains and generate a high-priority alert on a match (symbolic logic). Second, for each host, calculate a 30-day rolling baseline for the number of new domains queried per day and the entropy of queried domain labels. Alert if the number of new domains queried within the 5-minute window post-connection exceeds the daily baseline by more than 3 standard deviations. Also, alert if the average label entropy is in the 98th percentile for the host, indicating potential DGA activity (statistical method). Third, use an Isolation Forest model trained on features from Zeek dns.log and Sysmon Event ID 22 (query length, subdomain count, TLD, entropy, query type, process name that initiated the query). Flag queries that are marked as outliers by the model and occur immediately after a USB connection for analyst review, especially if the querying process is a mobile management tool (machine learning method)."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary using compromised mobile devices to laterally move to corporate workstations? (PIR)",
    "tactic_id": "TA0033",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1458",
        "name": "Replication Through Removable Media",
        "evidence": [
          {
            "description": "An executable file (.exe, .dll, .ps1, .bat) is written to a user-writable directory (e.g., %APPDATA%, %TEMP%, Downloads) by a process associated with a mobile device connection. The file has a low prevalence hash (<5 occurrences enterprise-wide) or is unsigned. The file is executed within 10 minutes of being written, and the resulting process spawns a command interpreter (cmd.exe, powershell.exe) or a network utility (e.g., bitsadmin.exe, certutil.exe).",
            "data_sources": [
              "Sysmon Event ID 11",
              "Sysmon Event ID 1",
              "Windows Event ID 4688",
              "Windows-DriverFrameworks-UserMode/Operational Event ID 2003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate workstations, IT administrator workstations, user profile directories (Downloads, Temp, AppData), shared network drives.",
            "action": "Correlate file creation events (Sysmon Event ID 11) with subsequent process execution (Sysmon Event ID 1, Windows Event ID 4688), triggered by a USB connection event (Windows-DriverFrameworks-UserMode/Operational Event ID 2003). First, if a file is written from a mobile device source process, is subsequently executed, and its hash matches a known malicious signature from a threat intelligence feed, generate a critical alert. Also, alert if the executed file spawns a child process like powershell.exe with encoded commands (e.g., -enc, -e, -encoded) (symbolic logic). Second, build a frequency table of parent-child process relationships across the enterprise. Alert if a process originating from a file copied from a mobile device spawns a child process (e.g., powershell.exe) and this specific parent-child relationship is 'first seen' or in the bottom 5th percentile of observed frequency. Also, flag any file execution where the file hash has been seen fewer than 5 times in the organization (statistical method). Third, train a Random Forest classifier to predict if a newly executed file is malicious. Use features from Sysmon such as file path entropy, file extension, parent process name, file signature status, file hash prevalence, and whether it was written by a mobile device transfer process. Flag files with a probability score > 0.9 for immediate investigation (machine learning method)."
          },
          {
            "description": "Within 15 minutes of a mobile device USB connection, a host PC initiates network connections where: 1) the number of unique internal destination IPs on common reconnaissance ports (e.g., 22, 135, 139, 445, 3389) exceeds 20, or 2) the ratio of failed connections (e.g., TCP RST or timeout) to successful connections exceeds 10:1 to internal hosts, or 3) the number of unique internal IP-port combinations contacted is > 3 standard deviations above the host's 30-day baseline for that hour of the day.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Sysmon Event ID 3",
              "Windows-DriverFrameworks-UserMode/Operational Event ID 2003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate workstations, network segments containing high-value assets (Domain Controllers, Database Servers), internal network traffic choke points, and VLANs with sensitive servers.",
            "action": "Correlate USB connection events (Windows-DriverFrameworks-UserMode/Operational Event ID 2003) with internal network connection logs (Zeek conn.log, Sysmon Event ID 3) originating from the same host. First, create a rule to generate a high-severity alert if Zeek generates a `Scan::Address_Scan` or `Scan::Port_Scan` notice (in notice.log) originating from a host within 15 minutes of a USB connection event on that host (symbolic logic). Second, using a 5-minute sliding window, count the number of unique internal destination IPs and the ratio of failed connection states ('REJ', 'S0') to established states ('SF') in Zeek conn.log. Alert if the count of unique IPs exceeds a hard threshold of 20 or if the failed connection ratio exceeds 3 standard deviations above the host's established baseline, indicating a network scan (statistical method). Third, apply a K-Means clustering algorithm to group hosts based on their internal network behavior. Use features from Zeek and Sysmon like ratio of internal to external connections, diversity of destination ports, average bytes per connection, connection success/failure ratio, and the name of the initiating process. If a host abruptly shifts to a 'scanner' cluster (characterized by low bytes, high port diversity, high failure rate) immediately following a USB connection, flag it for investigation (machine learning method)."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]