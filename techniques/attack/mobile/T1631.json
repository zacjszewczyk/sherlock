[
  {
    "information_requirement": "Is an adversary attempting to elevate privileges on mobile devices via process injection? (PIR)",
    "tactic_id": "TA0029",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1631",
        "name": "Process Injection",
        "evidence": [
          {
            "description": "An application on a mobile device is observed loading unexpected or unauthorized dynamic libraries, or making suspicious system calls related to memory manipulation, which are not part of its normal function. This is often indicative of an attempt to inject code into another process to gain its permissions.",
            "data_sources": [
              "Android logcat",
              "iOS Unified Logs",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Employee mobile devices enrolled in MDM, Corporate Wi-Fi network segments, VPN gateways for mobile traffic",
            "action": "Analyze application logs (Android logcat, iOS Unified Logs) for entries related to dynamic library loading (`dlopen`, `dlsym`) or memory-related system calls (`ptrace`, `mach_vm_write`). Establish a baseline of legitimate library usage for high-risk applications by vetting their installation packages. Flag applications that load libraries not included in their package or known dependencies. Correlate these on-device events with network logs. Calculate the entropy of DNS requests (Zeek dns.log) originating from the device around the time of the suspicious activity; a high entropy score may indicate Domain Generation Algorithm (DGA) for C2 communication. A high-risk event is an anomalous library load followed by communication to a low-reputation or newly-observed domain."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary using process injection to hide malicious code within legitimate mobile application processes? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1631",
        "name": "Process Injection",
        "evidence": [
          {
            "description": "A legitimate, trusted application process exhibits anomalous network behavior or resource consumption (CPU, memory) inconsistent with its baseline, suggesting it is hosting injected malicious code.",
            "data_sources": [
              "Mobile Device Management (MDM) performance logs",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile application sandboxes, Endpoint devices of executives or privileged users, Network egress points",
            "action": "For trusted applications (e.g., browsers, messaging apps), ingest performance metrics from an MDM solution. Establish a baseline for CPU and memory usage for each app per user or device model using a 30-day rolling average and standard deviation. Monitor for statistically significant deviations (e.g., usage greater than 3 standard deviations from the mean) that persist for an unusual duration. Simultaneously, analyze network traffic (Zeek conn.log) originating from the device. Look for connections to IP addresses or domains that are not part of the application's expected service infrastructure. Use statistical methods to identify outlier connections based on destination port, data volume, or connection duration. An alert should be triggered when a process shows anomalous resource consumption and initiates suspicious network connections."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]