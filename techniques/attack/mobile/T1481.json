[
  {
    "information_requirement": "Is an adversary using legitimate external web services for command and control on our mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1481",
        "name": "Web Service",
        "evidence": [
          {
            "description": "Automated C2 beaconing from a mobile device is observed as periodic connections to a web service (e.g., GitHub, Pastebin, Telegram) where the time between connections (inter-arrival time) has a low standard deviation (e.g., < 2 seconds) and the size of the server's response is consistently small and uniform (e.g., 95% of payloads are between 50 and 500 bytes). This pattern contrasts with the high variance in timing and payload size typical of human-driven web browsing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments for mobile devices, VPN Concentrators, Mobile Device Management (MDM) platform logs, Cloud Access Security Broker (CASB) traffic logs, Secure Access Service Edge (SASE) platforms",
            "action": [
              "Query Zeek logs (conn.log, http.log) for connections from mobile NAIs to a watchlist of domains and IPs known for C2 abuse (e.g., api.telegram.org, pastebin.com, raw.githubusercontent.com, specific cloud storage APIs). Generate an alert if a single device makes more than 50 connections in a 1-hour window and the average response payload size is less than 1KB, indicating potential beaconing.",
              "For each source mobile IP and destination service pair, analyze connection timestamps $$ t_1, t_2, ..., t_n $$ from Zeek conn.log over a 24-hour period. Calculate the standard deviation of inter-arrival times $$ \\sigma_{\\Delta t} $$ where $$ \\Delta t_i = t_i - t_{i-1} $$. Concurrently, calculate the Shannon entropy $$ H(X) = -\\sum p(x_i) \\log_2 p(x_i) $$ of the response byte counts ('resp_bytes'). Flag connections where $$ \\sigma_{\\Delta t} < 2 $$ seconds and the response byte entropy is in the bottom 5th percentile for that specific service, indicating highly regular timing and size.",
              "From Zeek conn.log, engineer features for each source-destination pair over a 24-hour window: standard deviation of inter-arrival times, mean/median/std dev of 'orig_bytes' and 'resp_bytes', and entropy of 'resp_bytes'. Apply a density-based clustering algorithm like DBSCAN to identify anomalous groups. Investigate clusters characterized by a small number of devices, low variance in inter-arrival times, and low entropy of response sizes, as these are strong indicators of coordinated C2 activity."
            ]
          },
          {
            "description": "A mobile device sends an HTTP/S request to a legitimate web service where the User-Agent string identifies a non-browser, script-based client (e.g., 'curl/7.68.0', 'python-requests/2.25.1') or the URI contains patterns suggesting direct data access rather than interaction through a web application (e.g., '/raw/Abc123xyz', '/api/v1/data/').",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles), Web Application Firewall (WAF) logs, and Cloud Access Security Broker (CASB) logs",
            "action": [
              "From Zeek http.log, create a rule to match the 'user_agent' field against a deny-list of regular expressions for common scripting tools and libraries (e.g., '^curl/', '^python-requests', '^Go-http-client', '^Wget'). Generate an alert for any traffic from the mobile NAI that matches these patterns and is directed to non-developer or non-API-centric domains.",
              "For each destination host, group HTTP requests from the mobile NAI by source IP over a 24-hour window. For each source IP, calculate the Shannon entropy $$ H(U) $$ of the 'uri' field from Zeek http.log. Low entropy signifies repetitive requests to the same or similarly structured paths. Flag source IPs whose URI entropy falls into the bottom 10th percentile relative to all other devices accessing that same destination, suggesting automated, non-interactive access.",
              "Train a binary classification model (e.g., XGBoost, Random Forest) on a labeled dataset of HTTP/S requests. Engineer features from Zeek http.log and ssl.log, including: User-Agent string length and entropy, URI length and entropy, presence of keywords ('raw', 'paste', 'api') in the URI, HTTP method distribution per source IP, and the global rarity of the TLS JA3 hash. Deploy the model to score new requests from the mobile NAI in real-time and alert on any request classified as malicious with high confidence (e.g., > 0.9)."
            ]
          },
          {
            "description": "A mobile device exhibits a high ratio of DNS queries for a specific web service domain to the number of subsequent TCP/UDP connections to that domain's resolved IPs. This behavior is indicative of a 'canary' or 'check-in' C2 mechanism where the malware resolves a domain to check for instructions but only establishes a full connection when a task is available.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Protective DNS (PDNS) logs, MDM-enforced DNS services, Firewall logs that capture both DNS requests and connection attempts",
            "action": [
              "Continuously monitor Zeek dns.log for queries originating from the mobile NAI. Match the 'query' field against a high-confidence threat intelligence feed of known C2 domains (e.g., from sources like Proofpoint or CrowdStrike). Generate a high-priority alert for any successful resolution of a known malicious domain, including the source IP and the queried domain.",
              "Over a 1-hour sliding window, join Zeek dns.log and conn.log on source IP. For each source IP and top-level domain pair, calculate the DNS-to-Connection Ratio: $$ R_{dns} = \\frac{|\\text{Unique DNS Queries to Domain D}|}{|\\text{Unique Connections to IPs for Domain D}|} $$. Establish a dynamic baseline ratio for popular services across the enterprise. Alert on any mobile device whose ratio for a specific service exceeds the 99th percentile of that service's baseline, indicating an abnormally high number of lookups without follow-on connections.",
              "Develop a regression model (e.g., a Gradient Boosting Regressor) to predict the expected number of connections for a given device and domain based on a feature set including: number of DNS queries, time of day, day of week, domain popularity, and historical connection counts for that device. Apply the model to live data from Zeek dns.log and conn.log. A large positive residual, where the actual number of DNS queries far exceeds the predicted number needed to support the observed connections, indicates a significant anomaly. Investigate devices with the highest residual scores."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]