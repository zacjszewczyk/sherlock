[
  {
    "information_requirement": "Has an adversary established persistence on corporate mobile devices by modifying boot or logon initialization scripts?",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1398",
        "name": "Boot or Logon Initialization Scripts",
        "evidence": [
          {
            "description": "A corporate-managed mobile device fails a remote attestation check, indicating its integrity state is compromised (e.g., via Android SafetyNet API or Samsung Knox).",
            "data_sources": [
              "MDM Attestation Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) infrastructure and network gateways.",
            "action": "Continuously ingest attestation results (e.g., Android SafetyNet 'ctsProfileMatch' and 'basicIntegrity' fields) from the MDM platform. Establish a baseline of successful attestations. Generate a high-priority alert for any device that returns a failed state. Calculate the rate of attestation failures over a 30-day window; use a moving average and standard deviation to detect statistically significant spikes in failures. Correlate the timestamps of failed attestations with device network logs (Zeek conn.log) to identify any anomalous outbound connections made by the device immediately before or after the failure."
          },
          {
            "description": "A device reports a 'red' state from Android Verified Boot, signaling corruption or unauthorized modification of the boot partition [1].",
            "data_sources": [
              "Device Health Check Logs",
              "MDM Policy Compliance Reports"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile device fleet.",
            "action": "Configure the MDM to query and log the device's Verified Boot status during routine health checks. Create a dashboard to visualize the distribution of boot states (Green, Yellow, Red) across the fleet. An immediate, high-severity alert must be generated for any device reporting a 'Red' state. Track the percentage of devices in a 'Yellow' state; an upward trend could indicate a developing campaign and should trigger a broader investigation."
          },
          {
            "description": "Forensic analysis of a device image reveals unexpected or malicious scripts in system directories that are executed during the boot process.",
            "data_sources": [
              "Mobile Device Forensic Image"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile devices flagged for investigation.",
            "action": "On devices flagged by failed attestation or other suspicious activity, acquire a full file system image. Compute cryptographic hashes (e.g., SHA-256) of all files within critical boot-related directories. Compare these hashes against a known-good baseline for the specific OS version and device model. Identify any new, modified, or unauthorized files. For any identified scripts, analyze their content for suspicious commands, such as establishing network connections, attempting data exfiltration, or executing privilege escalation."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]