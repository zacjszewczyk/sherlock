[
  {
    "information_requirement": "Is an adversary collecting protected user data from corporate mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1636",
        "name": "Protected User Data",
        "evidence": [
          {
            "description": "An installed mobile application's manifest or entitlements file requests a combination of high-risk permissions (e.g., READ_CONTACTS, READ_SMS, ACCESS_FINE_LOCATION) that is either indicative of known malware via signature matching, or is statistically anomalous when compared to other applications in the same category (e.g., present in less than 1% of peer applications).",
            "data_sources": [
              "MDM Application Inventory Export",
              "Application Vetting Service Report",
              "Mobile Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform, Corporate App Store, Application Vetting System, Corporate-managed mobile endpoints",
            "action": [
              "For each application identified in the MDM inventory, query a mobile threat intelligence feed using the application's file hash (SHA-256), package name, and signing certificate hash. Trigger a high-severity alert for any application that returns a match for known malware or a malicious actor.",
              "For all applications within the MDM inventory, group them by their App Store category. For each category, calculate the prevalence of every permission requested. For each individual application, compute an anomaly score by summing the inverse prevalence of its requested permissions (e.g., score = sum(1 / prevalence)). Flag any application with a score exceeding the 95th percentile for its category for manual review.",
              "Train a supervised classification model (e.g., Random Forest) using a labeled dataset of benign and malicious mobile application manifests (APKs/IPAs). Engineer features from the manifest/Info.plist, including a binary vector of all requested permissions, counts of 'normal', 'dangerous', and 'signature' permissions, and the application's declared category. Deploy the trained model to score all new and updated applications in the corporate app store. Automatically block installation and alert for any application classified as 'malicious' with a model confidence score greater than $$ 0.90 $$."
            ]
          },
          {
            "description": "A single network connection from a managed mobile device exhibits an anomalously large outbound data volume, measured in originated bytes, when compared to the device's own historical behavior, and the connection destination is identified as suspicious. A suspicious destination is defined as one or more of: being present on a threat intelligence blocklist, having a domain registration age less than 30 days, or having a domain name with a high Shannon entropy score ($$ > 3.5 $$).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feed",
              "WHOIS Lookup Service"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate Wi-Fi access points, VPN concentrators, DNS resolvers",
            "action": [
              "From network sensor data, filter for all connections where the source IP (`id.orig_h` in Zeek conn.log) is within the corporate mobile device IP range. Join with DNS logs (`dns.log`) on the connection UID. Compare the destination IP (`id.resp_h`) and the resolved domain name (`query`) against a threat intelligence feed of known malicious C2 or data exfiltration endpoints. Generate a critical alert upon any match.",
              "For each unique mobile device IP (`id.orig_h`), create a 30-day rolling baseline of outbound data volume (`orig_bytes` in Zeek conn.log) per hour, calculating the mean and standard deviation. Trigger a medium-severity alert when any single connection's `orig_bytes` exceeds 3 standard deviations above the mean for that device and hour. Enrich the alert with the domain registration date (via WHOIS) and the domain name's Shannon entropy (`dns.log` query field). Escalate to high-severity if the domain age is less than 30 days and entropy is greater than $$ 3.5 $$.",
              "For each device, train a time-series anomaly detection model (e.g., LSTM Autoencoder) on hourly aggregated outbound byte counts (`orig_bytes`) from Zeek conn.log. Use features like day-of-week and hour-of-day to account for periodicity. Generate an alert when the model's reconstruction error for a given hour exceeds a dynamic threshold (e.g., the 99th percentile of historical errors). Correlate network volume anomalies with outputs from a separate DGA detection model that scores DNS queries to increase alert fidelity and reduce false positives."
            ]
          },
          {
            "description": "A process on a managed mobile endpoint, monitored via EDR, is observed accessing a protected data store (e.g., via a `CNContactStore` API call on iOS) and, within a 10-second window, initiates an outbound network connection to a destination IP or domain that is not on a pre-defined allowlist for that specific application or its category.",
            "data_sources": [
              "Mobile EDR API Monitoring Log",
              "Mobile EDR Network Flow Log",
              "Zeek conn.log",
              "Application-to-Network Allowlist"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile endpoints, Network egress points",
            "action": [
              "In the SIEM, create a correlation rule that triggers when a Mobile EDR log shows a process accessing a protected data API (e.g., Android `ContactsContract`, iOS `CNContactStore`) and, within 10 seconds, the same process initiates a network connection to a destination not on the approved application network allowlist. Further enrich by checking the destination against a threat intelligence feed. Generate a high-severity alert if the destination is unlisted or is on the threat feed.",
              "For each application, use Mobile EDR and Zeek logs to build a historical baseline of all unique destination domains and IPs it has connected to over the past 60 days. Create a 'first-seen' statistical rule that alerts when a protected data access event is followed within 10 seconds by a network connection to a destination not present in that application's baseline. Prioritize alerts where the 'first-seen' destination is also newly registered ($$ < 30 $$ days) or has a high entropy FQDN.",
              "Represent application behavior as a sequence of events (e.g., `[process_start, api_call_contacts, network_connect_external]`). Train a sequence-based anomaly detection model (e.g., using transformers or LSTMs) on logs from known benign applications to learn normal behavioral patterns. Score new event sequences from monitored devices in real-time. A sequence involving protected data access followed by an unusual network connection (e.g., one rarely or never seen in training data) would receive a high anomaly score, triggering an investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]