[
  {
    "information_requirement": "Is an adversary collecting protected user data from corporate mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1636",
        "name": "Protected User Data",
        "evidence": [
          {
            "description": "An installed mobile application's manifest or declared entitlements requests a combination of high-risk permissions (e.g., READ_CONTACTS, READ_SMS, ACCESS_FINE_LOCATION) that is statistically rare for its declared application category or matches a signature of known malware.",
            "data_sources": [
              "MDM Application Inventory Log",
              "Application Vetting Service API Output",
              "Mobile Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform, Corporate App Store, Application Vetting System, Corporate-managed mobile endpoints",
            "action": "1. (Symbolic) Query the MDM application inventory. For each application, compare its package name, file hash, and signing certificate against a mobile threat intelligence feed. Generate a critical alert upon any match. 2. (Statistical) For each application category (e.g., 'Productivity', 'Games'), calculate the prevalence of every requested permission across all apps in that category. For a given app, calculate a risk score by summing the inverse prevalence of its requested permissions (rarer permissions yield higher scores). Flag applications with a total risk score in the top 5% (95th percentile) for their category or for the entire enterprise for manual review. 3. (Machine Learning) Train a classification model (e.g., Random Forest) on a labeled dataset of benign and malicious application manifests. Engineer features including a one-hot encoded vector of all possible permissions, a count of 'dangerous' permissions, and the application's declared category. Deploy the model to score all new and updated applications; investigate any app classified as 'malicious' with a model confidence score greater than $$ 0.90 $$."
          },
          {
            "description": "A mobile device's network traffic shows a data upload, measured by originated bytes, that is anomalously large compared to its own historical baseline, and the destination is suspicious. Destination suspiciousness is defined by one or more of the following: the destination IP/domain is on a threat intelligence blocklist, the domain was registered within the last 30 days, or the domain name has a high Shannon entropy score ($$ > 3.5 $$).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feeds",
              "WHOIS Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate Wi-Fi access points, VPN concentrators, DNS resolvers",
            "action": "1. (Symbolic) From Zeek logs, filter for connections originating from the mobile device IP range. Join `conn.log` with `dns.log` on the UID. Alert immediately if the destination IP (`id.resp_h`) or resolved domain name (`query`) matches a known C2 or exfiltration endpoint from a threat intelligence feed. 2. (Statistical) For each mobile device, establish a 30-day rolling baseline of hourly outbound data volume (`orig_bytes`) using mean and standard deviation. Alert when a single connection's `orig_bytes` exceeds 3 standard deviations from the mean for that hour of the day. For the associated domain from `dns.log`, calculate its Shannon entropy. Enrich with WHOIS data to find the domain registration date. Prioritize alerts where a high-volume anomaly co-occurs with a domain entropy score $$ > 3.5 $$ and a domain age $$ < 30 $$ days. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) on per-device, per-hour aggregated `orig_bytes`. Include features such as day-of-week and hour-of-day. Flag time intervals where the model's reconstruction error exceeds a dynamic threshold (e.g., the 99th percentile of historical errors). Correlate these network anomalies with suspicious DNS query features (e.g., high entropy, DGA prediction score) to increase alert fidelity."
          },
          {
            "description": "An application process on a managed mobile endpoint accesses a protected data store (e.g., contacts, calendar) and, within a 10-second window, initiates an outbound network connection to a destination IP or domain that is not on a pre-established allowlist for that specific application or application category.",
            "data_sources": [
              "Mobile EDR/MDR Agent Logs (API calls, process events, network flows)",
              "Zeek conn.log",
              "Application Network Behavior Allowlist"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile endpoints, Network egress points",
            "action": "1. (Symbolic) Using Mobile EDR logs, create a correlation rule that triggers when a process makes an API call to a protected data source (e.g., Android ContentProvider for `ContactsContract`) and subsequently creates a network socket connection within 10 seconds. Correlate the destination IP with threat intelligence feeds and alert on a match. 2. (Statistical) For each application, build a baseline of 'normal' network destinations seen over a 30-day period. Create a 'first-seen' rule that flags any sequence where a protected data access event is followed by a network connection to a destination IP/domain not present in that application's historical baseline. Escalate for review if the new destination is also newly registered or has high domain entropy. 3. (Machine Learning) Model application behavior as a graph where nodes represent entities (e.g., app process, API call, destination IP) and edges represent the sequence of actions. Use a graph-based anomaly detection algorithm to learn a model of 'normal' activity subgraphs. Score new activity based on its deviation from learned normal structures. A subgraph representing the flow `Process -> Contacts API -> Rare External IP` would receive a high anomaly score, triggering an alert."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]