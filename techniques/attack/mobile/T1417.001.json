[
  {
    "information_requirement": "Is an adversary capturing user credentials via keylogging on mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1417.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "An MDM inventory report shows an installed application with keyboard functionality whose package name or developer signature is not on the corporate allowlist, or whose binary hash has changed from a known-good baseline.",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Mobile EDR Process Logs",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Unified Endpoint Management (UEM) / Mobile Device Management (MDM) Platform Database",
            "action": "1. (Symbolic) Continuously query MDM application inventories against a maintained allowlist of keyboard applications (package names, versions, developer signatures). Generate a high-severity alert for any application with keyboard functionality not on the allowlist or whose developer signature or hash mismatches the approved record. 2. (Statistical) For all installed keyboard applications, query MDM logs to calculate the fleet-wide installation prevalence. Flag for review any keyboard with a prevalence below a dynamic threshold (e.g., installed on < 1% of devices). Calculate the time-to-install delta for new keyboards; a sudden spike in the installation rate (e.g., > 3 standard deviations above the 30-day moving average) for a rare keyboard is anomalous and requires investigation. 3. (ML) Utilize a pre-trained classification model (e.g., Random Forest) on application metadata features (permissions requested, developer reputation score, app store category, install source, age of developer account, user review sentiment analysis score). A keyboard application with a predicted maliciousness probability > 0.9, especially when combined with a low prevalence score, triggers a critical alert."
          },
          {
            "description": "An MDM permissions report for an Android device shows the 'android.permission.BIND_ACCESSIBILITY_SERVICE' permission is granted to an application that is not on a pre-approved allowlist for this specific, high-risk permission.",
            "data_sources": [
              "MDM Permissions Logs",
              "Mobile EDR API Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "UEM/MDM Platform Database for Android devices",
            "action": "1. (Symbolic) Continuously query MDM permission logs for the granting of 'BIND_ACCESSIBILITY_SERVICE'. Compare the application package name against an explicit allowlist of authorized applications (e.g., approved password managers, corporate support tools). Alert immediately on any non-allowlisted application granted this permission. 2. (Statistical) For applications with 'BIND_ACCESSIBILITY_SERVICE', calculate the Shannon entropy of their full requested permissions set. Flag applications with an entropy score in the 99th percentile. Additionally, calculate the Jaccard distance between the app's permission set and the baseline permission set for its declared app store category. A distance score > 0.8 indicates a high-risk outlier. 3. (ML) Apply an anomaly detection model (e.g., Isolation Forest) to the sequence of API calls made by an application after being granted accessibility services. Train the model on legitimate accessibility applications. Score sequences of API calls; a sequence containing file system access or network connection calls immediately following a 'TYPE_VIEW_TEXT_CHANGED' event that results in an anomaly score in the top 1% generates a critical alert."
          },
          {
            "description": "Network flow logs show a mobile device initiating a recurring pattern of small (<1KB), outbound network connections to a single destination not associated with any legitimate, installed application, characterized by low-variance time intervals between connections (beaconing).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "WHOIS lookup data",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at the corporate VPN concentrator and enterprise Wi-Fi gateways",
            "action": "1. (Symbolic) Correlate the 'id.resp_h' field from Zeek conn.log originating from the mobile device IP space against a threat intelligence feed of known malicious IPs and domains. Generate a high-severity alert for any match, especially if the connection originates from a process not associated with a known-good application. 2. (Statistical) From Zeek conn.log, group flows by source IP ('id.orig_h') and destination IP ('id.resp_h'). For each group, calculate the standard deviation of the time delta between connections and the 95th percentile of outbound data volume ('orig_ip_bytes'). Flag groups where the time delta standard deviation is < 2 seconds and the 95th percentile data volume is < 1024 bytes. Correlate the destination IP with Zeek dns.log; escalate priority if the associated domain was registered within the last 30 days via WHOIS lookup. 3. (ML) Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) on features engineered from network flows for each device, such as bytes_out, packet_count, and connection_frequency per minute. An alert is generated when the model's reconstruction error for a new time window exceeds a dynamic threshold, indicating a deviation from the established baseline of normal network behavior, such as the emergence of a new periodic, low-volume signal."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting sensitive information (PII, proprietary data) via keylogging on mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1417.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "An MDM inventory report shows an installed application with keyboard functionality whose package name or developer signature is not on the corporate allowlist, or whose binary hash has changed from a known-good baseline.",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Mobile EDR Process Logs",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Unified Endpoint Management (UEM) / Mobile Device Management (MDM) Platform Database",
            "action": "1. (Symbolic) Continuously query MDM application inventories against a maintained allowlist of keyboard applications (package names, versions, developer signatures). Generate a high-severity alert for any application with keyboard functionality not on the allowlist or whose developer signature or hash mismatches the approved record. 2. (Statistical) For all installed keyboard applications, query MDM logs to calculate the fleet-wide installation prevalence. Flag for review any keyboard with a prevalence below a dynamic threshold (e.g., installed on < 1% of devices). Calculate the time-to-install delta for new keyboards; a sudden spike in the installation rate (e.g., > 3 standard deviations above the 30-day moving average) for a rare keyboard is anomalous and requires investigation. 3. (ML) Utilize a pre-trained classification model (e.g., Random Forest) on application metadata features (permissions requested, developer reputation score, app store category, install source, age of developer account, user review sentiment analysis score). A keyboard application with a predicted maliciousness probability > 0.9, especially when combined with a low prevalence score, triggers a critical alert."
          },
          {
            "description": "An MDM permissions report for an Android device shows the 'android.permission.BIND_ACCESSIBILITY_SERVICE' permission is granted to an application that is not on a pre-approved allowlist for this specific, high-risk permission.",
            "data_sources": [
              "MDM Permissions Logs",
              "Mobile EDR API Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "UEM/MDM Platform Database for Android devices",
            "action": "1. (Symbolic) Continuously query MDM permission logs for the granting of 'BIND_ACCESSIBILITY_SERVICE'. Compare the application package name against an explicit allowlist of authorized applications (e.g., approved password managers, corporate support tools). Alert immediately on any non-allowlisted application granted this permission. 2. (Statistical) For applications with 'BIND_ACCESSIBILITY_SERVICE', calculate the Shannon entropy of their full requested permissions set. Flag applications with an entropy score in the 99th percentile. Additionally, calculate the Jaccard distance between the app's permission set and the baseline permission set for its declared app store category. A distance score > 0.8 indicates a high-risk outlier. 3. (ML) Apply an anomaly detection model (e.g., Isolation Forest) to the sequence of API calls made by an application after being granted accessibility services. Train the model on legitimate accessibility applications. Score sequences of API calls; a sequence containing file system access or network connection calls immediately following a 'TYPE_VIEW_TEXT_CHANGED' event that results in an anomaly score in the top 1% generates a critical alert."
          },
          {
            "description": "Network flow logs show a mobile device initiating a recurring pattern of small (<1KB), outbound network connections to a single destination not associated with any legitimate, installed application, characterized by low-variance time intervals between connections (beaconing).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "WHOIS lookup data",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at the corporate VPN concentrator and enterprise Wi-Fi gateways",
            "action": "1. (Symbolic) Correlate the 'id.resp_h' field from Zeek conn.log originating from the mobile device IP space against a threat intelligence feed of known malicious IPs and domains. Generate a high-severity alert for any match, especially if the connection originates from a process not associated with a known-good application. 2. (Statistical) From Zeek conn.log, group flows by source IP ('id.orig_h') and destination IP ('id.resp_h'). For each group, calculate the standard deviation of the time delta between connections and the 95th percentile of outbound data volume ('orig_ip_bytes'). Flag groups where the time delta standard deviation is < 2 seconds and the 95th percentile data volume is < 1024 bytes. Correlate the destination IP with Zeek dns.log; escalate priority if the associated domain was registered within the last 30 days via WHOIS lookup. 3. (ML) Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) on features engineered from network flows for each device, such as bytes_out, packet_count, and connection_frequency per minute. An alert is generated when the model's reconstruction error for a new time window exceeds a dynamic threshold, indicating a deviation from the established baseline of normal network behavior, such as the emergence of a new periodic, low-volume signal."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]