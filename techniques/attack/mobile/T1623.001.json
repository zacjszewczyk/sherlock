[
  {
    "information_requirement": "Is an adversary executing unauthorized commands or scripts on mobile devices via a Unix shell? (PIR)",
    "tactic_id": "TA0041",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1623.001",
        "name": "Unix Shell",
        "evidence": [
          {
            "description": "A shell process (e.g., 'sh', 'bash') is spawned by a parent application whose bundle ID is absent from a pre-approved allowlist of applications authorized to perform this action.",
            "data_sources": [
              "MTD ProcessEvents.log",
              "UEM ApplicationInventory.csv"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Mobile Device Management (MDM) Platform; Mobile Threat Defense (MTD) Cloud Console; SIEM Log Aggregator.",
            "action": [
              "Using the UEM application catalog, create and maintain an allowlist of application bundle IDs authorized to spawn shell processes. Ingest MTD process logs into a SIEM and deploy a rule that generates a high-severity alert when a process name (e.g., 'sh', 'bash', 'zsh') is created by a parent application bundle ID not on the allowlist.",
              "For each application, baseline the frequency of shell executions per user over a 30-day period. Calculate the mean and standard deviation of these counts. Generate a medium-severity alert when an application's daily shell execution count for a user exceeds 3 standard deviations above its historical mean, indicating an anomalous rate of activity.",
              "From historical MTD logs, engineer features for shell execution events (e.g., parent process name, app signature, app source, user role) for known benign and malicious instances. Train a supervised classification model, such as a Random Forest, to predict the probability of a new event being malicious. Deploy the model to score events in real-time and alert on those exceeding a high-confidence probability threshold (e.g., >0.9)."
            ]
          },
          {
            "description": "A shell command's arguments contain high-risk patterns (e.g., 'curl...|sh', 'base64 -d') and the device makes a concurrent network connection to a destination present in threat intelligence feeds.",
            "data_sources": [
              "MTD ProcessEvents.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress points instrumented with Zeek sensors; Corporate DNS infrastructure; Mobile Threat Defense (MTD) Cloud Console; SIEM Log Aggregator.",
            "action": [
              "Deploy a SIEM rule that uses regular expressions to detect high-risk patterns (e.g., 'curl .*\\|.*sh', 'nc -e', 'base64 -d') in MTD command-line arguments. If a match occurs, correlate the event timestamp and device IP with Zeek conn.log and dns.log to identify the destination IP/domain. Generate a high-severity alert if this destination is present in an active threat intelligence feed.",
              "Calculate the Shannon entropy for all shell command-line strings from MTD logs over a 30-day baseline period to establish a distribution of complexity. Define a threshold at the 99th percentile of entropy scores. Deploy a real-time rule to calculate the entropy of new command-line arguments and generate a medium-severity alert when a command's score exceeds this threshold, indicating unusual obfuscation or complexity.",
              "Collect a large, labeled dataset of command-line strings (benign/malicious) from MTD logs. Train a sequence-based deep learning model, such as an LSTM or Transformer, to classify the syntax of shell commands. Deploy the trained model to score new shell command strings and generate an alert for commands classified as malicious with high confidence."
            ]
          },
          {
            "description": "A superuser binary ('su') execution event is logged by MTD for a device concurrently reported as 'non-rooted' and 'compliant' by the UEM/MDM platform.",
            "data_sources": [
              "MTD ProcessEvents.log",
              "UEM ComplianceState.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Mobile Device Management (MDM) Platform; Mobile Threat Defense (MTD) Cloud Console; SIEM Log Aggregator; SOAR Platform.",
            "action": [
              "Create a critical-severity SIEM rule that triggers on any MTD process event where the process name is 'su'. Configure this rule to automatically trigger a SOAR playbook that queries the UEM/MDM API for the device's real-time compliance status. If the API response shows the device is 'compliant' and 'non-rooted', escalate the alert and initiate an automated device quarantine action via the UEM.",
              "On an hourly basis, aggregate the count of unique devices executing 'su' across the mobile fleet. Maintain a 7-day rolling average and standard deviation for this metric. Generate a high-severity fleet-wide alert if the current hourly count exceeds 3 standard deviations above the rolling average, signaling a possible widespread attack.",
              "Following a confirmed malicious 'su' execution on a device, collect related post-event telemetry (e.g., child processes from MTD logs, network connections from Zeek conn.log, subsequent MTD alerts). Use an unsupervised clustering algorithm, such as DBSCAN, to find other devices in the fleet exhibiting a similar pattern of post-compromise behavior, enabling proactive incident scoping."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]