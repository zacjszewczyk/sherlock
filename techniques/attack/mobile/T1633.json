[
  {
    "information_requirement": "Is malware on a corporate mobile device attempting to detect if it is running in a sandbox or emulator? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1633",
        "name": "Virtualization-Sandbox Evasion",
        "evidence": [
          {
            "description": "A non-system, user-installed application process queries for two or more distinct system properties known to be associated with emulated or sandboxed Android environments (e.g., ro.hardware: goldfish, ro.hardware: ranchu, ro.kernel.qemu: 1, ro.product.brand: generic, ro.product.model: sdk, ro.product.manufacturer: Genymotion, ro.build.fingerprint contains 'test-keys') within the first 60 seconds of its initial execution.",
            "data_sources": [
              "Android Logcat logs capturing 'getprop' executions",
              "MDM application inventory and process logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform, Centralized Log Aggregator/SIEM, Network Security Monitoring (NSM) sensors at internet gateways, Managed Mobile Device Endpoints",
            "action": [
              "Create a SIEM rule that joins MDM process start logs with Android Logcat data. The rule should trigger an alert when a process, not on an approved publisher list, queries for two or more properties from a watchlist of known emulator artifacts (e.g., 'ro.hardware:goldfish', 'ro.kernel.qemu:1') within 60 seconds of its first execution on the device.",
              "For all non-system applications, ingest Logcat data to profile system property queries. Calculate the 99th percentile for the count of unique properties queried by any single application within the first five minutes of execution. Generate an alert for any application exceeding this threshold. As a secondary metric, calculate the Shannon entropy of the queried property names; a low entropy score suggests repetitive checking of a small set of properties, which is also suspicious.",
              "Train a Random Forest classification model to predict 'evasive behavior'. Engineer features from MDM and Logcat data including: count of suspicious property queries, entropy of property names, time delta between app installation and first query, and application publisher reputation. A high-confidence 'evasive' prediction from the model should be correlated with subsequent network activity in Zeek conn.log, such as connections to known malicious IPs or unusual ports, to automatically escalate the incident priority."
            ]
          },
          {
            "description": "A newly installed application, within 60 seconds of its initial launch, requests and is granted permissions to access three or more sensors or data sources indicative of human interaction (e.g., accelerometer, gyroscope, light sensor, READ_CONTACTS, READ_CALL_LOG). This activity is then followed by a period of network dormancy (no connections) or a single, small (<1KB) network beacon within the next five minutes, suggesting the app is checking for a live user before proceeding.",
            "data_sources": [
              "MDM permission audit logs",
              "Android Logcat API call traces",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform, Centralized Log Aggregator/SIEM, Network Security Monitoring (NSM) sensors at internet gateways, Managed Mobile Device Endpoints",
            "action": [
              "Implement a SIEM correlation rule that alerts when MDM logs show an application is granted three or more 'human interaction' permissions (e.g., Accelerometer, Contacts) within 60 seconds of first launch, and this event is followed by either zero outbound connections or a single TCP/UDP session with an 'orig_bytes' value under 1024 from the device's IP in Zeek conn.log over the subsequent five minutes.",
              "For each application category (e.g., 'Productivity', 'Games'), establish a baseline of normal API call sequences made during the first five minutes of runtime using data from trusted applications. For each new application, compare its initial API call sequence to the category baseline using a sequence comparison algorithm like Levenshtein distance. Alert on applications with a deviation score in the 98th percentile for their category. Additionally, monitor the entropy of sensor data streams (e.g., accelerometer); an entropy value near zero suggests static, non-human data typical of an emulator.",
              "Deploy a pre-trained LSTM Autoencoder model for time-series anomaly detection on sensor data streams (accelerometer, gyroscope) from mobile endpoints. First, train the model on data from normal device usage to learn patterns of human interaction. Then, feed real-time sensor data accessed by newly installed applications into the model. A high reconstruction error score, exceeding a statistically determined threshold, signifies anomalous, non-human sensor activity, indicating a probable emulator environment."
            ]
          },
          {
            "description": "An application process, within the first five minutes of execution after installation, initiates DNS queries for three or more distinct public Network Time Protocol (NTP) domains (e.g., time.google.com, pool.ntp.org) or public IP geolocation service domains (e.g., ip-api.com, ipinfo.io). This behavior is indicative of an attempt to verify the device's time and location to evade sandbox environments that may provide incorrect values.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "MDM audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS Resolvers (forwarding logs to SIEM), Network Security Monitoring (NSM) sensors at internet gateways, Centralized Log Aggregator/SIEM, Mobile Device Management (MDM) Platform",
            "action": [
              "Create a SIEM rule that correlates MDM process creation logs with network data. The rule should alert when a process on a mobile device generates DNS queries for three or more unique domains from a watchlist of public time and geolocation services (e.g., 'pool.ntp.org', 'time.nist.gov', 'ip-api.com', 'ipinfo.io', 'ifconfig.me') within its first five minutes of execution, as seen in Zeek dns.log.",
              "Using Zeek dns.log, establish a 30-day rolling baseline of unique time and geolocation domains queried per mobile device. In a 10-minute sliding window, alert if the count of such distinct domains queried by any single device exceeds three standard deviations above its own historical baseline. This statistical approach detects anomalous time-checking or location-checking behavior on a per-device basis.",
              "Apply a DBSCAN clustering algorithm to five-minute windows of network traffic from the mobile device subnet. Engineer features from Zeek dns.log and conn.log, including: count of unique FQDNs queried, entropy of queried FQDNs, ratio of DNS queries to established TCP/UDP connections, and the set of JA3/JA3S hashes. Investigate clusters identified by DBSCAN as 'noise' (outliers) that exhibit a high count of DNS queries to time/geo services followed by minimal data transfer, as this profile is highly indicative of sandbox evasion reconnaissance."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]