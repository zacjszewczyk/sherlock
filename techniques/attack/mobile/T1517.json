[
  {
    "information_requirement": "Is an adversary intercepting sensitive information, such as one-time passwords, from mobile device notifications? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1517",
        "name": "Access Notifications",
        "evidence": [
          {
            "description": "An application, not on the corporate allowlist, is granted the `BIND_NOTIFICATION_LISTENER_SERVICE` permission, or an existing allowlisted application is updated to a version with a new, non-matching code-signing certificate hash while possessing this permission.",
            "data_sources": [
              "MDM/MTD Application Permission Logs",
              "MDM/MTD Application Inventory Logs",
              "Corporate Application Allowlist"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Mobile Device Management (MDM) platform; Mobile Threat Defense (MTD) cloud console; Internal repository (e.g., Git, database) hosting the application package name and certificate hash allowlist.",
            "action": [
              "Configure a recurring SIEM rule to query MDM/MTD logs for all applications with the `BIND_NOTIFICATION_LISTENER_SERVICE` permission. For each result, join with the corporate application allowlist. Trigger a high-severity alert if the application's package name and signing certificate hash do not both match an entry on the allowlist. The alert must include device ID, user, application name, and package name.",
              "For any unlisted application with this permission, calculate its installation prevalence across all managed devices. Flag for investigation any application that is a statistical outlier, defined as being installed on fewer than 1% of devices or falling below the 5th percentile ($$ P_{install} < 0.05 $$) of installation frequency. For these outliers, calculate the Jaccard distance between the app's full permission set and the average permission set of its App Store category; a high distance score increases the risk.",
              "Input the metadata of any application granted notification access into a pre-trained binary classification model (e.g., XGBoost, Random Forest). Features should include: permissions requested, developer name, app store age, signing certificate validity period, and static analysis flags for obfuscation. An application with a predicted maliciousness probability score exceeding a pre-defined threshold (e.g., > 0.85) should be automatically added to a high-risk watchlist for analyst review or quarantined via MDM API call."
            ]
          },
          {
            "description": "An application with `BIND_NOTIFICATION_LISTENER_SERVICE` permission initiates an outbound network connection to a destination IP/domain on a threat intelligence feed or to a domain with a high Shannon entropy score, while the JA3/JA3S hash of the TLS session is associated with known malware.",
            "data_sources": [
              "MDM/MTD Application Permission Logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points including corporate VPN concentrators, WiFi access points, and Cloud Access Security Broker (CASB) proxies where Zeek sensors are deployed; SIEM platform containing correlated MDM and network logs.",
            "action": [
              "Create a SIEM correlation rule that joins MDM logs (to identify apps with notification access) with network logs (Zeek) on device IP and timestamp. For every outbound flow from these apps, check the destination IP (from conn.log) and SNI (from ssl.log) against threat intelligence feeds. Also, match the JA3/JA3S hash (from ssl.log) against a blocklist of malicious fingerprints. Generate a critical alert on any match.",
              "For each application with notification access, execute a scheduled script to analyze its DNS queries from Zeek dns.log. Calculate the Shannon entropy of the queried domain names within a 5-minute sliding window using the formula $$ H(X) = - \\sum p(x) \\log_2 p(x) $$. A spike in entropy exceeding the 95th percentile of the application's 30-day historical baseline indicates potential DGA activity. Additionally, analyze connection timestamps in conn.log using a Fast Fourier Transform (FFT) to identify highly periodic, low-volume 'heartbeat' connections indicative of C2 beaconing.",
              "Deploy a time-series anomaly detection model, such as an LSTM autoencoder, trained on benign mobile device network behavior. Continuously feed a feature vector from Zeek conn.log for each flow, including `orig_bytes`, `resp_bytes`, `duration`, `proto`, and one-hot encoded `history` field characters. An anomalously high reconstruction error for a flow originating from a notification-accessing app, especially if MDM logs report the app is in the background, indicates potential C2 communication and should trigger an automated investigation playbook."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting and exfiltrating data from mobile device notifications? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1517",
        "name": "Access Notifications",
        "evidence": [
          {
            "description": "A help desk ticket containing keywords related to a missing sensitive notification (e.g., 'MFA', 'OTP', '2FA code') is created, and SIEM logs show that within a 15-minute window of the ticket timestamp, a new application was installed, or the `BIND_NOTIFICATION_LISTENER_SERVICE` permission was granted on the reporting user's device.",
            "data_sources": [
              "User-reported incidents (Help Desk tickets)",
              "MDM/MTD Device Process Logs",
              "MDM/MTD Application Installation Logs",
              "MDM/MTD Application Permission Change Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Service desk ticketing system (e.g., Jira, ServiceNow); Centralized SIEM platform; MDM/UEM management console; User's managed mobile device.",
            "action": [
              "Configure a SIEM rule to parse incoming help desk tickets for keywords like 'MFA', 'missing notification', '2FA code not received', or 'one-time password'. On a keyword match, trigger an automated query against MDM and SIEM logs for the reporting user's device. The query must search for new app installations or grants of `BIND_NOTIFICATION_LISTENER_SERVICE` within a +/- 15-minute window of the ticket creation time. Alert if a new, unvetted app or a suspicious permission change is found.",
              "For the affected user's device, query MDM/MTD logs to analyze the timeline of background data usage around the incident time. For each non-system app, calculate the Z-score of its background data transfer volume compared to its 30-day baseline for that user. A Z-score greater than 3 ($$ Z > 3 $$) for an app with notification access is highly suspicious and should be flagged for immediate forensic review.",
              "Implement an NLP classification model (e.g., a fine-tuned BERT model) integrated with the help desk system. The model will parse ticket subjects and bodies to classify them based on relevance to potential credential theft via notifications. For tickets with a high-confidence classification (e.g., probability > 0.90), automatically assign a critical priority, tag the associated user/device as high-risk in the SIEM, and trigger the symbolic and statistical analysis playbooks described above."
            ]
          },
          {
            "description": "An application with `BIND_NOTIFICATION_LISTENER_SERVICE` permission, while operating in a background state, generates an outbound data transfer whose volume exceeds the 99th percentile of its own historical baseline or the baseline of its peer application group.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/MTD Application Permission Logs",
              "MDM/MTD Application Usage Logs (foreground/background status)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network data collection points such as VPN concentrators, corporate WiFi controllers, and CASB proxies; SIEM platform for log correlation and analysis.",
            "action": [
              "For all applications with `BIND_NOTIFICATION_LISTENER_SERVICE` permission, create a SIEM rule to alert on any outbound connection from Zeek conn.log where the destination port (`id.resp_p`) is not on a pre-defined allowlist of expected ports for that application's category. Additionally, inspect the `history` field in conn.log; the presence of connection-level anomalies like retransmissions (`R` flag) in conjunction with large outbound data transfers (`orig_bytes`) should elevate the alert severity.",
              "For each app with notification access, establish and maintain a historical baseline of its hourly outbound data volume (`orig_bytes` from Zeek conn.log) and the ratio of outbound to inbound bytes ($$ orig\\_bytes / resp\\_bytes $$). Generate an alert when the hourly volume exceeds the 99th percentile of its own 30-day history, or the data ratio exceeds the 99th percentile of its peer application group. Escalate the alert's priority to critical if MDM logs confirm the application was in a background state during the transfer.",
              "Implement an unsupervised anomaly detection algorithm, such as Isolation Forest, on network flow features from Zeek conn.log for all apps with notification access. The feature set must include `orig_bytes`, `resp_bytes`, `duration`, destination port, and a one-hot encoded protocol field. Any flow scored as a high-level anomaly, particularly if it occurs outside the user's typical active hours as determined by device usage patterns, should be flagged for investigation as a potential anomalous exfiltration channel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]