[
  {
    "information_requirement": "Is an adversary attempting to steal credentials from mobile device keychains? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1634.001",
        "name": "Keychain",
        "evidence": [
          {
            "description": "A mobile device's network traffic contains artifacts strongly associated with a jailbroken state. Measurable evidence includes: (1) DNS requests in Zeek dns.log for domains known to host jailbreaking tools or repositories (e.g., cydia.saurik.com, unc0ver.dev, sileo.app); (2) TLS connections in Zeek ssl.log with certificate validation errors (e.g., validation_status of 'self_signed_cert_in_chain'), indicating potential traffic interception; or (3) A statistically significant reduction in the diversity of TLS certificate issuers for a single device over a 24-hour period, suggesting a Man-in-the-Middle (MitM) proxy is re-signing all traffic.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.",
            "action": [
              "Create a real-time SIEM rule that queries Zeek dns.log. Match the `query` field against a maintained watchlist of domains and subdomains associated with mobile jailbreaking tools and repositories (e.g., cydia.saurik.com, unc0ver.dev, checkra.in, getsileo.app, odysseynext.com). Upon any match, trigger a high-severity alert containing the source IP (`id.orig_h`), the queried domain, and the event timestamp for immediate investigation.",
              "For each mobile device IP address, establish a 14-day rolling baseline of TLS activity using Zeek ssl.log. Calculate two daily metrics per device: (A) the ratio of connections where `validation_status` is not 'ok' to the total number of TLS sessions, and (B) the Shannon entropy of the certificate `issuer` field. Generate a medium-severity alert if metric A exceeds its 95th percentile for that device, or if metric B drops below its 5th percentile, as either could indicate a MitM attack or other certificate-based anomaly.",
              "Implement an unsupervised anomaly detection model, such as an Isolation Forest, trained on legitimate TLS session features from Zeek ssl.log and conn.log. The feature vector should include: certificate validity period, SNI server name rarity (calculated using TF-IDF over a 24-hour window), `validation_status` (one-hot encoded), `orig_bytes`, `resp_bytes`, and connection `duration`. A high anomaly score for a connection indicates a deviation from the established norm. A cluster of high-scoring anomalies from a single device, especially when temporally correlated with symbolic or statistical alerts, is a strong indicator of device compromise."
            ]
          },
          {
            "description": "A single, large outbound network connection originates from a mobile device, inconsistent with normal application behavior. This is characterized by an anomalously high volume of sent data (`orig_bytes` in Zeek conn.log) in a single session, particularly when the destination is a low-reputation IP address, a newly observed domain, or an unexpected Autonomous System (AS).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.",
            "action": [
              "Continuously monitor Zeek conn.log and ssl.log for connections originating from mobile device IP subnets. Match the destination IP (`id.resp_h`) and the TLS Server Name Indication (`server_name` in ssl.log) against a threat intelligence feed of known malicious C2 servers, anonymization services (e.g., Tor exit nodes), and suspicious data hosting providers. Generate a high-severity alert upon any match, including the full connection record.",
              "Using Zeek conn.log, for each mobile device source IP, maintain a 30-day rolling baseline of outbound data volume per connection (`orig_bytes`). Calculate the 99.5th percentile for this metric on a per-device basis. Trigger a medium-severity alert if any single connection's `orig_bytes` exceeds this device-specific threshold. Escalate the alert to high-severity if the destination IP has been observed fewer than 3 times in the device's 30-day history or if the destination port is not a standard web port (80, 443).",
              "Train an autoencoder neural network on legitimate network connection patterns from Zeek conn.log for the mobile device fleet. The feature vector for each connection should include `orig_bytes`, `resp_bytes`, `duration`, destination port, protocol, and a categorical representation of the destination IP's Autonomous System Number (ASN). A high reconstruction error on a live connection flags it as anomalous. A connection with a high reconstruction error and a large `orig_bytes` value is a strong indicator of potential exfiltration, especially if it occurs shortly after another compromise alert for the same device."
            ]
          },
          {
            "description": "A Mobile Device Management (MDM) platform reports a direct indicator of compromise. This includes: (1) An explicit device status flag indicating 'compromised' or 'jailbroken' (e.g., a boolean field `isJailbroken` is true); (2) The installation of unauthorized applications associated with jailbreaking or system modification (e.g., Cydia.app, Sileo.app, Zebra.app); or (3) The detection of files or processes existing outside the standard iOS application sandbox (e.g., /bin/bash).",
            "data_sources": [
              "MDM Platform Logs (e.g., Compliance Status, Application Inventory)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.",
            "action": [
              "Configure a SIEM rule to generate a critical alert whenever an ingested MDM log contains a field indicating a device's integrity status is compromised (e.g., `isJailbroken = true` or `complianceState = 'Non-Compliant'`). The alert must include the device identifier and associated user account to trigger an automated SOAR playbook for device quarantine and user notification.",
              "On a daily basis, ingest and analyze MDM application inventory logs for the entire mobile fleet. For each application, calculate its prevalence (percentage of devices on which it is installed). Create a medium-severity alert for any device that installs an application with a prevalence of less than 1%, excluding applications on an approved 'new deployment' list. Rank these alerts by the number of rare applications found on a single device.",
              "Train a classification model (e.g., Random Forest or Gradient Boosting) using historical MDM log data to predict the likelihood of device compromise, using confirmed jailbroken devices as the positive label. Features should include: OS version, time since last OS update, number of installed applications, count of historical policy violations, and device model age. A sustained high probability score (>0.90) from the model for a specific device should trigger a high-severity alert for manual review."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]