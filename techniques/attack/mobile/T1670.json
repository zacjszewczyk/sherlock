[
  {
    "information_requirement": "Is an adversary leveraging virtualization solutions on corporate mobile devices to conduct malicious activities? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1670",
        "name": "Virtualization Solution",
        "evidence": [
          {
            "description": "An installed application on a managed mobile device possesses a package name matching a known virtualization tool (e.g., 'io.va.exposed', 'com.lbe.parallel.intl') and is absent from the approved corporate application allowlist, indicating unauthorized software installation.",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Android Logcat",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed Android mobile device fleet, Mobile Device Management (MDM) servers, SIEM, Threat Intelligence Platform (TIP)",
            "action": "1. (Symbolic) Maintain a blocklist, sourced from threat intelligence, of package names for known Android virtualization applications (e.g., io.va.exposed, com.lbe.parallel.intl). Create a SIEM rule to cross-reference this blocklist against the application inventory from MDM logs for all devices. Generate a high-severity alert for any device with an installed application that is on the blocklist and not on the corporate allowlist. 2. (Statistical) For all installed applications reported in MDM inventory logs, calculate the installation prevalence (count of devices with app / total devices). Establish a percentile-based rarity threshold (e.g., 1st percentile). Generate a medium-severity alert for any device that installs a non-allowlisted application falling below this rarity threshold, flagging it for review as a potential targeted or unauthorized tool. 3. (Machine Learning) Train a supervised classification model (e.g., Random Forest) using features extracted from application manifests (via MDM or sandboxing): count and type of permissions requested (e.g., SYSTEM_ALERT_WINDOW), package name string entropy, presence of keywords like 'virtual', 'clone', 'parallel' in metadata, and developer signature information. A new, unclassified application with a predicted probability score greater than 0.85 of being a virtualization tool triggers an alert for manual investigation."
          },
          {
            "description": "A mobile device exhibits network traffic patterns (e.g., high data egress volume, connections to unusual ports) that are statistically anomalous for the legitimate application reported by the MDM to be in the foreground, suggesting a background or virtualized process is generating the traffic.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "MDM Application Usage Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi and VPN gateways, Enterprise DNS resolvers, MDM servers, SIEM",
            "action": "1. (Symbolic) Ingest a threat intelligence feed of known malicious C2 domains and IP addresses. For every network connection in Zeek conn.log from a mobile device IP, check if the destination matches the feed. If a match occurs, correlate the timestamp with MDM application usage logs. If the foreground app is a trusted application (e.g., 'com.microsoft.outlook'), generate a high-severity alert for potential background or virtualized C2 activity. 2. (Statistical) For each unique device-application pair (from MDM logs), establish a historical baseline of network behavior from Zeek logs (conn.log, dns.log) including mean/stddev of bytes_out, connection_count, and DNS request entropy per 15-minute interval. The Shannon entropy is calculated as $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$. Trigger a medium-severity alert when the foreground application is running and two or more of its associated network metrics deviate from their historical baseline by more than 3 standard deviations. 3. (Machine Learning) For each device, train a time-series anomaly detection model (e.g., LSTM autoencoder) on a feature set derived from 5-minute windows of Zeek logs, including: total bytes in/out, count of distinct destination IPs, ratio of UDP to TCP connections, and average connection duration. A high reconstruction error from the model signifies a deviation from the learned normal pattern. Correlate the timestamp of the anomaly with MDM application usage logs. If the high error score coincides with a trusted application (e.g., email client, browser) being in the foreground, escalate with a medium-severity alert for potential traffic hijacking or background activity."
          },
          {
            "description": "A network connection originating from a managed mobile device matches a known malicious indicator (IP address, domain, or JA3/JA3S hash) specifically associated with malware families known to use virtualization for defense evasion.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network egress points, Web proxies, DNS resolvers, Threat Intelligence Platform (TIP), SIEM",
            "action": "1. (Symbolic) Ingest and continuously update a threat intelligence feed of IOCs (domains, IPs, JA3/JA3S hashes) specifically linked to virtualization-based malware. Create a SIEM rule to compare all mobile device traffic from Zeek logs (conn.log, dns.log, ssl.log) against this feed in real-time. Generate a high-severity alert upon any match. 2. (Statistical) From Zeek dns.log, calculate the prevalence of each requested domain across the mobile fleet. For any DNS query from a mobile device to a domain in the bottom 1st percentile of prevalence (a rare domain), query an external reputation service in real-time. Generate a medium-severity alert if a mobile device connects to a rare domain that also has a malicious or suspicious reputation score. 3. (Machine Learning) Implement a pre-trained or custom-trained Domain Generation Algorithm (DGA) detection model that scores domain names based on linguistic and statistical features (e.g., character n-gram frequencies, entropy, name length). Analyze all DNS requests from mobile devices in Zeek dns.log. A high DGA probability score (>0.9) for a requested domain, especially when correlated with other risk factors like a rare TLD or being newly observed fleet-wide, triggers a medium-severity alert for likely DGA-based C2 communication."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]