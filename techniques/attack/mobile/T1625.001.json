[
  {
    "information_requirement": "Is an adversary maintaining persistence on mobile devices by hijacking system runtime APIs? (PIR)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1625.001",
        "name": "System Runtime API Hijacking",
        "evidence": [
          {
            "description": "A mobile device fails a remote attestation check, or logs from a Mobile Device Management (MDM) / Mobile Threat Defense (MTD) solution indicate unauthorized modification of core OS libraries (e.g., libart.so).",
            "data_sources": [
              "MDM/MTD Attestation Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet (Android devices)",
            "action": "Periodically poll MDM/MTD solution for device integrity and attestation failures. For any device that fails, trigger an alert for immediate investigation. Maintain a historical record of attestation statuses for all devices. Use statistical process control (SPC) charts to monitor the rate of attestation failures across the fleet to detect a widespread campaign that might otherwise be lost in random noise."
          },
          {
            "description": "Anomalous network connections are initiated from a mobile device, characterized by communication with rare or known malicious domains, unusual user-agent strings, or TLS fingerprints (JA3/S) that deviate from the established baseline for the device's legitimate applications.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi access points, VPN concentrators, and network egress points",
            "action": "For all mobile device traffic traversing the NAI, ingest Zeek logs. For each device, establish a baseline of normal network activity, including: (1) a list of frequently contacted domains (from dns.log), (2) typical user-agent strings, and (3) a set of common JA3/S hashes (from ssl.log). Calculate the entropy of requested domain names per device over a rolling time window; a sudden drop in entropy might indicate DNS tunneling to a single C2 domain. Use a Z-score or percentile-based scoring system to flag deviations from the baseline, such as connections to domains in the bottom 5th percentile of global popularity, or the appearance of a new, unseen JA3 hash for a specific device. Aggregate risk scores for a device; multiple simultaneous deviations strongly indicate a compromised state resulting from a hijacked function."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]