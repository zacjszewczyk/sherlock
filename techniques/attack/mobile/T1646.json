[
  {
    "information_requirement": "Is an adversary exfiltrating data from mobile devices over an established command and control (C2) channel? (PIR)",
    "tactic_id": "TA0036",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1646",
        "name": "Exfiltration Over C2 Channel",
        "evidence": [
          {
            "description": "A single outbound connection from a mobile device exhibits a total data volume (e.g., > 10MB) or connection duration (e.g., > 1 hour) that is anomalously high for typical beaconing traffic, or the total daily outbound data volume to a single destination exceeds the 99th percentile of the device's 30-day historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network gateways for corporate Wi-Fi, VPN concentrators, Cloud Access Security Broker (CASB) egress points, Unified Endpoint Management (UEM) platforms, and other network egress points monitoring mobile device traffic.",
            "action": "Symbolic: First, query Zeek conn.log for connections originating from the mobile device IP space that are either direct-to-IP or use non-standard ports (i.e., not 80, 443). From this subset, filter for connections where the total outbound bytes (orig_bytes) exceeds a static threshold, such as 10MB, or where the connection state (conn_state) indicates a one-way data dump (e.g., 'S1', 'S2', 'S3'). Correlate the destination IP (id.resp_h) with threat intelligence feeds of known C2 servers. Statistical: For each source mobile device IP (id.orig_h), establish a 30-day rolling baseline of outbound bytes (orig_bytes) and connection duration (duration) per destination IP (id.resp_h). Calculate the 99th percentile for both metrics. Generate an alert when a new connection's orig_bytes or duration exceeds its respective percentile for that specific source-destination pair. Enrich alerts by cross-referencing the destination IP with Zeek dns.log to identify if the associated domain is newly registered (e.g., < 30 days old) or has high entropy, suggesting it is algorithmically generated (DGA). Machine Learning: Implement a time series forecasting model (e.g., ARIMA) on the aggregate daily outbound data volume per mobile device, per destination. The key features would be 'SUM(orig_bytes) by day, id.orig_h, id.resp_h'. Train the model on at least 90 days of historical data. Trigger an alert if the observed daily volume for a given device-destination pair exceeds the model's predicted 95% confidence interval, indicating a statistically significant anomaly that deviates from normal communication patterns."
          },
          {
            "description": "The ratio of outbound HTTP POST/PUT requests to inbound GET requests for a mobile device-to-server communication stream exceeds a 10:1 threshold, and the average POST request body size exceeds the 95th percentile of its historical baseline for that specific destination.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing web proxies, DNS resolvers used by mobile devices, Network Security Group (NSG) flow logs for cloud-hosted mobile infrastructure, and MDM/UEM proxy logs.",
            "action": "Symbolic: Using Zeek dns.log, identify mobile devices querying for domains matching known C2 patterns (e.g., high character entropy, use of dynamic DNS providers like .duckdns.org, newly registered domains). Correlate the source IP with Zeek http.log and flag any subsequent HTTP POST or PUT activity to those domains where the request body size (request_body_len) is greater than 1MB. Additionally, inspect the User-Agent field in http.log for known malicious or highly unusual strings. Statistical: For each source mobile IP (id.orig_h) and destination host (host) pair in Zeek http.log, calculate a 30-day baseline ratio of 'method=POST' to 'method=GET' events, and establish the baseline average and standard deviation of 'request_body_len' for POSTs. Generate an alert when the daily POST count is 10x greater than the GET count, or when the average 'request_body_len' for a 24-hour period exceeds the baseline by more than 3 standard deviations. Machine Learning: Apply a clustering algorithm (e.g., DBSCAN) to features extracted from Zeek http.log sessions, aggregated per source-destination pair over a 1-hour window. Engineer features such as: request/response size ratio, request method distribution (%POSTs, %GETs), user-agent string entropy, URI path entropy, and the standard deviation of inter-request timings. Identify and investigate clusters of anomalous C2-like behavior that are labeled as outliers and deviate from the main cluster of normal browsing activity."
          },
          {
            "description": "Data payloads within a network flow from a mobile device to a non-categorized or low-reputation destination consistently exhibit a Shannon entropy score above 7.5, suggesting the traffic is compressed or encrypted outside of a standard TLS session.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "PCAP (via network taps)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile devices enrolled in Mobile Device Management (MDM), Network TAPs capturing traffic to/from mobile subnets, Virtual Private Cloud (VPC) traffic mirroring, and Wi-Fi access points configured for full packet capture.",
            "action": "Symbolic: Scan files extracted by Zeek (monitored in files.log) from mobile device traffic. Correlate the file's connection UID (conn_uids) to the connection details in conn.log. Alert if the file's mime_type is an archive format (e.g., 'application/zip', 'application/x-rar-compressed') or if the magic number indicates an executable or archive, and the destination IP (id.resp_h) is not on an approved list of corporate file-sharing or cloud storage services. Statistical: Using a Zeek scripting framework (e.g., Spicy) to analyze payloads in real-time, calculate the Shannon entropy for traffic flows from mobile devices over non-standard ports or to low-reputation IPs (identified via conn.log). Establish a baseline entropy score for known-good application traffic (e.g., standard API calls, browsing) from the same device or device group. Alert when the calculated entropy for a flow consistently exceeds a high-water mark (e.g., an entropy score > 7.5), which is indicative of packed or encrypted data. Machine Learning: Train a classification model (e.g., Random Forest) to distinguish between 'benign' and 'potential exfiltration' traffic flows. Use features derived from connection metadata and payload analysis, including: payload_entropy, protocol, destination_port, conn_duration, orig_bytes, resp_bytes, packet size distribution statistics (mean, std dev), inter-arrival time of packets, and a boolean flag for 'is_destination_ip_in_threat_intel'. Use the trained model to classify live traffic flows and flag suspicious connections for analyst review."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]