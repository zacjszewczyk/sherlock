[
  {
    "information_requirement": "Has a user's mobile device been compromised via a drive-by attack? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1456",
        "name": "Drive-By Compromise",
        "evidence": [
          {
            "description": "A mobile device's HTTP session, recorded in Zeek http.log, shows a 'Referer' header from a trusted, high-reputation domain followed by a request to a destination host domain that is either present on a threat intelligence feed of known malicious domains, has a registration age less than 30 days, or has a DGA score in the top 5% for all observed domains.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, VPN concentrators, and other internet egress points used by mobile devices.",
            "action": "1. (Symbolic) In a SIEM, join `Zeek http.log` with a threat intelligence feed of known malicious domains. Create a rule that alerts when `http.log.host` matches a malicious domain and `http.log.referer` is a legitimate, high-traffic internal or external site. 2. (Statistical) Establish a baseline of domains visited per user. Alert when a user visits a domain with a registration age less than 30 days that has never been visited by anyone in the organization before, especially if the `referer` is a common internal or external site. Calculate the 5th percentile of domain registration ages for all newly observed domains in the last 7 days. Alert on any HTTP request where the destination domain's age is below this threshold and the `referer` is not null. 3. (Machine Learning) Develop a classification model (e.g., logistic regression) to predict malicious web requests. Use features such as domain registration age, lexical features of the hostname (e.g., length, entropy), ASN reputation, geographic location of the IP, the reputation of the referring domain, and features from the User-Agent string (OS type, browser version, rarity). An output probability score above a tuned threshold (e.g., 0.85) should generate a high-priority alert."
          },
          {
            "description": "A JavaScript file transferred over HTTP to a mobile device, identified in Zeek files.log and http.log, exhibits a file size greater than the 95th percentile for the source website's 30-day baseline and a Shannon entropy score greater than 4.5, suggesting obfuscation. This is often correlated with a 'large_file_in_small_buffer' notice in Zeek weird.log.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile devices with MDM agents; network egress points with full packet capture or Zeek sensors.",
            "action": "1. (Symbolic) Using Zeek's file extraction capabilities, stream all files with a MIME type of `application/javascript` or `text/javascript` to a sandbox or a YARA scanner. Apply rulesets specifically designed to detect mobile exploit frameworks and common JavaScript obfuscators (e.g., JS-Obfuscator, Packer). An alert is generated on a YARA rule match. 2. (Statistical) For each `host` in `Zeek http.log`, maintain a 30-day rolling baseline (mean, standard deviation, 95th percentile) of file sizes and Shannon entropy for all downloaded JavaScript files. Alert when a newly downloaded JS file from a given host has a size or entropy score that exceeds the established 95th percentile for that specific host. Also, track the ratio of JavaScript file size to the size of the referring HTML page; alert if this ratio exceeds 4 standard deviations from the site's historical average. 3. (Machine Learning) Employ a density-based clustering algorithm like DBSCAN on all downloaded JavaScript files. Use a feature set including file size, Shannon entropy, the ratio of non-alphanumeric characters to total characters, and the count of known obfuscated function calls (e.g., `eval`, `unescape`, `atob`). Points identified as noise or belonging to very small clusters should be flagged as outliers for manual inspection."
          },
          {
            "description": "A sequence of HTTP requests from a single mobile client IP, correlated via Zeek UIDs, shows a 'Referer' from a known advertising network domain, followed by a chain of three or more HTTP 3xx redirects, culminating in a request to a host that is uncategorized by web filters, has a low reputation score, or is newly registered.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Web Proxy Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS servers, network egress points, and web proxies serving mobile device traffic.",
            "action": "1. (Symbolic) Maintain a list of known advertising network domains. Correlate `Zeek http.log` against this list and a threat intelligence feed. Alert when `http.log.referer` contains an ad network domain and the destination `http.log.host` is on a malicious TI feed. 2. (Statistical) For each client IP, construct redirect chains by correlating `http.log` records via the `uid` field. For chains where the initial `referer` is a known ad network, calculate the chain length. Alert if a chain length exceeds a threshold of 4 hops or contains more than two distinct ad networks. Additionally, establish a 7-day rolling baseline for each user's count of ad-related redirects. Alert if the count in a 5-minute window exceeds 3 standard deviations above their personal baseline. 3. (Machine Learning) Train a sequence-to-sequence autoencoder (e.g., LSTM-based) on historical, benign redirect chains from mobile devices. Each step in the sequence can be represented by a feature vector: (Time delta since last request in ms, HTTP status code, TLD of destination domain, ASN of destination IP, has_query_params (boolean), reputation of destination domain). Feed live redirect chains into the model; a high reconstruction error score indicates a deviation from normal browsing patterns and a potentially malicious redirect chain."
          },
          {
            "description": "A mobile device's HTTP request, identified by its User-Agent string in Zeek http.log, contains a URI path or query parameter matching a known mobile exploit kit fingerprint (e.g., patterns associated with Pegasus, Chrysaor). The request may also lack a 'Referer' header, which is anomalous for script or resource requests on a webpage.",
            "data_sources": [
              "Zeek http.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points with Zeek sensors; web proxies.",
            "action": "1. (Symbolic) Maintain and apply a list of regular expressions from threat intelligence sources matching known mobile exploit kit URI patterns against the `uri` field in `Zeek http.log`. Trigger a high-severity alert on any match where the `user_agent` field contains 'iPhone' or 'Android'. Trigger a medium-severity alert if a script or image file is requested with no `referer` header. 2. (Statistical) Profile the structure of URIs on a per-domain basis. Calculate statistics on path depth (number of '/'), query parameter count, and the entropy of the query string. Flag requests where these metrics deviate significantly (e.g., > 3 standard deviations) from the domain's established baseline, particularly if the User-Agent is a mobile browser and the domain has a low reputation. 3. (Machine Learning) Train a supervised classifier (e.g., Random Forest) on a labeled dataset of benign and malicious URLs. Features should include URL length, path depth, number of special characters, presence of keywords like '.apk', entropy of the path and query strings, whether the URL contains an IP address instead of a hostname, and the reputation of the TLD. Use this model to score all incoming requests from mobile devices in real-time."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]