[
  {
    "information_requirement": "Has the adversary established external command and control (C2) channels on mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1481.001",
        "name": "Dead Drop Resolver",
        "evidence": [
          {
            "description": "A network connection from a mobile device IP to a known public web service (e.g., pastebin.com, github.com) is followed within a 60-second window by a second connection from the same device to a destination domain that is either: a) present in threat intelligence feeds, b) has a domain popularity rank in the bottom 5th percentile across the enterprise, or c) has a high-risk reputation score.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi egress points, VPN concentrators handling mobile device traffic, MDM-managed device network segments, and network segments dedicated to guest or BYOD mobile devices.",
            "action": "1. From Zeek logs, filter for all connections (conn.log) originating from mobile device IP ranges (defined by DHCP/VPN pools) to a curated list of potential dead drop resolver services (e.g., pastebin.com, github.com, social media APIs). 2. For each such connection, correlate with all subsequent outbound connections from the same source IP within a 60-second window. 3. Apply the following detection logic to the second connection: a. (Symbolic) Match its destination IP address and domain (dns.log) against a threat intelligence feed of known C2 infrastructure. A direct match generates a high-severity alert. b. (Statistical) Using a 30-day baseline from dns.log, calculate the enterprise-wide access frequency (popularity rank) for every destination domain. Flag any second-connection destination domain whose popularity is in the bottom 5th percentile as suspicious. c. (Machine Learning) Construct a feature vector for each connection-pair including: time delta between connections, bytes transferred in the second connection (conn.log), destination domain popularity rank, destination ASN (conn.log), and a binary flag for a threat intel match. Feed this vector into a pre-trained Random Forest or Gradient Boosting classifier. A prediction score above a tuned threshold (e.g., 0.85) indicates a likely dead drop resolver event and should be escalated for analyst investigation."
          },
          {
            "description": "A mobile device initiates a DNS query for a legitimate content-hosting domain, the TLS Server Name Indication (SNI) in the subsequent connection matches this domain, and the cleartext or decrypted response body contains an IP address or FQDN that the same device then connects to within a 2-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points with L7 visibility, DNS resolvers, and web proxies serving mobile device traffic.",
            "action": "1. From Zeek logs, correlate DNS requests (dns.log) with subsequent TLS handshakes (ssl.log) and HTTP requests (http.log) originating from mobile IP ranges. 2. For unencrypted traffic (http.log) or traffic where content is captured (files.log), use regular expressions to extract potential IPv4 addresses and FQDNs from response bodies. 3. Correlate these extracted indicators with subsequent outbound connections (conn.log) from the same source IP within a 2-minute window. 4. Apply the following detection logic to the extracted and subsequently contacted indicators: a. (Symbolic) Match all extracted IPs and domains against a threat intelligence list of known malicious indicators. A match on a subsequent connection triggers an immediate high-severity alert. b. (Statistical) For extracted domains, calculate the Shannon entropy of the hostname; flag any with a score over 3.5 as potential DGA. Separately, calculate the access frequency of each contacted domain across the enterprise using a 30-day dns.log baseline and flag any in the bottom 1st percentile. c. (Machine Learning) Aggregate request counts per hour from the mobile device fleet to the known dead-drop resolver domains (e.g., api.twitter.com, gist.github.com). Employ a time-series anomaly detection model (e.g., SARIMA, Prophet) to establish a baseline with weekly and daily seasonality. A sudden spike in requests that deviates more than 3 standard deviations from the forecasted volume should be flagged as a potential coordinated campaign, triggering an investigation into all requesting devices during the anomalous period."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]