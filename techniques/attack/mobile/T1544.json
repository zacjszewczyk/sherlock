[
  {
    "information_requirement": "Is an adversary transferring malicious tools or files onto our managed mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1544",
        "name": "Ingress Tool Transfer",
        "evidence": [
          {
            "description": "A file download to a mobile device exhibits multiple risk factors simultaneously: a high-risk MIME type (e.g., 'application/vnd.android.package-archive', 'application/octet-stream'), a source domain with low reputation (e.g., registered < 90 days), and a filename with high entropy, while the source domain is absent from an established allow-list of trusted providers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points capturing traffic from corporate-managed mobile devices, including VPN concentrators, corporate Wi-Fi access point controllers, and Mobile Threat Defense (MTD) platform traffic logs.",
            "action": "1. Symbolic (IOC Matching): Correlate Zeek `http.log` and `dns.log` records using the `uid` field. For each HTTP request originating from a mobile device IP range, check the destination `host` field (from `http.log`) or the resolved IP address (`id.resp_h` from `conn.log`) against threat intelligence feeds for known malicious C2 or file dropper domains/IPs. Generate a high-severity alert for any match. 2. Statistical (Heuristic Scoring): From `files.log`, filter for transfers to mobile device IP ranges. For each file, calculate the Shannon entropy of the filename using the formula $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$. Establish a 30-day rolling baseline for filename entropy and flag any file where the entropy score exceeds the 95th percentile. Create a composite risk score by adding weights for each detected risk factor: high entropy filename (+1), source domain age < 90 days (+1, via external WHOIS enrichment), source domain not on allow-list (+1), and risky MIME type in `files.log` (+2). Flag any transfer with a composite score \u2265 3 for investigation. 3. Machine Learning (Behavioral Anomaly): Train an anomaly detection model (e.g., Isolation Forest) on a feature set derived from `ssl.log` and `conn.log` for known-good file downloads. Features should include the JA3/JA3S hash, TLS version, selected cipher suite, connection duration, and response bytes (`resp_bytes`). For any new file download identified in `files.log`, extract the corresponding feature set. If the model classifies the event as an anomaly, flag the connection as a potentially malicious tool transfer and enrich the alert with the anomalous features."
          },
          {
            "description": "A single network connection to a mobile device transfers a statistically anomalous volume of data, where the total response bytes (`resp_bytes`) significantly exceed the device's historical baseline or that of its peer group, and the destination domain is not an approved service for large transfers (e.g., app stores, cloud backup).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points capturing traffic from corporate-managed mobile devices, including VPN concentrators, corporate Wi-Fi access point controllers, and Mobile Threat Defense (MTD) platform traffic logs.",
            "action": "1. Symbolic (Rule-Based Threshold): For each connection in `conn.log` originating from a mobile device IP address, trigger a low-severity alert if `resp_bytes` > 100MB. If the destination IP, resolved via `dns.log`, is not on a pre-defined allow-list of approved large file transfer services (e.g., App Store, Google Play, corporate cloud storage), upgrade the alert to high-severity for immediate review. 2. Statistical (Peer Group Analysis): Group mobile devices by role or department. For each group, calculate the 30-day mean ($$ \\mu $$) and standard deviation ($$ \\sigma $$) of total daily download volume per device (by summing `resp_bytes` from `conn.log`). For each device, calculate a daily Z-score using the formula $$ Z = (x - \\mu) / \\sigma $$. A score where $$ |Z| > 3 $$ indicates a statistically significant deviation from its peers and should be flagged. 3. Machine Learning (Time Series Forecasting): For each individual mobile device, model its hourly download volume by training a time series forecasting algorithm (e.g., SARIMA, Prophet) on the past 90 days of its `conn.log` data. In real-time, generate an anomaly alert if the observed download volume in any given hour exceeds the upper bound of the model's 99% confidence interval. Enrich the alert with the top 5 destination domains from `dns.log` that were active during that anomalous hour."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]