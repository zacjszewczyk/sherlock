[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by masquerading tasks or services? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.004",
        "name": "Masquerade Task or Service",
        "evidence": [
          {
            "description": "A new scheduled task or service is created where the associated executable's file hash matches a known malicious hash from threat intelligence sources.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 7045",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Monitor Windows Event IDs 4698 (Task Created) and 7045 (Service Installed). Extract the executable path from the event, correlate with the corresponding process creation event (Windows Event ID 4688) to retrieve the file hash, and compare the hash against a list of known malicious file hashes. An exact match triggers a high-severity alert.",
              "Statistical: For all newly created tasks/services, query threat intelligence provider APIs for the file hash reputation. Analyze the statistical distribution of reputation scores (e.g., 'malicious', 'suspicious', 'benign'). Flag any hash whose reputation score falls into the 'malicious' or 'highly suspicious' category, especially if the prevalence of the hash is in the lowest 1st percentile across the enterprise.",
              "Machine Learning: Develop a supervised machine learning model (e.g., random forest classifier) trained on features from task/service creation events. Features should include file hash reputation, enterprise-wide hash prevalence, and executable file attributes (e.g., signed status, entropy). Use the model to predict the probability that a new task/service is malicious."
            ]
          },
          {
            "description": "A new scheduled task or service is created with a name that has a low string distance (e.g., Levenshtein distance <= 2) to a known legitimate service name, or a name that exhibits high character-level entropy.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Maintain a curated allowlist of all legitimate task and service names for standard OS and application builds. Monitor Windows Event IDs 4698 and 7045 for new creations. Alert if a new task/service name is not on the allowlist and matches a known malicious naming pattern via regular expression (e.g., '^[a-zA-Z0-9]{16,}\\.exe$').",
              "Statistical: For each new task/service name not on the allowlist, calculate the Levenshtein distance to all names on the allowlist. Flag names with a distance of 1 or 2 (e.g., 'Windos Update' vs 'Windows Update'). Additionally, calculate the Shannon entropy of all new task/service names and flag names with entropy scores in the top 99th percentile.",
              "Machine Learning: Use a one-class SVM or isolation forest model trained on the feature set of legitimate task and service names (e.g., length, character distribution, n-grams). Apply the model to new names to detect anomalous patterns that deviate significantly from the learned 'normal' distribution, flagging them as potential masquerading attempts."
            ]
          },
          {
            "description": "A scheduled task or service is configured to execute a binary from a path that is statistically rare for service executables (e.g., user profiles, temp directories, or paths with a low enterprise-wide prevalence).",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Monitor Windows Event IDs 4698 and 7045. For each new task/service, extract the executable file path. Use a ruleset to flag any path that falls within user-writable directories (e.g., 'C:\\Users\\*', 'C:\\ProgramData\\*', '%APPDATA%', '%TEMP%') and is not in a pre-approved application directory.",
              "Statistical: Create a frequency distribution of the parent directories of all service and task executables across the enterprise. Identify the bottom 5% of least common directories. Any new task or service created with an executable in one of these statistically rare directories should be flagged for investigation.",
              "Machine Learning: Train a classification model (e.g., decision tree) to distinguish between legitimate and suspicious file paths. Features could include path depth, presence of keywords like 'Temp' or 'AppData', and the statistical prevalence of the parent directory. Use the model to score the likelihood that a new service's executable path is malicious."
            ]
          },
          {
            "description": "A process associated with task/service management (e.g., svchost.exe, taskhost.exe) spawns a child process that is statistically rare or has never been observed for that parent process in the environment's baseline.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Domain Controllers",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 for process creation events where the Parent Process Name is one of 'services.exe', 'svchost.exe', 'taskhostw.exe', or 'taskeng.exe'. Alert if the Child Process Name is a command-line interpreter (e.g., 'cmd.exe', 'powershell.exe') and the command line contains suspicious strings like '-enc' or 'IEX'.",
              "Statistical: For each key parent process ('svchost.exe', 'taskhostw.exe', etc.), build a baseline of all normal child processes observed over a 30-day period. Use frequency analysis to identify new parent-child process relationships that have never been seen before or are in the lowest 1st percentile of occurrence. Calculate the entropy of the command line and flag instances with scores above the 95th percentile for that parent-child pair.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features extracted from process creation events (parent process, child process, command-line length, command-line entropy). Identify clusters of anomalous behavior that do not group with the large, dense clusters of normal activity. These outlier clusters represent potentially malicious service-spawned processes."
            ]
          },
          {
            "description": "A process, whose ancestry traces to a scheduled task or service, initiates a network connection to a destination IP with a low reputation score, a rare geolocation, or using a port/protocol combination that is anomalous for that service's baseline.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Network Egress Points, DNS Servers",
            "action": [
              "Symbolic: Correlate Windows Event ID 4688 with Zeek conn.log data on IP and timestamp. For processes spawned by tasks/services, inspect the destination IP of their network connections. Alert if the destination IP is found on a high-confidence threat intelligence blocklist of known C2 servers or is a recently registered domain per Zeek dns.log.",
              "Statistical: For each service/task process, build a statistical baseline of its typical network behavior (destination countries/ASNs, ports, data volume). Flag a connection if its destination country has not been seen in the last 90 days for that service or if the data transferred exceeds the 99th percentile of historical transfers for that service process.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) on the network traffic volume (bytes_out) generated by each specific service process across the enterprise. The model will learn the normal 'heartbeat' of the service and alert on significant, unexplained spikes or changes in the pattern of network communication."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]