[
  {
    "information_requirement": "Is the adversary maintaining persistence using macOS Startup Items?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1037.005",
        "name": "Startup Items",
        "evidence": [
          {
            "description": "An executable located within a subdirectory of `/Library/StartupItems/` is executed at boot, and its file hash matches a known malicious signature.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) ES_EVENT_TYPE_NOTIFY_EXEC",
              "Osquery process_events",
              "File Integrity Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The `/Library/StartupItems/` directory on all macOS endpoints (servers, laptops, desktops).",
            "action": [
              "Symbolic Logic: Continuously monitor for process executions (ESF `ES_EVENT_TYPE_NOTIFY_EXEC`) where the executable path is within `/Library/StartupItems/`. Calculate the SHA256 hash of the executed file and join against a threat intelligence feed of known malicious hashes. Generate a high-severity alert upon a match.",
              "Statistical Method: For all executables in `/Library/StartupItems/`, calculate the prevalence of their file hashes across the enterprise. Using a percentile-based approach, flag any hash that appears on fewer than 1% of monitored macOS endpoints as a candidate for manual review. This identifies rare executables that may be malicious.",
              "Machine Learning: Train a file-based classification model (e.g., Gradient Boosting) using features extracted from executables in `/Library/StartupItems/`, such as file size, entropy, code signing status (valid, invalid, ad-hoc, unsigned), and imported libraries. Use the model to classify new files as benign or malicious, alerting on predictions with high confidence."
            ]
          },
          {
            "description": "A new directory, executable, or `StartupParameters.plist` file is created or modified within the `/Library/StartupItems/` directory, and its name or content contains suspicious patterns.",
            "data_sources": [
              "macOS ESF ES_EVENT_TYPE_NOTIFY_CREATE",
              "macOS ESF ES_EVENT_TYPE_NOTIFY_WRITE",
              "File Integrity Monitoring Logs",
              "Osquery file_events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The `/Library/StartupItems/` directory on all macOS endpoints.",
            "action": [
              "Symbolic Logic: Use file creation event monitoring (ESF `ES_EVENT_TYPE_NOTIFY_CREATE`) to watch the `/Library/StartupItems/` directory. Use regular expressions and YARA rules to search for newly created file or directory names that match known malware patterns (e.g., random-looking strings, common malware names, or suspicious keywords like 'implant').",
              "Statistical Method: Calculate the Shannon entropy of all file and directory names created within `/Library/StartupItems/`. Establish a baseline entropy score for legitimate startup item names across the enterprise. Flag any new item whose name has an entropy score exceeding 3 standard deviations above the baseline mean, indicating potential randomization or obfuscation.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., ARIMA or LSTM) on the frequency of file creation and modification events in `/Library/StartupItems/` across the enterprise. A sudden spike in activity, especially outside of standard software deployment windows, indicates a potential coordinated persistence attempt and should trigger an alert."
            ]
          },
          {
            "description": "A process launched from a `/Library/StartupItems/` path initiates an outbound network connection to a suspicious destination shortly after system boot.",
            "data_sources": [
              "macOS ESF ES_EVENT_TYPE_NOTIFY_EXEC",
              "macOS ESF ES_EVENT_TYPE_NOTIFY_CONNECT",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "macOS endpoints, Network egress points, and DNS servers.",
            "action": [
              "Symbolic Logic: Correlate process execution events (ESF `ES_EVENT_TYPE_NOTIFY_EXEC`) originating from `/Library/StartupItems/` with subsequent network connection events (Zeek conn.log) from the same host. Join the destination IP or domain against a threat intelligence feed of known C2 servers. Alert on any match.",
              "Statistical Method: For each process launched from a startup item, analyze its destination domains from Zeek dns.log. Calculate the domain's age and its prevalence using a public suffix list and a top 1 million domain list. Flag connections to domains that are newly registered (e.g., < 30 days old) and have a low prevalence rank (e.g., not in the top 1 million).",
              "Machine Learning: Use a supervised classification model to score the maliciousness of network connections from startup processes. Features should include: destination IP reputation, destination port number, connection duration, bytes sent/received, and JA3/JA3S TLS fingerprinting from Zeek ssl.log. Alert on connections classified as malicious with high probability."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary escalated privileges to root by creating a malicious macOS Startup Item?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1037.005",
        "name": "Startup Items",
        "evidence": [
          {
            "description": "A file or directory is created in the `/Library/StartupItems/` path by a process running in a non-root (UID > 0) user context.",
            "data_sources": [
              "macOS ESF ES_EVENT_TYPE_NOTIFY_CREATE",
              "Osquery process_events",
              "Osquery file_events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The `/Library/StartupItems/` directory on all macOS endpoints.",
            "action": [
              "Symbolic Logic: Monitor for file creation events (`ES_EVENT_TYPE_NOTIFY_CREATE`) in `/Library/StartupItems/`. For each event, inspect the creating process's user ID (UID). Alert immediately if the UID is not 0 (root) and the process is not a known, legitimate software installer or system update process (e.g., `installer`, `system_installd`).",
              "Statistical Method: Build a baseline of parent processes that legitimately write to `/Library/StartupItems/`. Monitor for any new write event where the parent process is anomalous (e.g., `bash`, `zsh`, `Microsoft Word`). Calculate the frequency of each parent process; flag parents that fall below a 5th percentile frequency threshold as suspicious.",
              "Machine Learning: Train a classification model to determine if a write action to `/Library/StartupItems/` is suspicious. Features should include the creating process name, its parent process name, the user ID (UID), the process's code signing status, and command-line arguments. Use the model to identify anomalous write events indicative of a privilege escalation attempt."
            ]
          },
          {
            "description": "A script (e.g., Shell, Python, Perl) placed in a new Startup Item directory contains commands associated with post-escalation activity, such as creating new users or disabling security tools.",
            "data_sources": [
              "File Integrity Monitoring Logs",
              "macOS ESF ES_EVENT_TYPE_NOTIFY_CREATE",
              "macOS ESF ES_EVENT_TYPE_NOTIFY_WRITE"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The contents of executable scripts within all subdirectories of `/Library/StartupItems/` on all macOS endpoints.",
            "action": [
              "Symbolic Logic: Upon file creation or modification within `/Library/StartupItems/`, scan the file content for suspicious command-line strings and patterns using YARA rules. Target patterns like `launchctl load`, `dscl . -create`, `curl ... | bash`, or commands that disable security tools (e.g., `spctl --master-disable`). Alert on any YARA match.",
              "Statistical Method: For all scripts found in startup items, calculate the distribution of command invocations. Establish a baseline of common, legitimate commands. Flag any script containing commands that are statistically rare in this context (e.g., `nc`, `ncat`, `socat`, or tools for credential dumping). Use a frequency threshold (e.g., command appears in <0.1% of startup scripts) to trigger review.",
              "Machine Learning: Use Natural Language Processing (NLP) techniques, like a bag-of-words or TF-IDF model, on the content of scripts in `/Library/StartupItems/`. Train a classifier to distinguish between benign administrative scripts and malicious scripts, identifying novel malicious logic that doesn't match specific string patterns but shares characteristics with known malware."
            ]
          },
          {
            "description": "The permissions of an executable file within a Startup Item directory are modified to be world-writeable, or its associated `StartupParameters.plist` file is modified to alter execution flow.",
            "data_sources": [
              "File Integrity Monitoring Logs",
              "macOS ESF ES_EVENT_TYPE_NOTIFY_SETATTR",
              "Osquery file_events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All files and subdirectories within the `/Library/StartupItems/` path on all macOS endpoints.",
            "action": [
              "Symbolic Logic: Monitor for file permission changes (`chmod`) on executables within `/Library/StartupItems/`, alerting if they are made world-writeable (`777`). Also monitor for modifications to any `StartupParameters.plist` file and alert if keys like 'Provides' or 'Requires' are changed in a way that subverts normal boot order.",
              "Statistical Method: Analyze the distribution of file permissions for all executables inside `/Library/StartupItems/` across the enterprise. The expected permission is typically `755` (rwxr-xr-x). Create an alert for any executable whose permissions deviate from this norm, as it indicates an attempt to allow a lower-privileged process to modify a root-level payload.",
              "Machine Learning: Develop an anomaly detection model on the sequence of file system events related to a new startup item. A normal sequence might be: create directory, create executable, create plist. A suspicious sequence might involve creating files and then immediately changing permissions. A sequence-based model (e.g., a Hidden Markov Model) can learn normal installation patterns and flag deviations."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]