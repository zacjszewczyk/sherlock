[
  {
    "information_requirement": "Is the adversary establishing or maintaining persistence by creating or modifying Windows services?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1543.003",
        "name": "Windows Service",
        "evidence": [
          {
            "description": "A Windows service is created where the associated executable's file hash or the service's name is present on a threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Windows Event ID 4697",
              "Windows Event ID 7045",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint Workstations",
            "action": "For each service creation event (Windows Event ID 4697/7045), extract the ServiceFileName and ServiceName. 1) (Symbolic) Correlate the ServiceName and the file hash of the ServiceFileName against a threat intelligence feed of known-bad indicators; alert on any match. 2) (Statistical) For each new service, calculate its prevalence across the enterprise. A service name or binary path that appears on fewer than 1% of endpoints is a statistical outlier and should be flagged for review. 3) (Machine Learning) Train a classification model (e.g., logistic regression) on features such as service name entropy, path depth, and file properties (e.g., signature status) from known benign and malicious service installations to predict if a new service is malicious."
          },
          {
            "description": "A new Windows service is created that executes a Living-Off-the-Land Binary (LOLBAS) with command-line arguments containing obfuscated code, network locations, or script execution flags.",
            "data_sources": [
              "Windows Event ID 4697",
              "Windows Event ID 7045",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint Workstations",
            "action": "From service creation events (Windows Event ID 4697/7045), extract the ImagePath value. 1) (Symbolic) Alert if the binary is a known LOLBAS (e.g., rundll32.exe, mshta.exe) and the command line contains suspicious patterns like 'http://', 'UNC paths (\\\\)', or script file extensions (.sct, .js). 2) (Statistical) Calculate the Shannon entropy of the command-line arguments. Flag commands where the entropy score is in the top 5% (95th percentile) of the historical distribution for that specific LOLBAS, as this indicates high complexity typical of obfuscation. 3) (Machine Learning) Utilize a sequence-aware model (e.g., LSTM) trained on legitimate command-line structures to identify anomalous argument patterns, flag orders, and combinations that deviate from normal usage."
          },
          {
            "description": "A new Windows service is created with its executable file residing in a directory not standard for service binaries, such as a user's profile, a temporary directory, or a world-writable location.",
            "data_sources": [
              "Windows Event ID 4697",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Workstations, Multi-user Terminal Servers",
            "action": "From service creation events (Windows Event ID 4697/7045), extract the directory from the ServiceFileName path. 1) (Symbolic) Alert if the directory path matches a denylist of high-risk locations, such as C:\\Users\\*, C:\\Windows\\Temp\\, C:\\ProgramData\\, or C:\\PerfLogs\\. 2) (Statistical) Build a frequency distribution of all service binary parent directories across the enterprise. Flag any service created in a directory that falls below a 1% prevalence threshold, identifying it as a rare and suspicious location. 3) (Machine Learning) Train an isolation forest model on the directory paths of all known-good service binaries. Use the trained model to score new service paths, flagging any path with a high anomaly score as it deviates from the established norm."
          },
          {
            "description": "An auto-start Windows service is created at a time that does not correlate with authorized change management, software deployment, or patching activities logged for the associated host.",
            "data_sources": [
              "Windows Event ID 4697",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Change Management Systems, Software Deployment Servers, Endpoint Workstations",
            "action": "Filter for service creation events (Windows Event ID 4697/7045) where StartType is 'Auto-Start' (0x2). 1) (Symbolic) Correlate the event's timestamp and hostname against change management and software deployment logs. If no corresponding authorized activity is found within a 30-minute window, flag the event. 2) (Statistical) For each host, calculate the mean and standard deviation of new auto-start service creations per hour. Alert if the number of such creations in any given hour exceeds three standard deviations from the host's baseline. 3) (Machine Learning) Employ a time-series anomaly detection model (e.g., ARIMA) to forecast the expected volume of new service installations. An observed count that significantly exceeds the forecasted value (i.e., a large residual error) indicates a potential anomalous mass installation and should be alerted."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to escalate privileges by modifying or creating Windows services?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1543.003",
        "name": "Windows Service",
        "evidence": [
          {
            "description": "The ImagePath registry value for a privileged service is modified to point to an unsigned or unknown executable, or the service's existing executable file on disk is overwritten.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0 Servers, Privileged Access Workstations (PAWs)",
            "action": "Monitor for registry modifications to ImagePath values (Windows Event ID 4657) and file write operations on service executables (Windows Event ID 4663). 1) (Symbolic) Upon detection, hash the new file and check it against threat intelligence feeds. Also, check the digital signature of the new binary; an unsigned or invalidly signed binary for a critical service is a high-fidelity indicator. 2) (Statistical) Maintain a baseline of processes that legitimately modify service binaries (e.g., TrustedInstaller.exe). A modification performed by a process not on this baseline (e.g., explorer.exe) is a statistical anomaly. 3) (Machine Learning) Train a classifier on event features (modifying process, user context, new binary signature status, time of day) to distinguish between legitimate patch activity and malicious service hijacking attempts."
          },
          {
            "description": "A service that runs with SYSTEM privileges is modified by a user account that is not a member of a privileged group (e.g., Administrators, Domain Admins), indicating abuse of insecure permissions.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers, Legacy Systems, Endpoint Workstations",
            "action": "Monitor for registry modifications of service configurations (Windows Event ID 4657). 1) (Symbolic) Create a rule: IF the modified service runs as LocalSystem AND the modification is performed by a process (via Windows Event ID 4688) whose user context (via Windows Event ID 4624) is a standard, non-administrative user, THEN generate a critical alert. 2) (Statistical) Profile the user groups that modify specific services. A modification by a user from a group with a 0% historical modification frequency for that service is a high-confidence anomaly. 3) (Machine Learning) Use a peer group analysis model to cluster users by role. Flag any user who performs a service modification that deviates significantly from the behavior of their cluster, indicating an outlier action that may be unauthorized."
          },
          {
            "description": "A high-privilege service process (e.g., services.exe, svchost.exe) spawns a child process not part of its established baseline or initiates a network connection to a rare external destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, DNS servers, Internet gateways, Endpoint Workstations",
            "action": "Establish a baseline of normal parent-child process relationships and network activity for all services. 1) (Symbolic) Alert if a service process spawns a child from a denylist (e.g., cmd.exe, powershell.exe, whoami.exe) or connects to a known malicious IP/domain. 2) (Statistical) For each service, flag the creation of any child process not seen in its 30-day baseline. For network connections (Zeek conn.log), flag connections to destination ports or countries with a prevalence of less than 1% for that specific service. 3) (Machine Learning) Employ a graph-based anomaly detection model where nodes are processes and IPs, and edges represent interactions. A path like 'services.exe -> powershell.exe -> rare_IP' would form a subgraph with a high anomaly score if it does not exist in the model trained on normal activity."
          },
          {
            "description": "A service normally configured as 'Disabled' or 'Manual' is reconfigured to 'Auto-Start' and then started, followed by anomalous process or network activity originating from the host.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 7036",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Application Servers, Databases, Endpoint Workstations",
            "action": "Maintain a baseline of the 'StartType' for all services. 1) (Symbolic) Alert if a service baselined as Disabled (4) or Manual (3) has its configuration changed to Automatic (2) (via Windows Event ID 4657) and is subsequently started (via Windows Event ID 7036). 2) (Statistical) Model the sequence of events: 'Service StartType modified to Auto' -> 'Service Started' -> 'Anomalous Child Process Spawned'. This sequence is statistically improbable for most legitimate operations and should receive a high risk score. 3) (Machine Learning) Use a Hidden Markov Model (HMM) to represent the valid state transitions of services (e.g., Disabled->Manual->Running). An adversary's actions, such as forcing a transition from 'Disabled' directly to 'Running' followed by spawning a shell, would be a low-probability sequence flagged by the HMM."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]