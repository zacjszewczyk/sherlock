[
  {
    "information_requirement": "Is the adversary performing discovery by enumerating system logs?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1654",
        "name": "Log Enumeration",
        "evidence": [
          {
            "description": "A process execution event (Windows Event ID 4688) with a file hash matching a known log enumeration tool is observed on a host. Within 5 minutes, the same host initiates an outbound network connection (Zeek conn.log) to an IP address or resolves a domain (Zeek dns.log) present on a threat intelligence feed of known command-and-control servers.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Network Egress Points; DNS Resolvers",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when a Process Creation event (Windows Event ID 4688) has a 'ProcessHash' that matches an entry in a curated list of log enumeration tool hashes. If a match occurs, the rule should then query for network connection logs (Zeek conn.log or dns.log) from the same 'HostName' within the subsequent 5 minutes where the 'destination_ip' or 'query' field matches a C2 threat intelligence feed. Generate a high-severity alert upon correlation.",
              "Statistical: For processes matching known log enumeration tool names or hashes, establish a baseline of destination IPs and ports. Calculate the frequency of connections to non-standard ports (e.g., any port not in {80, 443, 22, 3389}). If a process connects to a destination IP seen less than 1% of the time across the enterprise and on a non-standard port, flag it as anomalous.",
              "Machine Learning: Train a Random Forest classifier to distinguish between benign and malicious process-network activity sequences. Features should include: process name, parent process name, user context, command-line length and entropy, outbound bytes (from Zeek conn.log), destination port, JA3/JA3S hash, and whether the destination IP is on a threat feed (as a binary feature). An alert is generated when a sequence is classified as 'malicious log exfiltration' with a confidence score > 0.9."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) for a native utility (wevtutil.exe, powershell.exe) containing command-line arguments indicative of log querying, exporting, or filtering, such as 'wevtutil qe Security', 'wevtutil epl', 'Get-WinEvent -FilterHashtable', or 'Select-String -Path C:\\Windows\\System32\\winevt\\Logs\\'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Domain Controllers; Administrator Workstations",
            "action": [
              "Symbolic: Deploy a SIEM rule that uses a regular expression to search the command-line field of process creation events (Windows Event ID 4688). The regex should target processes like 'wevtutil.exe', 'powershell.exe', or 'pwsh.exe' and look for arguments such as '(qe|query-events)', '(epl|export-log)', 'Get-WinEvent', 'Get-EventLog', or references to '.evtx' files. Exclude command lines associated with known administrative scripts or software installers via an allowlist.",
              "Statistical: For each user, create a historical baseline of command-line arguments used with 'powershell.exe' and 'wevtutil.exe'. For each new command, tokenize the arguments and calculate the rarity of each token based on the user's past 30 days of activity. If a command contains a combination of rare tokens (e.g., 'epl' and a path to a network share) that places it in the 99th percentile of command rarity for that user, generate an alert.",
              "Machine Learning: Utilize a pre-trained transformer model (e.g., a BERT variant) fine-tuned on a dataset of PowerShell and command-prompt commands labeled for intent (e.g., 'Discovery', 'Execution', 'Log Enumeration', 'Benign Admin'). Feed all command lines from Event ID 4688 into the model. Trigger a medium-severity alert for any command classified as 'Log Enumeration' with a probability score above 0.85."
            ]
          },
          {
            "description": "A process, identified by its Process ID and name, generates multiple file access events (Windows Event ID 4663) for distinct '.evtx' files in 'C:\\Windows\\System32\\Winevt\\Logs\\'. The number of unique files accessed within a 60-second window exceeds a dynamically calculated threshold for that specific process or user.",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on Domain Controllers; File systems on critical servers; SIEM servers and Log Collectors",
            "action": [
              "Symbolic: With object access auditing enabled on 'C:\\Windows\\System32\\Winevt\\Logs\\', create a SIEM rule that counts the number of distinct 'ObjectName' fields (ending in '.evtx') per 'ProcessId' from Windows Event ID 4663 over a 60-second sliding window. Trigger an alert if the count exceeds 10 and the 'SubjectUserName' is not a known system or service account (e.g., 'SYSTEM', 'DWM-1').",
              "Statistical: For each host, maintain a 30-day rolling baseline of the number of unique '.evtx' files accessed per process name per hour. Use a Z-score to detect anomalies. Alert if a process's access count exceeds 3 standard deviations from the baseline. Additionally, calculate the Shannon entropy of the accessed log file names within a 5-minute window; a sudden spike in entropy indicates enumeration of non-standard logs and should increase the alert's priority.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) for each host, monitoring the rate of file access events (Windows Event ID 4663) specifically for the 'winevt\\logs' directory. The model will learn the daily and weekly seasonal patterns of normal log access by legitimate services. Any significant deviation from the forecasted volume, flagged as an anomaly by the model, should be investigated."
            ]
          },
          {
            "description": "A sequence of events on a single host where file access to one or more '.evtx' log files (Windows Event ID 4663) is followed within 5 minutes by an outbound network connection (Zeek conn.log) with an unusually large data payload ('orig_bytes').",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Network Egress Points; DNS Servers",
            "action": [
              "Symbolic: Create a stateful correlation rule that triggers when a process accesses a '.evtx' file (Event ID 4663). The rule then monitors network logs (Zeek conn.log) from the same source IP for the next 5 minutes. If a connection is made to a destination IP not seen in the last 30 days and the destination port is not 80, 443, or 53, and the 'orig_bytes' is greater than 1MB, generate a high-severity alert.",
              "Statistical: For each host, establish a baseline of outbound data volume ('orig_bytes' from Zeek conn.log) per process. After observing a log file access event (Event ID 4663), monitor subsequent network connections from the same host. If a connection's outbound byte count exceeds the 98th percentile of all outbound connections from that host in the past 30 days, and it occurs within 5 minutes of the log access, flag it for review.",
              "Machine Learning: Construct a Hidden Markov Model (HMM) to model adversary behavior sequences. Define states such as 'Benign Host Activity', 'Suspicious Log Access', and 'Potential Data Exfiltration'. The model's observations will be a stream of events from a host: process creations, file accesses to logs, and network connections (with features like bytes_out, port). An alert is triggered when the model decodes a sequence of observations with the most likely path being 'Benign' -> 'Suspicious Log Access' -> 'Potential Data Exfiltration'."
            ]
          },
          {
            "description": "Generation of Windows Event ID 1102 (The audit log was cleared) for the Security log, especially when correlated with anomalous login activity (Event ID 4624) or suspicious process execution (Event ID 4688) on the same host within the preceding hour.",
            "data_sources": [
              "Windows Event ID 1102",
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers; Security-critical servers (e.g., PKI, RADIUS); Workstations of Privileged Users",
            "action": [
              "Symbolic: Create a critical severity alert that fires immediately upon detection of Windows Event ID 1102. This event should be treated as a confirmed indicator of compromise and automatically trigger an incident response playbook, such as host isolation.",
              "Statistical: Analyze the enterprise-wide distribution of Event ID 1102 occurrences over time. Any instance of this event that falls outside of a predefined, approved maintenance window (e.g., Sunday 2-4 AM) should be flagged. Further risk-score the event based on the user account that performed the action; if the account is not a designated Tier 0 administrator, elevate the alert priority.",
              "Machine Learning: Train a Bayesian network to calculate the posterior probability of P(MaliciousClear | PrecedingEvents). The network's nodes would include the log clear event (EID 1102) and potential preceding events within a 1-hour lookback window, such as 'Login from Atypical Geo' (from EID 4624) or 'PowerShell with Obfuscated Command' (from EID 4688). If the calculated probability P(MaliciousClear) exceeds a threshold (e.g., 0.9), trigger a critical alert with the contributing factors listed."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]