[
  {
    "information_requirement": "Is an adversary leveraging a trusted third-party relationship for initial access to our network? (PIR)",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1199",
        "name": "Trusted Relationship",
        "evidence": [
          {
            "description": "A successful authentication or network connection from a known trusted third-party account or IP address space matches a malicious indicator (IP, domain, hash) derived from threat intelligence or a recent partner breach notification.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4624",
              "Azure AD SigninLogs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Partner-facing web portals, Jump servers/bastion hosts, Cloud IAM roles delegated to partners",
            "action": [
              "Query for all successful logins (Windows Event ID 4624, Azure AD SigninLogs) and network connections (Zeek conn.log) originating from IP ranges allocated to trusted partners. Join this activity with a threat intelligence feed containing known malicious IPs, C2 domains, and compromised credentials. Generate a critical alert for any exact match.",
              "For each trusted partner, establish a baseline of their source Autonomous System Numbers (ASNs) and source countries from Zeek conn.log geoIP data. Calculate the historical frequency distribution for each. Generate an alert if a new login originates from an ASN or country that falls below a low-frequency threshold (e.g., < 5th percentile) for that specific partner's activity.",
              "For each trusted partner, train a one-class SVM classifier using features from successful authentications: `source_IP`, `user_agent`, `ASN`, `country`, `hour_of_day`, and `day_of_week`. Apply the model to score all new partner authentication events in real-time. Flag events scored as anomalies (outliers) for analyst investigation."
            ]
          },
          {
            "description": "A process, spawned from a remote session associated with a trusted partner account, executes discovery commands or utilizes scripting interpreters with suspicious arguments.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Jump servers, Managed servers, Domain controllers, Developer workstations accessed by partners",
            "action": [
              "Filter for process creation events (Windows Event ID 4688, Sysmon Event ID 1) where the parent process corresponds to a remote access service (e.g., `sshd.exe`, `mstsc.exe`) and the associated user account belongs to a trusted partner. Match the new process name or command-line arguments against a curated list of reconnaissance tools and commands (e.g., `whoami /all`, `nltest /dclist:`, `net group 'Domain Admins'`, `AdFind.exe`). Generate a high-severity alert on a match.",
              "For each trusted partner account, establish a baseline of normal command-line argument patterns. For each new process creation, calculate the Shannon entropy of the command-line string. Alert when the entropy score for a given command exceeds the 95th percentile of the historical distribution for that user, potentially indicating obfuscation, encoding (e.g., Base64), or randomization.",
              "Extract command-line strings from process creation events (Event ID 4688, Sysmon Event ID 1) associated with partner accounts. Use a pre-trained NLP model to generate vector embeddings for each command line. Train a binary classifier (e.g., Logistic Regression) on a labeled dataset of benign and malicious command lines. Deploy the model to classify new command lines from partner sessions and alert on those predicted as malicious."
            ]
          },
          {
            "description": "A login event for a trusted partner account exhibits multiple characteristics that are anomalous when compared to the account's established baseline, such as time, location, source network, or device.",
            "data_sources": [
              "Windows Event ID 4624",
              "Azure AD SigninLogs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN gateways, External-facing authentication portals (e.g., ADFS), Cloud identity providers (e.g., Azure AD, Okta)",
            "action": [
              "Implement an 'impossible travel' detection rule. For each partner account, upon a new successful login (Windows Event ID 4624, Azure AD SigninLogs), retrieve the timestamp and geo-location of the previous login. Calculate the time elapsed and the distance between the two locations. If the required travel speed exceeds a plausible threshold (e.g., 600 mph), generate a critical alert.",
              "For each partner account, model the login hour (0-23) as a discrete probability distribution based on at least 30 days of history. For each new login, calculate the probability of it occurring at that hour. Alert on any login that occurs during an hour with a historically low probability (e.g., < 1% probability) or is a statistical outlier (e.g., Z-score > 3) compared to the user's typical login times.",
              "Develop a time series forecast model (e.g., SARIMA) for each trusted partner's network, predicting the expected volume of login attempts per hour. Continuously feed real-time login counts into the model. Generate an alert if the observed login volume significantly exceeds the upper bound of the model's prediction interval for a sustained period, which could indicate a password spraying attack from a compromised partner network."
            ]
          },
          {
            "description": "A trusted partner account, after authenticating, accesses internal resources (hosts, file shares, databases) or transfers data volumes that are inconsistent with its established role-based activity profile.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal file shares, Database servers, Code repositories, Critical infrastructure management interfaces",
            "action": [
              "For each trusted partner role, create and maintain an explicit allow-list of internal destination IP addresses and hostnames they are expected to access. Monitor all network connections (Zeek conn.log) originating from partner sessions. Generate an alert if a connection is initiated to an internal resource not present on that partner's specific allow-list.",
              "For each partner account, baseline the distribution of outbound data transfer volume per session by summing `resp_bytes` in Zeek conn.log and `total_bytes` in files.log. Alert if any single session's total data transfer exceeds a high-percentile threshold (e.g., 99th percentile) of that specific account's historical baseline, indicating potential data exfiltration.",
              "Construct a bipartite graph where nodes represent partner users and internal assets (servers, file shares), with edges representing historical access events. Apply a community detection algorithm (e.g., Louvain Modularity) to identify clusters of normal activity. Monitor new access events in real-time and alert if a user creates an edge to an asset far outside of their assigned community cluster, indicating anomalous cross-functional access."
            ]
          },
          {
            "description": "A trusted partner's user session exhibits a suspicious sequence of activities, beginning with host or network discovery followed by an explicit attempt to access another system using alternate credentials or remote access protocols.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4648",
              "Zeek conn.log",
              "Zeek dce_rpc.log",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All authenticated endpoints and servers, particularly jump boxes and domain controllers",
            "action": [
              "Create a stateful correlation rule that triggers when the following sequence is observed from a single partner source IP within a 15-minute window: 1) Execution of a discovery command (e.g., `net view`) detected in Windows Event ID 4688. 2) Followed by an explicit credential logon (Windows Event ID 4648) to a new internal host. 3) Followed by a connection to a remote administration port (e.g., 445, 3389, 5985) on that new host, seen in Zeek conn.log.",
              "For each partner user, maintain a set of all unique internal hosts they have historically accessed. During a new session, track the number of 'first-time' host connections. Calculate the mean and standard deviation of 'first-time' hosts accessed per session for each user. Alert if the count in a single session exceeds a dynamic threshold, such as the mean plus three standard deviations.",
              "Model user sessions as sequences of discrete actions (e.g., 'run_whoami', 'connect_rdp_to_host_A'). Train a Markov chain model on historical benign session data from partner accounts to learn the typical transition probabilities between actions. For each active session, calculate the probability of the observed action sequence. Flag sessions with a very low probability as anomalous, indicating a deviation from normal administrative workflows."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]