[
  {
    "information_requirement": "Is the adversary executing commands or code via input injection on enterprise systems?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1674",
        "name": "Input Injection",
        "evidence": [
          {
            "description": "A process command line, DNS query, or HTTP request contains a string (domain, IP address, file hash) that is an exact match to a known-malicious indicator associated with input injection campaigns.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Fleet, DNS Resolvers, Network Egress Points",
            "action": [
              "Continuously query for process command lines (Windows Event ID 4688) or network requests (Zeek dns.log, http.log) that contain an exact match to known malicious indicators (domains, IPs, file hashes) from a high-confidence threat intelligence feed.",
              "Calculate the hourly frequency of CTI matches for indicators tagged with 'input injection' across the enterprise. Alert if the rate of matches exceeds a statistical threshold (e.g., 95th percentile of the 30-day rolling average) to detect a widespread campaign.",
              "Utilize a supervised classification model to predict the likelihood that a given domain or command line is malicious based on features like domain age, lexical analysis, and argument structure, enabling detection of threats not yet present in CTI feeds."
            ]
          },
          {
            "description": "A process creation event where a common user-facing application (e.g., chrome.exe, outlook.exe, winword.exe) is the direct parent of a command-line interpreter or scripting engine (e.g., powershell.exe, cmd.exe, wscript.exe, cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers, Virtual Desktop Infrastructure (VDI)",
            "action": [
              "Create a detection rule that generates a high-priority alert for specific, high-fidelity parent-child process relationships, such as parent_process_name IN ('chrome.exe', 'iexplore.exe', 'outlook.exe') AND child_process_name IN ('powershell.exe', 'cmd.exe', 'wscript.exe').",
              "For each parent process name, build a baseline of its normal child processes seen over the last 30 days. Calculate the rarity of each observed parent-child pair across the environment. Alert on pairs that fall below a low frequency threshold (e.g., seen fewer than 10 times enterprise-wide) to identify novel execution patterns.",
              "Develop a graph-based anomaly detection model on process lineage data. Represent user sessions as graphs of parent-child relationships and use the model to identify subgraphs that deviate significantly in structure or node attributes from established normal user behavior."
            ]
          },
          {
            "description": "A command-line execution, particularly from powershell.exe, with a command line length or character entropy significantly exceeding established baselines, or containing specific obfuscation patterns like '-EncodedCommand'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Scan all command lines from Windows Event ID 4688 for the presence of specific obfuscation flags such as 'powershell -e', 'powershell -enc', '-EncodedCommand', or command-and-control patterns like 'IEX(New-Object Net.WebClient).DownloadString'.",
              "For each common process (powershell.exe, cmd.exe), calculate the 99th percentile for command line length and character entropy based on historical data. Generate an alert when a new command line exceeds this statistical threshold. Decode and analyze any Base64 payloads found.",
              "Train an unsupervised clustering model (e.g., DBSCAN) on vectorized command-line features such as length, entropy, special character count, and keyword frequency. Identify and investigate small clusters or outliers that represent anomalous command structures not conforming to typical patterns."
            ]
          },
          {
            "description": "A series of process creation events from a single parent process ID occurring in a time window that is too short for manual human interaction (e.g., more than 3 processes created in less than 1 second).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Point-of-Sale Terminals, Systems with frequent physical access",
            "action": [
              "Create a stateful rule that triggers when the same ParentProcessID generates more than 3 child processes within a 1-second time window.",
              "For each user session, perform a time-series analysis on their process creation events. Calculate the time delta between consecutive events and flag sessions where the average time delta falls below a statistically derived threshold (e.g., less than the 1st percentile of all user session time deltas), indicating automated activity.",
              "Use a time-series anomaly detection model (e.g., LSTM autoencoder) on the rate of process creations per user or per host. Train the model on historical data to learn normal rhythms of activity and alert on sudden, sharp spikes in process creation rate that deviate from the expected pattern."
            ]
          },
          {
            "description": "A web browser session where JavaScript is loaded from a domain with low reputation or that is lexically similar to the primary domain, or where an iframe is rendered that covers a significant portion of the viewport and sources content from a different, suspicious domain.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Web Proxies, DMZ",
            "action": [
              "In Zeek http.log, alert when the 'Referer' header's host does not match the 'Host' header for a request loading an iframe, especially if the iframe's source domain is newly registered (checked via passive DNS data in Zeek dns.log).",
              "For each primary domain visited, profile the set of external domains from which it normally loads scripts. Calculate a Jaccard similarity score between the set of script sources in a new session and the historical profile. Alert when the score is below a threshold (e.g., < 0.5), indicating a significant deviation.",
              "Train a classifier to detect Browser-in-the-Browser (BitB) attacks by analyzing features from Zeek logs. Features can include: SSL certificate age and issuer (ssl.log), lexical similarity between referring and requested domains (http.log), and DNS query patterns for lookalike domains (dns.log)."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]