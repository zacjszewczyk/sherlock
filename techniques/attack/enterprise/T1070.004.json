[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by deleting files to cover their tracks? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1070.004",
        "name": "File Deletion",
        "evidence": [
          {
            "description": "A file deletion event is observed for an object whose previously captured hash matches a known malicious indicator from a threat intelligence source.",
            "data_sources": [
              "Windows Event ID 4663",
              "EDR file monitoring logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Join file deletion events (Windows Event ID 4663) with a pre-existing inventory of file hashes (e.g., from an EDR). Alert if the hash of the deleted file matches an entry in a high-confidence threat intelligence feed of malicious file hashes.",
              "Statistical: For each deletion of a file matching a threat feed hash, calculate the rarity of the parent process responsible for the deletion across the environment. Create a risk score by combining the hash match with the process rarity (e.g., a process seen on <1% of endpoints gets a higher score). Alert on scores exceeding a percentile-based threshold (e.g., 99th percentile).",
              "Machine Learning: Train a classification model (e.g., Random Forest) to predict if a file deletion is malicious. Features should include: file hash reputation (known-good, known-bad, unknown), parent process name, file path entropy, and time since file creation. A deletion of a known-bad hash by a rare parent process would be classified as high-risk."
            ]
          },
          {
            "description": "Process creation is observed for known secure deletion utilities or built-in commands with arguments indicative of anti-forensic activity, such as deleting logs or overwriting data.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Create a detection rule that searches process creation command lines (Windows Event ID 4688) for exact matches of suspicious commands, such as `sdelete.exe`, `cipher.exe /w:`, `wevtutil.exe cl`, or `del` commands targeting sensitive files like `*.log` or `*.evtx`.",
              "Statistical: Establish a baseline of command-line tool usage per user and host. Calculate the frequency of deletion-related commands (`del`, `rm`, `sdelete.exe`). Alert when a user or host executes these commands at a rate exceeding a statistical threshold (e.g., 3 standard deviations above their personal mean).",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on the frequency of deletion command executions per host. The model, trained on historical data, will flag significant, unexpected spikes in activity that deviate from the normal rhythm of system and user behavior."
            ]
          },
          {
            "description": "A sequence of events occurs within a short time window (< 5 minutes) on a single host: a file is created, a new process is executed from that file's path, and the original file is subsequently deleted.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Staging Servers, Public-facing Web Servers",
            "action": [
              "Symbolic: Create a stateful correlation rule that triggers when: 1) A process creation event (Event ID 4688) is logged. 2) A file deletion event (Event ID 4663) for the same file path is logged within 5 minutes on the same host. Alert on this sequence, prioritizing events where the parent process is a browser, office application, or scripting engine.",
              "Statistical: For each observed create-execute-delete sequence, calculate a risk score based on the time delta between creation and deletion (shorter is riskier) and parent process prevalence (rarer is riskier). Alert on events where the total score exceeds the 98th percentile of all such observed sequences.",
              "Machine Learning: Train a sequence-based model (e.g., a Recurrent Neural Network) on event logs to learn normal sequences of file and process activity. The model would identify the 'create-execute-delete' pattern as a low-probability (anomalous) sequence and flag it as malicious."
            ]
          },
          {
            "description": "A statistically significant increase in the volume of file deletion events from a single user account or process, or a high concentration of deletions targeting files with forensic value (e.g., .log, .evtx, .history).",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File Servers, User Workstations, Domain Controllers",
            "action": [
              "Symbolic: Create a rule that alerts when the count of file deletion events (Event ID 4663) from a single Process ID exceeds a high, fixed threshold (e.g., >1000 deletions in 5 minutes), especially if the deleted Object Name matches patterns like `*.log` or `*history*`.",
              "Statistical: For each user and host, establish a baseline of hourly file deletion counts. Use a Z-score to detect outliers, alerting when the deletion count exceeds a dynamic threshold (e.g., Z-score > 3.5). Calculate the entropy of file extensions being deleted; a sudden drop in entropy indicates targeted deletion of specific file types.",
              "Machine Learning: Apply clustering analysis (e.g., DBSCAN) to file deletion events, using features like user, process name, and file extension. This can automatically group normal background cleanup activity and isolate anomalous clusters, such as a user process suddenly deleting hundreds of log files, which would warrant investigation."
            ]
          },
          {
            "description": "An executable file, identified in network logs as being downloaded from the internet, is subsequently deleted from the destination host within a short time frame (< 1 hour), as observed in host logs.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress Points, DNS Servers, User Workstations",
            "action": [
              "Symbolic: Correlate Zeek files.log (where `mime_type` is `application/x-dosexec`) with Windows Event ID 4663. Join on host IP and file path. Alert if a file deletion event occurs for an executable path within 1 hour of its download, prioritizing if the source IP has a poor reputation.",
              "Statistical: Establish a baseline for the average lifespan of downloaded executable files. Alert when a downloaded executable is deleted and its lifespan falls into a low percentile (e.g., < 5th percentile). Add weight to the alert if the file's source domain is rare (low frequency in Zeek dns.log).",
              "Machine Learning: Use a graph-based analysis model to map relationships between external IPs, domains, file hashes, and hosts. A suspicious subgraph would be: `(External IP) -> [downloads] -> (File Hash on Host) -> [deleted by] -> (Process)`. Machine learning can identify and score the risk of these patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]