[
  {
    "information_requirement": "Is an adversary enumerating cloud services, configurations, or resources within the environment?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1526",
        "name": "Cloud Service Discovery",
        "evidence": [
          {
            "description": "A request to a known cloud provider API endpoint (e.g., management.azure.com, *.amazonaws.com) where the User-Agent header matches a malicious signature from a threat intelligence source.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.",
            "action": [
              "Query Zeek http.log for records where `host` matches a list of cloud provider API domains AND the `user_agent` field matches a threat intelligence feed of known malicious tool signatures (e.g., 'Pacu', 'Stormspotter').",
              "For all requests to cloud API endpoints, calculate the Shannon entropy of the `uri` and `user_agent` fields. Establish a baseline distribution of entropy scores for each source IP. Alert on requests where the entropy score for either field exceeds the 99th percentile of the established baseline, indicating a potentially randomized or unusual string.",
              "Train a supervised classification model (e.g., Random Forest) on labeled Zeek http.log records. Use features such as request method, URI length, user agent string, destination port, and presence of authentication tokens. Deploy the model to score new requests in real-time and classify them as 'benign' or 'malicious-discovery'."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) where a cloud CLI (e.g., aws.exe, az.cmd) is executed with an anomalous combination or frequency of discovery-related command-line arguments (e.g., 'describe-*', 'list-*', 'get-*').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.",
            "action": [
              "Create a detection rule to monitor Windows Event ID 4688 where `NewProcessName` matches a known cloud discovery tool ('pacu.exe', 'stormspotter.py') OR `NewProcessName` is a cloud CLI ('aws.exe', 'az.cmd') AND the `CommandLine` contains a high-risk discovery command like 'Get-AzureAD' or 'aws discovery list-services'.",
              "For each user account, parse `CommandLine` from Windows Event ID 4688 to establish a baseline of normal cloud CLI command usage. Calculate the frequency of discovery-related commands ('list', 'get', 'describe') versus operational commands ('create', 'update'). Alert if a user's ratio of discovery commands to total commands in a 1-hour window exceeds 3 standard deviations above their historical average.",
              "Implement a sequence analysis model (e.g., an LSTM network) to learn the typical sequence of commands executed by users from Windows Event ID 4688 data. Flag user sessions containing command sequences that have a low probability under the trained model, indicating a deviation from normal workflow, such as a rapid series of 'list' commands across disparate services."
            ]
          },
          {
            "description": "A single source IP address initiates connections to a statistically unusual number of distinct cloud service IP addresses or ports within a short timeframe, indicative of a horizontal scan.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.",
            "action": [
              "From Zeek conn.log, create a rule that alerts when a single `id.orig_h` generates connections to more than 20 unique `id.resp_h` addresses within known cloud provider IP ranges in a 5-minute window, where the destination is not a known CDN or load balancer.",
              "For each source host (`id.orig_h`), calculate the cardinality (unique count) of destination hosts (`id.resp_h`) and destination ports (`id.resp_p`) over a 10-minute sliding window using Zeek conn.log. Establish a baseline for these cardinality metrics. Alert when a host's destination cardinality exceeds the 98th percentile of its own historical behavior.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to features extracted from Zeek conn.log over a 5-minute window. For each source IP, create a feature vector including total connections, unique destination IPs, unique destination ports, and total bytes sent. Flag any source IP that is classified as an outlier (noise point) as potentially anomalous scanning activity."
            ]
          },
          {
            "description": "A network connection to a cloud instance metadata service IP (169.254.169.254) from a host with no prior history of such access, or where the access is immediately followed by command-line activity involving cloud CLI tools.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).",
            "action": [
              "Create and maintain an allow-list of hosts authorized to access the cloud metadata service (169.254.169.254). Create a rule based on Zeek http.log that alerts on any request to the metadata service IP from a source IP (`id.orig_h`) not on the authorized list.",
              "For each host that legitimately accesses the metadata service, profile the volume and inter-arrival time of requests. Alert if a host's request volume in a 1-minute window exceeds the 99th percentile of its historical baseline, or if the time between requests is a statistical outlier (e.g., > 4 standard deviations from the mean inter-arrival time).",
              "Develop a time-series anomaly detection model (e.g., ARIMA) for each host that regularly accesses the metadata service, forecasting the expected volume of requests. Generate an alert if the actual request volume produces a residual error that is anomalously high. Correlate this alert with subsequent process creation events (Windows Event ID 4688) involving cloud CLIs within a 5-minute window."
            ]
          },
          {
            "description": "A user or service principal executes a series of discovery-related API calls (e.g., 'List*', 'Get*', 'Describe*') that is anomalous compared to its own historical baseline or the baseline of its assigned role.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.",
            "action": [
              "Define user roles (e.g., 'CloudAdmin', 'Developer') and map expected cloud services and API call types to each role. Create a rule that alerts when a user's API call, identified from the URI in Zeek http.log or `CommandLine` in Windows Event ID 4688, violates their defined role policy.",
              "For each user principal, create a 30-day rolling baseline of API calls made, categorizing them by service and action type. Alert if, within a 24-hour period, a user interacts with a service not in their historical top 95% of services, or if the proportion of 'List'/'Describe' calls exceeds their personal baseline by more than 3 standard deviations.",
              "Employ a peer group analysis model. Automatically group users into clusters based on their API call activity vectors using K-Means. For each user, compare their activity vector to the centroid of their peer group cluster using a distance metric like Mahalanobis distance. A high distance score indicates the user's behavior is anomalous compared to their peers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]