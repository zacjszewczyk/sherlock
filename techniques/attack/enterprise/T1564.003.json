[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by hiding malicious processes from the user's view? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.003",
        "name": "Hidden Window",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) records a process executable whose file hash (MD5, SHA1, or SHA256) matches a known malicious hash from threat intelligence feeds specifically tagged with T1564.003 or related stealth techniques.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All managed Windows endpoints, including user workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers.",
            "action": [
              "Continuously ingest threat intelligence feeds containing file hashes of malware known to use hidden windows. Create a SIEM rule that triggers an alert when a process creation event (Windows Event ID 4688) contains a file hash that matches this list.",
              "Calculate the enterprise-wide prevalence for every unique file hash observed in process creation events over a 30-day rolling window. Identify hashes appearing on fewer than 1% of endpoints (or a fixed low number like 5). Alert on any such low-prevalence hash, especially if the corresponding executable is unsigned.",
              "Deploy a file-based classification model (e.g., Gradient Boosting, Random Forest) trained on features such as file entropy, PE header characteristics (e.g., non-standard section names), string analysis, and import/export tables. Score every new executable in real-time and alert when the malicious probability score exceeds a high-confidence threshold (e.g., > 0.9)."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688 or PowerShell Event ID 4104) includes command-line arguments explicitly invoking window-hiding capabilities, such as `powershell.exe` with `-WindowStyle Hidden` or `cscript.exe` with `//B` (batch mode).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers with enabled scripting engines (e.g., PowerShell, WScript, CScript), particularly administrative workstations and jump boxes.",
            "action": [
              "Create a SIEM rule using a regular expression to match on process command lines (from Windows Event ID 4688 or PowerShell Event ID 4104) containing patterns like `\\s-w(in|indowstyle)\\s+h(id|idden)`, `//B`, or `\\s-ExecutionPolicy\\s+Bypass\\s-NoP(rofile)?\\s-w\\s+h`. Alert on any match.",
              "For each scripting process (e.g., `powershell.exe`, `cmd.exe`, `cscript.exe`), calculate a baseline distribution of command-line length and Shannon entropy. Create an alert that triggers when a new command line's length or entropy exceeds the 99th percentile of its historical distribution for that specific process.",
              "Train a supervised classification model (e.g., Logistic Regression or SVM) on labeled command-line data. Use features such as n-grams, presence of special characters, ratio of alphanumeric to non-alphanumeric characters, length, and entropy. Classify new command lines in real-time and alert on those predicted as malicious with high confidence."
            ]
          },
          {
            "description": "A process typically launched by `explorer.exe` (e.g., web browsers, office applications) is observed with an anomalous parent process such as `services.exe`, `svchost.exe`, or `wmiprvse.exe`, and this child process is observed making external network connections.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, application servers, and network egress points instrumented with Zeek sensors.",
            "action": [
              "Define a list of common interactive child processes (e.g., `chrome.exe`, `msedge.exe`, `powershell.exe`) and a list of typical non-interactive parent processes (e.g., `services.exe`, `svchost.exe`, `taskhostw.exe`). Create a rule to alert whenever a process from the child list is spawned by a process from the parent list.",
              "Aggregate all parent-child process pairs from Windows Event ID 4688 across the enterprise over 30 days. Calculate the frequency of each unique pair. Alert on any newly observed pair or any pair that falls below a rarity threshold (e.g., seen less than 5 times enterprise-wide). Enrich alerts by correlating the child process PID with network connections in Zeek conn.log within 60 seconds of process creation.",
              "Model process lineage as a graph where nodes are processes and edges are parent-child relationships. Use a graph-based anomaly detection algorithm to identify process execution chains that are structurally different from a learned baseline of benign activity. Prioritize anomalies where a node in the anomalous subgraph initiates suspicious network activity."
            ]
          },
          {
            "description": "A second `explorer.exe` process is created within a user's logon session where one is already running. This new `explorer.exe` is not associated with a new interactive logon (e.g., RDP Logon Type 10) and serves as a parent for other processes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Remote Desktop Session Hosts, Virtual Desktop Infrastructure (VDI) servers.",
            "action": [
              "Create a stateful rule that tracks the count of `explorer.exe` processes per user logon session ID. Alert when the count for a single session ID increments from 1 to 2, and the new process creation is not immediately preceded (within 1 minute) by an interactive logon event (Windows Event ID 4624, Logon Type 2 or 10) for that same user.",
              "On a per-host basis, calculate the moving average and standard deviation of the number of running `explorer.exe` processes over time. Generate an alert when the current count exceeds the mean by more than 3 standard deviations, excluding hosts known to have multiple legitimate interactive sessions (e.g., terminal servers).",
              "Apply a clustering algorithm (e.g., DBSCAN) to active `explorer.exe` processes, using features like parent process (should be `userinit.exe`), session ID, command line (should be empty or standard), and start time. Flag any `explorer.exe` process identified as a noise point or belonging to a small, sparse cluster as a potential hidden desktop."
            ]
          },
          {
            "description": "The `explorer.exe` process, which normally does not initiate direct external network connections, is observed in network flow data (e.g., Sysmon Event ID 3) making repeated connections to an external IP address, exhibiting a periodic pattern consistent with C2 beaconing.",
            "data_sources": [
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints with Sysmon installed, and network egress points instrumented with Zeek sensors.",
            "action": [
              "Create a SIEM rule that joins host-based network events (Sysmon Event ID 3) with a threat intelligence feed of known C2 servers. Alert when `explorer.exe` is the initiating process for a connection to a destination IP or domain on the C2 list.",
              "Using network connection logs (Sysmon Event ID 3), group connections by source host and process name (`explorer.exe`). Calculate the time delta between consecutive connections to the same destination. A low standard deviation in these time deltas indicates periodic beaconing. Alert when the standard deviation of inter-arrival times is below a threshold (e.g., < 5 seconds) for more than 10 connections.",
              "Train a One-Class SVM or Isolation Forest model on known benign network connections made by `explorer.exe` (which should be very few or none). Use features like destination port, bytes sent, bytes received, connection duration, and JA3/JA3S hash. Deploy the model to score new `explorer.exe` network connections in real-time and alert on any connection classified as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]