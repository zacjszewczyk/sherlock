[
  {
    "information_requirement": "Has the adversary gained initial access to the network via phishing?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1566",
        "name": "Phishing",
        "evidence": [
          {
            "description": "An email is received, or a network connection is observed, containing an indicator (URL, domain, IP address, file hash) that matches an entry in a subscribed threat intelligence feed.",
            "data_sources": [
              "Zeek files.log",
              "Zeek smtp.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Web Proxy, DNS Resolvers, User Endpoints",
            "action": [
              "Symbolic: Continuously ingest CTI feeds of malicious indicators (URLs, domains, IPs, file hashes). Create a search that joins Zeek logs (smtp.log, http.log, conn.log, files.log) against the CTI data. Generate a high-severity alert for any match.",
              "Statistical: For each CTI source, track the hit rate (matches per day). Alert if the hit rate for any single source suddenly drops to zero, which could indicate a feed ingestion failure. Calculate the historical probability of an indicator type (e.g., URL vs. IP) appearing in logs and flag if a rare indicator type suddenly spikes in frequency.",
              "Machine Learning: Use a supervised classification model (e.g., Logistic Regression) trained on features from CTI (indicator type, threat score) and log data (protocol, port) to predict the likelihood of a true positive match. Prioritize alerts with a prediction score above 0.9."
            ]
          },
          {
            "description": "An email contains suspicious header values, subject lines, or attachment filenames that align with common phishing patterns.",
            "data_sources": [
              "Zeek smtp.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Mail Servers",
            "action": [
              "Symbolic: Using regular expressions, scan smtp.log for subject lines with keywords like 'Urgent', 'Invoice', 'Password Reset'. Scan files.log for attachments with double extensions (e.g., '*.pdf.exe'). Alert on mismatches between 'From:' and 'Reply-To:' headers in smtp.log.",
              "Statistical: Profile the frequency of all observed `X-` headers in smtp.log. Alert on the appearance of a new `X-` header not seen in the last 30 days. Calculate the character-level entropy of email subject lines; flag subjects with an entropy score exceeding the 98th percentile of the established baseline.",
              "Machine Learning: Train a Naive Bayes classifier on a labeled dataset of phishing and benign email bodies and subjects. Apply the model to all incoming emails in smtp.log to generate a real-time phishing probability score. Use an NLP topic modeling technique like Latent Dirichlet Allocation (LDA) to identify emerging campaign themes from email bodies and flag clusters of emails that deviate from established benign topics."
            ]
          },
          {
            "description": "A process execution event shows a parent-child relationship where an email client, browser, or document-reader spawns a scripting interpreter or command shell.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Virtual Desktop Infrastructure (VDI) fleet, Application Servers",
            "action": [
              "Symbolic: Alert on any instance where a parent process (e.g., outlook.exe, winword.exe, acrord32.exe) spawns a child process such as powershell.exe, cmd.exe, wscript.exe, or mshta.exe using Windows Event ID 4688.",
              "Statistical: Build a baseline of all parent-child process relationships observed over 30 days and calculate the rarity of each. Generate a medium-severity alert for any relationship that occurs less than 5 times in the baseline, and a high-severity alert for a relationship that has never been seen.",
              "Machine Learning: Model process execution chains as a directed graph and use a graph analytics algorithm to find anomalous paths (e.g., paths with rare nodes/edges). Train a one-class SVM on features from PowerShell script blocks (Windows Event ID 4104), such as script length and entropy, to detect obfuscated or malicious scripts."
            ]
          },
          {
            "description": "A sequence of events occurs within a short time window: a DNS query for a domain from an email, followed by an HTTP/S connection to that domain, and finally an HTTP POST request, where the domain is newly registered or has a low reputation score.",
            "data_sources": [
              "Zeek smtp.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS Resolvers, Web Proxy, User Endpoints",
            "action": [
              "Symbolic: Correlate dns.log queries with URLs found in smtp.log. If a queried domain matches a URL from an email, check external WHOIS data. Alert if the domain was registered within the last 30 days. If a subsequent http.log event shows a POST request to that domain, elevate the alert severity.",
              "Statistical: For all domains visited via HTTP/S, calculate the ratio of bytes sent vs. bytes received (`orig_bytes` / `resp_bytes` in conn.log). Establish a baseline for this ratio. Alert when this ratio for a single connection exceeds the 99th percentile, especially if the domain is rare and the request is a POST.",
              "Machine Learning: Use time-series analysis on dns.log data to forecast the expected volume of queries to newly observed domains. Flag any time window where the actual volume significantly exceeds the forecasted confidence interval. Use a clustering algorithm (e.g., DBSCAN) on features from http.log (URI length, user agent, POST body size) to group similar web requests; flag small clusters as they may represent targeted phishing activity."
            ]
          },
          {
            "description": "An email is received from an external domain that has either never been seen before or is exhibiting a volume or frequency of communication that is statistically anomalous compared to its historical baseline.",
            "data_sources": [
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Mail Servers",
            "action": [
              "Symbolic: Maintain a state table of all sender-recipient pairs seen in the last 90 days. Generate an alert when an email is received from a sender domain that has never communicated with any internal recipient before. Alert if an email fails SPF/DKIM/DMARC checks.",
              "Statistical: For each external sender domain, create a time-series baseline of daily email volume. Alert if the volume on a given day exceeds 3 standard deviations above the 30-day moving average. Calculate the entropy for the distribution of recipients per sender domain; a sudden drop in entropy indicates a shift from broad to targeted sending and should be flagged.",
              "Machine Learning: Train an autoencoder on feature vectors representing normal email traffic (e.g., hour of day, sender TLD, number of recipients). Use the model to calculate a reconstruction error for each new email event in smtp.log. Emails with a high reconstruction error are anomalous and likely part of a novel phishing campaign."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]