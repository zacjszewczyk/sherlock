[
  {
    "information_requirement": "Has the adversary leveraged enterprise chat services to search for and collect unsecured credentials?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1552.008",
        "name": "Chat Messages",
        "evidence": [
          {
            "description": "A process, identified by its name or file hash, matches a known credential theft tool that specifically targets chat applications (e.g., Slack-Pirate, Teams-Stealer, Mimikatz).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint file systems on user workstations and VDI instances where chat clients are installed. Monitored directories include temporary download folders and user profile directories.",
            "action": [
              "Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) against a threat intelligence watchlist of known malicious file hashes and process names associated with chat credential theft. Generate a high-priority alert on any direct match.",
              "For each new process execution, query logs to determine the enterprise-wide prevalence of its file hash over the last 30 days. Flag processes where the hash is present on a small number of endpoints (e.g., < 1% of the host population or < 5 distinct hosts) for investigation, as this rarity is indicative of non-standard tooling.",
              "Apply a pre-trained Random Forest or Gradient Boosting classifier to new process execution events. Use features such as command-line length, process name entropy, parent process rarity, and whether the executable is signed to score the likelihood of malicious activity. Escalate processes with a high confidence score (> 0.9) for analyst review."
            ]
          },
          {
            "description": "A scripting engine (e.g., powershell.exe, python.exe, cscript.exe) executes with command-line arguments or script content containing both a file path to a chat application's data directory and keywords associated with credential searching ('password', 'token', 'key', 'secret').",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint command-line logs and PowerShell script block logs. Key locations for monitoring include user workstations and any servers where administrative scripts are run. Relevant GPOs for logging are managed on Domain Controllers.",
            "action": [
              "Implement a SIEM rule to search process creation and script block logs (Sysmon Event ID 1, Windows Event ID 4104) for events where the process name is a scripting engine AND the command line or script block contains a regular expression matching credential keywords (e.g., /(password|token|secret|key|pwd)/i) AND a path to chat data (e.g., '%APPDATA%\\\\(Slack|Microsoft\\\\Teams)').",
              "For all captured script blocks (Windows Event ID 4104), calculate the Shannon entropy of the script content. Establish a baseline for typical administrative scripts. Flag scripts with entropy scores in the top 5th percentile (> 95th percentile) for review, as high entropy often indicates obfuscation or packed code.",
              "Utilize a fine-tuned NLP transformer model (e.g., a BERT variant) to analyze the semantic intent of command-line arguments and script blocks. The model should classify the text as 'Benign', 'Suspicious', or 'Credential Harvesting'. Flag any script classified as 'Credential Harvesting' with high confidence for immediate investigation."
            ]
          },
          {
            "description": "A process, not associated with the legitimate chat application or a known benign utility, performs a read operation on files within the chat application's local data directories (e.g., %APPDATA%\\Microsoft\\Teams\\Local Storage\\leveldb, %APPDATA%\\Slack\\storage).",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint file systems where chat client data is stored. Specific NAIs include user profile directories such as '%APPDATA%\\Microsoft\\Teams', '%APPDATA%\\Slack', and '%LOCALAPPDATA%\\Microsoft\\Teams' on Windows workstations.",
            "action": [
              "Configure System Access Control Lists (SACLs) on key chat application data directories to log read access attempts (generating Windows Event ID 4663). Create a SIEM rule that alerts when an access event is logged from a process name NOT in a pre-defined allow-list (e.g., 'teams.exe', 'slack.exe', 'SearchIndexer.exe', 'backgroundTaskHost.exe').",
              "Over a 30-day baseline period, profile the set of unique process names that access monitored chat directories. For each new file access event (Windows Event ID 4663), check if the accessing process name is new to that directory. Flag any access by a process seen for the first time for analyst review, as it represents a deviation from normal behavior.",
              "Implement a DBSCAN clustering model to group normal file access events based on features like process name, user account, time of day, and target file extension. Events that do not belong to any cluster (classified as noise by the algorithm) represent anomalous access patterns and should be flagged as potential threats."
            ]
          },
          {
            "description": "Network connections originating from an endpoint to a known chat service FQDN show a statistically significant anomaly in data volume, connection frequency, or data transfer patterns compared to the user's established baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensor data from egress points, including perimeter firewalls and network taps. DNS server logs, web proxy logs, and Cloud Access Security Broker (CASB) logs are also key NAIs.",
            "action": [
              "Monitor DNS logs (Zeek dns.log) and TLS SNI fields (Zeek ssl.log) for requests to domains that are not on the corporate allow-list of approved chat services but use similar naming (e.g., 'teams-login.com', 'slack-auth.net'). Generate an alert for any host resolving or connecting to these typosquatted or suspicious domains.",
              "For each host, query Zeek conn.log to create a daily baseline of total bytes sent ('orig_bytes') to the IP ranges of approved chat services. Calculate a 30-day rolling average and standard deviation. Generate an alert when a host's daily sent bytes exceeds 3 standard deviations above its own average, indicating potential bulk scraping.",
              "Deploy a time-series anomaly detection model (e.g., ARIMA or LSTM) for each host-service pair, monitoring metrics like connection count and total data volume per hour. The model predicts the expected range of activity. Generate an alert when observed activity falls outside the 99% prediction interval, indicating a statistically significant deviation from normal communication patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]