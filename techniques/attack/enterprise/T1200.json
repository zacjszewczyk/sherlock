[
  {
    "information_requirement": "Has the adversary gained initial access via unauthorized hardware additions? (TA0001 - Initial Access) (PIR)",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1200",
        "name": "Hardware Additions",
        "evidence": [
          {
            "description": "A driver file associated with a new hardware installation (Windows Event ID 6416) or a new service created for it (Windows Event ID 7045) has a file hash matching a known malicious signature or is signed by a certificate on a deny list.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 4688",
              "Windows Event ID 6416"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoint devices (laptops, desktops, servers), particularly those in sensitive areas like data centers or executive suites.",
            "action": [
              "Symbolic: Create a SIEM rule that triggers on a new device installation (Windows Event ID 6416) or new service creation (Windows Event ID 7045). Extract the driver or service executable's file hash and signer certificate subject. Alert if the hash matches a threat intelligence feed of known-bad hashes or if the certificate subject is on a curated deny list of untrusted or revoked CAs.",
              "Statistical: For all new driver files associated with hardware installations, calculate the entropy of the file. Establish a baseline entropy distribution for legitimate, signed drivers in the environment. Flag any new driver file whose entropy value is in the top 5th percentile (e.g., > 7.5), as this may indicate a packed or encrypted malicious payload.",
              "Machine Learning: Train a random forest classifier on features extracted from driver files (e.g., file size, entropy, number of imported functions, presence and validity of digital signature, signer reputation). Use the model to classify newly installed drivers as 'benign' or 'suspicious'. A 'suspicious' classification for a driver associated with a new hardware event triggers an alert."
            ]
          },
          {
            "description": "Within 5 minutes of a new hardware device installation, network traffic from the host is directed to a destination IP/domain on a threat intelligence feed, or the TLS handshake uses a JA3/JA3S hash with a low prevalence score across the enterprise.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Windows Event ID 6416"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and endpoint devices.",
            "action": [
              "Symbolic: Correlate a new device installation event (Windows Event ID 6416) on a host with subsequent network logs (Zeek conn.log, dns.log, ssl.log) from that host's IP address within a 5-minute window. Alert if the destination IP (`id.resp_h`), requested domain (`query`), or TLS server name (`server_name`) matches a known-malicious indicator from a threat intelligence feed.",
              "Statistical: Following a device installation event, calculate the rarity of the destination IP, domain, and JA3 hash observed from that host within a 5-minute window. A combination of rare values (e.g., destination IP never seen before, domain requested < 5 times globally, JA3 hash in the bottom 1% of prevalence) would generate a high risk score and trigger an alert.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on the host's outbound network traffic volume (bytes_out from conn.log). An anomalous spike in traffic volume immediately following a hardware installation event (Windows Event ID 6416) would trigger an alert for further inspection."
            ]
          },
          {
            "description": "A new device appears on the network with a MAC address vendor prefix (OUI) or a DHCP client hostname that matches a known pattern for offensive security hardware.",
            "data_sources": [
              "Zeek dhcp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches, DHCP servers, and wireless network segments.",
            "action": [
              "Symbolic: Monitor Zeek dhcp.log for new `mac` and `host_name` fields. Alert if the OUI (first 3 bytes of the MAC address) or the hostname matches a curated list of penetration testing hardware vendors and default names (e.g., Hak5, Ducky, Flipper Devices).",
              "Statistical: Profile the distribution of OUIs and hostname syntax (e.g., length, character sets) across the network. Calculate a rarity score for each new DHCP request. A request with a new OUI and a hostname syntax that deviates significantly from established patterns (e.g., contains only hex characters, is shorter than 4 characters) receives a high anomaly score.",
              "Machine Learning: Train an isolation forest model on legitimate DHCP request features (OUI, hostname length, character distribution in hostname). Use the model to identify outlier DHCP requests that do not conform to the learned 'normal' profile, indicating a potential rogue device."
            ]
          },
          {
            "description": "A command-line process is launched with syntax characteristic of a keystroke injection payload (e.g., Base64 encoded PowerShell) within seconds of a new Human Interface Device (HID) being connected.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 6416"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoint devices, especially workstations in common areas or those used by privileged users.",
            "action": [
              "Symbolic: Correlate a new HID connection (Windows Event ID 6416 with a relevant device class GUID) with a subsequent process creation (Windows Event ID 4688) for powershell.exe, cmd.exe, or wscript.exe within 5 seconds. Alert if the process command line contains high-risk substrings like `-enc`, `-w hidden`, `IEX`, or `DownloadString`.",
              "Statistical: For command lines spawned within 10 seconds of a new HID connection, calculate the entropy of the command-line string. Compare this to a baseline entropy distribution for normal interactive and scripted command-line usage. An entropy score in the 99th percentile suggests obfuscation (e.g., Base64 encoding) and should be flagged.",
              "Machine Learning: Use a pre-trained NLP model (e.g., a transformer-based classifier) fine-tuned on malicious and benign command-line strings. Classify the command line of any process spawned immediately after a HID connection. An alert is generated if the model classifies the command line as malicious with high confidence."
            ]
          },
          {
            "description": "A new MAC or IP address is observed communicating on the network that is not registered in the authoritative asset management system.",
            "data_sources": [
              "Zeek dhcp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network infrastructure (DHCP servers, core switches), Asset Management Database, Network Access Control (NAC) systems.",
            "action": [
              "Symbolic: On a scheduled basis (e.g., hourly), join the set of unique MAC addresses observed in Zeek dhcp.log and conn.log with the list of approved MAC addresses in the asset management database. Alert on any MAC address present in the network logs but absent from the asset database.",
              "Statistical: Track the daily count of newly observed, unregistered MAC addresses. Establish a baseline and standard deviation for this metric using a 30-day moving average. An alert is triggered if the daily count exceeds 3 standard deviations above the mean, indicating a possible mass device introduction or scanning activity.",
              "Machine Learning: Employ a time-series forecasting model (e.g., Prophet) to predict the expected number of new, unregistered devices per day based on historical trends and organizational seasonality (e.g., new employee onboarding cycles). An alert is generated when the actual count significantly exceeds the model's predicted upper confidence interval."
            ]
          },
          {
            "description": "Immediately following a new hardware device connection, a process is created with an anomalous parent-child relationship or a legitimate process initiates an uncharacteristic network connection.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Windows Event ID 6416"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoint devices, Security Information and Event Management (SIEM) system.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a new device connection (Windows Event ID 6416) is followed within 60 seconds by a process creation (Windows Event ID 4688) where the ParentProcessName is not a standard system process (e.g., svchost.exe, explorer.exe) or the ProcessName is a known credential theft tool (e.g., mimikatz.exe).",
              "Statistical: For each process on an endpoint, build a statistical profile of its typical behavior (e.g., parent process, network connections made, modules loaded). After a new hardware event, score any subsequent process activity for anomalous behavior. A high score is assigned if a process like rundll32.exe is launched by an unusual parent or makes a network connection for the first time.",
              "Machine Learning: Use a graph-based anomaly detection model. Represent host activity as a graph where nodes are processes, files, and network connections. After a new hardware event, analyze the subgraph of subsequent activity. The model, trained on normal system behavior graphs, can identify anomalous sequences (e.g., a new device leading to a process that modifies a registry run key) that deviate from learned patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]