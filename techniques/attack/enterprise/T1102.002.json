[
  {
    "information_requirement": "Is the adversary communicating with compromised systems via legitimate web services? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1102.002",
        "name": "Bidirectional Communication",
        "evidence": [
          {
            "description": "Observed network traffic to a legitimate web service resolves to or communicates with a destination IP, domain, or URL that matches a known-malicious indicator.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways, DNS resolvers, and forward proxy servers.",
            "action": [
              "Continuously correlate the `query` field in `dns.log`, `host` and `uri` fields in `http.log`, and `id.resp_h` field in `conn.log` against subscribed threat intelligence feeds for C2 infrastructure. Generate a high-severity alert for any exact match.",
              "For each destination domain categorized as a 'Legitimate Web Service' (e.g., github.com, pastebin.com, discord.com), calculate the enterprise-wide access frequency of each full URI path from `http.log` over a 24-hour period. Isolate and investigate URIs that fall into the 99.9th percentile of rarity for their respective domain, as these may be unique C2 endpoints.",
              "Apply a pre-trained Random Forest or Gradient Boosting classifier to score DNS queries based on a feature set including: domain entropy, query length, ratio of non-alphanumeric characters, number of subdomains, and historical rarity of the top-level domain (TLD) plus one (TLD+1). Flag queries with a 'malicious' probability score greater than 0.9 that resolve to IPs associated with legitimate web service providers."
            ]
          },
          {
            "description": "An HTTP request to a legitimate web service contains a User-Agent string, URI path structure, or POST body content that matches a known pattern associated with a specific C2 framework or malware family.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways and forward proxy servers with TLS inspection capabilities.",
            "action": [
              "Deploy and continuously update a set of regular expressions (regex) or YARA rules that match known C2 tool signatures. Scan the `user_agent`, `uri`, and `post_body` (if available via inspection) fields in `http.log`. Alert on any match to signatures for tools like Cobalt Strike (Malleable C2), Empire, PoshC2, or Sliver.",
              "For each major web service destination (e.g., `api.dropbox.com`, `docs.google.com`), create a baseline of all observed `user_agent` strings over a 30-day period and calculate their frequency. Alert on any connection from a host using a User-Agent that has never been seen before for that specific service or falls below a 0.1% frequency threshold.",
              "Train a Long Short-Term Memory (LSTM) autoencoder on sequences of legitimate URI paths (e.g., `/user/project/blob/main/file.ext`) for high-traffic developer or storage services. Use the trained model to calculate the reconstruction error for all new URI requests. A high reconstruction error suggests the URI structure is anomalous and does not conform to learned legitimate patterns. Flag requests with an error score exceeding 3 standard deviations from the mean."
            ]
          },
          {
            "description": "A network session to a legitimate web service demonstrates anomalous data transfer ratios, periodic 'heartbeat' communication timing, or characteristics of encrypted/randomized payloads.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways and network tap/span ports with full packet capture or deep packet inspection.",
            "action": [
              "Create a SIEM rule that triggers when a connection in `conn.log` to a whitelisted web service domain meets all of the following criteria: (1) `orig_bytes` is at least 5 times greater than `resp_bytes`, (2) `orig_bytes` is greater than 1KB, and (3) `resp_pkts` is greater than `orig_pkts`. This identifies 'low and slow' data exfiltration within a C2 channel.",
              "For each internal source IP (`id.orig_h`) and external destination service pair, calculate the mean and standard deviation of the time delta between consecutive connections over a rolling 6-hour window. Flag pairs where the standard deviation is less than 5 seconds and the mean is between 10 seconds and 30 minutes, indicating machine-like beaconing. Concurrently, calculate the Shannon entropy of all HTTP POST request bodies (`http.log`) or transferred files (`files.log`); flag any payload with an entropy score > 7.5 (out of 8).",
              "For each host, apply a Seasonal-Trend decomposition using Loess (STL) time-series model to the total bytes sent (`orig_bytes`) to external web services, aggregated in 10-minute intervals. The model will separate the traffic into seasonal, trend, and residual components. Alert on any residual value that is a significant outlier (e.g., > 3 standard deviations from the residual mean), indicating a traffic spike not explained by normal patterns."
            ]
          },
          {
            "description": "A process that is non-interactive, unsigned, executing from a non-standard file path, or uncommonly associated with network activity, initiates an outbound connection to a legitimate web service.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations, servers), Domain Controllers, and Virtual Desktop Infrastructure (VDI) hosts.",
            "action": [
              "Join process creation events (Sysmon Event ID 1) with network connection events (Sysmon Event ID 3) on `ProcessGuid`. Alert when a process image path contains `rundll32.exe`, `mshta.exe`, `cscript.exe`, or is located in `%APPDATA%`, `%TEMP%`, or `%PUBLIC%` and initiates a connection to a domain categorized as 'Social Media', 'Cloud Storage', or 'Code Repository'.",
              "For each process name (e.g., `svchost.exe`, `powershell.exe`), build a frequency table of its parent process based on Sysmon Event ID 1 data over 30 days. Flag any network-initiating process whose parent process is statistically rare (e.g., frequency < 1%) for that child process, such as `winword.exe` spawning `powershell.exe` which then connects to github.com.",
              "Use a graph-based clustering algorithm on a graph where nodes are processes, files, and network destinations, and edges represent relationships (parent-child, file-write, network-connection). Identify small, disconnected communities of nodes. These outlier clusters often represent a malicious execution chain, such as `outlook.exe` -> `winword.exe` -> `powershell.exe` -> `pastebin.com`, which is isolated from the large graph of benign activity."
            ]
          },
          {
            "description": "A server asset (e.g., domain controller, database server) initiates an outbound network connection to a consumer-grade web service not explicitly required for its defined business or administrative function.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Server subnets, critical asset network segments, and data center core network taps.",
            "action": [
              "For each critical server group (e.g., 'Domain Controllers', 'Database Servers'), define a strict network egress allow-list of required destination domains/IPs and ports. Ingest this allow-list into the SIEM. Generate a critical alert for any connection from a server in these groups to a destination not on its explicit allow-list.",
              "For each server, maintain a 30-day rolling baseline set of unique destination domains it communicates with. On a daily basis, calculate the Jaccard similarity index between the set of domains contacted in the last 24 hours and the 30-day baseline set. Alert if the Jaccard index drops below 0.8, indicating that more than 20% of the day's traffic was to new, previously unseen domains.",
              "Train a One-Class Support Vector Machine (OC-SVM) model on a known-good baseline of network traffic from each server or server role. The feature set should include destination port, protocol, bytes sent, bytes received, and a categorical representation of the destination domain. Use the trained model to classify all new connections as either 'inlier' (normal) or 'outlier' (anomalous). Immediately flag all outlier connections from critical servers for analyst investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]