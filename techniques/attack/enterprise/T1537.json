[
  {
    "information_requirement": "Has the adversary exfiltrated data by transferring it to another cloud account?",
    "tactic_id": "TA0010",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1537",
        "name": "Transfer Data to Cloud Account",
        "evidence": [
          {
            "description": "An AWS CloudTrail event with `eventName: ModifySnapshotAttribute` or an Azure Activity Log event for `Microsoft.Storage/storageAccounts/listkeys/action` contains a target account ID or principal in the `requestParameters` that is not present on a pre-approved partner allow-list or matches an entry on a known-malicious account block-list.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM and resource management APIs, SIEM alert dashboards",
            "action": [
              "Query cloud audit logs for sharing events (e.g., AWS `ModifySnapshotAttribute`, Azure `Microsoft.Storage/storageAccounts/listkeys/action`). For each event, extract the target account ID or principal. Compare this ID against a maintained allow-list of partner accounts and a block-list of known-malicious accounts. Generate an alert if the target ID is on the block-list or not on the allow-list.",
              "For each user, query historical cloud audit logs to build a baseline set of external account IDs they have shared resources with over the last 90 days. For any new sharing event, calculate the Jaccard similarity between the target account ID and the user's historical set. Alert if the similarity score is 0, indicating a first-time share for that user, and enrich the alert with the user's role and recent activity.",
              "Deploy a pre-trained classification model (e.g., Random Forest) that ingests cloud sharing events. Engineer features from log data, including user role, source IP reputation, time of day, resource type, and the historical frequency of the target account ID. The model will output a probability score for the share being malicious; route all events with a score above a tuned threshold (e.g., 0.85) to a high-priority investigation queue."
            ]
          },
          {
            "description": "A Windows Event ID 4688 or Sysmon Event ID 1 log shows the execution of a cloud CLI binary (`aws.exe`, `az.cmd`) where the `CommandLine` or `ProcessCommandLine` field contains substrings for sharing resources, such as `modify-snapshot-attribute`, `put-bucket-policy`, or `storage blob sas generate`.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations, Administrator jump boxes, and CI/CD pipeline build agents",
            "action": [
              "Write a SIEM rule to search process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for a `ProcessName` of `aws.exe`, `az.cmd`, or `gcloud.cmd` combined with a `CommandLine` containing strings like `modify-snapshot-attribute`, `put-bucket-policy`, `copy-object --acl public-read`, or `storage blob sas generate`. Trigger a high-severity alert on any match.",
              "For each host, ingest process creation logs and profile the command-line arguments used with cloud CLI tools. Calculate the Shannon entropy of the command distribution per host over a rolling 30-day window. A sudden, sharp decrease in entropy may indicate repetitive, scripted execution of a specific malicious command. Alert when the daily entropy for a host drops more than 2 standard deviations below its historical average.",
              "Implement an NLP-based command-line classifier. Use a transformer model fine-tuned on a labeled dataset of benign and malicious cloud CLI commands. Feed the `CommandLine` field from process creation logs into the model. The model should classify commands into categories like 'benign-read-only', 'benign-config-change', and 'suspicious-data-sharing'. Flag commands classified as 'suspicious-data-sharing' for immediate analyst review."
            ]
          },
          {
            "description": "The sum of `orig_bytes` in Zeek conn.log sessions from a single internal source IP to destination IPs within known cloud provider CIDR blocks exceeds the 99th percentile of that source IP's daily egress volume, as measured over a 30-day baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Firewall Egress Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies) and VPN concentrators",
            "action": [
              "Create a SIEM rule that triggers an alert if the sum of `orig_bytes` from a single internal IP to a watchlist of cloud provider IP ranges exceeds a static threshold of 10 GB in a one-hour window. This serves as a high-volume tripwire for bulk data movement.",
              "For each internal source IP, query Zeek conn.log to create a 30-day rolling baseline of total hourly data egress volume to cloud provider IP ranges. For each hour, calculate the mean and standard deviation. Generate an alert if the observed volume in the current hour exceeds 3 standard deviations above the historical mean for that same hour of the day and day of the week.",
              "For each internal host, train a time-series forecasting model (e.g., Prophet or ARIMA) on its historical egress data volume from Zeek conn.log. The model will predict the expected data volume for the next hour, including a confidence interval. If the actual observed volume exceeds the upper bound of the model's 99% confidence interval, flag it as a volumetric anomaly requiring investigation."
            ]
          },
          {
            "description": "A cloud data sharing API call (e.g., AWS `ModifySnapshotAttribute`) or CLI command is initiated by a user principal or from a source host that is not a member of a pre-defined authorized group (e.g., 'Cloud Data Sharers' in Active Directory or IAM).",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Active Directory security logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory domain controllers, Cloud IAM service, and corporate workstations",
            "action": [
              "Maintain an explicit allow-list of user accounts and hostnames authorized to perform cloud data sharing actions, synchronized from an AD or IAM group. Create a SIEM rule that cross-references the `userIdentity.principalId` or `sourceHostName` from a sharing event against this list and alerts on any mismatch.",
              "For each user, build a profile of the source IP subnets and hostnames they typically use to initiate cloud API calls, based on 90 days of log data. Calculate the frequency of each user-source pair. If a sharing action is initiated from a user-source pair that has a frequency of zero (i.e., is 'first-seen') or falls below a 1% historical frequency, flag it as a rare source anomaly.",
              "Implement a Peer Group Analysis model. Ingest user activity data (API calls, CLI commands, login times) and cluster users into behavioral groups (e.g., 'Developers', 'Finance') using an algorithm like k-means. If a user executes a data sharing action that is statistically uncharacteristic of their assigned peer group, flag it as a behavioral deviation."
            ]
          },
          {
            "description": "A cloud resource sharing event, such as an AWS CloudTrail `ModifySnapshotAttribute` event, specifies a target `awsAccountId` in the `requestParameters.createVolumePermission.add.items` field that has not been seen in any sharing event across the organization in the last 180 days.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud management plane API logs, SIEM or data lake holding historical logs",
            "action": [
              "Maintain a stateful set in your SIEM or data lake of all external cloud account IDs that have been the target of a sharing event in the last 180 days. Create a rule that queries this set for every new sharing event. If the target account ID is not in the set, generate a high-priority 'First Seen External Sharing Target' alert and add the new ID to the set.",
              "For all sharing events over the past 90 days, calculate the frequency of each destination account ID. Use this to compute the Inverse Document Frequency (IDF) score for each account ID. An alert is triggered when a new sharing event targets an account ID with a very high IDF score (low frequency), indicating it is a statistically rare destination.",
              "Model the relationship between internal users and external sharing partners as a bipartite graph, where nodes are users and external accounts, and an edge is a sharing event. Use a link prediction algorithm (e.g., Adamic-Adar) to score the likelihood of a new sharing event being legitimate based on the graph structure. A new sharing event that forms an edge with a very low predicted likelihood score is flagged as an anomalous relationship."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]