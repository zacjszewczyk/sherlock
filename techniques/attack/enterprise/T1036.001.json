[
  {
    "information_requirement": "Is the adversary using defense evasion techniques by executing code with an invalid signature? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.001",
        "name": "Invalid Code Signature",
        "evidence": [
          {
            "description": "A process is created from an executable file whose hash or signing certificate thumbprint matches a known-malicious indicator from threat intelligence.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 8003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers",
            "action": [
              "Symbolic: Continuously monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) and code integrity events (Windows Event ID 8003). Extract file hashes and certificate thumbprints for all executed files. Join this data against a high-confidence blocklist of known malicious hashes and certificate thumbprints from threat intelligence feeds. Generate a high-priority alert for any match.",
              "Statistical: Analyze the source of IOC matches over time. If a specific threat intelligence feed consistently produces a high rate of false positives, calculate its precision score (True Positives / (True Positives + False Positives)) over a 30-day window. Deprioritize or disable feeds that fall below a predefined precision threshold (e.g., 0.80).",
              "Machine Learning: Develop a time series model (e.g., ARIMA) to forecast the expected number of IOC hits per day. An observed count of IOC hits that significantly exceeds the forecasted upper confidence interval could indicate a widespread campaign or a compromised threat intelligence feed. This anomaly score can be used to trigger a broader incident investigation."
            ]
          },
          {
            "description": "A process is created from an executable that fails the operating system's digital signature validation check, as logged by a code integrity event.",
            "data_sources": [
              "Windows Event ID 8002",
              "Windows Event ID 8003",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations, Application servers, Developer workstations",
            "action": [
              "Symbolic: Create a detection rule that joins process creation events (Windows Event ID 4688) with code integrity failure events (Windows Event ID 8002, 8003) on the Process ID and file name. Alert on any instance where a process executes despite a signature validation failure, excluding known legitimate software that exhibits this behavior via an explicit allowlist.",
              "Statistical: For each host, calculate the daily count of unique processes that fail signature validation. Establish a baseline for each host using the 95th percentile of the daily count over the last 30 days. Generate a medium-priority alert when a host's daily count exceeds this statistical threshold.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from the process and its parent (e.g., file path entropy, command line arguments, parent process name, user context) to predict whether a signature validation failure is malicious or benign. This helps prioritize alerts by automatically classifying events involving unsigned code running from temporary directories or launched by suspicious parent processes as high-risk."
            ]
          },
          {
            "description": "An executable file's computed cryptographic hash does not match the hash value stored within its own PE header's digital signature block, indicating post-signing modification.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 8003"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations, Critical servers (Domain Controllers, Database Servers)",
            "action": [
              "Symbolic: Upon detection of a code integrity event (Windows Event ID 8003), trigger a script or EDR action to acquire the executable file. Programmatically parse the signature block to extract the embedded hash, then compute the file's actual hash (e.g., SHA256). Generate a high-priority alert if the computed hash does not match the embedded hash.",
              "Statistical: Periodically scan critical file systems (e.g., C:\\Windows\\System32) on a sample of endpoints. For all signed executables, perform the hash mismatch check. Track the percentage of files that fail this check over time. Use a Z-score calculation on the failure rate to detect significant deviations from the norm, which could indicate a widespread file-patching campaign.",
              "Machine Learning: Use an anomaly detection model on file metadata associated with hash mismatches. Features could include file size, compilation timestamp, entropy of file sections, and the signer's identity. The model can learn the characteristics of legitimate software patching or file corruption versus malicious tampering to reduce false positives."
            ]
          },
          {
            "description": "A newly observed executable is signed with a certificate whose properties (e.g., issuer, subject, validity period) are statistically rare compared to a 90-day baseline of all signed executables in the environment.",
            "data_sources": [
              "Windows Event ID 8003",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, Certificate Authority servers",
            "action": [
              "Symbolic: Maintain a static list of known-suspicious certificate subjects and issuers (e.g., subjects containing typos of legitimate companies). Create a detection rule that triggers an alert when a process is created from a file signed by a certificate matching any entry on this list.",
              "Statistical: Aggregate all certificate metadata (Issuer, Subject, IsSelfSigned) from executed files over the last 90 days to build a frequency distribution for each property. For each new execution, score its certificate based on the rarity of its properties (e.g., using inverse document frequency). Alert on executions where the certificate's rarity score exceeds the 99th percentile of all observed scores.",
              "Machine Learning: Use clustering algorithms (e.g., DBSCAN) on certificate features (entropy of subject and issuer names, validity duration, key usage flags). This can automatically group certificates into clusters of 'normal' (e.g., Microsoft, Google) and 'anomalous'. Any executable signed by a certificate that falls into a small, isolated cluster or is classified as noise by the algorithm should be flagged for investigation."
            ]
          },
          {
            "description": "A file is downloaded from an external network source, and within a 10-minute window, is executed on an endpoint, resulting in a code integrity signature validation failure event.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 8002",
              "Windows Event ID 8003",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Internet Gateway, Proxy server logs, All enterprise workstations",
            "action": [
              "Symbolic: Correlate network file download logs (Zeek files.log) with endpoint process execution logs (Sysmon Event ID 1) and code integrity failures (Windows Event ID 8002). Create a rule that alerts when a file's hash, observed in a download from a source with a low reputation score, is subsequently seen in a process creation event associated with a signature validation failure on the same host within 15 minutes.",
              "Statistical: For each external domain observed in download logs (Zeek dns.log), calculate the ratio of 'downloads leading to invalid signature execution' to 'total downloads'. Establish a baseline for this ratio across all domains. Flag domains whose ratio exceeds the 95th percentile, as they are statistically more likely to be hosting improperly signed malicious software.",
              "Machine Learning: Train a time series anomaly detection model on the frequency of the 'download -> invalid execution' event chain across the enterprise. A sudden spike in the rate of these correlated events, even if from different sources, can indicate a coordinated campaign. The model can provide an anomaly score that, when crossing a threshold, triggers a SOC-level alert for a potential widespread attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]