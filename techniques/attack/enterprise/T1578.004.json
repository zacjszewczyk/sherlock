[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by reverting cloud instances? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1578.004",
        "name": "Revert Cloud Instance",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) containing command-line arguments for cloud snapshot restoration or instance reset (e.g., 'Restore-AzVM', 'ec2 restore-snapshot'), followed within a 30-minute window by a system shutdown event (Windows Event ID 1074) on the same host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1074"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud-hosted virtual machines (Windows); Centralized SIEM/Log Management Platform",
            "action": "1. Symbolic: Create a detection rule that triggers when a process name from a watchlist (`aws.exe`, `gcloud.cmd`, `az.cmd`, `pwsh.exe`) is executed with command-line arguments matching a regex pattern for snapshot/revert operations (e.g., `restore-snapshot|revert|reset-instance`). Correlate this trigger with a subsequent Windows Event ID 1074 on the same host within 30 minutes. 2. Statistical: For each host, establish a baseline of command-line argument entropy for common administrative tools like `powershell.exe`. Calculate the Shannon entropy score for the command line of each new execution. Flag executions where the entropy score exceeds the 95th percentile for that host/user combination, as adversary commands are often longer and more complex than typical administrative use. Correlate high-entropy events with system restarts. 3. Machine Learning: Train a classification model (e.g., random forest) on labeled process creation events (Event ID 4688). Use features such as process name, parent process, command-line length, command-line entropy, user context, and time of day. Use the model to classify new process events as benign or suspicious, specifically looking for those classified as suspicious that also contain cloud CLI keywords and precede a system restart."
          },
          {
            "description": "Anomalous network traffic patterns, such as a spike in connections or data volume to cloud management API endpoints (e.g., `ec2.amazonaws.com`, `management.azure.com`) or the instance metadata service (169.254.169.254), observed in network flow logs (Zeek conn.log) within 10 minutes prior to an unexpected system shutdown (Windows Event ID 1074) or abrupt cessation of all network traffic from that host's IP.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 1074",
              "Windows Event ID 6005",
              "Windows Event ID 6006"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud environment network gateways; Virtual network flow log collectors; Centralized SIEM/Log Management Platform",
            "action": "1. Symbolic: Maintain a list of critical cloud management API FQDNs. Create a rule that alerts when a host initiates a connection to one of these FQDNs (via Zeek dns.log or conn.log `server_name` field) and is followed by a system shutdown event (Event ID 1074) or a 'connection reset' state in Zeek conn.log for that host's traffic within a 10-minute window. 2. Statistical: For each instance, baseline the hourly volume (bytes_out) and connection count to cloud management API endpoints. Monitor Zeek conn.log and alert when the connection count or data volume to these endpoints for a given host exceeds 3 standard deviations above its historical hourly mean, especially if this spike occurs outside of established change management windows. 3. Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on Zeek conn.log data, monitoring the number of connections per minute from each instance to the cloud metadata service (169.254.169.254). An anomalous spike predicted by the model, when correlated with a subsequent loss of heartbeat or a system shutdown event for that instance, indicates potential pre-revert activity."
          },
          {
            "description": "A verifiable time gap in host-based logs (Windows Event Logs) that directly corresponds to a period of confirmed malicious network activity (e.g., C2 beaconing, data exfiltration) observed in network logs (Zeek conn.log and dns.log), where the gap is initiated by a system restart event (Event ID 1074).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 1074",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized SIEM/Log Management Platform; Network sensor data lake; Cloud-hosted virtual machines (Windows)",
            "action": "1. Symbolic: After a high-confidence network alert (e.g., a connection to a known C2 server IP/domain in Zeek conn.log/dns.log) is associated with a host, trigger an automated query for that host's logs (Event ID 4688, 4624) from the SIEM for the 15 minutes surrounding the network event. If a system restart (Event ID 1074) is found and the corresponding host logs for the alert period are absent, generate a high-severity alert for a likely instance revert. 2. Statistical: Continuously monitor the latency of log ingestion from each cloud instance into the central SIEM. Establish a baseline for expected log shipping delay per host. If, after a restart event, the latency for new logs exceeds the 99th percentile of its normal baseline, flag for investigation to identify a potential log gap caused by a revert. 3. Machine Learning: Develop a log availability forecast model. For each host, train a time-series model on the volume of logs ingested per minute. After a restart event (Event ID 1074), compare the actual volume of logs received for the pre-restart period against the model's forecast. A statistically significant negative residual (actual << predicted) indicates a log gap and potential revert."
          },
          {
            "description": "A Windows Event ID 4616 (System time was changed) event where the 'NewTime' field is more than 5 minutes earlier than the 'PreviousTime' field, occurring within 2 minutes of a system startup event (Windows Event ID 6005).",
            "data_sources": [
              "Windows Event ID 4616",
              "Windows Event ID 6005",
              "Windows Event ID 1074"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud-hosted virtual machines (Windows); Active Directory Domain Controllers; Centralized SIEM/Log Management Platform",
            "action": "1. Symbolic: Create a high-priority alert that triggers immediately upon detection of Windows Event ID 4616 where the 'NewTime' value is chronologically before the 'PreviousTime' value. This is a direct, high-fidelity indicator of a time rollback. 2. Statistical: Analyze the time delta between 'NewTime' and 'PreviousTime' for all Event ID 4616 events across the environment. Use descriptive statistics to define 'normal' time drift from NTP corrections (typically seconds). Flag any event where the backward time jump exceeds a dynamic threshold, such as 4 standard deviations from the mean time correction delta, or a hard threshold of >5 minutes, to identify statistically significant rollbacks. 3. Machine Learning: Use clustering analysis (e.g., DBSCAN) on Event ID 4616 data, using features like the time delta (NewTime - PreviousTime) and the process that made the change. This can automatically group normal NTP-related time changes into a large cluster, while significant rollback events will appear as anomalous outliers, allowing for detection without pre-defined thresholds."
          },
          {
            "description": "A system restart event (Windows Event ID 1074) or a sudden loss of all network flows from a host's IP in Zeek conn.log, which occurs within 60 minutes after a high-severity security alert (e.g., from an EDR, IDS, or other analytic) was triggered for that same host.",
            "data_sources": [
              "Windows Event ID 1074",
              "Zeek conn.log",
              "Security Alert Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized SIEM/Log Management Platform; EDR Management Console; IDS/IPS Management Console",
            "action": "1. Symbolic: Implement a correlation rule in the SIEM that takes a feed of high-priority security alerts. If an alert for a specific host is followed within a 60-minute window by an unexpected shutdown event (Event ID 1074 with a non-standard process or empty reason) for the same host, escalate to a new, higher-severity 'Suspected Evasion' alert. 2. Statistical: For each host, calculate the baseline frequency of unexpected restarts (e.g., restarts per week). Monitor for hosts where the restart frequency following a security alert is statistically anomalous (e.g., in the 99th percentile) compared to its own baseline or the baseline of its peer group (e.g., other web servers). 3. Machine Learning: Train a Bayesian network to calculate the conditional probability of an instance revert given prior evidence. The model would ingest nodes representing different alerts (e.g., 'Malicious Process Detected', 'C2 Beaconing'). The occurrence of a subsequent 'Unexpected Restart' event would update the probability of the 'Instance Revert' hypothesis. If the posterior probability crosses a predefined threshold (e.g., P(Revert|Alert, Restart) > 0.8), an alert is generated."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]