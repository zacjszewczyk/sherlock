[
  {
    "information_requirement": "Is the adversary collecting sensitive data via screen capture? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1113",
        "name": "Screen Capture",
        "evidence": [
          {
            "description": "A process is created with a file hash or name matching a known malicious/unauthorized screen capture tool, or a file is transferred over the network with a MIME type and filename pattern consistent with the output of such a tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate workstations and servers, Network egress points",
            "action": "1. Symbolic Match: Continuously monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) and network file transfers (Zeek files.log). Compare process hashes and names against a threat intelligence list of known screen capture malware. Simultaneously, use regular expressions on Zeek file logs to match filenames (e.g., scr_[0-9]+.dat) and MIME types associated with these tools. Generate a high-priority alert on any match. 2. Statistical Analysis: For each observed process hash, calculate its prevalence across the enterprise over the last 30 days. A hash that matches a screen capture tool name and has a prevalence of less than 1% (i.e., is present on very few machines) should have its alert priority increased. 3. Machine Learning Classification: Utilize a pre-trained classification model (e.g., Random Forest) that ingests process metadata (parent process, user context, command-line arguments) to score the likelihood of a process being malicious. If an unknown process exhibits screen capture-like behavior and receives a high malicious score, flag it for investigation even without a hash match."
          },
          {
            "description": "A native Windows utility (e.g., psr.exe, snippingtool.exe) or PowerShell script is executed with command-line arguments indicating automated, non-interactive, or hidden operation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate workstations and servers, User workstations handling sensitive data",
            "action": "1. Symbolic Match: From process creation logs (Windows Event ID 4688, Sysmon Event ID 1), use regular expressions to search command lines of psr.exe, snippingtool.exe, and powershell.exe for suspicious arguments like '/start', '/sc 1', '/gui 0', '/clip', '/silent', or script blocks containing 'Get-Screenshot' with an output path. Alert on matches. 2. Statistical Analysis: For each user, establish a baseline of command-line argument entropy and length for legitimate executions of these tools. Calculate the Z-score for the entropy of each new command line. Flag executions where the Z-score is greater than 3, indicating a command line that is statistically more random or complex than usual for that user. 3. Time-Series Analysis: For each host, ingest the timestamps of screen capture utility executions. Apply a Fast Fourier Transform (FFT) or autocorrelation analysis to detect periodicity. A strong, repeating pattern (e.g., execution every 5 minutes) that is not tied to a known, legitimate scheduled task is a strong indicator of an automated malicious script."
          },
          {
            "description": "A process, not typically associated with user-driven GUI interaction (e.g., a service, a script host), creates one or more files with image-related extensions (.png, .jpg, .bmp) in a temporary, hidden, or user-agnostic directory.",
            "data_sources": [
              "Windows Event ID 1 (Sysmon)",
              "Windows Event ID 11 (Sysmon)",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on all corporate workstations and servers, Shared network drives",
            "action": "1. Symbolic Match: Correlate Sysmon Event ID 1 (Process Creation) with Sysmon Event ID 11 (File Create). Create a rule to alert when a process spawned by a non-interactive parent (e.g., services.exe, taskhostw.exe) creates a file with an image extension (.png, .jpg, .bmp). 2. Statistical Analysis: Establish a baseline of (process, file_path_location, file_extension) tuples. For each new file creation event, calculate the rarity of the tuple. If 'powershell.exe' writing a '.jpg' to 'C:\\Windows\\Temp\\' occurs less than 0.01% of the time, flag it as a statistical anomaly using a percentile-based threshold. 3. Machine Learning Anomaly Detection: Train an anomaly detection model (e.g., Isolation Forest) on legitimate file creation events, using features like process name, parent process name, user account, file extension, and directory path. The model can flag new events that deviate significantly from this learned norm."
          },
          {
            "description": "A screen capture utility is executed under a system-level account (e.g., NT AUTHORITY\\SYSTEM), from a non-interactive session, or spawned by a parent process not associated with direct user activity (e.g., a remote administration tool, a scheduled task engine).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process tables on all endpoints, Domain Controllers, Servers hosting critical applications",
            "action": "1. Symbolic Match: In process creation logs (Windows Event ID 4688, Sysmon Event ID 1), create a high-severity alert for any execution of a known screen capture tool where the User field is 'NT AUTHORITY\\SYSTEM' or where the ParentProcessName is 'services.exe' or 'wmic.exe'. 2. Statistical Analysis: For each process name, build a baseline of legitimate parent processes. If a screen capture utility is spawned by a parent process that falls outside the top 99% of its typical parents (i.e., a rare parent), it is anomalous and should be investigated. 3. Machine Learning Classification: Train a classifier (e.g., Logistic Regression) to predict if a process execution is 'interactive' or 'non-interactive' based on features like SessionID (Session 0 is non-interactive), User, and ParentProcessName. Any execution of a screen capture tool that is classified as 'non-interactive' is highly suspicious."
          },
          {
            "description": "A statistically significant spike in the volume or count of outbound image files (e.g., PNG, JPG) is observed, where the destination IP is rare or has a poor reputation, and the activity is temporally correlated with on-host screen capture indicators.",
            "data_sources": [
              "Windows Event ID 1 (Sysmon)",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls/proxies), DNS servers, All corporate workstations and servers",
            "action": "1. Symbolic Correlation: Join endpoint process logs (Sysmon Event ID 1) with network logs (Zeek conn.log, files.log) on IP address and timestamp. Create a rule that triggers if a host executes a suspicious screen capture process and, within 5 minutes, initiates a connection to a destination IP on a threat intelligence blocklist, transferring files with an 'image/*' MIME type. 2. Statistical Analysis: For each host, establish a 30-day rolling baseline (mean and standard deviation) for the hourly count and total volume (bytes) of transferred image files using Zeek files.log. Generate an alert if a host's hourly image file transfer count or volume exceeds its baseline by more than 3 standard deviations. 3. Time-Series Forecasting: Use a time-series model (e.g., ARIMA) to forecast the expected total network-wide volume of outbound image file transfers for the next hour, including confidence intervals. If the actual measured volume exceeds the upper bound of the forecast's confidence interval, trigger an alert for anomalous network-wide exfiltration."
          },
          {
            "description": "Screen capture process executions occur with a consistent, machine-like periodicity (e.g., every 120 seconds), at times outside the user's typical working hours, or in a bursty pattern that deviates from normal user behavior.",
            "data_sources": [
              "Windows Event ID 1 (Sysmon)",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Endpoints assigned to privileged users (e.g., domain admins, executives)",
            "action": "1. Symbolic Match: If foreground window logging is available, create a rule that alerts when a screen capture process is executed while the active window title contains keywords like 'password', 'MFA', 'secret', or matches the name of a known credential management application. 2. Statistical Analysis: For each user, model their 'normal working hours' by calculating the mean and standard deviation of their activity hours over 30 days. Any screen capture activity that occurs more than 2 standard deviations outside of these typical hours should be flagged. Additionally, apply a Fast Fourier Transform (FFT) to the event timestamps over a 24-hour window to detect strong periodic signals. 3. Machine Learning Clustering: Use a density-based clustering algorithm like DBSCAN on screen capture events, with features such as hour_of_day, day_of_week, and events_per_minute. The algorithm will group 'normal' activity into dense clusters. Events that are marked as noise or outliers by the model represent deviations from established patterns and should be investigated."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]