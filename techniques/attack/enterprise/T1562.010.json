[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by using downgraded system features? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1562.010",
        "name": "Downgrade Attack",
        "evidence": [
          {
            "description": "A process is executed (Windows Event ID 4688) or a service is created (Windows Event ID 7045) using a binary whose file hash is present on a known list of vulnerable or outdated drivers/tools (e.g., LOLDrivers), which can be abused to bypass security controls.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint Workstations of privileged users, Systems with EDR/AV agents",
            "action": [
              "Symbolic: Match file hashes from process creation events (Windows Event ID 4688) and service creation events (Windows Event ID 7045) against a curated threat intelligence feed of known vulnerable driver hashes (e.g., from the LOLDrivers project). Generate a high-severity alert upon any match.",
              "Statistical: For each process creation (Windows Event ID 4688) or service installation (Windows Event ID 7045), calculate the enterprise-wide prevalence of the associated file hash over the last 90 days. Flag any executable or driver hash with a prevalence below the 5th percentile for investigation, as this indicates rarity.",
              "Machine Learning: Develop a classification model (e.g., XGBoost, Random Forest) trained on labeled historical data. Features should include process command-line, parent process name, user context, file path, and the statistical hash prevalence. Apply the model to new service and process creation events to generate a 'maliciousness' score. A score exceeding a predetermined threshold triggers an alert."
            ]
          },
          {
            "description": "A PowerShell process is initiated with command-line arguments explicitly requesting version 2 (e.g., '-v 2', '-version 2'), which lacks modern security features like Script Block Logging and AMSI.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 400"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) for command lines containing 'powershell.exe' and arguments such as '-v 2' or '-version 2'. Generate a high-priority alert for any matching event, as this is a highly specific indicator of a downgrade attempt.",
              "Statistical: Analyze PowerShell engine start logs (Windows Event ID 400) over a 30-day period to baseline the `EngineVersion` used by each user and on each host. Alert if a user or host initiates a PowerShell v2 session when their historical usage of v2 is zero or falls in the 99th percentile of rarity for the environment.",
              "Machine Learning: For each host, create a time-series model (e.g., ARIMA) of the volume of PowerShell Script Block logs (Windows Event ID 4104). If a PowerShell v2 execution (identified via Windows Event ID 4688) is immediately followed by a significant negative anomaly in the predicted log volume (i.e., logging stops unexpectedly), flag it as a potential downgrade attack to evade logging."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) is observed that disables a security feature. This is indicated by a specific registry value being set to an insecure state, such as `HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware` set to `1` or `HKLM\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\\Enabled` set to `0`.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Hyper-V Hosts, and Windows 10/11 Endpoints with Virtualization-Based Security (VBS) enabled",
            "action": [
              "Symbolic: Create a detection rule that monitors for registry modification events (Windows Event ID 4657) targeting a watchlist of critical security keys (e.g., `...\\DisableAntiSpyware`, `...\\HypervisorEnforcedCodeIntegrity\\Enabled`). Trigger a critical alert if any of these keys are modified to a disabled or insecure value (e.g., '1' for DisableAntiSpyware, '0' for HVCI).",
              "Statistical: Profile the processes that typically modify security-related registry keys (e.g., `TrustedInstaller.exe`, `msiexec.exe`). Using process creation logs (Windows Event ID 4688) correlated with registry modification logs (Windows Event ID 4657), calculate the frequency of different parent processes that lead to these modifications. Flag any modification made by a statistically rare process (e.g., `powershell.exe` or `rundll32.exe`) that is not in the top 95th percentile of legitimate modifiers.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) to predict whether a registry modification event is malicious. Use features such as the process name making the change, user context, time of day, and the specific key path being modified. A high probability score from the model for a change affecting a security key indicates a probable downgrade attack."
            ]
          },
          {
            "description": "Network traffic logs (Zeek) show a connection using a deprecated cryptographic protocol (SSLv3, TLS 1.0, TLS 1.1) or a downgrade from an encrypted to a cleartext protocol (e.g., HTTP observed on TCP/443), for either internal (East-West) or external (North-South) communications.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Network Segments (East-West traffic), VPN Concentrators, Reverse Proxies and Load Balancers",
            "action": [
              "Symbolic: Query `ssl.log` for any connection where the `version` field is 'SSLv3', 'TLSv10', or 'TLSv11'. Additionally, query `conn.log` for any connection where `id.resp_p` (destination port) is 443 and the `service` field is identified as 'http'. Alert on any match.",
              "Statistical: For each internal server IP address, analyze `ssl.log` to establish a 30-day rolling average of the ratio of weak (TLS < 1.2) to strong (TLS >= 1.2) cryptographic protocols. Alert if the daily ratio for any server exceeds three standard deviations above its historical average, indicating a potential targeted downgrade campaign.",
              "Machine Learning: Apply an unsupervised anomaly detection algorithm (e.g., Isolation Forest) to `ssl.log` data. Use features such as TLS version, chosen cipher suite, JA3/JA3S hash, and the `validation_status` field. The model will identify outlier connections that deviate from normal TLS negotiation patterns, which could represent a downgrade attack."
            ]
          },
          {
            "description": "A sequence of distinct defense evasion activities are observed on a single host within a short time window (e.g., under 5 minutes), all linked to the same parent process. This includes a combination of registry modifications to disable security features (Event ID 4657), stopping security services (Event ID 7040), and executing tools like `bcdedit` (Event ID 4688).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Windows Event ID 7040"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Privileged Access Workstations (PAWs), Critical Service Hosts",
            "action": [
              "Symbolic: Create a correlation rule that triggers if a single Parent Process ID is associated with three or more distinct high-risk events within a 5-minute window. The events include: a security service stopping (Event ID 7040), a critical security registry key being modified (Event ID 4657), and a process creation (Event ID 4688) for a known defense evasion tool (e.g., `bcdedit.exe`, `reg.exe add ...Disable...`).",
              "Statistical: For a given parent process (e.g., `powershell.exe`), collect all child process command lines spawned within a 10-minute window. Calculate the Shannon entropy of the set of unique commands. Compare this entropy score to a historical baseline for that parent process or user. An entropy score exceeding the 98th percentile suggests an unusually diverse and potentially malicious script executing a chain of commands.",
              "Machine Learning: Implement a sequence analysis model (e.g., an LSTM or Hidden Markov Model) trained on event log sequences from known malicious and benign activities. The model should take a timed sequence of events (process creation, registry modification, service state change) for a given host as input and classify the entire sequence as 'suspicious' if it matches a learned attack pattern."
            ]
          },
          {
            "description": "Process execution logs (Windows Event ID 4688) show `bcdedit.exe` being used with arguments to disable boot integrity checks (e.g., `/set testsigning on`, `/set nointegritychecks on`). Alternatively, `manage-bde.exe` is used to disable BitLocker protectors, or unauthorized file modifications are made to the EFI System Partition.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "UEFI-based systems, Domain Controllers, and BitLocker-encrypted endpoints",
            "action": [
              "Symbolic: Create a high-severity alert for any process execution (Windows Event ID 4688) of `bcdedit.exe` with command-line arguments containing `/set testsigning on`, `/set nointegritychecks on`, or `safeboot`. Also, alert on any execution of `manage-bde.exe -protectors -disable`.",
              "Statistical: Over a 60-day period, build a baseline of user accounts and parent processes that execute `bcdedit.exe` or `manage-bde.exe`. Any execution of these tools by a user account or parent process that is not on the established baseline (i.e., has a historical frequency of zero) should be flagged as a statistical anomaly for immediate investigation.",
              "Machine Learning: Train a one-class SVM on features from benign `bcdedit.exe` executions, including the full command line arguments, parent process, and user context. Apply this model in real-time to new executions. Any execution flagged by the model as an outlier represents a significant deviation from normal administrative behavior and is a potential downgrade attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]