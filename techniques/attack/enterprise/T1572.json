[
  {
    "information_requirement": "Is the adversary using protocol tunneling for command and control communications? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1572",
        "name": "Protocol Tunneling",
        "evidence": [
          {
            "description": "A network connection from an internal host to an external IP address or domain that is present on a threat intelligence feed of known C2 servers utilizing protocol tunneling.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress firewalls and proxies, Recursive DNS servers",
            "action": [
              "Symbolic Logic: Join Zeek conn.log destination IPs and Zeek dns.log queried domains with a high-confidence threat intelligence feed of known protocol tunneling C2 servers. Generate an alert for any match.",
              "Statistical Analysis: For connections to domains not seen in the last 30 days, calculate the rate of new connections per hour. Flag source hosts that contribute to a rate exceeding the 95th percentile of the historic hourly new connection rate, indicating a potential spray of connections to new C2 infrastructure.",
              "Machine Learning: Train a supervised classification model (e.g., Logistic Regression, Random Forest) using labeled data of known benign and C2 connections. Use features from Zeek conn.log and ssl.log such as JA3/JA3S hashes, connection duration, byte counts, and certificate details. Use the model to classify new, unknown connections and flag those with a high probability of being malicious."
            ]
          },
          {
            "description": "A process creation event is observed for a known tunneling tool (e.g., plink.exe, chisel.exe) or for a legitimate utility (e.g., ssh.exe) with command-line arguments associated with port forwarding or dynamic proxy creation (-L, -R, -D).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain Controllers",
            "action": [
              "Symbolic Logic: Monitor Windows Event ID 4688 for process names matching a watchlist of known tunneling tools (e.g., 'plink.exe', 'chisel.exe', 'iodine.exe') or for command lines of legitimate tools (e.g., 'ssh.exe', 'powershell.exe') containing tunneling flags like '-L', '-R', '-D'. Correlate positive hits with network connections in Zeek conn.log or SSH forwarding activity in Zeek ssh.log.",
              "Statistical Analysis: For legitimate processes like 'ssh.exe' and 'powershell.exe', establish a baseline of common command-line argument patterns. Calculate the entropy and length of all command-line arguments. Flag any executions where the argument entropy or length exceeds 3 standard deviations from the established norm for that process, indicating potentially obfuscated or unusual parameters.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on tokenized command-line arguments from Windows Event ID 4688. Identify clusters of normal activity for common processes. Flag any process executions that are classified as noise or fall into very small, anomalous clusters, as these may represent unique, malicious command invocations."
            ]
          },
          {
            "description": "DNS queries are observed with characteristics such as subdomain label length exceeding the 95th percentile for the environment, a query rate from a single client to a single domain exceeding 3 standard deviations above the mean, or a ratio of TXT/NULL queries to A/AAAA queries for a given domain that is anomalously high.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Egress network gateways",
            "action": [
              "Symbolic Logic: Maintain and apply a ruleset that matches DNS queries in Zeek dns.log against regular expressions and domains known to be associated with DNS tunneling tools and services. For example, search for domains matching patterns used by Iodine.",
              "Statistical Analysis: From Zeek dns.log, calculate the character entropy and length of the queried subdomain for every DNS query. Establish a baseline mean and standard deviation. Flag any query where the subdomain entropy or length is greater than 3 standard deviations above the mean. Additionally, track the ratio of TXT queries to A/AAAA queries per source IP and second-level domain; flag ratios that exceed the 99th percentile.",
              "Machine Learning: Apply time-series forecasting (e.g., ARIMA) to model the expected volume of DNS queries per hour for each host. Generate an alert when a host's actual query volume significantly exceeds the forecasted volume, especially if accompanied by other statistical flags like high entropy or unusual query types, which can indicate DNS tunneling C2."
            ]
          },
          {
            "description": "A network connection exhibits an outbound-to-inbound data ratio significantly different from the established baseline for its protocol (e.g., > 10:1 for DNS), or shows small, regularly timed data transfers (heartbeats) over a long-lived connection.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network core switches, Egress points, Servers hosting common services (e.g., HTTP, DNS)",
            "action": [
              "Symbolic Logic: For unencrypted protocols, scan payload data for known signatures or headers associated with tunneling tools like Chisel or Iodine. For protocols like SSH, inspect Zeek ssh.log for entries where 'client_channels' or 'server_channels' is greater than 0, indicating active port forwarding.",
              "Statistical Analysis: For each connection in Zeek conn.log, calculate the ratio of outbound bytes ('orig_bytes') to inbound bytes ('resp_bytes'). Establish a per-protocol baseline (e.g., for DNS, HTTPS). Flag connections where the ratio is a statistical outlier (e.g., >99th percentile), such as large uploads over DNS. Also, calculate the standard deviation of packet inter-arrival times for long-lived sessions; a very low standard deviation suggests periodic, automated heartbeating.",
              "Machine Learning: Train a Random Forest classifier on labeled Zeek conn.log data. Use features such as protocol, duration, orig_bytes, resp_bytes, service, and connection state. The model will learn to distinguish benign traffic from various forms of tunneled C2 traffic. Apply the model to live traffic to identify and score suspicious connections."
            ]
          },
          {
            "description": "A process not typically associated with network activity (e.g., notepad.exe) or a legitimate system process in an unusual context (e.g., svchost.exe running from a user profile) initiates an outbound network connection.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical infrastructure (e.g., Domain Controllers, database servers), User endpoint devices, Application servers",
            "action": [
              "Symbolic Logic: Create and maintain a strict watchlist of parent-child process relationships (e.g., 'winlogon.exe' -> 'lsass.exe') and processes that should never make network connections (e.g., 'calc.exe', 'notepad.exe'). Use Windows Event IDs 4688 and 5156 to alert on any deviation, such as 'notepad.exe' initiating an outbound connection.",
              "Statistical Analysis: For each process name (e.g., 'svchost.exe', 'powershell.exe'), create a statistical baseline of normal network behavior, including common destination ports, data volume, and connection frequency. Use descriptive statistics to flag any connection from these processes to a destination port that falls outside the top 95% of common ports, or a connection frequency that is more than 3 standard deviations above the process's average.",
              "Machine Learning: Use an autoencoder trained on tuples of (process name, parent process name, command line, destination IP, destination port) from a known-good baseline of endpoint activity. Feed live event data into the trained model. Events that the model fails to reconstruct with low error are flagged as anomalous. This can detect a legitimate process like 'svchost.exe' making a novel or unexpected network connection, indicative of injection and tunneling."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]