[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using signed binaries?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.013",
        "name": "Mavinject",
        "evidence": [
          {
            "description": "An instance of mavinject.exe execution where the injected DLL's file hash matches a known-malicious signature, or the target process initiates network communication to an IP address or domain with a reputation score below a defined threshold.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint process creation logs, Network egress points, Threat intelligence feeds",
            "action": "1. (Symbolic) For each mavinject.exe execution (Windows Event ID 4688), extract the target PID and injected DLL path. Retrieve the DLL's hash via endpoint tooling or Zeek files.log and match it against a threat intelligence feed of known-malicious hashes. Alert on any match. 2. (Statistical) From the mavinject.exe command line, extract the target PID. Correlate this PID with network logs (Zeek conn.log) within a 5-minute window post-injection. Calculate the Jaccard similarity between the destination IPs contacted by the injected process and a pre-computed allowlist of typical destinations for that process type. An unusually low similarity score (e.g., < 0.1) indicates anomalous communication. 3. (Machine Learning) Train a logistic regression classifier on enriched network connection data (Zeek conn.log, dns.log) from injected processes. Features should include destination IP/domain reputation, port number, connection duration, and bytes sent/received. Use the model to classify new connections post-injection as benign or malicious."
          },
          {
            "description": "An instance of process creation where the command line contains the string '/INJECTRUNNING' and the associated DLL path resolves to a directory with a low historical prevalence score across the enterprise (e.g., bottom 5th percentile) or is a known temporary location (e.g., C:\\Users\\Public, C:\\Windows\\Temp).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, User profile directories, System temporary folders",
            "action": "1. (Symbolic) Create a SIEM rule to detect process creation events (Windows Event ID 4688) where the ProcessCommandLine contains '/INJECTRUNNING' and the DLL path points to a directory in a watchlist of temporary or suspicious locations (e.g., C:\\Windows\\Temp, %APPDATA%, C:\\Users\\Public). 2. (Statistical) For all processes with '/INJECTRUNNING' in the command line, extract the DLL file path. Calculate the path's directory prevalence across all file paths observed in the environment over the last 90 days. Flag any injection using a DLL from a directory in the bottom 5th percentile of prevalence as highly suspicious. 3. (Machine Learning) Develop a time-series model (e.g., ARIMA) for the daily count of executions that use DLLs from temporary folders. An observation that exceeds the 99% prediction interval indicates a statistically significant anomaly, potentially part of a broader campaign."
          },
          {
            "description": "An instance of mavinject.exe execution where the parent process is a non-system, user-interactive process (e.g., winword.exe, chrome.exe, powershell.exe) and the target process is a critical system process (e.g., lsass.exe, services.exe, svchost.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical application servers, Endpoint process parent-child relationship logs",
            "action": "1. (Symbolic) Create a detection rule that triggers on a Windows Event ID 4688 event where NewProcessName is mavinject.exe, the ParentProcessName is in a set of suspicious parents (winword.exe, excel.exe, outlook.exe, powershell.exe), and the command line specifies a target PID that resolves to a process in a set of sensitive targets (lsass.exe, csrss.exe, winlogon.exe). 2. (Statistical) For every mavinject.exe execution, calculate the rarity of the parent-child-target process triplet based on historical data. A triplet that falls below the 1st percentile of frequency should be flagged. 3. (Machine Learning) Use a graph-based anomaly detection algorithm to model normal parent-child process relationships. An event chain like winword.exe -> mavinject.exe -> lsass.exe would appear as a highly anomalous, high-scoring path in the graph, indicating a deviation from the learned baseline."
          },
          {
            "description": "The first-ever execution of mavinject.exe on a specific host, or a statistically significant increase (e.g., > 3 standard deviations above the 30-day moving average) in the daily execution count of mavinject.exe across the enterprise.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise-wide SIEM logs, Asset management database, Historical process execution logs",
            "action": "1. (Symbolic) Maintain a stateful list of all hosts that have executed mavinject.exe in the past 90 days. Trigger an alert for any mavinject.exe execution (Windows Event ID 4688) on a host not present in this list. 2. (Statistical) Calculate a daily moving average and standard deviation of mavinject.exe execution counts across the enterprise. Generate an alert if the daily count exceeds the moving average by more than 3 standard deviations, indicating a significant spike in activity. 3. (Machine Learning) Apply a time-series decomposition model (e.g., Seasonal-Trend-Loess) to the hourly execution counts of mavinject.exe. A significant spike in the residual component, which represents unexplained variance, can be used to detect anomalous bursts of activity that do not fit normal patterns."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]