[
  {
    "information_requirement": "Is the adversary communicating with command and control infrastructure using non-application layer protocols?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1095",
        "name": "Non-Application Layer Protocol",
        "evidence": [
          {
            "description": "An internal host communicates using a non-application layer protocol (e.g., ICMP, raw UDP/TCP) with an external IP address present on a threat intelligence feed of known C2 servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway Firewall Logs",
            "action": [
              "Symbolic: Continuously join the `id.resp_h` (destination IP) field from Zeek conn.log and icmp.log against a CTI feed of known malicious C2 IP addresses. Alert on any match where the protocol is 'icmp' or 'udp'/'tcp' on a non-standard port.",
              "Statistical: Calculate the frequency of connections from internal hosts to external destinations per protocol. Flag hosts making an unusually high number of ICMP or raw UDP/TCP connections compared to their own baseline and the peer group baseline (e.g., > 3 standard deviations above the mean).",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features such as protocol, destination port, connection duration, and CTI reputation score to classify each flow as 'benign' or 'malicious C2'. Alert on high-probability 'malicious C2' classifications."
            ]
          },
          {
            "description": "ICMP traffic is observed containing specific type/code combinations and payload patterns (e.g., specific byte sequences, payload lengths) that match signatures of known ICMP tunneling tools like icmpsh, pwnat, or Loki.",
            "data_sources": [
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core Network Switches",
            "action": [
              "Symbolic: Deploy and maintain regular expression or byte-sequence rules against the ICMP payload captured in Zeek icmp.log. The rules should target known magic bytes, command delimiters, or structural artifacts of specific C2 tools.",
              "Statistical: For each ICMP flow (source/destination pair), calculate the distribution of ICMP types and codes. Alert on distributions that deviate significantly from the network-wide baseline, such as an unusually high ratio of echo-requests to echo-replies or the presence of rare types like ICMP Router Solicitation.",
              "Machine Learning: Use a sequence analysis model (e.g., LSTM) on the stream of ICMP payload lengths and inter-arrival times for a given flow. Train the model on known benign traffic (e.g., ping) and alert when a sequence of packets is highly improbable under the benign model, suggesting a structured C2 protocol."
            ]
          },
          {
            "description": "ICMP packets or raw UDP/TCP flows contain payloads that are anomalously large or exhibit high entropy, suggesting the encapsulation of C2 data.",
            "data_sources": [
              "Zeek icmp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway",
            "action": [
              "Symbolic: Create a rule to alert on any single ICMP packet with a payload size exceeding a hard threshold (e.g., 1024 bytes), as standard ICMP usage rarely involves large payloads.",
              "Statistical: For all ICMP and raw UDP/TCP traffic, establish a rolling 30-day baseline for payload size and Shannon entropy per source-destination flow. Alert when a flow's average payload size or entropy exceeds the 99th percentile of its historical baseline.",
              "Machine Learning: Implement a clustering algorithm (e.g., DBSCAN) on network flows, using features like protocol, port, average payload size, and average payload entropy. Investigate clusters that form far from the main 'benign' traffic cluster, as these represent groups of anomalous communication that may indicate C2 tunneling."
            ]
          },
          {
            "description": "A process on a host initiates a network connection using ICMP or raw UDP/TCP, where that process is not on an allowlist of applications expected to use these protocols (e.g., ping.exe, tracert.exe).",
            "data_sources": [
              "Windows Event ID 5156",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations and Critical Servers",
            "action": [
              "Symbolic: Correlate Windows Event ID 5156 (Filtering Platform Connection) where Protocol=1 (ICMP) with the associated ProcessID. Alert if the Application Name is not in a predefined allowlist (e.g., `ping.exe`, `tracert.exe`). Further enrich by linking the ProcessID to its parent process via Event ID 4688 to identify suspicious lineage.",
              "Statistical: For each process name on each host, build a baseline of protocols it uses. Alert when a process (e.g., `svchost.exe`) is observed using a protocol (e.g., ICMP) it has never used before. Use frequency analysis to identify the least frequent (rarest) combinations of `process_name` and `protocol` across the enterprise.",
              "Machine Learning: Train a classification model on host event data to predict if a process-network connection pair is malicious. Features should include process name, process path, parent process, command line arguments (from EID 4688), and network protocol/port (from EID 5156). Flag high-probability malicious events for investigation."
            ]
          },
          {
            "description": "Network flows using non-application layer protocols exhibit characteristics of C2 beaconing, such as long durations, periodic traffic patterns, or symmetric data transfer volumes.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments",
            "action": [
              "Symbolic: Monitor `weird.log` for events like `active_connection_without_SYN` or `data_before_established`, which can indicate non-standard connections used by C2 frameworks. Alert on any such event.",
              "Statistical: For each flow in `conn.log` using ICMP or raw UDP/TCP, calculate the ratio of sent bytes to received bytes (`orig_bytes`/`resp_bytes`). Establish a baseline for normal ratios. Alert on flows where the ratio is anomalously close to 1.0, suggesting interactive communication, or where the connection duration is in the top 95th percentile for that protocol.",
              "Machine Learning: Apply time-series analysis to the inter-packet arrival times for non-application layer flows. Use a Fast Fourier Transform (FFT) or autocorrelation to detect periodicity (a strong signal for C2 beaconing). Alert when a flow exhibits a strong, consistent frequency."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]