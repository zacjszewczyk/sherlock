[
  {
    "information_requirement": "Has the adversary established command and control using a non-application layer protocol? (TA0011 - Command and Control)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1095",
        "name": "Non-Application Layer Protocol",
        "evidence": [
          {
            "description": "An internal host initiates outbound communication using ICMP or raw UDP/TCP to an external IP address listed on a threat intelligence feed of known C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Internet Gateway, VPN Concentrators)",
            "action": [
              "Query Zeek conn.log and icmp.log for outbound connections where the protocol is 'icmp', 'udp', or 'tcp'. Join the destination IP address ('id.resp_h') against a threat intelligence feed of known C2 IP addresses. Generate an alert for any match.",
              "For each internal source IP, calculate the daily count of unique external destination IPs contacted via ICMP. Establish a 30-day rolling baseline and standard deviation for this count for each host. Alert when a host's daily count exceeds 3 standard deviations above its baseline, indicating potential scanning or C2 communication.",
              "Train a supervised classification model (e.g., Random Forest) to predict if an external IP is a C2 server. Use features from Zeek logs such as connection duration, bytes sent/received, protocol, and enriched features like IP ASN, geolocation, and threat intelligence scores. Flag connections to IPs classified with high confidence as C2."
            ]
          },
          {
            "description": "ICMP traffic between an internal host and an external destination contains payload patterns, byte sequences, or type/code combinations that match signatures for known ICMP tunneling C2 tools (e.g., icmpsh, Loki).",
            "data_sources": [
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments and Core Switches",
            "action": [
              "Deploy and continuously run signature-based rules (e.g., using Zeek's scripting engine or a SIEM) that inspect the payload of ICMP packets (from icmp.log) for known byte sequences or regular expressions associated with ICMP C2 tools. Generate an alert on any signature match.",
              "For each source-destination IP pair communicating via ICMP, calculate the ratio of ICMP echo-requests to echo-replies over a 1-hour window. Establish a network-wide baseline for this ratio (typically near 1.0 for benign 'ping' activity). Alert on flows where the ratio is highly skewed (e.g., > 10:1 or < 1:10), suggesting one-way data transfer.",
              "Develop an anomaly detection model using a Recurrent Neural Network (RNN) or LSTM on sequences of ICMP packet features (payload length, inter-arrival time, ICMP type/code) for each flow. Train the model on benign ICMP traffic. Alert when a new sequence of ICMP packets has a high reconstruction error, indicating it does not conform to normal patterns."
            ]
          },
          {
            "description": "An outbound network flow using ICMP, or UDP/TCP on a non-standard port, contains an unusually large payload or a payload with high Shannon entropy, indicative of encrypted or packed C2 data.",
            "data_sources": [
              "Zeek icmp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points",
            "action": [
              "Create a rule that triggers an alert for any single outbound ICMP packet with a payload size greater than a defined threshold (e.g., 1024 bytes) or any UDP/TCP flow on a non-standard port with an average packet size exceeding a similar threshold.",
              "For each outbound ICMP and UDP/TCP flow, calculate the Shannon entropy of the first N bytes of the payload. Establish a historical baseline of entropy values for each protocol. Alert when a flow's payload entropy exceeds the 99th percentile of its protocol's baseline, suggesting encrypted or compressed data where it is not expected.",
              "Use a clustering algorithm (e.g., DBSCAN or K-Means) on network flows, using features such as protocol, destination port, total bytes transferred, average payload size, and average payload entropy. Manually investigate clusters identified as outliers or those distant from the large cluster of normal web and application traffic."
            ]
          },
          {
            "description": "A process not typically associated with network diagnostics (e.g., not ping.exe, tracert.exe) initiates an outbound ICMP connection, as observed in host-level logs.",
            "data_sources": [
              "Windows Event ID 5156",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations and Critical Servers",
            "action": [
              "Correlate Windows Event ID 5156 (Filtering Platform Connection) events where Protocol is '1' (ICMP) with the originating 'Application Name'. Generate an alert if the application name is not on a pre-defined allowlist of network utilities. Enrich the alert with the process command line and parent process from a correlated Event ID 4688.",
              "Across all endpoints, calculate the enterprise-wide prevalence of each process making ICMP connections. Create a stacked ranking of process-protocol pairs by rarity. Alert on the least frequent combinations (e.g., bottom 1%), such as 'powershell.exe' or 'svchost.exe' initiating ICMP traffic, which are highly suspicious.",
              "Train a classification model (e.g., Gradient Boosting) to determine if a process creating a network connection is malicious. Features should include process metadata (name, path, parent process name from EID 4688), network data (protocol, port from EID 5156), and behavioral features (e.g., has the parent process recently written this executable to disk?). Alert on events classified as malicious with high confidence."
            ]
          },
          {
            "description": "An outbound ICMP or raw UDP/TCP flow exhibits beaconing behavior, characterized by highly periodic connection intervals, consistent packet sizes, or unusually long connection durations.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points and Internal Network Segments",
            "action": [
              "Search Zeek weird.log for notices like 'active_connection_without_SYN' or 'data_before_established' associated with UDP or ICMP traffic. These can indicate custom C2 protocols that do not follow standard TCP handshakes. Alert on any such notice.",
              "For each source-destination pair using ICMP or UDP, aggregate connection timestamps over a 24-hour period. Calculate the standard deviation of the time delta between consecutive connections. A very low standard deviation (e.g., < 1 second) indicates highly regular, machine-generated beaconing. Alert on flows with a standard deviation below a defined threshold.",
              "Apply a time-series decomposition or Fast Fourier Transform (FFT) algorithm to the timeline of connection events (or bytes transferred) for each source-destination flow. The model should identify dominant frequencies in the signal. Alert when a flow exhibits a strong, consistent periodicity that is not associated with a known legitimate application protocol."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]