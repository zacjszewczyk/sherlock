[
  {
    "information_requirement": "Is the adversary conducting reconnaissance using spearphishing attachments?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1598.002",
        "name": "Spearphishing Attachment",
        "evidence": [
          {
            "description": "An inbound email attachment's file hash matches a known malicious signature, or the email's source IP address or domain is present on a threat intelligence blacklist.",
            "data_sources": [
              "Zeek files.log",
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Threat Intelligence Platform",
            "action": [
              "Symbolic: For each file transferred via SMTP (Zeek files.log), compute its hash (MD5, SHA1, SHA256). Query a threat intelligence feed or internal IOC database for matches. Separately, extract sender IP (`id.orig_h`) and MAIL FROM domain from Zeek smtp.log and query against known malicious IP/domain blacklists. Generate a high-severity alert upon any match.",
              "Statistical: Analyze Zeek smtp.log to establish a baseline of sender domains. Calculate the frequency of each sender domain over a 30-day rolling window. Identify domains in the bottom 5th percentile of frequency (rare senders) that are also newly registered (domain age < 30 days, via WHOIS enrichment). Flag emails from these statistically rare and new domains that also contain attachments for manual review.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) on features extracted from Zeek smtp.log and files.log. Features should include: sender IP reputation score, sender domain age, SPF/DKIM/DMARC results, attachment file type, attachment file size, and boolean flags for presence on IOC lists. The model will predict the probability of an email being part of a malicious campaign. Emails exceeding a predefined probability threshold (e.g., > 0.85) are flagged as suspicious."
            ]
          },
          {
            "description": "A document-handling application (e.g., WINWORD.EXE, ACROBAT.EXE) spawns a child process that is a command-line interpreter or a known reconnaissance tool.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers (e.g., Citrix)",
            "action": [
              "Symbolic: From Windows Event ID 4688 logs, create a rule to detect when a ParentProcessName (e.g., OUTLOOK.EXE, WINWORD.EXE, EXCEL.EXE, ACROBAT.EXE) spawns a NewProcessName that matches a list of suspicious utilities (e.g., powershell.exe, cmd.exe, wscript.exe, cscript.exe, whoami.exe, systeminfo.exe, ipconfig.exe, net.exe). Alert on any direct match.",
              "Statistical: For each parent-child process relationship captured in Windows Event ID 4688, calculate the rarity of the relationship across the enterprise over a 90-day baseline. Also, analyze the command-line arguments for entropy; high-entropy command lines (often seen with obfuscated scripts) for processes spawned by document viewers are anomalous. Flag parent-child pairs that are in the bottom 1st percentile of occurrence frequency and have command-line entropy scores > 3 standard deviations above the mean for that child process.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on process creation events. Feature vectors should include normalized parent process name, normalized child process name, and features extracted from the command line (length, special character count, presence of keywords like 'http', 'download'). Clusters of one or a few points (outliers) often represent anomalous process execution chains not seen in normal operations. Investigate outliers where the parent process is a document handler."
            ]
          },
          {
            "description": "A cluster of emails from a single, low-reputation or newly observed external domain is sent to a small, specific set of internal recipients, and the emails share similar attachment characteristics (type, name pattern, size).",
            "data_sources": [
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Directory Services, DNS Resolvers",
            "action": [
              "Symbolic: From Zeek smtp.log, create a rule that triggers when an external sender's domain fails SPF/DKIM/DMARC checks and the email contains an attachment with an executable or script file type (e.g., .js, .exe, .ps1). This provides a basic, rule-based filter for potentially spoofed or malicious emails with risky attachments.",
              "Statistical: Analyze Zeek smtp.log to identify sender domains not present in a 60-day historical baseline. For these new domains, calculate the Shannon entropy of the recipient list for each email burst. A low entropy score indicates a highly targeted, non-broadcast email. If a new domain sends low-entropy emails with attachments to a small number of recipients (e.g., < 10), and the recipients share a common attribute (e.g., job title from HR data), flag the campaign as highly suspicious.",
              "Machine Learning: Employ a time-series anomaly detection model (e.g., ARIMA or LSTM) on email metadata. For each sender-recipient pairing, model the normal volume and timing of email flow. A sudden, off-hours email from an infrequent external sender containing an attachment would register as a significant anomaly in the time-series forecast, triggering an alert. This can catch spearphishing attempts that deviate from established communication patterns."
            ]
          },
          {
            "description": "A process, spawned by a document opened from an email, initiates an outbound network connection to a destination IP or domain with a low reputation score or that is statistically rare for the organization.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress Points, Internal DNS Resolvers",
            "action": [
              "Symbolic: Correlate Windows Event ID 4688 (process creation) with Zeek conn.log (network connections) on process ID and timestamp. Create a rule to detect when a process spawned by a document viewer makes an outbound connection to an IP address or domain on a known C2 server blocklist. Enrich Zeek dns.log requests with threat intelligence on the resolved IPs. Alert on any match.",
              "Statistical: Establish a baseline of all outbound destination FQDNs queried in Zeek dns.log. Identify domains that fall into the bottom 1st percentile of request frequency (i.e., 'long-tail' analysis). Correlate these rare domain lookups with subsequent connections in Zeek conn.log that originate from a process recently spawned by a document viewer (from Windows Event ID 4688). A process making a connection to a domain seen only once in the last 90 days is a strong statistical anomaly.",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) model trained on 'normal' network connection tuples from the enterprise. A tuple can be defined as {ProcessName, DestinationIP, DestinationPort, Protocol, BytesOut}. After a document-related process is created, feed its subsequent network connection tuples to the trained model. If the model classifies a connection as an outlier, it indicates a deviation from learned normal network behavior for that type of process, suggesting a potential beacon."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]