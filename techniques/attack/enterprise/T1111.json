[
  {
    "information_requirement": "Is the adversary attempting to intercept multi-factor authentication mechanisms?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1111",
        "name": "Multi-Factor Authentication Interception",
        "evidence": [
          {
            "description": "Observed DNS queries, HTTP host headers, or direct TCP/IP connections to domains or IP addresses present on a threat intelligence feed of known Adversary-in-the-Middle (AiTM) phishing infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors and DNS resolvers",
            "action": [
              "Symbolic: Correlate Zeek dns.log queries, http.log host headers, and conn.log destination IPs against a high-confidence, frequently updated threat intelligence feed of domains and IPs associated with AiTM phishing frameworks (e.g., Evilginx2, Modlishka). Generate a high-severity alert on any match.",
              "Statistical: For domains not on a threat intelligence feed, calculate the entropy and character frequency of requested subdomains in Zeek dns.log. Flag domains with high entropy or character distributions that deviate significantly (e.g., > 3 standard deviations) from the baseline of benign traffic, as this can indicate algorithmically generated phishing subdomains.",
              "Machine Learning: Utilize a pre-trained classification model (e.g., random forest) that uses features from Zeek logs (SSL certificate details, DNS record age, IP ASN) to predict the likelihood of a domain being an AiTM phishing site. Escalate domains with a prediction score above a calibrated threshold (e.g., 0.90) for analyst review."
            ]
          },
          {
            "description": "Observed HTTP or TLS traffic containing User-Agent strings, HTTP header order, or TLS Client Hello fingerprints (JA3/JA3S) that match known signatures of AiTM phishing toolkits.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors and web proxies",
            "action": [
              "Symbolic: Create and maintain a ruleset to match specific JA3/JA3S hashes, User-Agent strings, and HTTP header combinations known to be unique to AiTM proxies like Evilginx2 against Zeek ssl.log and http.log records. Alert on any exact match.",
              "Statistical: Profile the frequency of all JA3 hashes and User-Agent strings across the enterprise. Identify JA3 hashes and User-Agents that are rare (e.g., seen on fewer than 0.1% of endpoints) and appear in conjunction with logins to corporate SSO pages. A rare fingerprint accessing a sensitive resource is a statistical anomaly worth investigating.",
              "Machine Learning: Train a time-series anomaly detection model (e.g., LSTM) on the sequence of HTTP headers for each session directed at authentication portals. The model learns the normal order and presence of headers. Flag sessions that exhibit a sequence of headers with a high reconstruction error, which may indicate manipulation by a proxy."
            ]
          },
          {
            "description": "Process creation events where the process name, command-line arguments, or parent-child process relationship matches patterns associated with credential theft, keylogging, or browser data exfiltration tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and remote access servers",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 for process names and command-line arguments matching known keyloggers or credential dumping tools (e.g., 'procdump.exe -ma lsass.exe'). Also, create rules for suspicious parent-child relationships, such as 'outlook.exe' spawning 'powershell.exe'.",
              "Statistical: Calculate the entropy of command-line arguments for all processes using Windows Event ID 4688. Flag processes with unusually high entropy in their arguments (e.g., top 99th percentile), as this may indicate obfuscated commands. Correlate high-entropy commands with parent processes like browsers or office applications.",
              "Machine Learning: Use a classification model to score process execution events based on features like process name, parent process, command-line length and entropy, and user context. Train the model on known malicious and benign process activity to identify novel or obfuscated malware that doesn't match a specific signature but exhibits malicious characteristics."
            ]
          },
          {
            "description": "A high volume of failed MFA validation attempts for a single user account within a compressed timeframe, immediately preceding a successful login from a similar source IP.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers and Active Directory Federation Services (ADFS) servers",
            "action": [
              "Symbolic: Create a rule that triggers when a single user account generates more than 5 failed login events (Windows Event ID 4625 with an MFA-related failure code) within a 2-minute window, followed by a successful login (Windows Event ID 4624) from the same source IP within the next 5 minutes.",
              "Statistical: For each user, establish a baseline of failed login counts over rolling 5-minute intervals. Use percentile-based alerting to flag any time window where the failed login count for a user exceeds their 99th percentile, indicating a statistical anomaly consistent with MFA fatigue attempts.",
              "Machine Learning: Employ a time-series anomaly detection model on the stream of authentication events (success/failure) for each user. Flag sequences of events that have a low probability under the learned model, such as a dense cluster of failures (Event ID 4625) followed by a success (Event ID 4624), as potential MFA prompt bombing."
            ]
          },
          {
            "description": "A successful login event followed within the same session by high-risk activities, such as registering a new MFA device or creating mail forwarding rules, where the session originates from a source that is anomalous for the user.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Active Directory security logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, user workstations, and cloud application log repositories",
            "action": [
              "Symbolic: Alert when a successful login (Windows Event ID 4624) is followed within 10 minutes by a sensitive Active Directory event for the same user, such as a group membership change (Event ID 4732) to a privileged group or modification of user account properties (Event ID 4738).",
              "Statistical: For each user, baseline the frequency and type of post-authentication activities. Calculate the probability of a user performing a sensitive action (e.g., adding an MFA device) within the first 30 minutes of a session. Flag sessions where this action occurs if the session's source IP geolocation or ASN (from Zeek conn.log) is rare (e.g., never seen before for that user).",
              "Machine Learning: Use a session-based anomaly detection model that profiles user behavior across multiple data sources. After a successful login, the model scores subsequent activities (file access, network connections, admin actions) against the user's historical profile. A session that rapidly accumulates a high anomaly score after login indicates a potential session hijack."
            ]
          },
          {
            "description": "Successful logins for the same user account from two or more geographically impossible locations within a short time frame, suggesting a stolen session cookie or intercepted MFA token is being used concurrently.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Domain Controllers, and cloud Identity Provider log repositories",
            "action": [
              "Symbolic: For each successful login (Windows Event ID 4624), retrieve the source IP from Zeek conn.log. Compare the timestamp and geolocation of the current login with the previous login for the same user. If the calculated speed required to travel between the two locations exceeds 600 mph, generate an 'Impossible Travel' alert.",
              "Statistical: For each user, create a statistical profile of their common login locations (cities, countries, ASNs). Calculate the Mahalanobis distance of a new login's location from the centroid of the user's typical location cluster. A high distance score indicates a statistically improbable login, reducing false positives from legitimate VPN use.",
              "Machine Learning: Train a clustering algorithm (e.g., DBSCAN) on the historical login coordinates (latitude/longitude) for each user to identify their normal geographic areas of operation. A new login that does not fall into any existing cluster is flagged as an anomaly, adapting better to users with multiple, distinct work locations."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]