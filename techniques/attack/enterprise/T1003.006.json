[
  {
    "information_requirement": "Has the adversary accessed credentials from domain controllers using replication abuse?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1003.006",
        "name": "DCSync",
        "evidence": [
          {
            "description": "A directory services replication event (Windows Event ID 4662 with object type `DS-Replication-Get-Changes`) is logged on a Domain Controller, where the `Subject/Security ID` or source IP address in associated network logs does not belong to a known, authorized Domain Controller account or IP address.",
            "data_sources": [
              "Windows Event ID 4662",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: Create and maintain an explicit allow-list of authorized Domain Controller IP addresses and machine account SIDs. Create a detection rule to alert on any Windows Event ID 4662 with the `DS-Replication-Get-Changes` GUID (`1131f6aa-9c07-11d1-f79f-00c04fc2dcd2`) where the source IP (from correlated network logs like Zeek `conn.log`) or the `Subject/Security ID` is not on the allow-list.",
              "Statistical: For each user and computer account, establish a baseline of the frequency of directory replication requests. Monitor for accounts that suddenly begin making replication requests when they have never done so before. Alert on any non-DC machine account or standard user account that generates one or more `DS-Replication-Get-Changes` events, as this count is anomalous (expected value is zero).",
              "Machine Learning: Use an anomaly detection model (e.g., Isolation Forest) to build a profile of normal replication behavior. Features should include source account, source IP, time of day, day of week, and destination DC. The model can then identify replication requests that deviate significantly from established patterns, even if the source is another (potentially compromised) DC."
            ]
          },
          {
            "description": "A network connection from a non-Domain Controller IP to a Domain Controller over the RPC endpoint mapper (TCP/135) or its dynamic port range, exhibiting a total data transfer volume that is more than three standard deviations above the established baseline for legitimate inter-DC replication traffic.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dcerpc.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensor monitoring traffic to/from Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule to flag all network connections (`Zeek conn.log`) originating from non-Domain Controller IP addresses to Domain Controllers over TCP port 135 or within the RPC dynamic port range (49152-65535) that are associated with the `drsapi` RPC interface in `dcerpc.log`.",
              "Statistical: First, establish a baseline for normal inter-DC replication traffic by analyzing `Zeek conn.log` data for connections between known DC IPs. Calculate the mean and standard deviation for `orig_bytes` and `resp_bytes`. Then, monitor connections from non-DC IPs to DCs on RPC ports and alert if the total bytes transferred (`orig_bytes + resp_bytes`) exceeds the baseline mean by more than 3 standard deviations. This identifies unusually large data transfers consistent with a full directory sync.",
              "Machine Learning: Apply time-series forecasting (e.g., ARIMA) to model the expected network traffic volume between specific non-DCs and DCs (e.g., for management tools). An alert is generated when the observed traffic volume significantly exceeds the forecasted volume with its confidence interval. This can detect anomalous data transfers that might not be large enough to trigger a simple statistical threshold but are abnormal for that specific source-destination pair."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) on a non-Domain Controller system where the command line includes strings specific to DCSync execution (e.g., `lsadump::dcsync`, `secretsdump.py -just-dc-user`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All workstations and member servers within the Active Directory environment",
            "action": [
              "Symbolic: Implement a detection rule that searches process creation logs (Windows Event ID 4688) for command lines matching regular expressions for known DCSync tools, such as `/(lsadump.*::.*dcsync|secretsdump\\.py.*-just-dc)/i`. An alert on a non-DC system indicates a potential staging point for a credential theft attack.",
              "Statistical: Calculate the entropy of command-line arguments for common processes like `powershell.exe` or `rundll32.exe`. A DCSync attack may use obfuscated or encoded commands, resulting in unusually high entropy. Establish a baseline entropy score for command lines on your systems and alert on processes that exceed the 95th percentile.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression, Random Forest) on a labeled dataset of benign and malicious command lines. Use features like command length, presence of special characters, argument count, and n-grams to classify new process creation events in real-time as benign or suspicious of DCSync activity."
            ]
          },
          {
            "description": "A notice generated by a network monitoring tool indicating a `DCSync::Replication_From_Non_DC` or `Mimikatz::DCSync_Transaction` event, containing the source IP, destination DC, and timestamp.",
            "data_sources": [
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensor monitoring traffic to/from Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule to trigger a high-severity alert whenever a Zeek `notice.log` entry with `note == DCSync::Replication_From_Non_DC` or a similar IDS/IPS signature for DCSync is generated. This is a high-fidelity indicator of a DCSync attempt.",
              "Statistical: Analyze the frequency of DCSync-related notices over time. A sudden spike in these notices, even if they are being blocked, could indicate a persistent adversary or a misconfigured tool attempting reconnaissance. Calculate a moving average and standard deviation of notice counts and alert if the current count exceeds 3 standard deviations from the average.",
              "Machine Learning: Use a classification model trained on historical `notice.log` data to distinguish between true positive DCSync alerts and potential false positives. Features could include the source IP's reputation, the time of day, and whether the source has been seen in other suspicious network activity. This helps prioritize alerts for the SOC."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]