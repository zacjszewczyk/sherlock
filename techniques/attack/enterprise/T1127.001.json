[
  {
    "information_requirement": "Is the adversary executing malicious code via the MSBuild utility to evade defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1127.001",
        "name": "MSBuild",
        "evidence": [
          {
            "description": "MSBuild.exe process execution where the associated project file hash matches a known malicious hash, or where the process initiates a network connection to a destination IP/domain on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations, CI/CD build servers, Internet gateway/proxy servers",
            "action": [
              "Symbolic: From Windows Event ID 4688, extract file paths of project files (.proj, .xml, .csproj) passed to MSBuild.exe. If file content is accessible (e.g., via Zeek files.log), compute its hash and match against a threat intelligence feed of known malicious file hashes. Correlate the process execution timestamp and host with network connections in Zeek conn.log and match destination IPs/domains against a C2 threat intelligence feed. Alert on any match.",
              "Statistical: For all network connections made by MSBuild.exe, calculate the rarity of the destination IP, domain, and ASN across the enterprise. A connection to a destination with a percentile rank > 99th (i.e., seen very infrequently) should be flagged for review.",
              "Machine Learning: Use a trained classification model (e.g., Random Forest) with features such as destination port, data volume (orig_bytes, resp_bytes), connection duration, and destination IP reputation to classify each MSBuild.exe network connection as benign (e.g., package restore) or suspicious (e.g., C2). Flag connections classified as suspicious with high confidence."
            ]
          },
          {
            "description": "Execution of MSBuild.exe with a command line containing a file path in a non-standard directory (e.g., %TEMP%, %APPDATA%) or referencing a file with an atypical extension (e.g., .txt, .png).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain Controllers",
            "action": [
              "Symbolic: Parse command lines from Windows Event ID 4688 for MSBuild.exe executions. Alert if the project file path matches a regex for temporary or user-writable directories (e.g., C:\\\\Users\\\\.*\\\\AppData\\\\, C:\\\\Windows\\\\Temp\\\\, C:\\\\Users\\\\Public\\\\) or if the file extension is not in an approved list (e.g., .csproj, .vbproj, .sln).",
              "Statistical: For all MSBuild.exe executions, calculate the entropy of the command-line string. Establish a baseline entropy score for legitimate build processes. A command-line with an entropy score exceeding 2 standard deviations from the mean may indicate obfuscation or an inline task and should be investigated.",
              "Machine Learning: Use a one-class SVM or isolation forest model trained on legitimate MSBuild.exe command-line features (e.g., argument count, path depth, presence of specific flags) to detect anomalous command-line structures that deviate significantly from normal build operations."
            ]
          },
          {
            "description": "MSBuild.exe is executed by a parent process other than a typical developer tool (e.g., devenv.exe, explorer.exe) or system process, such as a Microsoft Office application or a script interpreter (powershell.exe, cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Microsoft Office 365/Exchange servers",
            "action": [
              "Symbolic: From Windows Event ID 4688, create a list of approved parent processes for MSBuild.exe (e.g., devenv.exe, explorer.exe, cmd.exe). Alert on any execution of MSBuild.exe where the parent process is not on this allowlist, particularly for parents like WINWORD.EXE, OUTLOOK.EXE, or wscript.exe.",
              "Statistical: Generate a frequency table of all parent-child process relationships involving MSBuild.exe over a 30-day period. Flag any relationship that falls below a rarity threshold (e.g., occurs less than 5 times or is in the bottom 5th percentile of frequency) for analyst review.",
              "Machine Learning: Apply a time-series anomaly detection model to the sequence of processes executed on a host. A sudden appearance of an MSBuild.exe execution within a process chain where it has not been seen historically (e.g., following a document open event) would be flagged as a temporal anomaly."
            ]
          },
          {
            "description": "An MSBuild.exe process initiates an outbound network connection exhibiting behavioral indicators of C2, such as periodic 'beaconing' at regular intervals, high-entropy DNS queries, or data transfer volumes inconsistent with legitimate package restoration.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers, DNS servers, User workstations, CI/CD build servers",
            "action": [
              "Symbolic: Filter Zeek dns.log for queries originating from hosts where MSBuild.exe was recently executed (via correlation with Windows Event ID 4688). Scan for DNS queries for domains with known malicious patterns (e.g., dynamic DNS providers, non-alphanumeric characters) or unusually long domain names.",
              "Statistical: For network connections associated with MSBuild.exe processes, group connections by source/destination pair and calculate the time delta between consecutive connections. Analyze the standard deviation of these time deltas; a very low standard deviation indicates a regular interval characteristic of C2 beaconing. Separately, calculate the entropy of the 'query' field in Zeek dns.log; a high entropy score (>3.5) can indicate DGA activity.",
              "Machine Learning: Use time-series analysis (e.g., ARIMA or LSTM models) on connection metadata (bytes sent, connection frequency) for each host's MSBuild.exe activity. Flag deviations from the forecasted model, which could represent the start of C2 beaconing or a data exfiltration event."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]