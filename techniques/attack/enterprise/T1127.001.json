[
  {
    "information_requirement": "Is the adversary executing malicious code via the MSBuild utility to evade defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1127.001",
        "name": "MSBuild",
        "evidence": [
          {
            "description": "An MSBuild.exe process execution is observed where either the project file's hash matches an entry on a threat intelligence feed, or the process initiates an outbound network connection to a destination IP address or domain on a known-malicious list.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations, CI/CD build servers, Internet gateway, Egress points",
            "action": [
              "Join Windows Event ID 4688 and Zeek conn.log on source IP and timestamp. For each MSBuild.exe process, extract the project file path from the command line. If the file content is available (e.g., via Zeek files.log), compute its SHA256 hash and match against a threat intelligence feed of malicious file hashes. Concurrently, match the destination IP address from the correlated Zeek conn.log entry against a C2 threat intelligence feed. Alert on any match.",
              "For all network connections made by MSBuild.exe, calculate the rarity of the destination IP, domain, and ASN across the enterprise over the last 30 days. A connection to a destination with a percentile rank greater than the 99th percentile (i.e., seen very infrequently across all enterprise traffic) should be flagged for review.",
              "Use a trained classification model (e.g., Random Forest, Gradient Boosting) with features including destination port, data volume (orig_bytes, resp_bytes), connection duration from Zeek conn.log, and destination IP reputation to classify each MSBuild.exe network connection as benign (e.g., package restore from nuget.org) or suspicious (e.g., potential C2). Flag connections classified as suspicious with high confidence."
            ]
          },
          {
            "description": "An MSBuild.exe process is observed with a command line argument referencing a project file that is either located in a directory outside of standard development paths (e.g., %APPDATA%, %TEMP%) or has an extension not typically associated with MSBuild projects (e.g., .txt, .jpg).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain Controllers, All Windows endpoints",
            "action": [
              "From Windows Event ID 4688, parse command lines for MSBuild.exe. Alert if the project file path matches a regex for non-standard locations, such as '(?i)C:\\\\(Users\\\\.*\\\\AppData|Windows\\\\Temp|Users\\\\Public)'. Also, alert if the file extension is not within an allowlist of project types (e.g., .csproj, .vbproj, .sln, .proj, .xml).",
              "For each MSBuild.exe execution, calculate the Shannon entropy of its command-line string from Windows Event ID 4688. Establish a baseline distribution of entropy scores from known-good build processes on developer workstations and build servers. Flag command lines with entropy scores exceeding the 95th percentile of the baseline as potentially obfuscated or containing inline tasks.",
              "Train an anomaly detection model, such as an Isolation Forest, on features extracted from legitimate MSBuild.exe command lines (e.g., argument count, path depth, character distribution, presence of specific flags). Apply the model to new executions and flag any instance identified as an outlier, indicating a deviation from established build patterns."
            ]
          },
          {
            "description": "An MSBuild.exe process is spawned by a parent process not associated with software development or system administration activities, such as a Microsoft Office application (WINWORD.EXE), email client (OUTLOOK.EXE), or scripting interpreter (wscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Microsoft Office 365/Exchange servers, Application servers",
            "action": [
              "From Windows Event ID 4688, identify the parent process for each MSBuild.exe execution. Alert if the parent process name is not on a pre-defined allowlist of legitimate initiators (e.g., 'devenv.exe', 'explorer.exe', 'cmd.exe', 'powershell.exe', 'jetbrains-rider.exe'). Pay special attention to alerts where the parent is 'WINWORD.EXE', 'EXCEL.EXE', 'OUTLOOK.EXE', 'wscript.exe', or 'cscript.exe'.",
              "Over a 30-day rolling window, generate a frequency distribution of all parent-child process pairs involving MSBuild.exe. Flag any pair that falls in the bottom 5th percentile of frequency for review, as this indicates a rare and potentially unauthorized execution chain.",
              "For each host, model the sequence of process executions as a temporal graph or time series. Use a sequence-based anomaly detection model (e.g., LSTM autoencoder) to learn normal process execution chains. Flag any sequence where MSBuild.exe appears in an anomalous context (e.g., spawned by an unusual parent) as a deviation from the learned temporal baseline."
            ]
          },
          {
            "description": "A network connection originating from an MSBuild.exe process exhibits Command and Control (C2) characteristics, including connections with regular, repeating time intervals (beaconing), connections to domains generated by an algorithm (DGA), or unusual data transfer patterns.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, DNS servers, Proxy servers, User workstations, CI/CD build servers",
            "action": [
              "Correlate Windows Event ID 4688 process creation events for MSBuild.exe with Zeek dns.log data using the source IP and a small time window. From the correlated dns.log entries, apply a regex to the 'query' field to detect patterns associated with DGA, such as '^[a-z0-9]{20,}\\.' (long random string) or domains from known dynamic DNS providers. Alert on matches.",
              "For connections linked to MSBuild.exe, group by source/destination IP pair and calculate the time deltas between consecutive connections in Zeek conn.log. A low standard deviation in these deltas (e.g., < 1 second for a 60-second beacon) indicates periodic C2 beaconing. Separately, calculate the Shannon entropy of the domain name in the 'query' field of Zeek dns.log; a score above 3.5 is a strong indicator of DGA and should be alerted.",
              "For each source IP, build a multivariate time-series model (e.g., ARIMA, Prophet) of network traffic features (e.g., 'orig_bytes', 'resp_bytes', connection count, duration) associated with MSBuild.exe. Use the model to forecast expected behavior and flag significant deviations between the observed and forecasted values, which could indicate data exfiltration or the initiation of a C2 channel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]