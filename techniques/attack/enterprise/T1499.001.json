[
  {
    "information_requirement": "Is the adversary attempting to impact system availability or functionality via OS exhaustion? (PIR)",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1499.001",
        "name": "OS Exhaustion Flood",
        "evidence": [
          {
            "description": "A sustained rate of SYN or ACK packets, exceeding a defined threshold (e.g., 1000 packets per second), originating from IP addresses or subnets present on a threat intelligence feed for DoS activity or botnets.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek tcp.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Perimeter Firewalls, Core Routers",
            "action": "1. (Symbolic) Ingest a CTI feed of known DoS/botnet IPs into a watch list. Trigger an alert when a source IP from this list is observed in Zeek conn.log or tcp.log sending traffic to a critical asset. 2. (Statistical) For each destination server, calculate a 5-minute rolling average and standard deviation of inbound SYN/ACK packets from all sources. Alert when the packet count from a single source IP exceeds 3 standard deviations above the average for more than 1 minute. 3. (ML) Train a time series anomaly detection model (e.g., an LSTM autoencoder) on historical Zeek conn.log data, using features like packet count, byte count, and protocol. An alert is generated when the model's reconstruction error for live traffic exceeds a dynamically set threshold, indicating a deviation from normal traffic patterns, and the anomalous source IP is cross-referenced with CTI feeds."
          },
          {
            "description": "A high volume of SYN or ACK packets exhibiting low-entropy source ports (e.g., sequential or clustered port numbers), fixed TTL values, or consistent, non-standard IP fragmentation patterns associated with known DoS attack tools.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek tcp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Load Balancers, Targeted Web Servers",
            "action": "1. (Symbolic) Maintain a signature library of known DoS tool characteristics (e.g., specific TTL values, fixed TCP window sizes, unusual IP options). Scan high-volume inbound traffic flows identified in Zeek logs for matches against this signature library. 2. (Statistical) For each high-volume source IP, calculate the Shannon entropy of the source ports (`id.orig_p` in Zeek conn.log) over a 1-minute window. Alert if the entropy drops below a baseline threshold (e.g., < 2.0), indicating non-random port selection. 3. (ML) Use an unsupervised clustering algorithm (e.g., DBSCAN) on TCP session features from Zeek logs (source port, TTL, window size, packet inter-arrival time). Identify clusters that deviate from the main 'benign' cluster and flag them as suspicious, potentially representing coordinated attack traffic from a specific tool."
          },
          {
            "description": "A sustained, high ratio of SYN packets sent to a specific destination IP/port compared to the number of fully established TCP connections (SYN-ACK, ACK), resulting in a measurable increase in half-open connections (Zeek `conn_state` 'S0').",
            "data_sources": [
              "Zeek conn.log",
              "Zeek tcp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Application Servers, Authentication Servers, Database Servers",
            "action": "1. (Symbolic) Implement a rule that triggers when the count of connections in state 'S0' (SYN sent, no reply) in Zeek conn.log for a single destination IP exceeds a hard limit (e.g., >10,000 within 1 minute). 2. (Statistical) For each critical server, calculate the ratio of 'S0' connections to 'SF' (established) connections over a 1-minute interval. Establish a baseline for this ratio. Alert when the live ratio exceeds the 99th percentile of the historical baseline for a sustained period (e.g., > 3 consecutive minutes). 3. (ML) Apply a change point detection algorithm (e.g., Bayesian Change Point Detection) to the time series of 'S0' connection counts for critical assets. An alert is triggered when a statistically significant and abrupt increase (a change point) is detected, indicating the start of a SYN flood."
          },
          {
            "description": "A sustained, high volume of ACK packets observed in network traffic (Zeek tcp.log) that do not correspond to any known active connection in the connection state table (e.g., no matching `uid` in Zeek conn.log or the connection is in a terminated state).",
            "data_sources": [
              "Zeek tcp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Infrastructure Servers, Stateful Firewalls, VPN Concentrators",
            "action": "1. (Symbolic) Create a rule to identify ACK packets in Zeek tcp.log where the associated connection `uid` does not exist in the recent Zeek conn.log table or corresponds to a connection in a closed state ('RSTO', 'RSTR', 'SH', 'SHR'). Alert if a single source IP generates more than a threshold of such packets (e.g., >1,000 per second). 2. (Statistical) For each destination IP, baseline the rate of out-of-state ACK packets. Alert when the rate from a single source exceeds a dynamic threshold, such as 3 standard deviations above the mean rate for that destination. 3. (ML) Train a classifier (e.g., Random Forest) on labeled traffic captures, using features like packet size, inter-arrival time, and connection state. Use the trained model to classify incoming streams of ACK packets in real-time as either 'benign' (part of a valid session) or 'malicious' (part of an ACK flood)."
          },
          {
            "description": "The appearance of specific Windows Event IDs on a target host, such as 4227 (TCP connection limit reached) or 2019/2020 (system pool allocation failure), that directly indicate OS-level resource exhaustion, temporally correlated with a network-level flood.",
            "data_sources": [
              "Windows Event ID 4227",
              "Windows Event ID 2019",
              "Windows Event ID 2020",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Windows Server Fleet",
            "action": "1. (Symbolic) Create a high-severity alert that triggers immediately upon the detection of Windows Event ID 4227, 2019, or 2020 on any monitored server. 2. (Statistical) Upon a symbolic alert, automatically query network data (Zeek conn.log) for the 5 minutes preceding the event. If the total volume of SYN packets or out-of-state ACK packets to that host in the preceding period is more than 3 standard deviations above the host's daily average, elevate the alert severity. 3. (ML) Create a composite event by correlating host and network alerts. Use a simple Bayesian network to calculate the probability of an OS Exhaustion Attack given the evidence of both a network flood alert (from other detections) and a host-level exhaustion event (Event ID 4227) occurring within a 5-minute window. A high posterior probability (e.g., > 0.9) confirms the attack."
          },
          {
            "description": "A statistically significant decrease in the rate of successfully completed application transactions (e.g., HTTP 2xx status codes, successful DNS responses) or established TCP connections (Zeek `conn_state` 'SF') for a critical service, occurring concurrently with a high-volume flood event.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "API Gateways, Customer-facing Web Portals, Internal DNS Resolvers",
            "action": "1. (Symbolic) Define a rule that alerts if the count of successful connections ('SF' state in Zeek conn.log) or successful transactions (HTTP 200s in Zeek http.log) to a critical service drops by more than 75% compared to the previous 1-hour average. 2. (Statistical) For each critical service, establish a baseline of the success rate (e.g., ratio of HTTP 2xx codes to all HTTP codes). Alert when this rate drops below the 1st percentile of its historical distribution, and simultaneously, the inbound packet rate exceeds its 99th percentile. 3. (ML) Use a regression model (e.g., Linear Regression) to model the relationship between inbound traffic volume and the rate of successful application transactions. An alert is triggered when the model predicts a service degradation based on a surge in traffic, and the actual observed success rate drops in line with the prediction, confirming the impact of the flood."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]