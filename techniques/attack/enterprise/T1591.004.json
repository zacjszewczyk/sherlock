[
  {
    "information_requirement": "Is the adversary gathering information about organizational roles via external reconnaissance?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1591.004",
        "name": "Identify Roles",
        "evidence": [
          {
            "description": "An inbound connection attempt from an external IP address that is present on a threat intelligence feed listing IPs associated with reconnaissance activity.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, Cloud VPC Flow Logs, VPN Concentrators",
            "action": [
              "Symbolic: Correlate the source IP addresses from all inbound Zeek conn.log entries against a high-confidence, frequently updated cyber threat intelligence (CTI) feed of IPs known for scanning or hosting reconnaissance tools. Generate an alert for any match to investigate the scope and targets of the activity.",
              "Statistical: For each external source IP, calculate the ratio of failed connection states (e.g., REJ, RSTO, RSTR) to successful states (e.g., SF) within a 1-hour window. Flag any IP address whose failure ratio is in the top 99th percentile for all external traffic, as this is indicative of network scanning.",
              "Machine Learning: Develop a classification model (e.g., Logistic Regression, Random Forest) trained on labeled historical data where features are derived from connection logs (e.g., connection count, distinct ports contacted, connection state distribution, source country). Use the model to classify new external source IPs as 'benign' or 'reconnaissance-related' in near-real-time."
            ]
          },
          {
            "description": "A series of HTTP requests from a single external IP to a public-facing web server exhibits enumeration patterns, such as a high rate of 404 'Not Found' responses, or uses a User-Agent string matching a known scraping/reconnaissance tool.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Servers, Application Load Balancers, Web Application Firewalls (WAF)",
            "action": [
              "Symbolic: Create a detection rule using regular expressions to search Zeek http.log for User-Agent strings from external IPs that match a curated list of common reconnaissance tools (e.g., sqlmap, nikto, dirb, gobuster, feroxbuster, python-requests, scrapy). Generate an alert on any match.",
              "Statistical: For each external source IP over a 5-minute window, calculate the Shannon entropy of the requested URI paths and the rate of 404 'Not Found' responses. Create a composite risk score. Flag IPs where both metrics exceed their respective 98th percentile baselines, as this strongly indicates automated resource discovery.",
              "Machine Learning: Implement a time-series forecasting model (e.g., SARIMA) for each major public web asset to predict the expected request volume and 404-rate. An alert is generated when an observed volume from a single IP or network block significantly exceeds the forecasted upper confidence bound, indicating a potential enumeration or scraping attempt."
            ]
          },
          {
            "description": "A single external IP address attempts to connect to a large number of unique destination ports on one or more internal hosts within a short time frame, which is characteristic of a port scan.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, External-facing hosts",
            "action": [
              "Symbolic: Implement a stateful rule that triggers when a single source IP attempts to connect to more than 25 unique destination ports on any number of hosts within a 1-minute window. This signature detects both horizontal and vertical port scans.",
              "Statistical: For each external source IP, compute the count of distinct destination ports contacted over a 15-minute sliding window. Establish a distribution baseline for this metric across all external traffic. Flag any IP whose distinct port count exceeds 3 standard deviations from the mean or surpasses the 99.5th percentile, indicating anomalous scanning behavior.",
              "Machine Learning: Apply a density-based clustering algorithm (e.g., DBSCAN) to connection log data, using features such as source IP, destination port, and protocol. Normal traffic will form dense clusters. Identify network scans by flagging source IPs that are classified as noise or belong to sparse clusters, as their connection patterns do not fit established traffic behaviors."
            ]
          },
          {
            "description": "A high volume of failed login events (Windows Event ID 4625) originating from a single source IP against an external-facing authentication service, where the attempted usernames are either highly variable (enumeration) or repetitive (password spraying).",
            "data_sources": [
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Federation Services (ADFS), VPN Concentrators, Microsoft Exchange Servers, Public-facing Application Login Portals",
            "action": [
              "Symbolic: Generate an alert when a single source IP, identified from network logs, is associated with more than 20 failed logon events (Windows Event ID 4625) within a 5-minute window on a single authentication server, especially for failure reasons 0xC0000064 ('user name does not exist') or 0xC000006A ('bad password').",
              "Statistical: Group failed logins by source IP over a 10-minute window. For each IP, collect the set of unique usernames attempted and calculate the Shannon entropy of this set. A high entropy score (exceeding a 98th percentile baseline) suggests username enumeration, while a very low entropy score with many attempts suggests a password spray against a few accounts. Flag either condition.",
              "Machine Learning: Train a supervised classification model (e.g., Gradient Boosting) to differentiate between benign failed logins (e.g., user typos) and malicious attempts. Use features such as time of day, source IP reputation, number of attempts, variation in usernames from the source IP, and time between attempts. The model will assign a risk score to each burst of failed logins to prioritize analyst review."
            ]
          },
          {
            "description": "An external HTTP request successfully accesses or downloads a sensitive configuration file (e.g., .git/config, web.config, .env) or queries an API endpoint that returns a large or anomalous data set containing user or role information.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Servers, API Gateways, Source Code Repositories, Cloud Storage Buckets",
            "action": [
              "Symbolic: Create a high-priority alert to monitor Zeek http.log for any successful (HTTP status 200) external request to a URI matching a regex list of sensitive paths and filenames (e.g., `/.git/config`, `/.env`, `/etc/passwd`, `/api/v1/users/all`).",
              "Statistical: Using Zeek files.log, establish a baseline of normal file types (MIME types) and sizes downloaded from public web servers. Calculate the rarity of each download event based on its file type, path, and size. Flag downloads that are statistical outliers (e.g., rarity score in the top 99.5th percentile) for manual review.",
              "Machine Learning: Train an autoencoder model on benign API traffic, using features like endpoint, request parameters, user agent, and response size. Feed live API traffic through the model. A high reconstruction error for a given request/response pair indicates a significant deviation from the norm, such as an adversary successfully enumerating all users via an insecure API endpoint and receiving an abnormally large response payload."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]