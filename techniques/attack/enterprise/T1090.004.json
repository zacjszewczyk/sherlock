[
  {
    "information_requirement": "Is the adversary communicating with command and control infrastructure using domain fronting? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1090.004",
        "name": "Domain Fronting",
        "evidence": [
          {
            "description": "A network connection exhibiting a mismatch between the TLS SNI and HTTP Host header, where the inner HTTP Host header domain or the destination IP address is found on a high-fidelity threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., internet gateways, forward proxies)",
            "action": [
              "Symbolic: Join Zeek ssl.log and http.log records by connection UID. Filter for sessions where ssl.log.server_name does not equal http.log.host. From this subset, join with conn.log on the UID. Extract the http.log.host and conn.log.id.resp_h values and match them against a threat intelligence feed of malicious domains and IPs. Alert on any match.",
              "Statistical: From the set of SNI/Host mismatches, calculate the historical prevalence of each destination IP and inner Host domain across the enterprise over a 30-day baseline. Flag any SNI/Host mismatch pairs where the destination IP or inner Host domain falls below the 5th percentile of prevalence, indicating it is unusually rare for the organization.",
              "Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on labeled historical data of both benign (e.g., legitimate CDN behavior) and malicious (e.g., from past incidents) SNI/Host mismatches. Use features like destination IP reputation, domain age of the inner host, ASN, and TLS fingerprint (JA3). Apply the model in real-time to classify new mismatch events and alert on those with a high probability of being malicious."
            ]
          },
          {
            "description": "A statistically significant volume of network connections where the TLS SNI field is either blank or does not match the HTTP Host header, deviating from an established baseline of legitimate CDN and application behavior. [1]",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., internet gateways, forward proxies)",
            "action": [
              "Symbolic: Create and maintain an allowlist of known-good (SNI, Host) header pairs and legitimate blank-SNI applications. Correlate Zeek ssl.log and http.log by UID. Alert on any connection where ssl.log.server_name != http.log.host OR (ssl.log.server_name is null AND http.log.host is not null), and the (SNI, Host) pair is not on the established allowlist.",
              "Statistical: For each internal source host, calculate the daily ratio of mismatched SNI/Host connections to total TLS connections. Establish a 7-day rolling average and standard deviation for this ratio per host. Alert when a host's daily ratio exceeds 3 standard deviations above its rolling average, indicating a sudden change in behavior.",
              "Machine Learning: Use an unsupervised anomaly detection model (e.g., Isolation Forest) on connection metadata for SNI/Host mismatches. Features should include source/destination IP, destination port, bytes transferred, connection duration, and the specific SNI/Host values. The model will learn normal patterns of benign mismatches and flag connections that are strong outliers."
            ]
          },
          {
            "description": "Connections to known CDN IP ranges that exhibit C2-like behavior, such as periodic fixed-interval callbacks (beaconing), anomalous data transfer sizes compared to peers, or the use of a rare or known-malicious JA3/JA3S TLS fingerprint.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud service access points",
            "action": [
              "Symbolic: Filter Zeek ssl.log for connections to known CDN IP ranges. Extract the JA3 and JA3S hashes for each connection. Match these hashes against a threat intelligence feed of JA3/JA3S hashes associated with known malware families. Alert on any match.",
              "Statistical: For connections to CDNs, group by source host and destination SNI. Calculate the time delta between consecutive connections for each group. Calculate the standard deviation of these time deltas; a value near zero (e.g., < 1 second) indicates highly regular, machine-generated beaconing. Separately, calculate the 95th percentile for data volume (orig_bytes + resp_bytes in conn.log) for each user-to-CDN service and flag sessions exceeding this threshold.",
              "Machine Learning: For each host, create a time series of connection counts to CDN domains. Apply a time series decomposition or forecasting model (e.g., SARIMA) to identify significant periodic components (seasonality) that align with non-business cycles (e.g., a heartbeat every 60 seconds). Anomaly detection on the residual component of the time series can also flag unexpected spikes in communication."
            ]
          },
          {
            "description": "An internal source host exhibiting a high-entropy or high-cardinality fan-out of distinct HTTP Host headers behind a single TLS SNI domain, where the count of unique inner domains significantly exceeds the norm for other hosts using the same SNI.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments",
            "action": [
              "Symbolic: Identify sessions with SNI/Host mismatches. For each source IP and SNI pair, count the number of unique HTTP Host values. If a single source IP communicates with more than 50 unique inner hosts via a single SNI within a 24-hour period, flag for review.",
              "Statistical: For each source IP (id.orig_h) and fronted SNI (server_name), calculate the Shannon entropy of the set of associated inner HTTP Host names (host) over a 1-hour window. Establish a baseline entropy level for legitimate CDN traffic. Alert when a source IP's entropy for a given SNI exceeds the 99th percentile of the baseline.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on source hosts, with features including: total SNI/Host mismatches, number of unique SNIs in mismatches, number of unique Hosts in mismatches, and average entropy of inner hosts per SNI. The algorithm will group 'normal' hosts together; outlier hosts that do not belong to a cluster can be flagged as anomalous."
            ]
          },
          {
            "description": "A non-browser, unsigned, or anomalously-behaving process on a host is identified as the source of network traffic exhibiting domain fronting characteristics (e.g., SNI/Host mismatch).",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices",
            "action": [
              "Symbolic: Identify a suspicious connection via SNI/Host mismatch in Zeek logs. Correlate the connection 4-tuple (src_ip, src_port, dst_ip, dst_port) with Sysmon Event ID 3 (Network Connection) to find the responsible ProcessId and Image. Alert if the Image (process path) is not in an allowlist of known-good browsers and updaters (e.g., chrome.exe, firefox.exe, svchost.exe).",
              "Statistical: Correlate network-level domain fronting alerts with host data. For the identified source process, analyze its parent process (via Windows Event ID 4688), command-line arguments, and signature status. Assign a risk score: +1 for an unsigned binary, +1 for running from a temp/user-writable directory, +1 for an unusual parent (e.g., winword.exe spawning powershell.exe). Alert if the cumulative score exceeds a threshold (e.g., > 2).",
              "Machine Learning: Train a classification model to determine if a process initiating a network connection is benign or malicious, using features like process name, parent process name, command line entropy, and binary signature status. After a network-level domain fronting alert is triggered, use this model to classify the source process on the endpoint. A 'malicious' classification would escalate the alert priority."
            ]
          }
        ]
      }
    ],
    "references": [
      "[1] D. Fifield et al., 'Blocking-Resistant Communication through domain fronting,' Proceedings on Privacy Enhancing Technologies, vol. 2015, no. 2, pp. 46\u201364, Jun. 2015."
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]