[
  {
    "information_requirement": "Has the adversary bypassed security restrictions using indirect command execution? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1202",
        "name": "Indirect Command Execution",
        "evidence": [
          {
            "description": "A process associated with indirect command execution (e.g., forfiles.exe, pcalua.exe, scriptrunner.exe, ssh.exe) spawns a child process whose file hash matches a known-bad hash from a threat intelligence source.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Workstations, Privileged Access Workstations (PAWs)",
            "action": [
              "Symbolic Logic: Using a SIEM, create a rule that triggers on Windows Event ID 4688 (Process Creation). The rule should check if the ParentProcessName is one of ('forfiles.exe', 'pcalua.exe', 'scriptrunner.exe', 'ssh.exe') and the file hash of the NewProcessName matches any hash in the organization's threat intelligence feed. Generate a high-severity alert upon a match.",
              "Statistical Method: For each parent process associated with T1202, calculate the historical rarity of child processes it spawns. Maintain a frequency table of parent-child process pairs. Alert on pairs that fall below a low-frequency threshold (e.g., seen less than 5 times in the last 90 days) or whose child process name has a high character entropy score, suggesting randomization.",
              "Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on labeled process creation events (Windows Event ID 4688). Features should include parent process name, child process name entropy, command-line length, and presence of special characters. The model will predict a 'malicious' or 'benign' label for each T1202-related process creation event. Flag events with a high probability score for 'malicious' for analyst review."
            ]
          },
          {
            "description": "A utility such as forfiles.exe, pcalua.exe, or ssh.exe is executed with command-line arguments indicative of malicious execution, such as 'forfiles /c', 'pcalua -a', or 'ssh -o LocalCommand'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Workstations",
            "action": [
              "Symbolic Logic: Deploy a detection rule that uses regular expressions to find known-bad command-line patterns for T1202 utilities in Windows Event ID 4688 data. Examples include: 'forfiles.exe /c .*cmd\\.exe', 'pcalua\\.exe -a .*', or 'ssh\\.exe .* -o (ProxyCommand|LocalCommand)'. An alert is generated on any match.",
              "Statistical Method: For each T1202 utility, baseline the distribution of its command-line arguments' length and token count over a 30-day period. Calculate the 95th percentile for these metrics. Generate an alert when a new execution event exceeds this percentile, indicating an unusually long or complex command that warrants investigation.",
              "Machine Learning: Utilize an unsupervised clustering algorithm (e.g., DBSCAN) on the feature vectors of command-line arguments for T1202-related processes. Features can be created using TF-IDF vectorization on the command-line strings. The algorithm will group normal usage patterns into clusters. Any execution that is flagged as an outlier or noise by the algorithm should be investigated as a potential anomaly."
            ]
          },
          {
            "description": "A process associated with indirect command execution (forfiles.exe, pcalua.exe, scriptrunner.exe) initiates one or more outbound network connections to an external IP address, where such behavior is not part of an established baseline.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), DNS Servers, Host-level Network Telemetry on critical servers and workstations",
            "action": [
              "Symbolic Logic: Create a correlation rule between Windows Event ID 4688 and Zeek conn.log. Trigger an alert if a process name matching ('forfiles.exe', 'pcalua.exe', 'scriptrunner.exe') on a host is observed making an outbound network connection to an IP address listed on a threat intelligence blocklist within a 5-second window.",
              "Statistical Method: For each process associated with T1202, create a baseline of destination IPs, ports, and connection frequency from Zeek conn.log. Calculate the Shannon entropy of the destination IPs contacted by each process over a rolling 24-hour window. Alert if the entropy score for a given process significantly deviates from its historical baseline (e.g., > 3 standard deviations), suggesting communication with a wide range of unusual destinations.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) on the volume of network traffic (total bytes, packet count) originating from T1202-associated processes. Train the model on historical Zeek conn.log data to learn normal traffic patterns. The model will predict an expected traffic volume and confidence interval. Alert when the observed traffic volume exceeds the upper bound of the confidence interval."
            ]
          },
          {
            "description": "An anomalous process lineage is observed where a common user application (e.g., WINWORD.EXE, CHROME.EXE) spawns a T1202 utility (forfiles.exe, ssh.exe), which subsequently spawns a command interpreter (cmd.exe, powershell.exe) or another suspicious process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI), Application Servers (e.g., Citrix)",
            "action": [
              "Symbolic Logic: Define and search for specific high-fidelity malicious process chains using process ancestry data from Windows Event ID 4688. Create a rule that alerts on the exact sequence: ParentProcessName='WINWORD.EXE' -> NewProcessName='forfiles.exe' -> (Grandchild) NewProcessName='cmd.exe'. This list of forbidden chains should be maintained and updated.",
              "Statistical Method: Generate a graph of all parent-child process relationships observed in the environment over 30 days. Calculate the frequency (or probability) of each edge (relationship). Alert on the appearance of any process chain with a path probability below a defined threshold (e.g., a chain where each link has a <1% occurrence probability), indicating a statistically rare sequence of events.",
              "Machine Learning: Train a graph neural network (GNN) on the process relationship graph to learn embeddings for normal process behaviors and lineages. Use these embeddings to perform anomaly detection. A new process chain that results in a graph structure significantly different from the learned normal patterns can be flagged as anomalous, detecting novel variations of malicious process chains."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]