[
  {
    "information_requirement": "Is the adversary evading defenses by using NTFS file attributes?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.004",
        "name": "NTFS File Attributes",
        "evidence": [
          {
            "description": "A process command line, captured in a process creation event, contains an Alternate Data Stream (ADS) path that matches a known malicious indicator from threat intelligence feeds.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Ingest threat intelligence feeds containing known malicious file paths and ADS stream names. Create a detection rule that scans the 'CommandLine' or 'NewProcessName' field in Windows Event ID 4688 for an exact match against these indicators. An exact match generates a high-severity alert for immediate investigation.",
              "For every process creation event (Windows Event ID 4688) where the command line contains the ADS syntax (`:`), parse the parent file path and the stream name. Maintain a 30-day rolling frequency count for both parent paths and stream names. Generate a medium-severity alert when a new command line contains a path/stream combination where both elements are in the bottom 5th percentile of observed frequencies, indicating an anomalous pairing.",
              "Develop a supervised classification model (e.g., Gradient Boosting) using features extracted from command lines containing ADS syntax. Features should include: command line length, character entropy, presence of keywords (e.g., 'powershell', 'cmd', 'certutil'), parent file extension, and stream file extension (e.g., '.exe', '.dll', '.ps1'). Train the model on a labeled dataset of known benign and malicious ADS usage. Deploy the model to score all new ADS-related command lines, alerting on those with a high probability of being malicious."
            ]
          },
          {
            "description": "A process, for which there is no established baseline of Alternate Data Stream (ADS) interaction, is observed creating a new process or accessing a file object with ADS syntax in its name.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Servers, and Application Servers",
            "action": [
              "Define an explicit allow-list of process names known to legitimately use ADS (e.g., 'explorer.exe', 'chrome.exe', 'msedge.exe', 'firefox.exe'). Create a detection rule that fires on any process creation (Windows Event ID 4688) or file access (Windows Event ID 4663, requires SACL) event where the process name is NOT on the allow-list and the command line or object name contains the ADS syntax (`:`). Alert on any match.",
              "For each unique process name, profile its historical use of ADS over a 30-day baseline. Calculate the mean and standard deviation of ADS-related events (from EID 4688 and 4663) per process, per host, per day. Generate an alert if a process on a given host exhibits a number of ADS-related events that is more than three standard deviations above its established daily average, indicating a sudden change in behavior.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN or Isolation Forest) to all ADS-related events. Vectorize each event using features such as process name, parent process name, user account, target file extension, and hour of the day. The algorithm will group routine activity (e.g., web browsers creating Zone.Identifier streams during work hours) into large clusters. Events that are classified as noise or fall into very small clusters should be flagged as anomalies for investigation."
            ]
          },
          {
            "description": "A file write event to an Alternate Data Stream (ADS) is observed, followed by a process creation event from that same ADS path on the same host within a short time frame (e.g., less than 5 minutes).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical System Directories (e.g., C:\\Windows\\System32), User Profile Directories, and Temporary File Directories",
            "action": [
              "Create a stateful detection rule that triggers on a file write event (Windows Event ID 4663, with Object Name containing `:`) for a specific host and file path. If a process creation event (Windows Event ID 4688) from the same host and matching file path occurs within the next 5 minutes, generate a high-confidence alert. This indicates a 'write-and-execute' pattern.",
              "For all observed 'write-and-execute' ADS sequences, calculate the time delta between the write (EID 4663) and execute (EID 4688) events. Establish a baseline distribution of these time deltas for known benign applications. Flag any sequence where the time delta is an outlier (e.g., below the 1st percentile or above the 99th percentile), which could indicate either immediate programmatic execution or delayed execution by a scheduler, respectively.",
              "Aggregate the count of 'write-and-execute' ADS events per hour across the enterprise to create a time series. Apply a time-series anomaly detection model (e.g., Prophet or an LSTM-based autoencoder) to this data. The model should learn the normal daily and weekly seasonality of this activity. An alert is generated when the observed count significantly deviates from the model's prediction, suggesting a coordinated or widespread attack."
            ]
          },
          {
            "description": "A process associated with document handling or web services (e.g., Microsoft Office applications, IIS worker processes) spawns a child process that creates, modifies, or executes from an Alternate Data Stream (ADS).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Microsoft Office Servers (e.g., Exchange), Web Servers (e.g., IIS), and User Workstations running Office applications",
            "action": [
              "Maintain a list of high-risk parent processes that should not typically spawn children that manipulate ADS (e.g., 'WINWORD.EXE', 'EXCEL.EXE', 'POWERPNT.EXE', 'OUTLOOK.EXE', 'w3wp.exe'). Create a detection rule that alerts when a process from this list is the 'ParentProcessName' in a process creation event (EID 4688) where the child process's 'CommandLine' contains ADS syntax (`:`).",
              "Over a 90-day baseline, calculate the frequency of all parent-child process pairs where the child's command line involves ADS. For each new such event, look up the historical frequency of the (ParentProcessName, ChildProcessName) tuple. If the observed frequency is below a defined threshold (e.g., seen less than 5 times across the enterprise), flag the event as a rare and potentially suspicious process lineage.",
              "Construct a process lineage graph where nodes are processes and directed edges represent parent-child relationships. Apply a graph analytics algorithm (e.g., PageRank or community detection) to identify normal patterns. When a new process creation involving ADS occurs, add it to the graph. If this new edge significantly alters the graph structure\u2014for example, by connecting two previously disconnected communities\u2014flag it as suspicious behavior indicative of unexpected execution chains."
            ]
          },
          {
            "description": "A process whose executable path is an Alternate Data Stream (ADS) is observed initiating an outbound network connection, especially to a non-standard port or a destination with a poor reputation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Servers, Internet Gateways, and Domain Controllers",
            "action": [
              "On a single host, join process creation events (EID 4688) with network connection events (EID 5156 or Zeek conn.log) using the Process ID. Create a high-severity alert if the process's image path in EID 4688 contains ADS syntax (`:`) AND the destination IP address in the corresponding network event matches a known malicious IP from a threat intelligence feed.",
              "For all connections made by ADS-launched processes, establish a baseline of destination ports. Calculate the Shannon entropy of the destination port distribution per host over a 24-hour window. A sudden spike in entropy for a host may indicate port scanning. Additionally, flag any connection to a port that is statistically rare (<1st percentile) across the enterprise for any process.",
              "For network connections from ADS-launched processes, extract features from Zeek logs, including connection duration ('duration'), bytes sent ('orig_bytes'), bytes received ('resp_bytes'), protocol, and destination port. Use a time-series model to analyze the timing and size of connections to detect beaconing (e.g., periodic connections with similar payload sizes). Separately, use an anomaly detection model (e.g., Isolation Forest) on connection features, including JA3/JA3S hash rarity from Zeek ssl.log, to identify unusual C2 channels that don't follow a simple beaconing pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]