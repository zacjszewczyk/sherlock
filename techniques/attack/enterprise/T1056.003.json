[
  {
    "information_requirement": "Has the adversary accessed credentials via web portal capture?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1056.003",
        "name": "Web Portal Capture",
        "evidence": [
          {
            "description": "A file modification event on a web portal's login page (e.g., login.aspx, index.html) introduces a `<script>` tag with a `src` attribute or a `<form>` tag with an `action` attribute that points to an external, non-allowlisted domain.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally-facing web servers hosting login portals (VPN, OWA, SharePoint)",
            "action": [
              "Create a rule to trigger on file modification events (Windows Event ID 4663) for monitored login page files. Upon trigger, parse the file content to extract all domains from `<script src='...'>` and `<form action='...'>` attributes. Compare extracted domains against a threat intelligence feed of malicious domains and an internal allowlist of approved domains. Generate an alert for any domain found on the malicious feed or not present on the allowlist.",
              "For any new external domain identified in a login page modification, enrich the domain with metadata (age, registration info, public popularity score). Calculate a risk score by summing weighted factors: high weight for domain age less than 30 days, high weight for presence in the bottom 10th percentile of popularity, and a score based on Shannon entropy of the domain name (score += 1 if entropy > 3.5). Alert on any domain whose cumulative risk score exceeds a defined threshold.",
              "Develop a time-series model (e.g., SARIMA) based on historical file modification events (Windows Event ID 4663) for web portal files to establish a baseline of legitimate update cycles (e.g., weekly patches). Configure the model to predict expected modification windows. Generate an alert if a modification occurs outside of a predicted maintenance window. Correlate the alert with the parent process from the corresponding Windows Event ID 4688 to identify the process responsible for the anomalous update."
            ]
          },
          {
            "description": "An outbound HTTP/S request (POST or GET) from a web portal server to an external IP address, where the URI or POST body contains key-value pairs matching credential formats (e.g., `username=`, `password=`, `user=`, `pass=`, `token=`, `credential=`) and the destination IP or domain is not on a pre-defined allowlist.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points for the DMZ hosting the web portal servers",
            "action": [
              "Deploy a SIEM rule that inspects Zeek http.log for events where `id.orig_h` is a web portal server IP and `id.resp_h` is external. The rule should trigger if the `uri` or `post_body` field (if available) contains regex patterns such as `/(user(name)?|pass(word)?|token|cred(ential)?)=[^&]+/i`. Validate the destination against an allowlist of known-good IPs/domains and alert on any non-allowlisted match.",
              "For each web portal server, maintain a 90-day rolling baseline of outbound destination IPs, ASNs, and countries from Zeek conn.log. Calculate the frequency of connections to each destination. Generate an alert if the server initiates a connection to a destination IP that falls below the 5th percentile of historical frequency (a rare destination), especially if the connection payload size (`orig_bytes`) deviates more than 2 standard deviations from the server's baseline for that destination port.",
              "Train a one-class SVM classifier using features from legitimate outbound connections in Zeek conn.log (e.g., `id.resp_p`, `duration`, `orig_bytes`, `resp_bytes`, `proto`). Use the trained model to score all new outbound connections from web portal servers in real-time. Flag any connection classified as an outlier (anomaly) and escalate to an alert if it is also an HTTP/S connection containing credential-like patterns in the URI (from Zeek http.log)."
            ]
          },
          {
            "description": "A file modification event (Windows Event ID 4663) on a web portal login page, initiated by a process (Windows Event ID 4688) not on an authorized process allowlist (e.g., not `deployscript.ps1`), is followed within a 5-minute window by an outbound network connection (Zeek conn.log) from the same host to a destination IP not seen in the last 30 days.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web portal application servers and their associated host-based monitoring agents",
            "action": [
              "Create a stateful correlation rule that triggers when a Windows Event ID 4663 for a login page file occurs. The rule should check the corresponding process name from Windows Event ID 4688 against an allowlist of authorized update processes. If the process is not on the allowlist, the rule should then monitor Zeek conn.log for any outbound connection from that host within the next 5 minutes to an external IP not seen in the last 30 days. A match on all conditions generates an alert.",
              "For every process creation event (Windows Event ID 4688) that modifies a login page file, calculate the Shannon entropy of the command line arguments. Establish a baseline entropy score for legitimate deployment processes. Alert if a process execution has an entropy score exceeding the 99th percentile of the baseline, indicating potential obfuscation, and is correlated with a subsequent rare outbound network connection.",
              "Train a sequence analysis model, such as a Hidden Markov Model (HMM) or an LSTM-based autoencoder, on typical event sequences for legitimate software updates (e.g., `trusted_process_starts` -> `file_write_login_page` -> `connection_to_update_server`). Feed real-time event sequences from each web server into the model. An alert is generated when an observed sequence of events (e.g., `w3wp.exe_starts` -> `file_write_login_page` -> `connection_to_rare_IP`) has a low probability score, indicating a deviation from normal update behavior."
            ]
          },
          {
            "description": "The outbound network traffic profile from a web portal server, as seen in Zeek conn.log, deviates from its established baseline, exhibiting one or more of the following: a new destination country or ASN, a significant increase in connection frequency coupled with a decrease in average data volume per connection (`orig_bytes`), or a shift to periodic, 'heartbeat'-like connection intervals.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensor data at the DMZ egress point",
            "action": [
              "Maintain an explicit allowlist of destination countries and Autonomous System Numbers (ASNs) for each web portal server. Create a rule that inspects enriched Zeek conn.log data (with GeoIP and ASN information) and alerts on any successful connection (`conn_state` = 'SF') to a country or ASN not on the server's specific allowlist.",
              "For each web portal server, establish an hourly baseline profile of outbound traffic from Zeek conn.log, including the 95th percentile for `orig_bytes` and the average time delta between connections to the same destination. Alert if, within a 1-hour window, the `orig_bytes` value drops below the 50th percentile while the connection count increases by more than 3 standard deviations, or if the standard deviation of the time delta between connections drops significantly, indicating fixed-interval beaconing.",
              "Apply time-series decomposition (e.g., using STL) to the total outbound data volume per minute for each web portal server. Isolate the residual component of the time series, which represents noise or unexplained variation. Use a peak-finding algorithm on the residual series to detect sudden spikes that are not explained by trend or seasonality. Correlate these spikes with the emergence of new clusters of connection behavior (using DBSCAN on features like `duration`, `orig_bytes`, `id.resp_p`) to identify anomalous exfiltration patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary collecting data via web portal capture?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1056.003",
        "name": "Web Portal Capture",
        "evidence": [
          {
            "description": "A new file is created in a web-accessible directory (e.g., `C:\\inetpub\\wwwroot`, `/var/www/html`) whose SHA256 hash matches a known malicious file from a threat intelligence feed, or whose content contains high-confidence signatures of web shell or credential harvesting functions (e.g., `passthru($_POST['cmd'])`).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of externally-facing web servers, particularly web root and temporary directories",
            "action": [
              "Monitor file creation events (e.g., using Sysmon Event ID 11 or Windows Event ID 4663/4688) in web server root and temporary directories. For each new file, compute its SHA256 hash and query a threat intelligence platform. Additionally, scan the file content using YARA rules designed to detect web shells and credential harvesting logic. Alert on any hash or YARA rule match.",
              "Establish a baseline entropy distribution for each common file type (.js, .html, .aspx, .php) in the web root directory. When a new file is created, calculate its Shannon entropy. Generate an alert if the file's entropy score is more than 3 standard deviations above the mean for its file type, as high entropy can indicate packed or encrypted malicious code.",
              "Train a supervised classification model (e.g., Gradient Boosting, Random Forest) using features extracted from a labeled dataset of benign and malicious web files. Features should include file size, Shannon entropy, number of suspicious function calls (e.g., `eval`, `shell_exec`), presence of long, high-entropy strings, and the ratio of alphanumeric to non-alphanumeric characters. Deploy the model to classify all new files written to the web directory and alert on any file classified as malicious with a confidence score above 0.90."
            ]
          },
          {
            "description": "A web server process (e.g., `w3wp.exe`, `httpd.exe`, `nginx.exe`) spawns a child process that is a command-line interpreter (`cmd.exe`, `powershell.exe`), a scripting engine (`cscript.exe`, `bash`, `python.exe`), or a system utility (`whoami.exe`, `net.exe`), which is highly anomalous behavior for a web service.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on web portal servers",
            "action": [
              "Create a high-severity alert rule to trigger on any Windows Event ID 4688 (or Sysmon Event ID 1) where the `ParentProcessName` is a known web server process (e.g., `w3wp.exe`, `httpd.exe`) and the `NewProcessName` is an interactive shell, scripting engine, or reconnaissance tool (e.g., `cmd.exe`, `powershell.exe`, `bash`, `whoami.exe`, `net.exe`).",
              "Continuously profile all parent-child process relationships on web servers from process creation logs (Windows Event ID 4688) and calculate their frequency of occurrence over a 30-day rolling window. Generate an alert for any observed parent-child relationship that falls into the bottom 1st percentile of frequency (i.e., is extremely rare), such as `w3wp.exe` spawning `powershell.exe`.",
              "Vectorize command-line arguments from process creation events using a TF-IDF or word embedding model (e.g., Word2Vec). Train a logistic regression or other binary classifier to distinguish between benign and malicious command lines originating from web server processes. In parallel, use an anomaly detection algorithm on the vectors to flag command lines that are semantically different from any seen during a training period."
            ]
          },
          {
            "description": "A file located in a non-standard log directory (e.g., an image folder like `/images`) or a hidden file (e.g., `.config.php`) receives multiple write events (Windows Event ID 4663) from a web server process, causing its size to grow. The timing of these write events correlates with inbound HTTP POST requests to a login page (from Zeek http.log).",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs for web server directories, including temporary, image, and document root folders",
            "action": [
              "Create a correlation rule that triggers when a file with a non-log extension (e.g., .jpg, .png, .css) in a web directory receives a write access event (Windows Event ID 4663) from a web server process. The rule should check if the file content is text-based rather than binary. Escalate to an alert if these conditions are met, as it may indicate a log file masquerading as a different file type.",
              "For any file receiving multiple write events from a web process, create a time series of its file size and the inter-arrival time of write events. Simultaneously, create a time series of inbound POST requests to login pages from Zeek http.log. Calculate the cross-correlation between the file write series and the login request series. A high correlation coefficient (e.g., > 0.7) indicates the file is likely being used to log credentials and should trigger an alert.",
              "Use a density-based clustering algorithm (e.g., DBSCAN) on file write events, using features such as file path (vectorized), process name, write frequency, and file extension. This will automatically group normal application and system logging behaviors into clusters. Any file write event that is not assigned to a cluster (i.e., is flagged as noise by DBSCAN) should be considered an anomalous outlier and investigated."
            ]
          },
          {
            "description": "A web server process generates a read access event (Windows Event ID 4656/4663) on a sensitive system or configuration file (e.g., `web.config`, `SAM` hive, `.env` file), followed within a 1-minute window by a write access event from the same process to a file in a temporary or staging directory (e.g., `C:\\Windows\\Temp`).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System-level audit logs on web servers, with SACLs configured for sensitive configuration files and registry hives",
            "action": [
              "Apply System Access Control Lists (SACLs) to sensitive configuration files and registry keys to generate audit events. Create a SIEM rule to trigger if a web server process generates a read handle request (Event ID 4656) or read access event (Event ID 4663) on a SACL-protected object, immediately followed within 60 seconds by a write event (Event ID 4663) from the same process ID to a file in a world-writable or temporary directory. This indicates potential staging of stolen data.",
              "From file access audit logs (Event ID 4663), build a probabilistic model of file access paths for the web server process (e.g., a Markov chain of directories accessed). Alert if the process executes a low-probability state transition, such as accessing the Windows System32 directory after accessing the web root, especially if this transition has never been observed in the baseline.",
              "Model the file system as a graph where files and processes are nodes and access events are edges. Train a graph-based anomaly detection model (e.g., using Graph Neural Networks or random walk-based algorithms) on the graph of normal process-file interactions. Feed real-time access events into the model to detect and alert on the formation of anomalous subgraphs or paths, such as a web process node connecting to a sensitive file node and then to a new temp file node."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]