[
  {
    "information_requirement": "Is the adversary attempting to steal credentials using Kerberoasting?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1558.003",
        "name": "Kerberoasting",
        "evidence": [
          {
            "description": "A process is created with a name or command-line arguments matching signatures of known Kerberoasting tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All domain-joined endpoints and servers.",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for process names (e.g., `rubeus.exe`, `GetUserSPNs.py`) or command-line arguments (e.g., `kerberoast`, `asktgs`) associated with known Kerberoasting tools. Generate a high-severity alert upon any match.",
              "Statistical: Analyze the entropy of command-line arguments for common processes like `powershell.exe`. A sudden spike in entropy, especially when correlated with network requests to a Domain Controller, can indicate obfuscated commands. Flag command lines with entropy scores greater than the 95th percentile of the historical baseline for that process name.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled process command-line arguments, using features like argument length, character frequency, and n-grams. Use the model to classify new process creation events in real-time as benign or suspicious of Kerberoasting activity, flagging those with a high probability score."
            ]
          },
          {
            "description": "A Kerberos TGS service ticket request (Event ID 4769) is made using RC4-HMAC encryption (Ticket Encryption Type 0x17) from an account or client address not associated with legacy systems requiring it.",
            "data_sources": [
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers.",
            "action": [
              "Symbolic: Create a detection rule that triggers on any Windows Event ID 4769 where the 'Ticket Encryption Type' field is '0x17' and the 'Account Name' is not on a pre-approved allow-list of legacy service accounts. Alert on each occurrence.",
              "Statistical: For each account, calculate the ratio of RC4 requests (Type 0x17) to total Kerberos ticket requests over a rolling 24-hour window. Establish a baseline ratio for all accounts. Flag any account whose RC4 request ratio exceeds 3 standard deviations above the mean or is non-zero for the first time.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on user accounts based on features from Event ID 4769, such as the frequency of different encryption types requested and number of unique service names. Identify clusters of anomalous behavior, distinct from normal user and service account clusters, which may represent accounts performing Kerberoasting."
            ]
          },
          {
            "description": "A single account or source IP address requests an anomalously high number of unique Kerberos TGS service tickets within a short time frame.",
            "data_sources": [
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Network traffic monitoring points (e.g., DC-facing switch SPAN/TAP ports).",
            "action": [
              "Symbolic: Create a threshold-based rule that alerts when a single 'Client Address' (Event ID 4769) or 'client' IP (Zeek kerberos.log) requests more than 50 unique 'Service Name's within a 5-minute window. Tune the threshold based on environmental norms.",
              "Statistical: For each source account, calculate a baseline of the count of unique service names requested per hour. Use a percentile-based threshold (e.g., 99th percentile) on a 5-minute rolling window to detect significant deviations. A count exceeding this threshold indicates a potential enumeration and collection attempt.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA) on the volume of TGS requests per source account. The model will learn the normal rhythm of requests for each account and flag periods where the observed volume significantly deviates from the forecasted volume, indicating a potential Kerberoasting attack."
            ]
          },
          {
            "description": "An account requests a Kerberos service ticket for a Service Principal Name (SPN) that is either designated as high-value or is inconsistent with the account's established access patterns.",
            "data_sources": [
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, High-value application servers (e.g., SQL servers, SharePoint servers).",
            "action": [
              "Symbolic: Maintain a static list of high-value SPNs (e.g., associated with domain admin accounts, `krbtgt`, database services). Generate a high-severity alert whenever a non-administrative user account requests a ticket for an SPN on this list.",
              "Statistical: For each user, create a profile of normally accessed SPNs from historical Event ID 4769 data. Calculate the rarity of each user-to-SPN request based on its historical frequency (e.g., using inverse document frequency). A request with a very high rarity score (e.g., a first-time access) should be flagged for review.",
              "Machine Learning: Construct a user-SPN access graph and apply a community detection algorithm (e.g., Louvain Modularity) to identify groups of users who typically access similar services. Flag an alert when a user requests an SPN that belongs to a service community outside of their own, indicating a deviation from their peer group's behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]