[
  {
    "information_requirement": "Has the adversary gained initial access via a compromised hardware supply chain? (PIR)",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1195.003",
        "name": "Compromise Hardware Supply Chain",
        "evidence": [
          {
            "description": "A network connection from a newly provisioned asset (e.g., within first 30 days of deployment) to a destination IP or domain present on a high-confidence threat intelligence feed for hardware/firmware C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies)",
            "action": "1. (Symbolic) Join destination IPs (Zeek conn.log `id.resp_h`) and requested domains (Zeek dns.log `query`) against a threat intelligence feed of known hardware implant C2s. Alert on any match, especially from hosts added to an asset inventory within the last 30 days. 2. (Statistical) For newly provisioned assets, calculate the rarity of the destination IP's Autonomous System Number (ASN) and country compared to the organization's 90-day baseline. A connection to an ASN or country not seen in the last 90 days that is also flagged by the IOC check receives a higher risk score. 3. (ML) Use a trained classification model (e.g., Random Forest) with features like destination IP reputation, ASN rarity, port number, JA3 hash, and a binary feature for 'newly provisioned asset' to classify each connection's risk. Flag connections with a high probability score for C2 activity."
          },
          {
            "description": "A process creation event (Windows Event ID 4688) or a file transferred over the network (Zeek files.log) where the file's SHA256 hash matches a known indicator of compromise for firmware-level malware.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Application Servers, Domain Controllers",
            "action": "1. (Symbolic) Continuously check the hashes of all newly executed processes (Windows Event ID 4688 `ProcessHash`) and files seen in network traffic (Zeek files.log `sha256`) against a threat intelligence feed of malicious file hashes associated with supply chain attacks. Alert on any match. 2. (Statistical) For any executed file, calculate the prevalence of its hash across the enterprise. A hash that is extremely rare (e.g., seen on < 0.1% of endpoints) and is also unsigned (requires EDR/Sysmon data) should be flagged. Calculate the Shannon entropy of file paths; unusually high entropy may indicate randomization used by malware. 3. (ML) Develop a file execution risk model using a classifier that inputs features like hash prevalence, signer information, entropy of the file name/path, and parent process details. Train this model to predict the likelihood that a newly executed file is malicious."
          },
          {
            "description": "A series of network connections from a single host exhibiting beaconing characteristics (regular time intervals, consistent data volume) and/or using TLS fingerprints (JA3/JA3S) or DNS query patterns associated with known hardware implants.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Resolvers, SSL/TLS Inspection Points",
            "action": "1. (Symbolic) Match `ja3` and `ja3s` fields in Zeek ssl.log and the `query` field in Zeek dns.log against known-bad lists for firmware implants. Alert on any matches. 2. (Statistical) For each source-destination IP pair in Zeek conn.log, calculate the standard deviation of the time delta between connections and the standard deviation of the bytes sent (`orig_bytes`). A very low standard deviation for both metrics (e.g., below 1 second for time and below 10 bytes for size) over a 24-hour period is indicative of automated beaconing. Flag pairs in the bottom 1st percentile for both metrics. 3. (ML) Use time series analysis (e.g., FFT) on connection counts and data volume per host to detect periodic signals. A strong periodic component that cannot be attributed to known applications (like NTP) is suspicious. Cluster hosts based on their beaconing features (frequency, jitter, payload size) to identify small groups of devices communicating in a similar, anomalous way."
          },
          {
            "description": "One or more external network connections (destination IP is non-RFC1918) from a host after a system boot event but before the first recorded interactive logon (Windows Event ID 4624, Logon Type 2 or 10).",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Servers, Network Egress Points, Domain Controller Authentication Logs",
            "action": "1. (Symbolic) For each host, identify the timestamp of the last boot event (Event ID 6005) and the first subsequent interactive logon (Event ID 4624, Type 2 or 10). Alert if any connection is made to an external IP on a non-standard port (e.g., not 80, 443, 53, 123) within this time window. 2. (Statistical) Establish a baseline of normal pre-login network activity for groups of similar assets. Profile the destination ports, protocol counts, and data volumes. Use a Z-score to detect significant deviations from this baseline on a per-host basis. Flag a host if its pre-login data volume to external IPs is more than 3 standard deviations above the group mean. 3. (ML) Use an autoencoder trained on features of normal pre-login network sessions (e.g., vector of ports, protocol counts, total bytes out). A high reconstruction error for a new pre-login session indicates it is anomalous and doesn't fit the learned pattern of normal behavior."
          },
          {
            "description": "A Secure Boot validation failure log, a BitLocker recovery event, or a TPM error, indicating a change in the trusted boot chain, especially on a device with recently installed or replaced hardware.",
            "data_sources": [
              "Microsoft-Windows-Kernel-Boot Event ID 153",
              "Microsoft-Windows-BitLocker-Driver Event ID 24620",
              "TPM Event ID 15"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Device Event Logs, Server Event Logs, Physical Asset Management Database",
            "action": "1. (Symbolic) Create an alert that triggers upon the appearance of specific boot integrity failure event IDs, such as Secure Boot failure (Kernel-Boot 153) or BitLocker recovery (BitLocker-Driver 24620). Cross-reference the affected hostname with an asset inventory to check for recent hardware changes. 2. (Statistical) Calculate the baseline rate of these boot integrity errors across the enterprise. An individual host exceeding a percentile threshold (e.g., 99th percentile) for these errors in a rolling 30-day window should be investigated. A sudden enterprise-wide spike in these errors indicates a potential bad batch of hardware. 3. (ML) Use anomaly detection on a time series of boot error counts, segmented by hardware model. An algorithm like Seasonal Hybrid ESD (S-H-ESD) can identify statistically significant spikes in error rates for a specific model, signaling a targeted supply chain issue."
          },
          {
            "description": "A time-correlated sequence of events on a single host within a short window (e.g., < 10 minutes) consisting of: 1) a boot integrity error, 2) the execution of a process that is not digitally signed, and 3) a network connection to a destination IP with a low reputation score.",
            "data_sources": [
              "Microsoft-Windows-BitLocker-Driver Event ID 24620",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM/Log Aggregator, Endpoint Device Logs, Network Sensor Logs",
            "action": "1. (Symbolic) Define a SIEM correlation rule that triggers if, for the same host, a boot integrity event (e.g., BitLocker-Driver 24620) is followed within 5 minutes by an unsigned process execution (requires EDR/Sysmon), which is then followed within 1 minute by a connection to a known-malicious external IP. 2. (Statistical) Implement a risk scoring system: assign points for each event (+10 for a boot error, +5 for an unsigned process, +5 for a connection to a rare destination country). If a host's score exceeds a threshold (e.g., 15) in a 10-minute window, alert. Determine thresholds by baselining the frequency of these combined events. 3. (ML) Use a Hidden Markov Model (HMM) where observed events are logs (boot errors, process creations, network flows) and hidden states are 'Benign Boot', 'Compromised Boot', and 'Post-Exploitation'. A sequence of observations with a high probability of transitioning through the 'Compromised Boot' state should be flagged as a high-fidelity incident."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]