[
  {
    "information_requirement": "Is the adversary attempting to cause a denial of service via network flooding? (PIR)",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1498.001",
        "name": "Direct Network Flood",
        "evidence": [
          {
            "description": "A statistically significant portion of high-volume traffic targeting a specific service originates from source IPs present on a DDoS/botnet threat intelligence list.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, External-facing web servers, DNS servers",
            "action": "For each inbound connection in Zeek conn.log, perform a real-time lookup of the source IP (`id.orig_h`) against a curated list of known DDoS botnet and attacker IPs. Generate a high-severity alert for any match. Statistically, over a 1-minute window, calculate the percentage of total inbound traffic volume (bytes) and connections originating from matched threat intel IPs; alert if this percentage exceeds the 99th percentile of its historical values for that service. For machine learning, use a time series forecasting model (e.g., ARIMA) to predict the expected volume of traffic from threat intel-listed IPs; an alert is triggered when the observed volume significantly exceeds the forecasted volume's confidence interval, indicating an active campaign."
          },
          {
            "description": "A high volume of network traffic exhibits packet-level characteristics (e.g., fixed packet size, unusual IP fragmentation, specific TCP flag combinations) that match signatures of known DDoS attack tools.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network security monitoring sensors (e.g., Zeek sensors at network chokepoints), DMZ segments",
            "action": "Symbolically, deploy and monitor custom Zeek scripts or SIEM rules that check for static signatures of flood tools, such as a fixed packet size of 1024 bytes in a UDP flood, and alert on a match. Statistically, for a given destination, calculate the standard deviation of packet sizes for incoming traffic within a 30-second window; alert when the standard deviation approaches zero while packets-per-second (PPS) is high (e.g., std dev is below the 5th percentile of its baseline). For machine learning, train a supervised classification model (e.g., Random Forest) on labeled packet capture data to distinguish between benign traffic and various flood types based on features like protocol, packet length, and inter-arrival time, and apply this model to live traffic."
          },
          {
            "description": "A sustained surge in packets-per-second (PPS) or bytes-per-second (BPS) targeting a specific host or service that exceeds the 99th percentile of the established 30-day baseline for that asset.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical application servers (e.g., authentication, database), Network load balancers",
            "action": "Symbolically, establish a static, high-watermark threshold for packets-per-second (e.g., 50,000 PPS) for critical services and generate a critical alert if this threshold is breached for more than 10 consecutive seconds. Statistically, for each service (destination IP/port), maintain a rolling 30-day baseline of PPS and BPS in 1-minute intervals and alert when the current traffic rate exceeds the 99th percentile for three consecutive intervals. For machine learning, implement a time series anomaly detection model (e.g., Seasonal-Hybrid ESD) on PPS/BPS data for key services to alert when an observation is flagged as an anomaly not explained by normal cyclical patterns."
          },
          {
            "description": "A sudden, statistically significant decrease in the Shannon entropy of source ports or protocols for traffic destined to a specific service, indicating a shift from diverse, legitimate traffic to a homogenous flood.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing DNS and NTP servers, API gateways",
            "action": "Symbolically, alert if the ratio of UDP or ICMP traffic to a web server (typically TCP-heavy) exceeds 50% of total traffic for more than one minute. Statistically, calculate the Shannon entropy of source ports and protocols for traffic to each critical service over 1-minute windows; alert if the entropy drops more than two standard deviations below its baseline mean. For machine learning, use a clustering algorithm (e.g., DBSCAN) on traffic features (protocol, source port range, packet size); the emergence of a new, large, and dense cluster not present in the historical baseline indicates a coordinated, homogenous attack."
          },
          {
            "description": "A ratio of unique source IPs to a single destination service that is anomalously high, while the average bytes-per-source-IP is anomalously low, compared to historical norms.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, User authentication services, Customer-facing web portals",
            "action": "Symbolically, if the count of unique source IPs in a 1-minute window exceeds a hard limit (e.g., 20,000) and the average bytes per connection is less than a small threshold (e.g., 200 bytes), trigger an alert. Statistically, for each service, calculate the count of unique source IPs and the average bytes transferred per source IP; alert when the source IP count is above its 98th percentile and the average bytes is below its 10th percentile simultaneously. For machine learning, use a multivariate anomaly detection model (e.g., Isolation Forest) on a feature set including unique source IP count and average bytes per source to detect deviations from the learned normal relationship."
          },
          {
            "description": "A sharp increase in the number of TCP sessions terminating in a non-established state (e.g., S0, S1, RSTR) targeting a specific port, exceeding three standard deviations of the baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (Active Directory, RADIUS, LDAP), Any server offering TCP-based services",
            "action": "Symbolically, monitor Zeek notice.log for `Scan::SYN_Flood` and trigger a high-severity alert immediately upon this notice type. Statistically, from Zeek conn.log, count connections per minute with a `conn_state` of 'S0' or 'S1' and alert when the count for a specific port exceeds three standard deviations above the baseline mean. For machine learning, train a regression model to predict the expected ratio of established (SF) to non-established (S0, S1, REJ) connections based on time of day; a large residual error where the actual non-established count is far higher than predicted indicates an anomaly."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]