[
  {
    "information_requirement": "Is the adversary leveraging system services for execution?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1569",
        "name": "System Services",
        "evidence": [
          {
            "description": "A new service is created or an existing one is modified where the service name, executable file path, or file hash matches a known malicious indicator. The service process subsequently initiates network connections to a known malicious C2 IP address or domain.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 4697",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint Subnets, Egress Network Gateways",
            "action": [
              "Symbolic: Continuously monitor service creation/modification events (Windows Event IDs 7045, 4697) and process creation events (4688). Join these events with CTI feeds, alerting on any match between the service's name, executable path, file hash, or subsequent network destinations (from Zeek conn.log) and known malicious indicators.",
              "Statistical: For each new service executable hash, calculate its prevalence across all hosts. Flag any hash that appears on a number of hosts below a low percentile threshold (e.g., < 1st percentile, or on fewer than 5 machines). Similarly, for network connections from the new service process, flag connections to destination domains or IPs that are statistically rare for the environment.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) using features from service creation events (path entropy, service name length, is path in a temp directory, is executable signed) and associated process/network events. The model should predict the probability of a new service being malicious. Alert on services with a high probability score."
            ]
          },
          {
            "description": "An administrative tool like sc.exe or PowerShell's New-Service/Set-Service cmdlets is used to create or configure a service with a binary path pointing to a non-standard, user-writable, or temporary directory.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, Windows Server Infrastructure, Administrator Workstations",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688) for sc.exe or powershell.exe. Create a rule that uses regular expressions on the command line to detect arguments like 'create', 'config', 'New-Service', or 'Set-Service' where the associated binary path points to a suspicious location (e.g., C:\\Users\\, C:\\Windows\\Temp\\, C:\\ProgramData\\, C:\\PerfLogs\\).",
              "Statistical: For all command-line executions of sc.exe and powershell.exe, calculate the entropy of the command-line string. Establish a baseline of entropy values for normal administrative commands. Flag commands with anomalously high entropy scores, which may indicate obfuscation or randomized file paths. Also, track the parent process of sc.exe; alert if the parent is rare (e.g., winword.exe, chrome.exe).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on feature vectors derived from service-related command lines. Features can include command length, argument count, presence of specific keywords, and path characteristics. Outlier clusters that do not group with known, legitimate administrative activity patterns should be flagged for investigation."
            ]
          },
          {
            "description": "A new service is created with a name, display name, or description that closely mimics a legitimate Windows service but has an incorrect executable path or a minor misspelling in its name.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standardized Server Builds (Golden Images), Endpoint Fleet, Configuration Management Database (CMDB)",
            "action": [
              "Symbolic: Maintain a strict baseline dictionary mapping all legitimate service names to their exact, authorized ImagePath. Monitor service creation events (7045, 4697) and alert on any new service whose name is in the baseline dictionary but whose ImagePath does not match the authorized path exactly.",
              "Statistical: For any new service name not found in the baseline, calculate the Levenshtein distance between the new name and all known legitimate service names. Alert on any service where the name has a string distance of 1 or 2 from a legitimate name, indicating potential typosquatting.",
              "Machine Learning: Train an autoencoder neural network on feature vectors from legitimate services (e.g., one-hot encoded name, path properties). A new service that produces a high reconstruction error when passed through the trained autoencoder is considered anomalous, as it does not conform to the learned patterns of normal services, and should be investigated."
            ]
          },
          {
            "description": "A service demonstrates an anomalous lifecycle, such as being created, started, and deleted within a very short timeframe, or crashing and restarting with unusual frequency.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 7036",
              "Windows Event ID 7034",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts, Software Deployment and Patch Management Servers",
            "action": [
              "Symbolic: Create a stateful detection rule that triggers when a service creation event (7045) is followed by a service deletion command (via sc.exe delete in event 4688) for the same service name on the same host within a 15-minute window.",
              "Statistical: For each service, track the time delta between start (7036) and stop/crash (7036, 7034) events. Use outlier detection methods (e.g., Z-score or Interquartile Range) to identify services whose runtime is anomalously short (e.g., < 3 standard deviations below the mean runtime for that service or service type) or services that restart more frequently than 99% of other services.",
              "Machine Learning: Model the sequence of service lifecycle events (e.g., Create, Start, Stop, Crash, Delete) for each host as a time series. Use an LSTM-based anomaly detection model to identify sequences of events that deviate from learned normal patterns, such as an unexpectedly rapid create-delete cycle not associated with a known software installer."
            ]
          },
          {
            "description": "A legitimate service host process, such as svchost.exe or dllhost.exe, spawns a suspicious child process (e.g., a command shell) or initiates network connections to rare, non-standard external destinations.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Network Gateways, DNS Resolvers, All Windows Hosts",
            "action": [
              "Symbolic: Create a high-priority alert for any process creation event (4688) where the parent process is svchost.exe, dllhost.exe, or services.exe, and the child process is cmd.exe, powershell.exe, cscript.exe, wscript.exe, or any binary running from a temporary or user-writable directory.",
              "Statistical: For each parent service host process (e.g., svchost.exe), build a baseline of all child processes it normally spawns and all destination ports/IPs it normally connects to. Alert when a new child process name appears that is not on the baseline or when a network connection is made to a destination IP with a low prevalence score (e.g., seen by < 0.1% of hosts).",
              "Machine Learning: Construct a graph where nodes are processes and IPs, and edges represent parent-child relationships or network connections. Use a community detection algorithm (e.g., Louvain Modularity) to identify normal behavior clusters. An edge from a service host process to a node outside its typical community (e.g., svchost.exe spawning a process that belongs to a 'developer tools' community) is a high-fidelity anomaly."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]