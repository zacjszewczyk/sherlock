[
  {
    "information_requirement": "Has the adversary gained initial access using valid accounts?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1078",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A successful remote authentication event (Logon Type 3 or 10) occurs using a username known to be part of a public or private credential breach dataset.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways), Domain Controllers",
            "action": [
              "Symbolic: Correlate usernames from successful remote logins (Windows Event ID 4624 with Logon Type 3 or 10) against a curated list of known breached credentials. Generate a high-severity alert upon a match.",
              "Statistical: For accounts appearing on breach lists, calculate the historical login failure rate (Event ID 4625) for that user. A sudden drop to zero failures coupled with a successful login (Event ID 4624) from a new IP or geolocation is a statistically significant indicator of a successful breach.",
              "Machine Learning: Use a supervised classification model (e.g., Logistic Regression) trained on features like (is_breached_credential, is_new_geolocation, login_hour, login_day_of_week) to predict the probability of a login being malicious. Alert on high-probability events."
            ]
          },
          {
            "description": "A single source IP address generates a high volume of failed authentication events (Logon Type 3 or 10) across numerous distinct user accounts within a short time frame.",
            "data_sources": [
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways), Domain Controllers",
            "action": [
              "Symbolic: From a single source IP, trigger an alert if the count of distinct failed usernames (Windows Event ID 4625) exceeds a static threshold (e.g., >20 accounts) within a 5-minute window.",
              "Statistical: Calculate the ratio of distinct failed accounts to distinct source IPs over a rolling 10-minute window. A ratio significantly exceeding the established baseline (e.g., > 3 standard deviations above the mean) indicates a password spraying attack.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on login events, using features like source IP, timestamp, and username. A dense cluster of failed logins from a single IP across many users will be identified as an anomalous cluster."
            ]
          },
          {
            "description": "A successful login by a valid account exhibits three or more concurrent anomalous properties, such as a rare source geolocation, an unusual time of day, and a novel user-agent string or source hostname.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, VPN Concentrators, User workstations",
            "action": [
              "Symbolic: For each successful login, check against a static list of 'impossible travel' conditions (e.g., login from USA at 14:00 and login from China at 14:30). An impossible travel event generates an immediate alert.",
              "Statistical: For each user, maintain a baseline of normal login features (source country, ISP, hour of day, day of week). For each new login, calculate a risk score by summing Z-scores for each feature's deviation from its norm. A cumulative score exceeding a predefined threshold indicates a high-risk login.",
              "Machine Learning: Employ an unsupervised anomaly detection model (e.g., Isolation Forest) trained on historical login data for each user. The model learns a user's normal 'login fingerprint'. Any new login that the model scores as a significant outlier should be flagged for review."
            ]
          },
          {
            "description": "A valid, non-administrative user account successfully authenticates to a critical system (e.g., domain controller, financial server) for the first time.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical application servers (e.g., HR, Finance), Domain Controllers, Code repositories",
            "action": [
              "Symbolic: Maintain a list of user-to-critical-asset pairings that are authorized. Alert on any successful login (Windows Event ID 4624) to a critical asset that is not on the pre-approved access list for that user's role.",
              "Statistical: For each user, maintain a frequency distribution of systems they log into. A login to a system with a historical frequency of zero for that user, especially if that system is in the top 10% of criticality, should be flagged as a 'first-time access' statistical alert.",
              "Machine Learning: Use graph analytics to model user-to-asset relationships. Apply a community detection algorithm to identify clusters of users and the assets they typically access (e.g., 'Marketing Team' and 'Marketing SharePoint'). A login that creates an edge between a user and an asset in a different community is anomalous and should be alerted."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using valid accounts?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1078",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A successful remote login (Logon Type 3 or 10) originates from an IP address present on a high-fidelity threat intelligence feed of known C2 servers or malicious infrastructure.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators, RDP Gateways, Firewall and proxy servers",
            "action": [
              "Symbolic: Perform a real-time lookup of the source IP address from every successful remote login event (Windows Event ID 4624, Logon Type 3 or 10) against a threat intelligence platform's list of known malicious IPs. An exact match triggers a high-severity alert.",
              "Statistical: Enrich source IPs with metadata (ASN, country, reputation score). Calculate the baseline reputation score distribution for all logins. An IP with a reputation score in the lowest percentile (e.g., bottom 5%) that successfully authenticates is a statistically significant anomaly.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on IP address features (ASN, geolocation, threat intel tags, historical login success/failure ratio from this IP) to predict if an IP is part of malicious infrastructure. Use the model to score all incoming login source IPs in real-time."
            ]
          },
          {
            "description": "A new scheduled task or service is created (Windows Event ID 4698 or 7045) that executes a command containing obfuscated scripts, LoLBins with suspicious parameters, or establishes a network connection to a non-standard external domain.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 7045",
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain Controllers",
            "action": [
              "Symbolic: Scan command-line arguments in task/service creation events (4698, 7045) for high-risk keywords like 'powershell -enc', 'rundll32.exe javascript:', or '-urlcache'. A match generates an alert.",
              "Statistical: Calculate the Shannon entropy of command-line arguments in all new scheduled tasks. A command with an entropy score significantly higher than the baseline average (e.g., > 3 standard deviations) suggests obfuscation or encoding and should be investigated.",
              "Machine Learning: Use a Natural Language Processing (NLP) model, like a pre-trained transformer, fine-tuned on a dataset of benign and malicious command lines. The model can classify newly created task commands as 'suspicious' or 'benign' based on their structure and content."
            ]
          },
          {
            "description": "An account with no login activity for an extended period (e.g., > 90 days) suddenly exhibits successful logins, especially if these logins occur at regular, automated intervals.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Legacy application servers",
            "action": [
              "Symbolic: Maintain a dynamic list of dormant accounts (last login > 90 days). Trigger a high-severity alert on any successful login event (Windows Event ID 4624) from an account on this list.",
              "Statistical: For accounts that become active after a dormant period, analyze the inter-arrival time (time between logins) of subsequent logins. A low variance or standard deviation in these times indicates a periodic, automated process (beaconing), unlike human activity.",
              "Machine Learning: Apply a time-series anomaly detection model (e.g., SARIMA or Prophet) to the login events for each user. A sudden burst of activity on a previously flat time-series (dormant account) will be flagged as a structural break or anomaly."
            ]
          },
          {
            "description": "A single non-administrative user account is observed initiating multiple remote connections (Logon Type 3 or 10) from a single source workstation to numerous other distinct hosts on the network in a hub-and-spoke pattern.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4648"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Jump servers, Internal network segments",
            "action": [
              "Symbolic: If a single user account is the source of successful remote logins (Type 3 or 10) to more than a static threshold of hosts (e.g., > 10) within one hour from a non-jump-server source, generate an alert.",
              "Statistical: For each user, establish a baseline for the number of distinct destination hosts they connect to per day. An event where a user connects to a number of hosts exceeding the 99th percentile of their own historical behavior is a statistical anomaly.",
              "Machine Learning: Construct a user-to-host login graph for the network. Use a centrality algorithm (e.g., PageRank) to find nodes (users or hosts) that become unusually central pivot points. A sudden increase in a user's 'betweenness centrality' score indicates their account is being used for lateral movement."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary achieved privilege escalation using valid accounts?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1078",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A default vendor account or a designated service account is used for a successful interactive (Logon Type 2) or remote interactive (Logon Type 10) login.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application servers, Network appliances",
            "action": [
              "Symbolic: Create a watch list of all service account and default account names. Trigger a high-severity alert for any successful login (Windows Event ID 4624) where the TargetUserName is on the watch list AND the LogonType is 2 or 10.",
              "Statistical: Profile the LogonType distribution for all accounts. For accounts identified as service accounts, the historical frequency of Logon Types 2 and 10 should be zero. Any non-zero occurrence is a statistically significant deviation requiring an alert.",
              "Machine Learning: Train a simple classifier (e.g., Naive Bayes) on account features (name pattern, group memberships, description) to predict if an account is a 'service account' or 'user account'. For any account classified as a service account, apply a rule-based check for interactive logins."
            ]
          },
          {
            "description": "A user account is added to a high-privilege security group (e.g., Domain Admins), and this is followed within a short time window by that same account performing a login.",
            "data_sources": [
              "Windows Event ID 4728",
              "Windows Event ID 4732",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: Create a stateful correlation rule: IF (Event ID 4728 OR 4732 into a privileged group for User 'X') THEN watch for (Event ID 4624 for User 'X') within the next 60 minutes. If the second event occurs, trigger a critical alert.",
              "Statistical: Calculate the mean-time-to-login after a privilege group change during normal administrative activity. An instance where a user logs in significantly faster than this baseline (e.g., < 5th percentile of the mean-time) after being added to a group is suspicious.",
              "Machine Learning: Use a sequence analysis model to learn common sequences of administrative events. The sequence [User 'A' adds User 'B' to 'Domain Admins' -> User 'B' logs into DC] is a known attack pattern that the model can flag as high-risk, especially if User 'A' is not a designated administrator."
            ]
          },
          {
            "description": "Anomalous process activity indicative of credential dumping (e.g., non-system process accessing lsass.exe) on a host is followed by the user account associated with that host being used for novel remote access to other systems.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4648"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Domain Controllers",
            "action": [
              "Symbolic: IF (a non-system process accesses `lsass.exe` on Host 'A' owned by User 'X') THEN watch for (Event ID 4624 or 4648 from User 'X' to a new host) within the next 24 hours. A successful correlation triggers a high-severity alert.",
              "Statistical: After a credential dumping alert on a host, monitor the associated user's 'fan-out' of new system connections. If the number of new systems accessed by the user in the next hour exceeds the 99th percentile of their normal hourly new-system-access rate, flag it as probable credential abuse.",
              "Machine Learning: Train a model to predict the probability of lateral movement given a source event. An alert from a credential-dumping tool would be a powerful feature. The model would learn that P(Lateral_Movement | Credential_Dump_Alert) is much greater than P(Lateral_Movement), flagging subsequent remote access by that user with high confidence."
            ]
          },
          {
            "description": "An anomalously high number of distinct user accounts successfully log into a single host, especially a user workstation, within a short period.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations",
            "action": [
              "Symbolic: For any host that is not a designated jump server or terminal server, trigger an alert if the count of distinct users successfully logging in (Event ID 4624) exceeds a static threshold (e.g., > 5 users) within a 1-hour window.",
              "Statistical: Establish a statistical baseline for the number of distinct daily logins for each host. Use a Z-score or modified Z-score to detect outliers. A host whose daily distinct user count is more than 3 standard deviations above its mean is highly anomalous.",
              "Machine Learning: Use a clustering algorithm (e.g., K-Means) to segment hosts into profiles based on login patterns (e.g., 'single-user workstations', 'multi-user servers'). If a host suddenly moves from the 'single-user' cluster to the 'multi-user' cluster, flag it for investigation as its role has anomalously changed."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using valid accounts?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1078",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A process is created (Windows Event ID 4688) under a valid user's context, and the SHA256 or MD5 hash of the process executable matches an entry in a threat intelligence database of known malware.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Servers",
            "action": [
              "Symbolic: For every process creation event (Windows Event ID 4688 with hash logging enabled), perform a real-time hash lookup against a malware hash database. An exact match triggers a critical alert.",
              "Statistical: Analyze the prevalence of process hashes across the enterprise. A hash that is extremely rare (e.g., seen on only one machine) and is not signed by a trusted publisher is statistically suspicious and should be prioritized for sandbox analysis.",
              "Machine Learning: Use a machine learning model provided by an EDR vendor or a custom model trained on PE file features to classify unknown executables. The model can provide a 'maliciousness score' for new hashes, allowing detection of novel malware variants."
            ]
          },
          {
            "description": "A legitimate, signed Windows binary (e.g., certutil.exe, rundll32.exe) is executed with a command-line structure and arguments that are strongly indicative of malicious activity, such as downloading remote files or executing scriptlets.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Servers",
            "action": [
              "Symbolic: Apply a library of regular expressions to the command line field of process creation events (4688) to detect known LoLBin abuse patterns (e.g., `certutil.exe -urlcache -split -f`). A match triggers a high-severity alert.",
              "Statistical: For each LoLBin, baseline the frequency of different command-line arguments. An argument or combination of arguments that is historically rare (e.g., in the bottom 1% of usage frequency) for a specific binary like `powershell.exe` is suspicious.",
              "Machine Learning: Train a classifier (e.g., an LSTM or Transformer model) on sequences of command-line arguments to distinguish between benign and malicious usage of system utilities. The model can learn the context and structure of malicious commands beyond simple keyword matching."
            ]
          },
          {
            "description": "Network connections originating from a process under a valid user account exhibit C2 characteristics, such as periodic connections with low-variance intervals (beaconing), high Shannon entropy in the payload, or communication with a newly registered domain.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, User workstations",
            "action": [
              "Symbolic: Correlate process start events (4688) with subsequent DNS requests (Zeek dns.log). If a process requests a domain that was registered within the last 30 days, flag the connection as suspicious.",
              "Statistical: For a given source-destination pair, analyze the time delta between connections in Zeek conn.log. A time series with a very low standard deviation indicates machine-like beaconing. Additionally, calculate the entropy of DNS query names; high entropy can indicate Domain Generation Algorithms (DGA).",
              "Machine Learning: Use a time-series anomaly detection model on connection logs (bytes sent, bytes received, duration) to identify patterns that deviate from normal user web browsing. Models can detect the small, regular 'heartbeat' of C2 channels."
            ]
          },
          {
            "description": "A valid service account, which normally only generates non-interactive logins (e.g., Logon Type 5 - Service), is used for an interactive (Logon Type 2) or remote interactive (Logon Type 10) login, indicating an adversary is masquerading as a legitimate automated process.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers",
            "action": [
              "Symbolic: Maintain a list of all accounts designated as service accounts. Create a rule to alert on any instance where an account on this list generates a successful login event (Windows Event ID 4624) with a LogonType of 2 or 10.",
              "Statistical: For each account, create a profile of its typical LogonType usage. Any account that has a historical LogonType distribution of 99%+ Type 5 and suddenly generates a Type 2 or 10 login is a major statistical outlier requiring immediate investigation.",
              "Machine Learning: Train a behavioral model for each account based on a feature set including LogonType, source hostname, and time of day. An interactive login from a service account will be flagged by an unsupervised anomaly detector (e.g., Isolation Forest) as a severe deviation from its learned 'normal' behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]