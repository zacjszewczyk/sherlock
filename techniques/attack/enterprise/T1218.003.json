[
  {
    "information_requirement": "Has an adversary abused the Microsoft Connection Manager Profile Installer (CMSTP.exe) for defense evasion on the enterprise network?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.003",
        "name": "CMSTP",
        "evidence": [
          {
            "description": "Execution of cmstp.exe with command-line arguments referencing an INF file that is associated with a known malicious hash or subsequently initiates a network connection to a destination on a threat intelligence blocklist.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1: Process Creation",
              "Sysmon Event ID 3: Network Connection",
              "Sysmon Event ID 7: Image Loaded",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress Points/Gateways",
            "action": [
              "Symbolic: Create a rule that triggers on cmstp.exe process creation (Sysmon Event ID 1) that loads a DLL from a remote server (Sysmon Event ID 7) or makes a network connection (Sysmon Event ID 3) to an IP or domain present in a threat intelligence feed. Correlate with Zeek conn.log and dns.log for external validation.",
              "Statistical: For domains requested by cmstp.exe (via Zeek dns.log), calculate a risk score based on statistical properties such as domain age, public suffix rarity (e.g., .xyz, .top), and the historical query frequency for that domain across the enterprise. Alert on domains with a risk score exceeding a percentile threshold (e.g., 98th percentile).",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on labeled process execution and network data. Features should include command-line arguments, parent process, loaded modules (DLLs), destination IP/domain reputation, and connection protocol. The model will classify cmstp.exe activity as benign or malicious."
            ]
          },
          {
            "description": "Execution of cmstp.exe with the '/au' command-line switch, followed by process access events targeting CMLUA.dll or registry modifications related to CMSTPLUA or CMLUAUTIL COM objects, indicating a UAC bypass attempt.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1: Process Creation",
              "Sysmon Event ID 10: Process Access",
              "Sysmon Event ID 12: Registry Event (Create and Delete)",
              "Sysmon Event ID 13: Registry Event (Value Set)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Privileged Access Workstations",
            "action": [
              "Symbolic: Create a high-fidelity detection rule that correlates a cmstp.exe process creation event (Sysmon Event ID 1) with the '/au' argument, immediately followed by a process access event (Sysmon Event ID 10) where the CallTrace contains CMLUA.dll, or a registry modification event (Sysmon Event ID 12/13) where the TargetObject contains the CLSID for CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) or CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).",
              "Statistical: Establish a baseline for the frequency of the '/au' switch usage with cmstp.exe per user and per host. An execution on a host or by a user that has never used this switch before, or where the frequency deviates more than 3 standard deviations from the established norm, should be flagged for review.",
              "Machine Learning: Implement a sequence analysis model (e.g., Hidden Markov Model) to detect the specific state transitions characteristic of the UAC bypass: [State 1: cmstp.exe /au created] -> [State 2: CMLUA.dll accessed by cmstp.exe] -> [State 3: Elevated process spawned]. The model would be trained on event sequences to identify this malicious pattern with a high probability."
            ]
          },
          {
            "description": "Execution of cmstp.exe originating from a parent process other than explorer.exe or cmd.exe (e.g., WINWORD.EXE, OUTLOOK.EXE, powershell.exe) or from a file path outside of C:\\Windows\\System32.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1: Process Creation"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers",
            "action": [
              "Symbolic: Create a rule to alert on any cmstp.exe process creation (Sysmon Event ID 1) where the ParentImage is not 'C:\\Windows\\explorer.exe' or 'C:\\Windows\\System32\\cmd.exe' OR where the Image path is not 'C:\\Windows\\System32\\cmstp.exe'.",
              "Statistical: For all cmstp.exe executions, calculate the frequency of each ParentImage name across the enterprise over a 30-day rolling window. Flag any execution where the parent process falls into the bottom 5% of observed frequencies, indicating a rare parent-child relationship.",
              "Machine Learning: Use an anomaly detection algorithm like an Isolation Forest on process creation events. Features should include ParentImage path, Image path, and user context. The model will learn the profile of normal executions and assign a higher anomaly score to executions from unusual parents or locations."
            ]
          },
          {
            "description": "Execution of cmstp.exe that spawns a suspicious child process (e.g., powershell.exe, wscript.exe, rundll32.exe) or initiates network connections exhibiting beaconing characteristics.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1: Process Creation",
              "Sysmon Event ID 3: Network Connection",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Network Egress Points/Gateways",
            "action": [
              "Symbolic: Alert on any process creation event (Sysmon Event ID 1) where the ParentImage is 'cmstp.exe' and the child Image is in a predefined list of suspicious processes (e.g., powershell.exe, cmd.exe, wscript.exe, cscript.exe, rundll32.exe, mshta.exe).",
              "Statistical: Analyze network connections (Sysmon Event ID 3, Zeek conn.log) originating from cmstp.exe or its direct children. Calculate the standard deviation of connection intervals (jitter) and data volume per connection. A very low standard deviation in time intervals and packet sizes is indicative of automated beaconing and should be flagged.",
              "Machine Learning: Apply graph-based analytics to process lineage data. Construct a process graph with cmstp.exe as a potential root node. Use a graph anomaly detection algorithm to identify subgraphs with unusual structures, such as a cmstp.exe node spawning a chain of processes or initiating multiple, seemingly unrelated network connections."
            ]
          },
          {
            "description": "An INF file is created in a temporary or user-writable directory (e.g., %TEMP%, %APPDATA%), referenced by a cmstp.exe execution, and then deleted within a short time window (e.g., less than 60 seconds).",
            "data_sources": [
              "Sysmon Event ID 11: File Create",
              "Sysmon Event ID 1: Process Creation",
              "Sysmon Event ID 23: File Delete"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers",
            "action": [
              "Symbolic: Create a stateful correlation rule that detects the following sequence for the same filename within 60 seconds: 1. Sysmon Event 11 (File Create) for a file with a '.inf' extension in a user-writable path. 2. Sysmon Event 1 (Process Creation) for cmstp.exe where the command line contains the INF filename. 3. Sysmon Event 23 (File Delete) for the same INF file.",
              "Statistical: For all INF files created on endpoints, calculate the lifetime of the file (delete time - create time). Establish a baseline distribution of these lifetimes. Flag any INF file whose lifetime falls in the bottom 1st percentile (e.g., lifetime < 5 seconds) as highly suspicious.",
              "Machine Learning: Train a time-series based recurrent neural network (RNN) or LSTM model on sequences of file and process events per host. The model can learn the temporal patterns associated with legitimate software installation vs. malicious 'living-off-the-land' script execution and flag the rapid create-execute-delete pattern as an anomaly."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]