[
  {
    "information_requirement": "Has the adversary gained initial access using compromised local accounts?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A successful remote login (Logon Type 3 or 10) by a local account where the source IP address is present on a threat intelligence feed, originates from a statistically rare geolocation for that account, or is classified as anomalous by a machine learning model.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Perimeter Firewalls, VPN Concentrators, Public-Facing Application Servers, Remote Desktop Gateway Servers",
            "action": [
              "Symbolic (Rule-Based): Join Windows Event ID 4624 (Logon Type 3 or 10) with Zeek conn.log on timestamp and IP addresses. Filter for local account logins where the remote IP address exists in a high-confidence threat intelligence feed (e.g., known C2, scanner, TOR exit node). Generate a high-severity alert for any match.",
              "Statistical (Frequency Analysis): For each local account, establish a 90-day baseline of source countries and source Autonomous System Numbers (ASN) from GeoIP enrichment of Zeek conn.log data. Calculate the frequency distribution. For new remote logins, flag any login from a country or ASN that falls below the 1st percentile of historical frequency for that specific account or for all local accounts globally.",
              "Machine Learning (Classification): Train a logistic regression or random forest classifier on historical login data (Event ID 4624 enriched with GeoIP and ASN data). Features should include: time of day, day of week, source country, source ASN, and a binary feature for IP presence on a threat feed. The model will output a probability score (0.0 to 1.0) for each login being malicious, flagging those above a threshold (e.g., 0.85)."
            ]
          },
          {
            "description": "A measurable spike in failed login attempts (Windows Event ID 4625) using common or default local account names, immediately followed by a successful login (Windows Event ID 4624) for one of those accounts from the same source.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Public-Facing Web Servers, Domain Controllers",
            "action": [
              "Symbolic (Rule-Based): Monitor Windows Event IDs 4624 and 4625 for login attempts where the TargetUserName matches a predefined list of default or high-risk local account names (e.g., 'admin', 'guest', 'support', 'test'). Alert if a source IP generates >20 failures (4625) across these names in 5 minutes, followed by a success (4624).",
              "Statistical (Ratio Analysis): For each external source IP over a 10-minute window, calculate the ratio of failed logins (4625) to successful logins (4624) targeting local accounts. A ratio exceeding 50:1, coupled with a high count of unique accounts targeted (>10), indicates a likely credential stuffing or spraying attack and should be alerted.",
              "Machine Learning (Clustering): Use a clustering algorithm like DBSCAN on login attempt data, with features such as source IP, user agent string, and time between attempts. This can group together distributed, low-and-slow attacks that may not trigger simple volumetric thresholds, identifying them as a coordinated campaign."
            ]
          },
          {
            "description": "A successful remote login (Windows Event ID 4624) occurs from a geolocation that is physically impossible to reach in the time elapsed since the account's last known login location.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators, Remote Desktop Gateways, Cloud IAM Services, Geolocation Database",
            "action": [
              "Symbolic (Velocity Check): For each successful remote login (Event ID 4624, Logon Type 3/10), retrieve the timestamp and geolocated source IP. Compare with the previous successful login for the same account. If (distance between locations) / (time between logins) > 600 mph, generate a high-severity 'Impossible Travel' alert.",
              "Statistical (Probabilistic Modeling): For each local account, model its historical login geolocations using a Gaussian Mixture Model (GMM). A new login from a location with a very low probability density under this model (e.g., in the bottom 1% of likelihoods) is flagged as a geographic anomaly, even if it does not trigger the impossible travel rule.",
              "Machine Learning (Time-Series Anomaly): For each user, model the sequence of login events (timestamp, latitude, longitude) using an LSTM autoencoder. A new login event that results in a high reconstruction error indicates a deviation from the user's established pattern of life and is flagged as anomalous."
            ]
          },
          {
            "description": "A high count of unique local accounts each experience a single failed login attempt (Windows Event ID 4625) from one or a few source IPs within a short time frame, indicative of password spraying.",
            "data_sources": [
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS Servers, Member Servers with remote access",
            "action": [
              "Symbolic (Threshold Rule): Aggregate Windows Event ID 4625 by source IP over a 15-minute window. If a single source IP generates failed logins for more than 20 unique local accounts, and the failure count for each of those accounts is low (e.g., 1-3), generate a 'Password Spraying' alert.",
              "Statistical (Ratio Analysis): For each source IP, calculate the ratio of unique target local accounts to the total number of failed logins (Event ID 4625) in a 10-minute window. A ratio approaching 1.0 (e.g., > 0.9) is a strong indicator of password spraying, where one password is tried against many accounts.",
              "Machine Learning (Unsupervised Clustering): Group source IPs based on their login failure patterns, using features like total failures, number of unique targets, and time of day. This can identify clusters of IPs that are part of a distributed password spraying attack, even if no single IP crosses a simple threshold."
            ]
          },
          {
            "description": "A local account creation event (Windows Event ID 4720) is followed within 60 minutes by a successful remote login (Windows Event ID 4624, Logon Type 3 or 10) from an external IP for that same newly created account.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Servers, Bastion Hosts",
            "action": [
              "Symbolic (Event Correlation): Create a rule that triggers when a Windows Event ID 4720 for a new local account is followed by a Windows Event ID 4624 for the same account (matched on TargetUserName) within one hour, where the Logon Type is 3 or 10 and the source IP is external.",
              "Statistical (Rate Analysis): Track the rate of new local account creations per hour across the environment. A sudden spike above the 95th percentile of the hourly creation rate, especially when followed by remote logins, indicates abnormal activity that warrants investigation.",
              "Machine Learning (Sequence Mining): Use a sequence pattern mining algorithm to find rare but significant event sequences. The pattern `(Event 4720 -> Event 4624 from external IP)` would be flagged if its support/confidence becomes anomalously high in a given time window, suggesting a potential scripted attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using compromised local accounts?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A process (Windows Event ID 4688) running under a local account context has a file hash matching a threat feed or initiates a network connection (from Zeek logs) to a known malicious destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, DNS Resolvers, Network Egress Points",
            "action": [
              "Symbolic (IOC Matching): Join process creation events (Event ID 4688) with network connection logs (Zeek conn.log) on IP/port/timestamp. Alert if a process running as a local account either has a file hash present in a malware database or connects to a destination IP/domain on a C2 threat intelligence feed.",
              "Statistical (Prevalence Analysis): For all processes running under local accounts and making external network connections, calculate the enterprise-wide prevalence of their file hashes. A process hash with very low prevalence (e.g., seen on < 5 hosts) is anomalous and should be investigated.",
              "Machine Learning (DGA Detection): Analyze DNS queries (Zeek dns.log) originating from processes run by local accounts. Apply a trained classifier or a model that analyzes domain characteristics (e.g., entropy, n-gram frequency, length) to detect algorithmically generated domains (DGAs) used for C2 communications."
            ]
          },
          {
            "description": "A local account creates or modifies a persistence mechanism, such as a scheduled task (Event ID 4698/4702) or startup registry key, with a command line containing obfuscation, LOLBins, or execution from a non-standard path.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts, especially Servers and Developer Workstations",
            "action": [
              "Symbolic (Regex Matching): Monitor scheduled task creation/update events (4698, 4702) and associated process creation events (4688). Apply regular expressions to the command-line arguments to detect patterns like 'powershell.exe -enc', 'mshta.exe http://', or execution of scripts from abnormal locations like '%TEMP%' or 'C:\\Users\\Public'.",
              "Statistical (Entropy Analysis): Calculate the character entropy of the command-line arguments in newly created scheduled tasks. A value significantly higher than the baseline average for legitimate tasks (e.g., > 3 standard deviations) suggests obfuscated or encoded commands and should be flagged.",
              "Machine Learning (NLP Classification): Train a text classifier (e.g., using TF-IDF and a Naive Bayes model) on a labeled dataset of benign and malicious command lines. Use this model to score all new scheduled task commands, alerting on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "A local account with no login activity for over 90 days suddenly exhibits regular, periodic remote login activity (Windows Event ID 4624), suggesting automated access.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, VPN Logs, Server Authentication Logs",
            "action": [
              "Symbolic (Dormancy Rule): Maintain a dynamic list of 'dormant' local accounts (LastLogonTimestamp > 90 days). Generate a high-severity alert for any successful remote login (Event ID 4624, Logon Type 3 or 10) by an account on this list.",
              "Statistical (Cadence Analysis): For remote logins from previously dormant accounts, analyze the time intervals between the first three or more logins. A low standard deviation in these time intervals (e.g., logging in every 24 hours +/- 5 minutes) suggests an automated C2 beacon and should be alerted.",
              "Machine Learning (Time-Series Forecasting): For all accounts, model their login history as a time series. Use a model like Prophet or an LSTM to forecast future login windows. A login from a dormant account will represent a massive deviation from the forecast (which would predict no activity), flagging it as a high-risk anomaly."
            ]
          },
          {
            "description": "A local account is added to a high-privilege local group (e.g., 'Administrators', 'Remote Desktop Users') via Event ID 4732, and this action is not correlated with an authorized change request ticket.",
            "data_sources": [
              "Windows Event ID 4732",
              "Windows Event ID 4756",
              "Windows Event ID 4728"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Workstations",
            "action": [
              "Symbolic (High-Fidelity Rule): Generate an immediate, high-severity alert for any Windows Event ID 4732 ('A member was added to a security-enabled local group') where the 'Group Name' is 'Administrators', 'Remote Desktop Users', or another defined privileged group.",
              "Statistical (Behavioral Baselining): For each administrator, establish a baseline for the number and type of group modification events they perform per week. An administrator account suddenly adding local accounts to privileged groups at a rate that exceeds the 95th percentile of their normal behavior is anomalous.",
              "Machine Learning (Graph Anomaly Detection): Model users, groups, and memberships as a graph. An anomaly detection algorithm can identify structural changes that are improbable, such as a low-privilege local account node suddenly forming an edge to a high-centrality 'Administrators' group node."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using compromised local accounts?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A process creation (Windows Event ID 4688) by a non-administrative local account where the executable's file hash matches a known privilege escalation exploit tool (e.g., JuicyPotatoNG, PrintNightmare exploit).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts, especially unpatched systems",
            "action": [
              "Symbolic (Hash Matching): For every process creation event (4688) initiated by a local account not in the 'Administrators' group, compare the executable's file hash against a curated CTI feed of known privilege escalation tool hashes. Alert on any match.",
              "Statistical (Parent-Child Analysis): Profile legitimate parent-child process relationships. A statistically rare relationship, such as a web server process (`w3wp.exe`) or the print spooler (`spoolsv.exe`) spawning `cmd.exe` or `powershell.exe` under a local account's context, is a strong indicator of exploit activity.",
              "Machine Learning (Classification): Train a classifier on process creation event features (process name, parent name, user context, command line arguments, binary signature status) to identify privilege escalation attempts. This can detect novel or unknown tools with characteristics similar to known ones."
            ]
          },
          {
            "description": "A non-administrative local account executes a known UAC bypass sequence, such as modifying a specific registry key and then launching an auto-elevating Windows binary like `fodhelper.exe` or `computerdefaults.exe`.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations and Servers",
            "action": [
              "Symbolic (Sequence Detection): Use a complex event processing (CEP) rule to detect the specific sequence: 1) a process modifies a registry key like `HKCU:\\Software\\Classes\\ms-settings\\shell\\open\\command`, followed by 2) the execution of `fodhelper.exe` by the same process ID within 2 seconds.",
              "Statistical (Frequency Analysis): Monitor the frequency of modifications to registry keys known to be associated with UAC bypass techniques. A modification to one of these keys by a process running under a local account is a statistical anomaly, as they are rarely touched in normal operations.",
              "Machine Learning (Sequence Mining): Utilize a sequence pattern mining algorithm on process, registry, and file system events. Flag sequences that have a low probability of occurring based on historical data but contain events known to be part of UAC bypass chains."
            ]
          },
          {
            "description": "A local account successfully adds itself or another local account to a privileged local group, such as 'Administrators', logged by Windows Event ID 4732.",
            "data_sources": [
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, All Windows Servers and Workstations",
            "action": [
              "Symbolic (Self-Addition Rule): Generate an immediate, critical-severity alert on Windows Event ID 4732 where the 'Group Name' is 'Administrators' and the SID of the 'Member' being added is the same as the SID of the 'Subject' who performed the action, indicating a successful self-elevation.",
              "Statistical (Peer Group Analysis): For an event where a local account is added to an admin group, compare the 'Subject' (the actor) to its peer group (e.g., other non-admin users). If this user is the only one in its peer group performing this action, it is a statistical outlier warranting investigation.",
              "Machine Learning (Graph Anomaly): Model the user-group membership graph. A machine learning model can learn the probabilities of certain nodes (users) creating edges to other nodes (groups). An edge creation event with a very low learned probability, such as a local service account adding itself to 'Domain Admins', is flagged as a high-risk anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using compromised local accounts?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A local account executes commands to stop or delete security services (`sc.exe`), modify firewall rules (`netsh.exe`), or clear critical event logs (`wevtutil.exe cl Security`), or Event ID 1102 is generated.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1102"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts",
            "action": [
              "Symbolic (Keyword/Event ID Matching): Alert immediately on the generation of Windows Event ID 1102 (The audit log was cleared). Additionally, create regex rules on process command lines (Event ID 4688) to detect the use of `wevtutil.exe cl`, `sc.exe stop/delete` on security services, or `netsh.exe advfirewall` to disable the firewall.",
              "Statistical (Service Stoppage): Monitor for the termination of critical security processes (e.g., `MsMpEng.exe`, `Sysmon64.exe`, EDR agent processes). A termination not associated with a known good software update process is a statistical anomaly. Correlate the timing with activity from a recently used local account.",
              "Machine Learning (NLP Intent Classification): Use a pre-trained NLP model on command-line arguments from processes run by local accounts. Classify the 'intent' of the command. Flag any command whose intent is classified as 'Disable Security Control' or 'Clear Logs' for immediate review."
            ]
          },
          {
            "description": "A local account executes a legitimate Windows binary (LOLBin) from an atypical file path or with an unusual combination of command-line arguments known to be used for malicious purposes.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts",
            "action": [
              "Symbolic (LOLBin Pattern Matching): Maintain and apply a library of regular expressions to detect known malicious usage of LOLBins by local accounts, such as `certutil.exe -urlcache -f http://...` for downloading files, or `rundll32.exe` executing JavaScript payloads.",
              "Statistical (Baseline Deviation): For each common LOLBin, establish a baseline of normal behavior including parent processes, command-line argument structure, and execution path. Alert when a local account executes a LOLBin in a manner that deviates significantly (e.g., >3 standard deviations) from this baseline, such as being spawned by an Office application or running from `C:\\Perflogs`.",
              "Machine Learning (One-Class SVM): For each LOLBin, train a One-Class Support Vector Machine (OC-SVM) on features from millions of benign execution events (command line entropy, argument count, parent process, etc.). This model creates a boundary around 'normal.' Any new execution by a local account that falls outside this boundary is flagged as a novel and potentially malicious anomaly."
            ]
          },
          {
            "description": "A process running under a local account, which is not a standard web browser or updater, initiates a direct-to-IP connection or a connection to a domain with a high DGA score, bypassing typical user-based network controls.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Resolvers, All Endpoints",
            "action": [
              "Symbolic (Rule-Based): Join process data (4688) with network data (Zeek conn.log). Alert if a process running as a local account (and is not on an allow-list of browsers/updaters) makes a network connection where the destination IP is on a threat intel feed or there was no preceding DNS query (direct-to-IP connection).",
              "Statistical (Data Volume Anomaly): For each process running as a local account, baseline the typical volume of data sent/received per hour. Use a percentile-based threshold (e.g., alert if hourly data sent exceeds the 99th percentile) to detect potential data exfiltration.",
              "Machine Learning (Time-Series Forecasting): For each host, use a time-series model (e.g., ARIMA) to forecast its expected outbound network traffic volume. A significant, unexplained deviation between the forecast and the actual traffic, correlated with activity from a local account, can indicate C2 beaconing or exfiltration."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]