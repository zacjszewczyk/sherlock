[
  {
    "information_requirement": "Has the adversary gained initial access using compromised local accounts?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A successful remote login (Logon Type 3 or 10) by a local account where the source IP address is present on a high-confidence threat intelligence feed, originates from a statistically rare geolocation for that account, or is classified as anomalous by a machine learning model.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Perimeter Firewalls, VPN Concentrators, Public-Facing Application Servers, Remote Desktop Gateway Servers, Cloud IAM Services",
            "action": [
              "Correlate successful remote logins (Windows Event ID 4624 with Logon Type 3 or 10) with network connection logs (Zeek conn.log) by timestamp and IP addresses. Generate a high-severity alert if the source IP address matches an entry in a threat intelligence feed of known malicious IPs.",
              "For each local account, establish a 90-day baseline of source countries and Autonomous System Numbers (ASNs) from GeoIP enrichment of Zeek conn.log data. For each new remote login, calculate the historical frequency of its source country/ASN. Flag any login from a country or ASN that falls below the 1st percentile of historical frequency for that specific account.",
              "Train a random forest classifier using historical login data (Event ID 4624 enriched with GeoIP and ASN data from Zeek). Features should include: hour of day (as sine/cosine transform), day of week, source country, source ASN, and a binary feature for IP presence on a threat feed. The model will output a probability score from 0.0 to 1.0 for each login being malicious, flagging those above a dynamically tuned threshold (e.g., 0.85)."
            ]
          },
          {
            "description": "A series of failed login attempts (Windows Event ID 4625) from a single source IP address targeting multiple local accounts, which cease upon a successful login (Windows Event ID 4624) from that same IP to one of the targeted accounts within a 5-minute window.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Public-Facing Web Servers, Domain Controllers, Bastion Hosts",
            "action": [
              "Create a stateful rule that monitors a source IP address. If the IP generates more than 20 failed logins (Event ID 4625) across a list of common local account names ('admin', 'guest', 'support', 'test') within 5 minutes, and is then immediately followed by a successful login (Event ID 4624) from the same IP, generate a critical alert for a successful brute-force attack.",
              "Over a 10-minute sliding window, calculate two metrics for each external source IP: the count of unique local accounts with failed logins (Event ID 4625) and the total count of failed logins. If the ratio of unique accounts to total failures is low (< 0.2) but the total failure count is high (> 50), it indicates a brute-force against one account. If the ratio is high (> 0.9), it indicates a password spray. Alert on either condition if followed by a success (Event ID 4624).",
              "Apply a DBSCAN clustering algorithm to login attempt data (Event IDs 4624, 4625). Use features such as source IP, target username, and time between attempts. This will group together login attempts from multiple, disparate IPs that are part of a coordinated, low-and-slow brute-force or password spraying campaign which may not trigger volumetric thresholds for a single IP."
            ]
          },
          {
            "description": "A successful remote login (Windows Event ID 4624, Logon Type 3 or 10) occurs from a geolocated IP address that is physically impossible for the user to have traveled to since their last known login location and time.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators, Remote Desktop Gateways, Cloud IAM Services, Geolocation Database",
            "action": [
              "For each successful remote login (Event ID 4624, Logon Type 3/10), retrieve the timestamp and geolocated source IP. Compare this to the timestamp and location of the previous successful login for the same account. Calculate the required travel speed. If the speed exceeds a physically impossible threshold (e.g., 600 mph or 965 km/h), generate a high-severity 'Impossible Travel' alert.",
              "For each local account, model its historical login geolocations using a Gaussian Mixture Model (GMM) to identify clusters of normal activity (e.g., office, home). A new login from a location that has a very low probability density under this model (e.g., in the bottom 1% of likelihoods) is flagged as a geographic anomaly, even if it does not trigger a velocity check.",
              "Model the sequence of each user's login events (timestamp, latitude, longitude) using a Long Short-Term Memory (LSTM) autoencoder. A new login event that results in a high reconstruction error from the model indicates a significant deviation from the user's established pattern of life and sequential travel behavior, flagging it as anomalous."
            ]
          },
          {
            "description": "A single source IP address generates a low number of failed login attempts (e.g., 1-3) across a high number of unique local accounts within a short time frame, as logged in Windows Event ID 4625.",
            "data_sources": [
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS Servers, Member Servers with remote access capabilities, Public-facing applications",
            "action": [
              "Aggregate Windows Event ID 4625 by source IP over a 15-minute window. If a single source IP generates failed logins for more than 20 unique local accounts, and the failure count for each of those accounts is between 1 and 3, generate a 'Password Spraying Attack' alert.",
              "For each source IP, calculate the ratio of unique target local accounts to the total number of failed logins (Event ID 4625) in a 10-minute window. A ratio approaching 1.0 (e.g., > 0.9) combined with a total unique account count > 10 is a strong statistical indicator of password spraying, where one password is tried against many accounts.",
              "Use unsupervised clustering (e.g., K-Means or DBSCAN) to group source IPs based on their login failure patterns. Features should include total failures, number of unique targets, time of day, and ASN. This can identify clusters of IPs that are part of a distributed password spraying attack, even if no single IP crosses a simple volumetric threshold."
            ]
          },
          {
            "description": "A new local account is created (Windows Event ID 4720) and is immediately followed by a successful remote login (Windows Event ID 4624, Logon Type 3 or 10) from an external IP address for that same new account within a 60-minute window.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Servers, Bastion Hosts, Member Servers",
            "action": [
              "Create a correlation rule that triggers when a Windows Event ID 4720 (A user account was created) is followed by a Windows Event ID 4624 (An account was successfully logged on) within one hour. The rule must match the 'TargetUserName' field in both events, and the logon event must have a Logon Type of 3 or 10 from a non-internal IP address.",
              "Track the rate of new local account creations per hour across the environment. A sudden spike above the 95th percentile of the hourly creation rate, especially when correlated with subsequent remote logins from those new accounts, indicates abnormal activity that warrants investigation.",
              "Use a sequence pattern mining algorithm (e.g., GSP) on security event logs. The algorithm can discover frequently occurring sequences. Flag the specific sequence `(Event 4720 -> Event 4624 from external IP)` if its support (frequency) becomes anomalously high in a given time window, suggesting a potential scripted attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using compromised local accounts?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A process (Windows Event ID 4688) running under a local account context has a file hash matching a known malware indicator or initiates a network connection (Zeek conn.log) to a destination IP or domain on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, DNS Resolvers, Network Egress Points",
            "action": [
              "Join process creation events (Event ID 4688) with network connection logs (Zeek conn.log) on IP/port/timestamp. Alert if a process running as a local account either has a file hash present in a malware database or connects to a destination IP/domain present on a C2 threat intelligence feed.",
              "For all executable files run by local accounts that make external network connections, calculate the enterprise-wide prevalence of their file hashes. A process hash with a prevalence of less than 0.1% (or seen on < 5 hosts) is a statistical anomaly and should be investigated as potentially unauthorized software.",
              "Analyze DNS queries (Zeek dns.log) originating from processes run by local accounts. Apply a trained classifier or a model that analyzes domain characteristics (e.g., entropy, n-gram frequency, length, ratio of numbers to letters) to detect algorithmically generated domains (DGAs) used for C2 communications."
            ]
          },
          {
            "description": "A local account creates or modifies a persistence mechanism, such as a scheduled task (Event ID 4698/4702) or startup registry key, where the associated command line contains obfuscation, references a LOLBin, or executes from a non-standard directory.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts, especially Servers and Developer Workstations",
            "action": [
              "Monitor scheduled task creation/update events (4698, 4702) and associated process creation events (4688) for tasks created by local accounts. Apply regular expressions to the command-line arguments to detect patterns like 'powershell -enc', 'mshta.exe http://', or execution of scripts from abnormal locations like '%TEMP%', 'C:\\Users\\Public', or 'C:\\PerfLogs'.",
              "Calculate the character entropy of the command-line arguments in all newly created scheduled tasks. Establish a baseline entropy score for legitimate tasks. A new task with an entropy score greater than 3 standard deviations above the mean suggests obfuscated or encoded commands and should be flagged for review.",
              "Train a text classification model (e.g., using TF-IDF vectorization and a Naive Bayes or Logistic Regression model) on a large, labeled dataset of benign and malicious command lines. Use this model to score all new scheduled task commands created by local accounts, alerting on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "A local account with no login activity for over 90 days suddenly exhibits regular, periodic remote login activity (Windows Event ID 4624, Logon Type 3 or 10), suggesting automated access by an adversary.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, VPN Logs, Server Authentication Logs, Active Directory User Objects",
            "action": [
              "Maintain a dynamic list of 'dormant' local accounts by querying Active Directory or local account databases for accounts where the LastLogonTimestamp is greater than 90 days. Generate a high-severity alert for any successful remote login (Event ID 4624, Logon Type 3 or 10) by an account on this list.",
              "For any newly-active dormant account, analyze the time intervals between the first several remote logins. Use the standard deviation of these time deltas to measure jitter. A very low standard deviation (e.g., logins every 4 hours +/- 5 seconds) suggests a machine-generated C2 beacon and should be alerted as 'Anomalous Cadence'.",
              "For all active accounts, model their login history as a time series. Use a forecasting model like Facebook Prophet or an LSTM to predict future login windows. A login from a dormant account will represent a massive deviation from the forecast (which would predict zero activity), flagging it as a high-risk anomaly."
            ]
          },
          {
            "description": "A local account is added to a high-privilege local group (e.g., 'Administrators', 'Remote Desktop Users') as logged by Windows Event ID 4732, and this action is not correlated with an authorized change request.",
            "data_sources": [
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Workstations",
            "action": [
              "Generate an immediate, high-severity alert for any Windows Event ID 4732 ('A member was added to a security-enabled local group') where the 'Group Name' is 'Administrators', 'Remote Desktop Users', 'Backup Operators', or another defined privileged group. This is a high-fidelity indicator of privilege change.",
              "For each administrative user, establish a baseline for the number and type of group modification events they perform per week. An administrator account suddenly adding local accounts to privileged groups at a rate that exceeds the 95th percentile of their normal behavior is anomalous and could indicate the account is compromised.",
              "Model users, groups, and memberships as a graph network. An anomaly detection algorithm (e.g., based on Graph Neural Networks) can identify structural changes that are improbable based on learned patterns, such as a low-privilege local account node suddenly forming an edge to a high-centrality 'Administrators' group node."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using compromised local accounts?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A process is created (Windows Event ID 4688) by a non-administrative local account where the executable's file hash matches a known privilege escalation exploit tool (e.g., JuicyPotatoNG, PrintNightmare exploit, BadPotato).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts, especially unpatched systems and legacy servers",
            "action": [
              "For every process creation event (Event ID 4688) initiated by a local account not in the 'Administrators' group, compare the process's file hash against a curated threat intelligence feed of known privilege escalation tool hashes. Generate a critical alert on any match.",
              "Profile legitimate parent-child process relationships across the enterprise. A statistically rare relationship, such as a web server process (`w3wp.exe`) or the print spooler (`spoolsv.exe`) spawning `cmd.exe` or `powershell.exe` under a local account's context, is a strong indicator of exploit activity and should be flagged.",
              "Train a supervised machine learning classifier (e.g., XGBoost) on process creation event features (process name, parent process name, user context, command line arguments, binary signature status) to identify privilege escalation attempts. This can detect novel or unknown tools that share characteristics with known ones."
            ]
          },
          {
            "description": "A non-administrative local account performs a known UAC bypass sequence, such as modifying a specific registry key (`HKCU:\\Software\\Classes\\...`) and then launching an auto-elevating Windows binary like `fodhelper.exe` or `computerdefaults.exe`.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations and Servers",
            "action": [
              "Use a complex event processing (CEP) rule to detect the specific sequence: 1) a registry key modification (Sysmon Event ID 13) to a known UAC bypass path like `HKCU:\\Software\\Classes\\ms-settings\\shell\\open\\command`, followed by 2) a process creation (Event ID 4688) of `fodhelper.exe` by the same process ID within 2 seconds.",
              "Monitor the frequency of modifications to registry keys known to be associated with UAC bypass techniques. A modification to one of these keys by a process running under a standard local account is a statistical anomaly, as they are rarely touched in normal operations, and should be alerted.",
              "Utilize a sequence pattern mining algorithm on an event stream containing process, registry, and file system events. Flag event sequences that have a very low probability of occurring based on historical data but contain events known to be part of UAC bypass chains (e.g., registry write to HKCU followed by specific LOLBin execution)."
            ]
          },
          {
            "description": "A local account, not authorized to make administrative changes, successfully adds itself or another local account to a privileged local group, such as 'Administrators', as recorded by Windows Event ID 4732.",
            "data_sources": [
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, All Windows Servers and Workstations",
            "action": [
              "Generate an immediate, critical-severity alert on Windows Event ID 4732 where the 'Group Name' is 'Administrators' and the SID of the 'Member' being added is the same as the SID of the 'Subject' who performed the action. This indicates a successful self-elevation of privileges.",
              "For any event where a local account is added to an admin group, analyze the 'Subject' (the actor). Compare this user's actions to their peer group (e.g., other non-admin users or other service accounts). If this user is the only one in its peer group performing this type of privileged action, it is a statistical outlier warranting investigation.",
              "Model the user-group membership permissions as a graph. A machine learning model can learn the probabilities of certain nodes (users) creating edges to other nodes (groups). An edge creation event with a very low learned probability, such as a local service account adding itself to 'Administrators', is flagged as a high-risk anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using compromised local accounts?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1078.003",
        "name": "Local Accounts",
        "evidence": [
          {
            "description": "A local account executes commands to stop or delete security services (`sc.exe`), modify firewall rules (`netsh.exe`), or clear critical event logs (`wevtutil.exe cl Security`), or Windows Event ID 1102 (The audit log was cleared) is generated.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1102"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts, Security Log Aggregators",
            "action": [
              "Generate an immediate alert upon the generation of Windows Event ID 1102 ('The audit log was cleared'). Additionally, create regular expression rules on process command lines (Event ID 4688) to detect the use of `wevtutil.exe cl`, `sc.exe stop` or `sc.exe delete` on security services (e.g., 'Sysmon', 'WinDefend'), or `netsh.exe advfirewall set allprofiles state off`.",
              "Monitor for the termination of critical security processes (e.g., `MsMpEng.exe`, `Sysmon64.exe`, EDR agent processes). A termination event not associated with a known-good software update process (e.g., not initiated by a trusted installer service) is a statistical anomaly. Correlate the timing with recent activity from a local account.",
              "Train a pre-trained NLP model (e.g., a lightweight BERT variant) on command-line arguments from processes run by local accounts to classify the 'intent' of the command. Flag any command whose intent is classified as 'Disable Security Control', 'Clear Logs', or 'Tamper' for immediate analyst review."
            ]
          },
          {
            "description": "A local account executes a legitimate Windows binary (Living-off-the-Land Binary or LOLBin) from an atypical file path (e.g., C:\\Temp) or with an unusual combination of command-line arguments known to be used for malicious purposes.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Hosts",
            "action": [
              "Maintain and apply a library of regular expressions to process command lines (Event ID 4688) to detect known malicious usage of LOLBins by local accounts, such as `certutil.exe -urlcache -f http://...` for file download, or `rundll32.exe javascript:...` for script execution.",
              "For each common LOLBin (e.g., powershell.exe, certutil.exe), establish a baseline of normal behavior including parent processes, command-line argument structure (entropy, length), and execution path. Alert when a local account executes a LOLBin in a manner that deviates more than 3 standard deviations from this baseline.",
              "For high-value LOLBins, train a One-Class Support Vector Machine (OC-SVM) on features from millions of benign execution events (command line entropy, argument count, parent process, etc.). This model creates a tight boundary around 'normalcy'. Any new execution by a local account that falls outside this boundary is flagged as a novel and potentially malicious anomaly."
            ]
          },
          {
            "description": "A process running under a local account, which is not an approved web browser or updater, initiates a direct-to-IP network connection (no preceding DNS query) or a connection to a domain with a high DGA score.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Resolvers, All Endpoints",
            "action": [
              "Join process data (Event ID 4688) with network data (Zeek conn.log). Alert if a process running as a local account (and is not on an allow-list of browsers/updaters) makes an external network connection where the destination IP is on a threat intel feed or there was no preceding DNS query (from Zeek dns.log) for that IP in the last hour.",
              "For each process name running as a local account, baseline the typical volume of data sent (orig_bytes) and received (resp_bytes) per hour using Zeek conn.log. Use a percentile-based threshold to alert if the hourly data sent exceeds the 99th percentile of the historical distribution for that process, which could indicate data exfiltration.",
              "For each host, use a time-series model (e.g., ARIMA or SARIMA) to forecast its expected outbound network traffic volume for the next hour. A significant, unexplained deviation between the forecast and the actual observed traffic, when correlated with process activity from a local account, can indicate C2 beaconing or exfiltration."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]