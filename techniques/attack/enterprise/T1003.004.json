[
  {
    "information_requirement": "Has the adversary illicitly accessed credentials by dumping LSA secrets?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1003.004",
        "name": "LSA Secrets",
        "evidence": [
          {
            "description": "Creation of a process where the executable's name or file hash is a known LSA secret dumping utility, or the process name is statistically rare within the environment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0 Servers, Privileged Access Workstations (PAWs), Administrator Workstations",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) for process names (e.g., 'mimikatz.exe', 'pypykatz.exe', 'procdump.exe') or file hashes matching a threat intelligence feed of known LSA secret dumping tools. An exact match generates a high-priority alert.",
              "Statistical: For all process creation events, calculate the historical frequency of each process name across the enterprise over the last 90 days. Flag any process name that falls below the 1st percentile in frequency, executes with SYSTEM privileges, and is not on an established allowlist of known-good rare processes (e.g., installers, specific admin scripts).",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from Event ID 4688/Sysmon 1, including parent process name, user context, and process name string characteristics (entropy, length). The model will classify each process creation event as 'benign' or 'suspicious LSA access tool' and flag suspicious classifications for investigation."
            ]
          },
          {
            "description": "Execution of a process containing command-line arguments or a PowerShell script block with strings, keywords, or obfuscated patterns indicative of LSA secret dumping.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint devices of administrators",
            "action": [
              "Symbolic: Use regular expressions to scan command-line arguments (Event ID 4688) and PowerShell script blocks (Event ID 4104) for known LSA dumping commands and strings (e.g., 'lsadump::secrets', 'sekurlsa::lsa', 'Invoke-Mimikatz', 'LsaRetrievePrivateData'). A positive match triggers an alert.",
              "Statistical: Calculate the Shannon entropy of all PowerShell script blocks (Event ID 4104). Establish a baseline entropy score for typical administrative scripts within the environment. Flag any script block with an entropy score exceeding the 98th percentile, as high entropy is often indicative of obfuscation or packed payloads.",
              "Machine Learning: Use a Natural Language Processing (NLP) model to analyze the semantic content of PowerShell script blocks. The model, fine-tuned on a dataset of malicious and benign scripts, classifies them as 'malicious (credential dumping)' or 'benign' to detect novel or heavily obfuscated variations that regex might miss."
            ]
          },
          {
            "description": "A process not on an established allowlist of system processes accesses the LSA secrets registry key 'HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets'.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 13 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0 Servers, Servers with sensitive service accounts",
            "action": [
              "Symbolic: After enabling object access auditing on the 'HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets' key, monitor Windows Event ID 4656. Create an explicit allowlist of authorized processes (e.g., 'lsass.exe') and user accounts (e.g., 'NT AUTHORITY\\SYSTEM'). Alert on any access from a process or user not on this list.",
              "Statistical: For all access events to the LSA secrets key, build a statistical profile for each source process, including frequency of access and time of day. Alert if a process accesses the key with a frequency that is more than three standard deviations below its historical average (indicating a rare event) or at a time of day outside its typical 95% confidence interval.",
              "Machine Learning: Implement an anomaly detection model (e.g., Isolation Forest) on the stream of registry access events (Event ID 4656). Features should include the process name, parent process name, user account, and time of day. The model will score each event based on its deviation from normal patterns, flagging highly anomalous access attempts."
            ]
          },
          {
            "description": "A process, not on an established allowlist, requests read access (e.g., PROCESS_VM_READ, access mask 0x10) to the LSASS process memory.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 10 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, All Windows Servers, Domain Controllers",
            "action": [
              "Symbolic: Using Sysmon Event ID 10 or a SACL on the LSASS process object (generating Windows Event ID 4656), monitor for access requests. Maintain an allowlist of known-good source processes (e.g., 'csrss.exe', 'wininit.exe', approved EDR/AV processes). Alert on any access from a source process not on this list, especially if the 'GrantedAccess' code includes '0x10' (PROCESS_VM_READ).",
              "Statistical: For each process that accesses LSASS, track the count of unique hosts it performs this action on over a 24-hour period. Flag any non-system process that accesses LSASS memory on a number of hosts that is statistically unusual (e.g., below the 5th percentile for that specific process), which could indicate targeted dumping activity.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on the count of LSASS access events per host, per hour. A sudden, sharp spike in the number of unique processes accessing LSASS memory on a single host would be flagged as a temporal anomaly indicative of a credential dumping campaign."
            ]
          },
          {
            "description": "A sequence of events occurs where a registry hive backup (SECURITY or SYSTEM) is created and then immediately accessed by a non-standard process, potentially followed by network exfiltration.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 11 (Sysmon)",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, File Servers hosting backups, Network Egress Points",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process creation event (Event ID 4688) for 'reg.exe save' or 'vssadmin create shadow' is followed within 5 minutes by file access (Event ID 4663 or Sysmon Event ID 11) to the created hive file by a different, non-administrative process (e.g., 'powershell.exe', '7z.exe', 'rundll32.exe').",
              "Statistical: Analyze Zeek files.log to establish a baseline of typical file types and sizes for outbound traffic. Correlate with Zeek conn.log. Flag any outbound transfer of files with '.sav' or '.hiv' extensions, or any file whose size is anomalously large (>95th percentile) and is sent to a low-reputation IP or a destination country not typically seen in the last 90 days, originating from a server shortly after a registry backup command was run on it.",
              "Machine Learning: Develop a sequence analysis model (e.g., a Hidden Markov Model) trained on event sequences (process creation, file modification, network connection). The model flags event sequences as anomalous if they match the pattern of [Backup Command -> File Access by Scripting Engine -> Outbound Network Connection to Rare IP], a strong indicator of offline hive theft for credential cracking."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]