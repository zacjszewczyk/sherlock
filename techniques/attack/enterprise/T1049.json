[
  {
    "information_requirement": "Is the adversary attempting to discover network connections from compromised systems?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1049",
        "name": "System Network Connections Discovery",
        "evidence": [
          {
            "description": "A process executes whose file hash (e.g., SHA256) is present on a threat intelligence feed of known malicious network discovery tools or is a rarely seen dual-use tool (e.g., netcat, nmap) not authorized for the host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek software.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations and Laptops), Critical Servers (e.g., Domain Controllers, Application Servers), DMZ Servers, Developer Workstations, Administrator Jump Boxes",
            "action": [
              "Query process creation logs (Windows Event ID 4688) for events where the process hash matches an entry in the organization's threat intelligence feed for network reconnaissance tools. Trigger an alert for any match.",
              "For each dual-use discovery tool (e.g., nmap.exe, ncat.exe), calculate a baseline execution frequency per host over a 30-day period. Trigger an alert if a host's daily execution count for a tool exceeds the 95th percentile of its own historical baseline, or if the tool has never been seen on that host before.",
              "Deploy a pre-trained binary classification model (e.g., a Gradient Boosting Classifier) that scores process execution events based on features like process name, parent process, command-line arguments, user context, and file hash. Use labeled historical data of both benign administrative activity and known malicious discovery tool usage for training. Flag any execution with a 'malicious' prediction score above 0.9 for analyst review."
            ]
          },
          {
            "description": "Execution of native command-line utilities (e.g., netstat, net.exe, arp.exe, ipconfig.exe, nbtstat.exe, nslookup.exe, who.exe, w.exe, lsof) with reconnaissance-focused arguments, especially when executed by non-administrative users or anomalous processes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations and Laptops), Jump Servers, Domain Controllers, Internal Application Servers",
            "action": [
              "Create a SIEM rule to alert on process creation events (Event ID 4688) where the process name is a known discovery utility (e.g., net.exe, netstat.exe) and the command line contains specific argument patterns indicative of reconnaissance (e.g., 'net view /domain', 'netstat -anop tcp', 'arp -a'). Tune the rule to exclude known administrative scripts.",
              "For each user, establish a baseline for the variety of command-line arguments used with discovery utilities like net.exe. Calculate the Shannon entropy of the arguments within a user session. Alert when a user's session exhibits an entropy score that deviates more than 3 standard deviations from their historical baseline, indicating unusually exploratory or repetitive (scripted) behavior.",
              "Apply a sequence analysis model (e.g., Long Short-Term Memory network) to ordered command-line events per host session. Train the model to recognize normal administrative command sequences versus known adversary TTPs. Flag any session where a network discovery command is part of a sequence with a high anomaly score, especially if it follows initial access indicators (e.g., whoami) and precedes lateral movement indicators (e.g., 'net use \\\\target\\C$')."
            ]
          },
          {
            "description": "A PowerShell script block (logged in Event ID 4104) or a WMI permanent event subscription (logged in WMI-Activity Event ID 5858) is created containing code that enumerates network connections or configurations. This includes cmdlets like Get-NetTCPConnection or CIM/WMI classes like Win32_NetworkAdapterConfiguration.",
            "data_sources": [
              "Windows Event ID 4104",
              "Windows Event ID 4688",
              "Microsoft-Windows-WMI-Activity/Operational Event ID 5858"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Systems with PowerShell Remoting Enabled, Exchange Servers, SharePoint Servers",
            "action": [
              "Deploy a detection rule that searches PowerShell script block logs (Event ID 4104) for string matches on network discovery cmdlets (e.g., 'Get-NetTCPConnection', 'Test-NetConnection'), WMI classes ('Win32_PingStatus'), or .NET methods ('[System.Net.NetworkInformation.Ping]'). Enhance the rule to check for obfuscation patterns (e.g., concatenation, Base64) and anomalous parent processes (e.g., winword.exe).",
              "For each PowerShell script block, calculate its character frequency distribution. Compare this distribution to a pre-computed baseline of known benign administrative scripts using the Chi-squared distance metric. Flag scripts with a high distance score, which often indicates obfuscation or packed code, especially if they also contain network-related keywords.",
              "Train a Natural Language Processing (NLP) classifier using a Transformer-based model (e.g., BERT) on the text of PowerShell script blocks. Fine-tune the model to classify scripts into categories like 'Benign,' 'Suspicious Recon,' or 'Malicious Execution.' The model should be trained on features derived from the script's abstract syntax tree (AST) to be resilient to simple string obfuscation. Prioritize alerts for scripts classified as 'Suspicious Recon' or 'Malicious Execution'."
            ]
          },
          {
            "description": "Network traffic logs show a single source host initiating connections to a statistically significant number of unique internal destination hosts or destination ports within a short time window, which is uncharacteristic of its normal role (e.g., a workstation acting like a scanner).",
            "data_sources": [
              "Zeek conn.log",
              "Firewall Deny/Accept Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments (East-West traffic), Network Security Monitoring Sensor locations, VPC/VNet Flow Log aggregation points, Core network switch SPAN/TAP ports",
            "action": [
              "Using Zeek conn.log, create a SIEM rule that triggers when a single source IP ('id.orig_h') generates connections to more than 25 unique internal destination IPs ('id.resp_h') within a 5-minute window. Exclude known vulnerability scanners and monitoring systems from the source IP list.",
              "For each host, create a 30-day rolling baseline of the number of unique destination IPs and ports it communicates with daily. Alert when a host's count of unique destinations in a 1-hour window exceeds the 99th percentile of its own historical daily distribution. This detects sudden, anomalous fan-out behavior.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to network connection logs (conn.log), using features such as source IP, destination IP, destination port, and protocol. The algorithm will group normal, dense traffic patterns. Flag connections that are labeled as noise/outliers by the model, as these often represent the sparse, widespread patterns of a network scan."
            ]
          },
          {
            "description": "A process creation event shows a network discovery utility (e.g., netstat.exe, ipconfig.exe, arp.exe) being spawned by a parent process that is not a command shell or administrative tool, such as an office application (winword.exe, excel.exe), a browser (chrome.exe), or a web server process (httpd.exe, w3wp.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Servers, User Workstations, Application Servers, Microsoft Office 365 / Exchange servers",
            "action": [
              "Create a detection rule that queries process creation logs (Event ID 4688) and alerts on specific, high-fidelity anomalous parent-child relationships. Examples include 'winword.exe' spawning 'net.exe', or 'outlook.exe' spawning 'ipconfig.exe'. Maintain a list of these forbidden pairs.",
              "Aggregate all parent-child process relationships observed across the enterprise over the past 30 days to build a frequency table. Trigger an alert when a new parent-child relationship is observed that is statistically rare (e.g., has occurred fewer than 5 times enterprise-wide) and the child process is a known network discovery tool.",
              "Model process execution chains as directed graphs where nodes are processes and edges represent parent-child relationships. Train a graph-based neural network to learn the structure of normal process trees. Flag any newly observed process tree that has a high anomaly score, particularly if a leaf node in the anomalous tree is a network discovery utility."
            ]
          },
          {
            "description": "Authentication logs and process execution logs show a single user account executing network discovery commands (net.exe, netstat.exe, etc.) from an abnormally high number of distinct source hosts within a short period, deviating from their established role-based behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for login events), All Endpoints and Servers (for process events), Identity and Access Management Systems, Centralized SIEM/Log Aggregator",
            "action": [
              "Correlate successful logon events (Event ID 4624) with subsequent process creation events (Event ID 4688) by SessionGuid or LogonId. Trigger an alert if a single user account executes a network discovery command from more than 3 unique hostnames within a 1-hour window. Exclude domain administrator and vulnerability management service accounts.",
              "For each user, maintain a 30-day rolling baseline of the number of unique hosts they execute discovery commands from. Alert when a user's daily count of unique source hosts for this activity exceeds 3 standard deviations above their historical average. This is particularly sensitive for users who typically only work from one or two machines.",
              "Ingest user login and process execution data into a User and Entity Behavior Analytics (UEBA) platform. Use an unsupervised learning algorithm like Isolation Forest to generate an anomaly score for each user's daily activity. The model features should include counts of unique hosts accessed, frequency of discovery tool usage, and time-of-day activity patterns. Investigate users with sustained high anomaly scores, especially when correlated with the execution of discovery tools from multiple hosts."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]