[
  {
    "information_requirement": "Has the adversary attempted to access credentials stored in the SAM database? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1003.002",
        "name": "Security Account Manager",
        "evidence": [
          {
            "description": "A process creation event is logged where the process name or file hash matches a known credential dumping tool (e.g., mimikatz.exe, gsecdump.exe, pwdump.exe, secretsdump.py).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Command-line and process execution logs on critical assets like Domain Controllers, Tier 0/1 Servers, and Administrator Workstations.",
            "action": [
              "1. Symbolic: Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for process names or file hashes matching a curated threat intelligence list of known credential dumping tools. Generate a high-severity alert upon any match.",
              "2. Statistical: For each new process execution, calculate the Shannon entropy of the process name. Establish a baseline of process name entropy for common parent processes (e.g., explorer.exe, services.exe). Alert when a process name's entropy exceeds the 99th percentile for its parent process, particularly if the process originates from a temporary or user-writable directory (e.g., C:\\Temp, %APPDATA%).",
              "3. Machine Learning: Train a classification model (e.g., Random Forest) using features from process creation logs (parent process, command-line length, argument count, process name entropy, user context). Use a labeled dataset of known-benign and known-malicious (credential dumper) executions to classify new processes in real-time. Flag processes classified as malicious with high confidence."
            ]
          },
          {
            "description": "A process creation event is logged for a system utility (e.g., reg.exe, vssadmin.exe, ntdsutil.exe) with command-line arguments used to save or create copies of the SAM or SYSTEM registry hives.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Command-line and process execution logs on critical assets, particularly Domain Controllers and Tier 0 Servers.",
            "action": [
              "1. Symbolic: Using regular expressions, search process command-line arguments for patterns indicative of hive dumping, such as `reg.exe` with `save` and (`hklm\\sam` or `hklm\\system`), `vssadmin.exe` with `create shadow`, or `ntdsutil.exe` with `ifm` and `create`. Correlate a `vssadmin create shadow` event with subsequent file access or copy commands (e.g., xcopy, robocopy) targeting SAM/SYSTEM files from the shadow copy path (`\\\\?\\GLOBALROOT\\Device\\...`).",
              "2. Statistical: For each host, establish a baseline for the execution frequency of `reg.exe`, `vssadmin.exe`, and `ntdsutil.exe` with suspicious arguments (`save`, `create shadow`, `ifm`). Calculate a 95th percentile threshold for execution counts over a rolling 24-hour window. Alert when a host exceeds this threshold, especially outside of scheduled backup windows.",
              "3. Machine Learning: Apply a time-series anomaly detection model (e.g., Seasonal-ARIMA) to the hourly count of `vssadmin create shadow` commands across the environment. Flag any significant, unexplained spike that deviates from the established weekly backup seasonality as a potential precursor to credential dumping."
            ]
          },
          {
            "description": "A file access event is logged for the SAM database file (`%SystemRoot%\\system32\\config\\SAM`) by a process not on an established whitelist of legitimate system processes.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 11 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs on Domain Controllers and Tier 0 Servers, specifically monitoring the `%SystemRoot%\\system32\\config\\` directory.",
            "action": [
              "1. Symbolic: Configure System Access Control Lists (SACLs) on the SAM file to log access attempts. Create and maintain a whitelist of legitimate processes known to access the SAM file (e.g., lsass.exe, System, approved backup agents). Trigger a high-severity alert for any process access event (Windows Event ID 4663) where the process name is not on the whitelist.",
              "2. Statistical: For all access events to the SAM file, build a frequency distribution of the accessing process names over a 30-day baseline. Any process that is statistically rare (e.g., has a frequency count in the bottom 1st percentile of all accessing processes) should be flagged for investigation. Combine this with the rarity of the process-host pair to increase fidelity.",
              "3. Machine Learning: Develop an unsupervised anomaly detection model (e.g., Isolation Forest or One-Class SVM) trained on features from file access events (process name, user account, host, time of day, access mask). Use the model to score each new access event, flagging events with high anomaly scores that deviate significantly from the learned profile of normal access."
            ]
          },
          {
            "description": "A process access event (Sysmon Event ID 10) is logged where an unauthorized source process requests a handle to the LSASS process (`lsass.exe`) with memory read permissions (`PROCESS_VM_READ`).",
            "data_sources": [
              "Windows Event ID 10 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process memory access logs on critical assets like Domain Controllers, Tier 0/1 Servers, and Administrator Workstations.",
            "action": [
              "1. Symbolic: Monitor Sysmon Event ID 10 for events where the `TargetImage` is `lsass.exe`. Maintain a whitelist of legitimate `SourceImage` processes (e.g., svchost.exe, wininit.exe, approved EDR tools). Generate a high-severity alert for any `SourceImage` not on the whitelist that requests access with a `GrantedAccess` mask including `0x10` (PROCESS_VM_READ) or `0x1410` (a common combination including read).",
              "2. Statistical: For each unique `SourceImage`-`TargetImage` pair involving `lsass.exe`, calculate the historical frequency of access. Alert if a process that has rarely or never accessed LSASS before suddenly does so. Additionally, calculate the Shannon entropy of the `SourceImage` file path; a high entropy score can indicate a randomly named or located tool and should increase the alert's priority.",
              "3. Machine Learning: Model process interactions as a graph, where processes are nodes and access attempts (Sysmon Event ID 10) are directed edges. Use a community detection algorithm (e.g., Louvain Modularity) to identify normal clusters of system processes interacting with LSASS. Flag any new process that attempts to connect to the LSASS node but does not belong to any established community as a high-confidence anomaly."
            ]
          },
          {
            "description": "A registry access event is logged for the `HKLM\\SAM` or `HKLM\\SYSTEM` hives by a process not on an established whitelist of legitimate system processes.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 12 (Sysmon)",
              "Windows Event ID 13 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry audit logs on Domain Controllers, Tier 0/1 Servers, and Administrator Workstations, specifically monitoring the `HKLM\\SAM` and `HKLM\\SYSTEM` hives.",
            "action": [
              "1. Symbolic: Enable auditing on the `HKLM\\SAM` and `HKLM\\SYSTEM` registry hives. Monitor Sysmon Events 12/13 and Windows Event ID 4656 where the `TargetObject` contains `\\REGISTRY\\MACHINE\\SAM` or `\\REGISTRY\\MACHINE\\SYSTEM`. Create a whitelist of legitimate processes (e.g., System, lsass.exe, regedit.exe used interactively by a known administrator) and alert on any process not on the list accessing these hives.",
              "2. Statistical: Profile the rate of access to the `HKLM\\SAM` key per process on each host. Calculate a Z-score for the access count over a 5-minute rolling window. Alert if the Z-score for any process exceeds a threshold of 3.0, indicating a statistically significant and anomalous spike in access frequency.",
              "3. Machine Learning: Implement a sequence analysis model, such as a Hidden Markov Model (HMM), to learn legitimate sequences of user and process actions leading to registry access. An anomalous sequence, such as a non-interactive shell spawning a process that immediately accesses `HKLM\\SYSTEM` and then `HKLM\\SAM`, would be flagged by the model as a low-probability event indicative of a dumping attempt."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]