[
  {
    "information_requirement": "Is the adversary using external web services for one-way command and control (C2)? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1102.003",
        "name": "One-Way Communication",
        "evidence": [
          {
            "description": "An outbound network connection from an internal host to a known malicious C2 dead drop domain, URL, or IP address hosted on a public file/text sharing or social media platform, as identified by a threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Web Proxy, Egress Firewalls, and Internal DNS Resolvers",
            "action": [
              "Symbolic: Ingest CTI feeds for known one-way C2 channels into a watchlist. Create a rule that joins network logs against this watchlist. Match on the destination IP in Zeek conn.log (id.resp_h), the query in dns.log (query), the server name in ssl.log (server_name), and the host field in http.log (host). Generate a high-severity alert for any match.",
              "Statistical: Create a predefined list of legitimate, high-volume file/text sharing services (e.g., pastebin.com, gist.github.com, mega.nz). For each internal source IP, calculate a 30-day baseline of connection frequency to this list. Alert if an IP's daily connection count to these services exceeds the 99th percentile of its own historical baseline.",
              "Machine Learning: Train a supervised classification model (e.g., Gradient Boosting) on labeled historical network logs. Use features such as destination domain, domain age, destination ASN, IP reputation, URL path entropy, JA3 hash, and connection frequency. Use the trained model to score new connections and predict the probability that a connection is a C2 dead drop check-in."
            ]
          },
          {
            "description": "An outbound HTTP/S connection to a high-reputation web service (e.g., social media, code repository) containing anomalous metadata, such as a rare User-Agent string, a high-entropy URL path, or a JA3/JA3S hash associated with known malicious tooling.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Web Proxy and Egress Firewalls with TLS Inspection Capabilities",
            "action": [
              "Symbolic: Maintain and apply a ruleset that matches against non-standard User-Agent strings (e.g., 'Python-urllib/3.9', 'curl/*', 'Wget/*') in Zeek http.log, known malicious JA3/JA3S hashes in Zeek ssl.log, and regex patterns for C2 URL paths (e.g., '/raw/[a-zA-Z0-9]{20,}') when the destination is a common web service. Alert on any match.",
              "Statistical: For all connections in http.log, calculate the Shannon entropy of the URL path ('uri' field). Separately, calculate the prevalence of each User-Agent string across the enterprise. Flag connections to high-reputation domains where the User-Agent is in the bottom 5th percentile of prevalence and the URL path entropy is in the top 5th percentile, indicating a rare client accessing an unusually complex URL.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN or K-Means) on JA3 hashes from Zeek ssl.log to group clients based on their TLS fingerprint. Monitor for small, newly-formed clusters or clients that migrate from a large, common cluster (e.g., Chrome browsers) to a small, anomalous cluster, as this may indicate the introduction or execution of a new C2 tool on the host."
            ]
          },
          {
            "description": "A process not typically associated with user-driven web browsing (e.g., svchost.exe, powershell.exe, rundll32.exe) initiating an outbound network connection to a public web service.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Workstations, Servers, and Domain Controllers",
            "action": [
              "Symbolic: Correlate process creation logs (Windows Event ID 4688) with network connection logs (Zeek conn.log) by joining on source IP and a tight time window (e.g., < 2 seconds). Alert if a process from a watchlist (e.g., 'powershell.exe', 'rundll32.exe', 'mshta.exe', 'cscript.exe') makes an external network connection to a destination port of 80 or 443.",
              "Statistical: For each host, build a baseline profile of processes that normally initiate external network connections. The profile should be a list of {process_name, parent_process_name} tuples. Calculate the frequency of each tuple. Flag and score any new tuple observed on a host, with a higher score for tuples involving system-critical processes (e.g., svchost.exe, lsass.exe).",
              "Machine Learning: Train an autoencoder neural network on feature vectors representing normal process network behavior. Features should include: process name (one-hot encoded), parent process name, command line length, command line entropy, destination port, and bytes sent. Use the model to flag processes with high reconstruction error, which indicates they are deviating from learned normal behavior."
            ]
          },
          {
            "description": "A series of outbound connections from an internal host to a single external destination exhibiting beacon-like characteristics, such as highly regular time intervals between connections (low jitter) and consistent, small request sizes.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Firewalls, Core Network Switches, and Network Taps",
            "action": [
              "Symbolic: For each source-destination IP pair in Zeek conn.log over a 1-hour window, if the connection count is > 10, calculate the standard deviation of the time delta between consecutive connections. Alert if the standard deviation is less than 1 second and the average of 'orig_bytes' is less than 512 bytes, indicating robotic, non-human timing.",
              "Statistical: For each source-destination IP pair, compute the standard deviation of the inter-arrival time ('iat_std') and the standard deviation of the originated bytes ('orig_bytes_std') over a rolling 1-hour window. Flag pairs where both 'iat_std' and 'orig_bytes_std' fall below the 1st percentile of all network flows, indicating highly regular communication patterns in both timing and size.",
              "Machine Learning: For each source-destination pair with sufficient traffic, create a time series of connection events. Apply a Fast Fourier Transform (FFT) to this time series. A strong, sharp peak in the resulting frequency spectrum indicates a dominant periodic signal, which is a primary characteristic of C2 beaconing. Use the magnitude of the dominant frequency as a feature to train a beacon detection model."
            ]
          },
          {
            "description": "A network connection to an external web service where the ratio of response bytes to request bytes is anomalously low (e.g., less than 1.1), indicating the client is sending data or checking in without receiving a proportionally large response, which is atypical for standard web browsing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Firewalls and Network Taps",
            "action": [
              "Symbolic: From Zeek conn.log, filter for all successfully established connections ('conn_state' = 'SF') to destination ports 80 or 443. Alert on any connection where 'orig_bytes' > 0 and the ratio $$ resp_bytes / orig_bytes $$ is less than 1.1, as this is highly atypical for web GET requests which should have a large response relative to the request.",
              "Statistical: For each internal source IP, calculate the 30-day rolling average and standard deviation of its $$ resp_bytes / orig_bytes $$ ratio for connections to external web services. Flag any host whose average ratio for a given day drops more than two standard deviations below its historical mean, suggesting a shift in its traffic profile toward one-way communication.",
              "Machine Learning: Use an unsupervised anomaly detection algorithm like Isolation Forest on connection features from Zeek conn.log. The feature set should include the $$ resp_bytes / orig_bytes $$ ratio, duration, orig_pkts, resp_pkts, protocol, and service. The model will learn the characteristics of normal traffic and assign high anomaly scores to connections that deviate, such as those with unusual byte asymmetry."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]