[
  {
    "information_requirement": "Is the adversary moving laterally within the network using Distributed Component Object Model (DCOM)?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1021.003",
        "name": "Distributed Component Object Model",
        "evidence": [
          {
            "description": "DCOM/RPC network traffic (TCP port 135) originating from an internal host or user account present on a watchlist of previously compromised or suspicious entities.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, Domain Controllers, Member Servers",
            "action": [
              "Symbolic: Create a detection rule that joins network flow data with a watchlist of suspicious IPs and user accounts. Alert if Zeek conn.log shows traffic with destination port 135 where the source IP is on the watchlist, and this correlates with a successful remote logon (Windows Event ID 4624, Logon Type 3) on the destination host by a user on the watchlist.",
              "Statistical: For each entity on the watchlist, establish a baseline of its normal DCOM activity (e.g., hourly connection count). Alert if the count of DCOM connections from a watchlist IP or user exceeds a statistical threshold, such as 3 standard deviations above its own historical mean or above the 95th percentile.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) using features from both network and host logs. Include features such as connection duration, bytes transferred, source/destination subnets, time of day, and a binary feature 'is_on_watchlist'. The model will predict the probability that a DCOM connection is part of a malicious lateral movement attempt."
            ]
          },
          {
            "description": "A DCOM-enabled parent process (e.g., mmc.exe, excel.exe, outlook.exe) spawning a child process associated with command-line interaction or scripting (e.g., cmd.exe, powershell.exe, wscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Workstations, Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule that alerts when a process creation event (Windows Event ID 4688) has a ParentProcessName from the set ('mmc.exe', 'excel.exe', 'winword.exe', 'outlook.exe') and a ProcessName from the set ('cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe').",
              "Statistical: Maintain a historical frequency table of all parent-child process relationships across the enterprise. Calculate the rarity of each observed pair. Alert on any new DCOM-related parent-child pair that has a very low frequency score (e.g., seen less than 10 times in the last 90 days), indicating a deviation from common administrative or user behavior.",
              "Machine Learning: Use an isolation forest model trained on features from process creation events (parent process path, child process path, user context, command-line length and entropy). The model learns to profile normal process lineage and will flag rare combinations, such as an Office application spawning a shell, as high-scoring anomalies."
            ]
          },
          {
            "description": "A DCOM Surrogate process (dllhost.exe) executing a child process outside of a pre-defined allowlist of expected applications, especially when not running as the SYSTEM user.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers, Workstations with custom COM objects, Member Servers",
            "action": [
              "Symbolic: Implement a detection rule for process creation events where the ParentProcessName is 'dllhost.exe', the UserName is not 'NT AUTHORITY\\SYSTEM', and the child ProcessName is not on an established allowlist of legitimate applications for your environment.",
              "Statistical: For all child processes of 'dllhost.exe', calculate the entropy of the command-line arguments. Establish a baseline of normal entropy values for legitimate child processes. Alert when the entropy of a command line for a new child process exceeds a dynamic threshold (e.g., > 3 standard deviations above the mean), which can indicate obfuscation or randomized payloads.",
              "Machine Learning: Employ a clustering algorithm (e.g., DBSCAN) on feature vectors derived from 'dllhost.exe' child process events (e.g., TF-IDF of command-line arguments, child process name, user context). Legitimate and recurring activity will form dense clusters. Flag any process events that are marked as noise or outliers by the algorithm for further investigation as potentially malicious use of a COM object."
            ]
          },
          {
            "description": "An internal host establishing DCOM/RPC connections (TCP port 135) to an anomalously high number of other internal hosts or establishing a connection pattern that is a statistical outlier.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "East-West traffic on core network switches, Internal network segments",
            "action": [
              "Symbolic: Define rules based on network segmentation policy. Alert on any DCOM traffic (TCP/135) observed between hosts in zones that should not be communicating, such as a connection from a standard user workstation VLAN to a database server VLAN.",
              "Statistical: For each source host, calculate the count of unique destination hosts it connects to via DCOM (out-degree) within a rolling 1-hour window. Alert if a host's out-degree exceeds the 99th percentile of its own historical behavior or the 99th percentile of all hosts in its peer group. This identifies DCOM 'spraying' activity.",
              "Machine Learning: Apply a time-series anomaly detection model (e.g., SARIMA) to key network metrics, such as the total volume of DCOM traffic (bytes and packets) and the number of new source-destination pairs per hour. The model learns the network's normal rhythm and flags significant, unexpected spikes that deviate from the learned seasonality, indicating potential widespread lateral movement."
            ]
          },
          {
            "description": "A remote network logon (Logon Type 3) on a host, immediately followed by the creation of a new scheduled task on that same host by the remote user.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4698",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Privileged Access Workstations",
            "action": [
              "Symbolic: Create a correlated detection rule that triggers when the following sequence occurs on a single host within a 5-minute window: 1. DCOM traffic from 'src_ip' to 'dest_ip' is seen in Zeek conn.log. 2. A successful network logon (Windows Event ID 4624, Logon Type 3) by 'user_X' from 'src_ip'. 3. A new scheduled task is created (Windows Event ID 4698) by 'user_X'.",
              "Statistical: For all instances where a remote logon (Event ID 4624, Type 3) is followed by a scheduled task creation (Event ID 4698) by the same user on the same host, calculate the time delta between the two events. Alert if this time delta falls into the bottom 1st percentile (e.g., less than 10 seconds), as this speed is indicative of a scripted attack rather than manual administration.",
              "Machine Learning: Use a sequence analysis model, such as a Hidden Markov Model (HMM), trained on common event sequences following a remote logon. The model learns probable state transitions (e.g., logon -> file share access). The sequence 'Remote Logon -> Scheduled Task Creation' would be identified as a low-probability, high-risk sequence, triggering an alert, especially if preceded by DCOM network activity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]