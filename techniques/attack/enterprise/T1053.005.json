[
  {
    "information_requirement": "Has the adversary executed code using scheduled tasks?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1053.005",
        "name": "Scheduled Task/Job: Scheduled Task",
        "evidence": [
          {
            "description": "A short-lived scheduled task is created, executes a payload, and is quickly deleted. The executed command line may contain suspicious arguments, obfuscation, or downloaders.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4699",
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows workstations and servers, particularly internet-facing systems and general user endpoints.",
            "action": "For newly created tasks, correlate creation and deletion events. Symbolic: Create a SIEM rule to alert when a Windows Event ID 4698 (Task Created) is followed by a Windows Event ID 4699 (Task Deleted) for the same Task Name on the same host within 10 minutes. Correlate with process creation events (4688) originating from the Task Scheduler service to inspect for suspicious command lines (e.g., 'powershell -enc', 'rundll32', download cradles). Statistical: For all processes spawned by the Task Scheduler, calculate the entropy of the command line string. Flag any command whose entropy score is in the 98th percentile or greater for that host's historical baseline, as this can indicate obfuscation. ML: Train a logistic regression classifier on process events (4688) parented by the Task Scheduler, using features like command line length, character frequency, presence of keywords (e.g., 'http', '.ps1'), and the rarity of the process executable. Use the model to score new processes for maliciousness and alert on high scores."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using scheduled tasks?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1053.005",
        "name": "Scheduled Task/Job: Scheduled Task",
        "evidence": [
          {
            "description": "A new, persistent scheduled task is created that executes from an uncommon file path (e.g., C:\\Users\\Public, C:\\Windows\\Temp) or is configured to run at system startup or user logon.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4700",
              "Windows Registry HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, critical application servers, and administrative workstations where persistence is most impactful.",
            "action": "Monitor for the creation of new persistent tasks. Symbolic: Create a SIEM rule to alert on new task creations (Event ID 4698) where the action's executable path is in a world-writable directory (e.g., C:\\Windows\\Temp\\, %APPDATA%) or the task is triggered by logon or system start. Statistical: Establish a baseline of all executable paths found in scheduled tasks across the environment. Use this to calculate the rarity of each path. A new task using a path that is in the bottom 5th percentile of frequency should be flagged as suspicious. ML: Apply a time series anomaly detection model (e.g., ARIMA) to the count of new task creations (Event ID 4698) per host, per hour. An alert should be generated for any spike in activity that deviates more than 3 standard deviations from the predicted baseline, especially outside of standard business or maintenance hours."
          },
          {
            "description": "A scheduled task exists in the Windows Registry but is absent from standard enumeration tool outputs (e.g., schtasks.exe) due to the deletion of its Security Descriptor (SD) registry value.",
            "data_sources": [
              "Sysmon Event ID 13",
              "Windows Registry HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, as this is a specific stealth technique.",
            "action": "Actively hunt for hidden scheduled tasks. Symbolic: Create a high-severity alert for any registry value deletion event (Sysmon Event ID 13) where the TargetObject matches 'HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\*\\SD'. This is a high-fidelity indicator of this specific hiding technique. Statistical: Periodically run a script that enumerates all task subkeys in the registry tree and compares the list against the output of 'schtasks /query'. Any task present in the registry but absent from the tool output is hidden. Track the count of hidden tasks per host; any increase is a notable anomaly. ML: Use a clustering algorithm (e.g., DBSCAN) on properties of all tasks enumerated directly from the registry. Features could include a binary flag for 'IsHidden' (derived from the statistical method), creation time, and author. This can help identify groups of related malicious tasks planted by a single adversary campaign."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary elevated privileges using scheduled tasks?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1053.005",
        "name": "Scheduled Task/Job: Scheduled Task",
        "evidence": [
          {
            "description": "A scheduled task is created or modified by a non-administrative user account, but the task is configured to execute with high-privilege credentials such as NT AUTHORITY\\SYSTEM.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and multi-user servers like Remote Desktop Session Hosts, where multiple users with varying privilege levels operate.",
            "action": "Monitor task creation and modification events for privilege escalation attempts. Symbolic: Create a SIEM rule to alert when a task is created (4698) or updated (4702) and the event's 'SubjectUserName' is a non-administrative account, but the task's 'Principal' or 'RunAsUser' field is set to 'SYSTEM', 'Local Service', 'Network Service', or an administrative account. Statistical: For every user, create a baseline of the security contexts they use when creating scheduled tasks. Flag any user who creates a task with a context they have never used before (e.g., a user who has only ever created tasks as themselves suddenly creates a SYSTEM task). ML: Develop a graph-based model where users and privilege levels are nodes. An edge is created when a user creates a task with a specific privilege. Use anomaly detection on this graph to identify rare or improbable edges, such as a node representing a 'Standard User' group connecting to the 'SYSTEM Privilege' node, which would signify a likely privilege escalation event."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]