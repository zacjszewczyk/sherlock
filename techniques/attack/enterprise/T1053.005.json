[
  {
    "information_requirement": "Has the adversary executed code using scheduled tasks?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1053.005",
        "name": "Scheduled Task/Job: Scheduled Task",
        "evidence": [
          {
            "description": "A scheduled task creation event (Windows Event ID 4698) is followed by a deletion event (Windows Event ID 4699) for the same task name on the same host within a short timeframe (e.g., under 15 minutes). The process executed by the task (Sysmon Event ID 1) involves a suspicious command line containing obfuscated scripts, living-off-the-land binaries, or network connections to untrusted domains.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4699",
              "Sysmon Event ID 1",
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows workstations and servers, particularly internet-facing systems and general user endpoints.",
            "action": [
              "Symbolic: Correlate task creation and deletion events. Create a detection rule that triggers when a Windows Event ID 4698 (Task Created) is followed by a Windows Event ID 4699 (Task Deleted) for the identical Task Name and Host within a 15-minute window. Enrich this alert by joining with process creation events (Sysmon Event ID 1) spawned by 'svchost.exe' to inspect command lines for high-risk patterns like 'powershell -e', 'certutil', 'rundll32', or network download strings.",
              "Statistical: For all command lines executed by the Task Scheduler process, calculate the character entropy and the frequency of non-alphanumeric characters. Establish a baseline for these metrics per host. Generate an alert when a command line's entropy or non-alphanumeric character percentage exceeds the 98th percentile of the established baseline for that specific host, indicating potential obfuscation.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) on process execution events (Sysmon Event ID 1) originating from the Task Scheduler. Use features such as command line length, argument count, entropy, presence of IP addresses, process executable rarity, and parent process details. Use the trained model to score newly observed processes, alerting on any process with a high probability score of being malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using scheduled tasks?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1053.005",
        "name": "Scheduled Task/Job: Scheduled Task",
        "evidence": [
          {
            "description": "A scheduled task creation event (Windows Event ID 4698) or update event (Windows Event ID 4702) specifies an action that runs an executable from a non-standard, world-writable directory (e.g., %PUBLIC%, %TEMP%, %APPDATA%) or is configured with a trigger for 'At system startup' or 'At log on'.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4700",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, critical application servers, and administrative workstations where persistence is most impactful.",
            "action": [
              "Symbolic: Create a SIEM alert that triggers on Windows Event ID 4698 (Task Created) or 4702 (Task Updated) where the executable path in the task's action points to a directory such as 'C:\\Windows\\Temp\\', 'C:\\Users\\Public\\', or any user's '%APPDATA%' folder. Additionally, alert if the task's trigger is set to 'At system startup' or 'At log on' and the executable is not on an established allowlist.",
              "Statistical: Periodically query all hosts to build a statistical baseline of all executable paths and parent directories used in scheduled tasks. For each new task creation (Event ID 4698), calculate the rarity of its executable path across the enterprise. Flag any task whose path falls within the 1st percentile (i.e., is one of the rarest paths seen) for manual investigation.",
              "Machine Learning: Apply a time-series anomaly detection model (e.g., Seasonal-ARIMA) to the hourly count of new task creations (Event ID 4698) on a per-host basis. The model should account for regular patterns like patching cycles. Generate an alert for any spike in task creation activity that deviates more than 3 standard deviations from the forecasted baseline, particularly outside of known maintenance windows."
            ]
          },
          {
            "description": "A scheduled task exists in the Windows Registry but is absent from standard enumeration tool outputs (e.g., schtasks.exe) due to the deletion of its Security Descriptor (SD) registry value.",
            "data_sources": [
              "Sysmon Event ID 13",
              "Sysmon Event ID 12",
              "Windows Registry HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, as this is a specific stealth technique.",
            "action": [
              "Symbolic: Create a high-fidelity SIEM rule to alert on any registry value deletion event (Sysmon Event ID 13) where the 'TargetObject' ends with '\\SD' and is located under 'HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\'. This is a specific indicator of a technique to hide scheduled tasks.",
              "Statistical: Develop a recurring script to run on endpoints that enumerates all task names from the subkeys in 'HKLM\\...\\TaskCache\\Tree\\' and compares this list against the parsed output of 'schtasks /query /xml'. Any task present in the registry list but absent from the 'schtasks' output is hidden. Track the count of hidden tasks per host over time; any non-zero or increasing count is a significant anomaly.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on the properties of all scheduled tasks enumerated directly from the registry across the fleet. Use features such as a binary flag for 'IsHidden' (derived from the statistical diff method), creation timestamp, author name, and a binary flag indicating if the 'SD' value is missing. This can help group disparate hidden tasks that may be part of a single coordinated campaign."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary elevated privileges using scheduled tasks?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1053.005",
        "name": "Scheduled Task/Job: Scheduled Task",
        "evidence": [
          {
            "description": "A scheduled task is created (Windows Event ID 4698) or modified (Windows Event ID 4702) by a non-administrative user account, but the task is configured to execute with high-privilege credentials such as NT AUTHORITY\\SYSTEM.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4672"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and multi-user servers like Remote Desktop Session Hosts, where multiple users with varying privilege levels operate.",
            "action": [
              "Symbolic: Create a SIEM rule to generate a critical alert when a task creation (Event ID 4698) or update (Event ID 4702) event occurs where the 'SubjectUserName' in the event belongs to a non-administrative group, but the user context for the task action is set to a high-privilege account like 'SYSTEM', 'Local Service', 'Network Service', or an administrative account.",
              "Statistical: For each user account, build and maintain a profile of the security contexts ('Run As' users) they typically use when creating scheduled tasks. Calculate the frequency of each context used per user. Generate an alert if a user creates a task using a security context they have never used before or that is statistically rare for their account (e.g., a standard user who has only ever created tasks as themselves suddenly creates a task to run as 'SYSTEM').",
              "Machine Learning: Construct a graph-based anomaly detection model where nodes represent users and task security contexts (e.g., 'SYSTEM', 'User-level'). Create a directed edge from a user node to a context node whenever that user creates a task with that context. Use the model to identify the creation of rare or improbable edges, such as a node representing a 'Standard User' connecting to the 'SYSTEM Privilege' node, which would signify a likely privilege escalation attempt."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]