[
  {
    "information_requirement": "Has an adversary established persistence by implanting a web shell on a server? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1505.003",
        "name": "Web Shell",
        "evidence": [
          {
            "description": "A web server receives an inbound HTTP/S request from a source IP address or to a URI that matches known web shell threat intelligence.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Web Servers",
            "action": [
              "Symbolic Logic: Continuously compare inbound requests against a threat intelligence feed of known malicious IPs and web shell URIs. Specifically, join the 'id.orig_h' from Zeek conn.log and the 'uri' from Zeek http.log against the feed. Generate a high-priority alert on any match.",
              "Statistical Method: For each source IP connecting to a web server, calculate the ratio of POST requests to total requests. Establish a per-application baseline for this ratio. Alert on source IPs where the POST ratio exceeds the 95th percentile, particularly if the total request count from that IP is low (<10), suggesting targeted interaction rather than normal browsing.",
              "Machine Learning: Train a supervised classification model (e.g., XGBoost) using features from Zeek logs such as source IP ASN, geographic location, User-Agent string rarity, HTTP method, and URI structure. Use a labeled dataset of malicious and benign requests. Deploy the model to score each inbound request and alert on any request with a malicious probability score greater than 0.9."
            ]
          },
          {
            "description": "An HTTP request to a web server contains URI parameters or a POST body with content structures highly indicative of command execution, code evaluation, or obfuscation.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Web Servers",
            "action": [
              "Symbolic Logic: Scan the 'uri' and POST body fields in Zeek http.log for regular expressions matching command execution functions (e.g., 'eval\\(', 'exec\\(', 'passthru\\(', 'shell_exec\\('), file inclusion ('include\\('), or common obfuscation patterns ('base64_decode', 'gzinflate'). Alert on any match.",
              "Statistical Method: For each unique URI, calculate the Shannon entropy of its query parameter values and any associated POST body. Establish a baseline entropy level for each URI. Alert when a request's entropy exceeds the 98th percentile for that specific URI, suggesting encrypted or obfuscated commands.",
              "Machine Learning: Develop an anomaly detection model (e.g., Isolation Forest) using features extracted from HTTP requests, including URI length, parameter count, POST body size, and the entropy of both the URI and POST body. Train the model on a baseline of normal traffic for each web application. Flag requests identified as significant outliers for manual review."
            ]
          },
          {
            "description": "A web server process (e.g., w3wp.exe, httpd.exe) spawns a child process that is not part of its normal, baselined behavior, especially command-line interpreters or reconnaissance tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers",
            "action": [
              "Symbolic Logic: Monitor process creation events (Windows Event ID 4688 or Sysmon Event ID 1) where the parent process is a known web server process (e.g., w3wp.exe, httpd.exe, nginx.exe, tomcat*.exe). Alert immediately if the child process is on a blocklist of suspicious processes, including cmd.exe, powershell.exe, pwsh.exe, whoami.exe, ipconfig.exe, net.exe, or certutil.exe.",
              "Statistical Method: For each web server parent process, establish a baseline of normal child process command-line argument length and character entropy. Using process creation logs, calculate the Z-score for the argument length and entropy of each new child process. Alert if both the length Z-score and the entropy Z-score exceed 3, indicating an unusually long and complex command line not seen historically.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on features from process creation events (Parent Process Name, Child Process Name, Command Line Arguments). Group events into clusters representing normal activity. Any new process creation event that does not fit into an existing cluster is flagged as an anomaly and generates an alert."
            ]
          },
          {
            "description": "A web server process initiates an outbound network connection to an unusual destination IP, a non-standard port, or transfers an anomalous amount of data.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Web Servers",
            "action": [
              "Symbolic Logic: Analyze Zeek conn.log for connections where 'id.orig_h' is a web server IP and the destination ('id.resp_h') is an external IP matching a threat intelligence feed or an internal IP in a restricted subnet. Also, alert if 'id.resp_p' is not a standard port for web traffic (e.g., not 80, 443, 8443) or required application ports. Correlate with Zeek dns.log to check for prior lookups to known C2 or dynamic DNS domains.",
              "Statistical Method: For each web server, profile the typical destination ports and total data volumes ('orig_bytes' + 'resp_bytes') for outbound connections in Zeek conn.log. Alert if a new connection uses a destination port seen in less than 1% of that server's historical outbound connections. Additionally, alert if the total data volume for a single connection exceeds the 99th percentile, suggesting potential data exfiltration.",
              "Machine Learning: Train a time-series forecasting model (e.g., Prophet) on the hourly volume of outbound data ('orig_bytes') for each web server. The model will predict the expected range of data volume for any given hour. Generate an alert when the observed outbound data volume significantly exceeds the model's predicted forecast, which could indicate a C2 heartbeat or data transfer."
            ]
          },
          {
            "description": "A file with a web-executable extension (e.g., .php, .aspx) is created in a web-accessible directory by the web server process itself, indicating a potential 'write-and-execute' action.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Server File Systems",
            "action": [
              "Symbolic Logic: Monitor file creation events (Sysmon Event ID 11 or Windows Event ID 4663) within web root directories (e.g., C:\\inetpub\\wwwroot\\). Alert if the 'ProcessName' or 'Image' field corresponds to a web server process (e.g., w3wp.exe) and the 'TargetFilename' has a web-executable extension (.php, .aspx, .jsp, .asp, .cfm).",
              "Statistical Method: Analyze the distribution of file extensions within specific web application directories. Maintain a frequency map of all extensions. Alert upon the creation of a file with an extension that has either never been seen before in that directory path or falls below a 0.5% historical frequency threshold, indicating a high degree of rarity.",
              "Machine Learning: Train a character-level Convolutional Neural Network (CNN) on a large corpus of both legitimate web application source code and known malicious web shells. For every file creation event captured by Sysmon Event ID 11, pipe the file's content to the model. The model will classify the content as benign or malicious. Generate a high-severity alert for any file classified as malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]