[
  {
    "information_requirement": "Is the adversary attempting to discover network configuration information on the enterprise network? (PIR)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1016",
        "name": "System Network Configuration Discovery",
        "evidence": [
          {
            "description": "Execution of a network discovery command (e.g., ipconfig, arp, route) includes command-line arguments or output redirection to a file path matching a known-malicious signature.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Critical Application Servers",
            "action": [
              "Create a SIEM rule using regular expressions to match specific, high-confidence malicious command-line patterns from threat intelligence in process creation logs (Windows Event ID 4688, Sysmon Event ID 1). Example: `ipconfig /all >> C:\\Users\\Public\\net_info.tmp`.",
              "Calculate the statistical rarity of command-line arguments and output paths for common discovery commands (ipconfig, arp, route, nbtstat). Alert when a command uses an argument or writes to a file path that falls in the bottom 1st percentile of observed historical usage across the enterprise.",
              "Train a logistic regression classifier on labeled command-line data from Event ID 4688 or Sysmon Event ID 1. Use features such as command name, argument count, presence of redirection operators (>, >>), and output file path entropy. Deploy the model to score new command executions for maliciousness."
            ]
          },
          {
            "description": "A network discovery utility (e.g., ipconfig.exe, Get-NetIPConfiguration) is executed by a non-standard parent process (e.g., WINWORD.EXE, AcroRd32.exe) or by a user account outside of its normal behavioral profile.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Member Servers, Human Resources Systems",
            "action": [
              "Create a SIEM rule that alerts when a discovery utility (e.g., `ipconfig.exe`, `arp.exe`) is executed by a parent process not on an allowlist of expected parents (e.g., `cmd.exe`, `powershell.exe`, `explorer.exe`). Specifically, look for parent processes like `WINWORD.EXE`, `CHROME.EXE`, or `AcroRd32.exe`.",
              "Establish a baseline of execution frequency for each discovery command per user role (e.g., Standard User, IT Admin, Server Admin). Generate an alert if a user's execution count for a specific command exceeds 3 standard deviations above the historical baseline for their role within a 24-hour window.",
              "Utilize an unsupervised clustering algorithm (e.g., DBSCAN) on process execution events. Feature vectors should include user, host, parent process name, command executed, and time of day. Investigate clusters where discovery commands are grouped with other suspicious behaviors or occur at anomalous times."
            ]
          },
          {
            "description": "A sequence of three or more unique network discovery commands (e.g., ipconfig, arp, route, nbtstat) are executed from a single host within a short time window (e.g., 5 minutes).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Development Environments",
            "action": [
              "Create a SIEM correlation rule that triggers when a single host executes 3 or more unique network discovery commands from a predefined watchlist (ipconfig, arp, route, nbtstat, netsh, ifconfig) within a 5-minute time window.",
              "For each host, calculate the Shannon entropy of the command names executed within a 10-minute sliding window from process creation logs. A sudden spike in entropy indicates a burst of diverse commands characteristic of reconnaissance. Alert when a host's command entropy deviates more than 2.5 standard deviations from its own historical baseline.",
              "Apply a sequence analysis model, such as a Hidden Markov Model (HMM), to command execution logs. Train the model on normal user and system behavior to learn common command sequences. Use the model to flag command sequences that have a very low probability of occurring, especially if they contain multiple discovery commands in rapid succession."
            ]
          },
          {
            "description": "A single source host remotely executes network discovery commands across multiple distinct destination hosts within a 30-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments, Internal Servers and Workstations, Domain Controllers",
            "action": [
              "Create a SIEM correlation rule that triggers when successful remote logins (Windows Event ID 4624, Logon Type 3) from a single source host are followed within 5 minutes by network discovery command executions (Windows Event ID 4688, Sysmon Event ID 1) on the destination hosts. Alert if this pattern occurs across more than 5 distinct destinations from the same source within 1 hour.",
              "Using Zeek conn.log, establish a per-host baseline for the number of unique remote administration connections (e.g., on ports 135, 445, 5985, 5986). Alert when a host's outbound connection count exceeds the 99th percentile of its historical behavior and is temporally correlated with an anomalous number of discovery command executions on the target systems.",
              "Construct a host communication graph from Zeek conn.log and use a community detection algorithm (e.g., Louvain Modularity) to define normal communication clusters. Train a classifier to identify anomalous remote administration connections that cross community boundaries. Score and alert on event sequences where these anomalous connections are immediately followed by discovery command executions (Event ID 4688) on the target hosts."
            ]
          },
          {
            "description": "A single host generates an anomalous volume of connection attempts or scanning notices on the local network segment, indicating an attempt to map local systems.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments, VLANs containing sensitive systems, Data Center Networks",
            "action": [
              "Create a rule that alerts when Zeek generates a `Scan::Address_Scan` notice from the `notice.log`. Correlate this notice with a subsequent spike in connection attempts in `conn.log` from the same `id.orig_h` to the scanned destination IP addresses within a 5-minute window.",
              "From Zeek `conn.log`, calculate a per-host baseline for the number of unique destination IP addresses contacted on its local subnet within a 1-hour window. Alert when a host's unique destination count exceeds 3 standard deviations above its historical baseline or the baseline of its peer group (e.g., other workstations).",
              "Apply time-series analysis using an LSTM-based autoencoder to the volume of new connection initiations per second, sourced from each host, as recorded in Zeek `conn.log`. Train the model on normal traffic patterns and use it to detect anomalous bursts of connection attempts that deviate significantly from the forecast, indicating a potential scanning event."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]