[
  {
    "information_requirement": "Has an adversary forged a Kerberos service ticket (Silver Ticket) to access a specific resource?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1558.002",
        "name": "Silver Ticket",
        "evidence": [
          {
            "description": "A successful Kerberos network logon (Logon Type 3) is recorded in Windows Event ID 4624 with a 'Ticket Encryption Type' of '0x17' (RC4_HMAC), but the target service account's 'msDS-SupportedEncryptionTypes' attribute in Active Directory is configured to only permit AES encryption ('0x11' or '0x12').",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek kerberos.log",
              "Active Directory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application and File Servers (e.g., SharePoint, MSSQL, CIFS shares), LDAP services",
            "action": [
              "Implement a detection rule that triggers when a Windows Event ID 4624 logon event shows a 'Ticket Encryption Type' of '0x17'. The rule must then perform a live or cached lookup of the target service account's 'msDS-SupportedEncryptionTypes' attribute in Active Directory. Generate an alert if the attribute is configured for AES and does not include support for RC4.",
              "For each Service Principal Name (SPN), profile the historical distribution of ticket encryption types used in successful logons over a 30-day baseline. Calculate the daily percentage of RC4-HMAC logons. Generate an alert if this percentage for any SPN exceeds the 99th percentile of its historical daily values, indicating an abnormal shift towards weaker, more forgeable encryption.",
              "Deploy a supervised classification model (e.g., Gradient Boosting) trained on labeled Kerberos logon events. Use features such as account type (user vs. service), service name, source IP geolocation, logon hour, and ticket encryption type. Alert on any logon classified as 'malicious' where the encryption type '0x17' is a primary feature driving the classification, according to feature importance analysis (e.g., SHAP values)."
            ]
          },
          {
            "description": "A process is created with command-line arguments containing patterns specific to forging or using a silver ticket with tools like Mimikatz or Rubeus, such as specifying a service SPN, a user to impersonate, and an NTLM hash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, especially Domain Controllers, Privileged Access Workstations, and Critical Service Servers",
            "action": [
              "Create a detection rule that inspects command lines in process creation events (Windows Event ID 4688, Sysmon Event ID 1) for regular expressions matching silver ticket generation or usage patterns. Examples include 'Rubeus.exe silver', 'asktgs', '/ticket:', '/ptt', and combinations like '/service:cifs/... /hash:...' or 'kerberos::golden /service:... /rc4:... /user:... /ptt'.",
              "Calculate the Shannon entropy of command-line arguments for processes commonly used to launch attacks (e.g., powershell.exe, cmd.exe, wscript.exe). Establish a per-host baseline of entropy scores. Alert when a command's entropy score exceeds a dynamic threshold, such as 3 standard deviations above the host's 30-day rolling average, to detect obfuscated or encoded payloads.",
              "Implement a sequence-based NLP classification model (e.g., a 1D Convolutional Neural Network or a pre-trained Transformer) on raw command-line strings. Train the model to distinguish between benign and malicious commands using a large, labeled dataset. Deploy the model to classify new command lines in real-time and alert on those with a high probability score for being malicious."
            ]
          },
          {
            "description": "A process not on a pre-defined allow-list (e.g., an unknown or user-spawned process) requests read access to the memory of the Local Security Authority Subsystem Service (lsass.exe), a common precursor to harvest a service account's NTLM hash.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application and File Servers where target service accounts run",
            "action": [
              "Deploy a detection rule to alert when a Sysmon Event ID 10 event shows a 'TargetProcess' of 'lsass.exe' and the 'GrantedAccess' mask includes '0x1010' (PROCESS_VM_READ and PROCESS_QUERY_INFORMATION) or '0x1410'. The rule must filter out access by known, legitimate processes defined in an allow-list (e.g., 'MsMpEng.exe', EDR agent processes).",
              "For each host, create and maintain a historical frequency table of all source processes that have accessed lsass.exe over the past 90 days. Alert when a process accesses lsass.exe if that source process has never been seen accessing LSASS on that host before ('first-seen' access) or its access frequency is in the bottom 5th percentile of all historical access events.",
              "Deploy an unsupervised anomaly detection model (e.g., Isolation Forest) trained on features from legitimate LSASS access events (Sysmon Event ID 10). Features should include 'SourceImage', 'SourceUser', 'ParentProcessImage', and 'GrantedAccess'. The model will create a profile of normal behavior; alert on any new access event that the model flags as an outlier with a high anomaly score."
            ]
          },
          {
            "description": "A successful Kerberos logon (Windows Event ID 4624, Logon Type 3) is logged on a member server, but no corresponding Kerberos service ticket request (TGS-REQ) event (Windows Event ID 4769) is found on any Domain Controller for the same Account Name and Service Name within the ticket's valid lifetime.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (KDCs), Member Servers hosting critical services (e.g., SharePoint, MSSQL)",
            "action": [
              "Implement a correlation search that joins successful Kerberos network logons (Event ID 4624 on member servers) with service ticket requests (Event ID 4769 on Domain Controllers). For each 4624 event, search for a 4769 event where the Account Name and Service Name match, occurring within the previous 10 hours. Alert if no matching 4769 event is found.",
              "Aggregate the count of these 'unmatched logons' per hour for each member server and each service. Establish a baseline for this metric, which should be consistently zero or near-zero. Alert if the hourly count for any server or service exceeds a predefined static threshold (e.g., > 5 events) or a dynamic threshold (e.g., > 4 standard deviations above its 30-day moving average).",
              "Model the time series of 'unmatched logon' counts per critical service using an algorithm like SARIMA or Prophet. The model will forecast the expected count for future time intervals. Generate an alert whenever the observed count falls outside the model's prediction confidence interval, indicating a statistically significant anomaly that is not explained by normal seasonality or trends."
            ]
          },
          {
            "description": "A Kerberos network logon to a high-value service occurs from a source IP address, at a time, or on behalf of a user that is inconsistent with established patterns of behavior for that service or user account.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Gateways, All Servers, Privileged User Workstations",
            "action": [
              "For high-value service accounts, create and enforce a static access policy. The policy should define allowed source subnets, typical hours of operation, and a list of services normally accessed. Generate a high-severity alert for any logon that violates this static policy.",
              "For each user and service account, build a multi-faceted behavioral baseline from historical logon data (Windows Event ID 4624 enriched with Zeek conn.log). Profile features like source country/ASN, logon hour, logon day-of-week, and service accessed. Assign a risk score to new logons based on the rarity of its features (e.g., using z-scores or percentile ranks). Alert if the cumulative risk score for a single logon exceeds the 98th percentile of all historical scores.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN or HDBSCAN) to historical logon data, using features such as geolocated source IP, user account, service SPN, and logon timestamp. Normal activity will form dense clusters. Deploy this model to score new logons; any logon that falls in a sparse region or is classified as a noise point should be flagged as an anomaly for investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]