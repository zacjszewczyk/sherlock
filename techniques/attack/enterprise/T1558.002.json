[
  {
    "information_requirement": "Has an adversary forged a Kerberos service ticket (Silver Ticket) to access a specific resource?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1558.002",
        "name": "Silver Ticket",
        "evidence": [
          {
            "description": "A Kerberos network logon (Windows Event ID 4624) is recorded with a Ticket Encryption Type of RC4_HMAC ('0x17') when the targeted service account or domain policy enforces AES encryption ('0x11' or '0x12').",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application and File Servers (e.g., SharePoint, MSSQL, CIFS shares)",
            "action": [
              "Symbolic: Create a rule to alert if a Windows Event ID 4624 logon event has a 'Ticket Encryption Type' of '0x17' (RC4_HMAC) for any service account known to require AES ('0x11' or '0x12') by policy.",
              "Statistical: For each service principal name (SPN), calculate the historical ratio of RC4 to AES encryption types seen in logon events. Alert if the RC4 ratio for any given SPN suddenly increases beyond a statistical threshold (e.g., exceeds the 99th percentile of its historical daily values).",
              "Machine Learning: Train a classification model (e.g., Random Forest) on logon events with features like account name, service name, source IP, and encryption type. Flag logons classified as malicious where the 'Ticket Encryption Type' is a top contributing feature for the prediction."
            ]
          },
          {
            "description": "The command line of a newly created process contains arguments consistent with the use of tools like Mimikatz or Rubeus for forging or injecting Kerberos tickets.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, especially Privileged Access Workstations and Critical Service Servers",
            "action": [
              "Symbolic: Create a rule to alert on process creation (Windows Event ID 4688) where the command line contains specific keywords and argument patterns associated with ticket abuse, such as 'kerberos::golden', 'asktgs', '/ticket:', 'ptt', or 'Rubeus.exe silver'.",
              "Statistical: Calculate the character entropy of command-line arguments for common processes like 'powershell.exe' and 'cmd.exe'. Alert on commands with entropy scores that are statistical outliers (e.g., >3 standard deviations from the mean), which can indicate obfuscated or encoded commands used by these tools.",
              "Machine Learning: Utilize a sequence-based classification model (e.g., an LSTM or a transformer-based NLP model) trained on a labeled dataset of malicious and benign command lines. The model learns the structure of malicious commands and can alert on new command lines that it classifies as having a high probability of being malicious."
            ]
          },
          {
            "description": "An unauthorized or statistically unusual process requests a handle to the Local Security Authority Subsystem Service (LSASS) process memory, indicating a potential credential dumping attempt to acquire a service account's NTLM hash.",
            "data_sources": [
              "Windows Event ID 4656",
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application and File Servers",
            "action": [
              "Symbolic: Create a rule to alert when a handle to 'lsass.exe' is requested (Sysmon Event ID 10 or Windows Event ID 4656) with access rights including 'PROCESS_VM_READ' (e.g., 0x1010 or 0x1410) by a source process not on an established allow-list of legitimate system/security tools.",
              "Statistical: For each host, build a baseline of normal processes that access 'lsass.exe'. Alert if a process that has never or rarely accessed LSASS before does so. This 'first-seen' or 'low-frequency' access can be identified by comparing against a historical frequency table of source-target process interactions.",
              "Machine Learning: Train an anomaly detection model (e.g., One-Class SVM) on features of legitimate LSASS access events (e.g., source process name, parent process, user context, access mask). The model creates a boundary of normal behavior and alerts on any new access event that falls outside this boundary."
            ]
          },
          {
            "description": "A successful Kerberos network logon to a service server (Windows Event ID 4624) occurs without a corresponding Kerberos service ticket request (TGS-REQ) logged on a Domain Controller (Windows Event ID 4769).",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (KDCs), Critical Application and File Servers",
            "action": [
              "Symbolic: For each successful Kerberos network logon (Event ID 4624) on a member server, query Domain Controller logs for a corresponding service ticket request (Event ID 4769) with a matching 'Account Name' and 'Service Name' within a valid time window (e.g., previous 10 hours). Alert if no corresponding event is found.",
              "Statistical: Maintain a running count of these 'unmatched logons' per host and per service. Establish a baseline for this metric (which should be near zero). Alert if the count for any host or service spikes significantly above its historical moving average, indicating a potential Silver Ticket attack at scale.",
              "Machine Learning: Use a time-series anomaly detection algorithm (e.g., SARIMA or Prophet) to model the stream of 'unmatched logon' counts over time. Alert when the observed count significantly deviates from the model's forecast, indicating a statistically improbable event."
            ]
          },
          {
            "description": "A user or service account performs a Kerberos network logon to a service from a source workstation, geographic location, or at a time of day that deviates from its established behavioral baseline.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Servers, Privileged User Workstations, VPN Gateways",
            "action": [
              "Symbolic: For high-value service accounts, define a static profile of allowed source hosts and typical services accessed. Alert if a logon occurs from a source host not on the allow-list or to a service not in the defined profile.",
              "Statistical: For each account, profile historical logons to create a baseline of [Source Subnet, Service Accessed, Hour of Day]. Use a scoring system where deviations from the norm (e.g., logon from a rare subnet, access to a rarely used service) add risk points. Alert when an account's cumulative risk score for a session exceeds a percentile-based threshold (e.g., 95th percentile of all session scores).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on historical logon data, using features such as geolocated source IP, account, service, and time. Legitimate activity forms dense clusters. New logons that are flagged as noise/outliers by the algorithm represent a strong deviation from all established patterns of normal behavior and should be alerted on."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]