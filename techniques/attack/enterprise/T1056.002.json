[
  {
    "information_requirement": "Is the adversary attempting to capture credentials by spoofing legitimate GUI prompts?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1056.002",
        "name": "GUI Input Capture",
        "evidence": [
          {
            "description": "A process is created on an endpoint where the process's file hash (SHA256 or MD5) matches a known malicious hash associated with GUI-based credential capture tools (e.g., a PowerSploit module, Mimikatz variant, or known credential phishing executable).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Remote Desktop servers, Citrix servers, Virtual Desktop Infrastructure (VDI) instances, SIEM correlation engine",
            "action": [
              "Symbolic: Create a SIEM rule to monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1). For each event, compare the process's file hash against an IoC list of known malicious hashes for GUI credential theft tools. Trigger a high-severity alert upon a match, including the hostname, user, process name, and matched hash.",
              "Statistical: For processes not matching known malicious hashes, calculate the enterprise-wide prevalence of each process hash over the last 30 days. Flag any process whose hash appears on a statistically insignificant number of endpoints (e.g., < 0.1% of all hosts, or < 5 total instances) and is spawned by a common user application (e.g., OUTLOOK.EXE, WINWORD.EXE) as a rare and suspicious event requiring investigation.",
              "Machine Learning: Apply a pre-trained supervised classification model (e.g., Random Forest, Gradient Boosting) to incoming process creation events. Use features such as parent process name, process path depth, command-line length, command-line entropy, and user context. Alert on any process classified as a credential phisher with a confidence score exceeding a defined threshold (e.g., > 0.90)."
            ]
          },
          {
            "description": "A scripting interpreter (e.g., powershell.exe, cscript.exe) is executed with command-line arguments or script block content containing strings indicative of GUI form creation, such as 'System.Windows.Forms', 'Add-Type', 'Show-Dialog', or 'Out-GridView -PassThru'.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Domain Controllers, Application servers, Exchange servers",
            "action": [
              "Symbolic: Create a detection rule that scans command-line arguments (from Windows Event ID 4688/Sysmon Event ID 1) and script block text (from PowerShell Event ID 4104) for case-insensitive regular expression matches on keywords such as 'System.Windows.Forms', 'Add-Type', 'Show-Dialog', or 'Out-GridView -PassThru'. Trigger an alert when these keywords are present, especially if the parent process is not powershell_ise.exe or a known administrative tool.",
              "Statistical: For all script executions (PowerShell Event ID 4104), calculate the character entropy and total length of the script block. Establish a baseline distribution for these metrics per user or host. Flag executions where the entropy or length exceeds a high percentile (e.g., 98th percentile) of the established baseline, as this indicates unusually complex or obfuscated scripts that may be embedding GUI-generation code.",
              "Machine Learning: Utilize a classification model trained on the tokenized content of PowerShell script blocks (Event ID 4104). Train the model on a labeled dataset of benign administrative scripts versus malicious scripts (including GUI-spoofing examples). Deploy the model to score all new script executions in real-time and alert on those classified as having a high probability of malicious intent to capture credentials."
            ]
          },
          {
            "description": "An anomalous parent-child process relationship is observed where a document-centric or non-interactive application (e.g., WINWORD.EXE, OUTLOOK.EXE, AcroRd32.exe) spawns a scripting interpreter (e.g., powershell.exe, cmd.exe, wscript.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers hosting Office documents, Mail servers, SIEM correlation engine",
            "action": [
              "Symbolic: Create a SIEM rule that triggers an alert for specific, high-risk parent-child process relationships observed via process creation logs (Windows Event ID 4688, Sysmon Event ID 1). Maintain a list of forbidden pairs, such as parent: WINWORD.EXE, child: powershell.exe, or parent: OUTLOOK.EXE, child: cmd.exe.",
              "Statistical: For all observed parent-child process pairs, build a frequency table over a 30-day rolling window to establish a baseline of normal activity. Calculate the rarity of each pair. Trigger an alert for any newly observed pair ('first seen') or any pair whose frequency falls in the bottom percentile (e.g., < 1%) of all observed process relationships, especially when the child process is a scripting interpreter or unsigned binary.",
              "Machine Learning: Apply an unsupervised anomaly detection model, such as an Isolation Forest or a graph-based model, to features derived from parent-child process relationships (e.g., one-hot encoded parent name, child name, user context, time of day). The model learns normal process execution chains. Flag any new process creation event that receives a high anomaly score, indicating it deviates significantly from learned normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary exfiltrating credentials collected via a spoofed GUI prompt?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1056.002",
        "name": "GUI Input Capture",
        "evidence": [
          {
            "description": "An outbound network connection is initiated from a host to a destination IP, domain, or URI matching a known command-and-control (C2) or data exfiltration endpoint within a short time window (e.g., less than 5 minutes) following a suspected GUI credential capture event on the same host.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls, proxies), DNS servers, Endpoints, SIEM correlation engine",
            "action": [
              "Symbolic: Create a correlation rule that links alerts from the Credential Access PIR (e.g., suspicious process creation) with network connection logs (Sysmon Event ID 3, Zeek conn.log). If the source host of the suspicious process initiates an outbound connection within 5 minutes to a destination IP or domain on a threat intelligence blocklist, escalate to a high-severity incident.",
              "Statistical: For hosts with a recent credential capture alert, analyze subsequent DNS requests (Zeek dns.log). Calculate features for each requested domain, including registration age (via WHOIS), public suffix, and character entropy. Flag connections to domains that are statistically anomalous (e.g., newly registered < 30 days, high entropy > 3.5, rare across the enterprise) as potential C2 communication.",
              "Machine Learning: Apply a pre-trained Domain Generation Algorithm (DGA) detection model to all DNS queries (Zeek dns.log). The model, using features like domain length, n-gram frequency, and vowel-to-consonant ratio, classifies domains as benign or DGA. Alert when a host, shortly after a suspicious GUI process event, attempts to resolve a domain classified as likely DGA-generated."
            ]
          },
          {
            "description": "An outbound HTTP/S POST request contains data in its body that matches patterns for credential field names (e.g., 'username=', 'password=') and originates from a process not typically associated with authentication (e.g., powershell.exe, rundll32.exe, or an unsigned binary). For HTTPS traffic, this may be inferred from the destination SNI and other connection metadata.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxies with TLS inspection, Network TAPs at egress points, Endpoints",
            "action": [
              "Symbolic: With TLS inspection, create a rule to scan the 'request_body' field in HTTP logs (Zeek http.log) for regular expressions matching credential patterns (e.g., /(user|pass|login|cred)(name|word)?=/i). Correlate the source IP/timestamp with process logs to identify the originating process. Alert if the process is not a whitelisted browser or known application.",
              "Statistical: For all HTTP POST requests, calculate the size of the request body. Establish a per-process baseline of POST request sizes. Flag requests from non-browser processes where the request body size is both small (e.g., < 1 KB, typical for credentials) and a statistical outlier (e.g., > 3 standard deviations from the process's mean request size), indicating a potential exfiltration event.",
              "Machine Learning: Train a classifier to distinguish between legitimate and malicious HTTP/S connections. Use features such as the originating process name (from endpoint logs), destination server name indicator (SNI from Zeek ssl.log), URI path structure, request method, and JA3/JA3S hash. Alert on connections classified as malicious with high confidence, particularly when the source process is a scripting interpreter or an unsigned executable."
            ]
          },
          {
            "description": "A small volume of data is exfiltrated from a host using a covert channel, such as DNS queries with encoded data in subdomains or ICMP packets with data payloads, within minutes of a suspected GUI credential capture event.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek icmp.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers, Network egress points (firewalls), Endpoints, SIEM correlation engine",
            "action": [
              "Symbolic: Monitor DNS logs (Zeek dns.log) for queries where the FQDN length exceeds a fixed threshold (e.g., 100 characters) or contains non-standard characters (base64, hex). Monitor ICMP logs (Zeek icmp.log) for echo requests with a payload size greater than zero. Correlate with recent credential capture alerts from the source host.",
              "Statistical: For each host, create a time series of its DNS query behavior, tracking metrics like average query length, number of unique subdomains per parent domain, and frequency of TXT record requests. Flag any host that exhibits a sudden, sustained spike that is > 3 standard deviations from its established 30-day baseline, indicating potential DNS tunneling.",
              "Machine Learning: Develop an unsupervised anomaly detection model for DNS traffic features on a per-host basis. The model should include features like query/response sizes, query label entropy, and query type distribution (A, AAAA, TXT, CNAME). Alert when a host's real-time DNS traffic generates a high anomaly score, indicating a significant deviation from its learned normal behavior consistent with DNS-based data exfiltration."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]