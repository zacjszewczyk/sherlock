[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using system script proxies?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense-Evasion",
    "indicators": [
      {
        "technique_id": "T1216",
        "name": "System Script Proxy Execution",
        "evidence": [
          {
            "description": "A system script proxy process (e.g., cscript.exe, pubprn.vbs) is observed with command-line arguments containing an atomic indicator (URL, IP, domain, hash) from a high-confidence threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, particularly those with direct internet access.",
            "action": [
              "Symbolic: For all process creation events (Windows Event ID 4688), parse the command line to extract indicators like domains, IPs, and file hashes. Join these extracted indicators against a high-confidence threat intelligence feed. Generate an alert for any match associated with a known script proxy parent process (e.g., cscript.exe, wscript.exe, forfiles.exe, pubprn.vbs).",
              "Statistical: For command lines of script proxies that do not contain a known IOC, calculate the frequency of the domain or IP seen across the enterprise over the last 30 days. Flag any script proxy execution involving a domain or IP that falls below the 5th percentile of frequency, indicating it is exceptionally rare for the organization.",
              "Machine Learning: Develop a time series model (e.g., ARIMA) for the volume of IOC matches related to script proxy executions. An alert is triggered if the observed volume of matches in a given time window (e.g., 1 hour) is a statistical anomaly that deviates significantly from the forecasted volume, suggesting a coordinated campaign."
            ]
          },
          {
            "description": "A system script proxy process is observed with a command-line structure that matches a known malicious signature or regular expression pattern associated with specific toolsets or campaigns.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, especially systems where application control policies are enforced.",
            "action": [
              "Symbolic: Apply a library of regular expressions (regex) against the 'CommandLine' field of Windows Event ID 4688 events. These regex patterns should target known malicious command structures for T1216, such as 'pubprn.vbs' calling a remote script via 'cscript //E:JScript //Nologo pubprn.vbs 127.0.0.1 \"-script:http://...\"'. Alert on any match.",
              "Statistical: For each script proxy command line, calculate the Shannon entropy of the argument string. Establish a baseline of normal entropy values for legitimate script executions across the environment. Flag command lines with entropy scores exceeding the 95th percentile, as high entropy often indicates obfuscated or randomized commands used for evasion.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on a labeled dataset of command lines (malicious vs. benign). Use features such as command length, special character count, presence of URLs/IPs, and entropy. Use the trained model to score new script proxy command lines in real-time and alert on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "A system script proxy (e.g., cscript.exe, wscript.exe) executes and spawns an anomalous child process, such as powershell.exe, cmd.exe, or another binary not typically launched by a script interpreter.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, with a focus on user endpoint devices and jump servers.",
            "action": [
              "Symbolic: Create an explicit allow-list of common, legitimate child processes for known script proxies (e.g., cscript.exe, wscript.exe). Monitor Windows Event ID 4688 logs for any parent-child relationship where a script proxy spawns a process not on this list, particularly high-risk children like 'powershell.exe', 'cmd.exe', 'rundll32.exe', or processes running from temporary user directories. Alert on any deviation.",
              "Statistical: For each host, build a statistical baseline of parent-child process relationships involving script proxies. Calculate the historical frequency of each unique parent-child pair (e.g., 'wscript.exe' -> 'some_app.exe'). Alert when a script proxy spawns a child process that is rare for that specific host or for its peer group (e.g., other servers in the same application cluster), defined as a frequency below the 1st percentile.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) to group hosts based on their typical parent-child process behaviors. Use features such as the set of child processes spawned by script interpreters. Generate an alert when a host's behavior shifts, causing it to move to a different, smaller, or newly formed cluster, indicating a significant deviation from its established norm."
            ]
          },
          {
            "description": "A system script proxy process (e.g., cscript.exe) or its direct child process initiates an outbound network connection to an external IP address, particularly one that is rare or has a poor reputation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies) and all enterprise workstations and servers.",
            "action": [
              "Symbolic: Correlate process creation events (Windows Event ID 4688) with network connection logs (Zeek conn.log) on source IP and timestamp. Create an alert if a process identified as a script proxy (e.g., 'cscript.exe') or its immediate child is associated with a network connection to a destination IP on a known C2 server blocklist.",
              "Statistical: For every network connection initiated by a script proxy, analyze the destination IP in Zeek conn.log. Maintain a baseline of all destination IPs connected to by the enterprise. Calculate the enterprise-wide access frequency for the destination IP. Flag connections to IPs that fall in the lowest percentile (e.g., bottom 1%) of frequency, as these represent exceptionally rare destinations.",
              "Machine Learning: Apply a time series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the volume and diversity of outbound connections originating from script proxy processes. The model should learn the normal daily/weekly patterns of such traffic. An alert is triggered when a statistically significant spike in the number of connections or the number of unique destination IPs is detected."
            ]
          },
          {
            "description": "A system script proxy executes with a command line referencing a script file located in a suspicious or non-standard directory, such as a user's download folder, temporary directory, or a world-writable location.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, and shared network drives.",
            "action": [
              "Symbolic: From the command line in Windows Event ID 4688 events, extract the file path of the script being executed by the proxy. Apply a ruleset that flags any execution from high-risk directories, including but not limited to '%TEMP%', '%APPDATA%', 'C:\\Users\\Public\\', user download folders, or any world-writable directory. Generate a high-severity alert for any match.",
              "Statistical: Calculate the Shannon entropy of the script's file path string extracted from the command line. Establish a baseline for path entropy from legitimate scripts. Flag executions where the path entropy exceeds the 95th percentile, which can indicate use of randomized or deeply nested directories to evade simple path-based detections. Also, track the frequency of execution from different parent directories and flag executions from directories that are statistically rare (e.g., below 5th percentile of usage).",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on the features of legitimate script execution paths (e.g., path depth, directory name token counts, file extension). This model learns the boundary of 'normal' behavior. Use this model to classify new script executions in real-time. Any execution that falls outside the learned boundary is flagged as an anomaly."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]