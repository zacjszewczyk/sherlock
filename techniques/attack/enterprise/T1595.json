[
  {
    "information_requirement": "Is the adversary performing active scanning against our external infrastructure?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1595",
        "name": "Active Scanning",
        "evidence": [
          {
            "description": "Inbound connection attempts originating from an external IP address listed on a threat intelligence feed as a known scanner, malicious host, or anonymizing proxy.",
            "data_sources": [
              "Zeek conn.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls, VPN gateways, and other internet-facing network appliances.",
            "action": [
              "Symbolic (IOC Match): Create a watch list of malicious IPs from a CTI feed. Join inbound Zeek conn.log records on the source IP ('id.orig_h') with the watch list. Generate an alert for any successful match.",
              "Statistical: For IPs matched on a CTI feed, calculate the ratio of rejected connections (conn_state = 'REJ') to total connections. A ratio significantly higher than the network average (e.g., > 3 standard deviations) may indicate a scanner probing for open ports.",
              "Machine Learning (Classification): Use a supervised classification model (e.g., Logistic Regression) trained on labeled historical data. Features should include CTI feed matches, connection state, protocol, and service type. The model will predict the probability of a connection being part of a malicious scan."
            ]
          },
          {
            "description": "Inbound HTTP/S traffic to external services contains User-Agent strings, JA3/JA3S hashes, or other header values known to be associated with scanning tools.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing web servers and reverse proxies.",
            "action": [
              "Symbolic (IOC Match): Maintain a list of regular expressions matching User-Agent strings of known scanning tools (e.g., 'nmap', 'masscan', 'zgrab'). Scan the 'user_agent' field in Zeek http.log for matches. Similarly, maintain a deny-list of JA3/JA3S hashes from Zeek ssl.log associated with malicious tools.",
              "Statistical (Rarity): Calculate the frequency of all User-Agent strings and JA3 hashes seen in a 24-hour period. Identify outliers by flagging any values that fall below a rarity threshold (e.g., seen less than 5 times) and do not belong to a known-good allow-list. A rare User-Agent or JA3 hash is suspicious.",
              "Machine Learning (Anomaly Detection): Train an unsupervised anomaly detection model (e.g., Isolation Forest) on features extracted from HTTP/S logs, including User-Agent length, character distribution of User-Agent, and JA3 hash. The model will score each request, with high anomaly scores indicating potential scanning tool artifacts."
            ]
          },
          {
            "description": "A high volume of inbound connections from a single source IP exhibits TCP connection states or flag combinations characteristic of network scanning (e.g., SYN scans, FIN scans, NULL scans, XMAS scans).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls and internet-facing hosts.",
            "action": [
              "Symbolic (Threshold): Create rules to alert on specific 'conn_state' values from a single source IP in Zeek conn.log. For example, trigger an alert if a source IP generates more than 100 'S0' (SYN sent, no SYN-ACK) or 'REJ' (connection rejected) states within 1 minute. Also, monitor Zeek weird.log for events like 'bad_TCP_header_len'.",
              "Statistical (Distribution Analysis): For each source IP, calculate the distribution of 'conn_state' values over a 5-minute window. Establish a baseline for a normal distribution (e.g., mostly 'SF' - established and finished). A distribution heavily skewed towards 'S0', 'REJ', or 'RSTR' should be flagged using a chi-squared test against the baseline.",
              "Machine Learning (Time Series): Use time series analysis (e.g., ARIMA) on the count of anomalous connection states ('S0', 'REJ') per source IP over time. The model can forecast the expected count and flag significant deviations from the forecast, indicating a sudden burst of scanning activity."
            ]
          },
          {
            "description": "A single external source IP establishes connections to an anomalously large number of unique destination ports on one host (vertical scan) or unique destination hosts on one port (horizontal scan) within a short time frame.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls and demilitarized zone (DMZ) segments.",
            "action": [
              "Symbolic (Threshold): For each source IP ('id.orig_h'), count the number of unique destination ports ('id.resp_p') and unique destination hosts ('id.resp_h') within a 1-minute window. Alert if $$ count(distinct id.resp_p) > 50 $$ for a single destination host (vertical scan) or if $$ count(distinct id.resp_h) > 50 $$ on a single destination port (horizontal scan).",
              "Statistical (Percentile): Over a 5-minute window, calculate the count of unique destination ports and hosts for every source IP. Determine the 99th percentile for these counts across all sources to establish a dynamic threshold. Flag any source IP exceeding this threshold as a potential scanner.",
              "Machine Learning (Clustering): Apply a clustering algorithm (e.g., DBSCAN) to connection data, using features like source IP, destination IP, and destination port. Scanners will naturally form dense clusters, such as a single source IP connecting to many destination ports, which DBSCAN can identify as a distinct cluster of activity."
            ]
          },
          {
            "description": "An external source IP exhibits a high Shannon entropy value for destination ports or destination hosts over an extended period (e.g., 1-24 hours), indicating broad but slow probing activity.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls and log aggregation systems.",
            "action": [
              "Symbolic (Heuristic): For each source IP, if the time delta between consecutive new port connections is consistently high (e.g., > 10 seconds) but the total number of unique ports contacted over 24 hours is high (e.g., > 100), flag for review. This is a heuristic for 'low and slow' activity.",
              "Statistical (Entropy): For each source IP, collect the set of destination ports contacted over a 1-hour window. Calculate the Shannon entropy of this set using the formula $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_{2} P(x_i) $$. Establish a baseline entropy distribution for typical traffic. Flag source IPs whose entropy value exceeds the 98th percentile of the baseline.",
              "Machine Learning (Time Series Anomaly Detection): Use a time series anomaly detection model on the calculated entropy values for each source IP over several days. A sudden, sustained increase in entropy for a specific IP, even if the volume remains low, can be detected by an autoencoder trained to reconstruct normal entropy patterns."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]