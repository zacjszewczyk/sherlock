[
  {
    "information_requirement": "Has the adversary gained initial access via spearphishing through third-party services?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1566.003",
        "name": "Spearphishing via Service",
        "evidence": [
          {
            "description": "A file downloaded from a third-party service (e.g., social media, webmail) has a hash that matches a value in a threat intelligence feed, or a network connection is made to a domain/IP from such a service that is on a blocklist.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway proxy and firewall logs; Endpoint Detection and Response (EDR) agent logs on user workstations.",
            "action": [
              "Symbolic: Continuously join Zeek files.log (fuid, md5, sha1) with Zeek http.log (uid, host) on the 'uid' field. Filter for 'host' values that match an enterprise-defined list of third-party services. Compare the resulting file hashes (md5, sha1) and host values against a high-confidence threat intelligence feed, updated at least hourly. Generate a high-priority alert for any match.",
              "Statistical: For each monitored third-party service domain, establish a 30-day rolling baseline of the rate of threat intelligence matches per 1,000 downloads. Alert if the match rate for any service in a one-hour window exceeds the 99th percentile of its historical baseline, which could indicate a targeted campaign leveraging that service.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from Zeek logs (e.g., file MIME type, connection duration, domain age from DNS queries, domain reputation score, file size) to predict if a download is malicious. Deploy the model to score all file downloads from third-party services in near real-time and alert on any download classified as malicious with a confidence score above 0.90."
            ]
          },
          {
            "description": "A parent process associated with an office suite application (e.g., winword.exe, excel.exe, acrobat.exe) spawns a child process commonly used for execution (e.g., powershell.exe, cmd.exe, wscript.exe) within a 5-minute window following a file download from a third-party service.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations; Virtual Desktop Infrastructure (VDI) environment; Centralized Security Information and Event Management (SIEM) system.",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when a file download is observed from a third-party service (via Zeek http.log `host` field) and, within 2 minutes, a process creation event (Windows Event ID 4688) is logged on the destination host where the 'CreatorProcessName' is an office application (e.g., winword.exe, excel.exe) and the 'NewProcessName' is a scripting engine or shell (e.g., powershell.exe, cmd.exe, wscript.exe).",
              "Statistical: For each user and parent process (e.g., winword.exe), build a baseline of normally spawned child processes. Calculate the entropy of command-line arguments for spawned processes like powershell.exe. Generate an alert if a parent process spawns a statistically rare child process (one not seen in the last 90 days for that user) or if the command-line entropy for a spawned process exceeds 2 standard deviations from the user's established baseline.",
              "Machine Learning: Use an unsupervised learning algorithm (e.g., Isolation Forest or a graph-based model) on process lineage data (parent, child, grandparent) and associated command-line arguments. Train the model on baseline activity to identify anomalous process chains. Flag any post-download process chain originating from an office application that the model identifies as a high-scoring outlier."
            ]
          },
          {
            "description": "A file transferred from a known third-party service domain has a high-risk MIME type (e.g., 'application/x-msdownload', 'application/vnd.ms-word.document.macroEnabled.12') or a filename that uses obfuscation techniques like double extensions (e.g., 'report.pdf.exe').",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points; Web content filters; Network security monitoring sensors.",
            "action": [
              "Symbolic: Monitor Zeek files.log for transfers where the 'source' is 'HTTP'. Filter for connections where the corresponding Zeek http.log 'host' field matches a list of third-party services. Alert on filenames matching regex for double extensions (e.g., '\\.(pdf|docx|xlsx)\\.exe$') or if the 'mime_type' field matches a blocklist of high-risk types (e.g., 'application/x-dosexec', 'application/hta', 'application/vnd.ms-word.document.macroEnabled.12').",
              "Statistical: For each third-party service, establish a baseline of file MIME types downloaded by the organization. Calculate the proportion of high-risk vs. benign file types downloaded daily. Alert if the proportion of high-risk file types (e.g., .zip, .docm, .exe) from a specific service in a 1-hour window exceeds the 95th percentile of the daily average, indicating an unusual shift in download behavior.",
              "Machine Learning: Train a classifier to predict malicious files based on features from Zeek files.log (e.g., MIME type, file extension, filename length, filename character entropy, source domain). Use this model to score all files downloaded from third-party services and flag those with a high malicious probability score for analyst review."
            ]
          },
          {
            "description": "Within 5 minutes of a file download from a third-party service, the destination host initiates an outbound network connection (C2 beacon) to a domain that is newly registered (less than 30 days old), has a high character entropy score, or is not categorized by web filters.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers; Internet gateway firewalls; User workstations.",
            "action": [
              "Symbolic: Create a sequence-based rule: 1) A host downloads a file from a third-party service (Zeek files.log/http.log). 2) Within 5 minutes, the same host IP makes a DNS query (Zeek dns.log) for a domain on a threat intelligence feed of known C2 servers. 3) An outbound connection is initiated to the resolved IP (Zeek conn.log). Alert on the full sequence.",
              "Statistical: For each host, build a baseline of typical destination domains and connection characteristics (frequency, volume). After a file download from a third-party service, monitor for subsequent DNS queries (Zeek dns.log). Calculate the entropy of the queried domain name. Alert if the domain entropy is anomalously high (e.g., > 3.5) and the domain is rare for the host or organization (e.g., not in the top 95% of domains accessed).",
              "Machine Learning: Use a time series analysis model (e.g., LSTM) to forecast expected network beaconing behavior (e.g., connection frequency, data volume per hour) for each host. After a file download from a third-party service, compare the actual subsequent outbound traffic against the forecast. Alert on significant deviations that indicate anomalous, rhythmic C2-like activity."
            ]
          },
          {
            "description": "The number of unique hosts accessing a specific third-party service or downloading a specific file (by hash) from that service exceeds a dynamically calculated threshold within a short time frame (e.g., one hour), indicating a widespread, coordinated campaign.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized logging infrastructure (SIEM); Network traffic monitoring points at the network perimeter.",
            "action": [
              "Symbolic: Monitor Zeek files.log for a single file hash being downloaded by an unusually large number of distinct hosts (e.g., >10) within a one-hour window, where the referrer is a known third-party service domain. This 'fan-out' activity is a strong indicator of a coordinated attack.",
              "Statistical: For each monitored third-party service, create a 30-day rolling baseline of unique source IPs connecting per hour. Use a moving average and standard deviation to model normal traffic volume. Alert if the count of unique source IPs connecting in the current hour exceeds the baseline by more than 3 standard deviations.",
              "Machine Learning: Employ a clustering algorithm (e.g., DBSCAN) on connection data (Zeek conn.log) using features like source IP, destination domain, destination port, and timestamp. A dense cluster of many unique source IPs connecting to the same new or rare third-party service domain in a short period would indicate a coordinated campaign and be flagged as an anomalous event."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]