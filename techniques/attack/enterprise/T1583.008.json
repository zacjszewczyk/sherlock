[
  {
    "information_requirement": "What evidence indicates adversaries are leveraging malvertising infrastructure against our environment or users?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1583.008",
        "name": "Malvertising",
        "evidence": [
          {
            "description": "A direct network connection (TCP/UDP) or DNS query from an internal host to a domain, IP address, or URL that is present on a high-confidence threat intelligence feed for malvertising infrastructure with a 'last seen' date within the past 7 days.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Internet Gateway, Internal DNS Resolvers",
            "action": "1. Symbolic (IOC Match): Execute a continuous query that joins Zeek conn.log, dns.log, and http.log records with a live threat intelligence feed table containing malvertising indicators (IPs, domains, URLs). Generate a high-priority alert for any match. 2. Statistical (Frequency Analysis): For all matched IOCs, calculate the frequency of occurrence across the enterprise over a 24-hour sliding window. If the count of unique internal hosts contacting a single indicator exceeds the 95th percentile of the historical distribution for IOC hits, escalate the alert priority, as this may indicate a widespread campaign. 3. Machine Learning (Time Series Forecasting): Use a time series forecasting model (e.g., ARIMA) on the overall volume of IOC matches per hour. An observed volume that significantly exceeds the forecasted upper confidence interval suggests a new or surging malvertising campaign and should trigger a broader incident investigation."
          },
          {
            "description": "A sequence of at least three HTTP 30x redirects within 10 seconds, originating from a known ad network domain and terminating at a domain that is either a Newly Registered Domain (NRD, registered < 30 days ago) or has a reputation score below a defined threshold (e.g., < 20/100).",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Internet Gateway, User Workstations",
            "action": "1. Symbolic (Pattern Match): Construct a stateful rule that tracks HTTP sessions by `uid`. Identify sessions with an initial `referer` from a known ad provider list. Flag any session that subsequently traverses three or more redirects (HTTP status 301/302/307) and terminates at a domain matching an NRD list or a low-reputation domain list. 2. Statistical (Entropy Analysis): Calculate the entropy of URL query parameter keys for traffic to the final destination domain. If the entropy score is in the top 5th percentile of all destination URL parameter entropy scores for the past 24 hours, increase the risk score, as this often indicates fingerprinting. 3. Machine Learning (Classification): Train a decision tree classifier on features extracted from redirect chains: number of hops, presence of NRDs, reputation of final domain, presence of known tracking parameters. Use the classifier to assign a 'malicious' or 'benign' probability to each observed redirect chain, alerting on high-probability events."
          },
          {
            "description": "A file (e.g., EXE, MSI, DLL, script) is downloaded and written to an endpoint's file system, where the download session originated from a click on an advertisement (inferred from `referer` URL in Zeek http.log) and the downloaded file has a low prevalence score (<100 instances) across the enterprise.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Internet Gateway, Egress Network Scanners",
            "action": "1. Symbolic (Signature Match): Join Zeek http.log with files.log on the session ID (`uid`). For any session with a `referer` from a known ad network domain that results in a file download, scan the extracted file against YARA rules for known exploit kits and droppers. Alert on any match. 2. Statistical (Entropy & Prevalence): For any file downloaded from an ad-click session, calculate the Shannon entropy of the file content. If the entropy is > 7.5 (for executables) or > 6.0 (for scripts), flag it as potentially packed. Additionally, flag any executable with an enterprise-wide prevalence count of less than 10. 3. Machine Learning (Time Series Anomaly): Implement a time series analysis model to monitor the rate of file downloads (specifically executables and scripts) originating from ad network referers. Generate an alert if the observed download rate for a given hour exceeds the 99th percentile of the historical baseline, indicating a potential mass distribution campaign."
          },
          {
            "description": "A scripting engine process (e.g., powershell.exe, wscript.exe) or a non-browser process is created with a web browser process as its parent within 60 seconds of that browser completing a web request to a domain associated with a malvertising IOC or a high-risk redirect chain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Active Directory Domain Controllers",
            "action": "1. Symbolic (Correlation): Create a rule that triggers when a Windows Event ID 4688 for a suspicious process (e.g., `powershell.exe`, `mshta.exe`) with a browser parent (`chrome.exe`, `edge.exe`, etc.) is logged. The rule must query network logs (Zeek conn.log, http.log) for that host's IP in the preceding 60 seconds. If network activity to a known malvertising IOC is found, generate a high-severity alert. 2. Statistical (Argument Analysis): For all process creation events (Event ID 4688) with a browser parent, analyze the command-line arguments. Flag any instance where the command-line entropy or length exceeds the 98th percentile of the baseline for that specific parent-child process pair. 3. Machine Learning (Classification): Use a trained classification model (e.g., Logistic Regression) to score the likelihood of a browser-spawned process being malicious. Features should include: process name, parent process name, command-line entropy, presence of encoded commands, and time since last network connection to a low-reputation domain. Alert on processes with a high malicious probability score."
          },
          {
            "description": "A statistically significant increase (e.g., > 3 standard deviations above the hourly mean) in the number of unique internal hosts making DNS queries for Newly Registered Domains (NRDs, registered < 30 days ago), where the corresponding HTTP `referer` for a subset of this traffic originates from known ad networks.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Internet Gateway, Web Proxies",
            "action": "1. Symbolic (List Match): Correlate Zeek dns.log with http.log. For every DNS query to a domain on a pre-compiled list of NRDs, check if there was a preceding HTTP request from the same source IP where the `referer` domain is on a list of known ad-serving platforms. Alert on each correlated instance. 2. Statistical (Volume Anomaly): Establish an hourly baseline for the count of unique source IPs querying for NRDs. Use a percentile-based threshold (e.g., 99th percentile) on a 24-hour sliding window. Trigger an alert if the current hourly count exceeds this threshold. 3. Machine Learning (Anomaly Detection): Employ an anomaly detection algorithm like Isolation Forest on a feature set describing DNS query patterns per 5-minute window. Features should include: count of NRDs, ratio of NRDs to total domains, and average entropy of queried domain names. The model will flag time windows that are highly anomalous for investigation."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]