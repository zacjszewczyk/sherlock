[
    {
        "information_requirement": "Is the adversary exfiltrating sensitive data via code repositories?",
        "tactic_id": "TA0010",
        "tactic_name": "Exfiltration",
        "indicators": [
            {
                "technique_id": "T1567.001",
                "name": "Exfiltration to Code Repository",
                "evidence": [
                    {
                        "description": "Outbound network connections to domains or IP addresses of code repositories known to be used for malicious purposes or data exfiltration campaigns.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Zeek ssl.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Continuously correlate destination domains (from the Zeek ssl.log Server Name Indication field) and destination IP addresses (from Zeek conn.log) of all outbound connections against a high-confidence cyber threat intelligence (CTI) feed of known malicious code repository URLs, domains, and associated IPs. Alert on any matches and investigate the source host and data involved."
                    },
                    {
                        "description": "A sequence of process executions showing a common data compression or archiving tool followed immediately by 'git' commands to push data to a remote repository.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor process creation events (Windows Event ID 4688) with command-line logging enabled. Implement a rule to detect a sequence of commands on a single host within a short time window (e.g., 1-5 minutes): 1. Execution of an archiving tool (e.g., `7z.exe`, `rar.exe`, `zip.exe`, `tar.exe`) creating an archive file. 2. Followed by `git.exe` execution with `add` and `push` sub-commands that reference the newly created archive file. Use correlation analysis based on timestamp, host, and user context to link these events into a single high-fidelity alert."
                    },
                    {
                        "description": "Anomalously large data volumes in outbound connections to code repository services, indicating potential bulk data exfiltration rather than typical source code changes.",
                        "data_sources": [
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze Zeek conn.log for outbound connections to known code repository domains and IP ranges. For each host and user, establish a baseline of normal outbound data volume to these services using historical data. Employ time series analysis and statistical methods (e.g., Inter-Quartile Range (IQR) or Z-score) to detect significant deviations. Flag sessions or hosts with outbound data volumes exceeding 2-3 standard deviations from their established baseline or exhibiting a highly asymmetric outbound/inbound byte ratio (e.g., >95% outbound data)."
                    },
                    {
                        "description": "Connections to code repository services originating from user accounts, hosts, or processes not typically associated with software development, or from authorized users exhibiting unusual commit frequency.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Windows Event ID 4688",
                            "Windows Event ID 4624"
                        ],
                        "data_platforms": [
                            "Network devices",
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate network connections to code repositories (Zeek conn.log) with the originating process and user context on the source host (Windows Event ID 4688 for process, Windows Event ID 4624 for user logon session). Maintain profiles of users and hosts that normally interact with code repositories. Flag any connections from non-developer users or hosts (e.g., systems in Finance, HR, or other business units). For authorized developers, use time series analysis to detect anomalous spikes in commit/push frequency or activity occurring outside of normal working hours. A sudden, sustained linear increase in commit frequency can be modeled with linear regression and may indicate automated exfiltration."
                    },
                    {
                        "description": "Network connections to code repository services originating from a newly observed process on a host or from a common process (e.g., PowerShell) that has no prior history of making such connections.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 5156"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "For each host, use historical process execution (Windows Event ID 4688) and network connection (Windows Event ID 5156) logs to build a baseline of processes that normally make outbound connections to code repositories. Alert on any connections to code repository IPs/domains that originate from a process not on this established baseline or from a process that has only recently been observed on the system (low frequency in historical data). Calculate the entropy of destination services per process to find processes that suddenly begin communicating with new, anomalous services like code repositories."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
