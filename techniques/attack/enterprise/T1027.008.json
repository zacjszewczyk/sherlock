[
  {
    "information_requirement": "Is the adversary using stripped payloads to evade defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.008",
        "name": "Stripped Payloads",
        "evidence": [
          {
            "description": "An executable file's hash (SHA256 or MD5) matches a known stripped malware payload from threat intelligence. The match is observed when the file is written to disk, transferred over the network, or executed on a host.",
            "data_sources": [
              "Zeek file.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points, User workstations, Critical application servers, File shares, Email gateways",
            "action": [
              "Symbolic: Implement a real-time rule to calculate the SHA256 hash of all new executables observed in network traffic (Zeek file.log) or upon execution (Windows Event ID 4688). Correlate these hashes against a threat intelligence feed of known stripped malware IOCs. Trigger a high-severity alert upon a match.",
              "Statistical: For each 1-hour time window, count the number of unique, previously unseen executable hashes. Calculate a 30-day rolling average and standard deviation for this count. Generate an alert if the count in the current window exceeds 3 standard deviations above the rolling average, indicating an anomalous influx of new files.",
              "Machine Learning: Feed metadata from new executables (file size, MIME type, source/destination IP reputation, hash reputation) into a pre-trained supervised classification model (e.g., Random Forest). Investigate any executables that receive a 'malicious' classification with a confidence score greater than 0.8."
            ]
          },
          {
            "description": "A Portable Executable (PE) file, observed on the network or an endpoint, is found to have static properties indicative of stripping, such as an exported symbol count below a defined threshold (e.g., < 5), a printable string-to-file-size ratio in the lowest 5th percentile, or the absence of a 'VersionInfo' resource in the .rsrc section.",
            "data_sources": [
              "Static analysis tool output",
              "Zeek file.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File sandboxes, User workstations, Application servers, Network file shares",
            "action": [
              "Symbolic: Create a detection rule that automatically submits new executables (from Zeek file.log or Windows Event ID 4688) to a static analysis tool. Alert if the tool reports that a PE file is missing a .rsrc section or has a zero-sized VersionInfo resource, both of which are highly common in legitimate software.",
              "Statistical: For all new executables, extract the number of imported/exported functions and the density of printable strings. Compare these counts to a pre-computed baseline for legitimate software of a similar type (e.g., drivers, utilities). Flag any executable where the symbol count or string density falls below the 5th percentile of its baseline group.",
              "Machine Learning: Train a clustering algorithm (e.g., DBSCAN) on a feature vector derived from static file properties (number of sections, symbol count, string density, presence/absence of metadata fields). New files that are classified as outliers by the algorithm and do not fall into established clusters of legitimate software warrant investigation as potentially stripped or malicious."
            ]
          },
          {
            "description": "A PE file exhibits anomalous section entropy, such as a code section (.text) with Shannon entropy greater than 7.2 (suggesting packing/encryption) combined with the absence of a low-entropy resource section (.rsrc), indicating stripping of resources.",
            "data_sources": [
              "Static analysis tool output",
              "Zeek file.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File sandboxes, Network egress/ingress points, User workstations, Endpoint Detection and Response (EDR) platforms",
            "action": [
              "Symbolic: Create a detection rule that flags any executable where a static analysis tool reports that the .text (code) section has a Shannon entropy greater than 7.2 and the .rsrc (resource) section is either missing or has a virtual size of zero. This combination is a strong indicator of packed and stripped malware.",
              "Statistical: For each new executable, calculate the Shannon entropy of each PE section. Establish a baseline distribution of entropy values for common section names (.text, .data, .rsrc) from known-good files. Use the Interquartile Range (IQR) method to flag a file if its .text section entropy is an upper outlier (e.g., > Q3 + 1.5*IQR) and its .rsrc section size is a lower outlier (e.g., < Q1 - 1.5*IQR).",
              "Machine Learning: Use an anomaly detection model, such as an autoencoder, trained on the entropy vectors (e.g., a vector of [entropy(.text), entropy(.data), entropy(.rsrc)]) of PE sections from legitimate software. The model learns to reconstruct normal entropy profiles. Flag files that result in a high reconstruction error, as they are anomalous and likely packed or stripped."
            ]
          },
          {
            "description": "A process, spawned from an executable previously identified as having stripped-payload characteristics, is observed executing from a non-standard directory (e.g., %APPDATA%, C:\\Users\\Public) and initiating periodic network connections to a non-FQDN IP address or a domain with high Shannon entropy.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Domain Controllers, Network egress/ingress points, DNS servers",
            "action": [
              "Symbolic: Create a rule that correlates a process creation event (Windows Event ID 4688) from an executable previously flagged as 'stripped' with a subsequent network connection (Zeek conn.log) to an IP address on a threat intelligence blocklist within 60 seconds of execution.",
              "Statistical: For processes launched from stripped executables, analyze their network beaconing behavior from Zeek conn.log. Calculate the standard deviation of the inter-arrival time and data volume for outbound connections over a 10-minute window. Flag processes where the standard deviation of beaconing intervals is below a defined threshold (e.g., < 1 second), indicating machine-like regularity.",
              "Machine Learning: Employ a time series forecasting model (e.g., ARIMA) on the outbound traffic patterns (bytes, packets) for a new process. If the model can predict future traffic with high accuracy (low forecast error) over several intervals, it suggests automated, non-human behavior indicative of C2. Generate an alert if the forecast error remains consistently low."
            ]
          },
          {
            "description": "A process is created with a name that masquerades as a legitimate system binary (e.g., svchost.exe, lsass.exe), but its on-disk executable path is not in the expected system directory (e.g., C:\\Windows\\System32), and the binary itself exhibits properties of a stripped payload.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, User workstations, Critical application servers, System Registry",
            "action": [
              "Symbolic: For every process creation event (Windows Event ID 4688) involving a critical system process name (e.g., lsass.exe, svchost.exe, csrss.exe), trigger an alert if the process path is not C:\\Windows\\System32\\ or if the file hash does not match a known-good manifest for the specific OS build. Prioritize these alerts if the executable has been previously flagged as stripped.",
              "Statistical: Establish a baseline of parent-child process relationships for legitimate system processes (e.g., services.exe is the standard parent of svchost.exe). Monitor for deviations by calculating the frequency of parent processes for svchost.exe. If a new parent process like explorer.exe appears and its occurrence frequency is a statistical outlier (e.g., falls in the bottom 1% of all observed parent-child relationships), flag it as anomalous.",
              "Machine Learning: Train a one-class SVM classifier on features of legitimate system process executions, including process path, parent process name, command-line arguments, and user context (e.g., SYSTEM). This model creates a boundary defining normal behavior. Any new process execution that falls outside this boundary is classified as an anomaly, indicating potential masquerading."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]