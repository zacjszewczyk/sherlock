[
  {
    "information_requirement": "Has the adversary established persistence using SQL stored procedures?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1505.001",
        "name": "SQL Stored Procedures",
        "evidence": [
          {
            "description": "The primary SQL Server process (e.g., sqlservr.exe) initiates an outbound network connection to a destination IP address or domain that matches an entry on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SQL Database Servers, Network Egress Points, Threat Intelligence Platforms",
            "action": [
              "Symbolic: Filter network connection logs (Zeek conn.log, Windows Event ID 5156) for events where the source process is 'sqlservr.exe'. Correlate the destination IP address and domain against a real-time, high-confidence threat intelligence feed of known command and control (C2) servers. Generate a high-priority alert upon any match.",
              "Statistical: Analyze the historical frequency of all threat intelligence matches across the enterprise. A match on a connection originating from a critical server process like 'sqlservr.exe', which is also a statistically rare event (e.g., first time this indicator has been observed on a server), should have its risk score significantly elevated.",
              "Machine Learning: Develop a classification model (e.g., Logistic Regression) trained on labeled network connection data. Use features such as connection duration, bytes sent/received, destination port, JA3/JA3S hash, and CTI data to predict the likelihood that a new connection from 'sqlservr.exe' is malicious, flagging connections with a high probability score."
            ]
          },
          {
            "description": "The primary SQL Server process (e.g., sqlservr.exe) spawns a suspicious child process, such as a command shell (cmd.exe, powershell.exe) or a known post-exploitation tool.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SQL Database Servers, Application Servers hosting SQL, Active Directory Servers",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 for process creation events where the Parent Process Name is 'sqlservr.exe'. Maintain a watchlist of suspicious child process names (e.g., 'cmd.exe', 'powershell.exe', 'whoami.exe', 'net.exe', 'certutil.exe') and command-line arguments containing keywords like '-enc', 'IEX', or 'DownloadString'. Alert on any match.",
              "Statistical: For each child process spawned by 'sqlservr.exe', calculate the Shannon entropy of its command-line arguments. Unusually high entropy can indicate obfuscated or encoded commands. Establish a baseline of normal child processes and alert on any process that is statistically rare or has never been observed before (a 'first seen' event).",
              "Machine Learning: Use a one-class SVM or isolation forest model trained on features of legitimate child processes spawned by 'sqlservr.exe' (e.g., process name, command-line length, argument structure). Apply the model to new process creation events to detect anomalous outliers that do not conform to the established baseline of normal behavior."
            ]
          },
          {
            "description": "The SQL Server process (e.g., sqlservr.exe) initiates an outbound network connection to a destination that is anomalous based on geolocation, historical frequency, or other connection parameters.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SQL Database Servers, Network Egress Points, Geolocation IP Databases",
            "action": [
              "Symbolic: Define and enforce a strict allowlist policy for all approved destination IP addresses, domains, and ports for the 'sqlservr.exe' process. Monitor Zeek conn.log and Windows Event ID 5156 for any connection from 'sqlservr.exe' to a destination not on the allowlist and alert on any violation.",
              "Statistical: For each SQL server, build a statistical baseline of outbound connections from 'sqlservr.exe', profiling destination country, ASN, port, and protocol. Calculate the frequency of each unique connection tuple. Alert when a new connection occurs that falls below a low frequency threshold (e.g., 5th percentile) or involves a destination country not seen in the last 90 days.",
              "Machine Learning: Apply time-series analysis (e.g., ARIMA) to the volume of outbound data and the count of unique destination IPs from 'sqlservr.exe'. Use an anomaly detection algorithm to flag sudden spikes or significant deviations from the predicted forecast, which could indicate C2 beaconing or data exfiltration."
            ]
          },
          {
            "description": "The SQL Server process (e.g., sqlservr.exe) writes or modifies a file with an executable extension (.exe, .dll, .ps1, .bat) in a directory outside of its standard database and log file paths.",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SQL Database Server File Systems, Critical Application Directories",
            "action": [
              "Symbolic: Configure SACLs on SQL servers to audit file write operations (Windows Event ID 4663) by the 'sqlservr.exe' process. Create a detection rule that triggers an alert if 'sqlservr.exe' writes a file with an extension in [.exe, .dll, .ps1, .bat, .vbs] to a path outside of approved SQL data/log directories (e.g., 'C:\\Windows\\Temp\\', 'C:\\ProgramData').",
              "Statistical: For all files created by 'sqlservr.exe', calculate the Shannon entropy of the filename. Adversaries may use randomly generated filenames for payloads. Establish a baseline of normal filename entropy for log and data files and alert on any filename creation event where the entropy exceeds a high threshold (e.g., 95th percentile).",
              "Machine Learning: Train a classification model (e.g., Random Forest) on file creation events, using features like file path, file extension, process name, and time of day. The model can learn to distinguish between legitimate database operations and suspicious file drops, flagging events classified as high-probability malicious activity."
            ]
          },
          {
            "description": "The SQL Server configuration is modified to enable high-risk options, such as 'show advanced options', 'xp_cmdshell', or 'clr enabled', particularly outside of a documented change window.",
            "data_sources": [
              "Windows Event ID 4657",
              "SQL Server Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SQL Database Server Registries, Database Management Systems, Change Management Systems",
            "action": [
              "Symbolic: Monitor for modifications (Windows Event ID 4657) to specific registry keys corresponding to SQL Server configuration, such as the value for 'xp_cmdshell'. Alert on any change that sets these values to '1' (enabled) and correlate with change management records to verify authorization.",
              "Statistical: Profile the rate of change for the SQL Server configuration registry hive. A sudden burst of modifications, especially to multiple security-sensitive settings within a short time frame, is statistically anomalous and should be investigated, as it may represent an adversary preparing the environment.",
              "Machine Learning: Develop a rule-based model that assigns a risk score to configuration change events. The model should weigh factors such as the setting being changed ('xp_cmdshell' is higher risk than 'max server memory'), the time of the change (outside business hours), and the user account making the change. A cumulative score exceeding a set threshold triggers an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]