[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using polymorphic code?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.014",
        "name": "Polymorphic Code",
        "evidence": [
          {
            "description": "A process on a host, identified by its unique process hash, communicates with a network indicator (IP address or domain) known to be associated with malware families that utilize polymorphism.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Network Egress/Ingress Points (Firewall, Proxy), DNS Servers",
            "action": [
              "Symbolic: Correlate destination IPs and domain names from network logs (Zeek conn.log, dns.log) against a threat intelligence feed of C2 servers known for distributing or controlling polymorphic malware (e.g., Qakbot, Emotet). Alert on any match.",
              "Statistical: For hosts communicating with suspicious but unconfirmed destinations, analyze the process creating the connection (Windows Event ID 4688). Calculate the prevalence of the process hash across the enterprise. A process hash seen on a small number of machines (e.g., <1% of endpoints) communicating with a rare external destination (e.g., an IP with a low reputation score seen by <5% of hosts) is a high-risk indicator.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled network connection data. Features should include destination IP/ASN reputation, domain age and entropy, port number, JA3 hash, and connection duration/byte counts. Use the model to score new connections in real-time for their likelihood of being malicious and related to polymorphic threats."
            ]
          },
          {
            "description": "A process is created with command-line arguments or from a parent process that matches patterns of known crypters, packers, or loaders used to deploy polymorphic executables.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Maintain and apply a library of regular expressions to process command lines (Windows Event ID 4688). Search for patterns indicative of packers or loaders, such as 'rundll32.exe' executing an export from a DLL in a temporary directory, or PowerShell executing a large, base64-encoded command string. Alert on a match.",
              "Statistical: For each parent process (e.g., powershell.exe, wscript.exe, mshta.exe), calculate a baseline of normal child process names and paths. Alert when a parent process spawns a child process that is a statistical outlier (e.g., a process name never before seen spawned by that parent, or a child process path with a z-score > 3 based on historical path locations for that parent).",
              "Machine Learning: Use a sequence analysis model (e.g., an LSTM) to analyze parent-child process relationships and command-line argument sequences. Train the model on known benign and malicious execution chains. The model can then predict the probability that a new sequence of process creation events is malicious, identifying novel loader or packer behavior."
            ]
          },
          {
            "description": "A single parent process spawns multiple child processes where the file hashes of the child executables are unique or have high Shannon entropy, indicating that the underlying file is changing with each execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Sandboxing/Analysis Environments, File Servers",
            "action": [
              "Symbolic: Create a watchlist of sensitive parent processes that should not be spawning executable children (e.g., WINWORD.EXE, OUTLOOK.EXE). Alert if any of these parent processes spawn a child process from a user-writable directory (e.g., %APPDATA%, C:\\Users\\Public\\) with a unique hash not seen before.",
              "Statistical: For each parent process ID over a 10-minute window, aggregate the list of child process hashes (from Windows Event ID 4688). Calculate the ratio of unique hashes to total child processes. If this ratio exceeds a high threshold (e.g., > 0.9), it suggests polymorphism. Compare this ratio to the 95th percentile of ratios for the same parent process name across the environment to identify anomalous behavior.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on process creation events. Features should include parent process name, child process path, command-line length, and the entropy of the child process name. Clusters of events that are sparse and do not group with known benign activity clusters can be flagged as anomalous, potentially indicating a polymorphic dropper."
            ]
          },
          {
            "description": "A host's recurring network beacon to a single destination IP/domain shows high variability in connection metadata, such as payload size, TLS fingerprint (JA3/JA4), or HTTP User-Agent, deviating from typical, stable communication patterns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress Points (Firewall, Proxy), DNS Servers",
            "action": [
              "Symbolic: Search for known malicious or unusual User-Agent strings in http.log or JA3/JA4 hashes in ssl.log that are associated with polymorphic malware frameworks. Alert on any match from a curated threat intelligence list.",
              "Statistical: For each source-destination IP pair, establish a 30-day baseline of connection metadata including the standard deviation of `orig_bytes` and `resp_bytes` (from Zeek conn.log) and the set of unique JA3 hashes (from Zeek ssl.log). Alert if, in a 24-hour period, the standard deviation of payload size increases by more than 3 standard deviations from its baseline, or if more than 5 new, unique JA3 hashes are observed for that communication channel.",
              "Machine Learning: Apply time series anomaly detection (e.g., using an autoencoder) to network beaconing activity. Model features like connection frequency, byte counts, and the entropy of JA3 hashes per hour for each host. The model will learn the 'normal' rhythm of communications and flag significant deviations that could represent a polymorphic C2 channel attempting to evade signature-based network detection."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]