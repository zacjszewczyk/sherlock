[
  {
    "information_requirement": "Is the adversary evading defenses by breaking process tree ancestry? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.009",
        "name": "Break Process Trees",
        "evidence": [
          {
            "description": "A new process is created where the SHA256 hash or filename of the new process image matches a known indicator of compromise (IOC) associated with malware that breaks process trees.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, including Domain Controllers and critical application servers.",
            "action": "For each process creation event (Windows Event ID 4688), perform the following: 1. (Symbolic) Compare the new process image's SHA256 hash and filename against a threat intelligence feed of known malicious indicators. Generate a high-severity alert for any direct match. 2. (Statistical) Calculate the prevalence of the process hash across all endpoints over the last 30 days. Flag processes whose hash is observed on fewer than 0.01% of total endpoints as 'rare' and increase their risk score. 3. (Machine Learning) Input the process hash and Portable Executable (PE) header features into a pre-trained gradient boosting classifier to score its maliciousness. An alert is triggered if a process is identified as 'rare' and receives a maliciousness score above a 0.90 threshold."
          },
          {
            "description": "A process creation event for a legitimate system utility (e.g., rundll32.exe, regsvr32.exe, powershell.exe) contains command-line arguments matching known patterns for process orphaning or reparenting.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and servers where administrative or development tools (e.g., PowerShell) are commonly used.",
            "action": "For each process creation event (Windows Event ID 4688) involving a monitored utility (rundll32.exe, powershell.exe, etc.), perform the following: 1. (Symbolic) Apply a library of regular expressions to the command line argument string to detect known malicious patterns (e.g., rundll32.exe invoking a DLL by ordinal #1, PowerShell using reflection to load assemblies). Alert on a positive match. 2. (Statistical) Calculate the Shannon entropy of the command line string. Compare the entropy value to a pre-computed baseline for that specific utility. Flag any command line with an entropy score greater than the 98th percentile as anomalous. 3. (Machine Learning) Tokenize the command line and input it into a pre-trained logistic regression classifier (trained on a labeled dataset of benign/malicious commands) to get a suspicion score. A high score, especially when combined with high entropy, indicates a likely malicious command."
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a Parent Process ID (PPID) that either does not correspond to a currently running process, has already terminated, or belongs to a system process that does not typically spawn children (e.g., lsass.exe, services.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, particularly those running critical services.",
            "action": "For each process creation event (Windows Event ID 4688), perform the following: 1. (Symbolic) Check if the Parent Process ID (PPID) belongs to a process on a static 'forbidden parent' list (e.g., lsass.exe, smss.exe). Also, query the system state or recent termination events (Windows Event ID 4689) to verify the PPID is active at the time of creation. Alert if the parent is forbidden or non-existent. 2. (Statistical) Maintain a baseline of normal parent-child process relationships. For each parent process name, track the frequency of its child process names. If a new child process name appears that has never been seen for that parent before, or is in the bottom 1st percentile of historical frequency, flag it as anomalous. 3. (Machine Learning) Model process relationships as a directed graph (parent -> child). Use a clustering algorithm like DBSCAN on process creation events, using features like parent name, child name, user context, and process path. Events that do not belong to any cluster are flagged as outliers, representing anomalous parent-child relationships."
          },
          {
            "description": "A parent process terminates (Windows Event ID 4689) within an anomalously short time window (e.g., < 2 seconds) after its child process is created (Windows Event ID 4688).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.",
            "action": "Correlate process creation (4688) and termination (4689) events by Process ID and perform the following: 1. (Symbolic) For a given parent-child pair, if the time delta between the parent's termination and child's creation is less than 2 seconds AND the child process path is in a temporary or user-writable directory (e.g., C:\\Windows\\Temp\\, %APPDATA%), trigger an alert. 2. (Statistical) Calculate the time delta between every parent termination and child creation event across the enterprise. Identify the 1st percentile of this distribution (e.g., 0.8 seconds). Any parent-child pair with a time delta below this threshold is flagged as highly suspicious. 3. (Machine Learning) Apply time series anomaly detection (e.g., Seasonal Hybrid ESD) to a metric tracking the count of 'short-lived parent' events per host per hour. A sudden, statistically significant spike in this metric on a given host indicates a burst of evasion activity."
          },
          {
            "description": "A process previously identified as having an anomalous ancestry (e.g., orphaned, reparented) establishes an external network connection.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Windows Event ID 4689",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (for Zeek data), and all enterprise endpoints/servers (for process and Windows Filtering Platform logs).",
            "action": "First, tag processes with anomalous ancestry using the methods above. Then, for each tagged process, correlate its PID with network connection events (Windows Event ID 5156) and Zeek connection logs (via host IP and timestamp). Then perform the following: 1. (Symbolic) If the destination IP of a network connection from a tagged process matches an IP on a threat intelligence blocklist, generate a critical alert. 2. (Statistical) For TLS connections from tagged processes, extract the JA3 hash from Zeek ssl.log. Compare the hash against a list of common benign hashes (e.g., from Google, Microsoft updates). A JA3 hash that is not on the benign list and is rare (<0.1% prevalence) across the enterprise is suspicious. 3. (Machine Learning) Use a Random Forest classifier to score the maliciousness of each network connection from a tagged process. Model features should include destination IP reputation, destination port, JA3 hash rarity, connection duration, and bytes sent. A connection with a score > 0.85 triggers an investigation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]