[
  {
    "information_requirement": "Has the adversary gained initial access to the network via spearphishing link?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1566.002",
        "name": "Spearphishing Link",
        "evidence": [
          {
            "description": "An internal host establishes an outbound network connection to a destination IP address or domain that matches a high-confidence entry on a threat intelligence feed categorized as phishing, malware C2, or recently compromised.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies), DNS resolvers, Cloud Access Security Brokers (CASB).",
            "action": [
              "Continuously correlate outbound network connection logs (Zeek conn.log `id.resp_h`, dns.log `query`, http.log `host`, ssl.log `server_name`) against a high-confidence threat intelligence feed of known malicious indicators. Generate a high-severity alert for any direct match.",
              "For each threat intelligence match, calculate the number of distinct internal source hosts that connected to the malicious indicator over the past 30 days. If this count is below the 5th percentile for all external destinations (i.e., very few hosts have ever connected to it), increase the event's risk score to reflect targeted activity.",
              "Implement a supervised classification model (e.g., Gradient Boosting) to score all outbound URLs on their probability of being malicious. Train the model using lexical features (URL length, character entropy), host-based features (domain age, TLD, ASN reputation), and historical features (first-seen in environment). Escalate any event that is both a threat intelligence match and receives a malicious probability score > 0.9 from the model."
            ]
          },
          {
            "description": "An outbound HTTP POST request is sent to an external, non-whitelisted domain, and the POST body contains field names commonly associated with credential theft (e.g., 'username', 'password', 'email', 'ssn'). The destination domain has a low reputation or was registered within the last 90 days.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxy servers, network taps at internet gateways, user workstations and servers.",
            "action": [
              "Apply a ruleset of regular expressions to the URI and POST body (if unencrypted) in Zeek http.log to detect credential harvesting field names (e.g., 'user', 'pass', 'login', 'password', 'pin', 'ssn', 'cc_number'). Alert on any match directed to an external, non-whitelisted domain.",
              "For each alert, calculate two statistical metrics: 1) The Shannon entropy of the full URI, flagging any value in the 95th percentile of all URIs. 2) The number of distinct internal hosts that have POSTed to the destination domain in the last 30 days. Flag any destination receiving POSTs from fewer than 3 unique hosts. A high entropy score combined with a low host count significantly increases suspicion.",
              "For each user, model their baseline volume of HTTP POST requests to external domains using a time-series forecasting model (e.g., SARIMA). An observed POST volume that exceeds the model's predicted upper confidence interval for a given time window should be flagged as an anomaly. Correlate this anomaly with other triggers (e.g., new domain, high entropy URI) to escalate as a potential credential theft event."
            ]
          },
          {
            "description": "A file is downloaded from an external, non-whitelisted domain, and its observed MIME type or file extension matches a high-risk category (e.g., 'application/x-msdownload', 'application/hta', '.iso', '.vbs', '.js'). The suspicion is increased if the source domain is newly registered (<90 days) or has a poor reputation.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Zeek dns.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, host endpoints, DNS resolvers, email gateway sandboxes.",
            "action": [
              "Create and maintain a watchlist of high-risk MIME types ('application/hta', 'application/x-iso9660-image', 'application/x-ms-shortcut', 'application/zip', 'application/x-msdownload') and file extensions ('.lnk', '.vbs', '.js', '.ps1'). Alert when a file on this list is downloaded (Zeek files.log) from an external domain with an age of less than 90 days.",
              "For every file download, calculate its rarity based on the historical frequency of the (MIME type, source ASN, file extension) tuple in the environment. A download event with a rarity score in the 99th percentile or higher (i.e., this combination is almost never seen) should be flagged for review.",
              "Deploy a machine learning classifier (e.g., Random Forest) to generate a maliciousness score for each downloaded file. Use features such as source domain reputation, domain age, ASN, TLD, MIME type, file extension, filename entropy, and whether the file is digitally signed. Generate an alert for any download exceeding a predefined probability threshold (e.g., >0.85)."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) is observed where a web browser process (e.g., 'chrome.exe', 'msedge.exe') is the parent of a suspicious child process (e.g., 'cmd.exe', 'powershell.exe', 'wscript.exe'). This event is correlated in time (within 1 minute) with a network connection from the same host to an external URL.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, VDI instances, application servers, network web proxies.",
            "action": [
              "Using Windows Event ID 4688, create a detection rule that alerts on any instance where a browser process (e.g., chrome.exe, msedge.exe, firefox.exe) is the parent of a process from a watchlist including cmd.exe, powershell.exe, wscript.exe, cscript.exe, mshta.exe, certutil.exe.",
              "For every parent-child process creation event, calculate the statistical prevalence of that specific relationship (e.g., 'chrome.exe' -> 'powershell.exe') across the enterprise. Alert on any relationship that occurs on fewer than 1% of endpoints. Additionally, calculate the Shannon entropy of the child process's command line arguments and flag any command line with an entropy score in the 98th percentile or higher.",
              "Implement an anomaly detection model on process execution chains (e.g., using an n-gram model or an LSTM on sequences of process names). Train the model on benign process activity from across the enterprise. Flag any process chain originating from a browser that is identified as a low-probability sequence (anomalous), as this could indicate exploit-driven execution flow."
            ]
          },
          {
            "description": "A correlation is made between an inbound email containing a URL and an outbound network connection from the recipient's host to the domain in that URL. The event occurs within a short time window (e.g., 15 minutes) of email delivery, and the domain is either newly registered, has a low reputation, or is an outlier in terms of organizational click patterns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek smtp.log",
              "Zeek http.log",
              "Email Gateway Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email gateway, DNS resolvers, network egress points, user workstations.",
            "action": [
              "Parse all URLs from inbound email bodies and headers (from email gateway logs or Zeek smtp.log). Correlate the extracted domains with DNS queries (Zeek dns.log) and web traffic (Zeek http.log), joining on the user/recipient and a 15-minute time window. Generate an alert if a user clicks a link from an email and the destination domain has a known poor reputation.",
              "For each URL sent in an email campaign, calculate the overall click-through rate (CTR). Identify URLs with a CTR below the 1st percentile (e.g., only one user clicked). Escalate these single-click events for investigation, as they represent either highly targeted or highly effective phishing attempts.",
              "For each user, create a behavioral profile of email link-clicking activity using a clustering algorithm (e.g., DBSCAN). Use features like time-of-day of click, day-of-week, time delta between email receipt and click, and source email domain. Any click event that is flagged as a noise point (i.e., does not belong to any of the user's normal clusters) should be considered anomalous and investigated."
            ]
          },
          {
            "description": "A DNS query is observed for a domain that exhibits suspicious lexical characteristics, such as high character entropy (suggesting DGA), visual similarity to a known brand (homoglyph), or close spelling to a corporate asset (typosquatting). The suspicion is amplified if the domain is queried by a very small number of internal hosts.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal and external DNS resolvers, Domain Controllers.",
            "action": [
              "For each unique domain in DNS logs, run it through two symbolic checks: 1) A homoglyph algorithm to see if it spoofs a list of high-value domains (e.g., your company's domain, key partners, major SaaS providers). 2) A typosquatting algorithm (checking for character swaps, omissions, additions) against the same list. Alert on any match.",
              "Calculate the Shannon entropy and 2-gram frequency for every newly observed domain. Compare these values against a baseline of legitimate traffic. Flag domains with entropy in the top 95th percentile and n-gram frequencies that deviate significantly from the baseline. Correlate these findings with the number of unique hosts querying the domain; a high-entropy domain queried by fewer than 3 hosts requires immediate review.",
              "Deploy a pre-trained machine learning classifier to score every new DNS query for maliciousness. The model should use lexical features like domain length, entropy, n-gram frequency, number of subdomains, and TLD popularity. Any domain that receives a probability score greater than a defined threshold (e.g., 0.9) should be automatically enriched with information like query count and querier hosts, and then alerted for analyst triage."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]