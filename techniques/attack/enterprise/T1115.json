[
  {
    "information_requirement": "Has the adversary collected data from local system clipboards? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1115",
        "name": "Clipboard Data",
        "evidence": [
          {
            "description": "A process is created whose executable file hash matches a known malicious signature associated with clipboard data collection (T1115) [1].",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All user workstations and remote access servers (RDP/Citrix).",
            "action": "Continuously monitor process creation (Windows Event ID 4688). For each new process, perform three checks: 1. (Symbolic) Match the executable's file hash against a threat intelligence feed of known malicious hashes tagged with 'T1115' or 'clipboard'. Alert on any match. 2. (Statistical) For any match, analyze the parent process. If the parent process has a low prevalence score across the enterprise (e.g., seen on <1% of hosts), elevate the alert priority. 3. (ML) Feed process metadata (path, parent process, signature status, user context) into a pre-trained binary classification model (e.g., Random Forest) to generate a real-time risk score. An alert is triggered if a known hash is found or if the ML model's risk score exceeds a dynamic threshold, providing detection for zero-day variants."
          },
          {
            "description": "A command line is executed that explicitly uses a clipboard utility (e.g., clip.exe, Get-Clipboard) to pipe or redirect its output to a file or network utility [2][3].",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints, particularly administrator workstations and developer jump boxes.",
            "action": "Analyze command-line arguments from process creation events (Windows Event ID 4688). 1. (Symbolic) Use regular expressions to detect patterns where clipboard utility output is piped or redirected, such as `Get-Clipboard \\| Out-File`, `clip.exe > C:\\Users\\Public\\...`, or `pbpaste \\| nc`. An alert is generated on a pattern match. 2. (Statistical) Calculate the Shannon entropy of all command lines containing 'Get-Clipboard' or 'clip.exe'. Establish a baseline entropy score for legitimate commands. Flag any command whose entropy exceeds the 95th percentile of this baseline, indicating potential obfuscation. 3. (ML) Employ a clustering algorithm (e.g., DBSCAN) on vectorized command-line features (length, special character count, keyword frequency). Treat commands that fall into outlier clusters as suspicious, allowing for the detection of novel malicious command structures not caught by specific regex."
          },
          {
            "description": "A legitimate clipboard utility is executed by a parent process not typically associated with interactive user sessions, such as a web server process or a system service.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application servers (e.g., IIS, Apache), Domain Controllers, and other critical infrastructure servers.",
            "action": "Monitor for executions of 'clip.exe' or 'powershell.exe' with 'Get-Clipboard' in the command line. 1. (Symbolic) Maintain an explicit allow-list of typical parent processes (e.g., explorer.exe, cmd.exe, pwsh.exe). Alert on any execution where the parent process is not on this list (e.g., w3wp.exe, services.exe, lsass.exe). 2. (Statistical) For each parent-child pair (e.g., 'w3wp.exe' -> 'powershell.exe'), baseline the frequency of command-line arguments. If 'Get-Clipboard' appears and its frequency is a 3-sigma outlier for that pair, flag it as anomalous. 3. (ML) Use a classification model trained on parent process features (name, path, user context, session ID) to predict the likelihood of it legitimately spawning a clipboard utility. A high anomaly score for a non-standard parent indicates a potential threat."
          },
          {
            "description": "A high frequency of clipboard utility executions occurs from a single process ID or user within a short time window, indicating automated polling or scraping activity [4].",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All user workstations and shared terminal servers.",
            "action": "Aggregate and count process creation events (Windows Event ID 4688) for clipboard utilities ('clip.exe', 'Get-Clipboard'). 1. (Symbolic) Implement a rule that alerts if the count per user or process ID exceeds a fixed threshold in a sliding window (e.g., >10 executions in 60 seconds). 2. (Statistical) For each user, calculate a moving average and standard deviation of execution counts per minute. Alert when the current count exceeds the mean by more than 3 standard deviations, indicating a statistically significant spike. 3. (ML) Apply a time-series anomaly detection model (e.g., ARIMA) to the execution count per user. The model learns the normal rhythm of activity and flags any periodic, rapid-fire executions that deviate from the learned pattern as potential automated scraping."
          },
          {
            "description": "A process accesses the clipboard and, within a short time window, the same host initiates an outbound network connection to a rare or untrusted destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls/proxies) and all endpoints.",
            "action": "Correlate endpoint and network logs in a short time window (e.g., 30 seconds). 1. (Symbolic) Create a stateful rule that triggers on the sequence of: (A) a process creation event (Windows Event ID 4688) for a clipboard utility, followed by (B) an outbound network connection (Zeek conn.log) from the same host to an IP on a threat intelligence blocklist. 2. (Statistical) When the sequence occurs, enrich the destination IP with domain data from Zeek dns.log. Calculate the prevalence of the requested domain across the enterprise over the last 30 days. A connection to a domain in the bottom 1st percentile of prevalence significantly elevates the risk score. 3. (ML) Use a sequence analysis model (e.g., Hidden Markov Model) trained on benign activity. A low-probability sequence of 'clipboard access' -> 'network connection to rare domain' would be flagged as a high-confidence anomaly indicative of exfiltration."
          },
          {
            "description": "A suspicious process (e.g., unsigned, running from a temporary directory, low prevalence) is created, and is subsequently followed by clipboard access and either file creation in a staging directory or an outbound network connection.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 11",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories (%APPDATA%, %TEMP%), endpoint file systems, and network egress points.",
            "action": "Create a multi-event behavioral detection. 1. (Symbolic) Define a rule chain: Event A (Suspicious Process Creation via Windows Event ID 4688, e.g., unsigned file in %TEMP%), followed by Event B (Clipboard Access by same process), followed by Event C (File Creation in staging directory via Sysmon EID 11 or Outbound Network Connection via Zeek conn.log). Alert if this A->B->C chain completes within 60 seconds. 2. (Statistical) Score the suspiciousness of the initial process (Event A) using a composite score based on path rarity, parent process prevalence, and signature status. If this score exceeds the 98th percentile of all process scores, begin actively monitoring for subsequent events in the chain. 3. (ML) Model system activity as a graph where processes, files, and connections are nodes. Use a graph-based ML algorithm to identify anomalous subgraphs, such as a low-prevalence process node spawning a clipboard utility, which then connects to a file node in %APPDATA% and a network node corresponding to a new external IP."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]