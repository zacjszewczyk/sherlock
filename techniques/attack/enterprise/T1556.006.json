[
  {
    "information_requirement": "Is the adversary establishing persistence by modifying MFA configurations?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1556.006",
        "name": "Modify Multi-Factor Authentication",
        "evidence": [
          {
            "description": "A user account is removed from an MFA-enforcing Active Directory security group, logged as Windows Event ID 4729 (member removed from global group), 4733 (member removed from local group), or 4757 (member removed from universal group).",
            "data_sources": [
              "Windows Event ID 4729",
              "Windows Event ID 4733",
              "Windows Event ID 4757"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Maintain a list of critical Active Directory group SIDs used for MFA enforcement. Create a detection rule to generate a high-priority alert whenever a member removal event (Windows Event IDs 4729, 4733, 4757) is observed for one of these groups, capturing the subject and target user accounts.",
              "For each administrator, establish a statistical baseline for the number of user removals from critical MFA groups they perform per week. Alert if an administrator's activity exceeds three standard deviations from their individual baseline or the peer group's average, indicating an unusual volume of changes.",
              "Implement a graph-based anomaly detection model where users and groups are nodes and memberships are edges. Train the model on historical Active Directory change logs. Flag any membership change that drastically reduces a privileged user's 'security score' or moves them from a highly connected security context to a less secure one."
            ]
          },
          {
            "description": "A new MFA device or method is registered for a user account, followed within a 5-minute window by a successful authentication (Windows Event ID 4624) from a source IP address that is geographically rare or represents impossible travel.",
            "data_sources": [
              "Windows Event ID 4738",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)",
            "action": [
              "Create a rule that correlates an MFA device registration event (e.g., Azure AD Audit Log for 'User registered all required security info') with a subsequent successful login (Windows Event ID 4624) for the same user within 5 minutes. Alert if geolocation data for the login's source IP (from Zeek conn.log) shows a different country than the registration event's source IP.",
              "For each user, maintain a statistical profile of their historical login locations (countries, ASNs). When a new MFA device is registered, score the subsequent login's location against this profile. A login from a location not seen in the last 90 days or falling in the bottom 5th percentile of frequency should be flagged for review.",
              "Train a sequence-based anomaly detection model (e.g., an LSTM autoencoder) on event sequences per user. The model learns normal patterns like 'login -> work -> logout'. Flag the specific sequence 'MFA registration -> successful login from new ASN -> sensitive data access' as a high-risk anomaly if it has a high reconstruction error."
            ]
          },
          {
            "description": "The 'hosts' file at 'C:\\Windows\\System32\\drivers\\etc\\hosts' is modified to include an entry that redirects a known MFA service domain (e.g., mfa.mycorp.com) to a loopback or null address (127.0.0.1, 0.0.0.0).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints and Critical Servers",
            "action": [
              "Monitor for file write events (Windows Event ID 4663) to '...\\drivers\\etc\\hosts'. Alert if the process performing the write is not an authorized administrator tool or installer. Additionally, monitor for process creation events (Windows Event ID 4688) where command-line tools like 'echo' or 'powershell' are used to modify the hosts file.",
              "Establish a baseline hash (e.g., SHA256) of the approved corporate 'hosts' file. Continuously monitor for modifications and re-calculate the hash. Alert if the new hash does not match the approved baseline. Additionally, track the frequency of 'hosts' file changes per endpoint and alert if the rate exceeds the 99th percentile of the enterprise-wide distribution.",
              "Use a file integrity monitoring (FIM) solution that employs a classification model to analyze changes to critical system files. Train the model on features of legitimate changes (e.g., software installations by trusted installers) versus malicious ones (e.g., a single-line addition by an interactive shell). Classify any change to the hosts file as 'malicious' if it matches the malicious profile."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by bypassing or tampering with MFA?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1556.006",
        "name": "Modify Multi-Factor Authentication",
        "evidence": [
          {
            "description": "A process executes with command-line arguments or script content containing cmdlets or parameters known to alter MFA configurations, such as 'Set-MsolUser', '-StrongAuthenticationRequirements', or ADFS policy modification commands.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ADFS Servers, Domain Controllers, and Administrator Workstations",
            "action": [
              "Monitor process command-lines (Windows Event ID 4688) and PowerShell script blocks (Windows Event ID 4104) for keywords like 'Set-AdfsRelyingPartyTrust', 'Set-MsolUser', '-StrongAuthenticationRequirements', or '-Exclude'. Generate an alert for any match not associated with a scheduled change request.",
              "Calculate the Shannon entropy of command-line arguments for 'powershell.exe' processes. Establish a baseline for normal administrative scripts. Flag any command whose argument entropy exceeds the 99th percentile of the baseline, as this often indicates obfuscation or packed commands.",
              "Train a sequence-to-sequence (Seq2Seq) autoencoder on a large corpus of legitimate administrative PowerShell commands from script block logs. Feed new commands into the model and flag any command with a high reconstruction error, indicating it is structurally dissimilar from known-good commands and potentially malicious."
            ]
          },
          {
            "description": "The Local Security Authority Subsystem Service (lsass.exe) process initiates an outbound network connection to an external, non-private (non-RFC1918) IP address.",
            "data_sources": [
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers and User Endpoints",
            "action": [
              "Create a high-severity alert for any Windows Filtering Platform event (Windows Event ID 5156) where the 'Application' field is 'C:\\Windows\\System32\\lsass.exe' and the 'Destination Address' is not within a defined internal or trusted IP range. Correlate with Zeek conn.log to confirm the external destination.",
              "Build and maintain a baseline of legitimate destination IP addresses, ports, and domains for the lsass.exe process across all servers. For each new connection, check if the destination IP/port pair is novel or falls into the bottom 1st percentile of connection frequency. Alert on such rare occurrences.",
              "Implement a one-class SVM (Support Vector Machine) model trained on legitimate network connection tuples (process_name, dest_ip, dest_port, protocol) from host and network logs. Any new connection from 'lsass.exe' that the model classifies as an outlier is a high-confidence indicator of potential credential theft or tampering."
            ]
          },
          {
            "description": "A process not on a predefined allowlist attempts to read or modify files or registry keys within a third-party MFA agent's installation directory or registry hive, generating an object access event (Windows Event ID 4663 or 4656).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)",
            "action": [
              "Enable object access auditing on MFA agent directories and registry keys. Create a rule to alert on any access event (Windows Event ID 4663, 4656) where the 'Process Name' is not on an allow list of the agent's own binaries, system processes, or approved administrative tools.",
              "For each sensitive MFA file and registry key, profile the frequency of access by different processes over a 30-day period. Alert if a process that rarely accesses the resource (e.g., 'powershell.exe') performs a read or write, or if the total number of access events in a 1-hour window exceeds 3 standard deviations above the norm.",
              "Train a behavioral model, such as a Hidden Markov Model (HMM), on sequences of process-to-file interactions observed during normal system operation. The model learns valid state transitions. Flag any sequence, such as 'cmd.exe' spawning a process that then modifies an MFA configuration file, that has a low probability under the trained model."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary accessing credentials by exploiting bypassed or weakened MFA?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1556.006",
        "name": "Modify Multi-Factor Authentication",
        "evidence": [
          {
            "description": "A single user account experiences a high number of failed login attempts (Windows Event ID 4625) with MFA denial status codes in a short time frame (>10 failures in 5 minutes), immediately followed by a successful login (Windows Event ID 4624) from the same source IP.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers and Cloud Identity Providers",
            "action": [
              "Create a correlation rule that triggers when, for a single user and source IP, more than 10 failed logins (Windows Event ID 4625) indicating MFA denial occur within 5 minutes, followed immediately by a successful login (Windows Event ID 4624). This indicates a likely MFA fatigue or 'push bombing' attack.",
              "For each user, calculate a baseline rate of failed logins per hour. Alert if the observed rate for any user exceeds the 99th percentile for their own historical behavior or for their peer group, indicating a statistically significant spike in failed attempts.",
              "Use a time-series anomaly detection model (e.g., SARIMA) on the stream of authentication logs for each user. Train the model to recognize normal login cadences. A sudden, sharp spike in failed MFA attempts followed by a success would be flagged as a temporal anomaly indicative of a fatigue attack."
            ]
          },
          {
            "description": "A successful remote authentication (e.g., Windows Event ID 4624 Logon Type 10) originates from an IP address on a known Adversary-in-the-Middle (AiTM) threat intelligence feed, or the connection's TLS fingerprint (JA3/JA3S) matches that of a known AiTM toolkit.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, VPN Concentrators, and Web Proxies",
            "action": [
              "Ingest a threat intelligence feed of IP addresses and domains associated with AiTM toolkits (e.g., Evilginx2, Evil-Gophish). For every successful remote login, check if the source IP (from Zeek conn.log or event logs) matches the feed. Also, check if the JA3/JA3S hash from the session (Zeek ssl.log) matches a known malicious hash. Alert on any match.",
              "Analyze JA3/JA3S TLS fingerprints from Zeek ssl.log for all authentication sessions. Profile the fingerprints used by legitimate corporate clients and browsers. Flag any login from a session using a fingerprint that is in the bottom 1st percentile of frequency (i.e., extremely rare) across the organization.",
              "Train a classification model (e.g., XGBoost) using features from each login session, including IP geolocation, ASN, JA3 hash, time-of-day, and user agent. The model will assign a risk score to each login. Logins with scores exceeding a dynamic threshold, especially those with rare JA3 hashes, should be escalated for investigation as potential AiTM session hijacks."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]