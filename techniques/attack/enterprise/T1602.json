[
  {
    "information_requirement": "Has the adversary collected sensitive data from configuration repositories? (T1602) (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1602",
        "name": "Data from Configuration Repository",
        "evidence": [
          {
            "description": "A network connection (e.g., SNMP, TFTP, HTTPS, SSH) or authentication event to a configuration repository that originates from an IP address on a high-confidence threat intelligence feed or uses credentials known to be compromised.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek snmp.log",
              "Zeek ssh.log",
              "Zeek ssl.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Management System (NMS) servers, TFTP servers, Core network infrastructure (routers, switches), Domain Controllers hosting Group Policy Objects, Cloud management consoles and API endpoints, Version control systems (e.g., Git, SVN) storing infrastructure-as-code",
            "action": [
              "Symbolic: Join connection logs (Zeek conn.log) and authentication logs (Windows Event ID 4624) with threat intelligence feeds on source IP and with lists of known compromised credentials on username. Generate a high-severity alert for any successful connection or authentication to a designated NAI that matches either feed.",
              "Statistical: For each repository NAI, create a baseline of source Autonomous System Numbers (ASNs) and countries from Zeek conn.log. For each new connection, calculate the rarity of its source ASN/country against the baseline. Generate a medium-severity alert if a connection's source IP is on a threat list AND its source country is in the 99th percentile for rarity (i.e., seen less than 1% of the time).",
              "Machine Learning: Train a supervised classification model (e.g., Logistic Regression, Random Forest) on labeled historical connection data. Use features such as IP reputation score, ASN rarity, time-of-day deviation from user baseline, and a binary flag for 'known compromised credential'. The model should output a probability score for each session being malicious. Generate an alert when the probability score exceeds a defined threshold (e.g., 0.85)."
            ]
          },
          {
            "description": "An SNMP GET/GETBULK request targeting a sensitive Object Identifier (OID) known to retrieve device configurations, or the execution of a network management/scanning tool (e.g., snmpwalk, nmap) on a host not designated for network administration.",
            "data_sources": [
              "Zeek snmp.log",
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Management System (NMS) servers, Core network infrastructure (routers, switches), Endpoints not designated for network administration",
            "action": [
              "Symbolic: Monitor Zeek snmp.log for GET/GETBULK requests containing OIDs from a curated watchlist of sensitive identifiers (e.g., private MIBs for device configs, Cisco running-config OIDs). Monitor Windows Event ID 4688 for command lines containing 'snmpwalk', 'snmp-get', or 'nmap' with SNMP-related arguments (e.g., '-sU -p 161'). Alert if the process is executed on a host not in the 'Network Administrators' asset group.",
              "Statistical: For each source IP making SNMP requests (from Zeek snmp.log), calculate the Shannon entropy of the requested OID prefixes within a 5-minute sliding window. Establish a baseline entropy for legitimate network management tools. Generate an alert if a source IP's OID request entropy exceeds 3 standard deviations from the established baseline, indicating broad reconnaissance rather than targeted polling.",
              "Machine Learning: Develop a sequence analysis model (e.g., Hidden Markov Model or LSTM) trained on legitimate SNMP query sequences from authorized management servers. Apply the model to new SNMP sessions. Generate an alert if a query sequence from an unauthorized source has a very low probability of being generated by the 'legitimate' model, suggesting an anomalous pattern of collection."
            ]
          },
          {
            "description": "A network connection to a known configuration repository (e.g., NMS server on TCP/443, router on UDP/161) originating from a network segment or host not authorized for administrative access.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek snmp.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Management System (NMS) servers, Core network infrastructure (routers, switches), Domain Controllers hosting Group Policy Objects, Cloud management consoles and API endpoints",
            "action": [
              "Symbolic: Define an explicit allow-list of administrative subnets, jump boxes, and user accounts authorized to access repository NAIs. In Zeek conn.log and Windows Event ID 4624, create a rule to alert on any connection or login attempt to a repository NAI that does not originate from an IP or account on the allow-list.",
              "Statistical: For each repository NAI, create a baseline of all connecting source /24 subnets and their frequency over a 30-day period. For each new connection, check the source subnet against this baseline. Generate an alert if the source subnet is in the 98th percentile for rarity (i.e., is an extremely infrequent source of connections), suggesting an unusual access path.",
              "Machine Learning: Apply an unsupervised clustering algorithm (e.g., DBSCAN, k-means) to connection metadata from Zeek conn.log. Use features like source IP, destination port, protocol, and total bytes transferred. The algorithm will group legitimate traffic into dense clusters. Identify and alert on connections classified as outliers or noise points, as these represent statistically anomalous network sessions requiring investigation."
            ]
          },
          {
            "description": "A network session involving a configuration repository where the volume of data transferred from the repository to the client (resp_bytes) significantly exceeds the established baseline for normal administrative tasks.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek snmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Management System (NMS) servers, TFTP servers, Core network infrastructure (routers, switches), Version control systems (e.g., Git, SVN) storing infrastructure-as-code",
            "action": [
              "Symbolic: For connections to repository NAIs, create a rule that alerts if the data transferred from the server to the client (resp_bytes in Zeek conn.log) exceeds a hard, protocol-specific threshold (e.g., >50MB for TFTP, >100MB for HTTPS) in a single session, which could indicate a full configuration backup being exfiltrated.",
              "Statistical: For each source-destination pair involving a repository NAI, establish a baseline distribution of the 'resp_bytes' field from Zeek conn.log. For each new connection, calculate the Z-score of its 'resp_bytes' value against this historical baseline. Generate an alert if the Z-score is greater than 3.5, indicating a statistically significant large data transfer.",
              "Machine Learning: Implement a time series forecasting model (e.g., ARIMA, Prophet) on the aggregate data volume (sum of resp_bytes) transferred from each repository NAI per hour. The model will predict expected data volume with a confidence interval. Generate an alert if the actual observed volume significantly exceeds the upper bound of the model's prediction, indicating a potential bulk data transfer event."
            ]
          },
          {
            "description": "A successful authentication event to a configuration repository management interface that exhibits one or more anomalous properties, such as impossible travel, unusual time-of-day, or following a high-rate of failed authentications from a single source.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Management System (NMS) servers, Domain Controllers, Cloud management consoles, Version control systems (e.g., Git, SVN)",
            "action": [
              "Symbolic: Correlate failed authentications (Windows Event ID 4625) with successful ones (Windows Event ID 4624). Generate a high-severity alert for any successful login that is preceded by more than 15 failed login attempts from the same source IP for any account on the same host within a 5-minute window.",
              "Statistical: For each administrative user account, baseline their typical login hours and source geolocations (derived from source IP in Windows Event ID 4624 enriched with Zeek conn.log data). Alert on 'impossible travel' events (logins from two geographically distant locations in a physically impossible timeframe). Additionally, alert if a login occurs at a time that is more than 4 standard deviations from the user's mean login hour.",
              "Machine Learning: Use an Isolation Forest model on authentication event data. Train the model on features from Windows Event ID 4624 and Zeek conn.log, including user, source IP, geolocation, time of day, day of week, and logon type. The model learns a profile of normal behavior for each user and will flag logins that are identified as significant outliers (anomalies) for investigation."
            ]
          },
          {
            "description": "A file system access event on a server hosting configuration data, where an unauthorized process or user reads a sensitive configuration file or backup archive.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of Network Management System (NMS) servers, TFTP server root directories, Domain Controller SYSVOL shares containing GPOs, Local directories of version control systems (e.g., Git, SVN) on management servers",
            "action": [
              "Symbolic: Enable and configure System Access Control Lists (SACLs) on critical configuration directories (e.g., 'C:\\ProgramData\\SolarWinds\\', 'C:\\tftpboot\\', '\\\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies') to generate Windows Event ID 4663 for read access. Create an alert for any access event where the 'ProcessName' is not on an allow-list of approved administrative tools (e.g., 'solarwinds.businesslayerhost.exe', 'git.exe') or where the 'SubjectUserName' is not a member of a designated repository administrators group.",
              "Statistical: For each monitored sensitive configuration file, establish a baseline of its access frequency by process and user over a 30-day period. Use a count-based threshold to alert if a typically dormant file (e.g., a monthly backup archive) is accessed, or if a frequently accessed file is read by a rare process (e.g., powershell.exe reading a router config file for the first time).",
              "Machine Learning: Train a classification model (e.g., Random Forest) to determine if a file access event is malicious. Train the model on labeled historical Windows Event ID 4663 data, using features like process name rarity, user account tier, time of day, and rarity of the file path being accessed to distinguish routine administrative actions from anomalous access by suspicious processes."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]