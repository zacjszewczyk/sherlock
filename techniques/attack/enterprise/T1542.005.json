[
  {
    "information_requirement": "Is the adversary maintaining persistence using TFTP boot on network devices?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1542.005",
        "name": "TFTP Boot",
        "evidence": [
          {
            "description": "A file transfer over UDP port 69 (TFTP) is observed where either the file's SHA256 hash is present on a threat intelligence feed of malicious firmware, or the source/destination IP address is a known malicious actor.",
            "data_sources": [
              "Zeek file.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches and routers, Network management servers, Network management VLAN, Internet gateways and perimeter firewalls",
            "action": [
              "Extract file hashes from TFTP transfers (Zeek file.log) and IP addresses from TFTP connections (Zeek conn.log). Compare these against threat intelligence feeds for known-malicious network OS image hashes and C2 server IPs. Alert on any match.",
              "For each TFTP server, calculate the Shannon entropy of filenames being transferred. A high entropy score for a filename served to a network device may indicate randomized or obfuscated names used to evade simple signature-based detections. Track the 95th percentile of filename entropy scores over a 30-day window and alert on values exceeding this threshold.",
              "Train a decision tree classifier on TFTP connection metadata (source IP geolocation/ASN, destination IP subnet, file size, time of day, day of week) labeled with known-benign (e.g., scheduled maintenance) and known-malicious transfers. Use the trained model to classify new TFTP transfers as suspicious or benign."
            ]
          },
          {
            "description": "A file is transferred via TFTP (UDP port 69) to a network device with a filename that either matches a regular expression for known malicious toolkits or has a file extension (e.g., .sh, .py, .elf) not associated with standard network device image or configuration files.",
            "data_sources": [
              "Zeek file.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches and routers, Network management servers, Network management VLAN",
            "action": [
              "Using regular expressions, scan TFTP filenames in Zeek file.log for patterns matching known malicious toolkits or suspicious extensions (e.g., \\.sh$, \\.py$, \\.elf$) that are not part of the standard OS image naming convention for your environment. Alert on any matches.",
              "Establish a baseline of all file extensions seen in TFTP transfers over a 30-day rolling window. Calculate the frequency distribution of these extensions. Alert if a historically rare extension (e.g., frequency < 0.1%) appears, or if the frequency of any extension exceeds three standard deviations from its mean.",
              "Use a Natural Language Processing (NLP) model with TF-IDF vectorization on TFTP filenames. Train the model on legitimate filenames to learn normal naming conventions and patterns. Apply the model to new filenames to detect anomalous names that deviate significantly from the learned 'language' of legitimate files."
            ]
          },
          {
            "description": "A network device, identified by its source IP address within a designated network device subnet, initiates a TFTP connection (destination port 69) to a destination IP address not present on a pre-defined allowlist of authorized network management and TFTP servers.",
            "data_sources": [
              "Zeek conn.log",
              "Firewall Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network device management VLAN, Perimeter firewall logs, Core router and switch ACLs",
            "action": [
              "Maintain an explicit allowlist of authorized internal TFTP server IP addresses. Monitor Zeek conn.log for all connections on UDP port 69 originating from network device IP ranges. Alert with high severity on any connection where the destination IP is not on the allowlist, and critical severity for external IPs.",
              "For each network device, profile its typical TFTP destination servers over a 30-day period. Calculate the historical frequency of communication with each destination server. Alert if a device communicates with a destination IP that is statistically rare (e.g., seen for the first time or in the bottom 5th percentile of connection frequency).",
              "Use a clustering algorithm (e.g., DBSCAN) on TFTP connection pairs (source device IP, destination server IP). Benign activity should form dense clusters around authorized management servers. Connections to unauthorized servers will appear as noise or outliers. Alert on any connection identified as an outlier by the model."
            ]
          },
          {
            "description": "A TFTP file transfer involving a network device exhibits multiple anomalous characteristics simultaneously, such as occurring outside a scheduled maintenance window, having a file size that is a statistical outlier, or originating from a host not designated for network management.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek file.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches and routers, Network management servers, Network management VLAN",
            "action": [
              "Define approved maintenance windows (e.g., Saturday 1 AM - 4 AM) and a list of authorized source management IPs. Monitor Zeek conn.log and file.log for TFTP traffic involving network devices. Alert on any TFTP activity occurring outside of these defined windows or from an unauthorized source.",
              "For each network device, create a multi-metric baseline from Zeek logs including time-of-day distribution for TFTP activity, file size distribution (mean, std dev) from file.log, and source IP frequency from conn.log. Use a scoring system where deviations (e.g., activity at 2 PM on a Tuesday, file size > 3 std dev from mean) increment a risk score. Alert if the cumulative score exceeds a defined threshold.",
              "Apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the volume and frequency of TFTP transfers per device. Train the model on at least 60 days of historical data from Zeek conn.log to learn the normal rhythm of device management and alert on any transfers that are statistically significant deviations."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using TFTP boot on network devices?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1542.005",
        "name": "TFTP Boot",
        "evidence": [
          {
            "description": "A file transferred via TFTP to a network device has a SHA256 or fuzzy hash (ssdeep) that matches an entry in a threat intelligence feed for compromised network firmware, or has a high similarity score to a known-good image without being an exact match, indicating potential patching.",
            "data_sources": [
              "Zeek file.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network management servers, File repositories for OS images, Network device management VLAN",
            "action": [
              "Continuously monitor Zeek file.log for all files transferred via TFTP. Calculate the SHA256 hash of every file and compare it against a threat intelligence database of known-malicious network device firmware hashes. An alert on a hash match is a high-fidelity indicator.",
              "Implement fuzzy hashing (e.g., ssdeep) for all files transferred via TFTP as seen in Zeek file.log. Maintain a baseline of fuzzy hashes for all approved, known-good firmware images. Alert if a new file's hash has a similarity score above a threshold (e.g., 70) to a known-good image but is not an exact match, indicating a potentially patched or trojanized version.",
              "Train a supervised classification model (e.g., Gradient Boosting) on features extracted from the file binaries (e.g., byte-level entropy, presence of specific strings, section characteristics). Use this model to predict whether a new firmware image transferred via TFTP is malicious, even if its hash is unknown."
            ]
          },
          {
            "description": "A correlated sequence of events occurs for a single network device within a short time window (e.g., 15 minutes): 1) A TFTP file transfer to the device is observed, 2) The device appears to reboot (inferred by a drop and re-establishment of monitoring traffic like SNMP/SSH/Syslog), and 3) The device subsequently initiates new outbound connections matching patterns of covert C2 protocols (e.g., DNS tunneling, ICMP C2).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek file.log",
              "Zeek dns.log",
              "Zeek notice.log",
              "Device Syslog"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches and routers, Perimeter firewall logs, DNS resolvers, Network management VLAN, Syslog servers",
            "action": [
              "Create a stateful detection rule that triggers on the following sequence for a given device IP within a 15-minute window: [Event 1: Zeek file.log shows TFTP transfer] -> [Event 2: Zeek notice.log shows `device_down` then `device_up` or syslog shows reboot message] -> [Event 3: Zeek conn.log shows new outbound connection to a known C2 IP OR Zeek dns.log shows requests characteristic of DNS tunneling]. Alert on a completed sequence.",
              "After a TFTP transfer and reboot event is detected for a device, analyze the entropy of its subsequent DNS requests in Zeek dns.log. A significant increase in the entropy of requested subdomain labels compared to the device's historical baseline is a strong indicator of DGA-based C2. Alert if entropy exceeds the 99th percentile of the baseline.",
              "Use a Hidden Markov Model (HMM) to model the sequence of network events for a device. Define states such as 'Idle', 'TFTP Transfer', 'Rebooting', and 'C2 Communication'. Train the model on normal event sequences. An observed sequence of events (TFTP transfer -> reboot -> anomalous outbound traffic) that has a high probability of transitioning to the 'C2 Communication' state would trigger an alert."
            ]
          },
          {
            "description": "Following a TFTP file transfer and subsequent reboot, a network device's traffic profile, as measured over the next hour, shows a statistically significant deviation from its established 30-day baseline across metrics such as new protocols or ports used, an increased count of unique destination IPs, or a change in data transfer volume.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek protocol logs (e.g., http.log)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches and routers, East-West traffic collection points, Network management VLAN",
            "action": [
              "For critical devices, define a strict profile of allowed protocols and destination ports (e.g., SNMP UDP/161, SSH TCP/22, NTP UDP/123). After a TFTP event is detected for a device, monitor Zeek conn.log for any communication from that device using protocols or ports not on this explicit allowlist.",
              "For each device, maintain a rolling 30-day baseline of key metrics from Zeek conn.log (e.g., unique destination IPs per hour, bytes in/out, protocol mix). After a TFTP event, use a two-sample Kolmogorov-Smirnov test to check if the new traffic distribution (e.g., over the next hour) is significantly different from the baseline distribution. Alert on a low p-value (e.g., < 0.01).",
              "Employ an autoencoder neural network trained on vectors representing a device's normal traffic profile (features could include protocol counts, port counts, byte ratios). After a TFTP event, feed the device's new traffic profile into the autoencoder. A high reconstruction error indicates the new traffic is anomalous and does not conform to learned normal patterns."
            ]
          },
          {
            "description": "An adversary attempts to bypass perimeter or internal controls by initiating a TFTP connection to a network device from an unauthorized source, such as an external IP address or an internal, non-management host.",
            "data_sources": [
              "Zeek conn.log",
              "Firewall Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Perimeter firewalls, Network device management VLAN, Network management servers, Internal network segmentation boundaries",
            "action": [
              "Create a high-severity alert for any accepted connection on UDP port 69 at the network perimeter where the destination IP is within a network device subnet. Internally, monitor Zeek conn.log for TFTP connections to network devices and alert if the source IP is not on the network management server allowlist.",
              "Analyze the geographic and ISP origin of all inbound TFTP connection attempts logged at the firewall. Alert on any connection attempt from a new or statistically rare country or Autonomous System Number (ASN), as this is highly anomalous for device management traffic. Track the count of unique source ASNs per day and alert on spikes.",
              "Use a one-class SVM (Support Vector Machine) model trained only on the IP addresses of authorized network management servers. This model creates a boundary around 'normal' TFTP sources. Any TFTP connection attempt from a source IP that falls outside this boundary is flagged as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]