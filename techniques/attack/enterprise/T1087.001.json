[
  {
    "information_requirement": "Has the adversary attempted to enumerate local system accounts? (TA0007 - Discovery)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1087.001",
        "name": "Local Account",
        "evidence": [
          {
            "description": "A process creation event is observed where the executable's file hash is present on a threat intelligence list of known malicious discovery tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Member servers, Domain controllers, Endpoint Detection and Response (EDR) platform, SIEM/Log Aggregator",
            "action": [
              "Monitor process creation events (Windows Event ID 4688). For each new process, compute its file hash (e.g., SHA256) and query it against a threat intelligence feed of known malicious hashes for tools such as PowerSploit, BloodHound, and Mimikatz. Generate a high-severity alert on any match.",
              "For any executed hash not on a known-bad or known-good allowlist, calculate its prevalence across the enterprise over the last 30 days. Flag for investigation any process whose hash prevalence is in the bottom 1st percentile (i.e., extremely rare), particularly if the parent process is anomalous (e.g., winword.exe, outlook.exe) or unsigned.",
              "Deploy a pre-trained classification model (e.g., Gradient Boosting, Random Forest) that uses features such as process name, parent process name, user context, command-line arguments, and hash prevalence to score the likelihood of the execution being malicious. Generate an alert when the model's output score exceeds a calibrated confidence threshold."
            ]
          },
          {
            "description": "A process creation event is observed where the command-line arguments contain strings or patterns indicative of local account enumeration.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Member servers, Domain controllers, Terminal servers, SIEM/Log Aggregator",
            "action": [
              "Monitor process creation events (Windows Event ID 4688) and inspect the associated command-line field. Use regular expressions to search for commands such as `net user`, `net localgroup`, `Get-LocalUser`, `wmic useraccount get`, `dscl . list /Users`, and `esxcli system account list`. Generate an alert on any match, prioritizing those spawned by non-standard parent processes (e.g., outlook.exe, winword.exe, powershell.exe).",
              "For each user and host, establish a baseline of their typical command-line activity. Calculate the Shannon entropy of the command-line string for each new command; generate an alert if the entropy is a significant outlier (e.g., > 3 standard deviations from the user's historical average), which may indicate obfuscation. Additionally, track the frequency of discovery-related commands and alert if a user or host exceeds the 99th percentile of their historical hourly or daily count.",
              "Utilize a sequence analysis model (e.g., an LSTM or Transformer) to analyze the temporal chain of commands executed by a user within a session. Train the model to recognize suspicious sequences (e.g., network connection -> `whoami` -> `net user` -> `net localgroup administrators`). Flag user sessions that exhibit these learned malicious patterns for investigation."
            ]
          },
          {
            "description": "A single source host or user executes an anomalously high number of local account discovery commands within a short time frame, targeting one or more destination systems.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Source host initiating discovery, Target hosts being enumerated, Security Information and Event Management (SIEM) system",
            "action": [
              "Identify individual account discovery commands using regular expression pattern matching on command-line arguments. Create a rule that counts these events per source user and source host in 5-minute windows. Generate an alert if the count exceeds a static threshold (e.g., >10 commands in 5 minutes).",
              "Aggregate counts of discovery commands by source user and source host over a 5-minute sliding window. Establish a historical baseline (mean, standard deviation) for these counts per entity. Generate an alert when the count in a time window exceeds a dynamic threshold, such as 3 standard deviations above the mean for that specific user or host.",
              "Feed event features (source host, target host, user, command type, timestamp) into a density-based clustering algorithm like DBSCAN. This can group sparse, 'low and slow' enumeration events that occur across different hosts and times into a single security case, identifying a coordinated campaign that would evade simple frequency thresholds."
            ]
          },
          {
            "description": "A local account discovery command on a host is followed within a 60-minute window by a successful or failed logon attempt (Logon Type 2) from the same source, using a local account on the target system.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers, Domain Controllers, High-value servers, User workstations, SIEM system",
            "action": [
              "Create a stateful correlation rule in the SIEM. Trigger when a T1087.001 discovery event (e.g., `net user` in EID 4688) is observed from a source host. If, within the next 60 minutes, a local logon event (EID 4624 for success, 4625 for failure, with Logon Type 2) occurs on any host, originating from the same source IP, generate a high-priority alert.",
              "Enrich the alert from the symbolic rule by analyzing the logon history of the target account. Query authentication logs to calculate the time since the account's last successful logon. If this duration falls in the 95th percentile for dormancy (i.e., it is one of the least frequently used accounts), significantly increase the alert's risk score and priority.",
              "Train a supervised classification model (e.g., Logistic Regression) to predict if a logon attempt is malicious. Use features such as logon type, time of day, source IP, target host, and a boolean feature: `is_preceded_by_discovery_event_in_last_60_min`. An event where this feature is true will receive a significantly higher risk score from the model, triggering an automated investigation."
            ]
          },
          {
            "description": "A process event indicative of SAM database dumping is observed, followed by network activity consistent with data exfiltration from the same host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical application servers, Network egress points, File servers",
            "action": [
              "Monitor for process creation events (EID 4688) with command lines indicating SAM hive access (e.g., `reg.exe save hklm\\\\sam`, `vssadmin create shadow`). Also, monitor for object access events (EID 4663) on the SAM file. Correlate these host events with network file transfer logs (Zeek `files.log`) showing a file with a matching name or hash being transferred outbound.",
              "If a SAM access event is detected, analyze network connection logs (Zeek `conn.log`) from that host for the subsequent 15 minutes. Establish a baseline for the host's typical outbound data volume per connection. Generate an alert if a connection's `orig_bytes` value is in the 99th percentile for that host, suggesting an unusually large data transfer.",
              "Employ an anomaly detection model (e.g., Isolation Forest) on time-series data derived from Zeek `conn.log` for critical assets like Domain Controllers. Train the model on features like `orig_bytes`, `resp_bytes`, connection duration, and protocol. An anomalous spike in outbound traffic that is temporally correlated with a host-based SAM access event should be flagged as a high-confidence indicator of credential theft for offline discovery."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]