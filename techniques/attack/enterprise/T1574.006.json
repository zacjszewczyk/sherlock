[
  {
    "information_requirement": "Is the adversary establishing persistence using dynamic linker hijacking?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574.006",
        "name": "Dynamic Linker Hijacking",
        "evidence": [
          {
            "description": "A shared object (.so, .dylib) file is created in a common library path or user-writable directory, and its file hash matches a known malicious signature from a threat intelligence feed.",
            "data_sources": [
              "Sysmon for Linux Event ID 11: FileCreate",
              "Auditd syscall logs (create, write)",
              "File hashes from endpoint security agent"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories, /tmp, /var/tmp, /dev/shm, and standard library paths (/lib, /usr/lib) on critical Linux/macOS servers and developer workstations.",
            "action": [
              "ACTION: Create a rule to trigger an alert when a FileCreate event (Sysmon for Linux EID 11) generates a file with a '.so' or '.dylib' extension in a user-writable directory (e.g., /tmp, /home/*) and the file's hash matches a known-bad hash from a threat intelligence feed.",
              "ACTION: For each host, build a statistical baseline of file creation events in standard library paths (e.g., /usr/lib, /lib). Alert when the rate of '.so' or '.dylib' file creation in these directories exceeds a historical norm (e.g., 99th percentile) for that host or host group, indicating unusual library modification.",
              "ACTION: Train a file classification model on features like file path, entropy, string characteristics, and file size to predict whether a newly created shared library is malicious. Ingest features from file creation events and alert on files classified as malicious with high confidence, even without a prior IOC match."
            ]
          },
          {
            "description": "A process executes a command that modifies global dynamic linker configuration files, such as /etc/ld.so.preload or files within /etc/ld.so.conf.d/.",
            "data_sources": [
              "Sysmon for Linux Event ID 1: ProcessCreate",
              "Auditd syscall logs (execve)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The /etc/ directory on all Linux hosts, particularly application servers and bastion hosts.",
            "action": [
              "ACTION: Create a detection rule that searches process command lines (Sysmon EID 1) for patterns indicating modification of linker configurations, such as 'echo .* >> /etc/ld.so.preload', 'tee -a /etc/ld.so.preload', or 'ln -s .* /etc/ld.so.conf.d/'. Alert if the parent process is not a legitimate package manager or administrative script.",
              "ACTION: Calculate the entropy of command-line arguments for processes that write to files in /etc/. High entropy in commands modifying linker files can indicate obfuscation. Establish a baseline entropy for common administrative commands and alert when a command modifying these files has an entropy score significantly above the norm (e.g., > 3 standard deviations).",
              "ACTION: Use a time-series anomaly detection model to monitor the frequency of modifications to /etc/ld.so.preload and files in /etc/ld.so.conf.d/. An alert should be generated if modifications occur outside of established maintenance windows or at a rate inconsistent with historical patching and software installation cycles."
            ]
          },
          {
            "description": "A user's shell startup file (e.g., .bashrc, .profile, .zshrc) is modified to include an export command for a dynamic linker environment variable like `LD_PRELOAD` or `DYLD_INSERT_LIBRARIES`.",
            "data_sources": [
              "Sysmon for Linux Event ID 11: FileCreate",
              "Auditd syscall logs (write)",
              "File integrity monitoring (FIM) alerts"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories on multi-user Linux systems, developer workstations, and administrative jump boxes.",
            "action": [
              "ACTION: Implement a file integrity monitoring (FIM) rule to alert on any write event to shell startup files (e.g., `~/.bashrc`, `~/.profile`) that contains the strings 'LD_PRELOAD=' or 'DYLD_INSERT_LIBRARIES='.",
              "ACTION: Profile the frequency of modifications to shell startup files per user. Alert on users who modify these files more frequently than their historical baseline or more than 95% of other users, as this is often a one-time setup activity.",
              "ACTION: Train a regression model to predict a 'risk score' for a modification to a startup file. Features could include the user's role, the time of day, the presence of sensitive strings like 'LD_PRELOAD', and the reputation of any file paths or domains included in the change. A score above a predetermined threshold triggers an investigation."
            ]
          },
          {
            "description": "A system process that typically does not initiate external network connections (e.g., `cron`, `rsyslogd`) is observed making an outbound connection to an external IP address.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon for Linux Event ID 3: NetworkConnect",
              "Auditd syscall logs (connect)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and process/network logs from critical servers (e.g., authentication servers, web servers).",
            "action": [
              "ACTION: Create a watchlist of critical system processes that should never make outbound network connections. Join process execution data (Sysmon EID 3) with network flow logs (Zeek conn.log) and alert any time a process on this watchlist is the source of a connection to a non-local or non-internal IP address.",
              "ACTION: For each system process, establish a baseline of destination ports, connection frequency, and data volume. Alert if a process initiates a connection on a rare port (e.g., not in the top 95% of ports used by that process image name across the enterprise) or if its daily data transfer volume exceeds 3 standard deviations from its historical average.",
              "ACTION: Use an unsupervised learning model (e.g., an autoencoder) trained on legitimate process-network behavior (features: process name, destination IP, port, protocol, data volume). Feed live process network events into the model and alert when the reconstruction error for an event is high, indicating a significant deviation from learned normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges via dynamic linker hijacking?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574.006",
        "name": "Dynamic Linker Hijacking",
        "evidence": [
          {
            "description": "A shared object file is created by a non-root user in a world-writable directory that is also in the library search path of a SUID/SGID-enabled executable.",
            "data_sources": [
              "Sysmon for Linux Event ID 11: FileCreate",
              "Auditd syscall logs (create, write)",
              "Periodic file system scans for SUID/SGID bits"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All file systems on multi-user Linux hosts, with a focus on world-writable directories like /tmp and /var/tmp.",
            "action": [
              "ACTION: Periodically run `find / -type f \\( -perm -4000 -o -perm -2000 \\)` to inventory SUID/SGID executables. For each, determine its library search path. Create a rule that alerts when a non-root user creates a '.so' file in one of these enumerated paths.",
              "ACTION: Profile the typical parent processes that execute SUID/SGID binaries. Alert if a SUID binary is executed by a parent process that has never been observed initiating it before (e.g., a web server process like `httpd` executing `/bin/passwd`), as this could indicate exploitation following a library drop.",
              "ACTION: Use graph analysis to model relationships between users, processes, and file creation events. Identify anomalous paths in the graph, such as a low-privilege user creating a shared library that is subsequently loaded by a root-owned SUID process. Such a path would represent a high-risk privilege escalation chain."
            ]
          },
          {
            "description": "A process command line shows the `LD_PRELOAD` environment variable being set for the execution of a SUID/SGID binary, indicating an attempt to bypass linker sanitization.",
            "data_sources": [
              "Sysmon for Linux Event ID 1: ProcessCreate",
              "Auditd syscall logs (execve)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs from all Linux endpoints and servers, especially those running older or custom-compiled applications.",
            "action": [
              "ACTION: Create a high-severity alert rule that triggers when a process command line (from Sysmon EID 1) contains both the string 'LD_PRELOAD=' and the name of a known SUID/SGID executable (e.g., `sudo`, `passwd`, `pkexec`). This is a direct and high-confidence indicator of an attack attempt.",
              "ACTION: Analyze the environment variables of all executed processes. Calculate the rarity of the `LD_PRELOAD` variable being set for each unique process name. Alert when `LD_PRELOAD` is set for a process where it is statistically rare (e.g., present in <0.1% of historical executions of that process).",
              "ACTION: Train a decision tree classifier to identify malicious command-line executions. Features should include the process name, user context, presence of environment variables like `LD_PRELOAD`, command-line length, and argument structure. Flag executions classified as malicious, particularly those involving SUID/SGID binaries."
            ]
          },
          {
            "description": "A SUID/SGID executable spawns an anomalous child process (e.g., /bin/sh), modifies files outside of its expected scope, or initiates a network connection.",
            "data_sources": [
              "Sysmon for Linux Event ID 1: ProcessCreate",
              "Sysmon for Linux Event ID 3: NetworkConnect",
              "Zeek conn.log",
              "Auditd syscall logs (execve, connect, write)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process, network, and file integrity logs from all Linux hosts.",
            "action": [
              "ACTION: Create a rule to alert whenever a known SUID/SGID binary (e.g., `/usr/bin/crontab`) spawns a shell process (e.g., `sh`, `bash`, `zsh`) as a direct child, which is highly indicative of exploitation.",
              "ACTION: For each SUID/SGID binary, create a baseline of its normal child processes and network connection patterns. Alert if a running instance deviates from this baseline, such as by spawning a child process not in the 99% most frequent child processes list or making a network connection to a destination IP that is a statistical outlier.",
              "ACTION: Use a sequence analysis model (e.g., LSTM) to learn normal sequences of system calls made by SUID/SGID binaries. Monitor system call traces in real-time and alert when the observed sequence deviates significantly from the learned benign sequences, suggesting hijacked execution flow."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using dynamic linker hijacking?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574.006",
        "name": "Dynamic Linker Hijacking",
        "evidence": [
          {
            "description": "A shared library is written to disk that exports common system call function names (e.g., `readdir`, `execve`, `connect`) and is placed in a non-standard directory, indicating a potential userland rootkit component.",
            "data_sources": [
              "Sysmon for Linux Event ID 11: FileCreate",
              "Auditd syscall logs (create)",
              "Static analysis results from endpoint agent"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of hosts with critical security agents (e.g., EDR, log forwarders), particularly directories where tools are installed or user-writable locations.",
            "action": [
              "ACTION: Create a rule that triggers on the creation of a shared library file (Sysmon EID 11) that contains exported function symbols like `readdir`, `connect`, or `execve` but is not signed by a trusted vendor and is not in a standard system library path. This requires an agent capable of static analysis on file creation.",
              "ACTION: For all shared libraries on a system, calculate a 'suspicion score' based on the number of hooked standard functions and the file path's rarity. Alert on libraries with a score exceeding a percentile-based threshold (e.g., top 1%), indicating a high likelihood of being a rootkit component.",
              "ACTION: Train a classifier on the exported function tables of both legitimate and malicious shared libraries. When a new library is created, extract its exports and feed them into the model to classify it as benign or malicious, allowing detection of novel rootkit libraries."
            ]
          },
          {
            "description": "A security agent process (e.g., EDR agent, audit daemon) is executed with the `LD_PRELOAD` or `DYLD_INSERT_LIBRARIES` environment variable set.",
            "data_sources": [
              "Sysmon for Linux Event ID 1: ProcessCreate",
              "Auditd syscall logs (execve)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs from all endpoints and servers where security monitoring agents are deployed.",
            "action": [
              "ACTION: Create a high-priority rule that alerts immediately if any process execution event (Sysmon EID 1) for a known security agent process name (e.g., `osqueryd`, `auditd`, `falcon-sensor`) includes `LD_PRELOAD` or `DYLD_INSERT_LIBRARIES` in its command line or environment.",
              "ACTION: Maintain a list of all processes that have ever been observed running with `LD_PRELOAD` set in your environment. Alert if a security agent process appears on this list, as this is an extremely rare and suspicious event.",
              "ACTION: Model the parent-child relationships for security agent processes. Use an anomaly detection algorithm to flag any instance where a security agent is spawned by an unusual parent (e.g., not `systemd` or an installer) or with anomalous environment variables, suggesting a hijack and relaunch attempt."
            ]
          },
          {
            "description": "A common system enumeration or administration tool (e.g., `ps`, `ls`, `netstat`, `ss`) is executed with the `LD_PRELOAD` environment variable set, pointing to a malicious library to hide adversary activity.",
            "data_sources": [
              "Sysmon for Linux Event ID 1: ProcessCreate",
              "Auditd syscall logs (execve)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on all Linux systems, especially those accessed by administrators.",
            "action": [
              "ACTION: Create a detection rule that alerts when a process from a watchlist of enumeration tools (`ps`, `ls`, `ss`, `netstat`, `lsof`, `top`) is executed with the `LD_PRELOAD` environment variable present in its process context (Sysmon EID 1).",
              "ACTION: Analyze command-line argument patterns for common enumeration tools. An execution with `LD_PRELOAD` is a strong statistical outlier. Further, analyze the file path specified in `LD_PRELOAD`. Alert if the path's directory has an unusually high entropy or is located in a statistically uncommon location for libraries (e.g., /dev/shm).",
              "ACTION: Use natural language processing (NLP) techniques to model legitimate command-line sequences in an administrator's session. Flag sessions where enumeration commands are prepended with `LD_PRELOAD`, as this breaks the learned 'grammar' of normal administrative behavior."
            ]
          },
          {
            "description": "The volume of security event logs or network telemetry from a host significantly decreases following the restart of a critical security agent or log forwarder process.",
            "data_sources": [
              "SIEM event ingestion logs",
              "Zeek conn.log",
              "Sysmon for Linux Event ID 1: ProcessCreate"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log ingestion pipeline metrics, network traffic summaries from core switches, and process monitoring logs on hosts with security agents.",
            "action": [
              "ACTION: Correlate a security agent restart event (Sysmon EID 1) with a subsequent 'log source silent' alert from the SIEM for that same host. This directly links the restart to the loss of visibility, suggesting a potential hijack.",
              "ACTION: For each log source, establish a time-series baseline of event-per-second (EPS) volume. Alert if the EPS drops below a dynamic threshold (e.g., below the 5th percentile of its historical 15-minute rolling average) for a sustained period.",
              "ACTION: Employ a time-series forecasting model (e.g., ARIMA or Prophet) to predict the expected log volume from each host. Generate an alert when the actual observed volume deviates significantly from the forecasted volume, indicating an anomaly that could be caused by agent tampering or hijacking."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]