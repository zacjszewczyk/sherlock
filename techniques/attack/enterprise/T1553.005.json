[
  {
    "information_requirement": "Is the adversary bypassing host defenses using Mark-of-the-Web bypass techniques?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1553.005",
        "name": "Mark-of-the-Web Bypass",
        "evidence": [
          {
            "description": "A container file (e.g., ISO, VHD, IMG, RAR, ZIP) is downloaded from the internet, and its SHA256 hash matches a known malicious hash from threat intelligence, or the source IP/domain is on a known malicious infrastructure blocklist.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway proxy servers, Network egress points, DNS servers",
            "action": [
              "For every file transferred over HTTP/S identified in Zeek logs with a container file MIME type (e.g., application/zip, application/x-iso9660-image), calculate its SHA256 hash. Compare the hash, source IP address, and server name against subscribed threat intelligence feeds for known malicious indicators. Generate a high-severity alert upon a match.",
              "For each unique container file hash observed in Zeek files.log, calculate its global prevalence (count of hosts that downloaded it) and temporal frequency (download count over time). Flag files with a prevalence below the 5th percentile for the environment as potentially suspicious, especially if downloaded by high-value users or from uncategorized domains.",
              "Develop a supervised machine learning classifier (e.g., Random Forest) to predict the likelihood of a downloaded container file being malicious. Features for the model should include file size, source IP reputation, domain age of the host, MIME type, and the prevalence of the file hash in historical data. Run all new container file downloads through the model to generate a risk score."
            ]
          },
          {
            "description": "A process creation event where the parent process is a web browser (chrome.exe, msedge.exe, firefox.exe) or Microsoft Office application (winword.exe, excel.exe, outlook.exe) and a descendant process is a utility used to mount a disk image or extract an archive.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances, Terminal servers",
            "action": [
              "Using process creation logs (Windows Event ID 4688 with command line logging enabled), create a rule to detect a process chain where a parent process is one of `[chrome.exe, msedge.exe, firefox.exe, winword.exe, excel.exe, outlook.exe]` and a descendant process within 5 levels and 60 seconds is one of `[powershell.exe, explorer.exe, 7z.exe, winrar.exe, tar.exe]` with command line arguments indicating image mounting or archive extraction (e.g., 'Mount-DiskImage', '.iso', '.vhd', ' x ').",
              "For all process creation events, build a statistical model of normal parent-child process relationships. Calculate the conditional probability P(Child | Parent) for all pairs in the environment. Flag process chains where the observed parent-child relationship falls below a low probability threshold (e.g., 1st percentile of observed probabilities), as an unusual lineage like outlook.exe spawning 7z.exe is highly anomalous.",
              "Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) on the frequency of disk image mounting or archive extraction events per host. A sudden spike in these activities on a host, deviating significantly from its historical baseline, should be flagged for investigation as it may indicate the start of a malicious payload delivery campaign."
            ]
          },
          {
            "description": "Correlation of a network event showing a container file download to a specific host, followed within a 15-minute window by a process creation event on the same host indicating the mounting/extraction of an archive, and a subsequent process execution from the newly created file path.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM/Log aggregation platform, User workstations, Internet gateway proxy servers",
            "action": [
              "Create a correlation rule in the SIEM. Trigger: A file download event from Zeek logs (http.log, files.log) with a container file extension/MIME type. Condition 1: Within 10 minutes on the same host IP, a process creation event (Windows Event ID 4688) occurs involving archive/mount utilities. Condition 2: Within 2 minutes of the mount/extraction, another process creation event occurs where the executable path is on a new drive letter or in a temporary folder created by the extraction. Alert on this full sequence.",
              "For all observed sequences of [file download -> process execution], calculate the time-to-execution (TTE). Establish a baseline distribution of TTE for benign software installations versus others. Use percentile analysis to flag sequences where the TTE is unusually short (e.g., below the 10th percentile of all observed TTEs), as this is characteristic of automated malicious scripts.",
              "Use a graph-based analysis model to represent host activity. Nodes are processes, files, and network connections; edges represent interactions. Train a graph neural network (GNN) to identify subgraphs matching the pattern of [external network connection -> file write of container -> process mount -> process execution from new path]. The GNN can learn the nuanced features of this pattern, distinguishing it from benign software installation workflows."
            ]
          },
          {
            "description": "A process creation event for an executable file that is either unsigned or has a compilation timestamp within the last 30 days, where the executable's path is located on a newly mounted drive letter or a high-entropy temporary path.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Servers, Domain Controllers",
            "action": [
              "Monitor process creation events (Windows Event ID 4688). For each new process, check if the executable path is on a non-system drive (not C:\\). If so, query the host to see if that drive letter was mounted within the last 30 minutes. If the executable is also unsigned (determined via EDR data or a scripted `Get-AuthenticodeSignature` check), generate a high-severity alert.",
              "Calculate the Shannon entropy of executable file paths for all process creation events. Paths associated with temporary archive extractions often have high entropy (e.g., `C:\\Users\\user\\AppData\\Local\\Temp\\7zO8A4B.tmp\\payload.exe`). Establish a baseline for path entropy across the enterprise. Flag executions where the path entropy exceeds the 95th percentile, especially for processes not on an established software allowlist.",
              "Develop an unsupervised anomaly detection model (e.g., Isolation Forest) using features from process creation events. Features should include: path entropy, a boolean for whether the path is in a temp directory, a boolean for whether the parent process is a known archive utility, executable file size, and executable file name entropy. The model will learn what a 'normal' execution looks like and assign an anomaly score to each event. Events with scores above a tuned threshold indicate suspicious activity."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]