[
  {
    "information_requirement": "Has the adversary gained initial access to the network via drive-by compromise? (PIR)",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1189",
        "name": "Drive-by Compromise",
        "evidence": [
          {
            "description": "An endpoint's network traffic log (e.g., DNS query, HTTP request, or raw connection log) contains a destination domain, URL, or IP address that is present on a high-confidence threat intelligence feed categorized as malicious (e.g., associated with exploit kits, malvertising, or watering holes).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Web Proxy, Internet Gateway Firewall, Internal DNS Resolvers",
            "action": [
              "Continuously correlate the 'host' and 'uri' fields in Zeek http.log and the 'query' field in Zeek dns.log against a threat intelligence feed of known malicious domains and URLs. Generate a high-priority alert for any match.",
              "Calculate a reputation score for all requested domains based on features like domain age, registration details (e.g., privacy-protected), and historical prevalence in organizational traffic. Alert when a user visits a domain with a reputation score in the lowest 5th percentile.",
              "Employ a pre-trained classification model (e.g., Random Forest) to predict the maliciousness of a URL based on lexical features (e.g., length, entropy, keyword presence). Run this model on all 'host' and 'uri' fields from Zeek http.log and generate an alert for any URL classified as malicious with a confidence score above 0.90."
            ]
          },
          {
            "description": "An HTTP response body, extracted from network traffic, contains JavaScript with high character entropy, suspicious iframe constructs (e.g., 1x1 pixel), or matches signatures of known exploit kits or obfuscation techniques.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Web Proxy, Network Intrusion Detection System (NIDS), Full Packet Capture (PCAP) Storage",
            "action": [
              "Scan HTTP response bodies captured in Zeek logs using YARA rules designed to detect signatures of known exploit kits, heap spraying code, or specific obfuscation function names. Trigger an alert on a rule match.",
              "For each JavaScript file or block identified in HTTP traffic, calculate the character entropy. Establish a baseline entropy level for legitimate JavaScript on frequently visited sites. Alert when the entropy of a script exceeds the baseline by more than three standard deviations, indicating probable obfuscation.",
              "Utilize a trained sequence model, such as a Long Short-Term Memory (LSTM) network, to analyze the abstract syntax tree (AST) of JavaScript code. The model, trained on both malicious and benign scripts, classifies new code as suspicious if it contains sequences indicative of exploit code, triggering an investigation."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a parent process corresponding to a web browser (e.g., chrome.exe, msedge.exe, firefox.exe) spawning a child process that is a command-line interpreter (cmd.exe, powershell.exe) or scripting host (wscript.exe, cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI) Fleet, Terminal Servers",
            "action": [
              "Monitor Windows Event ID 4688 for events where ParentProcessName is a browser and ProcessName is cmd.exe, powershell.exe, wscript.exe, or cscript.exe. Alert if the CommandLine contains high-fidelity strings such as '-enc', 'IEX (New-Object Net.WebClient)', 'mshta.exe javascript:', or 'certutil'.",
              "Analyze all command lines associated with browser-spawned child processes. Calculate the frequency of individual command-line tokens (arguments, flags). Alert on the presence of tokens that are statistically rare across the enterprise (e.g., appearing in less than 0.1% of all command lines) when originating from a browser process.",
              "Deploy a classification model that scores the maliciousness of a command line based on its features, including length, character distribution, token sequence, and the presence of suspicious keywords. A command line originating from a browser process that receives a high maliciousness score from the model should generate a high-priority alert."
            ]
          },
          {
            "description": "A process creation event shows a web browser process spawning a child process not on a pre-defined allowlist of expected browser helper applications, or a file creation event shows a browser process writing a file with an executable extension to a non-standard location.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, VDI Fleet",
            "action": [
              "Query process creation logs (Windows Event ID 4688) for instances where a browser process parent spawns a child process not on a pre-defined allowlist (e.g., alert on 'chrome.exe' spawning 'rundll32.exe'). Additionally, query file creation logs (Sysmon Event ID 11) for browser processes writing files with executable extensions (e.g., .exe, .dll, .ps1) to user-writable directories like %APPDATA% or %TEMP% and alert.",
              "Establish a baseline of normal parent-child process relationships and file write locations/extensions for browsers over a 30-day period. Use frequency analysis to identify rare occurrences. Alert when a parent-child process pair or a file write event falls into the bottom 1st percentile of frequency, indicating a highly anomalous event.",
              "Use a clustering algorithm (e.g., DBSCAN) on host event data, using features like parent process name, child process name, and file write path. Events that do not belong to any established cluster are flagged as outliers, representing potentially malicious activity resulting from a compromise."
            ]
          },
          {
            "description": "Within a 5-minute window following an observed web browsing event (HTTP request), the same source IP address initiates a new, distinct network connection to a destination IP address known to be malicious, or over a port not commonly associated with standard web or application traffic for that user or host.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway Firewall, User Workstations, Network Core Switches",
            "action": [
              "Join http.log and conn.log on the source IP ('id.orig_h'). For each HTTP request, search for a subsequent connection in conn.log within 5 minutes where the destination IP ('id.resp_h') matches a threat feed or the destination port ('id.resp_p') is a high-risk, non-standard port (e.g., 4444, 5555, 8443) and is not part of a subsequent HTTP request. Generate an alert.",
              "For each user, create a baseline of typical destination Autonomous System Numbers (ASNs), countries, and ports. For each new connection following a browsing session, calculate an anomaly score based on deviations (e.g., connection to a rare country, ASN, or port for that user). Alert if the score exceeds the 99th percentile of historical scores for that user.",
              "Apply a time-series anomaly detection model (e.g., ARIMA or Seasonal-Hybrid ESD) to each host's outbound connection data (e.g., bytes out, connection count per hour). Correlate alerts from this model with recent web browsing activity from the same host to identify potential post-compromise C2 traffic."
            ]
          },
          {
            "description": "A domain that is either newly observed across the enterprise or has a low reputation score is accessed by multiple, distinct endpoints from a logically related group (e.g., same /24 subnet, same department) within a short time period (e.g., 60 minutes).",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Active Directory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Enterprise Web Proxy, Domain Controllers",
            "action": [
              "Maintain a list of Newly Observed Domains (NODs) seen in the last 24 hours. Alert when more than 10 unique hosts from the same /24 subnet request the same NOD within a 1-hour window.",
              "For each domain requested in Zeek dns.log, calculate a 'locality ratio' by dividing the number of unique internal hosts requesting it by its global popularity score (from a third-party source). A high ratio indicates a domain that is unpopular globally but popular internally. Alert when this ratio exceeds a dynamic threshold (e.g., top 5% of all calculated ratios).",
              "Construct a bipartite graph where nodes represent internal hosts and external domains. Use a community detection algorithm (e.g., Louvain Modularity) to identify clusters of hosts that strongly connect to a small set of domains. A newly formed, dense community is a strong indicator of a targeted watering hole attack against that group of users."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]