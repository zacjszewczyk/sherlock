[
  {
    "information_requirement": "Is an adversary modifying file or directory permissions to evade defenses or enable persistence?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1222.001",
        "name": "Windows File and Directory Permissions Modification",
        "evidence": [
          {
            "description": "Execution of a permission modification command (`icacls.exe`, `cacls.exe`, `takeown.exe`, `attrib.exe`) where the process image hash matches a known-malicious indicator from a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, with a focus on Domain Controllers, authentication servers, critical application servers, and file servers.",
            "action": [
              "Create a SIEM rule that monitors process creation events (Windows Event ID 4688). For each execution of `icacls.exe`, `cacls.exe`, `takeown.exe`, or `attrib.exe`, hash the process image and query a threat intelligence feed via API. Trigger a critical alert on a match.",
              "For command lines associated with the above tools, calculate the Shannon entropy. Establish a baseline of entropy scores for legitimate administrative use cases across different user roles. Flag executions where the command line entropy exceeds the 95th percentile of the baseline as suspicious.",
              "Train a supervised classification model (e.g., XGBoost, Random Forest) on labeled process execution data (Windows Event ID 4688). Use features including parent process name, user context, command-line length, command-line entropy, and the binary's threat intelligence hash result. Deploy the model to classify new executions of permission-modifying tools as benign or malicious."
            ]
          },
          {
            "description": "Execution of a permission modification command (`icacls.exe`, `cacls.exe`, `takeown.exe`, or PowerShell `Set-Acl`) that grants broad permissions (e.g., 'F' for FullControl, 'M' for Modify) to permissive principals (e.g., 'Everyone', 'Authenticated Users', 'Users') on files within critical system directories (e.g., `C:\\Windows\\System32`, `C:\\ProgramData`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical system directories such as `C:\\Windows\\System32`, `C:\\Windows\\SysWOW64`, `C:\\ProgramData`, and user profile directories on all Windows endpoints and servers.",
            "action": [
              "Deploy a SIEM rule using regular expressions to parse command-line arguments from Windows Event ID 4688. Trigger an alert if `icacls.exe`, `cacls.exe`, or PowerShell's `Set-Acl` is used with arguments matching patterns like `/(grant|g).*(Everyone|Authenticated Users|Users).*:([Ff]|[Mm])/` on a path within a monitored critical directory list.",
              "For each user role (e.g., standard user, domain admin), baseline the frequency of permission modifications that target critical directories. Calculate the 99th percentile of modification counts per user per hour. Trigger an alert when a user's activity exceeds their role-based baseline.",
              "Fine-tune a pre-trained transformer-based NLP model (e.g., a BERT variant) to classify command-line strings as 'benign' or 'suspicious'. The fine-tuning dataset should consist of labeled command lines from legitimate administrative scripts and known malicious commands. Use the model to score the command-line arguments of new permission modification events for suspiciousness."
            ]
          },
          {
            "description": "Modification of an object's Discretionary Access Control List (DACL), captured by Windows Event ID 4670, where the target object is a known persistence-related binary (e.g., `sethc.exe`, `Utilman.exe`, `magnify.exe`) or a logon script path.",
            "data_sources": [
              "Windows Event ID 4670"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system locations on Windows hosts containing accessibility feature binaries (e.g., `C:\\Windows\\System32\\`) and logon/startup script directories (e.g., `C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp`).",
            "action": [
              "Enable SACL auditing for 'Write DAC' on a watchlist of critical files (e.g., `sethc.exe`, `Utilman.exe`, `magnify.exe`). Create a high-priority SIEM alert that triggers on any Windows Event ID 4670 where the `ObjectName` field matches an entry in the watchlist.",
              "For the watchlist files, establish a baseline of modification events (Event ID 4670) over a 90-day period. As legitimate changes are exceptionally rare, apply a simple threshold model where any single modification event (count > 0) within a 30-day window triggers a high-severity alert.",
              "Develop an unsupervised anomaly detection model (e.g., Isolation Forest) using features from Event ID 4670 such as `SubjectUserName`, `ProcessName`, `ObjectName`, and time of day. Train the model on data from non-critical systems to learn normal patterns. Apply the model to critical systems and flag any permission change on a watchlist file as an anomaly with a high score."
            ]
          },
          {
            "description": "A burst of 50 or more file permission modification events (Windows Event ID 4670) originating from a single user (`SubjectUserName`) or process (`ProcessName`) on a single host within a 10-minute window, indicating potential 'permission bombing'.",
            "data_sources": [
              "Windows Event ID 4670"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, document management systems, and developer workstations where bulk file operations may occur, providing a baseline for normal activity.",
            "action": [
              "Create a threshold-based SIEM rule that counts Windows Event ID 4670 events, grouped by `SubjectUserName` and `ComputerName`, over a 10-minute sliding window. Trigger a medium-severity alert if the count exceeds a hard threshold of 50.",
              "For each user, establish a dynamic baseline of their average and standard deviation of permission modification events per hour. Use a Z-score calculation to detect statistical outliers. Trigger an alert if a user's activity in any given hour results in a Z-score greater than 3, indicating a significant deviation from their normal behavior.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to Event ID 4670 data. Use features such as a timestamp, `SubjectUserName`, and `ProcessName`. A dense cluster of events with the same user/process in a tight time window indicates a bulk modification operation and should be flagged as an anomalous cluster."
            ]
          },
          {
            "description": "A correlated sequence of events on a single host within a 15-minute window: 1) A permission change on a directory (Windows Event ID 4670), 2) A new process creation from that directory (Windows Event ID 4688), and 3) An outbound network connection from that new process to a non-RFC1918 IP address (Zeek conn.log).",
            "data_sources": [
              "Windows Event ID 4670",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing systems, DMZ servers, and developer workstations with direct internet access, which are common staging points for post-compromise activity.",
            "action": [
              "Create a stateful correlation rule in a SIEM. The rule's logic is: IF (Event ID 4670 on host `H` for directory `D`) FOLLOWED BY (Event ID 4688 on host `H` for a process in directory `D`) FOLLOWED BY (Zeek conn.log from `id.orig_h = H` to a public `id.resp_h`) WITHIN 15 minutes, THEN generate a high-severity alert.",
              "For alerts generated by the symbolic rule, analyze the destination port (`id.resp_p`) in the Zeek conn.log. Compare this port against a pre-computed frequency distribution of all outbound ports used across the enterprise over the last 30 days. If the port is in the bottom 5th percentile of usage, increase the alert's risk score by 50%.",
              "Train a sequence-based anomaly detection model, such as a Long Short-Term Memory (LSTM) autoencoder, on event sequences from normal user sessions. A sequence is a time-ordered list of events (file mods, process creations, network connections) for a user. Feed the observed `[4670, 4688, conn]` sequence into the model. A high reconstruction error indicates the sequence does not match learned normal patterns and warrants a high-confidence alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]