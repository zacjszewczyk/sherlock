[
  {
    "information_requirement": "Is the adversary evading defenses using stolen web session cookies?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1550.004",
        "name": "Web Session Cookie",
        "evidence": [
          {
            "description": "A successful, authenticated web session to an external-facing corporate web service where the source IP address is present on a high-confidence threat intelligence feed of known malicious IPs, anonymizing proxies, or unusual cloud hosting providers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, VPN Concentrator, External Web Application Servers, Cloud Service Provider Flow Logs",
            "action": [
              "Symbolic: Correlate source IP addresses from Zeek conn.log for all sessions to external-facing web services against a threat intelligence feed of known malicious IPs (e.g., C2, TOR exit nodes, proxies). Generate a high-priority alert for any match associated with a successful post-authentication HTTP request in Zeek http.log.",
              "Statistical: For each user, establish a baseline of common source Autonomous System Numbers (ASNs) and countries from Zeek conn.log geolocation data. Calculate the frequency distribution of these attributes per user. Generate an alert when a session originates from an ASN or country that falls outside the 99th percentile of the user's historical activity, indicating a rare or anomalous location.",
              "Machine Learning: Train a time-series model (e.g., ARIMA or LSTM) on the volume and characteristics of login events per user. Use the model to predict expected login behavior. Flag sessions that represent a significant anomaly in the time-series forecast, such as a login at a highly improbable time or a sudden spike in session activity after a period of dormancy, which could indicate a stolen cookie being used."
            ]
          },
          {
            "description": "A process creation event where the command line contains arguments for accessing, copying, or exfiltrating browser cookie database files (e.g., 'cookies.sqlite', 'User Data\\Default\\Network\\Cookies').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Critical Staff Workstations, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 process creation events for command lines containing known cookie-stealing tool names (e.g., `CookieCracker.exe`, `Mimikatz.exe`) or regular expressions matching the targeting of default browser cookie paths (e.g., `*\\AppData\\*\\Google\\Chrome\\User Data\\Default\\Network\\Cookies*`).",
              "Statistical: Calculate the entropy of command-line arguments for common processes like `powershell.exe`, `cmd.exe`, and `esentutl.exe`. A command with unusually high entropy that also references user profile paths (`%APPDATA%`, `%LOCALAPPDATA%`) may indicate obfuscated scripts designed to steal files like cookies. Alert when the argument entropy for these processes exceeds a baseline threshold (e.g., > 3 standard deviations from the mean).",
              "Machine Learning: Develop a classification model (e.g., a logistic regression or decision tree) trained on features from Windows Event ID 4688, including parent process, process name, and command-line arguments. Use a labeled dataset of benign and malicious commands to train the model to classify new process creation events as suspicious in real-time."
            ]
          },
          {
            "description": "A single, authenticated user session, inferred through correlated activity, that demonstrates two or more simultaneous anomalous characteristics: a change in User-Agent string, an 'impossible travel' velocity between sequential requests, or session activity continuing after the associated endpoint is known to be offline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4634"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, User Endpoints, Authentication Logs from Domain Controllers",
            "action": [
              "Symbolic: For a given session identifier, create a rule that triggers if the User-Agent string value changes between two consecutive HTTP requests within that session. This is a rigid anomaly that should not occur in legitimate browser sessions.",
              "Statistical: For each user session, calculate the geographic distance and time difference between consecutive requests. If the resulting velocity (distance/time) exceeds a plausible threshold (e.g., 600 mph), flag it as 'impossible travel'. Maintain a per-user baseline of User-Agent strings and flag any session using a User-Agent that has a Jaccard distance greater than 0.5 from the user's typical set of agents.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on session features such as source IP, User-Agent, request timing, and accessed resources. Legitimate user sessions should form dense clusters. Sessions that are classified as noise or fall into sparse, anomalous clusters are candidates for investigation as they do not conform to established patterns of behavior."
            ]
          },
          {
            "description": "An endpoint process accesses browser cookie files, immediately followed by new network connections from that endpoint to an external destination not previously associated with the user or host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, DNS Servers, Internet Gateway",
            "action": [
              "Symbolic: Create a sequence alert that triggers when a process access to a browser cookie file (detected via EDR or specific audit policies) is followed within 60 seconds by a DNS query (Zeek dns.log) from the same host for a domain on a CTI watchlist.",
              "Statistical: For each host, establish a baseline of destination IPs and domains. Following a suspicious cookie file access event (from the Symbolic or ML action for cookie theft), monitor for new connections in Zeek conn.log or dns.log to destinations that are statistically rare (e.g., in the 99th percentile of rarity) for that host. This indicates potential exfiltration or C2 communication.",
              "Machine Learning: Implement a sequence analysis model that takes a stream of host and network events as input. Train the model to recognize normal sequences (e.g., browser reads cookie -> browser makes web request). The model should flag anomalous sequences, such as `powershell.exe` reads cookie -> `powershell.exe` makes DNS query to a dynamic DNS domain -> `powershell.exe` makes a long-lived TCP connection."
            ]
          },
          {
            "description": "A successful authenticated session to a web application is established from a new source IP or device without a preceding authentication ceremony (e.g., login page interaction, SAML redirect, MFA prompt).",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Application Servers, Load Balancers, Reverse Proxies",
            "action": [
              "Symbolic: Define the URLs associated with the final steps of your authentication workflow (e.g., `/login.aspx`, `/sso/callback`). Create a rule that alerts when a new session (new source IP and User-Agent combination) starts accessing internal application pages (e.g., `/dashboard`) without having first generated a log for one of the defined authentication workflow URLs.",
              "Statistical: Calculate the entropy of the first-visited URL ('landing page') per user session for a given application. A user session that begins on a high-entropy URL (i.e., not a common landing page like `/home` or `/dashboard`) is anomalous and may indicate a session cookie was used to directly access a deep link.",
              "Machine Learning: Use a state machine or Markov chain model to learn the valid state transitions (page navigations) within your web application. A session that begins in a state that is not a designated 'start' state and for which no valid transition from a start state occurred is a high-confidence anomaly indicative of a replayed session."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary moving laterally using stolen web session cookies?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1550.004",
        "name": "Web Session Cookie",
        "evidence": [
          {
            "description": "An internal host with a known low reputation score (e.g., has active C2 alerts, flagged for prior malware execution) initiates a new authenticated session to a different internal web application.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments, Server Subnets, Data Center Core Switches",
            "action": [
              "Symbolic: Maintain a dynamic watchlist of 'at-risk' internal IPs based on other security alerts (e.g., malware execution, C2 beaconing). Create a rule that triggers when an IP from this watchlist is the source of an HTTP request to an internal-only web application that contains an authentication cookie.",
              "Statistical: Analyze the graph of internal host-to-host web connections. Identify hosts that act as unusual 'hubs' or 'bridges' by connecting to a number of internal web services far exceeding the 95th percentile of their peers. This 'centrality' score can indicate a pivot point.",
              "Machine Learning: Use a community detection algorithm (e.g., Louvain Modularity) on the internal web traffic graph. Normal activity will form distinct communities (e.g., developers accessing dev tools, HR accessing HR systems). A connection that bridges two otherwise disconnected communities, especially from a host not typically in either, is highly suspicious and could represent lateral movement."
            ]
          },
          {
            "description": "A network connection to an internal web application, containing a session cookie, originates from a process on the source endpoint that is not a whitelisted web browser (e.g., `powershell.exe`, `curl.exe`, `rundll32.exe`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Servers hosting internal web applications, Domain Controllers",
            "action": [
              "Symbolic: Correlate Zeek http.log requests containing cookies with Windows Event ID 4688 process creation events from the source IP within a 5-second window. Alert if the process name is on a blacklist of non-browser tools (`powershell.exe`, `certutil.exe`, `bitsadmin.exe`) or not on a whitelist of approved browsers (`chrome.exe`, `msedge.exe`).",
              "Statistical: Build a frequency distribution of parent-child process relationships that initiate outbound network traffic to internal web services. A rare parent-child relationship (e.g., `winword.exe` spawning `powershell.exe` which then makes an internal web request) that is statistically anomalous (e.g., occurs < 0.01% of the time) should be scored as highly suspicious.",
              "Machine Learning: Train a classifier on process and network features to identify non-browser web traffic. Features can include process name, command-line argument entropy, parent process, destination port, and HTTP headers (e.g., User-Agent). The model can learn to distinguish legitimate automated traffic from script-based lateral movement."
            ]
          },
          {
            "description": "A single session identifier (e.g., session cookie value) is observed in HTTP requests to an internal web application originating from two or more distinct internal IP addresses within the session's timeout window.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Core, Application Server Load Balancers, East-West Traffic Mirrors",
            "action": [
              "Symbolic: For each session ID extracted from Zeek http.log, store the source IP. If a request with the same session ID arrives from a different source IP within a 30-minute window, trigger an alert. This is a high-fidelity indicator of a re-used cookie.",
              "Statistical: For each user, baseline the number of distinct internal source IPs they use to access internal applications per day. Alert if the number of source IPs for a user on a given day exceeds a dynamic threshold, such as 3 standard deviations above their personal mean, indicating potential session hopping.",
              "Machine Learning: Use a state machine or sequence analysis model to track the progression of a user's activity within an application. A sudden, illogical jump in the state (e.g., accessing a settings page without going through the main dashboard) that also coincides with a change in source IP is a strong anomaly that can be detected by a model trained on normal user navigation paths."
            ]
          },
          {
            "description": "An authenticated HTTP request to an internal web service is observed from a source IP, but the associated user account has no corresponding interactive (Type 2), remote interactive (Type 10), or network (Type 3) logon events on that source host within a recent time window.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Endpoints, Internal Web Servers",
            "action": [
              "Symbolic: For each authenticated internal web request in Zeek http.log, query for a corresponding Windows Event ID 4624 (Logon Type 2, 10, or 3) on the source host for that user within the last 24 hours. If no such event is found, generate an alert.",
              "Statistical: For each server, create a baseline of which users typically log in (via Event ID 4624). For each internal web request, calculate a rarity score for the user-host pair. A web request from a user to a server they have a zero or near-zero historical probability of logging into is highly suspicious.",
              "Machine Learning: Train a bipartite graph model of user-host logon relationships using historical Windows Event ID 4624 data. The model can learn expected connections. An attempt to use a web session from a host that the model identifies as a highly improbable source for that user can be flagged as anomalous lateral movement."
            ]
          },
          {
            "description": "A user session within a sensitive internal web application (e.g., vCenter, Kubernetes Dashboard, network device UI) involves actions (identified by URL paths or API calls) that are statistically rare for that user's role or peer group.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrative Network Segment, Servers hosting critical management tools, Core Switches",
            "action": [
              "Symbolic: Define a set of highly privileged actions via URL patterns (e.g., `/api/v1/delete_vm`, `/admin/export_all_users`). Create a rule that alerts if a user who is not in a predefined 'vCenter Admins' or 'Domain Admins' group attempts to access these URLs.",
              "Statistical: For each user and for peer groups (e.g., 'Help Desk', 'Developers'), build a profile of accessed URLs/API endpoints. Use frequency analysis (e.g., TF-IDF) to identify actions that are rare for an individual compared to their baseline or rare for their peer group. An action in the 99.9th percentile of rarity for that user/group is a strong anomaly.",
              "Machine Learning: Use sequence-to-sequence models (like an autoencoder) to learn normal sequences of user actions (URL navigation paths) within the application. When a user's session presents a sequence of actions that the model cannot reconstruct with low error, it indicates a significant deviation from learned behavior. This can detect an adversary performing an unusual combination of legitimate actions."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]