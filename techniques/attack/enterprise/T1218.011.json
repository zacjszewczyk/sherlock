[
  {
    "information_requirement": "Is the adversary leveraging rundll32.exe to execute malicious code for defense evasion? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.011",
        "name": "Rundll32",
        "evidence": [
          {
            "description": "A rundll32.exe process loads a DLL whose SHA256 hash matches a known-malicious entry in a threat intelligence feed, or the process establishes a network connection to an IP address or domain with a reputation score below a defined threshold.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Domain Controllers, Internet Gateway/Egress Points",
            "action": "1. (Symbolic) For each rundll32.exe process creation (Windows Event ID 4688), extract the DLL path from the command line, calculate its SHA256 hash, and query the hash against internal and external threat intelligence feeds. Concurrently, correlate the Process ID with network connection events (Windows Event ID 5156, Zeek conn.log) and query destination IPs and domains (from Zeek dns.log) against CTI blocklists. Generate a high-severity alert on any match. 2. (Statistical) Analyze the prevalence of all DLLs loaded by rundll32.exe across the enterprise. Calculate the frequency of each DLL hash and flag any DLL loaded on a statistically small number of hosts (e.g., < 1% of endpoints) that is not part of a known, legitimate software distribution package. 3. (Machine Learning) Develop a classification model (e.g., Random Forest) trained on features from process and network events, including: DLL path location (e.g., System32, Temp), presence of a digital signature, destination IP/domain reputation score, connection port, and data transfer volume. The model will output a probability score indicating the likelihood that a given rundll32.exe execution is malicious."
          },
          {
            "description": "A rundll32.exe command line contains syntax patterns strongly associated with malicious activity, including: execution of remote scripts via 'javascript:' protocol, invocation of .cpl files via 'shell32.dll', loading of DLL functions by ordinal number, or the use of ambiguous 'W'/'A' function name suffixes.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, User Workstations",
            "action": "1. (Symbolic) Deploy regular expressions within the SIEM to scan rundll32.exe command lines (Windows Event ID 4688) for high-fidelity malicious patterns, including: 'javascript:\\..\\mshtml,RunHTMLApplication', 'shell32.dll,Control_RunDLL', and ordinal exports (e.g., ',#1'). Trigger a high-severity alert on a match. 2. (Statistical) For every rundll32.exe command line, calculate the Shannon entropy of the argument string. Establish a baseline entropy score for legitimate invocations and flag any command line whose entropy exceeds a high percentile threshold (e.g., the 99th percentile), which may indicate obfuscated script content. 3. (Machine Learning) Utilize a Natural Language Processing (NLP) model with TF-IDF vectorization and a classifier (e.g., Logistic Regression) to distinguish malicious from benign command lines. Train the model on a labeled dataset to identify novel malicious patterns that do not match hard-coded regex rules."
          },
          {
            "description": "A process named rundll32.exe executes from a file path other than '%SystemRoot%\\System32' or '%SystemRoot%\\SysWOW64', or a legitimate rundll32.exe process is observed loading a DLL from a user-writable directory (e.g., AppData, Temp, Downloads), or the parent process of rundll32.exe is not on an established allowlist.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, File servers hosting user profiles or shared drives",
            "action": "1. (Symbolic) Create a SIEM rule that triggers if a process named 'rundll32.exe' executes from a path other than 'C:\\Windows\\System32\\' or 'C:\\Windows\\SysWOW64\\'. Create a second rule that triggers if the command line argument for rundll32.exe contains a DLL path pointing to a user-writable directory like '\\AppData\\', '\\Temp\\', or '\\ProgramData\\'. 2. (Statistical) For each host, build a baseline of normal parent-child process relationships for rundll32.exe. Use frequency analysis over a 30-day window to identify common parent processes (e.g., explorer.exe). Generate an alert when rundll32.exe is spawned by a parent that is statistically rare across the enterprise (e.g., appears in <0.1% of relationships). 3. (Machine Learning) Apply an anomaly detection algorithm (e.g., Isolation Forest) to a feature set describing the execution context, including parent process name, current process path, and the directory of the loaded DLL (categorized as System, Program Files, User, Temp, etc.). The model will learn the profile of normal rundll32 executions and flag any outliers."
          },
          {
            "description": "A single endpoint exhibits a statistically significant increase in the rate of rundll32.exe process creations compared to its historical baseline, or a rundll32.exe process initiates network connections to destinations that are anomalous in terms of geography, port, or data volume.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Network Egress Points, DNS Servers",
            "action": "1. (Symbolic) Create a correlation rule that triggers if a single host generates more than 5 distinct suspicious rundll32.exe alerts (from other rules like pattern matching or rare paths) within a 10-minute window, escalating the event to a high-severity incident. 2. (Statistical) For each endpoint, calculate a moving average and standard deviation of rundll32.exe executions (Windows Event ID 4688) over a rolling 24-hour window. Generate an alert if the execution count in a 5-minute interval exceeds 3 standard deviations above the moving average. 3. (Machine Learning) Implement a time series forecasting model (e.g., ARIMA) for each host to predict the expected volume of rundll32.exe executions. Generate an alert when the observed count significantly deviates from the model's predicted confidence interval. For network behavior, use a clustering algorithm (e.g., DBSCAN) on connection features (destination IP, port, bytes sent) from Zeek conn.log to flag any rundll32.exe network connection that is classified as a statistical outlier."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]