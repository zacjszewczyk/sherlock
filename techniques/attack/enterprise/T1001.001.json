[
  {
    "information_requirement": "Is the adversary using junk data to obfuscate command and control communications? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1001.001",
        "name": "Junk Data",
        "evidence": [
          {
            "description": "A network connection is established with a remote IP address or domain present on a threat intelligence feed of known C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Egress Firewalls, Internal DNS Resolvers, Web Proxies",
            "action": [
              "Symbolic: Join network connection logs (Zeek conn.log) and DNS query logs (Zeek dns.log) against a threat intelligence feed of known C2 indicators (IPs, domains). Generate an alert for any observed match.",
              "Statistical: For all connections matching threat intelligence, calculate the ratio of bytes sent to bytes received (`orig_bytes` / `resp_bytes`). Flag connections where this ratio exceeds the 95th percentile for the given destination port's historical data, suggesting an anomalous data transfer pattern consistent with data padding.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from Zeek logs (protocol, duration, byte counts, port) and a binary label indicating if the connection matched a known C2 indicator. Use the trained model to score new, non-matching connections for their likelihood of being malicious C2, prioritizing high-scoring connections for investigation."
            ]
          },
          {
            "description": "A network payload's content matches a regular expression or byte sequence signature known to be used for data padding by specific malware families, such as repeating null bytes or prepended magic strings.",
            "data_sources": [
              "Zeek signatures.log",
              "Suricata EVE JSON (alert)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring (NSM) Sensor Grid, DMZ Packet Capture Points, SSL/TLS Decryption Zones",
            "action": [
              "Symbolic: Using an IDS like Zeek or Suricata, deploy and monitor signatures that use regular expressions or byte patterns to match known junk data padding within network payloads. Generate a high-severity alert upon a signature match.",
              "Statistical: For traffic matching an IDS signature for junk data, calculate the length of the payload. Flag any payloads whose length falls into the top 5th percentile for that specific signature, as attackers may vary padding length to evade simple fixed-length checks.",
              "Machine Learning: Use a time series forecasting model (e.g., ARIMA) on the daily volume of IDS alerts for T1001.001 signatures. An unexpected spike in alerts that deviates significantly from the forecast can indicate a new campaign or outbreak, prompting a broader hunt."
            ]
          },
          {
            "description": "A network connection exhibits a client-to-server data transfer ratio (`orig_bytes` / `resp_bytes`) that is a statistical outlier when compared to a historical baseline for the same protocol and destination port.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Application Server Subnets, Database Server Subnets, Egress Firewalls",
            "action": [
              "Symbolic: Create a rule that flags any TCP/UDP connection where the client-sent bytes (`orig_bytes`) are greater than the server-sent bytes (`resp_bytes`) by a factor of 10 or more, and the destination is not on an allowlist of known file upload or backup services.",
              "Statistical: For each destination port, establish a baseline of the mean and standard deviation for the ratio of `orig_bytes` to `resp_bytes` from Zeek conn.log. Alert on any new connection where this ratio exceeds 3 standard deviations from the mean for that specific port.",
              "Machine Learning: Apply a clustering algorithm (e.g., DBSCAN) to Zeek conn.log data, using features such as `orig_bytes`, `resp_bytes`, `duration`, and `proto`. Investigate clusters that are small in size (rare) and have a high average client-to-server data ratio, as these may represent novel C2 channels using data padding."
            ]
          },
          {
            "description": "The payload of an unencrypted or decrypted network flow, such as a DNS TXT response or HTTP POST body, has a Shannon entropy value that is anomalously high and not associated with legitimate compressed or encrypted data.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Web Proxies, Network Taps with SSL/TLS decryption",
            "action": [
              "Symbolic: For DNS TXT record responses in Zeek dns.log, calculate the Shannon entropy of the answer field. Generate an alert if the entropy is greater than 4.0 and the query is not for a known, legitimate service like SPF or DKIM.",
              "Statistical: For a given protocol (e.g., HTTP POSTs), calculate the distribution of payload entropy scores over a 30-day baseline. Alert on any new request whose payload entropy exceeds the 99th percentile of this baseline, indicating an unusually random payload.",
              "Machine Learning: Train an autoencoder on vectors representing payload characteristics (e.g., entropy, length, byte frequency) from legitimate traffic. For new connections, calculate the reconstruction error. A high error indicates the payload is structurally different from what the model considers normal, flagging it as a potential C2 channel using junk data."
            ]
          },
          {
            "description": "A process not on an established allowlist of network-communicating applications initiates an outbound network connection from a user workstation or server.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Critical Application Servers",
            "action": [
              "Symbolic: Join process creation logs (Windows Event ID 4688) with network connection logs (Windows Event ID 5156). Alert when a process path is not on a pre-defined allowlist of approved network-enabled applications and it initiates an external network connection.",
              "Statistical: For each process name, calculate the frequency of its parent process from Windows Event ID 4688 logs. Identify rare parent-child process relationships that result in network activity (Windows Event ID 5156). A relationship in the bottom 5th percentile of frequency is highly suspicious.",
              "Machine Learning: Use a One-Class SVM model trained on features from legitimate process network activity (e.g., process path, command line, destination port, protocol). Use this model to classify new process network events as either 'inlier' (normal) or 'outlier' (anomalous), with outliers representing potentially malicious activity to be investigated."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]