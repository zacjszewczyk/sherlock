[
  {
    "information_requirement": "Has the adversary gained execution on an enterprise host via user-initiated copy and paste? (TA0002 - Execution)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1204.004",
        "name": "Malicious Copy and Paste",
        "evidence": [
          {
            "description": "A process creation event (e.g., powershell.exe, cmd.exe, wscript.exe) where the command line argument contains an indicator of compromise (IOC) such as a known malicious domain, IP address, or file hash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer endpoints, Administrative jump boxes",
            "action": [
              "Symbolic: Scan command lines from Windows Event ID 4688 for process creations (e.g., powershell.exe, cmd.exe, wscript.exe, cscript.exe) against a threat intelligence feed of known malicious domains, IPs, and file hashes. Generate a high-severity alert upon a match.",
              "Statistical: Analyze DNS requests (Zeek dns.log) originating from hosts immediately following a command-line execution. Calculate the rarity of the requested domain across the enterprise over the last 30 days. Flag executions that result in DNS requests for domains in the bottom 5th percentile of popularity.",
              "Machine Learning: Develop a classification model trained on labeled command-line strings (benign vs. malicious). Use features like n-grams, character distribution, and presence of IOC patterns. Apply the model to new command-line executions to predict the probability of maliciousness and alert on high-probability events."
            ]
          },
          {
            "description": "A command-line interpreter executes a command string matching a known malicious pattern, such as a PowerShell download cradle (e.g., IEX(New-Object Net.WebClient).DownloadString), a certutil file download, or other Living Off the Land Binaries (LOLBAS) abuse patterns.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly those with PowerShell v5+ script block logging enabled",
            "action": [
              "Symbolic: Using regular expressions, search process command lines (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104) for signatures of malicious activity, such as `IEX(New-Object Net.WebClient).DownloadString`, `certutil -urlcache`, `mshta.exe javascript:`, and other LOLBAS execution patterns. Alert on any match.",
              "Statistical: Calculate the entropy of command-line strings for common interpreters (powershell.exe, cmd.exe). Establish a baseline entropy score for each process. Flag commands where the entropy exceeds 3 standard deviations above the mean for that specific process, as obfuscated payloads often have higher entropy.",
              "Machine Learning: Use a time-series analysis model (e.g., ARIMA) to monitor the frequency of specific LOLBAS execution patterns across the enterprise. An anomalous spike in the usage of a pattern (e.g., `certutil -urlcache`) could indicate a coordinated campaign. Correlate spikes with external threat intelligence reporting."
            ]
          },
          {
            "description": "A command-line interpreter process is created with a command line exceeding a baseline length or entropy threshold within a short time window (e.g., < 60 seconds) following user activity in a web browser, email client, or document viewer process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Symbolic: Create a rule that triggers when a process (e.g., powershell.exe, cmd.exe) is created with a command line longer than 1024 characters and its parent process is a browser (chrome.exe, msedge.exe), email client (outlook.exe), or document reader (acrord32.exe).",
              "Statistical: For each user, establish a baseline of normal command-line length and character frequency for interpreters. Use a percentile-based approach to flag any command-line execution where the length is in the 98th percentile or higher for that user. Correlate with the parent process to provide context.",
              "Machine Learning: Implement an anomaly detection model (e.g., Isolation Forest) on process event chains. Create features representing the parent-child process relationship (e.g., browser -> cmd.exe), the child process command-line length, and the time delta between creation. Train the model on benign activity and use it to score new event chains for anomalous behavior."
            ]
          },
          {
            "description": "A process creation event for a command-line interpreter (e.g., powershell.exe, curl.exe) is followed within seconds by an outbound network connection from the same host to a destination IP address or domain that is statistically rare for the enterprise or the specific host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, All Windows endpoints and servers",
            "action": [
              "Symbolic: Correlate process creation events (Windows Event ID 4688) with network connection logs (Zeek conn.log) within a 5-second window. Alert if a process like `powershell.exe` or `certutil.exe` makes an outbound connection to an IP address on a known C2 blocklist.",
              "Statistical: For each host, build a profile of normally contacted destination domains. For new interpreter-initiated connections, calculate the historical frequency of the destination domain from Zeek dns.log. Score the connection based on rarity (e.g., domain seen for the first time or in the bottom 1% of requests) and alert on high-rarity scores.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on network connection metadata (destination IP, port, protocol, JA3 hash, bytes transferred) associated with interpreter processes. Identify clusters of normal activity. Flag any new connection that does not belong to an existing cluster as a potential outlier requiring investigation."
            ]
          },
          {
            "description": "The `explorer.exe` process creates a child process with a command line that exhibits high complexity (e.g., length, special character count, entropy) beyond a baseline for typical Run dialog usage.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Terminal servers, Remote Desktop servers",
            "action": [
              "Symbolic: Create a rule to detect when `explorer.exe` is the parent process and the child process command line contains suspicious substrings such as `http://`, `powershell -e`, or `IEX`. These are highly unlikely to be typed manually in the Run dialog.",
              "Statistical: Establish a baseline for the length and character set of command lines for processes spawned by `explorer.exe`. Use Inter-Quartile Range (IQR) outlier detection on command-line length. Flag any process creation where the command-line length is greater than Q3 + 1.5 * IQR as a potential anomaly.",
              "Machine Learning: Train a One-Class SVM model on features extracted from benign `explorer.exe` child process commands (e.g., command length, token count, character entropy). Use the trained model to identify any new command that deviates significantly from the learned 'normal' profile, indicating a likely pasted malicious command."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]