[
  {
    "information_requirement": "Is the adversary maintaining persistence using Windows logon scripts? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1037.001",
        "name": "Logon Script (Windows)",
        "evidence": [
          {
            "description": "A file with a script extension (.bat, .vbs, .ps1, .js) is created or modified in a logon script path, and its content hash matches a known malicious signature.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories on endpoints and servers, SYSVOL shares on Domain Controllers.",
            "action": [
              "Symbolic (IOC): Continuously monitor for file creation/modification events (Windows Event ID 4663) in common script locations (e.g., C:\\Users\\*\\*, \\\\<DOMAIN>\\SYSVOL\\). Hash the file content and query against a threat intelligence feed of known malicious script hashes. Alert on any match.",
              "Statistical: Establish a baseline of script file names and paths used in logon scripts across the enterprise. Calculate the rarity of file names and paths using historical data. Alert when a new logon script uses a file name or is placed in a directory that falls below the 5th percentile of frequency, indicating a potentially non-standard or suspicious script location.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features extracted from script files (e.g., file size, entropy, presence of specific keywords like 'Invoke-Expression', 'DownloadString'). Use this model to score newly created or modified script files for their likelihood of being malicious. Alert on scripts with a high maliciousness score."
            ]
          },
          {
            "description": "The 'UserInitMprLogonScript' registry value is created or modified by a non-administrative user or a process not associated with standard software deployment.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User endpoint and server registry hives (HKCU\\Environment).",
            "action": [
              "Symbolic (IOC): Create a watchlist of approved administrator accounts and software deployment processes authorized to modify logon scripts. Monitor for modifications to the 'HKCU\\Environment\\UserInitMprLogonScript' registry key (Windows Event ID 4657) and alert if the 'SubjectUserName' or 'ProcessName' is not on the approved watchlist.",
              "Statistical: For each host, baseline the frequency of modifications to the 'UserInitMprLogonScript' key. Use a time-series analysis to detect spikes in modification activity. Alert if the number of modifications in a 24-hour window exceeds 3 standard deviations above the historical mean for that host or user group.",
              "Machine Learning: Use an anomaly detection algorithm (e.g., Isolation Forest) on event features from Windows Event ID 4657, including the 'SubjectUserName', 'ProcessName', and time of day. The model should learn normal modification patterns and flag any event that is a significant outlier, such as a modification made by an unusual process (e.g., winword.exe) or at an anomalous time (e.g., 2 AM)."
            ]
          },
          {
            "description": "A process spawned by a logon script interpreter establishes a network connection to a destination with a low reputation score or a statistically rare domain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User endpoints and servers, Network egress points, DNS servers.",
            "action": [
              "Symbolic (IOC): For processes created (Windows Event ID 4688) where the parent process is a script host associated with logon, join with network connection logs (Zeek conn.log) on IP and timestamp. Correlate the destination IP/domain against a threat intelligence feed of known C2 servers. Alert on any match.",
              "Statistical: For each user, baseline the set of domains contacted by their logon scripts using Zeek dns.log. Calculate the enterprise-wide rarity (e.g., inverse document frequency) of each domain. Alert when a logon script initiates a connection to a domain that is in the bottom 5% of prevalence across the organization.",
              "Machine Learning: Develop a time-series model to baseline the volume of outbound data (e.g., 'orig_bytes' in Zeek conn.log) for each process spawned by a logon script. Alert when the outbound data volume for a single session significantly deviates from the predicted baseline, which could indicate unexpected C2 communication or data staging."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting privilege escalation using Windows logon scripts? (PIR)",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1037.001",
        "name": "Logon Script (Windows)",
        "evidence": [
          {
            "description": "A logon script configuration is modified to execute a script file whose hash is associated with known privilege escalation tools (e.g., PowerSploit, Mimikatz variants).",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controller SYSVOL Shares, User Endpoint Registry Hives (HKCU\\Environment).",
            "action": [
              "Symbolic (IOC): Monitor for modifications to logon script configurations (Registry via Event ID 4657, GPO files via Event ID 4663). Upon detection, hash the referenced script file and compare against a curated threat intelligence database of hashes specific to privilege escalation tools and scripts. Alert on any match.",
              "Statistical: Analyze the command-line arguments of processes launched by logon scripts (Event ID 4688). Calculate the n-gram frequency of common commands and parameters. Alert when a command appears with arguments that are statistically anomalous or have a high Jaccard distance from known benign command patterns, suggesting alteration for malicious execution.",
              "Machine Learning: Train a supervised learning classifier on labeled script content (benign vs. malicious privilege escalation scripts). Use features like API call invocations, string obfuscation patterns, and presence of specific keywords (e.g., 'LsaGetLogonSessionData', 'SeDebugPrivilege'). Apply the model to any new or modified logon script to predict its likelihood of being a privilege escalation tool."
            ]
          },
          {
            "description": "A logon script configuration (HKCU registry hive or GPO) is modified, where the actor's account ('SubjectUserName') has higher privileges than the target user account for whom the script will run.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663",
              "Active Directory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoint Registry Hives (HKCU\\Environment), Active Directory user/group objects, Domain Controller SYSVOL Shares.",
            "action": [
              "Symbolic (IOC): For every modification to 'HKCU\\Environment\\UserInitMprLogonScript' (Event ID 4657), extract the 'SubjectUserName' and the SID of the user profile from the registry path. Query Active Directory to compare the group memberships of the actor and the target. Alert if the actor is a member of a privileged group (e.g., 'Domain Admins') and the target is not.",
              "Statistical: Build a graph of which administrators typically modify which users' or OUs' logon scripts. Use community detection to find normal administrative boundaries. Alert when a modification occurs that crosses these established boundaries, such as an IT admin for the Sales OU modifying a script for a user in the Engineering OU.",
              "Machine Learning: Use an anomaly detection model (e.g., One-Class SVM) trained on legitimate cross-user logon script modifications. Features should include source user privilege level, target user privilege level, target OU, time of day, and source workstation. The model will learn the profile of 'normal' administrative actions and flag modifications that deviate significantly."
            ]
          },
          {
            "description": "A logon script executes from a path where the Access Control List (ACL) grants write permissions to low-privilege principals like 'Authenticated Users' or 'Everyone'.",
            "data_sources": [
              "Windows Event ID 4688",
              "File/Folder ACLs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of Endpoints and Servers, specifically in user profile and shared script directories.",
            "action": [
              "Symbolic (IOC): Periodically, and upon detection of a new logon script path via Event ID 4657 or 4688, query the ACL of the script file and its parent directory. Create a rule to alert if the ACL contains a Write/Modify permission entry for a non-administrative group (e.g., 'Everyone', 'Authenticated Users', 'Users').",
              "Statistical: For all logon scripts identified in the environment, calculate a 'permissions risk score' based on the ACLs. The score increases for each low-privilege principal with write access. Establish a baseline risk score for different categories of scripts (e.g., departmental, global). Alert when a script's risk score exceeds the 99th percentile for its category.",
              "Machine Learning: Train a classification model to predict if a file path is vulnerable to tampering based on its ACLs and path characteristics. Features would include the count of ACEs, presence of specific SIDs (e.g., 'S-1-1-0' for Everyone), directory depth, and whether the path is user-writable. Run this model against all logon script paths to proactively identify and flag misconfigurations."
            ]
          },
          {
            "description": "A child process of a logon script interpreter creates a new system service, modifies a scheduled task for the SYSTEM account, or attempts to access LSASS process memory.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 7045",
              "Windows Event ID 4698",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User endpoints and servers, Domain Controllers.",
            "action": [
              "Symbolic (IOC): Create a correlation rule that triggers when a process spawned by a logon script (parent process is cscript.exe, etc. via Event ID 4688) is immediately followed by a high-risk event from the same process ID, such as new service creation (Event ID 7045), a scheduled task creation/modification (Event ID 4698/4702), or a handle request to lsass.exe (Event ID 4656 with ObjectType 'Process' and ObjectName ending in 'lsass.exe').",
              "Statistical: For each logon script, profile the sequence of system calls or high-level events (process create, file write, etc.) made by its child processes. Represent these sequences as strings and identify the most common sequences. Alert when a new execution exhibits a sequence that has a low probability of occurrence based on historical data.",
              "Machine Learning: Use a sequence-based anomaly detection model, such as a Long Short-Term Memory (LSTM) autoencoder, trained on event sequences following logon script execution. The model learns to reconstruct normal event sequences (e.g., process creation -> registry read -> network connection). An alert is generated when the reconstruction error for a new sequence is high, indicating an anomalous chain of events that could represent a privilege escalation attempt."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]