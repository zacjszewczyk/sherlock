[
  {
    "information_requirement": "Is the adversary attempting to bypass multi-factor authentication by generating excessive requests to fatigue the user? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1621",
        "name": "Multi-Factor Authentication Request Generation",
        "evidence": [
          {
            "description": "An MFA-approved login attempt (Windows Event ID 4624) or a failed login attempt (Windows Event ID 4625) originates from an IP address associated with known malicious infrastructure, botnets, TOR exit nodes, or anonymous proxies.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., ADFS, RADIUS), VPN concentrators, Cloud identity provider platforms (e.g., Azure AD, Okta), Internet gateway/firewall",
            "action": [
              "Symbolic: Correlate source IP addresses from failed login logs (Windows Event ID 4625) and MFA request logs against a CTI feed of known malicious IPs, botnets, TOR exit nodes, and anonymous proxies. An alert is generated on any match.",
              "Statistical: Calculate the rarity of the source Autonomous System Number (ASN) and country for each MFA request per user. Flag requests where the ASN or country is in the bottom 5% of historical frequency for that user, especially if it's a failed login attempt.",
              "Machine Learning: Train a logistic regression model on historical login data, using features like IP reputation score (from CTI), ASN rarity, country of origin, time of day, and day of week. Use the model to classify each new MFA request as 'benign' or 'suspicious', flagging those with a high probability of being suspicious."
            ]
          },
          {
            "description": "MFA requests are initiated by clients with User-Agent strings that match known non-standard libraries (e.g., 'python-requests', 'curl') or exhibit low Shannon entropy, indicating programmatic generation rather than legitimate browser or application activity.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxies, Application servers hosting MFA endpoints, Cloud identity provider platforms",
            "action": [
              "Symbolic: Maintain a watchlist of User-Agent strings associated with non-standard clients (e.g., 'python-requests', 'curl', 'Go-http-client') or known adversary tools. Scan Zeek http.log and MFA service logs for requests matching this list.",
              "Statistical: For each User-Agent string observed in MFA requests, calculate its Shannon entropy score. Establish a baseline for normal entropy from legitimate clients (e.g., browsers, mobile apps). Flag requests with User-Agent strings that have an entropy score falling more than 2 standard deviations below the mean, suggesting a lack of complexity typical of automated tools.",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) trained on the User-Agent strings of all legitimate, approved enterprise applications. The model will identify any new User-Agent string that deviates significantly from this learned 'normal' profile, flagging it as an anomaly for investigation."
            ]
          },
          {
            "description": "A statistically significant spike in the volume of MFA requests or failed login attempts (Windows Event ID 4625) for a single user account occurs within a short duration, such as more than 10 requests in a 5-minute window.",
            "data_sources": [
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers, Domain controllers, Cloud identity provider platforms",
            "action": [
              "Symbolic: Implement a simple threshold rule that triggers an alert if a single user account is associated with more than 10 failed login events (Windows Event ID 4625) from the same source IP in a 5-minute window.",
              "Statistical: For each user, establish a dynamic baseline of MFA request frequency using a moving average over a 30-day period. Generate an alert when the number of requests in a short time window (e.g., 5 minutes) exceeds 3 standard deviations above this moving average.",
              "Machine Learning: Apply a time-series anomaly detection algorithm (e.g., Seasonal-Hybrid ESD) to the stream of MFA request events per user. The model will learn the normal rhythm (hourly, daily, weekly seasonality) of requests for each user and flag any bursts of activity that are statistically inconsistent with this learned pattern."
            ]
          },
          {
            "description": "Following a series of at least 5 failed login attempts (Windows Event ID 4625), a successful login (Windows Event ID 4624) is authenticated via an MFA approval that occurs in a time duration falling in the bottom 5th percentile of the user's historical MFA response times.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers, Domain controllers, Cloud identity provider platforms, SIEM/Log aggregator",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a sequence of 5 or more failed login events (Event ID 4625) for a user is immediately followed by a successful login (Event ID 4624) for the same user from the same source IP within a 1-minute window.",
              "Statistical: For each user, calculate a baseline of their mean and standard deviation for MFA approval times. Following a cluster of failed logins, flag any successful MFA approval where the response time is more than 2 standard deviations faster than the user's average, or falls below a hard floor (e.g., 1 second).",
              "Machine Learning: Develop a decision tree classifier to predict 'fatigue approval'. Features include the count of preceding failed logins, the time since the last successful login, and the MFA response time. Train the model on historical data and deploy it to score new fast-approval events."
            ]
          },
          {
            "description": "A successful MFA-approved login (Windows Event ID 4624) occurs from a source IP address whose geodetic coordinates are separated from the previous successful login's coordinates by a distance that is physically impossible to travel in the elapsed time.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Internet gateway/firewall, Cloud identity provider platforms, SIEM/Log aggregator with geolocation enrichment",
            "action": [
              "Symbolic: Correlate the source IP of every successful login (Windows Event ID 4624) against a CTI feed of non-business-related proxy or VPN services. Any match is a high-confidence alert.",
              "Statistical: For each successful login, geolocate the source IP from the Zeek conn.log. Calculate the distance and required velocity from the user's previous login location and time. Flag any login where the calculated velocity exceeds a plausible speed (e.g., 1000 km/h).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on the geolocations of a user's historical logins to identify their normal 'clusters' of activity (e.g., office, home, common travel cities). A new login that does not fall into any existing cluster is flagged as a geographic outlier for review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]