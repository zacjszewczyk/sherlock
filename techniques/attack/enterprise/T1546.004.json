[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying Unix shell configurations?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546.004",
        "name": "Unix Shell Configuration Modification",
        "evidence": [
          {
            "description": "A user-specific Unix shell configuration file (e.g., ~/.bashrc, ~/.zprofile, ~/.bash_profile) is modified by a process not associated with an interactive text editor or a known software installation/update process.",
            "data_sources": [
              "Linux audit.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer virtual machines, Critical Unix/Linux servers, Centralized log aggregator",
            "action": [
              "Symbolic: Monitor for write events (e.g., from Linux audit.log syscalls or Windows Event ID 4663 for file shares) to shell configuration files. Alert if the process name responsible for the write is not on an allow-list of known safe editors (e.g., 'vi', 'nano', 'emacs', 'code') or package managers.",
              "Statistical: For each user, establish a baseline of the size and modification frequency of their shell configuration files. Alert if a file's size changes by a value outside 3 standard deviations of its historical changes, or if the file is modified more frequently than its 95th percentile modification rate, suggesting automated or scripted changes.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features of file modification events, including parent process, user context, command line arguments, time of day, and file content changes (e.g., addition of IP addresses, base64 strings). Classify modifications as 'benign user activity' or 'suspicious persistence' and alert on the latter."
            ]
          },
          {
            "description": "A temporal correlation (within 60 seconds) exists between a user login event on a Unix host and a subsequent outbound network connection from that host to an IP address, domain, or URL present on a threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Linux audit.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors, Core DNS resolvers, Authentication servers, Critical Unix/Linux servers, Centralized log aggregator",
            "action": [
              "Symbolic: Correlate user login events (e.g., `type=USER_LOGIN` from Linux audit.log or Windows Event ID 4624 for SSH) with network connection logs (Zeek conn.log, dns.log) from the same host IP within a 60-second window. Join the destination IP or domain against a threat intelligence feed of known malicious indicators and alert on any match.",
              "Statistical: For each user, establish a baseline of destination Autonomous System Numbers (ASNs) and countries associated with post-login network traffic. Following a new login, calculate the frequency of the observed destination ASN/country pair within the user's historical data. Flag connections to destinations that fall into the bottom 5th percentile of frequency as rare and potentially suspicious.",
              "Machine Learning: Train a time-series model (e.g., ARIMA) on the volume of outbound network connections per user in the five minutes immediately following login. Generate an alert if a new login event is followed by a connection volume that significantly exceeds the model's 99% prediction interval, indicating an anomalous burst of activity."
            ]
          },
          {
            "description": "A user login on a Unix host is consistently followed by network traffic exhibiting signatures of known C2 frameworks or reverse shells, such as specific URI patterns, User-Agent strings, or JA3/JA3S hashes.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek conn.log",
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors, Web proxies, SSL/TLS inspection points, Critical Unix/Linux servers, Centralized log aggregator",
            "action": [
              "Symbolic: Scan Zeek http.log records for URI patterns or User-Agent strings associated with known malicious tools (e.g., `wget ... /payload.sh`, `curl ... | bash`). Simultaneously, match the `ja3` and `ja3s` fields from Zeek ssl.log against a list of hashes known to be used by C2 frameworks. Correlate any matches with a preceding user login event on the source host within a 5-minute window.",
              "Statistical: For each user, calculate the baseline Shannon entropy of URI paths and queries in their typical post-login HTTP traffic. After a new login, compute the entropy for any observed URIs. Flag any URI with an entropy score greater than 3 standard deviations above the user's established mean, as this can indicate the use of domain generation algorithms (DGAs) for C2.",
              "Machine Learning: Utilize a pre-trained classifier (e.g., Random Forest) to analyze features from post-login network sessions, including connection duration, data volume, periodicity (from Zeek conn.log), User-Agent string length (from http.log), and JA3 hash (from ssl.log). Classify sessions as 'benign' or 'C2 activity' and alert on the latter."
            ]
          },
          {
            "description": "A user login on a Unix host is followed by an outbound network connection to a destination (IP, domain, or port) that is statistically rare for that specific user and their organizational peer group.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors, Core DNS resolvers, User endpoint subnets, Centralized log aggregator",
            "action": [
              "Symbolic: Maintain a state table of all (user, destination_domain) pairs observed over the last 90 days. After a user login, if a DNS query is made for a domain that does not appear in the state table for that user, flag it as a 'first-seen' event and generate a low-priority alert for analysis.",
              "Statistical: For each DNS query (Zeek dns.log) following a user login, analyze the queried domain name to calculate a DGA score based on character frequency and n-gram analysis against a dictionary of common English words. Flag any domain with a score that exceeds the 95th percentile of scores observed across the enterprise, indicating a high likelihood of being algorithmically generated.",
              "Machine Learning: Apply a clustering algorithm (e.g., DBSCAN) to the features of post-login connections for each user, such as (destination_port, protocol, destination_ASN). New connections that the model identifies as noise points or part of a very small, sparse cluster are considered anomalous and should be investigated as potential C2 channels."
            ]
          },
          {
            "description": "A user login on a Unix host is temporally correlated (within 5 minutes) with connection attempts from that host to internal Windows services (e.g., SMB, WinRM) that are anomalous for that user or host.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek smb_mapping.log",
              "Zeek dce_rpc.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "East-West network traffic sensors, Windows Domain Controllers, Windows member servers, Critical Unix/Linux servers",
            "action": [
              "Symbolic: After a Unix user login, create a rule to monitor for connections from the user's IP to internal Windows hosts on TCP ports 445 (SMB) or 5985/5986 (WinRM). If such a connection is detected, correlate it with Windows Event ID 4625 (Logon Failure) on the destination server to identify potential lateral movement attempts like password spraying.",
              "Statistical: Build a baseline of normal (source_unix_host, destination_windows_server, destination_port) connection triplets seen in the environment. Following a Unix login, if a connection from that host creates a triplet that has a frequency in the bottom 5th percentile of all observed triplets, flag it as a rare and suspicious internal connection.",
              "Machine Learning: Model the sequence of internal network connections made by each user after login as a Markov chain. Each service connection is a state transition. If a user's post-login activity results in a transition to a state (e.g., connecting to a domain controller's SMB share) that has a very low probability in their established model, flag the behavior as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges by modifying Unix shell configurations?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546.004",
        "name": "Unix Shell Configuration Modification",
        "evidence": [
          {
            "description": "A system-wide Unix shell configuration file (e.g., /etc/profile, /etc/bashrc, /etc/zprofile) is modified by a non-root user or a process not associated with an authorized system package manager.",
            "data_sources": [
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Unix/Linux servers, Production web servers, Centralized log aggregator, File Integrity Monitoring systems",
            "action": [
              "Symbolic: Create a high-priority alert for any write event to files in `/etc/profile`, `/etc/profile.d/`, `/etc/bashrc`, or `/etc/zsh*` where the executing user's UID is not 0 and the process name is not on an allow-list of package managers (e.g., 'yum', 'apt', 'dpkg').",
              "Statistical: Baseline the SHA256 hash of all system-wide shell configuration files against a known-good golden image. Monitor for any hash changes that occur outside of a scheduled maintenance window. For any change, calculate the Levenshtein distance between the old and new file content; flag changes with a small distance (< 150 characters) as suspicious insertions rather than full package updates.",
              "Machine Learning: Use an anomaly detection model on the sequence of system calls preceding a write to a system-wide shell configuration file. A normal sequence involves a package manager process reading its configuration and writing the file. An abnormal sequence, such as a process spawned from an interactive shell using `sudo` to append to `/etc/profile`, would be flagged as a potential privilege escalation attempt."
            ]
          },
          {
            "description": "A temporal correlation (within 60 seconds) exists between a system boot or privileged user login (e.g., root, sudo) on a critical Unix server and a subsequent outbound network connection to an IP address or domain on a threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical server subnet network sensors, Internet gateway, Core DNS resolvers, Centralized log aggregator for system boot/auth logs",
            "action": [
              "Symbolic: Correlate system boot logs or privileged user logins (e.g., where `auid != uid` and `uid=0` in audit.log, indicating a `sudo` action) on critical servers with outbound network connections from the server's IP within a 60-second window. Join the destination IP/domain from Zeek logs against a CTI feed and alert on any match.",
              "Statistical: For each critical server, baseline the sequence of destination IPs and ports contacted during the first five minutes of a normal boot process. Following a new boot, calculate the Jaccard similarity index between the observed connection sequence and the established baseline. A similarity score below a set threshold (e.g., 0.8) indicates a deviation warranting investigation.",
              "Machine Learning: Train a one-class SVM model on feature vectors representing normal network activity during server boot (e.g., number of connections, total bytes out, distinct ports contacted). Any boot sequence that the model classifies as an outlier should be flagged for immediate review."
            ]
          },
          {
            "description": "A privileged user login on a Unix server is immediately followed by network traffic patterns from that server indicative of internal reconnaissance, such as broad LDAP queries, Kerberoasting attempts, or SMB share enumeration.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ldap.log",
              "Zeek smb_mapping.log",
              "Zeek kerberos.log",
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "East-West network traffic sensors, Domain Controllers, Critical Unix servers, Centralized log aggregator",
            "action": [
              "Symbolic: After a privileged login on a Unix server (`uid=0`), monitor Zeek kerberos.log for a spike in TGS-REQ requests with RC4 encryption (etype 23) from the server's IP. Correlate with Windows Event ID 4769 on the Domain Controller. Alert if more than 20 requests for distinct Service Principal Names (SPNs) are seen from a single source IP in under 5 minutes.",
              "Statistical: Monitor Zeek ldap.log for search queries from a Unix server after a privileged login. Profile the complexity of normal queries from server roles. If a query's filter is longer than the 95th percentile of all queries from that host, requests all attributes (`*`), or uses a base DN at the root of the directory, flag it as potential reconnaissance.",
              "Machine Learning: Use a peer group analysis model to cluster servers by role (e.g., web, database). If, after a privileged login, a database server begins enumerating SMB shares (Zeek smb_mapping.log) across the network, a behavior not seen in its peer group, classify this as a high-risk anomaly."
            ]
          },
          {
            "description": "A system boot or privileged user login on a critical Unix server is followed by an outbound network connection to a destination that is statistically anomalous based on its ASN, port, or geographic location.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical server subnet network sensors, Internet gateway, Egress filtering points, Centralized log aggregator",
            "action": [
              "Symbolic: Define a strict, machine-readable allow-list of approved destination ASNs, countries, and ports for each critical server based on its function. Following a system boot or privileged login, alert on any outbound network connection from the server that does not match an entry in its specific allow-list.",
              "Statistical: For each critical server, establish a baseline distribution of destination ports for outbound connections. After a privileged login, if a connection is made to a port that falls outside 1.5 times the Inter-Quartile Range (IQR) of the baseline distribution, flag it as a statistical outlier requiring investigation.",
              "Machine Learning: Use a time-series forecasting model (e.g., Prophet) to predict the expected volume of outbound data for each critical server based on time of day and day of week. If, following a privileged login, the actual outbound data volume significantly exceeds the model's forecast, generate an alert for anomalous data transfer."
            ]
          },
          {
            "description": "A privileged user login on a Unix server is immediately followed by a successful, high-privilege authentication from that server's IP to a critical Windows resource, such as a Domain Controller's administrative share (ADMIN$, C$, IPC$).",
            "data_sources": [
              "Zeek smb_mapping.log",
              "Windows Event ID 4624",
              "Zeek dce_rpc.log",
              "Linux audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, High-value Windows servers, East-West network traffic sensors monitoring server-to-server communication",
            "action": [
              "Symbolic: Create a high-priority alert that triggers when all of the following conditions are met within a 5-minute window: 1) A privileged login event (`uid=0`) occurs on a Unix server (from Linux audit.log). 2) A successful logon (Windows Event ID 4624) is logged on a Domain Controller. 3) The logon originates from the Unix server's IP and connects to a privileged share name (ADMIN$, C$, IPC$) as seen in Zeek smb_mapping.log.",
              "Statistical: Create a graph database where nodes are hosts and edges represent administrative access. After a privileged login on a Unix server, if an SMB connection is observed (Zeek smb_mapping.log) that creates a new, previously unseen edge in the graph from that Unix host to a Windows administrative share, flag the connection as anomalous.",
              "Machine Learning: Develop a risk scoring model where events contribute to a cumulative score. A privileged login on a Unix server adds a base score. If that server then authenticates to a DC's ADMIN$ share, the score increases significantly. If the source Unix host is not an approved management station, the score crosses a threshold and triggers an alert, allowing for context-aware detection."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]