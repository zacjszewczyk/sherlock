[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by spoofing security alerts? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1562.011",
        "name": "Spoof Security Alerting",
        "evidence": [
          {
            "description": "A process is executed whose file hash or associated destination IP address matches threat intelligence for tools known to perform security alert spoofing.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Process Monitoring Systems, Network Egress Points, Threat Intelligence Platforms",
            "action": [
              "Symbolic Logic: Continuously monitor process creation events (Windows Event ID 4688) and network connection logs (Zeek conn.log). Join process hashes and destination IPs/domains against a threat intelligence feed of known indicators for malware that uses T1562.011. Alert on any match.",
              "Statistical Method: Analyze the prevalence of process hashes that are not on an enterprise allowlist. Calculate the rarity of each 'grayware' hash across all endpoints. A process hash seen on a very small percentage of endpoints (<0.1%) that also initiates external network connections should be scored with high risk.",
              "Machine Learning: Employ a supervised classification model (e.g., Random Forest) trained on labeled process execution data. Features should include process metadata (parent process, command-line entropy, file path) and associated network connection features from Zeek (port, destination IP reputation, bytes sent). The model will output a probability score indicating if a new process is malicious and potentially evasive."
            ]
          },
          {
            "description": "A process is executed with command-line arguments or a process name containing specific strings or patterns known to be used by security alert spoofing tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Process Monitoring Systems, SIEM Log Aggregators",
            "action": [
              "Symbolic Logic: Scan command-line arguments from process creation events (Windows Event ID 4688) using a library of regular expressions. These expressions should match patterns used by tools known to generate fake security messages, such as those invoking 'msg.exe' with specific keywords or manipulating GUI elements via scripts.",
              "Statistical Method: For every process, calculate the entropy and length of its command-line arguments. Establish a baseline for common system processes. Alert on processes where the command-line entropy or length deviates significantly (e.g., >3 standard deviations) from its historical baseline, which can indicate obfuscation or unusual parameters.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on tokenized command-line arguments from all processes across the enterprise. This can identify novel or rare clusters of command-line usage that do not group with known benign activity. These clusters represent emerging techniques and can be prioritized for manual investigation."
            ]
          },
          {
            "description": "A legitimate security tool process (e.g., MsMpEng.exe) spawns an unexpected child process, such as a script interpreter (powershell.exe) or an unsigned binary.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Process Monitoring Systems, Active Directory Domain Controllers",
            "action": [
              "Symbolic Logic: From process creation logs (Windows Event ID 4688), build and analyze process lineage. Maintain an allowlist of normal child processes for legitimate security tools. Alert on any deviation, such as a security tool process spawning cmd.exe, powershell.exe, cscript.exe, or any unsigned binary.",
              "Statistical Method: For each known parent security process, calculate the historical probability distribution of its child processes across the enterprise. Generate an alert when a child process is spawned that falls below a defined rarity threshold (e.g., this parent-child relationship occurs in <0.01% of cases).",
              "Machine Learning: Model process execution chains as graphs and use a graph-based anomaly detection algorithm. Train the model on the structure of normal process trees to learn legitimate behavior. The model can then score new process trees for anomalous structures, such as unusual depth or the presence of rare parent-child relationships, which could indicate injection used for spoofing."
            ]
          },
          {
            "description": "A logical contradiction is observed where a security tool logs a 'healthy' or 'protected' status message while other telemetry indicates the same security control is stopped, disabled, or a compromise is active.",
            "data_sources": [
              "Windows Event ID 7036",
              "Windows Application Event Log",
              "Microsoft-Windows-Windows Defender/Operational",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Log Management/SIEM, Endpoint Security Agents, Network Security Monitoring Sensors",
            "action": [
              "Symbolic Logic: Create a correlated SIEM rule that triggers when a 'healthy' status event from a security tool (e.g., from the Windows Application Log) occurs within 5 minutes of a 'service stopped' event for that same tool (Windows Event ID 7036 for services like 'WinDefend') or a high-confidence IOC is detected elsewhere (e.g., Zeek conn.log shows a connection to a known C2 server).",
              "Statistical Method: For each host, calculate the rate of 'security service stopped' events and the rate of 'healthy' status reports from the corresponding tool. Using a moving average, alert if the 'healthy' report rate remains stable or increases while the 'service stopped' rate spikes above its baseline (e.g., > 3 standard deviations).",
              "Machine Learning: Use a time-series anomaly detection model (e.g., LSTM Autoencoder) on the event stream from each security tool. The model learns the normal sequence and timing of events (e.g., scan start, scan complete, healthy report). An anomaly is flagged when the observed sequence deviates from the learned pattern, such as receiving a 'healthy' report without a preceding 'scan complete' event."
            ]
          },
          {
            "description": "A process executes from a non-standard file path (e.g., C:\\Users\\Public) or with a misspelled name (e.g., 'MsMpEnge.exe') that impersonates a legitimate security tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint File Systems, Endpoint Process Monitoring Systems, Network Egress Points",
            "action": [
              "Symbolic Logic: Maintain an allowlist of legitimate security executables, including their exact name, full path, and file hash. Alert on any process creation event (Windows Event ID 4688) where the process name matches a security tool but the path or hash does not match the allowlist.",
              "Statistical Method: For process names that are minor variations of legitimate security tools (identified via Levenshtein distance), calculate the entropy of their file path. Alert if the entropy score is in the 95th percentile or higher for all file paths on the system, indicating the process is likely running from a randomized or obfuscated directory.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on the features of legitimate security processes (e.g., file path characteristics, parent process name, signed status). This model defines a boundary for normal behavior. Any new process that is classified as an outlier is flagged as a potential impersonation attempt."
            ]
          },
          {
            "description": "A statistical anomaly is detected in the volume, timing, or content of security status reports from an endpoint, such as an abnormal flood or complete cessation of 'healthy' messages.",
            "data_sources": [
              "Windows Application Event Log",
              "Microsoft-Windows-Windows Defender/Operational"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Log Management/SIEM, Endpoint Event Log Forwarders",
            "action": [
              "Symbolic Logic: Create a rule that alerts if a 'security control disabled' event is logged, and it is not followed by a corresponding 'security control enabled' event within 15 minutes, while generic 'healthy' status messages for that control continue to be logged from the same host.",
              "Statistical Method: For each host and security tool, establish a baseline for 'healthy' report frequency (e.g., events per hour) using a 30-day moving window. Alert if the event count in a given hour exceeds the mean by more than 3 standard deviations (a flood) or drops to zero for more than 24 hours (a cessation).",
              "Machine Learning: Apply time-series decomposition (e.g., STL) to the volume of 'healthy' status reports per host to model trend, seasonality, and residuals. Use an anomaly detection algorithm like Isolation Forest on the residuals to identify time points that deviate from established patterns, which could correspond to a spoofing campaign starting or a tool being disabled."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]