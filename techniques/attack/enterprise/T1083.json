[
  {
    "information_requirement": "Is the adversary discovering files and directories on the network?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1083",
        "name": "File and Directory Discovery",
        "evidence": [
          {
            "description": "Execution of known malicious discovery scripts or tools identified by file name or hash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints and servers, especially Domain Controllers and critical application servers.",
            "action": [
              "Symbolic Logic: Monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1). Create a watchlist of known discovery tool process names (e.g., `Seatbelt.exe`, `SharpHound.exe`) and their corresponding file hashes from threat intelligence feeds. Trigger a high-severity alert upon a direct match.",
              "Statistical Method: For any newly observed process hash executing on an endpoint, calculate its prevalence across the enterprise. A process hash seen on a very small number of endpoints (e.g., fewer than 1% of hosts) that also has a parent process like `powershell.exe` or `cmd.exe` should have its risk score increased. A hash prevalence below a statistically determined threshold (e.g., 5th percentile) is anomalous.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on labeled process execution data. Features should include process name characteristics (e.g., length, entropy), parent process, command-line arguments, and hash prevalence. The model will classify each new process execution as benign or malicious, flagging those predicted as malicious discovery tools."
            ]
          },
          {
            "description": "Execution of built-in system utilities (e.g., dir, find, where, tree) with command-line argument patterns commonly used for wide-scoping reconnaissance.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Web servers, and Database servers where command line usage is expected but specific patterns are not.",
            "action": [
              "Symbolic Logic: From process creation logs (Windows Event ID 4688, Sysmon Event ID 1), create detection rules using regular expressions to match command-line arguments of utilities like `dir`, `find`, `where`, and `tree`. Look for patterns such as recursive searches (`/s`, `/r`), output redirection (`> results.txt`), searching for sensitive file types (`*.kdbx`, `*.pem`), or enumerating network shares (`\\\\*\\c$`).",
              "Statistical Method: For each user, establish a baseline of command-line argument patterns for common utilities. Calculate the Shannon entropy of the command-line arguments for each execution. A command with unusually high entropy, or one containing argument flags that are rare for that specific user or host (e.g., a web server running `dir /s`), should be flagged. An alert can be triggered if the argument complexity or flag usage exceeds the 98th percentile of the entity's historical behavior.",
              "Machine Learning: Implement a sequence analysis model (e.g., an LSTM) to analyze the sequence of commands executed by a user or process. Train the model on normal command sequences. The model should flag command sequences that have a low probability of occurring based on learned benign patterns, such as a discovery command (`dir /s`) followed by an archiving command (`tar -czf`) and then a network connection to a rare external IP."
            ]
          },
          {
            "description": "An anomalous volume or frequency of file system discovery commands or file access events generated by a single user or process, deviating from established baselines.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, code repositories, and SharePoint sites where large numbers of file accesses may occur.",
            "action": [
              "Symbolic Logic: Create a rule that triggers if a single user or source IP address executes more than a fixed number (e.g., >100) of discovery-related commands (`dir`, `tree`, `find`) or generates more than 1000 file access events (Event ID 4663) within a short time window (e.g., 5 minutes). This provides a simple tripwire for brute-force enumeration.",
              "Statistical Method: For each user and host, establish a rolling 30-day baseline of file and directory access counts (from Windows Event ID 4663) and discovery command executions (from Windows Event ID 4688). Calculate the mean and standard deviation of this activity per hour. Generate an alert when the current hour's activity for a user/host exceeds a dynamic threshold, such as 3 standard deviations above the mean.",
              "Machine Learning: Apply a time series anomaly detection algorithm (e.g., Seasonal-Hybrid ESD) to the count of discovery-related events per user/host over time. The model will learn the normal rhythm (seasonality) of activity, including daily and weekly patterns, and will automatically flag periods where the observed activity significantly deviates from the forecasted 'normal' range."
            ]
          },
          {
            "description": "A process or user accessing an unusually high number or variety of sensitive directories or file types in a short period.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical file shares (e.g., Finance, HR, R&D), Domain Controller SYSVOL share, and administrator workstations.",
            "action": [
              "Symbolic Logic: Define a watchlist of critical file paths and directories (e.g., `C:\\Users\\*\\Documents\\`, `\\System32\\config`, `*\\secrets\\*`). Create a rule that alerts when a single process (especially non-interactive ones like `svchost.exe` or web server worker processes) accesses more than N (e.g., 3) distinct directories from this watchlist within a minute, based on Windows Event ID 4663 logs.",
              "Statistical Method: For a given process over a sliding time window (e.g., 10 minutes), calculate the Shannon entropy of the directory paths it accesses (from Event ID 4663). A high entropy score indicates the process is touching a wide variety of different directories. Compare this entropy score to a baseline for that specific process name or user, and alert if it exceeds a percentile-based threshold (e.g., 99th percentile).",
              "Machine Learning: Use a peer group analysis (clustering) model like DBSCAN to group users or processes based on their file access patterns. Outliers identified by the model are users or processes whose behavior does not fit into any established group. An outlier that is also accessing sensitive directories is a high-priority candidate for investigation."
            ]
          },
          {
            "description": "An anomalous pattern of network share enumeration (SMB) across multiple servers, characterized by high volume, rapid succession, or access from a host not typically involved in such activity.",
            "data_sources": [
              "Zeek smb_files.log",
              "Zeek conn.log",
              "Zeek smb_mapping.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments containing file servers, East-West traffic at the core switch, and VPN concentrator egress points.",
            "action": [
              "Symbolic Logic: From Zeek `smb_mapping.log`, create a rule that alerts when a single source IP attempts to connect to a high number of distinct shares (e.g., >20) across the network in a short time frame (e.g., 10 minutes). Specifically flag attempts to access default shares like C$ or ADMIN$ on multiple hosts in sequence.",
              "Statistical Method: Profile the 'fan-out' of SMB connections per host. For each source IP, calculate the number of unique destination IPs it connects to on port 445 (from `conn.log`) within an hour. Establish a baseline distribution for this 'fan-out' metric across all hosts. Flag any host whose fan-out exceeds the 95th percentile of its peer group (e.g., other workstations).",
              "Machine Learning: Model the SMB share access patterns as a bipartite graph connecting users to shares. Use graph algorithms to detect anomalies. A sudden increase in the degree centrality of a user node (connecting to many new shares) or the appearance of unusual short paths (a user suddenly accessing a share far from their normal 'neighborhood' in the graph) can indicate discovery."
            ]
          },
          {
            "description": "A correlated sequence of local file enumeration, followed by network share discovery, and then data staging in an archive file.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek smb_files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise SIEM/Data Lake, log aggregation points, and all endpoint and network sensor locations.",
            "action": [
              "Symbolic Logic: Create a stateful correlation rule in a SIEM that tracks activity from a single host. Trigger a high-priority alert if the following sequence occurs within a 1-hour window: (1) Execution of a recursive `dir` command (Event ID 4688), followed by (2) SMB enumeration against >5 distinct servers (`smb_mapping.log`), followed by (3) The creation of a `.zip` or `.rar` archive (Event ID 4688).",
              "Statistical Method: Assign a risk score to individual atomic events (e.g., recursive `dir` = 5 points, access to a sensitive directory = 10 points, SMB enumeration = 15 points). Sum these scores for a given host over a rolling time window (e.g., 30 minutes). Establish a baseline for this cumulative risk score for all hosts. Alert when a host's risk score spikes above a statistically determined threshold (e.g., 4 standard deviations above the mean of its peer group).",
              "Machine Learning: Use a Hidden Markov Model (HMM) to model the sequence of adversary tactics. Define states such as 'Local Discovery', 'Network Discovery', and 'Staging', with observable events being the logs from data sources. Feed the stream of security events for a host into the HMM to calculate the probability of the host being in a malicious state. An alert is triggered when the probability of being in a malicious state surpasses a confidence threshold."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]