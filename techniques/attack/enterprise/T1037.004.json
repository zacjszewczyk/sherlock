[
  {
    "information_requirement": "Is the adversary maintaining persistence using RC scripts?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1037.004",
        "name": "RC Scripts",
        "evidence": [
          {
            "description": "A network connection is observed from an external IP address, identified on a threat intelligence feed as malicious, to a Unix-like system on a remote administration port (e.g., TCP/22), followed by a file transfer containing a known malicious script hash.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, Demilitarized zones (DMZ), Critical Unix/Linux server segments (e.g., ESXi management networks, web server farms)",
            "action": [
              "Symbolic: Query Zeek conn.log for connections where `id.resp_p` is 22 and `id.orig_h` matches a list of known malicious IP addresses from a threat intelligence feed. Correlate the `uid` from matching connections with Zeek files.log to check if the `sha1` or `md5` of any transferred file matches known malicious script hashes.",
              "Statistical: For all SSH connections (`id.resp_p` = 22) to Unix-like systems, calculate the rarity of the source country and ASN for the originating IP (`id.orig_h`). Alert if a connection originates from a country or ASN that is in the bottom 1st percentile of connection frequency over the last 90 days.",
              "Machine Learning: Train a time-series model (e.g., ARIMA or LSTM) on the volume and frequency of SSH connections to critical Unix hosts. Use the model to forecast expected connection patterns and alert on significant anomalies, such as a sudden spike in connection attempts or a connection occurring at a time that deviates significantly from the predicted pattern (e.g., outside of business hours for admin activity)."
            ]
          },
          {
            "description": "A process, such as `scp.exe` or `plink.exe`, is created on a Windows host with command-line arguments that include a remote Unix path pointing to a known RC script location (e.g., `/etc/rc.local`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows administrative workstations, Windows jump servers/bastion hosts, Endpoint devices of system administrators and developers",
            "action": [
              "Symbolic: Create a detection rule that monitors Windows Event ID 4688 for a `NewProcessName` matching `scp.exe`, `sftp.exe`, `plink.exe`, or `ssh.exe`. The rule should trigger if the `CommandLine` field contains regular expression patterns matching RC script paths, such as `\\/etc\\/rc\\.local`, `\\/etc\\/rc\\.common`, or `\\/etc\\/rc\\.local\\.d\\/`.",
              "Statistical: For all executions of remote file transfer tools (`scp.exe`, etc.), parse the destination path from the command line. Calculate the entropy of the parent directory of the destination file path. A high entropy value may indicate an attempt to obfuscate the path, while a very low entropy value consistently matching known system paths (like `/etc/`) should be flagged for review when combined with other factors, like an unusual source host.",
              "Machine Learning: Develop a classification model (e.g., logistic regression or decision tree) that predicts the likelihood of a command line being malicious. Features could include the process name, the presence of specific keywords (`/etc/`, `>>`, `echo`), the length of the command, and the user context. Train the model on a labeled dataset of benign and malicious command lines and deploy it to score new process creation events."
            ]
          },
          {
            "description": "A file transfer session to a critical Unix host (e.g., ESXi server) exhibits multiple anomalous characteristics, such as originating from a non-administrative workstation, occurring outside of normal maintenance windows, and transferring a file size inconsistent with typical patch or configuration files.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ESXi management networks, Virtualization infrastructure, Core network switches and routers monitoring traffic to critical servers",
            "action": [
              "Symbolic: Create a rule that alerts when a Windows host NOT in the 'System Administrators' or 'Jump Servers' asset group initiates an SSH/SCP connection (Zeek conn.log `id.resp_p` = 22) to a host in the 'ESXi Servers' asset group.",
              "Statistical: For each source-destination pair involving SSH/SCP to critical Unix hosts, establish a baseline of normal data transfer volume (`orig_bytes` + `resp_bytes` in Zeek conn.log). Alert when a new connection's data volume exceeds the 95th percentile of the historical baseline for that specific traffic flow.",
              "Machine Learning: Use an anomaly detection algorithm (e.g., Isolation Forest or One-Class SVM) on connection metadata. Features should include source IP, destination IP, destination port, time of day, day of week, and bytes transferred. The model will learn the multi-dimensional profile of 'normal' administrative activity and flag connections that are outliers across these combined features."
            ]
          },
          {
            "description": "Within a short time window (e.g., 1 hour) after a system reboot, a Unix host initiates a new, periodic outbound network connection to a destination not previously seen in its communication baseline, consistent with command-and-control beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, Egress points of the network, DNS resolvers",
            "action": [
              "Symbolic: Following a reboot alert for a critical Unix host, monitor Zeek conn.log for outbound connections from that host where the destination IP (`id.resp_h`) is on a C2 threat feed. Concurrently, check Zeek dns.log for queries from the host to known malicious or newly registered domains (NRDs).",
              "Statistical: For each critical Unix host, maintain a 30-day rolling baseline of unique destination IPs, ports, and connection time intervals. After a reboot, analyze new outbound connections. Calculate the standard deviation of time intervals between connections to a single new destination; a very low standard deviation (e.g., < 1 second) suggests automated beaconing.",
              "Machine Learning: Apply a time-series decomposition model to the outbound connection count and data volume for each critical Unix host. Following a reboot, compare the new time-series data to the established seasonal (e.g., daily, weekly) and trend components. An alert is generated if the post-reboot residual (the part of the data not explained by trend or seasonality) shows a significant, unexplained periodic pattern."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary elevating privileges using RC scripts?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1037.004",
        "name": "RC Scripts",
        "evidence": [
          {
            "description": "A file is transferred to a Unix-like system whose hash matches a known Unix privilege escalation exploit, or whose filename matches common exploit script patterns.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps monitoring traffic between workstations and server segments, File transfer proxies, DMZ",
            "action": [
              "Symbolic: Scan the `filename` field in Zeek files.log for regular expressions matching known exploit kits or scripts (e.g., `.*dirty.*\\.c`, `linux.*\\.sh`, `exploit\\.py`). Additionally, match the `sha1` or `md5` hashes from files.log against a threat intelligence feed of known malicious file hashes.",
              "Statistical: Analyze file transfers to Unix systems. Profile the typical file types (`mime_type` in files.log) and file sizes. Alert when a file transfer involves an unusual file type for the target system (e.g., a C source file `text/x-c` or a Python script `text/x-python` being transferred to an ESXi host) and the file size is outside the 99th percentile of typical file transfers.",
              "Machine Learning: Train a classifier to identify suspicious files based on metadata. Use features from Zeek files.log such as `tx_hosts`, `rx_hosts`, `conn_uids`, `source`, `depth`, `mime_type`, and `is_orig`. The model can learn to distinguish routine file transfers (e.g., log shipping, software updates) from anomalous ones that are often associated with exploit delivery."
            ]
          },
          {
            "description": "A command executed remotely from a Windows host contains shell redirection operators (`>>`, `>`) targeting a known RC script path on a Unix system, indicating a direct attempt to add or overwrite script content.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows administrative workstations, Windows jump servers/bastion hosts, Domain Controllers (for auditing originating user context)",
            "action": [
              "Symbolic: Create a detection rule for Windows Event ID 4688 where `NewProcessName` is `ssh.exe` or `plink.exe` and the `CommandLine` contains both a shell redirection operator (e.g., `>>`, `>`) and a path containing `/etc/rc.`. This is a high-fidelity indicator of an attempt to modify a startup script.",
              "Statistical: For all remote shell commands captured in Event ID 4688, parse out any file paths. Maintain a frequency count of paths being accessed or modified. A path like `/etc/rc.local` appearing in a command line is statistically rare for most users and environments. Flag any command where the target path has a frequency below a set threshold (e.g., in the bottom 5th percentile of all paths modified via remote shell).",
              "Machine Learning: Use Natural Language Processing (NLP) techniques to analyze remote command lines. Train a model (e.g., using a bag-of-words approach or embeddings with a simple neural network) to classify commands as 'benign administration', 'reconnaissance', or 'file modification/exploitation'. The model can learn the structure and syntax of malicious commands, including the combination of `echo`, piping, redirection, and target paths."
            ]
          },
          {
            "description": "A remote connection from a Windows system, authenticated with a non-root user account, is correlated with a file write or modification event on a root-owned RC script on the target Unix host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Unix/Linux Audit Logs (e.g., auditd)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized log aggregation platform (SIEM), Critical Unix/Linux servers, Windows administrative workstations",
            "action": [
              "Symbolic: Correlate Unix audit logs showing a write event to an RC script (e.g., `/etc/rc.local.d/local.sh`) with Zeek conn.log data. Trigger an alert if the user ID in the audit log is non-root (`auid != 0`) and the source IP of the corresponding network session in Zeek conn.log belongs to a standard user workstation.",
              "Statistical: Build a profile of which user accounts (`uid` in audit logs) modify which files/directories on critical Unix hosts. Calculate a risk score when a user modifies a file. The score increases if the file is in `/etc/`, if the user is not root, and if the user has a low historical frequency of modifying system files. An alert is triggered if the score exceeds a statistically determined threshold (e.g., > 3 standard deviations from the mean user risk score).",
              "Machine Learning: Create a bipartite graph of (user, file_path) interactions. Use a graph-based anomaly detection algorithm (e.g., PageRank or community detection) to identify unusual links. An edge representing a low-privilege user modifying a sensitive system script like an RC file would appear as a rare and suspicious link between two otherwise disconnected communities (users and system files), flagging it as an anomaly."
            ]
          },
          {
            "description": "Following a system reboot, a new process is observed running with root privileges that was not present in the pre-reboot process baseline, and this is correlated with a new outbound network connection from the host.",
            "data_sources": [
              "Zeek conn.log",
              "Unix/Linux Process Accounting logs (e.g., psacct, auditd)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Unix/Linux servers (for process and reboot logs), Egress points of the network, Centralized log aggregation platform (SIEM)",
            "action": [
              "Symbolic: After a reboot event on a Unix host, compare the list of running processes (from auditd logs) against a known-good baseline for that host. Alert if a new, unauthorized process is running as root (`uid`=0). Correlate this with Zeek conn.log to see if the host is making outbound connections to destinations on a threat intelligence list.",
              "Statistical: For each rebooted host, collect process and network data for the first 15 minutes. Compare the set of running processes and network connections to the historical baseline. Use a Chi-squared test to determine if the distribution of parent processes (PPID) for new network connections has significantly changed. A new, unknown parent process spawning network traffic is a strong anomaly.",
              "Machine Learning: Use a time-series model to forecast the expected resource consumption (CPU, memory, network I/O) of a host post-reboot. A malicious script executing at startup will likely create a deviation from this forecast. An alert can be triggered if the actual resource usage significantly exceeds the predicted values, indicating unexpected activity that could be the result of a privilege escalation payload."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]