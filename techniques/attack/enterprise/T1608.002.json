[
  {
    "information_requirement": "Has an adversary staged tools on external infrastructure for use against our network? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1105",
        "name": "Ingress Tool Transfer",
        "evidence": [
          {
            "description": "A file download event (e.g., EXE, DLL, PS1, ZIP) where the source IP address or domain matches an entry on a subscribed Cyber Threat Intelligence (CTI) feed categorized as malware distribution, C2, or known adversary infrastructure.",
            "data_sources": [
              "Zeek http.log",
              "Zeek file.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, web proxies, and DNS resolvers.",
            "action": [
              "Symbolic: Join network logs (Zeek http.log, dns.log) with a CTI feed of known malicious IPs/domains. Generate an alert for any connection from an internal host to a CTI-flagged entity that results in a file download logged in Zeek file.log (e.g., `SELECT * FROM zeek_http JOIN cti ON zeek_http.host = cti.indicator WHERE zeek_http.fuid IS NOT NULL`).",
              "Statistical: For all file downloads from external sources, calculate the historical rarity of the source IP address/domain for the organization. Flag downloads from sources that fall in the bottom 5th percentile of historical access frequency and also appear on a low-to-medium confidence CTI feed.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression, Random Forest) using features from Zeek logs (MIME type, file size, source ASN, domain age, CTI score) and labeled historical data. Use the model to predict the probability of a new file download being malicious. Alert on downloads exceeding a high probability threshold (e.g., > 0.90)."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) for a LOLBin (e.g., certutil.exe, bitsadmin.exe, powershell.exe) with command-line arguments indicating a file download from a remote URL.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, database servers), user workstations, and application servers.",
            "action": [
              "Symbolic: For each process creation event (Windows Event ID 4688), apply a ruleset of regular expressions to the 'CommandLine' or 'ProcessCommandLine' field to detect known download patterns (e.g., certutil -urlcache -f, bitsadmin /transfer, powershell -c IWR). Generate a high-severity alert on any match.",
              "Statistical: For each host, establish a baseline of normal LOLBin usage (e.g., processes invoked, parent processes, command-line argument structure). Calculate the entropy of command-line arguments for LOLBins. Flag executions where the process parent is rare (e.g., winword.exe spawning powershell.exe) or the command-line entropy is in the top 5th percentile.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA, LSTM) on the frequency of LOLBin download commands per host and across the enterprise. An anomalous spike in the usage of curl.exe or certutil.exe for downloads, deviating significantly from the forecasted normal range, would trigger an investigation."
            ]
          },
          {
            "description": "A network file transfer event where the file's magic bytes (e.g., 'MZ' for PE file) as identified by Zeek's file analysis framework mismatch the file extension in the URI (e.g., .jpg) or the server-provided MIME type (e.g., image/jpeg).",
            "data_sources": [
              "Zeek file.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways and network sensor tap points.",
            "action": [
              "Symbolic: Create a detection rule that triggers when `zeek_file.is_exe` is true but the URI from the correlated `zeek_http.log` entry ends in a non-executable extension (e.g., .png, .jpg, .txt, .pdf). Correlate using the connection UID (`conn_uids` in file.log, `uid` in http.log).",
              "Statistical: Build a matrix of common, legitimate mismatches (e.g., web services serving content as 'application/octet-stream'). For all observed mismatches, calculate their frequency. Alert on mismatches that are statistically rare (e.g., occurring less than 0.01% of the time) across the enterprise, especially when the inferred file type is an executable or script.",
              "Machine Learning: Implement an unsupervised learning model (e.g., Isolation Forest) on features from `zeek_file.log` and `zeek_http.log`, including `mime_type`, `is_exe`, file extension, source/destination ports, and connection duration. The model will learn normal file transfer patterns and flag anomalous combinations indicative of masquerading as outliers."
            ]
          },
          {
            "description": "A sequence of events where a DNS query for a domain registered within the last 30 days is followed by a successful network connection and the download of an executable file (PE, ELF) or script from that domain.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek file.log",
              "WHOIS Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers, internet gateways, and endpoints making direct DNS queries.",
            "action": [
              "Symbolic: For every DNS response, enrich the query with domain age from a WHOIS data source. If the domain age is < 30 days, flag it. If a subsequent connection from the same internal IP to the resolved external IP results in a file download (`fuid` is generated) identified as an executable (`is_exe` = true in file.log), generate a high-severity alert.",
              "Statistical: Calculate a risk score for each domain queried based on features like domain age (NRDs get a high score), DNS query-to-answer ratio, and the historical prevalence of the domain in the organization's traffic (rare is riskier). Alert when a file download originates from a domain exceeding a risk score in the 98th percentile.",
              "Machine Learning: Use a graph-based analysis approach. Create nodes for internal hosts, domains, and IPs. Create edges for DNS queries and TCP connections. Apply community detection algorithms to find clusters of hosts communicating with a set of related, newly registered domains. A sudden download of similar files across this cluster indicates a coordinated tool transfer campaign."
            ]
          },
          {
            "description": "A file download from a legitimate file hosting service (e.g., GitHub, Pastebin, Discord CDN) where the user agent, file type, file size, or source host deviates significantly from the established baseline for that service or host.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek file.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, and servers/endpoints that are expected to interact with code repositories or file sharing services.",
            "action": [
              "Symbolic: Create a watchlist of sensitive hosts (e.g., domain controllers, database servers) that should not be downloading tools from sites like GitHub. Create a rule to alert on any file download (identified via Zeek file.log) from a domain like `raw.githubusercontent.com` or `cdn.discordapp.com` originating from a host on this watchlist.",
              "Statistical: For each internal host, profile the distribution of MIME types and file sizes downloaded from common sharing platforms over a 30-day baseline period. Use a Z-score or Interquartile Range (IQR) method to detect outliers. An alert is generated if a host downloads a file whose size is > 3 standard deviations from its mean or if the MIME type is statistically rare for that host.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model for each host or group of hosts on their normal download activity from these platforms (features: hour of day, file MIME type, domain, user agent). The model learns a boundary of 'normal' behavior. Any download activity falling outside this boundary is flagged as an anomaly."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]