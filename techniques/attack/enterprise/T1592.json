[
  {
    "information_requirement": "Is an external adversary actively gathering information about our enterprise hosts?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1592",
        "name": "Gather Victim Host Information",
        "evidence": [
          {
            "description": "A single external source IP, flagged by a threat intelligence feed as a known scanner or malicious actor, generates connection attempts to more than 20 distinct destination ports or 50 distinct hosts within a 5-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing web servers, VPN concentrators, Firewall and network gateway logs, Domain controllers",
            "action": "1. (Symbolic) Ingest Cyber Threat Intelligence (CTI) feeds of known scanners or malicious IPs into a watch list. Create a rule to alert whenever a source IP from Zeek conn.log or Windows Event ID 5156/4625 matches an entry on this watch list. 2. (Statistical) For each external source IP, calculate a 5-minute rolling count of distinct destination hosts and distinct destination ports. Alert if the count of distinct ports for a single host exceeds the 99th percentile of the baseline for all external traffic, or if the count of distinct hosts exceeds the 99th percentile, suggesting a network sweep. 3. (ML) Train a classification model (e.g., Random Forest) using features such as 'ip_on_cti_list', 'port_scan_count', 'host_sweep_count', 'failed_login_count' (from Event ID 4625), and 'connection_state' (from Zeek conn.log) to classify the source IP's activity as 'benign' or 'reconnaissance'. Alert when an IP is classified as 'reconnaissance' with high confidence."
          },
          {
            "description": "An internal host makes an outbound HTTP/S connection to an external domain flagged by threat intelligence as a reconnaissance framework (e.g., ScanBox), followed by an HTTP POST request containing a data structure with a character entropy score greater than 4.5.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers, Network egress points and web proxies, User workstations",
            "action": "1. (Symbolic) Correlate Zeek dns.log and http.log to identify outbound connections to domains/IPs on a CTI watch list for reconnaissance frameworks. Alert on any successful connection from an internal host. 2. (Statistical) For all outbound HTTP POST requests to low-reputation or uncategorized domains, calculate the Shannon entropy of the request body. Alert if the entropy score exceeds the 98th percentile of typical outbound POST traffic, indicating potentially obfuscated data exfiltration of host details. 3. (ML) Train a supervised classification model to identify browser profiling requests. Use labeled data and features from Zeek http.log including 'user_agent', 'request_body_len', 'response_mime_type', 'uri_entropy', and 'domain_age' to predict if a request is part of a profiling campaign."
          },
          {
            "description": "A single external IP address generates a series of inbound HTTP/S requests where the User-Agent string matches a known scanning tool signature and the ratio of HTTP 404 responses to 200 responses for that IP exceeds 90% in a 10-minute window.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web applications, API gateways, Load balancers",
            "action": "1. (Symbolic) In Zeek http.log, apply a ruleset of regular expressions against the 'user_agent' and 'uri' fields to detect signatures of scanning tools (e.g., 'nmap', 'nikto', 'sqlmap') or requests for sensitive files (e.g., '/.git/config', '/.env', 'wp-config.php'). Alert on any match. 2. (Statistical) For each external source IP, calculate the ratio of HTTP 404 status codes to all other status codes over a 10-minute sliding window. Alert if this ratio exceeds the 95th percentile of the historical baseline, indicating forceful browsing or file enumeration. 3. (ML) Use a sequence analysis model like a Long Short-Term Memory (LSTM) network trained on benign user URI navigation paths. Feed the sequence of URI requests from an external IP into the model; if the model assigns a very low probability to the sequence, flag it as an anomalous, likely automated, scan."
          },
          {
            "description": "An external IP address initiates connections to more than 100 distinct destination ports on a single host (port scan) or to the same port on more than 50 distinct hosts in a /24 subnet (network sweep) within a 1-minute time window.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Firewall and network gateway logs, DMZ subnets, Externally-facing servers",
            "action": "1. (Symbolic) Create a rule to trigger an alert if a single source IP in Zeek conn.log generates connections to over 100 unique destination ports on one host, or to one port on over 50 unique hosts, within a 60-second window. 2. (Statistical) For each external source IP, calculate the standard deviation of destination ports it connects to within a 5-minute window. A high standard deviation relative to the baseline (e.g., > 3 standard deviations from the mean) suggests a wide port scan. Alert on such IPs. 3. (ML) Apply a density-based clustering algorithm (e.g., DBSCAN) to connection log data, using features like source IP, destination IP, and destination port. Scanning activity will form dense, anomalous clusters that can be programmatically identified and separated from the sparse clusters of legitimate traffic."
          },
          {
            "description": "An inbound HTTP/S request contains a User-Agent string that has a character-level Shannon entropy score greater than 3.5, has fewer than 10 characters, or has not been observed in the previous 30 days of traffic.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web applications, Content Delivery Networks (CDNs), Reverse proxies",
            "action": "1. (Symbolic) Maintain a blocklist of User-Agent strings associated with malicious tools (e.g., 'masscan', 'zgrab', 'Go-http-client') and alert on any match in Zeek http.log. 2. (Statistical) Build a frequency distribution of all User-Agent strings seen over the past 30 days. Alert on any inbound request whose User-Agent falls in the bottom 0.1 percentile (i.e., is exceptionally rare) or has never been seen. Also, calculate the Shannon entropy of each User-Agent string and alert if it exceeds a high threshold (e.g., 3.5), suggesting randomization. 3. (ML) Train a character-level autoencoder on all historically observed 'good' User-Agent strings. For each new inbound request, pass its User-Agent through the model. If the reconstruction error is high, the User-Agent is anomalous and likely crafted, triggering an alert."
          },
          {
            "description": "A single external IP address makes more than 3 unique HTTP/S requests in 5 minutes that match URI patterns known to probe for information disclosure vulnerabilities (e.g., '/actuator/env', '/.git/config', 'phpinfo.php').",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public web servers, API endpoints, Cloud service management consoles",
            "action": "1. (Symbolic) Create and apply a list of regular expression patterns to the URI field of Zeek http.log records to identify requests for known sensitive files or information-leaking endpoints (e.g., '/.git/config', '/actuator/heapdump', '/.env'). Alert on any single match from an external source. 2. (Statistical) For each source IP, count the number of distinct URI requests that match the symbolic pattern list within a 5-minute window. Alert if this count exceeds a small threshold (e.g., 3), as this indicates a targeted probing for multiple known misconfigurations from a single actor. 3. (ML) Model benign user sessions using a one-class SVM. Extract features for each session (e.g., 'session_duration', 'num_requests', 'ratio_of_404s', 'uri_entropy', 'count_of_suspicious_uri_requests'). Classify sessions that are identified as outliers by the model as potential reconnaissance activity."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]