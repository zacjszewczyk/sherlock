[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using obfuscated files or information?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027",
        "name": "Obfuscated Files or Information",
        "evidence": [
          {
            "description": "A file hash, observed in network transfer logs or endpoint process creation events, matches a known threat intelligence signature associated with packers (e.g., UPX, MPRESS) or obfuscated malware.",
            "data_sources": [
              "Zeek file.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, Email servers, User endpoints, File servers",
            "action": [
              "Query for file creation events (Windows Event ID 4688) or network file transfers (Zeek file.log) and scan the associated file hashes against a threat intelligence database of known packed or obfuscated malware. Alert on any match.",
              "For files identified by Zeek file.log, calculate the frequency of specific file magic numbers (e.g., 'UPX!') associated with common packers. Establish a baseline frequency for your environment. Alert when the observation of these magic numbers in a given time window exceeds the 95th percentile of the historical baseline.",
              "Train a time-series model (e.g., ARIMA) on the volume of signature-based alerts for packed/obfuscated files. Use the model to predict the expected number of alerts for the next time interval. An actual count that significantly exceeds the prediction's confidence interval indicates a potential campaign or widespread attack."
            ]
          },
          {
            "description": "A process is created with command-line arguments containing patterns indicative of obfuscation, such as PowerShell Base64 encoding flags, excessive CMD escape characters, or string concatenation.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, User endpoints, Application servers, Web servers",
            "action": [
              "Implement a SIEM rule using regular expressions to scan the CommandLine or ProcessCommandLine field in Windows Event ID 4688 logs for patterns indicative of obfuscation. Patterns should include, but are not limited to: `powershell -e`, `powershell -enc`, `[b][a][s][e]64`, extensive use of carets (^) in `cmd.exe`, or string replacement/concatenation functions in PowerShell (e.g., `-join`, `-replace`).",
              "For each process creation event (Windows Event ID 4688), calculate the Shannon entropy of the command-line argument string. Group by process name (e.g., `powershell.exe`, `cmd.exe`, `wscript.exe`) and establish a rolling 30-day statistical baseline (mean, standard deviation) for command-line entropy. Generate an alert when a newly observed command line's entropy exceeds three standard deviations from the mean for its process group.",
              "Deploy a pre-trained classification model (e.g., Random Forest, Gradient Boosting) that ingests command-line strings from Windows Event ID 4688. The model should use features such as command length, ratio of non-alphanumeric characters, character entropy, and keyword counts (e.g., 'iex', 'downloadstring'). The model's output (a probability score of being malicious/obfuscated) should be used to generate high-fidelity alerts when the score exceeds a defined threshold."
            ]
          },
          {
            "description": "A process execution event for a known decoding or deobfuscation utility (e.g., `certutil.exe -decode`, `expand.exe`) occurs within a short time window following a network file download or file write event involving the same file name on the same host.",
            "data_sources": [
              "Zeek file.log",
              "Zeek http.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User endpoints, Developer workstations, System administrator consoles",
            "action": [
              "Create a correlation rule that triggers when a process creation event (Windows Event ID 4688) for a known deobfuscation tool (e.g., `certutil.exe` with `-decode` switch) is observed on a host within 60 seconds of a file download event to that same host (from Zeek file.log or http.log).",
              "From Windows Event ID 4688 data, build a frequency table of parent-child process relationships over a 30-day baseline period. Calculate the rarity of a parent process (e.g., `outlook.exe`, `winword.exe`) spawning a known deobfuscation utility (e.g., `certutil.exe`). Alert when a parent-child pairing occurs that is in the bottom 1st percentile of observed frequencies, indicating an anomalous execution chain.",
              "Implement a sequence analysis model (e.g., LSTM, HMM) to learn normal sequences of events on an endpoint by correlating data from Zeek logs and Windows Event logs. Feed a stream of endpoint events (e.g., `network connection -> file write -> process execution`) into the model. Flag sequences that have a low probability score under the trained model, particularly those involving file downloads followed by the execution of deobfuscation tools or script interpreters."
            ]
          },
          {
            "description": "A file, network payload segment, or process command line exhibits Shannon entropy significantly higher than the established baseline for its type, suggesting unexpected compression or encryption.",
            "data_sources": [
              "Zeek file.log",
              "Zeek http.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, User endpoints, Critical servers hosting sensitive data",
            "action": [
              "Create a SIEM rule to calculate the Shannon entropy of files transferred over the network (from Zeek file.log) or command-line arguments (from Windows Event ID 4688). Alert if a script file (e.g., `.ps1`, `.js`, `.vbs`) has an entropy score above 6.0 or if a typically cleartext command line has an entropy score above 4.5.",
              "For files transferred over the network (Zeek file.log), calculate the entropy for each file. Group files by MIME type (e.g., `text/plain`, `text/html`, `application/javascript`) and establish a rolling 30-day baseline of entropy scores for each group. Alert when a file's entropy exceeds the 99th percentile for its MIME type, indicating it is an outlier.",
              "Implement an anomaly detection model (e.g., Isolation Forest) on multi-dimensional data points including file entropy, file size, and file type (from Zeek file.log). Train the model on historical data to learn normal combinations. The model can then identify anomalous combinations, such as a small text file with unusually high entropy, which would be flagged as an outlier."
            ]
          },
          {
            "description": "A file's observed magic number or MIME type from network logs (e.g., 'application/x-dosexec') is inconsistent with its declared file extension (e.g., '.jpg', '.txt'), indicating potential masquerading.",
            "data_sources": [
              "Zeek file.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web servers, Email gateways, User endpoints, Network file shares",
            "action": [
              "Create a lookup table mapping common 'benign' file extensions (`.txt`, `.jpg`, `.png`, `.gif`) to their expected MIME types. Query Zeek file.log and alert every time a file is transferred with one of these extensions but has a mismatched MIME type, especially `application/x-dosexec`, `application/octet-stream`, or `application/zip`.",
              "Aggregate file transfer events from Zeek file.log by user ID and count the number of file type mismatches (extension vs. MIME type) per user per hour. Establish a baseline for this count for each user. Use a Z-score or percentile-based threshold (e.g., > 98th percentile) to alert on users exhibiting an anomalously high rate of mismatches compared to their own history.",
              "Train a decision tree classifier to predict the likelihood of a file being malicious based on features like: `(mismatch_present: boolean)`, `(file_source_ip: categorical)`, `(file_size: integer)`, `(MIME_type: categorical)`. A file with a mismatch from an external source that is of a size typical for executables would be classified as high-risk."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]