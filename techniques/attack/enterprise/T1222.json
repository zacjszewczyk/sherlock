[
  {
    "information_requirement": "Has the adversary modified file or directory permissions to evade defenses and access protected resources? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1222",
        "name": "File and Directory Permissions Modification",
        "evidence": [
          {
            "description": "A known malicious process (identified by hash or antivirus alert) spawns a command-line utility (icacls.exe, cacls.exe, takeown.exe, chmod) to modify file or directory permissions.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Defender Event ID 1116"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers (e.g., SharePoint, SAP), Endpoint devices of privileged users (e.g., Domain Admins, Developers)",
            "action": [
              "Symbolic Logic: Correlate process creation events (Windows Event ID 4688, Sysmon Event ID 1) for permission modification tools with malware detection events (e.g., Windows Defender Event ID 1116) occurring on the same host within a 5-minute window. Alert when the parent process hash from the 4688/1 event matches a hash in the threat intelligence feed or the process name/ID matches the one cited in the 1116 event.",
              "Statistical Method: Analyze parent-child process relationships for icacls.exe, cacls.exe, takeown.exe, and chmod. Profile the frequency of legitimate parent processes (e.g., cmd.exe, powershell.exe, explorer.exe) over a 30-day baseline. Calculate the rarity of a given parent process using a frequency count or percentile rank. Flag any permission modification utility spawned by a parent process that falls below the 5th percentile of historical frequency.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from process creation events (Windows Event ID 4688). Features should include parent process name, command-line length, entropy of command-line arguments, user context (SYSTEM vs. standard user), and time of day. Label data based on historical incidents and red team exercises. Use the trained model to classify new permission modification events as benign or malicious in real-time."
            ]
          },
          {
            "description": "The command-line arguments of a file permission utility (icacls.exe, cacls.exe, chmod, chown) contain patterns that grant excessive permissions (e.g., Full Control for 'Everyone' or 'Users', '777' on Linux) to sensitive files or directories.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System configuration directories (e.g., C:\\Windows\\System32, /etc/), Application installation directories (e.g., C:\\Program Files\\), User profile directories, and network file shares hosting sensitive data.",
            "action": [
              "Symbolic Logic: Using process creation logs (Windows Event ID 4688, Sysmon Event ID 1), search command-line arguments for regular expressions matching high-risk permission changes. Examples: `/(icacls|cacls).*\\/grant.*(Everyone|Users):F/`, `/chmod.*(777|a\\+rwx)/`. Trigger an alert when these patterns are used on files within critical system directories like C:\\Windows or /bin.",
              "Statistical Method: For each command-line execution of a permission utility, calculate the entropy of the target file path. Establish a baseline entropy score for paths typically modified by these tools. A significantly higher entropy score may indicate an attempt to obfuscate a path or target a randomly named file dropped by malware. Flag commands where the path entropy exceeds the 95th percentile of the established baseline.",
              "Machine Learning: Use a sequence analysis model (e.g., LSTM) to analyze the sequence of commands executed by a user or on a host. Train the model on benign administrative activity to learn normal sequences (e.g., create directory, set permissions, copy files). Flag sequences where a permission modification command appears in an anomalous context, such as immediately after a download from a rare domain or followed by execution from a temporary directory."
            ]
          },
          {
            "description": "A permission change event (SACL change) is observed on a critical file, directory, or registry key, where the change is initiated by a user account or process that does not typically perform such actions.",
            "data_sources": [
              "Windows Event ID 4670",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry (specifically HKLM\\Software, HKCU\\Software), Group Policy Objects (GPOs) on Domain Controllers, Critical file shares, System binary directories (C:\\Windows\\System32).",
            "action": [
              "Symbolic Logic: Create and monitor a watchlist of critical assets (files, directories, registry keys) using file integrity monitoring (FIM) or native auditing. Trigger a high-priority alert on any permission change event (Windows Event ID 4670) where the 'Object Name' matches an entry on the watchlist and the 'Subject User Name' is not on a pre-approved list of administrators.",
              "Statistical Method: For all 4670 events, build a baseline of (Subject User Name, Process Name, Object Name) tuples. Use a count-based statistical model to identify rare combinations. Calculate the frequency of each tuple over a 30-day period. Alert on any permission change event that represents a tuple seen for the first time or that falls below a 1% frequency threshold.",
              "Machine Learning: Apply clustering algorithms (e.g., DBSCAN) to permission change events (Windows Event ID 4670). Use features such as the user, source host, target object, and process responsible for the change to identify clusters of normal administrative activity. Treat any new permission change event that does not fall into an existing cluster (i.e., is an outlier) as anomalous and worthy of investigation."
            ]
          },
          {
            "description": "A file or directory permission change (Windows Event ID 4670) is followed within a short time window by a file access/modification (Windows Event ID 4663) or process execution (Windows Event ID 4688) on the same object by the same user or process.",
            "data_sources": [
              "Windows Event ID 4670",
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Persistence locations (e.g., Startup folders, Run keys in registry), directories containing security software binaries and logs, user profile directories.",
            "action": [
              "Symbolic Logic: Create a rule to detect a sequence of events: `Event A: Windows Event ID 4670` on `Object X`, followed by `Event B: Windows Event ID 4688 or 4663` on the same `Object X` within a 2-minute window. The rule should trigger if `Object X` is located in a known persistence location (e.g., `C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp`, `HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`).",
              "Statistical Method: For all observed sequences of permission change followed by access/execution, calculate the time delta between the two events. Create a distribution of these time deltas for all files on the network. Flag any sequence where the time delta falls in the lowest 5th percentile (i.e., is unusually fast), especially if the target object is a system binary or script file (.exe, .dll, .ps1, .bat).",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA) on the volume of permission change events (4670) grouped by host. A sudden, sharp spike in the volume of these events on a single host, deviating significantly from the model's forecast, can indicate mass permission changes characteristic of ransomware pre-encryption stages or a destructive attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]