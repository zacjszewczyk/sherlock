[
  {
    "information_requirement": "Has the adversary executed code via Windows service manipulation? (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1569.002",
        "name": "Service Execution",
        "evidence": [
          {
            "description": "A new service is installed (Windows Event ID 7045) where the service name, executable path, or executable file hash is present on a threat intelligence feed or internal watchlist of known-bad indicators.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint Workstations",
            "action": [
              "Upon new service installation (Windows Event ID 7045), query the 'Service File Name' and 'Service Name' fields. Compare the file path, filename, and a hash of the executable file against known-bad indicators from threat intelligence feeds (e.g., PSEXESVC, known malicious hashes). Generate an alert on any match.",
              "For each new service installation, calculate the Shannon entropy of the 'Service Name'. Establish a baseline of entropy scores for legitimate service names in the environment. Flag service names with an entropy score exceeding the 95th percentile of the baseline, as this often indicates randomly generated names used by malware.",
              "Develop a logistic regression model trained on historical service installation events. Features should include service name length, service name entropy, whether the executable path is in a standard system directory, and the prevalence of the executable hash across the enterprise. Use the model to classify each new service installation as 'benign' or 'suspicious' based on its probability score."
            ]
          },
          {
            "description": "A command-line process (Windows Event ID 4688) executes 'sc.exe' or 'powershell.exe' (New-Service, Set-Service) with arguments that create or modify a service to execute a payload from a non-standard, user-writable, or remote network location.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Workstations, Jump Servers, Domain Controllers",
            "action": [
              "Monitor process creation events (Windows Event ID 4688) for 'sc.exe' or 'powershell.exe'. Use regular expressions to flag command lines containing 'create' or 'config' with 'binPath=' pointing to non-standard directories like '%TEMP%', '%APPDATA%', 'C:\\Users\\', or UNC paths. Also, flag the use of obfuscated PowerShell commands (e.g., -e, -enc, -EncodedCommand) with service management cmdlets.",
              "Profile the command-line arguments for 'sc.exe' and service-related PowerShell cmdlets. Calculate the frequency of different 'binPath' parent directories across the environment. Alert when a 'binPath' points to a directory that falls below the 5th percentile of frequency, indicating a rare or unusual location for a service executable.",
              "Use a clustering algorithm (e.g., DBSCAN) on command-line features extracted from 'sc.exe' and PowerShell executions. Features should include argument count, presence of specific keywords ('create', 'config', 'delete'), and path characteristics (length, depth, location). Identify clusters of anomalous commands that do not group with common administrative activity for investigation."
            ]
          },
          {
            "description": "A sequence of events on a single host shows a service being created (Windows Event ID 7045), started (Windows Event ID 7036), and then stopped or deleted within a short time window (e.g., under 10 minutes), characteristic of remote administration tools like PsExec.",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 7036",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments, Servers hosting sensitive data, Domain Controllers",
            "action": [
              "Create a rule that triggers when, for the same 'Service Name' on the same 'ComputerName', a Windows Event ID 7045/4697 (create) is followed by a Windows Event ID 7036 (start) and another 7036 (stop) within a 10-minute window. Specifically look for service names matching the pattern 'PSEXESVC' or other known remote access tool service names.",
              "For all services, calculate the time delta between creation (7045/4697), first start (7036), and final stop (7036). Establish a baseline distribution of service lifespans. Alert on any service whose lifespan is a statistical outlier, such as falling below the 1st percentile of all service lifespans or more than 3 standard deviations below the mean.",
              "Implement a time-series anomaly detection model (e.g., SARIMA or LSTM) on the frequency of ephemeral service creation events per host. A sudden spike in the rate of short-lived services on a host or group of hosts, as detected by the model as exceeding a predicted threshold, could indicate a lateral movement sweep in progress."
            ]
          },
          {
            "description": "A process running as a service (e.g., svchost.exe or other executables launched by services.exe) spawns a child process (Windows Event ID 4688) that is not part of its established baseline of behavior, such as a command shell or network reconnaissance tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All servers and workstations, especially those running custom or critical applications",
            "action": [
              "Monitor process creation events (Windows Event ID 4688). Maintain a watchlist of high-risk child processes (e.g., 'cmd.exe', 'powershell.exe', 'net.exe', 'whoami.exe', 'certutil.exe', 'rundll32.exe'). Generate a high-priority alert if any process whose parent is a known service executable (e.g., parent process path in System32 and running as NT AUTHORITY\\SYSTEM) spawns a process from this watchlist.",
              "Build a baseline of normal parent-child process relationships for every service executable in the environment over a 30-day period. For each service, calculate the frequency of each child process it spawns. Flag any new parent-child relationship not seen in the baseline or any relationship whose frequency is a statistical outlier (e.g., a child process that is rarely ever spawned by that service).",
              "Use a graph-based anomaly detection algorithm on process lineage data. Model services and their child processes as a graph, training the model on normal activity. Use the model to identify anomalous edges (a service spawning an unusual child) or anomalous subgraphs (a service spawning a chain of unusual processes) that deviate from the learned normal behavior."
            ]
          },
          {
            "description": "A service is created or modified (Windows Event ID 7045, 4697) with an executable path ('Service File Name') that resides in a user-writable directory (e.g., C:\\Users, C:\\ProgramData, C:\\Perflogs) or a temporary location (%TEMP%).",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, particularly multi-user systems like terminal servers",
            "action": [
              "For every service creation or modification event (Windows Event ID 7045, 4697), parse the 'Service File Name' field. Use a predefined list or regular expression to match against unauthorized directory paths, including user profiles, temp directories, and public folders. Alert on any match.",
              "Enumerate all service executable paths across the enterprise. Create a frequency count for each parent directory (e.g., 'C:\\Windows\\System32', 'C:\\Program Files\\...'). Any service path pointing to a directory that is statistically rare (e.g., in the bottom 5% of all directories hosting services) should be flagged for review.",
              "Train a decision tree classifier to predict if a service path is malicious. Features can include: path depth, presence of keywords like 'Users' or 'Temp', whether the executable is signed, and the prevalence of the path's parent directory across the environment. Use the classifier to score all new service installations for risk."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]