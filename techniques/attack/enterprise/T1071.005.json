[
  {
    "information_requirement": "Is the adversary using publish-subscribe protocols for command and control? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1071.005",
        "name": "Publish-Subscribe Protocols",
        "evidence": [
          {
            "description": "A network connection using a pub/sub protocol (MQTT, XMPP, AMQP) is established to an external IP address or domain that matches an entry on a high-confidence threat intelligence feed of known C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek mqtt.log",
              "Zeek xmpp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise network egress points and firewalls; Internal DNS resolvers",
            "action": "1. (Symbolic) Ingest a CTI feed of known malicious domains and IPs. Create a rule to join network connection logs (Zeek conn.log) and DNS query logs (Zeek dns.log) against this feed. Generate a high-priority alert for any connection to a pub/sub port (e.g., 1883, 8883, 5222) where the destination IP or resolved domain matches the CTI feed. 2. (Statistical) Monitor the daily count of CTI matches for pub/sub traffic. Establish a 90-day baseline and alert if the daily count exceeds the 95th percentile, indicating a potential campaign. 3. (Machine Learning) Train a logistic regression model to classify pub/sub connections. Use features like CTI match (binary), destination ASN, connection duration, and data volume. Use the model to score all new pub/sub connections for risk, flagging those with a high probability of being malicious for analyst review."
          },
          {
            "description": "Pub/sub protocol metadata (e.g., MQTT topic, client_id; XMPP JID) contains strings or patterns that match signatures of known malware families or attack tools.",
            "data_sources": [
              "Zeek mqtt.log",
              "Zeek xmpp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application layer inspection points at network chokepoints; Messaging service brokers",
            "action": "1. (Symbolic) Develop and apply a set of regular expressions or Yara rules against pub/sub metadata fields (e.g., `topic`, `client_id`, `username` in Zeek's mqtt.log). These rules should match known malicious patterns, such as GUIDs, long random strings, or hardcoded values from malware analysis. Alert on any match. 2. (Statistical) For each session, calculate the Shannon entropy of the `topic` and `client_id` strings. Establish a baseline entropy value for legitimate traffic. Alert if the entropy for a given session exceeds the baseline by more than 3 standard deviations, suggesting auto-generated C2 values. 3. (Machine Learning) Use a one-class SVM trained on the feature space of legitimate topic names and client ID formats (e.g., length, character distribution). Flag any new values that the model classifies as outliers for investigation."
          },
          {
            "description": "A host's pub/sub traffic exhibits characteristics that deviate significantly from its own historical baseline or the baseline of its peer group, specifically in terms of data volume (bytes_in/bytes_out), connection duration, or connection frequency.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek mqtt.log",
              "Zeek xmpp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host network interfaces; Network segment gateways; Enterprise network egress points",
            "action": "1. (Symbolic) Implement static threshold rules to detect egregious outliers, such as any single pub/sub connection lasting over 24 hours or a non-server host initiating more than 1,000 pub/sub connections in one hour. 2. (Statistical) For each host, create a 30-day rolling baseline profile for key metrics (e.g., average daily data volume, connection count, mean connection duration). Alert if a host's daily metrics exceed the 99th percentile of its own historical data. 3. (Machine Learning) Apply a time series forecasting model (e.g., ARIMA) to each host's total pub/sub data volume per hour. Generate an alert when the observed volume significantly deviates from the forecasted value's confidence interval, which can detect both beaconing and data exfiltration."
          },
          {
            "description": "An internal host initiates a pub/sub connection to an external domain or IP address that is not on an established allow-list of known-good brokers and exhibits suspicious characteristics such as recent registration (e.g., < 30 days old) or a low reputation score.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers; Enterprise network egress points; Web proxy logs",
            "action": "1. (Symbolic) Maintain an explicit allow-list of approved external pub/sub broker domains and IPs for your organization. Alert on any pub/sub connection (identified via protocol or port in Zeek conn.log) to a destination not on this list. 2. (Statistical) For each new external pub/sub destination, calculate its prevalence (number of unique internal hosts connecting to it). Flag destinations in the bottom 5th percentile of prevalence (e.g., contacted by only one or two hosts) for enrichment with domain age and reputation data. 3. (Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on connection features (destination ASN, port, data volume, domain TLD). Investigate small clusters or outliers that do not conform to the characteristics of legitimate, widespread pub/sub traffic, as these may represent targeted C2 infrastructure."
          },
          {
            "description": "A host utilizes an MQTT or XMPP topic that is statistically rare for that host or the organization, has high character-level entropy, or is new to the host's established topic profile.",
            "data_sources": [
              "Zeek mqtt.log",
              "Zeek xmpp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application layer inspection points; Internal hosts generating pub/sub traffic",
            "action": "1. (Symbolic) Search mqtt.log `topic` fields for suspicious substrings indicative of commands, such as 'cmd', 'exec', 'shell', or 'run'. Alert on any matches. 2. (Statistical) For each host, maintain a historical set of used topics. Alert when a host uses a topic for the first time. Additionally, calculate the Shannon entropy of each topic name; alert if the entropy is anomalously high (e.g., > 4.5), suggesting randomization. 3. (Machine Learning) Use NLP topic modeling (e.g., Latent Dirichlet Allocation) on the corpus of all organization-wide pub/sub topic names to discover legitimate 'themes' of communication. Score new topics based on their fit to these themes and flag any that are poor fits as anomalous."
          },
          {
            "description": "A temporal correlation is observed on a host where a network connection using a pub/sub protocol is immediately followed by a high-risk process execution event (e.g., PowerShell, rundll32.exe, or an executable in a non-standard path).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek mqtt.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations and servers); Domain Controllers",
            "action": "1. (Symbolic) Create a SIEM correlation rule that triggers when a network connection event from Zeek (e.g., from mqtt.log) is followed within 30 seconds by a process creation event (Windows Event ID 4688) on the same host for a process name like 'powershell.exe', 'cmd.exe', or 'rundll32.exe' with suspicious command-line arguments. 2. (Statistical) Baseline the frequency of co-occurrence of pub/sub traffic and suspicious process executions for each host. Alert if the rate of this correlated activity on a given day exceeds the 99th percentile of the host's 30-day rolling average. 3. (Machine Learning) Train a classifier (e.g., Random Forest) to predict if a process execution is malicious based on features from a preceding network event. Features should include time delta, protocol, remote IP reputation, process name, and parent process. Deploy the model to score correlated event pairs in real-time."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]