[
  {
    "information_requirement": "Has the adversary executed commands using software deployment tools?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1072",
        "name": "Software Deployment Tools",
        "evidence": [
          {
            "description": "A software package deployed by a centralized management tool has a file hash or name that matches a known malicious indicator.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator",
            "action": [
              "Query deployment tool logs and process creation events (Windows Event ID 4688) to extract file hashes (SHA256) and executable names. Correlate these observables against a threat intelligence feed of known malicious indicators. Generate an alert for any match.",
              "For all deployed package names, calculate the character entropy and n-gram frequencies. Establish a baseline of these metrics for legitimate software names in the environment. Flag package names with scores in the 99th percentile or higher for entropy or n-gram rarity, as this may indicate randomization or obfuscation.",
              "Implement a pre-trained classification model (e.g., Random Forest, Gradient Boosting) that uses static binary features (PE headers, imported functions, string entropy). For each newly deployed binary, extract its features and use the model to predict if it is benign or malicious. Flag deployments classified as malicious with high confidence for immediate analyst review."
            ]
          },
          {
            "description": "A command line or script deployed via a software management tool contains suspicious commands, obfuscation techniques, or parameters.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator",
            "action": [
              "Apply regular expressions to scan command-line arguments (from Windows Event ID 4688) and script block content (from PowerShell Event ID 4104) associated with deployment jobs. Search for high-fidelity patterns of malicious activity, such as 'powershell -enc', 'IEX(New-Object Net.WebClient).DownloadString', or credential dumping commands like 'reg save HKLM\\SAM'. Alert on any match.",
              "For all command lines executed by deployment tools, calculate the length and character entropy. Establish a baseline profile for legitimate administrative scripts. Generate an alert for commands that are statistical outliers, such as those exceeding the 98th percentile for length or entropy, which can indicate complex or obfuscated malicious payloads.",
              "Deploy a Natural Language Processing (NLP) model trained on a labeled dataset of benign and malicious scripts. Pre-process script content from deployment jobs by tokenizing and vectorizing the text. Use the model to classify the script's intent (e.g., benign, reconnaissance, execution, persistence). Flag any script classified with malicious intent for analyst investigation."
            ]
          },
          {
            "description": "A software deployment is initiated by an anomalous user, at an unusual time, or targets a non-standard set of systems, deviating from established operational baselines.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4624",
              "Active Directory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator",
            "action": [
              "Maintain an explicit allow-list of administrative accounts and groups authorized to initiate software deployments. Create a rule to alert whenever a deployment job is initiated by an account not on this list. Correlate the source IP address with an allow-list of administrative workstations or VPN subnets.",
              "For each authorized administrator, build a historical profile of deployment activity including: 1) time-of-day/day-of-week distribution, 2) frequency of deployments, and 3) typical size and composition of target system groups. Use a scoring system where deviations (e.g., job at 3 AM, job on a holiday, job targeting a single Tier 0 asset) contribute to a risk score. Alert when a job's cumulative risk score exceeds a dynamic threshold, such as 3 standard deviations from the user's mean risk score.",
              "Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) on the global volume and frequency of software deployment jobs. The model learns the normal rhythm of patching and software pushes (e.g., weekly Patch Tuesday). Flag any significant deviations from the forecast, such as a sudden spike in deployments, which could indicate mass malicious activity."
            ]
          },
          {
            "description": "A software deployment is immediately followed by suspicious post-execution activity on the target endpoint, such as new service creation, persistence mechanisms, or external network communications.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688",
              "Windows Event ID 7045",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints, Network Egress Points (Firewalls, Proxies), SIEM/Log Aggregator",
            "action": [
              "Create a SIEM correlation rule that triggers when, on the same host and within a 5-minute window: 1) a process is created by the deployment agent (e.g., ccmexec.exe), AND 2) that new process's ProcessID is subsequently associated with a new service installation (Windows Event ID 7045) OR initiates a network connection (from Zeek conn.log) to a non-internal, non-allow-listed destination IP address. Generate a high-priority alert on this sequence.",
              "For processes spawned by software deployment tools, baseline the frequency of subsequent follow-on events (e.g., child processes, network connections, registry modifications). Calculate the rarity of each observed event chain. Alert when a deployment leads to a statistically rare sequence, such as a process that has never previously created a network connection doing so, particularly if the destination IP has a low reputation score or is a raw IP address.",
              "Construct a graph-based model where nodes represent users, deployment jobs, processes, and network endpoints, and edges represent causal relationships (e.g., 'user' initiates 'job', 'job' creates 'process'). Train the model to recognize normal subgraphs of activity. Flag new, structurally anomalous subgraphs that represent novel chains of behavior, such as a deployment leading directly to a connection to a known malicious C2 domain."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary moved laterally using software deployment tools?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1072",
        "name": "Software Deployment Tools",
        "evidence": [
          {
            "description": "A software deployment job targets an unusual system or group of systems for the initiating user, and the deployed package matches a known malicious tool.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688",
              "Active Directory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, Tier 0/1 Servers, All Corporate Endpoints, SIEM/Log Aggregator",
            "action": [
              "From deployment logs, identify jobs targeting systems outside the initiator's normal administrative scope (defined by AD groups or asset tags). Extract the SHA256 hashes of packages in these jobs and join them against a CTI feed specifically curated for RATs, credential harvesters, and lateral movement frameworks (e.g., Cobalt Strike, PsExec). Alert on any match.",
              "Build a baseline of which administrators deploy to which groups of systems. For each new deployment, calculate a 'lateral movement risk score' based on the rarity of the source-user-to-destination-asset pairing. If a deployment to a high-value or unusual host group occurs (e.g., IT Workstation Admin deploying to Domain Controllers), and the package name has high entropy, significantly increase the risk score and alert if it exceeds a 99th percentile threshold.",
              "Use a graph-based clustering algorithm (e.g., K-Means on node embeddings) to group assets based on historical deployment patterns (e.g., 'Workstation Patch Group', 'Server Patch Group'). Train a classifier to predict the likely destination group for any new deployment initiated by a user. Flag deployments that are misclassified with high confidence as potential lateral movement."
            ]
          },
          {
            "description": "A script executed via a software deployment job contains commands or parameters for remote execution tools and protocols used for lateral movement.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator",
            "action": [
              "From process creation events (Windows Event ID 4688) and script block logs (PowerShell Event ID 4104) originating from the deployment agent, use regular expressions to scan for patterns indicating lateral movement tool usage. Alert on matches for 'psexec.exe \\\\', 'winrs.exe -r:', 'wmic /node:', or 'schtasks /create /s', as these are highly anomalous in this context.",
              "Analyze the frequency of all command-line parameters used in deployment job scripts. While parameters like '/install' are common, remote-access parameters like '-r:', '/node:', or '/s' (in context of remote tools) should be extremely rare. Establish a frequency count for all parameters and alert on the appearance of any parameter that falls below a low-frequency threshold (e.g., seen fewer than 5 times in the last 90 days).",
              "Train a sequence-to-sequence model (e.g., an LSTM autoencoder) on legitimate command-line argument sequences from deployment jobs. The model learns the normal structure and order of commands. Feed new command lines into the model and flag any with a high perplexity or reconstruction error score, indicating the model finds the sequence surprising and anomalous, which is characteristic of ad-hoc malicious commands."
            ]
          },
          {
            "description": "A software deployment job is initiated from a source IP address or hostname that is not an approved administrative console or is associated with a recent, unrelated security alert.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Administrative Workstations, VPN Concentrators, SIEM/Log Aggregator",
            "action": [
              "Extract the source IP address for every initiated deployment job from the tool's logs. Maintain a strict allow-list of IP ranges for administrative subnets and VPNs. If a job is initiated from an IP outside this list, or from an IP associated with an active security incident, generate a critical alert.",
              "For each administrator, baseline their typical source IP addresses and subnets for initiating deployments by analyzing logon events (Windows Event ID 4624) on management servers. Calculate the rarity of a user logging in from a given IP/subnet (enriched with GeoIP data from Zeek conn.log). If a deployment is initiated following a login from a statistically improbable location (e.g., a country with no prior logins), flag the activity for review.",
              "Use an unsupervised learning model, like an autoencoder, trained on multi-dimensional session data for administrators (e.g., source IP, time of day, day of week, number of actions). The model learns to reconstruct 'normal' sessions with low error. A session involving a login from a rare location followed by a sensitive software deployment would have a high reconstruction error, flagging it as an anomaly indicative of session hijacking."
            ]
          },
          {
            "description": "The targeting pattern of a software deployment job is small and selective, suggesting 'island-hopping' between critical assets rather than broad, automated patching.",
            "data_sources": [
              "Software deployment tool logs",
              "Active Directory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, Database Servers, SIEM/Log Aggregator",
            "action": [
              "Create a rule that alerts when a single deployment job targets a small set of hosts (e.g., <5) that are members of disparate, high-value Active Directory groups (e.g., one 'Domain Controller', one 'PCI Server', one 'C-Suite Workstation'). This cross-functional, small-batch targeting is highly indicative of manual lateral movement.",
              "Analyze the distribution of target group sizes for all deployment jobs. The distribution will likely be bimodal (very large groups for patches, single-digit groups for one-offs/tests). Any job whose target count falls into a statistically sparse middle range (e.g., 5-20 hosts) and occurs outside a designated change window should be flagged. This isolates unusual batch sizes that do not fit normal operational patterns.",
              "Model lateral movement as a path-finding problem on a graph of network assets, where nodes are weighted by asset criticality. Use reinforcement learning to train an agent to identify high-value paths (sequences of host deployments) an attacker might take to reach a goal. Monitor real deployment sequences and flag any that closely match the high-reward paths identified by the RL agent."
            ]
          },
          {
            "description": "A privileged account initiates a software deployment that is uncharacteristic for that account's established role and historical behavior, such as deploying a novel package type or targeting an unusual asset group.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Active Directory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator",
            "action": [
              "For each administrative role (e.g., Server Admin, Workstation Admin), define the expected package types and target asset collections they manage. Create a policy that alerts if an account from one role (e.g., Workstation Admin) attempts to deploy a package to a collection from another role (e.g., a Domain Controller collection), constituting a privilege violation.",
              "For each privileged account, create a historical baseline of activity including: 1) entropy of deployed package names, 2) set of target collections, and 3) time-of-day. Continuously score new activity against this baseline. Alert if an account's activity deviates by more than 3 standard deviations on multiple metrics simultaneously (e.g., a new high-entropy package name deployed to a novel collection at 2 AM).",
              "Use a peer group analysis model (e.g., DBSCAN or K-Means clustering) to group administrators with similar deployment behaviors based on features like target systems, time, and package types. When an administrator's action falls significantly outside the centroid of their identified peer group, flag it as an anomaly. This can detect a compromised account being used in a manner inconsistent with the legitimate user and their direct colleagues."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]