[
  {
    "information_requirement": "Has the adversary executed commands using the Windows command shell?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.003",
        "name": "Windows Command Shell",
        "evidence": [
          {
            "description": "A cmd.exe process is executed with command-line arguments containing a known malicious artifact (IP address, domain, file hash, or signature string) from a threat intelligence source.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Threat Intelligence Platform Feeds",
            "action": [
              "Symbolic: Parse command lines from Windows Event ID 4688. Extract all IP addresses, domains, and file hashes using regular expressions. Match extracted artifacts against a high-confidence, curated threat intelligence feed. Generate a high-severity alert on any match.",
              "Statistical: For all domains extracted from cmd.exe command lines, calculate their prevalence across the enterprise over the last 30 days. Flag domains that fall below a low percentile threshold (e.g., 1st percentile) as rare and potentially suspicious. Correlate with Zeek dns.log data to confirm rarity of DNS requests for that domain.",
              "Machine Learning: Develop a string-based classification model (e.g., using a Bag-of-Words or TF-IDF approach with a Logistic Regression or SVM classifier) trained on known malicious and benign command lines. Apply the model to all new cmd.exe command lines to classify them as malicious or benign in real-time."
            ]
          },
          {
            "description": "A cmd.exe process is executed with a command line containing patterns indicative of obfuscation, such as excessive use of carets (^), environment variable substitution for string concatenation, or redirection to nul.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Apply a library of regular expressions to cmd.exe command lines from Event ID 4688 to detect known obfuscation patterns. Patterns must include: multiple consecutive carets (^^), use of delayed environment variable expansion (!var!), redirection to nul (>nul 2>&1), and character substitution using environment variables (e.g., %COMSPEC:~0,1% for 'c').",
              "Statistical: Calculate the character entropy for each cmd.exe command line. Establish a baseline entropy score for typical commands within the environment. Flag commands with an entropy score exceeding a high percentile threshold (e.g., 95th percentile) as potentially obfuscated or packed.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on feature vectors derived from command lines (features include length, special character count, entropy, and n-gram frequencies). Manually investigate clusters that are small and distant from the large, dense clusters representing common, benign commands."
            ]
          },
          {
            "description": "A single parent process spawns a sequence of cmd.exe child processes executing common discovery commands (e.g., whoami, ipconfig, net user, systeminfo, tasklist) within a short time frame.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Authentication Logs on Domain Controllers",
            "action": [
              "Symbolic: Create a rule that triggers when the same Parent Process ID (from Event ID 4688) spawns cmd.exe to execute three or more distinct discovery commands (e.g., whoami, net *, ipconfig, systeminfo, tasklist, query *, nltest) within a 5-minute window.",
              "Statistical: For each user, calculate the frequency distribution of their command sequences over a rolling 30-day window. Identify command sequences that are statistically rare for a specific user or user group (e.g., a sequence that has never been seen before or is in the bottom 1% of frequency).",
              "Machine Learning: Model user command behavior as a Markov chain, where each command is a state and transition probabilities are learned from historical data. Use this model to calculate the probability of an observed sequence of commands. Flag command sequences with a very low probability as anomalous and potentially malicious."
            ]
          },
          {
            "description": "A cmd.exe process is created by a parent process that does not typically launch command shells, such as a Microsoft Office application (WINWORD.EXE, EXCEL.EXE), a web browser (chrome.exe), or a PDF reader (AcroRd32.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints (Workstations)",
            "action": [
              "Symbolic: Create a rule to alert whenever cmd.exe is created (Event ID 4688) and the Parent Process Name is one of: WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE, OUTLOOK.EXE, chrome.exe, msedge.exe, firefox.exe, AcroRd32.exe. This is a high-fidelity indicator.",
              "Statistical: For every parent-child process relationship in the environment, calculate its frequency. Create a baseline of all observed parent-child pairs. Identify any cmd.exe process creations where the parent-child pair has a frequency below a set threshold (e.g., observed less than 5 times in the last 90 days) or is a new, never-before-seen pair.",
              "Machine Learning: Train a classification model (e.g., a random forest) on features of parent-child process pairs (e.g., parent name, child name, user context, parent path). Use the model to classify each new cmd.exe creation event as 'benign' or 'suspicious' based on its parent process characteristics."
            ]
          },
          {
            "description": "A cmd.exe process is observed making a direct outbound network connection to an external IP address, which is highly unusual behavior for the command shell itself.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Network Egress Points (Firewalls, Proxies); DNS Servers",
            "action": [
              "Symbolic: Correlate process creation events (Event ID 4688 for cmd.exe) with network connection creation events (Event ID 5156) using the Process ID. Alert on any instance where the Application field in Event ID 5156 is \\Device\\HarddiskVolume...\\cmd.exe and the DestAddress is a non-private, non-whitelisted external IP address.",
              "Statistical: Using Zeek conn.log data, enrich network connections made by cmd.exe with destination country and ASN. For each host, baseline the typical destination countries. Flag connections from cmd.exe to countries that are statistically rare (e.g., below 5th percentile of frequency) or have never been seen before from that host or its peer group.",
              "Machine Learning: Implement a time-series anomaly detection model on the volume of outbound data (orig_bytes in Zeek conn.log) for connections initiated by cmd.exe. A sudden spike in data transfer volume from a cmd.exe process, deviating significantly from the established baseline, could indicate data exfiltration or payload download."
            ]
          },
          {
            "description": "A file with a .bat or .cmd extension is written to a non-standard or world-writable directory (e.g., %TEMP%, C:\\Users\\Public) and is subsequently executed by a cmd.exe process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Profile Directories on Endpoints; Temporary File Locations on Servers and Workstations; Shared Network Drives",
            "action": [
              "Symbolic: Monitor for file write events (Event ID 4663) where Object Name ends in .bat or .cmd and the path is within %APPDATA%, %TEMP%, or C:\\Users\\Public\\*. Correlate this with a process creation event (Event ID 4688) where the command line executes that same file path within a 2-minute window.",
              "Statistical: Calculate the Shannon entropy of the filenames for all .bat and .cmd files being created. Establish a baseline for typical script filenames. Flag the creation of batch files with abnormally high entropy scores (e.g., a83hfg92.bat), as this often indicates programmatic generation.",
              "Machine Learning: Train a classification model to distinguish between legitimate and malicious script paths. Features can include path depth, directory name tokens, presence of user profile strings, and directory permissions. Use this model to score the 'suspiciousness' of the location for any new .bat or .cmd file creation."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]