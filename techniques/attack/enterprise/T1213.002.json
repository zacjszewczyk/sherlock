[
  {
    "information_requirement": "Is the adversary collecting sensitive information from internal SharePoint repositories?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1213.002",
        "name": "Sharepoint",
        "evidence": [
          {
            "description": "A user account accesses a SharePoint document or list item whose title or content contains sensitive keywords (e.g., 'password', 'network diagram', 'API key') and the access is anomalous based on the user's role, their historical access patterns, or the source IP address.",
            "data_sources": [
              "SharePoint Audit Logs (AuditData.Read)",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SharePoint Farm Servers, Domain Controllers, Internet Gateway/VPN Concentrators",
            "action": "1. (Symbolic) Create a watchlist of sensitive keywords ('password', 'secret', 'API_key', 'network_diagram'). Create a rule to trigger an alert when a SharePoint read event (AuditData.Read) for a document matching a keyword is generated by a user not in a pre-approved Active Directory group for that data type. 2. (Statistical) For each user, calculate a baseline of keyword-hit frequency per day. Alert if a user's daily keyword-hit count exceeds the 95th percentile of their own historical distribution or their peer group's distribution. 3. (ML) Train a classification model (e.g., Random Forest) on features like user role, source IP reputation, time of day, and historical access patterns to classify each sensitive document access as 'benign' or 'suspicious'. A high probability 'suspicious' classification triggers an alert."
          },
          {
            "description": "HTTP requests to SharePoint servers contain User-Agent strings, API call patterns (e.g., /_vti_bin/, /_api/web/lists), or query parameters associated with known SharePoint reconnaissance tools. Alternatively, PowerShell script block logs on client machines show execution of SharePoint enumeration cmdlets.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4104",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SharePoint Web Front-End Servers, User Workstations, Network Egress/Ingress Points",
            "action": "1. (Symbolic) Deploy regular expression rules against Zeek http.log `user_agent` and `uri` fields to detect IOCs for tools like SharePointMapper or PowerSploit (e.g., `/_vti_bin/usergroup.asmx`). Search Windows Event ID 4104 logs for cmdlets like `Get-SPOSite` or `Get-SPOList` used outside of known administrative scripts. 2. (Statistical) Calculate the Shannon entropy of the URI query parameters for each source IP interacting with the SharePoint API. A sudden spike in entropy for a given IP can indicate scanning. Alert if the entropy score for a 5-minute window exceeds 3 standard deviations from the global baseline for SharePoint API traffic. 3. (ML) Use a time-series anomaly detection model (e.g., LSTM Autoencoder) on the frequency of `/_api/` and `/_vti_bin/` calls per user or source IP. The model learns normal request patterns and flags sessions with anomalous sequences or volumes of API calls."
          },
          {
            "description": "A single user account accesses a number of unique SharePoint files, pages, or sites that is statistically significant compared to the user's own 30-day baseline and the baseline of their peer group.",
            "data_sources": [
              "SharePoint Audit Logs (AuditData.Read)",
              "Active Directory logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SharePoint Farm Servers, Domain Controllers",
            "action": "1. (Symbolic) Create a high-threshold rule that alerts if any single user account accesses more than 1,000 unique documents in a one-hour period, serving as a tripwire for egregious collection. 2. (Statistical) For each user, calculate a rolling 30-day baseline (mean and standard deviation) of unique documents accessed per hour. Generate an alert if a user's hourly access count exceeds their baseline by 3 standard deviations (Z-score > 3) and also exceeds the 99th percentile for their departmental peer group. 3. (ML) Develop a user-level anomaly detection model using clustering (e.g., DBSCAN) on features like 'number of files accessed', 'diversity of site collections accessed', and 'off-hours access ratio'. Users who do not fall into the main 'normal user' cluster are flagged as outliers for investigation."
          },
          {
            "description": "An Active Directory account belonging to a highly privileged group (e.g., Domain Admins, Enterprise Admins) authenticates to and accesses resources on a SharePoint server, where such activity is not part of documented administrative duties.",
            "data_sources": [
              "SharePoint Audit Logs (AuditData.Read)",
              "Windows Event ID 4624",
              "Active Directory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SharePoint Farm Servers, Domain Controllers",
            "action": "1. (Symbolic) Create and maintain a watchlist of all user accounts in privileged AD groups (e.g., 'Domain Admins'). Generate a critical alert for any SharePoint access event (read, write, browse) attributed to a user on this watchlist. 2. (Statistical) If a privileged account has a documented, legitimate reason for access, baseline that specific activity. Any access outside of the baselined document path, time of day, or source workstation should trigger an alert based on deviation from the norm. 3. (ML) Use a one-class SVM model trained exclusively on documented, legitimate administrative access patterns (if any exist). Any SharePoint access by a privileged account that the model classifies as an anomaly should trigger an immediate high-priority alert."
          },
          {
            "description": "A user account accesses sensitive documents on SharePoint, and within a 30-minute window, the source endpoint associated with that user initiates network connections to internal file shares or external destinations not previously associated with the user's profile.",
            "data_sources": [
              "SharePoint Audit Logs (AuditData.Read)",
              "Zeek conn.log",
              "Windows Event ID 5145",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SharePoint Farm Servers, Internal File Servers, User Workstations, Network Core Switches",
            "action": "1. (Symbolic) Create a correlation rule: If a user triggers a 'sensitive SharePoint document access' alert, and within 30 minutes the same user's IP is seen in Zeek conn.log connecting to an unusual internal host on port 445 (SMB), escalate the alert priority. 2. (Statistical) For each user, establish a baseline of common internal IP destinations and data transfer volumes. Following a SharePoint access event, if the user connects to an internal destination they have never connected to before, or if the data volume transferred exceeds 3 standard deviations of their typical session volume, flag the sequence. 3. (ML) Develop a sequence analysis model (e.g., a Hidden Markov Model) where states represent user actions ('browse SharePoint', 'access sensitive file', 'connect to file share'). An observed sequence of 'access sensitive file' -> 'connect to new internal share' would have a low probability and trigger a high-confidence alert."
          },
          {
            "description": "A user account downloads a volume of data or number of files from SharePoint that is statistically anomalous compared to their history. This activity is followed by either the execution of an archival utility (e.g., 7z.exe) on the user's endpoint or a large data transfer to an external destination.",
            "data_sources": [
              "SharePoint Audit Logs (FileDownloaded)",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SharePoint Farm Servers, User Workstations, Network Egress/Ingress Points",
            "action": "1. (Symbolic) Create a correlation rule: If a SharePoint 'FileDownloaded' event for a user exceeds 500MB in 1 hour AND within the next hour a process creation event (Windows Event ID 4688) for `7z.exe` or `rar.exe` is observed on that user's workstation, generate a high-priority alert. 2. (Statistical) For each user, calculate a rolling 30-day baseline for total download volume from SharePoint per day. Alert if a user's daily download volume exceeds the 98th percentile of their own historical data. 3. (ML) Train a regression model to predict a user's expected daily outbound data transfer volume based on their role and recent SharePoint activity. If the actual outbound data transfer observed in Zeek conn.log significantly exceeds the model's prediction (a large residual error), flag it as a potential exfiltration event."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]