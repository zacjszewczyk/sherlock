[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying the Registry?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1112",
        "name": "Modify Registry",
        "evidence": [
          {
            "description": "A registry value written to a common persistence key (e.g., Run, RunOnce, Services) matches a known malicious file path, command-line argument, or CLSID from threat intelligence.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows endpoints, Windows servers, Domain Controllers, Application servers",
            "action": [
              "Symbolic Logic: Ingest a threat intelligence feed of known-bad indicators (file paths, commands, CLSIDs) associated with persistence. Create a detection rule that monitors registry modification events (Windows Event ID 4657) targeting persistence keys. Trigger a high-severity alert if the 'New Value' field in the event exactly matches an indicator from the feed.",
              "Statistical Method: For each persistence-related registry key, profile the normal frequency of modification and the processes that perform the modification (from correlated Windows Event ID 4688). A modification by a process that has historically never or rarely (<1st percentile of activity) written to that key is anomalous. Score the anomaly based on the rarity of the process-key pair.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using labeled historical registry modification data. Features should include process name, parent process name, process command line, registry key path, length of the new value, and entropy of the new value. The model will predict the probability that a new modification to a persistence key is malicious."
            ]
          },
          {
            "description": "The command-line utility `reg.exe` is used to add or modify a persistence key, or its command line arguments contain patterns indicative of key-hiding techniques (e.g., embedded null characters).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Windows servers, Development environments",
            "action": [
              "Symbolic Logic: Monitor process creation events (Windows Event ID 4688) for `reg.exe` where the command line includes 'add' or 'import' and targets a known persistence key path (e.g., `HKCU\\...\\Run`). Also, use regular expressions to search command lines for patterns used by tools like Reghide, such as `reg.exe add \"HKLM\\...\\^@keyname\"`.",
              "Statistical Method: Analyze the command-line arguments of `reg.exe` executions. Calculate the argument length and Shannon entropy. Establish a baseline for normal administrative usage. Flag executions where the command-line entropy or length exceeds a dynamic threshold (e.g., 98th percentile), which may indicate obfuscated or packed commands.",
              "Machine Learning: Use a sequence analysis model to detect anomalous command sequences. Train the model on normal terminal sessions. An anomalous sequence could be a file download via PowerShell followed immediately by a `reg.exe add` command to a persistence key, which deviates from learned benign administrative patterns."
            ]
          },
          {
            "description": "A process not associated with software installation or system administration (e.g., a web browser, document reader) modifies a registry key commonly used for persistence.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances, Critical application servers",
            "action": [
              "Symbolic Logic: Create and maintain an explicit allow-list of processes (e.g., `msiexec.exe`, `setup.exe`, `svchost.exe`) expected to modify persistence registry keys. Alert on any registry modification (Windows Event ID 4657) to a key on the persistence watchlist where the modifying process name (from correlated Event ID 4688) is not on the allow-list.",
              "Statistical Method: For each host, build a historical frequency distribution of process names that modify persistence keys. A modification by a process that falls in the bottom 5th percentile of frequency (a rare modifier) is flagged as a statistical outlier requiring investigation. This can uncover legitimate but rare software installers as well as malicious activity.",
              "Machine Learning: Train an unsupervised anomaly detection model, such as an Isolation Forest or One-Class SVM, on legitimate (process_name, target_registry_key_path) pairs. The model learns the profile of normal system behavior and will flag any new, unseen pair that deviates significantly from this profile as a potential threat."
            ]
          },
          {
            "description": "A persistence-related registry key on a server is modified remotely from a source IP address or user account not associated with system administration.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 5145",
              "Zeek dce_rpc.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, File Servers, Internal network segments (East-West traffic), VPN gateways",
            "action": [
              "Symbolic Logic: Correlate remote registry access events (Windows Event ID 5145 or Zeek `dce_rpc.log` for the `winreg` named pipe) with registry modification events (Windows Event ID 4657) on the target host. Alert if the source IP of the remote access is not within a defined administrative subnet or if the source account (from logon event 4624) is not in a designated administrative group.",
              "Statistical Method: For each server, build a statistical profile of legitimate remote administration. This profile includes source subnets, source hostnames, and user accounts that normally perform remote registry modifications. A modification from a source that is a statistical outlier (e.g., a source subnet never seen before, or an account performing this action for the first time) generates a risk score. A high score triggers an alert.",
              "Machine Learning: Model the network as a graph where users and machines are nodes and remote registry operations are directed edges. Use community detection algorithms to identify normal clusters of administrative activity. An edge that connects a node from a non-administrative cluster (e.g., 'Marketing Workstations') to a sensitive server node and corresponds to a registry modification is a high-confidence anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by modifying the Registry?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1112",
        "name": "Modify Registry",
        "evidence": [
          {
            "description": "A registry key controlling a security feature (e.g., AV, EDR, Windows Defender) is modified to a value known to disable or degrade its function.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers with security software (AV/EDR) installed.",
            "action": [
              "Symbolic Logic: Maintain a list of specific registry key-value pairs known to disable security tools (e.g., `HKLM\\...\\DisableAntiSpyware` set to `0x1`). Create a rule that monitors Windows Event ID 4657 and triggers a critical alert on an exact match of the key path, value name, and the 'disabled' data value.",
              "Statistical Method: For a watchlist of security-related registry keys, baseline their normal values across the enterprise. Alert when a value is changed to a known 'insecure' state. Track the rate of these specific modifications per host; a sudden spike in a host's 'security degradation' event count compared to its own baseline is a statistical anomaly.",
              "Machine Learning: Train a supervised classification model on features from registry modification events (Process Name, Key Path, Old Value, New Value) that have been labeled as 'benign' or 'malicious-tampers-defenses' by analysts or threat intelligence. Use the model to predict the probability that a new, unseen modification to a security key is malicious."
            ]
          },
          {
            "description": "A binary payload with a large size or high Shannon entropy is written to a registry key, indicating storage of an obfuscated or encrypted executable or script.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows hosts, especially those with PowerShell or scripting engines enabled.",
            "action": [
              "Symbolic Logic: Create a rule that triggers when a registry value of type REG_BINARY is created or modified, its size exceeds a static threshold (e.g., 4096 bytes), and the target key path is not on a pre-approved allow-list of keys known to store large binary data (e.g., driver caches, user profiles).",
              "Statistical Method: For every registry value modification (Windows Event ID 4657), calculate the Shannon entropy of the new value data. Establish a baseline entropy distribution for different key path prefixes (e.g., HKLM\\Software vs HKCU\\...). An event where the entropy exceeds the 99th percentile for its key path category, or has an absolute value > 7.5, is a high-confidence indicator of encrypted or packed data.",
              "Machine Learning: Train a classifier to distinguish between benign and malicious registry value data. Use features such as value size, entropy, a byte-frequency histogram of the value's content, and the key path. This model can identify payloads that use sophisticated obfuscation techniques that simple entropy checks might miss."
            ]
          },
          {
            "description": "A rapid sequence of modifications targeting multiple distinct security or logging-related registry keys occurs on a single host within a short time frame.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, DNS resolvers, Internet gateways, Security Operations Center (SOC) infrastructure",
            "action": [
              "Symbolic Logic: Define a set of 'critical security key' modifications. Use a streaming correlation engine to detect when a single process (via Process ID from event 4657) performs more than N (e.g., 3) of these modifications on the same host within a short window (e.g., 60 seconds). This composite event represents a 'defense evasion swarm' and should be a high-priority alert.",
              "Statistical Method: Count the number of security-related registry modifications per host per minute. Use a moving average to establish a dynamic baseline of this activity for each host. An alert is generated when the count in a given minute exceeds a statistical threshold (e.g., 4 standard deviations above the moving average), indicating an abnormal burst of tampering activity.",
              "Machine Learning: Use a sequence-to-sequence autoencoder (e.g., using LSTMs) trained on normal sequences of system events (registry mods, process creations, network connections). A sequence containing a burst of security key modifications followed by an external network connection to a newly observed domain (from Zeek dns.log) will have a high reconstruction error, flagging it as a highly anomalous and suspicious attack pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]