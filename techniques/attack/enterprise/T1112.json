[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying the Registry?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1112",
        "name": "Modify Registry",
        "evidence": [
          {
            "description": "A new or modified registry value within a known persistence location (e.g., HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce) contains a value string that exactly matches a known-bad file path, command, or CLSID from an active threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows endpoints, Windows servers, Domain Controllers, Application servers",
            "action": [
              "Create a SIEM rule that monitors for Windows Event ID 4657 (A registry value was modified). The rule should trigger if the target key path is a known persistence location (e.g., Run, RunOnce, Userinit, service paths) and the 'New Value' data exactly matches an entry in a threat intelligence feed of malicious file paths, commands, or CLSIDs.",
              "For each host, establish a baseline of (process, registry key) modification pairs over a 30-day period. Calculate the frequency of each pair. Generate an alert if a process modifies a persistence key and this (process, key) pair falls below the 1st percentile of observed frequencies for that host, indicating a rare event.",
              "Develop and deploy a Random Forest classification model trained on labeled registry modification events (Windows Event ID 4657 correlated with 4688). Use features such as process name, parent process name, command line arguments, target registry key path, length of the new value, and the Shannon entropy of the new value. The model should classify each modification to a persistence key as benign or malicious, alerting on predictions with a high probability of being malicious (e.g., > 0.85)."
            ]
          },
          {
            "description": "A process creation event is observed for `reg.exe` with command-line arguments that include 'add' or 'import' targeting a known persistence key path, or the command line contains patterns indicative of obfuscation, such as embedded null characters (`^@`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Windows servers, Development environments",
            "action": [
              "Create a SIEM rule to monitor process creation events (Windows Event ID 4688 or Sysmon Event ID 1) for an image path ending in `reg.exe`. The rule should trigger if the command line contains 'add' or 'import' and targets a known persistence key, or if the command line matches a regular expression for key-hiding techniques, such as `.*\\\\^@.*` to detect embedded null characters.",
              "For all `reg.exe` executions, calculate the Shannon entropy and length of the command line. Maintain a 30-day rolling baseline of these metrics. Generate an alert when a new execution's entropy or length exceeds the 98th percentile of the baseline distribution, indicating potentially obfuscated or unusually long commands.",
              "Implement a sequence-based anomaly detection model (e.g., using an LSTM autoencoder) on event chains per host. A sequence is a time-ordered list of events like process creation, network connection, and registry modification. Train the model on benign administrative activity. Flag sequences with high reconstruction error, particularly those involving a network download (e.g., from `bitsadmin` or `powershell.exe`) followed by a `reg.exe add` command within a short time window (e.g., < 5 minutes)."
            ]
          },
          {
            "description": "A registry modification event targeting a persistence key is initiated by a process (e.g., `winword.exe`, `acrord32.exe`, `chrome.exe`) that is not on an established allow-list of software installers or system management tools.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances, Critical application servers",
            "action": [
              "Maintain an explicit allow-list of process names (e.g., `msiexec.exe`, `setup.exe`, `svchost.exe`, `gpupdate.exe`) authorized to modify persistence-related registry keys. Create a SIEM rule to correlate Windows Event ID 4657 (registry mod) with Windows Event ID 4688 (process creation) and alert if the modifying process name is not on the allow-list.",
              "For each host, calculate a rarity score for each process that modifies a persistence key based on its historical frequency. The score could be `1 / (frequency + 1)`. Alert when a process with a rarity score exceeding a defined threshold (e.g., in the top 5% of scores) modifies a persistence key, indicating it is a statistically uncommon event for that host.",
              "Deploy an Isolation Forest model trained on a large dataset of benign (process_name, target_registry_key_path) pairs from across the enterprise. The model will learn the density of normal behavior. For each new modification event, score the corresponding (process, key) pair. Flag pairs that the model identifies as anomalies (outliers), indicating they do not conform to learned legitimate patterns."
            ]
          },
          {
            "description": "A remote registry modification (via the `winreg` service) targeting a persistence key on a server originates from a source IP or user account not on a pre-defined list of administrative users and workstations.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 5145",
              "Zeek dce_rpc.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, File Servers, Internal network segments (East-West traffic), VPN gateways",
            "action": [
              "Create a correlation rule that joins network events with host events. First, identify remote registry operations by filtering Zeek `dce_rpc.log` for endpoint 'winreg' or Windows Event ID 5145 for `Pipe\\\\winreg`. Correlate this with a subsequent Windows Event ID 4657 (registry modification) on the destination host. Trigger an alert if the source IP is outside of designated administrative subnets or the authenticating user (from a correlated logon event 4624) is not a member of an administrative group.",
              "For each server, maintain a baseline of (source_IP, user_account) tuples that perform remote registry modifications. Use a 90-day lookback window. When a new remote modification occurs, check if the (source_IP, user_account) tuple has been seen before. If it is a new pair, assign a high risk score and alert. If it is an existing pair, check its frequency; if it is in the lowest 5th percentile of activity, assign a medium risk score.",
              "Construct a network graph where nodes are users and hosts, and directed edges represent remote registry operations. Apply a community detection algorithm (e.g., Louvain Modularity) to identify clusters of normal administrative behavior. An alert is generated when a new edge (remote registry operation) is created that bridges two previously disconnected communities, especially if one is a non-administrative cluster and the target is a high-value server."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by modifying the Registry?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1112",
        "name": "Modify Registry",
        "evidence": [
          {
            "description": "A registry key responsible for a security control (e.g., Windows Defender's `DisableAntiSpyware`, AMSI's `AmsiEnable`, or an EDR's tamper protection key) is created, modified, or deleted to a state that disables or weakens the control.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4660",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers with security software (AV/EDR) installed.",
            "action": [
              "Maintain a watchlist of critical security registry keys and their 'secure' values. Create a SIEM rule that monitors Windows Event ID 4657 (registry modification) and 4660 (object deletion). Trigger a critical alert if a key on this watchlist is modified to a known 'insecure' value (e.g., `DisableAntiSpyware` set to `1`) or if the key is deleted.",
              "Baseline the state of critical security registry keys across all hosts daily. Calculate the percentage of non-compliant hosts (hosts with insecure settings). Alert if this percentage increases by a statistically significant amount (e.g., > 3 standard deviations from the 30-day mean percentage), indicating a possible widespread tampering campaign.",
              "Deploy a supervised classification model (e.g., Gradient Boosting) specifically trained to identify security control tampering. Features should include the modifying process name, its parent, its command line, the target key, and the new value. The model's training data must include examples of both legitimate changes (e.g., by GPO or admin tools) and malicious ones. Alert on any modification classified as malicious with high confidence (> 0.9)."
            ]
          },
          {
            "description": "A registry value is created or modified where the value's data is of type `REG_BINARY` and its size exceeds a defined threshold (e.g., 4KB), or its Shannon entropy is high (e.g., > 7.0), suggesting the storage of obfuscated/encrypted code or data.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows hosts, especially those with PowerShell or scripting engines enabled.",
            "action": [
              "Create a SIEM rule to monitor Windows Event ID 4657 where the new value is of type `REG_BINARY`. Trigger an alert if the value size exceeds 4096 bytes and the target registry key path is not on an explicit allow-list of keys known to store legitimate binary blobs (e.g., `HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\StreamsMRU`).",
              "For all registry value modifications (Windows Event ID 4657), calculate the Shannon entropy of the new value. Create different baseline entropy distributions for logical groups of registry keys (e.g., by hive or known function). Generate an alert if a value's entropy exceeds the 99th percentile for its respective group or if the absolute entropy value is greater than 7.5, indicating probable encryption or compression.",
              "Develop and deploy a classification model to analyze the raw content of binary registry values. Use a feature set that includes value size, Shannon entropy, a byte-frequency histogram (256 features), and the target key path. Train the model on a labeled dataset of known malicious payloads and benign binary values. The model will predict the likelihood that a given binary value is a malicious payload."
            ]
          },
          {
            "description": "A single process on a host modifies or deletes three or more distinct registry keys associated with security controls or event logging within a short time window (e.g., less than 60 seconds).",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4660",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially those with privileged access or hosting critical applications.",
            "action": [
              "Define a watchlist of registry keys related to security and logging. Create a streaming analytics rule that groups Windows Event ID 4657/4660 events by `Host` and `ProcessID` over a 60-second tumbling window. Trigger a critical alert if the count of distinct keys from the watchlist within a single group is 3 or more.",
              "For each host, calculate a 1-minute rolling count of modifications to security-related registry keys. Establish a dynamic baseline of this count using a 7-day moving average. Generate an alert if the current count for a host exceeds its own baseline by 4 standard deviations, indicating a statistically significant burst of tampering activity.",
              "Deploy a sequence-based anomaly detection model (e.g., LSTM autoencoder) that processes streams of multi-source events per host (Windows Event IDs 4688, 4657; Zeek dns.log, conn.log). Train the model on benign user and system activity. An alert should be generated when a sequence has a high reconstruction error, especially for sequences that match the pattern: [Process Creation -> Multiple Security Registry Mods -> New DNS Query -> External Network Connection]."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]