[
  {
    "information_requirement": "Is the adversary attempting to discover virtual machines within the environment?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1673",
        "name": "Virtual Machine Discovery",
        "evidence": [
          {
            "description": "A network connection is established from an internal source IP address present on a threat intelligence watchlist to a known hypervisor management interface (e.g., ports 443, 902, 5988, 5989).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Hypervisor management network segments, Core network switches, Virtual infrastructure management servers (e.g., vCenter, SCVMM)",
            "action": [
              "Symbolic: Continuously join an internal watchlist of malicious IPs with Zeek conn.log records where the destination IP is a known hypervisor and the destination port is a management port (e.g., 443, 902, 5988, 5989). Alert on any match.",
              "Statistical: For each source IP connecting to hypervisor management interfaces, calculate the rarity of the source-destination pair based on a 30-day historical baseline. Alert if the connection pair falls below the 5th percentile of historical frequency, indicating an anomalous connection.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on features from normal connection logs to hypervisor management interfaces (e.g., source IP subnet, time of day, bytes sent/received). Use the trained model to classify new connections as normal or anomalous. Connections flagged as anomalous by the model should generate an alert."
            ]
          },
          {
            "description": "A process creation event is observed containing command-line arguments that match known VM discovery utilities or patterns (e.g., `esxcli vm process list`, `vim-cmd vmsvc/getallvms`, `Get-VM`, `wmic computersystem get model`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Hypervisor hosts (ESXi, Hyper-V), Virtualization management servers, Domain Controllers, Administrator workstations",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 logs for process creation events where the process name or command-line arguments match a predefined list of regular expressions for VM discovery tools, such as `esxcli`, `vim-cmd`, `Get-VM`, `VBoxManage`, or `systeminfo | findstr /i \"virtual\"`. Generate an alert upon a match.",
              "Statistical: For each user, establish a baseline of normally executed commands. Calculate the Shannon entropy of the command-line arguments for each new process execution. A sudden spike in entropy or the execution of a command with an abnormally low historical probability for that user (e.g., below the 1st percentile) should trigger an alert.",
              "Machine Learning: Develop a classification model (e.g., Random Forest) trained on labeled command-line data (benign vs. malicious discovery) using features like command length, presence of special characters, and n-grams. Deploy the model to score new process creation events in real-time."
            ]
          },
          {
            "description": "A single source IP address initiates connections to a high number of distinct destination hosts or destination ports within a designated hypervisor network segment over a short time frame.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Hypervisor management network segments, DMZ, Core network switches",
            "action": [
              "Symbolic: Create a rule that triggers when a single source IP generates more than a fixed number (e.g., 20) of `conn.log` entries to unique destination IPs within the hypervisor VLAN within a 60-second window. Alert on any IP that breaches this threshold.",
              "Statistical: For each source IP, calculate the number of distinct destination IPs and ports contacted within a 5-minute sliding window. Establish a baseline distribution for these counts. Alert if a source IP's activity exceeds the 99th percentile of the established baseline for either distinct destination IPs or ports.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA or LSTM) to monitor the rate of new connections originating from individual hosts destined for the hypervisor subnets. The model should learn the normal daily and weekly cyclical patterns. An alert is generated when the observed connection rate significantly deviates from the model's prediction."
            ]
          },
          {
            "description": "A legitimate hypervisor management tool (e.g., esxcli, PowerCLI) or API is used by a non-privileged user account, from a host not on the approved management host list, or in a manner that deviates from established frequency baselines.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Virtualization management servers, Administrator workstations, Jump boxes/bastion hosts",
            "action": [
              "Symbolic: Maintain an explicit allow-list of user accounts and source hostnames authorized to execute hypervisor CLI tools (`esxcli`, `Get-VM`). Alert on any execution of these tools (from Windows Event ID 4688) by a user or from a host not on the allow-list.",
              "Statistical: For each authorized user, baseline the frequency and timing of hypervisor management commands. Use a moving average and standard deviation to model normal activity. Alert if a user's command frequency in a 1-hour window exceeds 3 standard deviations above their historical average.",
              "Machine Learning: Implement a peer group analysis model (e.g., k-means clustering) to group users based on their roles and access patterns. For each user, compare their current hypervisor API/CLI activity against the aggregated behavior of their peer group. An alert is generated if a user's activity is a statistical outlier compared to their peers."
            ]
          },
          {
            "description": "A successful authentication (Windows Event ID 4624) to a hypervisor management server from a source IP that recently generated a high volume of failed authentications (Windows Event ID 4625), followed within a short time window by process execution events (Windows Event ID 4688) matching VM discovery patterns.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Hypervisor management servers, Domain Controllers, RADIUS/TACACS+ servers",
            "action": [
              "Symbolic: Create a correlation rule that triggers if a source IP generates >10 failed logins (Event ID 4625) followed by one successful login (Event ID 4624) to a hypervisor, AND within 10 minutes, the same user account from that login session executes a known discovery command (Event ID 4688) on that hypervisor. Alert on this sequence.",
              "Statistical: Calculate a risk score for each login event to a hypervisor based on statistical features: rarity of source IP geolocation (from Zeek conn.log), time-of-day anomaly (deviation from user's normal login hours), and ratio of recent failed-to-successful logins from the source IP. If the score exceeds the 98th percentile, flag the session. If a flagged session is followed by any VM discovery command, escalate to a high-severity alert.",
              "Machine Learning: Use a Hidden Markov Model (HMM) to model the sequence of attacker actions: (State 1: Failed Logins) -> (State 2: Successful Login) -> (State 3: Discovery Command). Apply the model to real-time event streams (Event IDs 4625, 4624, 4688) to calculate the probability of an observed sequence matching the malicious state transition path. A high probability triggers an alert."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]