[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by placing artifacts in excluded file paths? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.012",
        "name": "File-Path Exclusions",
        "evidence": [
          {
            "description": "A file is written to or executed from a known security software exclusion path, and its hash matches a known-bad IOC or its name matches a pattern associated with malicious tools.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on Windows endpoints and servers, focusing on common default exclusion paths (e.g., %windir%\\Temp, %appdata%\\Temp) and configured exclusion directories for security tools (e.g., Microsoft Defender, CrowdStrike) and enterprise applications (e.g., SQL Server data directories, developer build folders).",
            "action": [
              "Symbolic: First, compile and maintain a centralized list of all security software exclusion paths. Monitor file creation (Windows Event ID 4663) and process creation (Windows Event ID 4688) events within these paths. For each event, calculate the file hash and compare it against a high-fidelity threat intelligence feed of known malicious hashes. Additionally, apply a list of regular expressions to the file name to detect common hacking tools or suspicious naming conventions. Alert on any match.",
              "Statistical: For each unique exclusion path, establish a baseline for the frequency of file write events (Windows Event ID 4663) per host over a 30-day rolling window. Calculate the 99th percentile for this frequency. Generate a low-severity alert for any host that exceeds this percentile in a 24-hour period, indicating an anomalous volume of file creation activity that warrants investigation.",
              "Machine Learning: Train a decision tree or random forest classifier on labeled data of benign and malicious file-write events within exclusion paths. Use features such as file extension, file entropy, digital signer status, file name length, and parent process name. Deploy the model to classify new file write events (Windows Event ID 4663) as 'benign' or 'suspicious' and generate an alert for 'suspicious' classifications."
            ]
          },
          {
            "description": "A process is created with command-line arguments indicating discovery of security software exclusion settings, or the use of built-in utilities to write or move files into those paths.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs (command-line and PowerShell) on all Windows endpoints and servers. Network traffic logs at egress points (proxies, firewalls) to correlate download commands observed in command-line arguments.",
            "action": [
              "Symbolic: Continuously monitor process creation events (Windows Event ID 4688) for command-line arguments. Maintain and apply a list of regular expression patterns to detect exclusion discovery commands (e.g., `reg query HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Exclusions`, `Get-MpPreference`) and file movement into excluded paths (e.g., `copy *.exe C:\\\\AV_Exclusion\\\\`, `Invoke-WebRequest ... -OutFile C:\\\\Vendor\\\\Exclude\\\\`). Generate a medium-severity alert on any match.",
              "Statistical: For common command-line utilities (e.g., `powershell.exe`, `cmd.exe`, `wmic.exe`), establish a baseline of command-line argument length and Shannon entropy per host. Generate an alert when an execution's command-line entropy is a statistical outlier (e.g., greater than 3 standard deviations from the mean for that parent process on that host), as this can indicate obfuscated or suspicious commands.",
              "Machine Learning: Vectorize command-line arguments from processes that write to exclusion paths using TF-IDF. Apply a clustering algorithm like DBSCAN to the vectorized data. Investigate new clusters that do not correspond to known administrative or benign activity, as they may represent novel adversary techniques. Periodically retrain to account for evolving benign activity."
            ]
          },
          {
            "description": "A file created or executed within a security software exclusion path is unsigned, has an abnormally high entropy score, or has a file extension inconsistent with the established baseline for that directory.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on Windows endpoints and servers, particularly application directories commonly added to exclusion lists (e.g., database folders, development toolchains, source code repositories) and user profile directories.",
            "action": [
              "Symbolic: For all file write (Windows Event ID 4663) and process execution (Windows Event ID 4688) events in exclusion paths, enrich the event data with file properties. Create a high-severity alert for any executable file (e.g., .exe, .dll, .ps1, .bat) created in an exclusion path that is not digitally signed by a publisher present on an approved allow-list.",
              "Statistical: For each specific exclusion directory, profile the normal distribution of file extensions, Shannon entropy scores, and parent process names over a 30-day baseline period. Generate an alert when a new file's properties are statistical outliers (e.g., entropy score > 7.5 in a path where the 95th percentile is 6.0, or a `.bat` file in a path that has never contained one).",
              "Machine Learning: Develop a one-class SVM (Support Vector Machine) model trained on the features (e.g., entropy, file size, extension, parent process name, signer status) of legitimate files typically found in high-value exclusion paths. Use the model to identify new files that are anomalous and do not fit the legitimate distribution, flagging them for analyst review."
            ]
          },
          {
            "description": "A process initiates a network download of a file from an external source, and within a short time window (e.g., 5 minutes), the same process or a child process writes a file to a known security exclusion path.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, web proxies), DNS servers, and endpoint file systems. Correlation requires access to both network logs (Zeek) and endpoint logs (Windows Event IDs).",
            "action": [
              "Symbolic: Correlate network and endpoint logs in a SIEM. Create a rule that triggers when a process (identified by Process ID in Windows Event ID 4688) is associated with a network connection to an external IP (from Zeek conn.log) and a subsequent file write (Windows Event ID 4663) to a known exclusion path occurs within a 5-minute window. Increase alert severity if the downloaded file MIME type (from Zeek files.log) is an executable or script, or if the source IP has a low reputation score.",
              "Statistical: For all observed 'download-then-write-to-exclusion' event chains, analyze the source IP's Autonomous System Number (ASN) and country of origin from Zeek conn.log. Calculate the historical frequency of downloads from each ASN to the environment. Assign a high risk score to events originating from ASNs that are rare (e.g., in the bottom 5th percentile of frequency) or are associated with non-standard business locations.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA or LSTM) on the hourly count of correlated 'download-then-write-to-exclusion' events. Train the model on at least 30 days of historical data. Generate an alert when the observed event volume significantly deviates from the forecasted volume, which could indicate a mass deployment of malicious tools or a new campaign."
            ]
          },
          {
            "description": "A process or user session performs exclusion discovery (e.g., queries registry keys for AV exclusions) and is followed by a file write or execution within one of the discovered or default exclusion paths.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry on endpoints and servers (specifically `HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions` and other vendor-specific keys), process command-line arguments, and file systems in excluded directories.",
            "action": [
              "Symbolic: Implement a stateful SIEM rule that tracks hosts. If a process executes a known exclusion discovery command (e.g., `reg query` on an exclusion-related registry key, detected via command-line logging in Windows Event ID 4688), the rule places the host in a 'Discovery Activity' state for 60 minutes. If, while in this state, a file is written to any exclusion path (Windows Event ID 4663) by the same user or a descendant process, trigger a high-severity alert.",
              "Statistical: On a per-host basis, calculate the conditional probability of a file write to an exclusion path given a recent exclusion discovery event: `P(WriteToExclusion | DiscoveryEvent)`. Compare this to the baseline probability `P(WriteToExclusion)` using a chi-squared test or by tracking a moving average. A statistically significant increase in this conditional probability for a given host indicates a suspicious chain of activity.",
              "Machine Learning: Model endpoint activity as a process-file-registry interaction graph. Use a graph-based anomaly detection algorithm or a Graph Neural Network (GNN) trained to identify malicious subgraphs. A subgraph pattern showing a process node reading an exclusion-related registry key node and subsequently creating a new file node within that exclusion path would be classified as a high-confidence indicator of T1564.012."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]