[
  {
    "information_requirement": "Is the adversary using defense evasion techniques via dynamic API resolution? (TA0005 - Defense Evasion) (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.007",
        "name": "Dynamic API Resolution",
        "evidence": [
          {
            "description": "A process creation event is observed where the new process executable's SHA256 hash matches a known indicator of compromise (IOC) specifically tagged for using dynamic API resolution, packers (e.g., UPX, MPRESS), or having a suspiciously small or empty Import Address Table (IAT).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly domain controllers, application servers, and developer workstations.",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) for any process whose file hash (SHA256) matches a curated threat intelligence feed of malware known to use API hashing or packing. Trigger a high-severity alert upon a match.",
              "Statistical: For each new executable hash observed, calculate its prevalence across the environment over the last 30 days. Flag executables that appear on a very small number of hosts (e.g., fewer than 5) and whose parent process is a common delivery vector (e.g., outlook.exe, chrome.exe). A low prevalence score significantly increases suspicion for further analysis.",
              "Machine Learning: Develop a supervised classification model (e.g., a Random Forest or Gradient Boosting) trained on features extracted from PE files (e.g., section entropy, IAT size, presence of packer signatures, file size). Use this model to score newly observed executables in near-real-time. An executable receiving a high 'packed/obfuscated' probability score should be flagged for investigation."
            ]
          },
          {
            "description": "A `rundll32.exe` process is created with a command line argument that invokes a DLL function by its ordinal number (e.g., '#123') rather than by its exported name, indicating an attempt to hide the function's purpose.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, focusing on command line logging from user workstations.",
            "action": [
              "Symbolic: Create a detection rule that parses command line arguments from process creation events (Windows Event ID 4688). Alert when the process is `rundll32.exe` and the command line contains a regular expression pattern matching a DLL name followed by a comma and a hash symbol with numbers (e.g., `rundll32.exe shell32.dll,#123`).",
              "Statistical: For all `rundll32.exe` executions, calculate the entropy of the command line string. Executions invoking functions by ordinal often have lower entropy than typical named-function calls. Establish a baseline entropy score for legitimate `rundll32.exe` usage and alert on significant negative deviations (e.g., more than 2 standard deviations below the mean).",
              "Machine Learning: Use an anomaly detection model (e.g., Isolation Forest) on features extracted from `rundll32.exe` command lines, such as string length, character distribution, and the target DLL. Train the model on legitimate activity and use it to flag command lines that are statistical outliers, indicative of obfuscated execution."
            ]
          },
          {
            "description": "A file with a PE signature (e.g., .dll, .exe, or files with no extension but PE headers) is written to a non-standard or user-writable directory, and is subsequently loaded or executed by the same process or a child process within a short time window (e.g., under 10 seconds).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 7 (ImageLoad)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories (%APPDATA%, %LOCALAPPDATA%, Downloads), temporary directories (%TEMP%, C:\\Windows\\Temp), and public-writable shares.",
            "action": [
              "Symbolic: Correlate file creation events (Sysmon Event ID 11) for executables/DLLs in user-writable locations with subsequent image load events (Sysmon Event ID 7) or process creation events (Windows Event ID 4688) of that same file by the same ProcessGUID. Alert if the time delta between write and execution is less than 60 seconds.",
              "Statistical: Analyze the time delta between file writes and subsequent executions. Calculate the distribution of these time deltas for all such events across the enterprise. Events falling in the lowest percentile (e.g., 1st percentile, indicating near-immediate execution) are highly suspicious. Additionally, track the frequency of parent processes performing this action; a process like `winword.exe` performing this is more anomalous than a software installer.",
              "Machine Learning: Apply a time-series anomaly detection model to the sequence of events per process (ProcessGUID). A sequence of 'Network Connection -> File Write (PE) -> Process Create (from written file)' within a short duration is a pattern that can be learned and detected. A sequence model like an LSTM could identify these malicious chains of events."
            ]
          },
          {
            "description": "A running process exhibits dynamic behavior (e.g., network connections, process creation) that requires API functions (e.g., CreateProcess, Socket) which are not declared in the static Import Address Table (IAT) of its corresponding on-disk executable file.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1 (ProcessCreate)",
              "Sysmon Event ID 3 (NetworkConnection)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, network egress points (for Zeek logs), and malware analysis sandboxes/threat intelligence feeds (for IAT data).",
            "action": [
              "Symbolic: For each new process (Windows Event ID 4688), retrieve its IAT via an automated sandbox or static analysis tool. If the process later generates a network connection event (Sysmon Event ID 3) but its IAT lacks imports from `ws2_32.dll` or `wininet.dll`, or if it creates a child process (Windows Event ID 4688) but lacks imports like `CreateProcessW`, generate an alert. This requires joining runtime behavior with static properties.",
              "Statistical: For every process, calculate a 'Behavioral-Static Mismatch Score'. Assign points for each observed behavior (e.g., +1 for network connection, +1 for child process) and subtract points if the corresponding API families are in the IAT. Calculate the distribution of these scores for all processes. Processes in the 99th percentile of this mismatch score warrant investigation.",
              "Machine Learning: Train a classifier to distinguish between benign and malicious processes based on the discrepancy between static PE features (IAT entries, section names) and observed runtime behaviors (network connections, file I/O, registry modifications). A process flagged by the model as having high discrepancy is a strong candidate for using dynamic API resolution."
            ]
          },
          {
            "description": "A trusted, long-running system process (e.g., `svchost.exe`, `explorer.exe`, `lsass.exe`) exhibits anomalous behavior, such as initiating a network connection to a rare external destination or spawning an unusual child process (e.g., `cmd.exe`), which deviates from its established historical baseline.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1 (ProcessCreate)",
              "Sysmon Event ID 3 (NetworkConnection)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical system processes on all Windows hosts, network traffic logs from perimeter firewalls and DNS servers.",
            "action": [
              "Symbolic: Create a rule that alerts when a critical system process (e.g., `lsass.exe`, `winlogon.exe`) is observed as the parent process in a process creation event (Windows Event ID 4688) for a command-line interpreter (`cmd.exe`, `powershell.exe`) or initiates any external network connection (Zeek conn.log).",
              "Statistical: For each critical system process, build a historical baseline of its typical child processes, network destination FQDNs/IPs, and destination ports. Use a percentile rank on the rarity of each new observation. For example, flag a DNS query (Zeek dns.log) from `svchost.exe` for a domain that is in the 99.9th percentile of rarity for that process.",
              "Machine Learning: Employ a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) for key metrics associated with critical processes, such as the volume of network traffic, number of child processes spawned per hour, and number of unique destination IPs contacted. An alert is generated when the model detects a statistically significant anomaly that deviates from the learned seasonal and trend patterns of normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]