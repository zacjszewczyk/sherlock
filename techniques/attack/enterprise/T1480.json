[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using execution guardrails?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1480",
        "name": "Execution Guardrails",
        "evidence": [
          {
            "description": "A process accesses specific files, registry keys, or environment variables associated with known virtualization or analysis tools, or checks for specific hardware properties (e.g., CPU core count < 2, RAM < 4GB) before terminating or altering its behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Laptops), Virtual Desktop Infrastructure (VDI) Environment",
            "action": [
              "Symbolic: Create a detection rule that triggers when a process (Windows Event ID 4688) accesses a list of known sandbox/VM artifacts (files, registry keys) via object access events (Windows Event ID 4663). This list should include paths like 'HKLM\\SOFTWARE\\VMware, Inc.' or files like 'VBoxGuest.sys'. Correlate with threat intelligence feeds for hashes of malware known to use these checks.",
              "Statistical: For each new process, count the number of discovery-related API calls or WMI queries for system properties (e.g., 'Win32_ComputerSystem', 'Win32_Processor') within the first 5 seconds of execution. Establish a baseline for legitimate software. Flag any process whose discovery count exceeds the 95th percentile of the established baseline, especially if it terminates shortly after.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features extracted from early process execution. Features should include: process name, parent process, command-line arguments, and a binary vector indicating access to known sandbox artifacts. Use the model to predict the likelihood that a new, unseen process is performing guardrail checks."
            ]
          },
          {
            "description": "A process executes a command line containing a sequence of system discovery commands (e.g., 'whoami', 'hostname', 'ipconfig') chained with conditional logic (e.g., '&&', '||', 'if') to validate the target environment.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Laptops), Domain Controllers, Critical Servers",
            "action": [
              "Symbolic: Develop a SIEM rule using regular expressions to detect command lines (Windows Event ID 4688) that chain multiple discovery commands with conditional operators. Example pattern: '(systeminfo|whoami|hostname|net user).*(&&|\\|\\|).*findstr.*(corp\\.domain\\.com|SPECIFIC_HOSTNAME)'. Alert when matched, especially from non-interactive shells or unusual parent processes like 'winword.exe'.",
              "Statistical: Calculate the Shannon entropy of command-line arguments for all process creation events. Establish a baseline entropy score for common processes. Flag processes with command-line entropy scores greater than 3 standard deviations above the mean for their respective process name, as this can indicate complex, scripted commands.",
              "Machine Learning: Use a Natural Language Processing (NLP) model, such as a TF-IDF vectorizer followed by a logistic regression classifier, to distinguish malicious chained commands from benign administrative scripts. Train the model on labeled command-line data to classify new command lines as 'benign', 'suspicious-admin-script', or 'malicious-guardrail'."
            ]
          },
          {
            "description": "A process is created and terminates in an abnormally short duration (e.g., less than 3 seconds) after performing environment-sampling checks, and without initiating any significant network connections or file modifications.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Laptops), Network Egress/Ingress Points",
            "action": [
              "Symbolic: Create a rule that triggers when a process creation event (4688) is followed by a termination event (4689) for the same Process ID within 3 seconds, AND there are no corresponding network connection logs (Zeek conn.log) from the source host initiated by that process in that time window. Exclude a known-good list of legitimate short-lived processes.",
              "Statistical: For every process name, calculate the distribution of its execution duration by correlating event IDs 4688 and 4689. Alert on executions that fall below the 5th percentile for that specific process's lifetime distribution, especially if the command line contains discovery tools or the parent process is an Office application.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on the frequency of short-lived processes (<3s) per host. A sudden spike in the rate of these 'fail-fast' processes on a single host can indicate a widespread campaign where malware is failing its guardrail checks. The model would learn the normal baseline rate and flag statistically significant deviations."
            ]
          },
          {
            "description": "A single process sequentially accesses a diverse and unusual set of objects, such as non-standard registry keys, specific security product file paths, and unique hardware identifiers, inconsistent with its purported function.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Laptops), Servers hosting security tools (e.g., EDR management console)",
            "action": [
              "Symbolic: Define 'critical guardrail objects' including registry keys of security products ('HKLM\\Software\\Cylance', 'HKLM\\Software\\Crowdstrike'), specific file paths, and WMI classes for hardware. Create a rule that alerts when a single process (by Process ID) accesses more than 3 of these distinct object categories within a 10-second window.",
              "Statistical: For each process, collect the set of file paths and registry keys it accesses (Event ID 4663) within its first 30 seconds. Calculate the Shannon entropy of the set of parent directories or top-level registry hives accessed. A high entropy score indicates the process is probing many disparate areas of the system. Compare this entropy to a pre-computed baseline for the given process name and flag outliers.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on process activity. Vectorize each process based on the objects it accesses. The algorithm will group processes with similar access patterns. Small clusters or points identified as noise represent processes with unique access patterns that may be performing guardrail checks and warrant investigation."
            ]
          },
          {
            "description": "A process initiates a network connection to a high-reputation domain (e.g., google.com) and, upon a successful connection, immediately initiates a second connection to a low-reputation, newly registered, or uncategorized domain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress Points, DNS Servers, All Endpoints (Workstations, Laptops)",
            "action": [
              "Symbolic: Create a stateful rule that tracks DNS queries (Zeek dns.log) per host. Trigger an alert if a DNS query for a known-good domain (e.g., '*.google.com', '*.microsoft.com') is followed within 15 seconds by a query to a domain on a threat intelligence feed or one registered within the last 30 days.",
              "Statistical: For each process, analyze the sequence of domains it contacts. Calculate the 'reputation delta' between consecutive connections using domain age and threat intel scores. A large negative jump in reputation is anomalous. Flag sequences where the reputation score drops by more than 80% from the first to the second external domain contacted.",
              "Machine Learning: Implement a sequence analysis model (e.g., a Hidden Markov Model) to learn legitimate sequences of network connections for different applications. The model can then score the probability of a new connection sequence. Sequences with very low probabilities, such as 'high-reputation-check -> low-reputation-C2', would be flagged as anomalous guardrailing behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]