[
  {
    "information_requirement": "Is an adversary abusing the ODBC configuration utility (odbcconf.exe) to proxy the execution of malicious code, thereby evading application controls or other defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.008",
        "name": "Odbcconf",
        "evidence": [
          {
            "description": "Execution of odbcconf.exe loads a DLL whose file hash matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Symbolic: For each 'odbcconf.exe' process creation event (Windows Event ID 4688), parse the command line to extract the DLL file path. Retrieve the SHA256 hash of the DLL and perform a direct lookup against a threat intelligence database of known malicious file hashes. Generate a high-severity alert upon a match.",
              "Statistical: For each DLL loaded by 'odbcconf.exe', calculate its prevalence across the enterprise over the last 90 days. Flag any DLL that falls below a rarity threshold (e.g., seen on fewer than 0.1% of endpoints) for further analysis, as malware is often unique or rare compared to legitimate shared libraries.",
              "Machine Learning: Develop a binary classification model (e.g., Logistic Regression, Random Forest) trained on features of DLLs loaded by odbcconf.exe, such as file size, entropy, section names, and import/export functions. Use the model to predict the probability that a newly observed DLL is malicious."
            ]
          },
          {
            "description": "Execution of odbcconf.exe with command-line arguments containing the '/A {REGSVR ...}' pattern, which is strongly indicative of malicious DLL registration.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule that searches Windows Event ID 4688 process creation logs for the process name 'odbcconf.exe' and a command line containing a regular expression matching '/A {REGSVR'. Treat any match as a high-confidence indicator of compromise.",
              "Statistical: For all 'odbcconf.exe' executions, parse the command-line arguments. Calculate the information entropy of the full command-line string. Establish a baseline entropy score for legitimate 'odbcconf.exe' usage. Flag any execution where the command-line entropy exceeds a high percentile (e.g., 99th percentile), as malicious commands often include long, randomized, or encoded payloads/paths.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on the tokenized command-line arguments of all 'odbcconf.exe' executions across the enterprise. Identify clusters of common, legitimate usage. Treat any execution that is flagged as noise or belongs to a very small, isolated cluster as anomalous and worthy of investigation."
            ]
          },
          {
            "description": "Execution of odbcconf.exe from a parent process not typically associated with software installation or system configuration, such as an Office application, browser, or script interpreter.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Email Servers",
            "action": [
              "Symbolic: Create a detection rule that alerts when the parent process of 'odbcconf.exe' (from Windows Event ID 4688) is in a list of suspicious parents, such as 'winword.exe', 'excel.exe', 'outlook.exe', 'powershell.exe', 'wscript.exe', or 'cscript.exe'.",
              "Statistical: For each host, build a frequency table of parent-child process relationships involving 'odbcconf.exe' over a 30-day baseline period. Calculate the probability of each parent process. Alert when a parent-child relationship occurs that has a probability below a set threshold (e.g., less than 1%) or has never been seen before on that host or in that user's context.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) or an Isolation Forest model on legitimate parent-child process pairs involving 'odbcconf.exe'. Use the trained model to identify any new 'odbcconf.exe' execution with a parent process that the model classifies as an outlier."
            ]
          },
          {
            "description": "A DLL file is created in a user-writable or temporary directory, followed shortly by an 'odbcconf.exe' execution that references the newly created DLL.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Download/Temp Directories on Servers, Publicly Writable Shares",
            "action": [
              "Symbolic: Correlate file creation events for files with a '.dll' extension in common temporary or user-writable locations ('%TEMP%', '%APPDATA%', 'C:\\Users\\Public\\') with subsequent 'odbcconf.exe' process creations (Windows Event ID 4688) that reference the same file path on the same host within a 5-minute time window. Alert on any such correlation.",
              "Statistical: For a given host, calculate the median time delta between a DLL file write and its subsequent execution by any process. Establish a baseline for this 'write-to-execute' time. Flag instances where 'odbcconf.exe' executes a DLL with a time delta that is a statistical outlier (e.g., in the lowest 5th percentile), as adversaries often execute payloads immediately after dropping them.",
              "Machine Learning: Use a sequence analysis model, such as a Hidden Markov Model (HMM), to learn common sequences of events (file writes, process creations). Define a 'malicious sequence' state as 'DLL write to temp dir -> odbcconf.exe execution'. The model can then calculate the probability of observing this sequence compared to benign sequences and flag high-probability malicious sequences."
            ]
          },
          {
            "description": "Suspicious child processes (e.g., cmd.exe, powershell.exe) are created by odbcconf.exe, or anomalous outbound network connections originate from the host immediately after its execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Network Egress Points",
            "action": [
              "Symbolic: Create a rule that triggers if 'odbcconf.exe' (or the DLL it loads) spawns a child process of 'cmd.exe' or 'powershell.exe'. Additionally, correlate 'odbcconf.exe' execution events with subsequent network connections (Zeek conn.log) from the same source IP to destination IPs on a threat intelligence watchlist within a 5-minute window.",
              "Statistical: For each host, establish a baseline of normal outbound network traffic volume and unique destination IPs per hour. After an 'odbcconf.exe' execution, monitor for a statistically significant spike in outbound data volume or connections to a number of new/rare destination IPs (e.g., exceeding the 95th percentile of the baseline). Calculate the JA3 hash of any resulting TLS connections and flag hashes with low prevalence across the enterprise.",
              "Machine Learning: Implement a time series anomaly detection model (e.g., ARIMA or LSTM) on host network behavior (bytes out, packets out, new connections). Following an 'odbcconf.exe' execution, feed the subsequent network data into the model. If the model flags the post-execution period as anomalous compared to the learned baseline, generate an alert for analyst review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]