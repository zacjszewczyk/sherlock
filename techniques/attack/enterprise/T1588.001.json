[
  {
    "information_requirement": "Has the adversary deployed acquired malware within the environment? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1588.001",
        "name": "Malware",
        "evidence": [
          {
            "description": "A file observed traversing the network or written to an endpoint has a cryptographic hash (MD5, SHA1, SHA256) that matches a known malicious indicator from an integrated threat intelligence platform.",
            "data_sources": [
              "Zeek file.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Internal file servers, Web content filters, User endpoints",
            "action": [
              "Symbolic: Join the `hash` field from Zeek file.log and the hash of the file from Windows Event ID 4663 against a watchlist of known malicious file hashes from threat intelligence feeds. Alert on any match.",
              "Statistical: For all observed files, calculate the prevalence of each SHA256 hash across the enterprise over a 24-hour window. Flag hashes seen on a very small number of endpoints (e.g., fewer than 5 or below the 1st percentile) for investigation.",
              "Machine Learning: Use a classification model (e.g., Random Forest) trained on file metadata (MIME type, size, entropy, hash prevalence) and threat intelligence labels (benign/malicious) to predict the likelihood that a newly observed file is malicious. Alert on files with a high-confidence malicious score."
            ]
          },
          {
            "description": "An endpoint initiates a network connection to an external IP address, domain, or URL that is present on a threat intelligence feed of known malware distribution points or C2 servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, Web proxies",
            "action": [
              "Symbolic: Query Zeek dns.log for queries to domains on a C2 watchlist. Query Zeek conn.log for connections to IP addresses on a malicious infrastructure watchlist. Query Zeek http.log for `host` headers and Zeek ssl.log for `server_name` fields matching a malicious domain watchlist. Alert on any match.",
              "Statistical: For all external domains queried (Zeek dns.log), calculate the age of the domain and its query prevalence across the organization. Flag domains that are newly registered (e.g., < 30 days old) and have a low query count (e.g., requested by < 0.1% of hosts).",
              "Machine Learning: Develop a DGA (Domain Generation Algorithm) detection model using features like domain name length, character entropy, and n-gram frequency. Apply this model to all DNS queries in Zeek dns.log to score and identify algorithmically generated domains commonly used by malware."
            ]
          },
          {
            "description": "A process is created with a command line or parent-child process relationship that matches a known pattern for malware execution or a commodity offensive tool.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (e.g., Domain Controllers, database servers), User endpoints, Virtual Desktop Infrastructure (VDI) fleet",
            "action": [
              "Symbolic: Apply Sigma or YARA-L rules against Windows Event ID 4688 process creation logs to detect exact command-line matches for known malware droppers or post-exploitation tools (e.g., specific Cobalt Strike or Mimikatz argument patterns).",
              "Statistical: For each parent process (e.g., `winword.exe`), build a baseline of normal child processes and calculate the frequency of each. Alert when a rare child process is spawned (e.g., `powershell.exe` from `winword.exe` if this is below the 5th percentile of observed child processes for Word).",
              "Machine Learning: Use a sequence-based anomaly detection model (e.g., LSTM) on command-line arguments. Train the model on legitimate command lines for common processes (`powershell.exe`, `wscript.exe`). Flag new command lines that have a high reconstruction error, indicating they are anomalous and potentially malicious."
            ]
          },
          {
            "description": "A newly created process, characterized by an anomalous file path, a name masquerading as a system binary, or a lack of a valid digital signature, initiates an outbound network connection to a destination not previously contacted by that host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User endpoints, Public-facing web servers, Network egress points",
            "action": [
              "Symbolic: Join Windows Event ID 4688 (where `ProcessName` is 'svchost.exe' but `ImagePath` is not `C:\\\\Windows\\\\System32\\\\`) with Windows Event ID 5156 or Zeek conn.log connections from the same host within 30 seconds. Alert if the destination IP is external.",
              "Statistical: For each process name, calculate the Shannon entropy of its file path. Establish a baseline entropy score for legitimate processes. Alert when a process is executed from a path with an entropy score exceeding 3 standard deviations from its baseline mean.",
              "Machine Learning: Train a clustering model (e.g., DBSCAN) on a feature set of process and network events: {process path entropy, is_signed, parent_process, destination_IP_prevalence, destination_port}. Identify clusters of activity that deviate from the large, dense clusters of normal behavior."
            ]
          },
          {
            "description": "An internal host's network traffic exhibits one or more anomalous characteristics indicative of C2 communication: 1) periodic, fixed-interval connections (beaconing), 2) use of non-standard ports for common protocols, or 3) connections to low-prevalence or geographically anomalous destinations.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, Server subnets",
            "action": [
              "Symbolic: Search Zeek conn.log for connections where the `service` field is `ssl` but the `id.resp_p` (destination port) is not 443. Correlate with Zeek ssl.log to check for self-signed certificates (`validation_status` contains 'self-signed'). Alert on a match.",
              "Statistical: For each source-destination IP pair in Zeek conn.log, calculate the time delta between consecutive connections. A very low standard deviation of these time deltas (e.g., < 1 second) over a 24-hour period indicates highly regular, machine-generated beaconing. Alert on pairs with low deviation and a connection count > 10.",
              "Machine Learning: Apply time-series decomposition (e.g., Seasonal-Trend-Loess) to a host's outbound data volume over time. A strong, repeating seasonal component with a short period (e.g., 5 minutes) that is not synchronized with business hours can indicate automated C2 beaconing."
            ]
          },
          {
            "description": "A file object is observed with multiple characteristics associated with evasion: 1) a filename with high character entropy, 2) a double extension (e.g., `.pdf.exe`), and 3) a mismatch between its file extension and its MIME type or magic number.",
            "data_sources": [
              "Zeek file.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email gateways, Web proxies, Internal file servers, User endpoints",
            "action": [
              "Symbolic: Using a regular expression, search the `filename` field in Zeek file.log for patterns like `\\\\.[a-z]{3,4}\\\\.exe$`. Also, alert where `mime_type` in Zeek file.log is 'application/x-dosexec' but the filename extension is not `.exe` or `.dll`.",
              "Statistical: Calculate the Shannon entropy for all filenames in Zeek file.log. Establish a baseline distribution of entropy scores. Alert on any filename with an entropy score in the top 1% (e.g., > 4.5), which indicates randomized names.",
              "Machine Learning: Use an unsupervised anomaly detection model (e.g., Isolation Forest) on file features from Zeek file.log: {filename entropy, file size, MIME type}. The model will learn normal file transfer patterns and score events that are 'easy to isolate' as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]