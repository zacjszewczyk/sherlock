[
  {
    "information_requirement": "Is an adversary acquiring or configuring serverless infrastructure for operational use against our organization? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1583.007",
        "name": "Serverless",
        "evidence": [
          {
            "description": "An internal host establishes a network connection with a serverless domain or IP address that is present on a high-confidence threat intelligence feed of known malicious infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Network Egress Points",
            "action": "1. (Symbolic) Ingest high-confidence threat intelligence feeds identifying malicious serverless domains and IPs into a SIEM watchlist. Create a rule that joins Zeek conn.log (id.resp_h) and dns.log (answers) against this watchlist. Generate a high-priority alert for any match. 2. (Statistical) For each internal host, profile the number of distinct serverless domains contacted per hour. Alert if a host contacts a number of new or unique serverless domains that exceeds the 99th percentile of the organizational baseline. 3. (ML) Utilize a pre-trained classification model (e.g., Random Forest) that uses lexical features of a domain (e.g., entropy, length, n-grams, character distribution) to score the probability of a queried serverless domain being malicious. Escalate domains with a score above a defined threshold (e.g., > 0.85) for investigation."
          },
          {
            "description": "The execution of a cloud command-line interface (CLI) tool or script with parameters indicative of deploying or modifying a serverless function from a non-standard host or by a non-privileged user.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, CI/CD Pipeline Servers, Administrator Endpoints, Endpoint Process Logs",
            "action": "1. (Symbolic) Monitor Windows Event ID 4688 for process creations of cloud CLIs (e.g., `aws.exe`, `gcloud.cmd`, `wrangler.exe`, `az.cmd`). Alert if the command line contains keywords like 'deploy', 'publish', 'create-function' combined with arguments that enable anonymous HTTP triggers, and the process is initiated by a user not in the 'Cloud Administrators' or 'Developers' group. 2. (Statistical) For each execution of a cloud CLI, calculate the entropy of the command-line arguments. Establish a baseline entropy score for legitimate deployment commands. Alert when a command's entropy deviates by more than 3 standard deviations from the mean, which may indicate obfuscated or randomized script content. 3. (ML) Implement a time-series anomaly detection model (e.g., ARIMA) to monitor the frequency of cloud CLI executions per host. Flag any host that exhibits a sudden spike in CLI usage that is anomalous compared to its own historical data, especially outside of standard business hours."
          },
          {
            "description": "An unauthorized or statistically anomalous user authentication to a serverless platform's management console or API, followed by the creation of a new serverless function and subsequent network traffic to that function's endpoint.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, VPN Concentrators, Endpoint Process Logs, Network Egress Points",
            "action": "1. (Symbolic) Create a rule to detect a sequence where a user login (Windows Event ID 4624) from a non-corporate IP is followed by access to a cloud management console domain (e.g., `console.aws.amazon.com` in Zeek dns.log), and then the execution of a cloud CLI (Windows Event ID 4688) within a 15-minute window. 2. (Statistical) For each user account, build a baseline of typical source IP geolocation (country, ISP) for cloud console access. Use a Z-score or modified Z-score to detect logins from statistically rare locations. A high score (e.g., > 3.5) indicates a potential account compromise. 3. (ML) Employ a sequence analysis model (e.g., Hidden Markov Model) trained on legitimate administrative activity. The model should detect anomalous state transitions, such as an unusual login event followed by a function deployment event and then an immediate connection event to a newly created serverless URL, as a high-probability malicious sequence."
          },
          {
            "description": "An internal host initiates highly periodic, low-volume outbound network connections to a specific, uncommon serverless endpoint, characteristic of command-and-control beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Workstation Subnets, Server Subnets, Internet Gateway, Critical Asset Subnets",
            "action": "1. (Symbolic) Alert when an internal host makes a connection to a serverless endpoint (e.g., `*.workers.dev`) where the DNS response resolves to an IP address not on an allow-list of known, legitimate cloud provider IP ranges. 2. (Statistical) For each source-destination pair involving a serverless endpoint, calculate the standard deviation of the time interval between connections and the standard deviation of the bytes sent (`orig_bytes` in Zeek conn.log). Connections where both metrics are exceptionally low (e.g., in the bottom 5th percentile organization-wide) indicate machine-generated beaconing. 3. (ML) Apply a Fourier transform to the time series of connection events for each host communicating with a serverless endpoint. A resulting frequency spectrum with a single, strong peak indicates highly periodic behavior. Use a clustering algorithm (e.g., DBSCAN) on features like connection frequency, data volume, and destination domain prevalence to group and identify outlier hosts exhibiting this beaconing behavior."
          },
          {
            "description": "Data transfer from an internal host to a serverless endpoint exhibits a statistically significant deviation in volume or pattern from an established baseline of legitimate cloud service usage for that host or user.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Data Center Egress Points, Servers Hosting Sensitive Data, Internet Gateway",
            "action": "1. (Symbolic) Create a rule to alert on any HTTP POST request to a serverless endpoint URL where the request body size exceeds a defined threshold (e.g., 100MB) and originates from a host not on a pre-defined list of systems authorized for large cloud uploads. 2. (Statistical) For each internal host, establish a historical baseline (e.g., 30-day rolling average and standard deviation) of total daily data volume sent to serverless endpoints. Alert if a host's daily upload volume exceeds 3 standard deviations from its average, or if a single connection's size (`orig_bytes`) exceeds the 99th percentile of all its past connections. 3. (ML) Train a one-class SVM (Support Vector Machine) or an autoencoder on a feature set from legitimate traffic to serverless endpoints (e.g., request/response sizes, session duration, user agent). Use the trained model to score all new connections and flag those identified as anomalies, which could represent data exfiltration or non-standard C2 communications."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]