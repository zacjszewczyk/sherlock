[
  {
    "information_requirement": "Has newly developed or uniquely modified malware been executed on the network?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution (Detecting the use of malware developed via T1587.001)",
    "indicators": [
      {
        "technique_id": "T1587.001",
        "name": "Malware",
        "evidence": [
          {
            "description": "An executable file is observed executing that meets one or more of the following testable criteria: a) its file hash has zero positive detections across aggregated threat intelligence platforms; b) its file hash was first seen by a platform like VirusTotal within the last 72 hours; or c) the executable is unsigned or signed by a publisher not present on an established corporate allowlist.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly user workstations and public-facing servers.",
            "action": [
              "Symbolic: Create a detection rule that queries the file hash of every new process (Windows Event ID 4688, Sysmon Event ID 1) against threat intelligence feeds. Generate an alert if the hash is associated with a known malicious tool or if the executable is unsigned and not on an approved software list.",
              "Statistical: For all executed files, aggregate publisher names over a 30-day window. Calculate the frequency of each publisher and flag any new process signed by a publisher in the bottom 5th percentile of observed frequency. Additionally, calculate the Shannon entropy of the process name; alert if the entropy score exceeds the 95th percentile for all process names in the environment.",
              "Machine Learning: Develop a classification model (e.g., Random Forest, Gradient Boosting) trained on labeled process execution events. Use features such as file entropy, signature status, publisher rarity score, parent process, command-line length, and threat intelligence reputation. Deploy the model to score each new process execution, alerting on any process classified as 'suspicious' or 'malicious'."
            ]
          },
          {
            "description": "A high-entropy (>7.5) or unsigned executable process is created (Windows Event ID 4688/Sysmon Event ID 1), and within a 5-minute window, the same host and user context establishes a persistence mechanism. This is evidenced by a new service creation (Windows Event ID 4697), a new scheduled task (Windows Event ID 4698), or a modification to a registry autorun location (Sysmon Event ID 13).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4697",
              "Windows Event ID 4698",
              "Sysmon Event ID 1",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, critical application servers, and administrator workstations where persistence would have the highest impact.",
            "action": [
              "Symbolic: Implement a correlation search that triggers when a process execution event (Windows Event ID 4688) from an unsigned executable is followed within 5 minutes on the same host by a service creation (4697), scheduled task creation (4698), or a registry Run key modification (Sysmon Event ID 13).",
              "Statistical: For each user, establish a baseline for the rate of persistence events (service creation, task creation, autorun modification) per day over a 30-day period. Alert when a user's daily persistence event count exceeds 3 standard deviations above their historical average, particularly if preceded by the execution of a process with a rare publisher.",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model or LSTM) trained on event log sequences from both benign and malicious activities. The model should score sequences of events (e.g., [Process Execution -> Registry Modification -> Network Connection]). Alert on any sequence that has a high probability of being generated by the 'malicious' state model."
            ]
          },
          {
            "description": "An unsigned or low-reputation process (Windows Event ID 4688) initiates an external network connection (Sysmon Event ID 3, Zeek conn.log) and is immediately followed by the execution of local discovery commands (e.g., 'whoami', 'net user', 'ipconfig', 'hostname') within the same process or parent-child process chain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, egress filtering points, and high-value user endpoints (e.g., developers, executives).",
            "action": [
              "Symbolic: Create a correlation rule that alerts when a process with a known-bad hash (from a threat intelligence feed) executes (Windows Event ID 4688) and is followed within 2 minutes by child process executions of 'whoami.exe', 'net.exe', or 'ipconfig.exe' on the same host.",
              "Statistical: Calculate the entropy of command-line arguments for all processes. Alert when a process with command-line entropy in the 99th percentile also initiates an external network connection (Sysmon Event ID 3) to an IP address not seen in the last 30 days of Zeek conn.log data.",
              "Machine Learning: Train a graph-based anomaly detection model on process lineage graphs (parent-child relationships). Use features like process name, command-line arguments, and network connections. Alert when the model identifies a subgraph with anomalous characteristics, such as a rare parent process spawning discovery tools after making a network connection to a newly registered domain (NRD)."
            ]
          },
          {
            "description": "A host exhibits command and control (C2) network patterns, evidenced by: a) periodic, 'heartbeat' connections to a single external IP (Zeek conn.log); b) DNS queries for TXT or NULL records with high-entropy subdomains (Zeek dns.log); or c) non-HTTP/TLS traffic over standard web ports like 80, 443 (Zeek conn.log).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers, network egress points, and proxy server logs.",
            "action": [
              "Symbolic: Create a detection rule to alert on any DNS query (Zeek dns.log) for a TXT record where the requested domain is on a threat intelligence list of known C2 domains or has been registered within the last 72 hours.",
              "Statistical: For each source host, analyze Zeek conn.log data to calculate a 'beaconing' score based on the standard deviation of connection intervals and the number of unique destination IPs. A low standard deviation (highly regular interval) to a single destination IP yields a high score. Alert on scores exceeding the 98th percentile for all hosts.",
              "Machine Learning: Use a time-series forecasting model (e.g., Prophet or ARIMA) on per-host outbound data volume and connection counts from Zeek conn.log. Train the model on historical data to predict expected traffic patterns. Generate an alert when observed traffic deviates significantly from the forecasted confidence interval, indicating a potential C2 channel not conforming to normal user behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]