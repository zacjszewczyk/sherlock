[
  {
    "information_requirement": "Is the adversary maintaining persistence via Outlook Rules? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1137.005",
        "name": "Outlook Rules",
        "evidence": [
          {
            "description": "The executable file hash of a child process created by OUTLOOK.EXE matches a known malicious indicator, or the host process initiates a network connection to a destination IP address or domain present on a threat intelligence blocklist.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, DNS resolvers",
            "action": [
              "Symbolic (IOC Match): From Windows Event ID 4688 logs, filter for events where the ParentProcessName is 'OUTLOOK.EXE'. For each child process, calculate its executable file hash and compare against a threat intelligence feed of known malicious hashes. Concurrently, from Zeek conn.log and dns.log, correlate by source IP and timestamp to find network activity from the same host. Compare destination IPs and queried domains against a C2 blocklist. Generate a high-severity alert on any match.",
              "Statistical (Anomaly Detection): For all DNS queries (Zeek dns.log) originating from hosts where OUTLOOK.EXE has spawned a child process, calculate the Shannon entropy of the queried domain name. Establish a baseline of normal domain entropy across the enterprise. Flag any query with an entropy score exceeding the 98th percentile (e.g., > 4.0), as this may indicate a Domain Generation Algorithm (DGA).",
              "Machine Learning (Time-Series Analysis): Using Zeek conn.log data associated with processes spawned by Outlook, train a time-series forecasting model (e.g., ARIMA or LSTM) on connection frequency, duration, and data volume. Apply the model to new traffic to detect beaconing behavior, identified as a highly regular, 'heartbeat'-like connection pattern with low data volume that significantly deviates from the forecasted normal behavior."
            ]
          },
          {
            "description": "A process creation event is logged for a known MAPI manipulation tool (e.g., MFCMapi.exe, Ruler.exe), or a PowerShell script block log contains cmdlets or API calls for Exchange/Outlook rule modification (e.g., New-InboxRule, Set-InboxRule, Ews.Service.dll).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Exchange Servers, Administrative jump boxes, Microsoft 365 / Exchange Online audit logs",
            "action": [
              "Symbolic (Keyword/Signature Match): Create a detection rule that monitors Windows Event ID 4688 for NewProcessName fields matching 'MFCMapi.exe' or 'Ruler.exe'. Concurrently, search Windows Event ID 4104 (PowerShell Script Block Logging) for plaintext strings like 'New-InboxRule', 'Set-InboxRule', 'Microsoft.Exchange.WebServices', and 'Ews.Service.dll'. Generate an alert on any match.",
              "Statistical (Frequency Analysis): Establish a baseline of parent-child process relationships for 'powershell.exe' using Windows Event ID 4688. Calculate the frequency of 'OUTLOOK.EXE' as a parent. Flag any occurrence as a rare and high-risk anomaly. Separately, using Windows Event ID 4104, calculate the term frequency-inverse document frequency (TF-IDF) for all script blocks and alert on scripts with high scores for rare terms indicative of mail rule manipulation.",
              "Machine Learning (Classification): Train a supervised classification model (e.g., Random Forest) on labeled PowerShell script block logs (Windows Event ID 4104). Use features such as script length, character distribution, presence of obfuscated content (e.g., Base64, Gzip), and the count of specific API calls/cmdlets. Deploy the model to classify new script executions as benign administrative tasks or malicious rule manipulation."
            ]
          },
          {
            "description": "The OUTLOOK.EXE process is logged as the parent process for the creation of a command-line interpreter (cmd.exe, powershell.exe) or a scripting host (wscript.exe, cscript.exe, mshta.exe), which is an infrequent and highly suspicious event.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Symbolic (Rule-Based Logic): Implement a SIEM rule that generates a high-priority alert for any process creation event (Windows Event ID 4688) where the 'ParentProcessName' field contains 'OUTLOOK.EXE' and the 'NewProcessName' field is one of 'cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', or 'mshta.exe'.",
              "Statistical (First-Seen Analysis): For each user, build a historical baseline of all child processes spawned by 'OUTLOOK.EXE' using Windows Event ID 4688 logs. Create a 'first-seen' model that flags any new parent-child process relationship for a specific user or user group. Alert when a child process like 'cmd.exe' is spawned by 'OUTLOOK.EXE' for the first time for any user in the organization.",
              "Machine Learning (Clustering): Apply an unsupervised clustering algorithm (e.g., DBSCAN or Isolation Forest) to process creation events from Windows Event ID 4688. Use features such as parent process name, child process name, user context, and command-line arguments. Identify clusters of normal activity and automatically flag any event classified as a noise point or outlier, particularly when 'OUTLOOK.EXE' is the parent process."
            ]
          },
          {
            "description": "A child process spawned by OUTLOOK.EXE is executed from a user-writable, non-standard file path (e.g., %APPDATA%, %TEMP%, C:\\Users\\Public) and subsequently initiates network connections to a low-reputation IP address or a domain registered within the last 30 days.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, Web proxies",
            "action": [
              "Symbolic (Correlation Rule): Create a correlation rule that joins Windows Event ID 4688 with Zeek conn.log on host IP and timestamp. Trigger an alert if a process where the parent is 'OUTLOOK.EXE' is executed from a path matching patterns like '*\\\\AppData\\\\*', '*\\\\Temp\\\\*', 'C:\\\\Users\\\\Public\\\\*' AND that process's host initiates a network connection to an IP or domain on a threat intelligence feed of known-bad indicators.",
              "Statistical (Thresholding): For network connections from Outlook-spawned child processes, enrich Zeek dns.log data with WHOIS information. Alert on any connection to a domain registered within the last 30 days (Newly Registered Domain). Concurrently, analyze the destination port distribution in Zeek conn.log for these processes and flag connections to any port that falls outside the top 99.5% of most-used ports for that host, excluding standard ephemeral ports.",
              "Machine Learning (Sequence Analysis): Develop a sequence analysis model using a Recurrent Neural Network (RNN). Define a state sequence based on correlated host and network events (e.g., State 1: Outlook spawns child from temp dir; State 2: Child process starts; State 3: Child process makes DNS query; State 4: Child process connects to IP). Train the model on labeled benign and malicious sequences to predict the probability that a new sequence of events originating from Outlook is malicious."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]