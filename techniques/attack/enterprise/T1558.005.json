[
  {
    "information_requirement": "Is an adversary stealing or misusing Kerberos ccache files to facilitate credential access?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1558.005",
        "name": "Ccache Files",
        "evidence": [
          {
            "description": "A process associated with known credential theft tools (e.g., Kekeo, Rubeus) creates a logon session using a Kerberos ticket, which is a strong indicator of a pass-the-ticket attack.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Privileged access workstations, member servers, domain controllers",
            "action": "1. Symbolic Logic: From Windows Event ID 4688 (Process Creation), hunt for process names or original filenames matching a watchlist of tools (`kekeo.exe`, `Rubeus.exe`). Correlate the Process GUID with a subsequent Windows Event ID 4624 (Logon) event with Logon Type 9 (NewCredentials). An alert must be generated on this specific correlation. 2. Statistical Method: For all Logon Type 9 events (Event ID 4624), profile the parent process name that initiated the logon. Calculate the rarity of each parent process across the environment. A parent process in the 1st percentile of rarity (e.g., a script, a non-standard admin tool) initiating a Kerberos logon is highly suspicious and should be flagged. 3. Machine Learning Application: Train a classification model (e.g., Random Forest) on features from correlated 4688 and 4624 events. Features must include process name, parent process name, command-line length and entropy, user context, logon type, and source workstation. Label known-good activity (e.g., `runas.exe` with `/netonly`) and use the model to classify new correlated events as benign or suspicious."
          },
          {
            "description": "A process is executed with command-line arguments containing patterns indicative of Kerberos ticket theft, conversion for use on other platforms, or injection.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux/macOS systems with command-line logging, Windows systems used for ticket conversion, domain controllers",
            "action": "1. Symbolic Logic: From Windows Event ID 4688 (Process Creation), use regular expressions to search command-line arguments for patterns associated with ticket manipulation, such as `ptt /ticket:`, `tgs::ask`, `tgt::ask`, `klist -c`, and `convert /ccache`. Alert on any match from a non-administrative or non-standard process (i.e., not part of a standard admin script). 2. Statistical Method: For each command line, calculate the Shannon entropy of the argument string. Establish a baseline entropy score for common and legitimate commands. A command line with an unusually high entropy score (e.g., > 95th percentile) may indicate the presence of a long, base64-encoded Kerberos ticket string and must be flagged for review. 3. Machine Learning Application: Use an unsupervised learning model like Isolation Forest on command-line features (length, special character count, argument count, entropy) to identify anomalous command-line executions. This can detect novel or obfuscated attack patterns that do not match known regular expressions."
          },
          {
            "description": "A process accesses or transfers a file matching Kerberos ccache naming conventions (`krb5cc_*`, `krb5.ccache`) in a manner inconsistent with normal user or system behavior.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers hosting Linux user home directories, network egress points, Linux developer workstations",
            "action": "1. Symbolic Logic: In Zeek files.log, search for file transfers where the filename matches regex `krb5cc_` or `krb5.ccache`. Correlate the `uid` from files.log with the `uid` in conn.log to identify the destination. Alert if the destination is an external IP address or an unusual internal host not associated with backups or standard file movement. 2. Statistical Method: From Windows Event ID 4663 (Object Access), baseline the processes that normally access ccache files on file servers (e.g., `sshd`, `smbd`). Create a whitelist of these processes. Any access from a process not on the whitelist (e.g., `powershell.exe`, `rundll32.exe`, `wscript.exe`) must be flagged. Calculate the frequency of access per process and alert on outliers (e.g., a process accessing > 3 standard deviations more files than its baseline). 3. Machine Learning Application: Create a graph of (user) -> [accesses] -> (file) -> [is_transferred_to] -> (destination). Use a graph-based anomaly detection algorithm to find unusual paths, such as a low-privilege user's process accessing a high-privilege user's ccache file, followed by a network transfer to an unknown IP."
          },
          {
            "description": "A sequence of actions involving Kerberos utilities or ccache file access deviates from the established behavioral baseline for a user or host, suggesting reconnaissance followed by theft.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, bastion hosts, servers with interactive logins",
            "action": "1. Symbolic Logic: Define a suspicious sequence as: a process accesses a ccache file (Event ID 4663) and is immediately followed by the same Process ID creating a network connection to an external address (correlate with Zeek conn.log) or executing a compression utility like `tar` or `zip` (Event ID 4688). Alert on this chained behavior. 2. Statistical Method: For each user, model the sequence of commands they typically run in a session using a Markov chain to establish transition probabilities between commands. A low-probability transition, such as `klist` followed by `powershell -enc ...`, would be flagged as anomalous if it exceeds a percentile-based risk threshold. 3. Machine Learning Application: Use a time-series anomaly detection model (e.g., LSTM autoencoder) on event logs for a given host or user. The model learns the normal temporal patterns of process executions and file accesses. An event sequence that results in a high reconstruction error from the autoencoder, such as `klist` being run by an unusual parent process (`winword.exe`) at an odd hour, must be identified as a significant anomaly."
          },
          {
            "description": "A Kerberos ticket is used to authenticate from a source IP address or to a service that is anomalous for the associated user account, suggesting a stolen ticket is in use.",
            "data_sources": [
              "Zeek kerberos.log",
              "Zeek conn.log",
              "Windows Event ID 4769",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain controllers, critical application servers, network choke points",
            "action": "1. Symbolic Logic: In Windows Event ID 4769 (Kerberos Service Ticket Requested), alert if the Service Name is `krbtgt` and the request comes from a client address that is not a Domain Controller, which may indicate a Golden Ticket attack potentially enabled by credentials from a ccache file. 2. Statistical Method: Using Zeek kerberos.log, build a baseline for each user of (source_IP, destination_service). For each new authentication, calculate a rarity score. If a user authenticates from a source IP they have never used before (or is in the bottom 5% of frequency) to a service they rarely access, the combined rarity score exceeds a threshold, triggering an alert. This detects pass-the-ticket from an unusual location. 3. Machine Learning Application: Use a clustering algorithm (e.g., DBSCAN) on authentication event features (user, source country, source ISP, service principal name, time of day). The algorithm will group normal activity into dense clusters. Any authentication event that falls outside of these clusters is classified as a noise point or an anomaly, indicative of a potential pass-the-ticket attack using a stolen ccache file."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]