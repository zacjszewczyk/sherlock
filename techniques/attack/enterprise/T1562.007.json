[
  {
    "information_requirement": "Has the adversary attempted to evade defenses by modifying cloud firewalls? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1562.007",
        "name": "Disable or Modify Cloud Firewall",
        "evidence": [
          {
            "description": "A cloud firewall rule modification event is logged where the source IP address or CIDR range matches an entry on a current, high-confidence threat intelligence feed.",
            "data_sources": [
              "Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)",
              "Threat Intelligence Platform Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM and Network Management APIs, Organizational Threat Intelligence Platform, Network Gateway/Egress Points",
            "action": [
              "Symbolic Logic: Ingest a high-confidence threat intelligence feed of known malicious IP addresses. Create a rule to parse all cloud firewall modification events (e.g., AWS `AuthorizeSecurityGroupIngress`, Azure `securityRules/write`). For each event, extract the source IP/CIDR being added to the rule. Generate a high-severity alert if the extracted IP/CIDR matches an entry in the threat intelligence feed.",
              "Statistical Method: For any alert generated by the symbolic logic, query Zeek conn.log for all connections from the malicious IP to the target host in the 60 minutes following the rule change. Calculate the 95th percentile of bytes transmitted (`orig_bytes`) for all connections to that host over the past 30 days. Generate a second alert if the bytes transmitted from the malicious IP exceed this percentile, indicating potential data staging or exfiltration.",
              "Machine Learning: Train a logistic regression classification model to predict if a firewall change is malicious. Use features such as: [is_from_threat_feed (boolean), user_role (categorical), time_of_day (cyclical), is_outside_business_hours (boolean), source_ip_reputation_score (numeric)]. An output probability score above a tuned threshold (e.g., 0.85) should trigger an automated investigation playbook."
            ]
          },
          {
            "description": "A cloud firewall rule modification event includes a user-agent string, rule name, or description text that contains a signature associated with known offensive security tools (e.g., 'pacu', 'Prowler') or generic malicious indicators (e.g., 'pwn', 'backdoor').",
            "data_sources": [
              "Cloud Audit Logs (e.g., AWS CloudTrail `userAgent` field, Azure Activity Logs `httpRequest` field, GCP Audit Logs `requestMetadata.callerSuppliedUserAgent` field)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM and Network Management APIs, Cloud Service Provider API Endpoints",
            "action": [
              "Symbolic Logic: Maintain a list of regular expressions for known malicious tool user-agents, rule names, and descriptions (e.g., '(?i)pacu', '(?i)prowler', '(?i)backdoor', '(?i)temp-allow'). Create a rule to scan the user-agent, rule name, and description fields of all cloud firewall modification events against this regex list. Generate an alert on any match.",
              "Statistical Method: For all newly created firewall rules, calculate the Shannon entropy of the rule name and description strings. Establish a baseline for normal entropy scores across all rules in your environment. Flag rules with unusually high entropy (suggesting randomized names from a tool) or unusually low entropy (suggesting simple, repeated names like 'test'). Generate an alert if a rule's entropy score deviates by more than 3 standard deviations from the mean.",
              "Machine Learning: Use a pre-trained Natural Language Processing (NLP) text classification model (e.g., a bag-of-words model with a Naive Bayes classifier) on the rule name and description fields. Train the model on a labeled dataset of benign (e.g., 'allow-web-traffic-prod') and malicious (e.g., 'pwn-ssh-temp') rule names. The model will classify newly created rules in real-time. Alert on any rule classified as 'malicious' with a confidence score > 0.90."
            ]
          },
          {
            "description": "A cloud firewall rule is created or modified to be overly permissive, such as allowing ingress from all IP addresses ('0.0.0.0/0' or '::/0'), or opening high-risk management ports (e.g., RDP 3389, SSH 22, WinRM 5985/5986) to the internet.",
            "data_sources": [
              "Cloud Audit Logs (e.g., AWS CloudTrail `ipPermissions.ipRanges`, Azure Activity Logs `properties.sourceAddressPrefix`)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Security Group and Firewall Rule Configurations, Virtual Private Cloud (VPC) Firewall Rules, Network Gateway/Egress Points",
            "action": [
              "Symbolic Logic: Define a strict policy of 'never-allow' rules, such as any rule containing a source CIDR of '0.0.0.0/0' or '::/0' paired with sensitive destination ports (22, 135, 445, 1433, 3306, 3389, 5985, 5986). Create a real-time rule that triggers an immediate, high-severity alert whenever a firewall modification event violates this static policy.",
              "Statistical Method: For all ports, maintain a historical frequency distribution of their exposure to the internet ('0.0.0.0/0'). Calculate the rarity of exposing a given port to the internet. If a modification exposes a port that is in the bottom 5th percentile of historical exposure frequency (e.g., exposing SMB port 445 to the internet for the first time), generate a critical-severity alert.",
              "Machine Learning: Use an anomaly detection model (e.g., Isolation Forest) on the tuple of (Port, Protocol, Source_CIDR_is_Any). Train the model on a baseline of all existing, approved firewall rules to learn the 'normal' state of the firewall configuration. Any new rule that the model flags as a significant outlier (anomaly score below a tuned threshold) triggers an alert for security review."
            ]
          },
          {
            "description": "A cloud firewall modification API call is attributed to a user identity or source IP that is anomalous when compared to that user's established historical baseline of activity (e.g., first-time change, change from a new Autonomous System Number (ASN), change outside of business hours).",
            "data_sources": [
              "Cloud Audit Logs (e.g., AWS CloudTrail `userIdentity`, `sourceIPAddress`, `eventTime`)",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM and Network Management APIs, VPN/Zero Trust Network Access (ZTNA) Concentrators, Active Directory Domain Controllers",
            "action": [
              "Symbolic Logic: Maintain an explicit list of authorized user accounts and service principals permitted to make firewall changes. Create a rule that generates an alert if any firewall modification event is performed by a user or principal not on this allow-list.",
              "Statistical Method: For each user permitted to make firewall changes, establish a baseline of normal activity including: typical time-of-day, day-of-week, source ASN, and frequency of changes. Use a scoring system where deviations add to a risk score (e.g., change from new ASN: +10, change at 3 AM: +15, user's first change in 180 days: +25). Generate an alert if the cumulative risk score exceeds a percentile-based threshold (e.g., 98th percentile of all change scores).",
              "Machine Learning: Implement a user and entity behavior analytics (UEBA) model to perform multi-variate anomaly detection. The model should monitor features like user identity, source IP geolocation, ASN, time since last change, and the type of change being made. An event flagged as a high-confidence anomaly by the UEBA model, indicating a significant deviation from the user's established pattern of life, triggers an alert."
            ]
          },
          {
            "description": "Within a 30-minute window following a cloud firewall rule modification that opens a new port, network traffic is observed on that port from the newly allowed source IP, immediately followed by anomalous host-based activity such as a failed logon attempt from that same source IP.",
            "data_sources": [
              "Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)",
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Network Gateways, Targeted Virtual Machines or Container Hosts, Authentication Log Aggregators",
            "action": [
              "Symbolic Logic: Create a correlation rule. Trigger: A cloud firewall rule is modified. Step 1: Within 15 minutes, look for a connection in Zeek conn.log where the `id.orig_h` (source IP) and `id.resp_p` (destination port) match the new rule. Step 2: If a connection is found, look for a failed login (Windows Event ID 4625) on the destination host from the same source IP within 5 minutes. A match on all three conditions generates a high-severity alert.",
              "Statistical Method: Following a rule change that opens a new port, monitor the volume of failed logins (Windows Event ID 4625) on the destination host. Establish a baseline for the hourly failed login rate for that host. If the rate of failed logins in the hour following the rule change exceeds the 99th percentile of the historical baseline, alert on potential brute-force activity.",
              "Machine Learning: Use time series analysis (e.g., ARIMA or SARIMA) to forecast the expected network traffic volume (in bytes and packets) and login attempt counts for the affected host. After a firewall rule change, compare the actual observed values against the forecasted values with 99% confidence intervals. If the observed values significantly and persistently exceed the upper bound of the confidence interval, classify the event as an anomaly and generate an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]