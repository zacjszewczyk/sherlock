[
  {
    "information_requirement": "Is the adversary staging data prior to exfiltration? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1074",
        "name": "Data Staged",
        "evidence": [
          {
            "description": "A file creation or modification event where the file hash or filename matches a known indicator of compromise (IOC) associated with adversary data staging tools or archives.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories, shared network drives, common staging directories (e.g., C:\\Windows\\Temp, C:\\Users\\Public), and application data folders.",
            "action": [
              "Symbolic: Monitor process creation events (Sysmon Event ID 1) and file creation events (Sysmon Event ID 11) for filenames or file hashes. Join these events against a threat intelligence feed of known malicious archivers, staging script names, or specific archive filenames (e.g., 'update.zip'). An exact match on a known malicious hash or filename should trigger a high-priority alert.",
              "Statistical: For file creation events (Sysmon Event ID 11), calculate the Jaccard similarity between the observed filename and a list of commonly used benign archive names. Flag filenames with low similarity to the benign set but high similarity to known malicious patterns (e.g., random alphanumeric strings + .zip) that fall outside a normal distribution (e.g., > 95th percentile of rarity).",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from file creation and process execution events. Features should include file extension, parent process name, file path entropy, and whether the file hash/name is present in CTI. Use the model to classify each file creation event as 'benign' or 'malicious staging' based on these combined characteristics."
            ]
          },
          {
            "description": "An archiving utility (e.g., 7z.exe, rar.exe) or a living-off-the-land binary (e.g., powershell.exe, certutil.exe) is executed with command-line arguments for password-protected compression, creating an archive file in an unusual location.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Common staging directories (e.g., C:\\Windows\\Temp, C:\\$Recycle.Bin), user profile directories (e.g., %APPDATA%), and network-accessible temporary folders.",
            "action": [
              "Symbolic: Create a detection rule that monitors process command lines (Sysmon Event ID 1) for archiving tools (e.g., 7z.exe, rar.exe, tar.exe) or LOLBins (powershell.exe, certutil.exe) combined with specific flags for password protection (e.g., '-p', '-hp', '-s', 'Protect-Archive', 'Password'). Trigger an alert if the process creates a file with a common archive extension (.zip, .rar, .7z, .gz) in a high-risk directory like C:\\Users\\Public.",
              "Statistical: For each process, calculate a rarity score for the combination of (process name, command-line flags, output directory). Establish a baseline of common combinations observed over 30 days. A combination that is statistically rare (e.g., in the 99th percentile of rarity) indicates anomalous behavior. For example, 'powershell.exe' creating a password-protected archive in 'C:\\Perflogs' would be highly anomalous.",
              "Machine Learning: Use a sequence analysis model (e.g., an LSTM) to analyze the sequence of command-line arguments for common processes. Train the model on benign command-line sequences from baseline data. Flag sequences that have a high reconstruction error or are classified as anomalous, particularly those involving file path manipulation, compression, and password-related keywords."
            ]
          },
          {
            "description": "A single process reads a high number of files from disparate directory paths within a short time window and writes the output to a single file, characteristic of data aggregation.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, document repositories (e.g., SharePoint mount points), user home directories, and source code repositories.",
            "action": [
              "Symbolic: For a given Process GUID (from Sysmon Event ID 1), create a rule that triggers if the count of unique source directories from which it reads files (Windows Event ID 4663 with 'ReadData' access mask) exceeds a hard threshold (e.g., >20 unique directories) within a 5-minute window, and it also performs a single file write with a common archive extension.",
              "Statistical: For each process, calculate the Shannon entropy of the source file paths it reads from within a time window. Establish a per-process baseline for path entropy (e.g., 'explorer.exe' might have high entropy, while 'lsass.exe' should have very low). An entropy score that exceeds a dynamic threshold (e.g., 3 standard deviations above the process-specific mean) indicates collection from diverse locations. Correlate this with a low number of output file writes.",
              "Machine Learning: Develop an unsupervised learning model (e.g., an Isolation Forest) based on features from process file access patterns. Features should include: count of unique files read, count of unique directories read from, ratio of reads to writes, entropy of source paths, and total bytes read vs. written. Use the model to score each process's activity session and alert on sessions identified as outliers."
            ]
          },
          {
            "description": "A statistically significant spike in the volume or total size of file write operations within a temporary or publicly writable directory, inconsistent with historical patterns for the host or directory.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System-wide temporary directories (C:\\Windows\\Temp), user-specific temporary directories (%TEMP%), public folders (C:\\Users\\Public), and the Recycle Bin for all users.",
            "action": [
              "Symbolic: Define a rule that triggers if the number of file create events (Sysmon Event ID 11) in a specific staging directory (e.g., C:\\Windows\\Temp) exceeds a fixed threshold (e.g., 50 files in 1 minute) from a single process not on an allowlist of benign software installers or patchers.",
              "Statistical: For each host and key directory (e.g., C:\\Windows\\Temp), monitor the rate of file write events (Windows Event ID 4663) per minute. Use a simple moving average and standard deviation bands to model the baseline. A sudden spike in write activity that exceeds a dynamic threshold (e.g., >3 standard deviations above the moving average) should generate an alert.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or Prophet) on the volume of data written (in bytes) per minute to key staging directories. The model will learn the normal daily and weekly cycles of disk activity. An observation that falls outside the model's prediction interval (confidence band) indicates an anomalous spike in write activity that cannot be explained by normal seasonality."
            ]
          },
          {
            "description": "A high-volume internal network transfer to a host (e.g., a user workstation) that is not a designated file or backup server, indicating consolidation of data onto a single machine for subsequent exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, especially traffic flowing from servers to workstations, and traffic between workstations in different departments. The egress point of the network gateway.",
            "action": [
              "Symbolic: Create a rule that alerts when a single internal TCP session in Zeek conn.log from a server-class IP to a workstation-class IP transfers more than a defined static threshold of data (e.g., >1 GB) on a port not associated with standard file sharing protocols (e.g., not TCP/445).",
              "Statistical: For each source-destination host pair on the internal network, profile the 95th percentile of data transferred (orig_bytes + resp_bytes in Zeek conn.log) over a 30-day baseline period. Generate an alert if a new connection's total bytes exceeds this established percentile, especially if the destination host is a workstation. This identifies transfers that are unusually large for that specific communication path.",
              "Machine Learning: Use a graph-based anomaly detection algorithm on the network connection graph represented by Zeek conn.log. Nodes are hosts and edges are weighted by total data transferred. The algorithm can identify communities (e.g., departments, server groups) and detect anomalous new edges or significant changes in edge weights that represent a deviation from normal traffic patterns, such as a workstation suddenly becoming a central 'hub' for data collection."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]