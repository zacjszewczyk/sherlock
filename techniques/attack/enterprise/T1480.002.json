[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by checking for a pre-existing infection via mutual exclusion mechanisms?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1480.002",
        "name": "Mutual Exclusion",
        "evidence": [
          {
            "description": "A process creates or accesses a named pipe or mutex whose name is present on a threat intelligence list of known malicious indicators.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 17"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Continuously scan command-line arguments from process creation events (Windows Event ID 4688) and pipe names from pipe creation events (Sysmon Event ID 17) for strings that match a maintained threat intelligence list of known malicious mutex names. Alert on any direct match.",
              "Statistical: Calculate the frequency of known malicious mutex name matches across the enterprise over time. Establish a baseline rate of alerts. A sudden spike in the volume of alerts for a single, specific mutex name across multiple hosts may indicate a coordinated campaign.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features such as the process name, parent process name, file path, and a binary feature indicating a match against the known-bad mutex list. Use the model to score each event, identifying high-probability malicious activity that warrants immediate investigation."
            ]
          },
          {
            "description": "A process, particularly one launched from a non-standard directory, executes and terminates in a duration less than a statistically derived low-percentile threshold (e.g., < 2 seconds), consistent with a check-and-exit behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Create a rule to alert when a process creation event (4688) is followed by a process termination event (4689) for the same Process ID within a 2-second window, where the process image path is in a high-risk directory like %TEMP% or %APPDATA%.",
              "Statistical: For each unique process image name, calculate the historical distribution (e.g., 5th, 25th, 50th percentiles) of its execution duration by correlating start (4688) and stop (4689) events. Flag any new instance of a process whose execution duration falls below the 5th percentile for that specific process name as an anomalous short-lived process.",
              "Machine Learning: Use an anomaly detection algorithm (e.g., Isolation Forest) trained on features including process execution duration, process path, parent process, and user context. The model can identify rare combinations of features, such as an uncommon process running from a temp directory with an extremely short lifespan, that may not be flagged by simpler statistical thresholds."
            ]
          },
          {
            "description": "A process not associated with a security product creates a named pipe or mutex whose name matches the known naming convention of a deployed security tool (e.g., EDR, AV).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 17"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers with deployed security solutions (EDR, AV)",
            "action": [
              "Symbolic: Maintain a watchlist of mutex/pipe names used by deployed security tools. Create a detection rule that triggers when a process, whose image path is not on an allowlist of security tool binaries, creates a pipe (Sysmon Event ID 17) that matches an entry in the watchlist.",
              "Statistical: For each mutex on the security tool watchlist, profile the set of legitimate processes that normally access it and their access frequency. Alert when a process not in the historical baseline (i.e., a process with a historical access frequency of zero) attempts to access one of these mutexes.",
              "Machine Learning: Develop a classification model where features include the process name, its parent process, its file path, and a binary feature indicating if the accessed mutex name is on the security tool list. Train the model to classify access attempts as either 'benign' (the EDR service itself) or 'suspicious' (e.g., powershell.exe from a temp directory)."
            ]
          },
          {
            "description": "A process creates a file in a temporary or public directory, immediately followed by the same process initiating an outbound network connection, consistent with using a file lock as a mutex before C2 communication.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Common staging directories (%TEMP%, %APPDATA%, C:\\Users\\Public, /tmp, /var/tmp), Network Egress Points",
            "action": [
              "Symbolic: Create a correlation rule that joins file creation events (Sysmon Event ID 11) in staging directories with network connection logs (Zeek conn.log) by Process ID and hostname within a 5-second window. Alert if the destination IP is not on an allowlist of known-good domains.",
              "Statistical: Calculate the Shannon entropy for all new filenames created in staging directories. Flag filenames with entropy scores exceeding a high percentile (e.g., 95th percentile) as suspicious. Increase the risk score if the process creating the high-entropy filename also initiates a network connection to a destination IP with a low reputation score.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on events combining file creation and network connection features (file path, filename entropy, destination IP, destination port, bytes sent). Isolate clusters that form around high-entropy filenames and external connections to non-standard ports, flagging them as behaviorally consistent with malware using file-based mutexes."
            ]
          },
          {
            "description": "A process creates a named pipe or mutex with a high-entropy (randomly generated) name or a name constructed from unique system identifiers (e.g., volume serial number, hostname).",
            "data_sources": [
              "Sysmon Event ID 17",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Use regular expressions to search pipe names (Sysmon Event ID 17) and command-line arguments (Windows Event ID 4688) for patterns like GUIDs or long alphanumeric strings. For example, a regex like `/[a-f0-9]{20,}/i` can find long hex strings often used in generated names.",
              "Statistical: For each process image name, collect all associated pipe/mutex names observed across the environment. Calculate the Shannon entropy for each name. Establish a baseline entropy level for legitimate mutexes used by that process. Flag any observed mutex from that process with an entropy score exceeding 3 standard deviations above the mean for that process.",
              "Machine Learning: Train a character-level LSTM (Long Short-Term Memory) autoencoder on a large corpus of legitimate mutex and pipe names from the environment. Use the trained model to calculate the reconstruction error for all newly observed names. A high reconstruction error indicates the name is anomalous and does not conform to learned legitimate patterns, suggesting algorithmic generation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]