[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying host software binaries?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1554",
        "name": "Compromise Host Software Binary",
        "evidence": [
          {
            "description": "Upon execution, a binary's SHA256 hash does not match a pre-established baseline of known-good hashes for its file path, or its embedded digital signature is invalid, untrusted, or expired.",
            "data_sources": [
              "Windows Event ID 1",
              "Zeek pe.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical system directories (e.g., C:\\Windows\\System32, /usr/bin), application installation directories (e.g., C:\\Program Files), network file shares hosting executables, domain controllers, application servers, and developer workstations.",
            "action": [
              "Maintain an allowlist of known-good SHA256 hashes for critical system and application binaries. Join process creation logs (Windows Event ID 1) with this allowlist on file path. Alert if the process's FileHash does not match the allowlisted hash, or if the SignatureStatus is not 'Valid'.",
              "For each unique binary file path, calculate the daily count of distinct SHA256 hashes observed. Establish a 30-day baseline mean and standard deviation for this count. Alert if the daily count for a binary exceeds three standard deviations above its historical mean, indicating abnormal modification activity outside of patch cycles.",
              "Train a binary classification model (e.g., XGBoost) on process creation events (Windows Event ID 1). Use features including: SignatureStatus (one-hot encoded), a boolean flag for HashInAllowlist, parent process path, command-line argument length and entropy, and process path entropy. The model will classify each new process execution as 'benign' or 'suspicious-binary-modification', alerting on high-confidence 'suspicious' classifications."
            ]
          },
          {
            "description": "A file write or rename event targets an executable or library file (e.g., .exe, .dll, .sys, .so) in a protected system or application directory, and the initiating process is not an authorized installer or software update agent.",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of production servers and user endpoints, software deployment servers, code repositories, and CI/CD pipeline build servers.",
            "action": [
              "Monitor file creation events (Windows Event ID 11) where TargetFilename ends in a binary extension (.exe, .dll, .sys) and is located in a protected directory (e.g., C:\\Windows\\*, C:\\Program Files\\*). Alert if the Image (initiating process) is not on a pre-defined allowlist of trusted installers (e.g., msiexec.exe, TrustedInstaller.exe, wuauclt.exe, approved software deployment tool agents).",
              "For each host, compute the daily Shannon entropy of the set of unique process names (Image) that write to protected directories. A higher entropy value indicates a wider variety of processes are performing writes. Alert if a host's daily entropy score exceeds the 98th percentile of its own 30-day historical distribution, suggesting an unusual diversity of file-writing processes.",
              "Use an anomaly detection model (e.g., Isolation Forest) trained on benign file modification events (Windows Event ID 11). Features should include the source process path (Image), target file path (TargetFilename), the user context, and the parent process of the source. The model learns normal software installation and patching behavior and flags new file write events that are statistical outliers, indicating a potential unauthorized modification."
            ]
          },
          {
            "description": "A process that typically does not perform network activity (e.g., notepad.exe, calc.exe) or a server-side application binary initiates an outbound network connection, especially to a non-standard port or a low-reputation IP address.",
            "data_sources": [
              "Windows Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint process and network monitoring, network egress points (firewalls, web proxies), DNS resolution logs, and Intrusion Detection Systems (IDS).",
            "action": [
              "Maintain a blocklist of processes that should never initiate network connections (e.g., notepad.exe, calc.exe, services.exe). Correlate process execution data with network connection logs (Windows Event ID 3, Zeek conn.log). Generate a high-priority alert if a process on this blocklist makes an outbound connection to an external IP address.",
              "For each process name, establish a historical baseline of its network activity, including the set of unique destination ports and the average data volume per connection (total_bytes in Zeek conn.log). Alert if a process initiates a connection to a destination port not in its historical baseline set, or if the data volume of a single connection exceeds the 99th percentile of its historical distribution.",
              "Apply time-series forecasting (e.g., Prophet or LSTM) to network traffic volume, aggregated by source host and destination port, over 5-minute intervals. The model learns the cyclical patterns of normal network communications. An alert is triggered when observed traffic significantly deviates from the model's predicted forecast (i.e., the residual error is anomalous), which can detect a compromised binary being used for command and control or data exfiltration."
            ]
          },
          {
            "description": "A trusted software binary spawns a suspicious child process (e.g., winword.exe spawning powershell.exe), loads an unsigned or unusually located module/library, or exhibits a parent-child process relationship that is rare across the enterprise.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on all endpoints and servers, system memory where modules are loaded, user profile directories (e.g., %APPDATA%, %TEMP%), and application plugin directories.",
            "action": [
              "Create a rule to detect known-bad process chains (e.g., AcroRd32.exe -> cmd.exe, outlook.exe -> powershell.exe). Also, alert on any module load event (Windows Event ID 7) where the Signed field is 'false' and the ImageLoaded path is in a user-writable directory (e.g., C:\\Users\\*, C:\\ProgramData\\*).",
              "For every parent process observed in the environment, calculate the prevalence of each child process it spawns. Create a lookup table of parent-child pairs and their frequency. Alert when a new process creation event occurs where the parent-child pair has a prevalence of less than 0.1% across the entire enterprise, indicating a statistically rare and suspicious event.",
              "Model process activity as a directed graph where nodes are processes and edges represent parent-child relationships. Use a graph embedding algorithm (e.g., node2vec) to learn vector representations of each process based on its structural role in the graph. Cluster these vectors to find communities of normal behavior. A process whose vector is a significant outlier from any established cluster is flagged as anomalous, potentially indicating a compromised binary behaving in a novel way."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]