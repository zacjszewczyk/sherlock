[
  {
    "information_requirement": "Has the adversary staged web content on newly acquired or compromised infrastructure to be used as link targets against our organization? (TA0042 - Resource Development) (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1608.005",
        "name": "Link Target",
        "evidence": [
          {
            "description": "An internal system initiates a DNS query or a network connection to an external destination (domain, URL, or IP address) that is listed on a high-confidence threat intelligence feed with a category of 'phishing', 'malware', or 'command and control'.",
            "data_sources": [
              "Zeek intel.log",
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Network Egress Points, Web Proxies, Endpoint Devices",
            "action": [
              "Create a SIEM rule that triggers an alert when Zeek's intel.log shows a 'policy' notice type for an indicator match from a high-confidence feed. The rule must correlate the source IP from the log with internal asset and identity management systems to enrich the alert with hostname, user, and department information.",
              "For each threat intelligence feed, establish a baseline of the daily hit count over the last 90 days. Calculate the daily moving average and standard deviation. Generate a high-priority alert if the daily hit count for a single feed exceeds three standard deviations above the moving average, signaling a potential targeted campaign.",
              "Train a logistic regression classification model using labeled historical alert data. Use features including threat feed confidence score, indicator type (domain, IP, URL), indicator age, internal host's criticality, and time of day. Apply the model to new intel hits to generate a 'true positive probability' score, and automatically escalate alerts with a score above 0.85 for immediate review."
            ]
          },
          {
            "description": "An internal system generates a DNS query (observed in Zeek dns.log) or initiates an HTTP connection (observed in Zeek http.log) to a domain that satisfies two conditions: 1) its registration date is within the last 30 days, and 2) its name has a Levenshtein distance of 1 or 2 from one of the organization's primary domains, or it contains a homoglyph of a character in a primary domain.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "External Certificate Transparency Logs",
              "External WHOIS data feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Certificate Transparency Log Monitors, Web Proxies, External Passive DNS Databases",
            "action": [
              "Proactively generate a list of typosquat and homoglyph variations of the organization's domains using a tool like dnstwist. Ingest this list into a SIEM watchlist. Create a rule that triggers an alert when a DNS query in Zeek dns.log or an HTTP host header in Zeek http.log matches an entry on the watchlist.",
              "For every domain in Zeek dns.log that is not on a corporate or partner allowlist, calculate the Levenshtein distance to the nearest domain on the allowlist. Establish a baseline for the daily count of queries to domains with a distance of 1 or 2. Alert if this daily count exceeds the 95th percentile of the trailing 30-day distribution.",
              "Develop a time-series anomaly detection model (e.g., ARIMA or Prophet) on the daily volume of DNS queries for domains that are both newly registered (less than 30 days old) and have a Levenshtein distance of 1 or 2 from corporate domains. The model should forecast the expected volume for the next 24 hours. Trigger an alert if the actual query volume surpasses the model's 99% confidence interval."
            ]
          },
          {
            "description": "An HTTP response body, extracted from network traffic via Zeek (files.log), contains HTML, CSS, or JavaScript content matching specific signatures (e.g., unique HTML comment strings, specific CSS class names, or obfuscated JavaScript function patterns) associated with known phishing kits.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Network TAPs at Internet Gateway, Content Delivery Networks",
            "action": [
              "Deploy a YARA rule set specifically designed to detect phishing kits (e.g., from public or commercial repositories) to scan all HTML and JavaScript files extracted by Zeek (files.log). Create a SIEM rule to generate a high-severity alert upon any YARA match, including the matching rule name and the source/destination IPs.",
              "For all web pages containing a <form> element, calculate a 'form legitimacy score'. Features include: 1) whether the form's 'action' attribute posts to a different domain than the page's host, 2) the entropy of JavaScript associated with the form's 'onsubmit' event, and 3) the ratio of password fields to text fields. Establish a baseline score from known-good internal and external login pages. Alert on any page whose score deviates by more than three standard deviations from the legitimate baseline.",
              "Fine-tune a pre-trained NLP transformer model (e.g., BERT) on a labeled dataset of benign and phishing HTML pages. The model should learn to classify pages based on their raw HTML content. Deploy this model to classify all HTML files extracted from Zeek files.log in near-real-time. Pages classified as 'phishing' with a confidence score > 0.90 should trigger an automated workflow to block the source domain and alert the security team."
            ]
          },
          {
            "description": "Multiple internal systems make DNS queries for newly registered domains (NRDs, registered < 30 days) followed by brief TCP connections (< 2 seconds) with low byte counts (< 512 bytes), indicating potential reconnaissance or C2 check-ins disguised as web traffic.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "WHOIS data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Network Egress Points, Core Network Switches",
            "action": [
              "Create a SIEM correlation rule that joins Zeek dns.log with Zeek conn.log on the source IP. Trigger an alert if a DNS query for a newly registered domain (<30 days old, enriched via a WHOIS feed) is followed within 5 seconds by a TCP connection from the same source IP to the resolved destination IP where the conn_state is 'S0', 'REJ', or the duration is less than 2 seconds and orig_bytes is less than 512.",
              "For all connections to NRDs on ports 80 and 443, calculate the 5th percentile for connection duration and originated bytes over a 30-day rolling window. Create a rule that flags individual connections where both metrics fall below this 5th percentile threshold. Aggregate these flagged events and alert if more than 10 unique internal hosts exhibit this behavior to the same NRD within a 24-hour period.",
              "Apply a DBSCAN clustering algorithm to all connections to NRDs. Use features such as connection duration, originated bytes, destination port, and a vectorized representation of the user agent string. Periodically run the algorithm and identify small, dense clusters of connections that do not group with the large 'normal web browsing' cluster. These anomalous clusters represent coordinated, non-standard activity and should be investigated."
            ]
          },
          {
            "description": "An internal system makes an outbound HTTP request to a domain associated with a cloud service provider or content delivery network (e.g., *.appspot.com, *.blob.core.windows.net, github.io) where the URI path has a calculated Shannon entropy score significantly higher than the baseline for that domain.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Egress Firewalls, DNS Resolvers",
            "action": [
              "Maintain a watchlist of domains for commonly abused PaaS/SaaS platforms (e.g., '*.blob.core.windows.net', '*.s3.amazonaws.com', '*.appspot.com', 'github.io'). Create a SIEM rule that alerts on any HTTP request from Zeek http.log where the 'host' header matches the watchlist and the URI path ends with a high-risk file extension ('.exe', '.dll', '.ps1', '.vbs', '.js').",
              "For each domain on the abused services watchlist, profile the Shannon entropy of the URI path from Zeek http.log over a 30-day period to establish a per-domain baseline. Calculate the 99th percentile of entropy for each domain. Create a rule that triggers an alert when an HTTP request to one of these domains has a URI path entropy exceeding its specific 99th percentile threshold.",
              "Train an Isolation Forest anomaly detection model on all HTTP requests to the abused services watchlist. Use features including URI path entropy, query parameter count, request method (GET/POST), user-agent string, and referrer presence. Apply the trained model to score all new requests in real-time. Requests with an anomaly score in the top 1% should be flagged for analyst review."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]