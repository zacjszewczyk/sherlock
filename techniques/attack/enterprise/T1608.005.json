[
  {
    "information_requirement": "Has the adversary staged web content on newly acquired or compromised infrastructure to be used as link targets against our organization? (TA0042 - Resource Development) (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1608.005",
        "name": "Link Target",
        "evidence": [
          {
            "description": "A DNS query or outbound network connection from an internal host to a domain, URL, or IP address that is present on a high-confidence threat intelligence feed for known phishing or malware hosting.",
            "data_sources": [
              "Zeek intel.log",
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Network Egress Points, Web Proxies",
            "action": [
              "Symbolic: Create a detection rule that triggers an alert when Zeek's intel.log records a 'hit' where an indicator (IP, domain, URL) from an intelligence feed is seen in conn.log, dns.log, or http.log. The rule should automatically enrich the alert with host and user information.",
              "Statistical: For each threat intelligence source, calculate the historical hit rate (hits per day). Monitor for statistically significant deviations (e.g., more than 3 standard deviations above the 90-day moving average) in the daily hit count from a specific feed, which could indicate a new, targeted campaign.",
              "Machine Learning: Develop a classification model (e.g., Logistic Regression) that uses features from the intelligence hit (e.g., feed source confidence, indicator type, target host's role, time of day) to predict the likelihood that a hit represents a true positive, targeted attack versus opportunistic scanning or a false positive. Use this model to prioritize alerts for analyst review."
            ]
          },
          {
            "description": "An internal host attempts to resolve or connect to a domain that was registered recently (e.g., within the last 30 days) and exhibits characteristics of typosquatting or homoglyphs related to the organization's own domains or its key partners.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "External Certificate Transparency Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Certificate Transparency Log Monitors, Web Proxies",
            "action": [
              "Symbolic: Generate a list of potential typosquatted and homoglyph domains based on the organization's primary domains. Monitor Certificate Transparency logs and passive DNS for the registration of these domains. Create a watchlist and trigger an alert if any internal host attempts to resolve or connect to a domain on this list, as observed in Zeek dns.log or http.log.",
              "Statistical: Calculate the Levenshtein distance between all domains queried in Zeek dns.log and a master list of legitimate corporate and partner domains. Flag domains with a small edit distance (e.g., 1 or 2) that are not on an allowlist. Calculate the daily frequency of such queries and alert on unusual spikes (e.g., exceeding the 95th percentile of daily counts).",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA) on the volume of DNS queries for newly registered domains (NRDs). Use the model to predict the expected volume and alert when the actual volume of NRD queries exceeds the prediction's confidence interval, indicating a potential reconnaissance or phishing campaign."
            ]
          },
          {
            "description": "An HTTP response body received by an internal host contains specific HTML elements, JavaScript functions, or text strings that match signatures of known phishing kits (e.g., Evilginx2, GoPhish) or credential harvesting frameworks.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Network TAPs at Internet Gateway",
            "action": [
              "Symbolic: Deploy YARA rules that scan HTTP response bodies captured in Zeek files.log for unique strings, function names, and HTML comment structures associated with known phishing kits. Trigger an alert upon a match.",
              "Statistical: For each HTTP session involving a login form, calculate a 'form abnormality' score based on features like the form's 'action' URL pointing to a different domain than the host, the presence of obfuscated JavaScript on submission, or an unusual number of input fields. Flag forms with scores exceeding a baseline established from legitimate internal and external login pages.",
              "Machine Learning: Use a pre-trained natural language processing (NLP) model to analyze the text content of web pages and classify them as 'benign', 'phishing', or 'malware delivery'. Fine-tune the model on the organization's specific traffic and apply it to all downloaded web pages (from Zeek files.log) to proactively identify suspicious link targets."
            ]
          },
          {
            "description": "A statistically significant increase in the volume of DNS queries for newly registered domains (NRDs), where the subsequent TCP connections are unusually short in duration and involve minimal data transfer, as compared to a historical baseline.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Network Egress Points, Core Network Switches",
            "action": [
              "Symbolic: Create a detection that correlates a DNS query for a domain registered within the last 30 days (enriched via WHOIS data) with a subsequent outbound TCP connection from the same source IP in Zeek conn.log where the connection state is 'S0' (connection attempt seen, no reply), or the duration is less than 2 seconds.",
              "Statistical: For all outbound connections to NRDs, establish a baseline distribution of connection duration and total bytes transferred per destination port (e.g., 80, 443). Identify connections where both duration and bytes transferred fall below the 5th percentile of the baseline for that port. A cluster of internal hosts exhibiting this behavior to the same or related NRDs indicates a likely campaign.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on connection data to NRDs. Use features such as source IP, destination IP, destination port, connection duration, and bytes transferred. Identify and alert on clusters of anomalous connections that deviate from normal web browsing traffic."
            ]
          },
          {
            "description": "An internal host makes an HTTP request to a known file sharing, code hosting, or Platform-as-a-Service (PaaS) domain where the URL path or query string has an abnormally high Shannon entropy score, suggesting a programmatically generated, unique identifier.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Egress Firewalls, DNS Resolvers",
            "action": [
              "Symbolic: Maintain a watchlist of domains associated with frequently abused services (e.g., pastebin.com, github.io, *.blob.core.windows.net, *.appspot.com). Create a rule that alerts when an HTTP request is made to a domain on this list and the URL path contains suspicious file extensions (e.g., .exe, .ps1, .js) or keywords.",
              "Statistical: For each domain on the abused services watchlist, establish a baseline for the Shannon entropy of its URL paths observed in Zeek http.log. Calculate the 99th percentile for entropy for each domain. Trigger an alert when a new request is observed with a URL path entropy exceeding this threshold, indicating a potentially unique, malicious link.",
              "Machine Learning: Train an anomaly detection model (e.g., Isolation Forest) on features extracted from HTTP requests to abused services. Features should include URL path entropy, query parameter count, user agent, and referrer. Use the model to score each new request for its likelihood of being an anomaly, flagging those with the highest scores for investigation."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]