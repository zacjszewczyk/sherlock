[
  {
    "information_requirement": "Is the adversary evading defenses using application access tokens?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1550.001",
        "name": "Application Access Token",
        "evidence": [
          {
            "description": "A successful API authentication event using a token that originates from an IP address or contains a User-Agent string present on a high-confidence threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, Cloud provider network edge, VPN concentrators",
            "action": [
              "Symbolic: Inner join source IP addresses and User-Agent strings from API calls observed in Zeek logs (http.log, conn.log) with high-confidence cyber threat intelligence (CTI) feeds of malicious IPs and known User-Agents of adversary tools (e.g., pacu, gds-tools). Alert on any confirmed matches.",
              "Statistical: Calculate the rarity of User-Agent strings and source ASNs observed in API authentication logs (Zeek http.log). Generate an alert if an API call uses a User-Agent or originates from an ASN that falls below a 1% frequency threshold over a 30-day rolling window.",
              "Machine Learning: Train a one-class SVM or isolation forest model on features extracted from successful API authentications, including User-Agent, source IP/ASN, requested URI, and time of day. Use the trained model to score new API authentications in real-time and flag any event classified as an anomaly or outlier."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) where the new process name or command line arguments match signatures of known token theft tools or techniques.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer endpoints, Critical application servers",
            "action": [
              "Symbolic: Monitor for process creation events (Windows Event ID 4688) with command-line arguments indicating access to browser credential stores (e.g., 'User Data\\Default\\Login Data') or execution of known token theft tools (e.g., Mimikatz, LaZagne). Correlate with subsequent outbound API calls from the same host.",
              "Statistical: For each host, calculate the entropy of the command line arguments for common processes like powershell.exe and cscript.exe. A sudden, sharp increase in command-line entropy, especially when accessing user profile directories, indicates potential obfuscation. Alert when entropy exceeds 3 standard deviations above the host's 30-day baseline.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on labeled process creation events (Windows Event ID 4688) with features like parent process, command line length, and file paths accessed. The model should classify processes as benign or suspicious (token theft attempt). Deploy the model to score new process events."
            ]
          },
          {
            "description": "A successful token-based API authentication exhibiting multiple behavioral anomalies simultaneously, such as an IP address indicating impossible travel, a User-Agent not previously associated with the account, and no preceding interactive logon from the source IP.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers, Internet gateway, SaaS application front-ends",
            "action": [
              "Symbolic: Implement a rule to detect 'impossible travel'. For each successful API login for a user, compare its timestamp and source geolocation against the previous successful login. If the time elapsed is less than the calculated travel time between the two locations, generate an alert. Also, flag API calls from a user with no preceding interactive logon (Windows Event ID 4624, Logon Type 2 or 10) from the source IP within an 8-hour window.",
              "Statistical: For each user account, build a multi-faceted baseline profile from historical logs including: 1) Set of known source countries/ISPs, 2) Set of known User-Agents, 3) Typical login hours. Use a scoring system where deviations add to a risk score. An event with a cumulative risk score exceeding the 95th percentile of all user scores indicates a likely compromised token.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., LSTM autoencoder) for each user's API access patterns. The model should learn the normal sequence of API endpoints accessed, request frequency, and data transfer volumes. Flag any session that has a high reconstruction error, indicating a significant deviation from the user's established API interaction behavior."
            ]
          },
          {
            "description": "An API call to a cloud identity service (e.g., AWS STS `AssumeRole`, GCP `generateAccessToken`) that deviates from an established baseline in terms of frequency, source, or requested permissions.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud identity service endpoints (e.g., sts.amazonaws.com, login.microsoftonline.com), Egress points to the internet",
            "action": [
              "Symbolic: Create an allow-list of approved source IP ranges and user/service accounts authorized to make specific sensitive cloud identity API calls (e.g., AWS STS `GetFederationToken`). Alert on any request for these sensitive APIs originating from an unapproved source or principal by filtering Zeek http.log for requests to cloud identity service endpoints.",
              "Statistical: For each user/role, establish a baseline for the frequency of token generation requests (e.g., AssumeRole) per hour. Use time-series analysis to detect significant spikes in request volume that exceed 3 standard deviations from the moving average. Also, profile the set of roles typically assumed by each user and alert when a user attempts to assume a role for the first time.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on cloud identity API call logs. Feature sets should include the requesting principal, source IP, requested role/permission, and time of day. Periodically analyze the resulting clusters to identify small, outlier clusters that represent anomalous combinations of these features."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary performing lateral movement using application access tokens?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1550.001",
        "name": "Application Access Token",
        "evidence": [
          {
            "description": "Network traffic (Zeek conn.log) from one internal cloud resource to another internal or external API endpoint that is not part of an established communication baseline, especially if the source resource was recently involved in a security alert.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPC/VNet flow logs, Network taps between cloud subnets, Internal API gateways",
            "action": [
              "Symbolic: Correlate east-west network traffic from Zeek logs with CTI feeds of known malicious destination IPs/domains. If a resource (e.g., EC2 instance) triggers a separate security alert, create a rule to immediately flag all subsequent outbound API calls from that resource for priority investigation.",
              "Statistical: Generate a communication graph of all internal cloud resources based on historical Zeek conn.log data. For each resource, establish a baseline of 'normal' destination IPs and ports. Alert when a resource initiates a connection to a destination it has never communicated with before (a new edge in the graph).",
              "Machine Learning: Train a graph-based anomaly detection model (e.g., GraphSAGE) on the network communication graph of cloud resources. Use the model to score the anomalousness of new connections in real-time, flagging connections that significantly alter the local graph structure or link previously disconnected clusters of resources."
            ]
          },
          {
            "description": "A sequence of events on a host where an inbound API call is immediately followed by process creation events (Windows Event ID 4688) associated with reconnaissance or lateral movement tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal-facing web servers, API gateway servers, Application servers",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a host receives an inbound connection on an API port (e.g., 443, 8080) and within 5 minutes, a process creation event (Windows Event ID 4688) is logged on the same host for a tool like `nltest.exe`, `net.exe`, or `psexec.exe`.",
              "Statistical: For hosts running API services, baseline the frequency of command shell execution (`cmd.exe`, `powershell.exe`) by the service account. Alert when the frequency of shell execution by the service account exceeds a dynamic threshold (e.g., 99th percentile) over a short time window (e.g., 10 minutes).",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model) trained on event logs (network connections, process creations). The model learns normal sequences of events following an inbound API call. Flag any sequence of events that has a low probability under the trained model, such as an API call followed by `net user`."
            ]
          },
          {
            "description": "A network logon event (Windows Event ID 4624, Logon Type 3) on an internal server that originates from a cloud resource that has never previously accessed it, where the initial access to the cloud resource was via an application token.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain controllers, File servers, Database servers, Cloud resource network interfaces",
            "action": [
              "Symbolic: For critical internal assets (e.g., domain controllers), maintain an explicit allow-list of source cloud resource IPs that are permitted to connect. Generate a high-severity alert for any network logon attempt (Windows Event ID 4624, Logon Type 3) from a cloud resource IP not on this list.",
              "Statistical: Build a baseline of normal network logons (source IP, destination IP, account name) from Zeek conn.log and Windows Event ID 4624. Calculate the rarity of each source-destination-account triplet. Alert when a logon event occurs that is statistically rare (e.g., below a 0.5% frequency threshold).",
              "Machine Learning: Model the internal network as a directed graph where nodes are hosts and edges are successful logons. Use a community detection algorithm (e.g., Louvain Modularity) to identify clusters of machines that normally interact. An alert is generated when a new logon creates an edge that bridges two previously separate communities."
            ]
          },
          {
            "description": "An API call, authenticated via an application token, performs a sensitive or destructive action (e.g., IAM user creation, security group modification) that is inconsistent with the typical behavior of the associated user or service principal.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider API endpoints (e.g., management.azure.com, *.amazonaws.com), Web Application Firewalls, Decrypting proxies",
            "action": [
              "Symbolic: Define a list of high-impact, sensitive API calls (e.g., IAM `CreateUser`, EC2 `ModifySecurityGroup`, CloudTrail `DeleteTrail`). Create a rule to alert on any invocation of these APIs, assuming API traffic is inspectable via a decrypting proxy or WAF.",
              "Statistical: For each user and role, profile the set of API calls they normally make. Calculate the Shannon entropy of the API call distribution for each principal over a rolling time window. A sudden increase in entropy suggests they are performing a wider variety of actions than normal. Alert when a user's API call entropy exceeds their 99th percentile baseline.",
              "Machine Learning: Use a classification model to assign a risk score to each API call based on its parameters (principal, action, target, source IP). Train the model on historical data, with known risky actions labeled as high-risk. Flag any new API call that receives a high-risk score from the model for immediate review."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]