[
  {
    "information_requirement": "Is an adversary attempting to evade defenses by masquerading executable files using double file extensions?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.007",
        "name": "Double File Extension",
        "evidence": [
          {
            "description": "A file transfer, file creation, or process execution event is logged where the file's hash matches a known malicious Indicator of Compromise (IOC), or the filename matches a high-confidence threat intelligence signature for files using double extensions.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)",
              "Windows Event ID 11 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls and web proxies, mail servers, and all enterprise workstations and servers.",
            "action": [
              "Create a SIEM rule to continuously compare the `hash` from Zeek `files.log` and the `Hashes` field from Windows Event ID 1 (Sysmon) against a threat intelligence feed of known malicious file hashes. Also, compare the `filename` from Zeek logs and `Image` field from Sysmon against a curated list of high-confidence malicious filenames known to use double extensions. Generate a critical alert on any match.",
              "Upon a symbolic match, enrich the alert by calculating the historical prevalence of the source IP (from Zeek `conn.log` correlated via `fuid`) or Parent Process Name (from Windows Event ID 1) over the last 90 days. If the source IP or parent process is in the bottom 5th percentile of activity, increase the alert's priority, as this indicates an unusual origin.",
              "Implement a real-time file scoring system. For files matching a double-extension pattern but not a known IOC, extract features (e.g., filename entropy, file size, MIME type from Zeek `files.log`, parent process name). Feed these features into a pre-trained classification model (e.g., Gradient Boosting, Random Forest) that is regularly retrained on known malicious and benign files. An output probability score greater than 0.85 should automatically escalate the event for analyst review."
            ]
          },
          {
            "description": "A file creation event is logged where the filename contains a benign-appearing first extension (e.g., .txt, .pdf, .jpg) followed by an executable second extension (e.g., .exe, .scr, .bat, .hta, .lnk).",
            "data_sources": [
              "Windows Event ID 11 (Sysmon)",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories (e.g., Downloads, Temp, AppData), application cache folders, and removable media drives.",
            "action": [
              "Deploy a SIEM detection rule that parses the `TargetFilename` field from Windows Event ID 11 (File Create) and the `Image` field from Windows Event ID 1 (Process Create). Apply a regular expression such as `.*\\.(txt|doc|docx|pdf|xls|xlsx|ppt|pptx|jpg|jpeg|gif|png)\\.(exe|scr|bat|hta|lnk|vbs|ps1|msi)$` to the filename. Trigger a high-severity alert if the parent process is a web browser (`chrome.exe`, `firefox.exe`, `msedge.exe`), email client (`outlook.exe`), or archive utility (`winzip.exe`, `7z.exe`).",
              "For each monitored parent process (e.g., `chrome.exe`), maintain a statistical baseline of file extensions it creates using data from Windows Event ID 11. Calculate the Shannon entropy of the set of file extensions created by each parent over a 1-hour window. A sudden spike in entropy, or the creation of a file whose extension pattern (e.g., `.pdf.exe`) is a statistical outlier (e.g., >3 standard deviations from its normal creation frequency for that parent), should generate a medium-severity alert.",
              "Implement a time-series anomaly detection model (e.g., SARIMA or Prophet) for each high-risk parent process (browsers, email clients). The model should be trained on the historical count of files created per minute with executable double extensions. Generate a high-priority alert when the observed count in a given time window significantly exceeds the model's forecasted confidence interval, which could indicate a widespread phishing campaign or malware dropper activity."
            ]
          },
          {
            "description": "A process creation event is logged where the process image path contains a double file extension and originates from a non-standard or high-risk directory (e.g., %USERPROFILE%\\Downloads, %TEMP%).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, terminal servers, and Virtual Desktop Infrastructure (VDI) instances.",
            "action": [
              "Create a detection rule for process creation events (Windows Event ID 1 or 4688). The rule should trigger when the `Image` or `NewProcessName` field matches a double-extension regex AND the file path is within a list of high-risk directories, such as `C:\\Users\\*\\Downloads\\*`, `C:\\Windows\\Temp\\*`, `%APPDATA%\\*`, `%LOCALAPPDATA%\\Temp\\*`, or any world-writable directory. Escalate if the parent process is not `explorer.exe` or `cmd.exe`.",
              "For each user account, build a statistical profile of their top 20 most frequent execution directories over a 30-day rolling window. When a process with a double-extension filename is executed, check if the execution directory is outside this baseline set or falls in the bottom 10th percentile of their execution locations. Such an event should be flagged as anomalous user behavior and have its risk score elevated.",
              "Train an Isolation Forest model on features from benign process creation events (Windows Event ID 1). Features should include: parent process name, image path depth, number of command-line arguments, user context (e.g., SYSTEM vs. user), and a binary feature for execution from a temp/download directory. Feed all new process creation events involving double-extension files into the model. Events that receive a high anomaly score from the Isolation Forest are highly suspicious and should be queued for immediate investigation."
            ]
          },
          {
            "description": "Network metadata shows a file transfer where the `filename` field contains a double extension pattern, with a benign first extension and an executable second extension, over protocols like HTTP, SMTP, or FTP.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek ftp.log",
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, web proxy servers, Mail Transfer Agents (MTAs), and internal network sensors monitoring lateral movement.",
            "action": [
              "In Zeek `files.log`, apply the regex `.*\\.(pdf|docx?|xlsx?|pptx?|jpe?g|png|gif)\\.(exe|scr|bat|vbs|ps1|hta|lnk)$` to the `filename` field. For matches over HTTP, correlate the `fuid` with `http.log` to inspect the `User-Agent` string for anomalies (e.g., non-standard or known-malicious agents) and check for a missing `Referer` header. For matches over SMTP, correlate to inspect mail headers for signs of phishing. Generate a medium-severity alert.",
              "On a daily basis, aggregate all filenames from `files.log` that match the double-extension pattern. Calculate the frequency of each distinct benign-executable pair (e.g., `pdf.exe`, `jpg.scr`). Use a moving average and standard deviation to establish a baseline for each pair. If the count for a specific pair exceeds a dynamic threshold (e.g., 3 standard deviations above the 7-day moving average), it may indicate a new or resurgent campaign and should trigger an alert for trend analysis.",
              "Periodically (e.g., hourly), run a DBSCAN clustering algorithm on features extracted from correlated Zeek logs (`conn.log`, `http.log`, `files.log`). Features should include: source IP, destination IP/port, `User-Agent`, file MIME type, filename, and file size. Isolate clusters of activity involving double-extension files that are distinct from the main clusters of benign traffic. These outlier clusters represent coordinated activity and should be investigated as potential malicious campaigns."
            ]
          },
          {
            "description": "A process, launched from a file with a double extension, subsequently initiates anomalous child processes, makes network connections to untrusted destinations, or modifies system autorun settings for persistence.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)",
              "Windows Event ID 11 (Sysmon)",
              "Windows Event ID 13 (Sysmon)",
              "Windows Event ID 22 (Sysmon)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for registry monitoring), Endpoint devices, and DNS Servers.",
            "action": [
              "Create a chained SIEM rule. The trigger is a process creation (Windows Event ID 1) from a double-extension filename. For the next 5 minutes, monitor the ProcessGUID of the trigger process and its children for any of the following subsequent events: 1) execution of `reg.exe`, `schtasks.exe`, `wmic.exe`, `powershell.exe`; 2) registry modifications to autorun keys (`HKLM\\...\\Run`, `HKCU\\...\\Run`) via Windows Event ID 13; 3) file creation in `System32` or user `Startup` folders via Windows Event ID 11; 4) network connections to non-RFC1918 IP addresses with no prior communication history (from Zeek `conn.log`). Any of these subsequent actions should convert the initial event into a critical-severity incident.",
              "When a process is launched from a double-extension file, begin profiling its behavior. Calculate the Shannon entropy of its DNS queries (from Zeek `dns.log` or Sysmon Event ID 22); a high entropy score (e.g., > 3.5) can indicate DGA. Compare the count of child processes it spawns to a baseline for its parent process; a count >3 standard deviations above the mean is anomalous. Track the rarity of destination ports it connects to; connections to ports outside the top 1000 most common ports for the organization should increase the process's risk score.",
              "Implement a sequence-based anomaly detection model using an LSTM autoencoder. Train the model on sequences of high-level events (e.g., process create -> file write -> network connect -> registry set) generated by known benign applications. When a double-extension file is executed, capture its event sequence and feed it to the trained autoencoder. A high reconstruction error indicates that the sequence of behaviors is novel and does not match any learned benign pattern, strongly suggesting malicious activity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]