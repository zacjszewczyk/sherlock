[
  {
    "information_requirement": "Is the adversary developing resources by acquiring and installing digital certificates for their infrastructure? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1608.003",
        "name": "Install Digital Certificate",
        "evidence": [
          {
            "description": "An outbound SSL/TLS connection is established with a remote server whose certificate hash (SHA1), serial number, or Subject Alternative Name (SAN) matches a known-malicious indicator from a high-confidence threat intelligence feed.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress Points (Firewalls, Proxies)",
            "action": [
              "Symbolic (IOC Match): Create a search that extracts certificate SHA1 hashes from `x509.log` and server names (SNI) from `ssl.log` for all outbound connections. Join this data with `conn.log` on the `uid` field. Cross-reference the extracted certificate hashes and server names against a threat intelligence feed of known malicious indicators. Generate a high-priority alert for any exact match.",
              "Statistical (Rarity Analysis): For every IOC match, enrich the alert with statistical context. Using `conn.log`, calculate the historical frequency of connections to the matched destination IP and domain over the last 90 days across the enterprise. An IOC match for a destination with zero or very low historical contact frequency (e.g., in the bottom 1st percentile) significantly increases the alert's severity.",
              "Machine Learning (Threat Feed Scoring): Develop or use a machine learning model to score the reliability and relevance of threat intelligence feeds. The model should consider features like the feed provider's reputation, the indicator's age, historical true/false positive rates for the feed, and the TTPs associated with the indicator. Apply this score to IOC matches to dynamically prioritize alerts, flagging matches from high-scoring feeds for immediate investigation."
            ]
          },
          {
            "description": "An outbound SSL/TLS connection uses a certificate with suspicious attributes, such as a subject domain that is a likely typosquat of a corporate domain (e.g., Levenshtein distance < 3), a very short validity period (e.g., < 90 days), issuance from a free Certificate Authority for a recently registered domain (e.g., domain age < 30 days), or a mismatch between the certificate's Common Name (CN) and the server's Server Name Indication (SNI).",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points",
            "action": [
              "Symbolic (Rule-Based): Create a rule that flags SSL/TLS sessions where: (1) the certificate issuer in `x509.log` is a known free CA (e.g., 'Let's Encrypt', 'ZeroSSL'), AND (2) the certificate subject domain has a WHOIS creation date (via enrichment) less than 30 days old. Also, create a separate rule to flag any session where the certificate's subject common name from `x509.log` does not exactly match the Server Name Indication (SNI) from `ssl.log`.",
              "Statistical (Typosquatting Detection): For each certificate subject domain from `x509.log`, calculate the Damerau-Levenshtein distance against a list of the organization's legitimate domains, brand names, and key partner domains. Establish a baseline of distances for legitimate traffic. Flag any domain with a distance of 1 or 2, as these are highly indicative of typosquatting, especially when correlated with low domain reputation scores or recent registration dates.",
              "Machine Learning (Suspicious Certificate Classification): Train a classification model (e.g., Random Forest, Gradient Boosting) to produce a 'suspicion score' for each certificate. Use features from `x509.log` and `ssl.log` such as: certificate validity duration, key length, signature algorithm, issuer (one-hot encoded), number of SANs, presence of generic subject fields (e.g., 'localhost'), the typosquatting distance score, and domain age. Use a labeled dataset of known benign and malicious certificates for training and flag certificates with a high predicted probability of being malicious."
            ]
          },
          {
            "description": "SSL/TLS certificates observed on the network exhibit characteristics that are statistical outliers when compared to an established enterprise-wide baseline, such as an anomalous spike in first-seen certificate issuers, or certificates with unusually low-entropy subject or issuer names.",
            "data_sources": [
              "Zeek x509.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM/Data Lake",
            "action": [
              "Symbolic (First-Seen Rule): Maintain a lookup file of all certificate SHA1 hashes and issuer organizational names ('O' field) seen in the last 90 days. Create a rule to alert every time a connection uses a certificate whose hash or issuer is not in the lookup file. Triage these alerts by prioritizing those associated with other suspicious factors like a free CA or short validity period.",
              "Statistical (Entropy Analysis): For each certificate subject and issuer string from `x509.log`, calculate the Shannon entropy. Establish a baseline distribution of entropy scores for legitimate certificates observed on the network. Flag certificates with entropy scores that fall in the bottom 5th percentile (indicating generic, non-descriptive names) or the top 5th percentile (indicating potentially randomized, DGA-like names).",
              "Machine Learning (Time Series Anomaly Detection): Model the daily count of new, first-seen certificate issuers from `x509.log` as a time series using a SARIMA or Prophet model. Configure the model to detect anomalies, defined as observations that fall outside the 99% prediction interval. An alert on a given day indicates a statistically unusual spike in new issuers being contacted, which could signify a widespread adversary campaign leveraging new infrastructure."
            ]
          },
          {
            "description": "A single internal host communicates with an anomalously high number of distinct external destinations using suspicious certificates (e.g., self-signed, short validity, or newly observed), indicative of C2 beaconing or scanning.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core Network Switches (capturing East-West and North-South traffic)",
            "action": [
              "Symbolic (Beaconing Detection): For each internal source IP, count the number of connections to distinct destination IPs over a 1-hour window where the `x509.log` validation_status is 'self-signed'. Alert if this count exceeds a static threshold (e.g., 10), as this may indicate C2 beaconing to adversary infrastructure that uses self-signed certificates.",
              "Statistical (Outlier Detection): Over a 24-hour period, for each internal source IP, calculate the count of distinct destination domains contacted where the certificate was newly observed (first seen in the last 24 hours). Calculate the 99th percentile for this count across all internal source IPs. Any host exceeding this dynamic threshold is flagged as a high-risk outlier for investigation, as it may be communicating with a wide array of newly-stood-up C2 servers.",
              "Machine Learning (Community Detection): Construct a bipartite graph where one set of nodes represents internal hosts and the other represents external certificate SHA1 hashes. Create an edge if a host connects to a server presenting that certificate. Apply a community detection algorithm (e.g., Louvain Modularity) to this graph. A small, dense community composed of a few internal hosts connecting to a shared set of suspicious external certificates is a strong indicator of a targeted intrusion."
            ]
          },
          {
            "description": "A new digital certificate is installed on a corporate server outside of a scheduled change window, or the installation is performed by a non-administrative account or an unusual parent process.",
            "data_sources": [
              "Windows Security Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Windows Security Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Servers",
            "action": [
              "Symbolic (Rule-Based): Create a rule to alert on process creation events (Windows Event ID 4688) where `process_name` is 'certutil.exe' and `command_line` contains '-addstore' or '-importpfx'. Also alert on PowerShell script block logs (Event ID 4104) containing 'Import-Certificate'. Correlate alerts with change management records; an installation with no corresponding ticket is a high-priority incident.",
              "Statistical (Behavioral Anomaly): Establish a baseline of user accounts, parent processes, and times associated with legitimate certificate management on critical servers. For each certificate installation event, flag it as anomalous if the executing user account is not a member of a pre-defined administrator group or if the parent process of `certutil.exe` is not `explorer.exe` or `cmd.exe`. Flag activity occurring outside of a 9-5 weekday baseline.",
              "Machine Learning (UEBA): Ingest process (4688), service installation (4697), and PowerShell (4104) logs into a User and Entity Behavior Analytics (UEBA) system. The model will learn the normal patterns of activity for each user and server. An alert should be generated when the system detects an anomalous sequence of actions, such as a user from the finance department remotely logging into a web server and then executing certificate management commands, which represents a significant deviation from their learned behavioral profile."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]