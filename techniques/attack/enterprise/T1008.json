[
  {
    "information_requirement": "Is the adversary maintaining command and control using fallback channels? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1008",
        "name": "Fallback Channels",
        "evidence": [
          {
            "description": "An outbound network connection's destination IP, domain, SSL/TLS server name, or JA3/S hash matches a known malicious indicator from threat intelligence, specifically one categorized as C2 or a fallback channel.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers, Internal DNS resolvers, DMZ servers",
            "action": [
              "Join Zeek conn.log, dns.log, and ssl.log records on their common UID. For each resulting event, compare the values in the id.resp_h (destination IP), dns.query (domain), ssl.server_name (SNI), and ssl.ja3s (server-side fingerprint) fields against a threat intelligence feed of known C2 indicators. Generate a high-severity alert upon a direct match.",
              "Aggregate threat intelligence from multiple sources for each destination IP and domain to create a composite risk score (e.g., a weighted average based on source confidence). Establish a baseline of risk scores for all outbound connections over 30 days. Alert on new connections where the destination's composite risk score is in the bottom 5th percentile (most risky) and the destination has been contacted by fewer than 3 unique internal hosts, indicating a potentially new and isolated fallback C2 channel.",
              "Train a supervised classification model (e.g., XGBoost, Random Forest) on a labeled dataset of C2 vs. benign connections. Use features from Zeek logs such as proto, id.resp_p (port), duration, orig_bytes, resp_bytes, ssl.version, ssl.ja3, ssl.ja3s, and the statistical risk score. Deploy the model to score all new outbound connections and alert on those with a C2 probability above a defined threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "A host's DNS queries show characteristics of C2 or data exfiltration via DNS tunneling, defined by one or more of the following: a high ratio of TXT/NULL/AAAA queries to A queries, subdomains with high Shannon entropy, or a query-to-response size ratio significantly greater than normal (e.g., > 10:1).",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Endpoint devices, Internet gateway/proxy servers",
            "action": [
              "Create a rule to alert when a single DNS query from dns.log meets any of these conditions: (1) qtype_name is TXT or NULL and the length of the query field is > 200 characters; (2) The ratio of the length of the query field to the length of the answers field is > 10; (3) The query matches a regex for Base64 or Hex encoding '^[A-Za-z0-9+/=]{50,}$'.",
              "For each source host (id.orig_h), calculate the Shannon entropy of the first label (subdomain) of the query field in dns.log over a 5-minute sliding window. Establish a per-host baseline entropy from the past 7 days of activity. Generate an alert when a host's current average entropy exceeds the 99th percentile of its own historical baseline, indicating abnormal domain generation or data encoding.",
              "For each source host, create a multivariate time-series dataset with features like: count of TXT queries, count of AAAA queries, average query length, and average subdomain entropy, aggregated in 1-minute intervals. Train a time-series anomaly detection model (e.g., Prophet, LSTM Autoencoder) to learn the normal patterns for each host. Trigger an alert if the model flags a future time interval as a significant anomaly across multiple features."
            ]
          },
          {
            "description": "A sequence of outbound connections from a single internal host to a single external destination exhibits highly regular, machine-like behavior, characterized by a low standard deviation in inter-connection time (< 2 seconds) and low variance in payload size (+/- 10%) over a sustained period (e.g., >10 minutes).",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Servers hosting sensitive data, Internet gateway/proxy servers",
            "action": [
              "From Zeek conn.log, group connections by the 4-tuple (id.orig_h, id.resp_h, id.resp_p, proto) within a 1-minute window. Alert if a group contains > 10 connections, and the difference between the max and min orig_bytes is less than 20 bytes, suggesting a fixed-size beacon payload.",
              "For each unique source-destination IP pair, stream connection events from Zeek conn.log and calculate the time delta between consecutive connections. Maintain a running standard deviation of these time deltas over the last 30 minutes. Generate an alert if the standard deviation drops below 2 seconds for a period of at least 10 minutes and involves more than 20 connections, indicating highly periodic communication.",
              "From Zeek conn.log, create a feature set for connections including duration, orig_bytes, resp_bytes, and the inter-arrival time from the previous connection to the same destination. Apply a density-based clustering algorithm (e.g., DBSCAN) to this feature space. Investigate clusters that are small (few source-destination pairs) but dense, as these represent groups of connections with highly similar characteristics, indicative of automated beaconing."
            ]
          },
          {
            "description": "A network connection is initiated by a process that is not typically network-aware (e.g., notepad.exe, calc.exe), by a legitimate process from an unusual file path, or by a process whose parent is not its expected creator (e.g., services.exe not a child of svchost.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Domain controllers, Application servers",
            "action": [
              "Correlate Windows Event ID 4688 (Process Creation) with Windows Event ID 5156 (Network Connection) on Process ID. Alert if the Application field in EID 5156 belongs to a watchlist of non-network processes (e.g., calc.exe, mspaint.exe) OR if the ProcessName in EID 4688 is a common system process (e.g., svchost.exe) but its ParentProcessName is unexpected (e.g., explorer.exe).",
              "Build a frequency table of (ProcessName, ParentProcessName, DestinationPort) tuples from historical host and network logs (EID 4688, EID 5156, Zeek conn.log). On a daily basis, identify the least frequent combinations (e.g., the bottom 1% by count). Investigate these rare occurrences as potential indicators of process injection or masquerading for C2 communications.",
              "Train an anomaly detection model (e.g., Isolation Forest) using features from correlated process and network events. Features should include: process name, parent process name, command line length, command line entropy, destination port, protocol, and destination IP reputation. The model will learn to isolate anomalous events that deviate from the majority of normal activities. Flag isolated events for analyst review."
            ]
          },
          {
            "description": "An outbound connection over an application-layer protocol (e.g., HTTP/S, DNS) shows a highly asymmetric data transfer ratio, where the client sends significantly more data than it receives (e.g., > 10:1), which is uncharacteristic for the given protocol and context.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers, DMZ servers, User workstations",
            "action": [
              "In Zeek conn.log, create a rule to alert on any completed connection (conn_state = 'SF') where proto is 'tcp' and service is in ['http', 'ssl', 'dns'], and orig_bytes > (10 * resp_bytes), and orig_bytes > 1024 to filter out small, noisy connections.",
              "For each application protocol (service field in Zeek conn.log), establish a historical baseline of the data ratio (orig_bytes / resp_bytes). Continuously monitor new connections and calculate this ratio. Flag any connection where the ratio exceeds the 99.5th percentile for its specific protocol and the total orig_bytes is non-trivial (>10KB), indicating a statistically significant upload anomaly.",
              "Use K-Means clustering on Zeek conn.log data, with features like log-transformed orig_bytes, log-transformed resp_bytes, and duration. Define clusters representing known behaviors: (1) small queries, (2) browsing, (3) downloads. Any connection that falls into a cluster with high orig_bytes and low-to-medium resp_bytes, or forms a new, distinct cluster with these properties, should be investigated as potential data exfiltration over a C2 channel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]