[
  {
    "information_requirement": "Is the adversary attempting to discover Wi-Fi network information on compromised systems? (TA0007 - Discovery)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1016.002",
        "name": "Wi-Fi Discovery",
        "evidence": [
          {
            "description": "A process is executed from a file whose cryptographic hash (e.g., SHA256) is present on a threat intelligence feed of indicators associated with Wi-Fi credential theft tools like Agent Tesla.",
            "data_sources": [
              "Windows Security Event ID 4688 with command line logging enabled",
              "Windows Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.",
            "action": [
              "Symbolic: Continuously monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1). For each new process, calculate the executable's SHA256 hash. Join the hash against a threat intelligence feed of known malicious file hashes. Generate a high-severity alert upon any match.",
              "Statistical: For all executed file hashes not on an organizational allowlist, calculate the prevalence (count of unique hosts) of each hash across the enterprise over a 30-day rolling window. Flag any hash that appears on a statistically insignificant number of endpoints (e.g., in the bottom 1st percentile of prevalence) for manual review, as this may indicate a newly introduced or targeted tool.",
              "Machine Learning: Develop and deploy a file hash reputation scoring model using a supervised learning algorithm (e.g., Logistic Regression or Gradient Boosting). Train the model on features such as hash prevalence, first-seen and last-seen timestamps, and association with known malicious command-line arguments. Use the model to classify newly observed hashes as benign, suspicious, or malicious to prioritize analyst review."
            ]
          },
          {
            "description": "Execution of native Windows utilities (netsh.exe, powershell.exe) with command-line arguments or script contents used for enumerating Wi-Fi profiles or retrieving cleartext keys, such as 'netsh wlan show profiles' or 'netsh wlan show profile <name> key=clear'.",
            "data_sources": [
              "Windows Security Event ID 4688 with command line logging enabled",
              "Windows PowerShell Event ID 4104 (Script Block Logging)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.",
            "action": [
              "Symbolic: Create a high-fidelity detection rule to monitor process command lines (Event ID 4688) and PowerShell script blocks (Event ID 4104) for regular expressions matching Wi-Fi discovery patterns, such as `/(netsh|powershell).*wlan.*(show|get).*(profile|key=clear)/i`. Generate an alert, elevating the priority if the command originates from a non-IT user account or an interactive logon session.",
              "Statistical: For each user-host pair, establish a 30-day baseline of `netsh.exe` and `powershell.exe` execution frequency and command-line argument entropy. Trigger an alert if a user executes a Wi-Fi discovery command and either the execution frequency for that utility exceeds the 95th percentile of their historical baseline or the command's argument entropy is a clear outlier compared to their normal activity.",
              "Machine Learning: Use a sequence analysis model, such as a Hidden Markov Model (HMM) or an LSTM-based autoencoder, to learn common sequences of command-line executions for different user roles (e.g., developer, HR, IT admin). Flag command sequences where Wi-Fi discovery commands appear in an anomalous context, such as immediately following the opening of a document from an email or preceding a network connection to a newly observed domain."
            ]
          },
          {
            "description": "A command-line interpreter (cmd.exe, powershell.exe) executing Wi-Fi discovery commands is spawned by a parent process that does not typically perform administrative actions, such as a web browser (chrome.exe), office application (WINWORD.EXE, EXCEL.EXE), or PDF reader (AcroRd32.exe).",
            "data_sources": [
              "Windows Security Event ID 4688 with command line logging enabled",
              "Windows Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate endpoints (laptops, desktops), Servers running user-facing applications.",
            "action": [
              "Symbolic: Create a detection rule that triggers when a process creation event (Event ID 4688) shows a parent process from a list of non-standard parents (e.g., WINWORD.EXE, EXCEL.EXE, OUTLOOK.EXE, chrome.exe, AcroRd32.exe) spawning a child process that executes `netsh wlan` or `powershell.exe` with Wi-Fi discovery arguments.",
              "Statistical: Query process creation logs over a 30-day baseline to compute the frequency of all unique parent-child process pairs across the enterprise. Alert on any execution of `netsh wlan` or equivalent PowerShell where the parent-child pair (e.g., `WINWORD.EXE` -> `cmd.exe`) is in the bottom 1st percentile of observed frequencies, indicating a highly unusual execution chain.",
              "Machine Learning: Train a classification model (e.g., a Random Forest or XGBoost) on features derived from process creation events, including parent process name, parent process integrity level, child process name, and command-line arguments. Use the model to classify each process creation event involving `netsh.exe` or `powershell.exe` as either 'benign administrative activity' or 'suspicious discovery activity' based on the learned patterns of anomalous process lineage."
            ]
          },
          {
            "description": "The execution of Wi-Fi discovery commands on a host is temporally correlated, within a short time window (e.g., under 10 minutes), with subsequent data staging activities (e.g., command output redirected to a file) or network egress to a new or suspicious destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 11 (FileCreate)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.",
            "action": [
              "Symbolic: Create a correlation rule that triggers if a Wi-Fi discovery command (Event ID 4688) is observed, followed within 5 minutes on the same host by either a file creation event (Sysmon Event ID 11) from the same process, or a network connection (Zeek conn.log) to an IP on a threat intelligence blocklist, or a DNS query (Zeek dns.log) for a known malicious domain.",
              "Statistical: For each host, create a 30-day baseline of outbound data volume per destination and destination domain request frequency. If a Wi-Fi discovery command is executed, alert if within 10 minutes the host either (a) sends an amount of data to a single destination that exceeds the 99th percentile of its baseline, or (b) resolves a domain via Zeek dns.log that is in the bottom 1% of least-prevalent domains requested across the enterprise.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMAX or LSTM) on per-host network telemetry (e.g., bytes_out, unique_destinations, connection_count). Use the occurrence of a Wi-Fi discovery command as an exogenous event (an external input). Generate a high-priority alert if the model detects a statistically significant anomaly in the network time series immediately following the discovery event, which the model cannot explain by normal seasonality or trends."
            ]
          },
          {
            "description": "Access to files storing Wi-Fi connection information on Linux hosts (e.g., reading files in `/etc/NetworkManager/system-connections/`) or execution of commands to retrieve Wi-Fi passwords from the keychain on macOS (e.g., `security find-generic-password`).",
            "data_sources": [
              "Linux Auditd logs",
              "macOS Endpoint Security Framework logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux servers and workstations, macOS endpoints.",
            "action": [
              "Symbolic: On Linux, create a rule to alert on any process reading files within `/etc/NetworkManager/system-connections/`, excluding known-good processes like NetworkManager itself. On macOS, alert on the execution of `security find-generic-password` with `-g` or `-w` flags, especially when initiated by a non-interactive shell or a non-admin user.",
              "Statistical: For Linux hosts, baseline file access patterns in `/etc/NetworkManager/` and alert if a user or process accesses these files for the first time. For macOS, baseline `security` command usage per user. Alert if `security find-generic-password` usage deviates from a user's historical command execution frequency (e.g., exceeds the 95th percentile) or argument patterns.",
              "Machine Learning: Train a one-class SVM or isolation forest model on benign command sequences and file access patterns for privileged Linux and macOS users. Use the model to score new activity sequences in near real-time. Flag command sequences containing Wi-Fi discovery file access or command execution that the model classifies as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]