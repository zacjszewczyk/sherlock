[
  {
    "information_requirement": "Has the adversary stolen or forged Kerberos tickets to gain unauthorized access? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1558",
        "name": "Steal or Forge Kerberos Tickets",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is logged where the new process's file hash matches a known credential dumping tool, or its command-line arguments contain patterns specific to Kerberos ticket theft or forgery.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Privileged User Workstations",
            "action": [
              "Symbolic Logic: Create a SIEM rule to alert on process creation events (Windows Event ID 4688) where the process's file hash matches a curated list of known credential dumping tools (e.g., Mimikatz, Rubeus) or where the command-line arguments contain high-fidelity regular expressions matching Kerberos attack commands (e.g., 'kerberos::golden', 'asktgt /user:', 'rubeus.exe kerberoast').",
              "Statistical Method: For all command-line execution events, calculate the entropy of the command-line string. Establish a baseline entropy score for common administrative commands and user profiles. Flag commands with unusually high entropy, which can indicate obfuscated or complex malicious commands often used by dumping tools. Also, track the frequency of rare process executions and alert when a process that has never or rarely been seen executes with parameters related to authentication.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) on labeled process creation events, using features such as parent process, command-line length and character distribution, and keyword frequency ('kerberos', 'ticket', 'dump'). The model should classify each new process execution as benign or suspicious, specifically tuning for credential dumping activity."
            ]
          },
          {
            "description": "A single user account generates a high volume of Kerberos Service Ticket (TGS-REQ) requests (Windows Event ID 4769) for multiple distinct Service Principal Names (SPNs) within a short timeframe, particularly where the ticket encryption type is RC4-HMAC (0x17).",
            "data_sources": [
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Network traffic sensors monitoring traffic to/from Domain Controllers",
            "action": [
              "Symbolic Logic: Create a SIEM rule that triggers when Windows Event ID 4769 is logged with 'Ticket Encryption Type' equal to '0x17' (RC4-HMAC). Correlate this with a watchlist of high-privilege accounts or service accounts. Alert if a non-service account requests an RC4 ticket, as this is highly anomalous.",
              "Statistical Method: For each client account name, aggregate the count of unique Service Names from Windows Event ID 4769 over a rolling 1-hour window. Calculate a baseline and standard deviation for this count per user. Generate an alert when a user's count of unique service requests exceeds a dynamic threshold, such as 3 standard deviations above their personal baseline or the 99th percentile of all user activity.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or an LSTM-based autoencoder) on the volume of TGS-REQ events (Event ID 4769) per user. The model should learn the normal rhythm of ticket requests for each user. An alert is generated when the observed request volume for a user significantly deviates from the model's prediction, indicating a potential Kerberoasting spray."
            ]
          },
          {
            "description": "A successful Kerberos Authentication Ticket (TGT) request (Windows Event ID 4768) is observed for a user account where the 'Pre-Authentication Type' is '0', indicating pre-authentication was skipped. This is confirmed by network analysis of Zeek kerberos.log showing an AS-REP message without a preceding AS-REQ with pre-authentication data.",
            "data_sources": [
              "Windows Event ID 4768",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory user account configuration data, Network traffic sensors monitoring traffic to/from Domain Controllers",
            "action": [
              "Symbolic Logic: Create a SIEM rule to alert on every occurrence of Windows Event ID 4768 where the 'Pre-Authentication Type' field is '0'. Correlate the 'Account Name' in the event with an Active Directory query to confirm the user attribute 'Do not require Kerberos preauthentication' is enabled. Alert on every successful TGT issuance under these conditions.",
              "Statistical Method: Periodically query Active Directory for all user accounts with pre-authentication disabled. Track the count of such accounts over time and generate a high-priority alert if this count increases. Additionally, track the frequency of successful TGT requests (Event ID 4768 with Pre-Auth Type 0) per user and alert if the rate for any single user suddenly increases beyond their historical baseline.",
              "Machine Learning: Develop a peer-group analysis model. Group users by role or department. For each group, establish a baseline for the rate of TGT requests where pre-authentication is disabled. Use a clustering algorithm (e.g., k-means) to identify users whose ticket request behavior is an outlier compared to their defined peers, which can detect an account being used for AS-REP Roasting."
            ]
          },
          {
            "description": "A logon event (Windows Event ID 4624) occurs where the user's security token contains high-privilege Security Identifiers (SIDs) inconsistent with their assigned Active Directory group memberships (Golden Ticket). Alternatively, a Kerberos Service Ticket request (Event ID 4769) is logged on a member server for a user who has no recent, corresponding TGT request (Event ID 4768) on the Domain Controller (Silver Ticket).",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4769",
              "Windows Event ID 4768",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Member Servers (e.g., file servers, database servers), User Workstations",
            "action": [
              "Symbolic Logic: (Golden Ticket) For each successful logon (Event ID 4624), compare SIDs in the event's token against the user's known group SIDs from Active Directory. Alert if the token contains privileged SIDs (e.g., S-1-5-21-domain-512) not assigned to the user. (Silver Ticket) Alert if a service ticket request (Event ID 4769) appears on a member server from a user for whom no TGT request (Event ID 4768) was logged on any DC in the last 10 hours.",
              "Statistical Method: For all logon events (Event ID 4624), calculate a 'privilege score' based on the SIDs present. Profile the normal privilege score range for each user. Alert if a user's logon session has a privilege score that is a statistical outlier (e.g., exceeds the 99.9th percentile) compared to their historical sessions. Also monitor the lifetime of TGTs in Zeek kerberos.log; alert if a ticket's lifetime ('till' - 'from') significantly exceeds the domain policy default.",
              "Machine Learning: Use a graph-based anomaly detection model representing user-to-service access patterns from Event ID 4769. Nodes are users and services, edges are successful ticket requests. An alert is triggered when a new edge appears that is highly improbable based on historical data (e.g., a user from marketing suddenly accessing a source code repository), which can indicate a forged Silver Ticket."
            ]
          },
          {
            "description": "A process access event (Sysmon Event ID 10) is logged where an unauthorized source process (e.g., powershell.exe, rundll32.exe, or any unsigned binary) requests access to the memory of the LSASS.exe process, particularly with access rights that permit reading process memory.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Privileged Access Workstations, Member Servers, User Workstations",
            "action": [
              "Symbolic Logic: Create a high-severity SIEM alert for any Sysmon Event ID 10 where the TargetImage is 'lsass.exe' and the SourceImage is not on an explicit allowlist of legitimate processes (e.g., security agents, svchost.exe). The rule should specifically look for access masks like '0x1010' or '0x1410' which include PROCESS_VM_READ.",
              "Statistical Method: Build a frequency table of all processes that access lsass.exe over a 30-day period, creating a baseline of normal activity. Calculate a rarity score for each source process. Alert on any access event involving a process with a very high rarity score (e.g., in the top 0.1% of rarity), indicating an access that has never or very rarely been observed before.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on features from Sysmon Event ID 10 events that target lsass.exe. Features should include SourceImage path, parent process, user context, and access mask. The model learns the boundary of 'normal' LSASS access. Any new access event that falls outside this learned boundary is flagged as a potential anomaly indicative of credential theft."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]