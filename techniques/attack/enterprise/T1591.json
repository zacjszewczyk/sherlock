[
  {
    "information_requirement": "Is an adversary gathering organizational information to support future targeting?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1591",
        "name": "Gather Victim Org Information",
        "evidence": [
          {
            "description": "Confirmed network connections (successful TCP handshakes or UDP responses) to or from external IP addresses or domains present on a high-confidence threat intelligence feed categorized as reconnaissance, scanning, or known adversary infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, Perimeter firewalls, Cloud VPC flow logs, DNS resolvers",
            "action": [
              "Symbolic: Continuously correlate the `id.resp_h` and `id.orig_h` fields in Zeek conn.log and the `query` field in Zeek dns.log against a threat intelligence feed of known malicious scanners and reconnaissance infrastructure. Generate a high-severity alert upon any match.",
              "Statistical: For all external IPs, calculate the ratio of connections to IOC-flagged IPs versus total connections over a 24-hour window. Establish a baseline for this ratio across all sources. Flag any source IP whose ratio exceeds the 95th percentile, indicating a higher-than-normal interaction with known malicious infrastructure.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled Zeek conn.log data, using features like destination port, protocol, connection duration, and whether the remote IP is on an IOC list. Use the model to predict in real-time the probability that a new connection is part of a reconnaissance campaign."
            ]
          },
          {
            "description": "HTTP/S GET requests from external IP addresses targeting URIs that contain sensitive keywords (e.g., 'orgchart', 'directory', 'internal', 'hr-policy') or file extensions (e.g., '.pdf', '.docx', '.xlsx', '.csv') on publicly accessible web servers.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, Content Delivery Network (CDN) logs, Web Application Firewall (WAF) logs",
            "action": [
              "Symbolic: Create and maintain a watchlist of regular expressions matching sensitive keywords and file extensions (e.g., `/(orgchart|directory|policy)/i`, `\\.(xlsx?|docx?|csv|pdf)$`). Scan the `uri` field in Zeek http.log for requests from external IPs that match these patterns. Trigger an alert upon a match.",
              "Statistical: For each external source IP, calculate the Shannon entropy of the requested URI paths over a 1-hour window. A high entropy score can indicate directory traversal or fuzzing. Flag IPs whose URI entropy exceeds 3 standard deviations from the mean for all external users.",
              "Machine Learning: Use unsupervised learning (e.g., K-Means clustering) to group external user sessions based on features from Zeek http.log such as number of requests, diversity of URIs, and response codes. Manually label clusters as 'benign crawler', 'normal user', or 'suspicious scanner'. Monitor for new sessions falling into the 'suspicious scanner' cluster."
            ]
          },
          {
            "description": "Observed HTTP User-Agent strings in Zeek http.log or DNS query types (e.g., AXFR, ANY) in Zeek dns.log that are unique to known reconnaissance frameworks (e.g., Nmap, FOCA, sqlmap) or automated scanning tools.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers (internal and external-facing), Public-facing web servers, Internet gateway",
            "action": [
              "Symbolic: Apply a list of regular expressions matching User-Agent strings of known scanning tools (e.g., `.*sqlmap.*`, `.*nmap.*`, `masscan`) to the `user_agent` field in Zeek http.log. Separately, create a rule to alert on any DNS query of type 'AXFR' or 'ANY' originating from an external source IP in Zeek dns.log.",
              "Statistical: Calculate the frequency of each User-Agent string from external IPs. Flag any User-Agent that is statistically rare (e.g., appears in less than 0.01% of requests) but is responsible for a high volume of requests from a single IP, indicating a custom or uncommon scanning tool.",
              "Machine Learning: Develop a time-series forecast model (e.g., ARIMA) for the volume of AXFR and ANY DNS query types. An observed volume that significantly exceeds the forecasted upper confidence interval indicates a potential zone transfer or enumeration attempt."
            ]
          },
          {
            "description": "A single external source IP (`id.orig_h`) establishing connections to a high number of unique internal destination IPs (`id.resp_h`) or destination ports (`id.resp_p`) within a short time window, as observed in Zeek conn.log.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter, DMZ segments, Server subnets, Firewall logs",
            "action": [
              "Symbolic: Define a rule that triggers when a single external source IP connects to more than 100 unique destination ports on a single host (vertical scan), or more than 50 unique destination hosts on any port (horizontal scan), within a 5-minute window.",
              "Statistical: For each 1-minute interval, calculate the number of distinct destination hosts and ports contacted by each external source IP. Establish a baseline distribution for these counts. Flag any source IP where either count exceeds the 99th percentile of the historical baseline.",
              "Machine Learning: Use a density-based clustering algorithm like DBSCAN on connection events, using features like (source IP, destination IP, destination port). Scans will form dense clusters that can be automatically identified. Points classified as noise but originating from a single IP connecting to many distinct destinations can also be flagged as slow scan attempts."
            ]
          },
          {
            "description": "A high ratio of NXDomain (non-existent domain) responses to a single external source IP, or an anomalously high volume of SRV or MX record queries from a single external source, as recorded in Zeek dns.log.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative external DNS servers, Internal DNS resolvers, Domain controllers",
            "action": [
              "Symbolic: Create a rule that alerts when a single source IP receives more than 100 NXDomain responses within a 1-minute window for subdomains of the organization's primary domain. This is a strong indicator of subdomain brute-forcing.",
              "Statistical: For each source IP, calculate the ratio of NXDomain responses to total queries. Establish a baseline for this ratio and alert when an IP's ratio exceeds 3 standard deviations above the mean. Additionally, calculate the Shannon entropy of the queried subdomain labels; a high entropy value suggests automated enumeration.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., using an LSTM-based autoencoder) on the volume of DNS queries per type (A, AAAA, MX, SRV, NXDomain). An alert is generated when the observed query volume deviates significantly from the model's prediction of normal patterns."
            ]
          },
          {
            "description": "A statistically significant increase in HTTP requests from external sources to URIs that are historically accessed almost exclusively by internal IP address ranges (e.g., administrative portals, staging sites, internal APIs).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web application servers, Internal administrative portals, Staging or development environments inadvertently exposed to the internet",
            "action": [
              "Symbolic: Maintain a list of known administrative or non-public URIs (e.g., `/admin`, `/login.php`, `/wp-admin`, `/api/internal`). Create a rule to generate a high-severity alert for any access attempt to these URIs from an IP address not on an approved allow-list.",
              "Statistical: Profile all URIs by source IP range (internal vs. external). Calculate a 'publicity score' for each URI (e.g., 99% of requests are internal = low publicity). Monitor for any external IP access to URIs with a publicity score below a 5% threshold, as this indicates probing of non-public assets.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on feature sets derived from legitimate external user sessions on public web pages. Apply this model to new external sessions. Any session classified as an outlier is flagged for review, as it represents behavior inconsistent with normal public users."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]