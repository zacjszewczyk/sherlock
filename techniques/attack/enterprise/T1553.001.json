[
  {
    "information_requirement": "Is an adversary bypassing macOS Gatekeeper to execute untrusted code?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1553.001",
        "name": "Gatekeeper Bypass",
        "evidence": [
          {
            "description": "A file (e.g., DMG, PKG, APP) is transferred over the network, and its hash matches a known malware signature, or a macOS endpoint connects to a network indicator (IP, domain) associated with malware that uses Gatekeeper bypass techniques.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and web proxies.",
            "action": [
              "Symbolic: Continuously process Zeek files.log, hash all observed files, and join the results against a threat intelligence feed of known-malware hashes. Correlate with Zeek http.log to check for macOS user-agent strings. Simultaneously, join the destination IP from Zeek conn.log and the queried domain from Zeek dns.log against a C2 threat intelligence feed and alert on any match originating from a known macOS host IP range.",
              "Statistical: For all macOS hosts, establish a baseline for connections to newly seen domains (domains not present in the last 30 days of logs). Calculate the 95th percentile for the daily count of new domains contacted per host. Alert when a host exceeds this threshold, and increase the alert's priority if the JA3/JA3S hash of the connection is also rare (seen in <1% of connections enterprise-wide).",
              "Machine Learning: Train a Random Forest classification model to distinguish benign from malicious C2 traffic. Use features from Zeek logs including connection duration, originated bytes, responded bytes, protocol, DNS query length and entropy, and the presence of a JA3/JA3S hash. Score all new connections from macOS hosts to generate a risk rating and alert on connections classified as malicious with high confidence."
            ]
          },
          {
            "description": "A process execution event contains command-line arguments for `/usr/bin/xattr` to delete (`-d`) or clear (`-c`) the `com.apple.quarantine` extended attribute from a file, particularly on a file recently written to a user's Downloads or temporary directory.",
            "data_sources": [
              "EDR process execution logs",
              "macOS Endpoint Security Framework events",
              "Sysmon for macOS Event ID 1",
              "bash_history",
              "zsh_history"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All managed macOS endpoints, particularly developer and executive workstations.",
            "action": [
              "Symbolic: Create a detection rule to trigger on process executions where the command line contains `/usr/bin/xattr` and (`-d com.apple.quarantine` or `-c`). Increase the alert priority if the parent process is a shell (`bash`, `zsh`, `sh`) or terminal emulator (`Terminal.app`, `iTerm.app`) and the target file path is within `/Users/*/Downloads/` or `/private/var/tmp/`.",
              "Statistical: Baseline parent-child process relationships across the macOS fleet. Calculate the conditional probability P(`xattr` execution | Parent Process Name). Alert when `xattr` is executed by a statistically unlikely parent process (e.g., `Microsoft Word.app`, `Preview.app`) that falls below a low probability threshold (e.g., P < 0.01).",
              "Machine Learning: Implement a Hidden Markov Model (HMM) to analyze sequences of endpoint events. Train the model on benign activity to learn normal state transitions. Alert when the model detects a low-probability sequence of states, such as (State: Browser File Write) -> (State: `xattr` execution) -> (State: File Execution) -> (State: External Network Connection)."
            ]
          },
          {
            "description": "A correlated sequence of events on a single macOS host within a 5-minute window: 1) A file download is observed in network logs; 2) A process event shows the `com.apple.quarantine` attribute being removed from that same file; 3) The file is executed; 4) The new process establishes a network connection to an external, non-categorized, or high-entropy domain.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "EDR process execution logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and all managed macOS endpoints.",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when a file hash from a Zeek files.log event is subsequently seen in an EDR process execution log with `xattr -d com.apple.quarantine` and then as the executed process image. All events must originate from the same host IP and occur within a 5-minute window.",
              "Statistical: For alerts generated by the symbolic rule, analyze the follow-on network connection. Calculate the entropy of the requested domain in Zeek dns.log and the destination ASN from Zeek conn.log. Prioritize investigations where domain entropy exceeds 4.0 or the destination ASN has not been seen in the environment in the last 30 days.",
              "Machine Learning: For correlated event chains, apply a Fast Fourier Transform (FFT) to the time series of subsequent connection events (timestamps and byte counts from Zeek conn.log) from the newly executed process. A strong peak in the frequency domain indicates periodic, 'heartbeat' C2 beaconing. Alert on any detected periodic signal with a high signal-to-noise ratio."
            ]
          },
          {
            "description": "A process, spawned from a file with the `com.apple.quarantine` attribute set, is executed despite having an invalid, expired, revoked, or ad-hoc code signature, as reported by endpoint security tools.",
            "data_sources": [
              "EDR process execution logs with code signature details",
              "macOS Endpoint Security Framework events (ES_EVENT_TYPE_NOTIFY_EXEC)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All managed macOS endpoints.",
            "action": [
              "Symbolic: Create a detection rule that triggers on any process execution event where the source file has the `com.apple.quarantine` extended attribute present and the associated code signing status is 'unsigned', 'invalid', 'revoked', or 'ad-hoc signed'.",
              "Statistical: Maintain a baseline of all developer certificate subjects and team IDs seen in the environment. Calculate the prevalence of each (e.g., number of hosts it's seen on). Alert when a quarantined file is executed that is signed by a certificate seen on fewer than 1% of endpoints or is new to the environment. Also, monitor the ratio of ad-hoc signed to properly signed quarantined executions per user; alert on users in the 95th percentile.",
              "Machine Learning: Train a one-class SVM on features of known-good, properly signed applications, including certificate authority, developer name, certificate age, code-signing flags (`cs_flags`), and Team ID. Use this model to score all newly executed quarantined applications and identify outliers with suspicious signing characteristics."
            ]
          },
          {
            "description": "A file modification event occurs on `~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2` by a process other than `launchservicesd`, OR a modification to an application's `Info.plist` file adds or changes the `LSFileQuarantineEnabled` key to `false`.",
            "data_sources": [
              "File Integrity Monitoring (FIM) logs",
              "EDR file modification events",
              "macOS Endpoint Security Framework events (ES_EVENT_TYPE_NOTIFY_WRITE)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User `Library` directories and Application bundle directories on all managed macOS endpoints.",
            "action": [
              "Symbolic: Deploy a File Integrity Monitoring (FIM) rule to alert on any write or delete operation to `*/com.apple.LaunchServices.QuarantineEventsV2` where the process name is not `launchservicesd`. Create a second rule to alert on any modification to an `Info.plist` file where a diff analysis shows the addition of `<key>LSFileQuarantineEnabled</key><false/>`.",
              "Statistical: Establish a baseline of processes that legitimately modify `Info.plist` files (e.g., `installer`, `system_profiler`, specific software updaters). For any modification by a process not on this allowlist, calculate a rarity score based on the inverse frequency of the process name across all macOS endpoints. Alert on modifications by processes in the 99th percentile of rarity.",
              "Machine Learning: Apply an Isolation Forest anomaly detection model to features of file modification events on `Info.plist` files. Features should include the acting process name, parent process name, time of day, and file path. Train the model on historical data to identify and alert on modifications that are statistical outliers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]