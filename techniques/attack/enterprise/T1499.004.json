[
  {
    "information_requirement": "Is the adversary impacting availability through application or system exploitation?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1499.004",
        "name": "Application or System Exploitation",
        "evidence": [
          {
            "description": "Network traffic to a specific service contains a payload matching a known DoS exploit signature, correlated with a >3 standard deviation increase in connection duration or a service unavailability event.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Windows Event ID 1000",
              "Windows Event ID 1001"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ network segment, Public-facing web servers, Internet gateways",
            "action": "1. Symbolic: Continuously monitor Zeek notice.log for alerts generated by signature sets identifying DoS tools or specific CVE exploit payloads (e.g., Slowloris, RUDY, CVE-2015-5477). 2. Statistical: For each destination IP flagged by a DoS signature, calculate the 95th percentile of connection duration ('duration' field in Zeek conn.log) over the past hour. Alert if this value exceeds 3 standard deviations of the historical 95th percentile for that service. 3. Machine Learning: Use a time series forecasting model (e.g., Prophet) on the count of Zeek notice.log events per minute for DoS-related signatures. An alert is triggered if the observed count significantly exceeds the forecasted upper confidence interval, indicating an anomalous spike in attack attempts."
          },
          {
            "description": "A single parent process spawns an abnormally high number of child processes (>99th percentile of baseline) in a short time window, or a file transferred over the network exhibits an extreme compression ratio, preceding an application crash (Windows Event ID 1000).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Windows Event ID 1000"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical application servers, User workstations, File servers, Web servers",
            "action": "1. Symbolic: Scan Zeek files.log for files with mime-types like 'application/zip' or 'application/gzip' and check for magic numbers associated with known zip bombs. Alert if a match is found. 2. Statistical: For each host, monitor Windows Event ID 4688 and count child processes created by each parent process ID within a 1-second window. Establish a baseline for each host/process and alert if the count exceeds the 99th percentile of its historical distribution, indicating a fork bomb. 3. Machine Learning: Train a decision tree classifier on features from Zeek files.log (e.g., 'seen_bytes', 'total_bytes', 'mime_type') and host logs (e.g., subsequent crash event 'Windows Event ID 1000'). The model classifies files as 'crash-inducing' based on characteristics like high compression ratios (`total_bytes` >> `seen_bytes`) that are historically correlated with crashes."
          },
          {
            "description": "A statistically significant increase in resource exhaustion error events (e.g., Windows Event ID 2004) immediately precedes a logged application crash (Windows Event ID 1000) or unexpected system restart (Windows Event ID 6006).",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Windows Event ID 2004",
              "Windows Event ID 6006"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Database servers, Virtualization hosts, Terminal servers, Domain Controllers",
            "action": "1. Symbolic: Create an alert that triggers upon the observation of a specific resource exhaustion event, such as Windows Event ID 2004 ('Resource-Exhaustion-Detector'), on any server designated as critical. 2. Statistical: For each host, calculate the rate of application errors (Event ID 1000/1001) per minute. Alert if the rate in a 5-minute window is more than 3 standard deviations above the 30-day rolling average for that host. 3. Machine Learning: Use time series cross-correlation analysis to find leading indicators for system crashes (Event ID 6006). Analyze the time series of Event ID 2004 counts to see if they consistently spike a few minutes before a crash. A strong positive correlation at a specific time lag can be used to build a predictive alert."
          },
          {
            "description": "A sudden deviation from baseline in network traffic metrics, such as a >3 standard deviation increase in connections per second or a >50% drop in source IP entropy, targeting a single service and correlating with its unavailability.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, Load balancers, Public-facing API endpoints, DNS servers",
            "action": "1. Symbolic: Monitor Zeek http.log for a high volume of requests (>100 per second from a single source IP) to a login or search API endpoint. 2. Statistical: For each public-facing service (destination IP and port), calculate the Shannon entropy of the source IP addresses in 1-minute windows from Zeek conn.log. Establish a baseline distribution and alert if the entropy drops below the 5th percentile, indicating a small group of sources are dominating traffic. 3. Machine Learning: Implement an unsupervised clustering algorithm (e.g., DBSCAN) on connection features from Zeek conn.log (duration, source bytes, destination bytes, service). A DoS attack may appear as a new, distinct cluster of short-duration, high-volume connections or as a set of noise points, triggering an investigation."
          },
          {
            "description": "The rate of application crashes (Windows Event ID 1000) or unexpected system restarts (Windows Event ID 6006) on a group of similar assets exceeds the 99th percentile of its historical baseline, with no corresponding authorized change record.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Windows Event ID 6005",
              "Windows Event ID 6006"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise servers, All user workstations, Virtual Desktop Infrastructure (VDI) pool, Patch management servers",
            "action": "1. Symbolic: Create a rule to alert if more than 5 critical servers (e.g., domain controllers, database servers) report an unexpected restart (Event ID 6006) within a 10-minute period. 2. Statistical: For each asset class (e.g., 'web servers'), calculate a 30-day rolling average and standard deviation of the daily crash count (Event ID 1000). Alert if the current day's count for that class exceeds the mean plus 3 standard deviations. 3. Machine Learning: Use a change point detection algorithm (e.g., CUSUM) on the time series of crash events (Event ID 1000) for a specific application. This can automatically detect an abrupt, sustained increase in the crash rate that differs from historical random fluctuations, pointing to a new exploit."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]