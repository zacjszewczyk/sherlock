[
  {
    "information_requirement": "Is the adversary executing commands or payloads using Windows Management Instrumentation (WMI)?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1047",
        "name": "Windows Management Instrumentation",
        "evidence": [
          {
            "description": "Presence of command-line arguments or script block content matching known malicious signatures (e.g., YARA rules, specific strings) associated with threat actor TTPs for WMI-based execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Windows PowerShell Event ID 4103"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": "1. Symbolic: Scan process command-line arguments (Event ID 4688) and PowerShell script block logs (Event ID 4104) for exact match strings, regular expressions, or YARA rules corresponding to known malicious WMI usage, such as 'wmic.exe shadowcopy delete' or PowerShell commands containing obfuscated WMI calls. 2. Statistical: Calculate the Shannon entropy of command lines for wmic.exe and PowerShell WMI cmdlets. Flag commands with entropy scores in the top 5th percentile or more than 3 standard deviations above the mean for that host, as high entropy often indicates obfuscation or encoding. 3. Machine Learning: Train a logistic regression classifier on a labeled dataset of benign and malicious WMI commands from threat intelligence and sandboxes. Use features like command length, character distribution, entropy, and presence of keywords ('Create', 'Invoke', '-enc', 'shadowcopy'). Deploy the model to score new WMI activity in near real-time."
          },
          {
            "description": "Invocation of specific WMI classes and methods known to be abused for execution, lateral movement, or defense evasion, such as Win32_Process.Create, Win32_ShadowCopy.Delete, or the creation of __EventFilter to ActiveScriptEventConsumer bindings.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Microsoft-Windows-WMI-Activity/Operational Event IDs 5857, 5858, 5861"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Management Servers",
            "action": "1. Symbolic: Monitor WMI activity logs (Event ID 5861) and command lines for calls to sensitive WMI methods like 'Win32_Process.Create' or 'Win32_ShadowCopy.Delete'. Create a specific high-severity alert for the creation of a '__FilterToConsumerBinding' instance that links an '__EventFilter' to an 'ActiveScriptEventConsumer' or 'CommandLineEventConsumer'. 2. Statistical: Establish a baseline of WMI class and method usage per host and user. Calculate the rarity of each class/method pair using frequency analysis. Alert on the usage of a pair that is rare for a specific host (<1% of its WMI calls) or across the entire enterprise (e.g., seen on fewer than 5 hosts). 3. Machine Learning: Use an unsupervised learning model, such as an autoencoder, trained on sequences of WMI calls from normal operations. Flag command sequences with a high reconstruction error, which indicates a deviation from learned normal behavior and could represent a novel malicious pattern."
          },
          {
            "description": "Observed network traffic on WMI-related ports (TCP/135, TCP/5985, TCP/5986) that deviates from established baselines in terms of source-destination pairs, volume, or temporal patterns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dce_rpc.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress Points, Core Network Switches, Server VLANs",
            "action": "1. Symbolic: Maintain an allow-list of approved management servers and source/destination pairs for WMI traffic. Alert on any WMI network traffic (TCP/135, 5985, 5986) that does not match an entry on the allow-list, especially workstation-to-workstation WMI communication. 2. Statistical: Model the volume and connection count of WMI traffic per network segment using a time series model (e.g., SARIMA). Alert when observed traffic exceeds the 99th percentile of the forecasted value for a given 5-minute interval, indicating a significant spike. 3. Machine Learning: Employ a graph-based anomaly detection algorithm where nodes are hosts and edges are WMI connections. Train the model on normal activity. Detect anomalies by identifying new edges between previously disconnected communities (e.g., HR VLAN to Engineering VLAN) or nodes with a sudden, high increase in their centrality score, suggesting a host is being used for widespread lateral movement."
          },
          {
            "description": "A successful remote network logon (Logon Type 3) immediately followed by WMI process execution on the target host, where the source-destination-user tuple is anomalous compared to a historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers (Domain Controllers), High-Value Servers, Endpoint Subnets",
            "action": "1. Symbolic: Correlate a successful network logon (Event ID 4624, Logon Type 3) with a subsequent remote WMI process creation (e.g., wmic /node:, Invoke-WmiMethod -ComputerName) from the same source IP within a 5-minute window. Alert if the source IP is from an untrusted network segment or an external address not on an allow-list. 2. Statistical: For each user, build a statistical profile of normal remote WMI activity, including typical source hosts, destination hosts, and logon times. Use the interquartile range (IQR) method to define normal behavior. Alert when a remote WMI session occurs where the source or destination is an outlier (> 1.5 * IQR from the quartile) or the logon time is outside the user's typical 9-to-5 window. 3. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features including source IP, destination host, user account, and time of day for all remote WMI sessions. Identify clusters of normal activity. Flag any activity that does not belong to a known cluster (classified as noise) as anomalous and potentially malicious."
          },
          {
            "description": "WMI execution (via wmic.exe, PowerShell, or other scripting hosts) initiated by an anomalous parent process that is not a standard administrative tool or shell (e.g., WINWORD.EXE, OUTLOOK.EXE, CHROME.EXE).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": "1. Symbolic: Create a rule to alert whenever the parent process of 'wmic.exe' or 'powershell.exe' (when using WMI cmdlets) is not on an allow-list of expected parents (e.g., 'cmd.exe', 'explorer.exe', 'mmc.exe', 'services.exe', 'taskeng.exe'). Assign a high severity if the parent is a browser, mail client, or document editor. 2. Statistical: Analyze parent-child process relationships involving WMI to establish a baseline. Calculate the conditional probability of a child process ('wmic.exe') given a parent process (e.g., P('wmic.exe'|'WINWORD.EXE')). Alert when this probability is less than 0.01% for a given pair, indicating a rare and suspicious event. 3. Machine Learning: Train a random forest classifier to predict if a parent-child process relationship involving WMI is malicious. Use features like parent process name, parent process path, child process command line, user context, and host risk score. Use the model to classify new process events in real-time."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]