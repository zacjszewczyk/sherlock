[
  {
    "information_requirement": "Is the adversary bypassing file access controls or monitoring via direct volume access?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1006",
        "name": "Direct Volume Access",
        "evidence": [
          {
            "description": "The presence or execution of a file on a system whose name or hash matches a known tool used for direct volume access.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers (Domain Controllers, File Servers, Database Servers), Administrator Workstations",
            "action": "1. (Symbolic) Continuously ingest process creation logs (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104). Scan the 'ProcessName', 'CommandLine', and 'ScriptBlockText' fields for file names (e.g., `NinjaCopy.ps1`, `rawdd.exe`) and pre-computed hashes (SHA256, MD5) from a threat intelligence feed of known direct volume access tools. Generate a high-priority alert upon any match. 2. (Statistical) For every new process execution, calculate the rarity of the process name across the enterprise over the last 90 days. If a process name's frequency is below a low threshold (e.g., <0.01% of all endpoints) and contains substrings like 'copy', 'raw', or 'disk', increase its risk score. 3. (Machine Learning) Utilize a pre-trained supervised classification model (e.g., Random Forest) that uses features from process execution events (process name entropy, parent process, command-line length, user context) to predict if a process is malicious. Score all new process creation events and flag those with a high probability of being associated with T1006 tooling for analyst review."
          },
          {
            "description": "An instance of a legitimate system utility (e.g., vssadmin.exe, esentutl.exe, wbadmin.exe) or PowerShell being executed with command-line parameters or script content known to be used for creating, accessing, or exfiltrating volume shadow copies or raw disk data.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers (Domain Controllers, File Servers, Database Servers), Administrator Workstations",
            "action": "1. (Symbolic) From process creation (Windows Event ID 4688) and PowerShell script logs (Windows Event ID 4104), use regular expressions to search for command lines or script content containing high-fidelity patterns like `vssadmin create shadow`, `esentutl /y /vss`, `wbadmin start backup`, or direct volume paths like `\\\\.\\PhysicalDrive[0-9]` and `\\\\.\\HarddiskVolumeShadowCopy[0-9]`. 2. (Statistical) For all executions of `vssadmin.exe`, `esentutl.exe`, and `wbadmin.exe`, calculate the Shannon entropy of the command-line arguments. Establish a baseline of entropy scores for normal administrative use. Alert when a new execution's entropy score exceeds a high percentile (e.g., the 99th percentile) of the baseline, indicating abnormal complexity or obfuscation. 3. (Machine Learning) Apply a sequence mining algorithm to model legitimate command execution sequences by user role (e.g., Domain Admin, Backup Operator). A sequence that is rare for a given user role and involves `vssadmin`, `esentutl`, or `wbadmin` followed by data compression or network transfer utilities (e.g., `tar`, `scp`) should be flagged as a potential attack chain."
          },
          {
            "description": "A process requests a handle to a logical volume or physical drive object (e.g., `\\\\.\\C:`, `\\\\.\\PhysicalDrive0`) where the process is not a known, legitimate system or backup utility, or the requested access rights are unusually permissive.",
            "data_sources": [
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers (Domain Controllers, File Servers, Database Servers), Administrator Workstations",
            "action": "1. (Symbolic) First, enable object access auditing for 'File System' on target systems. Create and maintain an allowlist of legitimate process names (e.g., `svchost.exe`, `lsass.exe`, approved backup software) authorized to request handles to volume objects. Monitor Windows Event ID 4656 for 'Object Name' matching `\\\\.\\*` and alert on any 'Process Name' not on the allowlist. 2. (Statistical) For each process, profile the historical frequency of its access to specific volume objects. Flag any access event that is statistically rare (e.g., first time seen in 90 days). Additionally, profile the distribution of 'Accesses' rights masks requested by each process and alert on requests for rare or high-privilege combinations (e.g., `0x12019f` - GENERIC_ALL) that deviate from the established baseline. 3. (Machine Learning) Use an unsupervised clustering algorithm like DBSCAN on features extracted from Event ID 4656 (Process Name, Object Name, Accesses Mask). Identify clusters of normal behavior. Any event that is classified as a noise point (i.e., does not belong to a known good cluster) represents a significant anomaly and should be immediately investigated as a potential direct volume access attempt."
          },
          {
            "description": "A time-correlated sequence of events on a single host, beginning with anomalous raw volume access, followed by the execution of data copying utilities, and culminating in abnormal network egress traffic.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers (Domain Controllers, File Servers), Administrator Workstations, Network Egress Points",
            "action": "1. (Symbolic) Implement a stateful correlation rule that triggers if, on a single host within a 15-minute window, the following sequence occurs: (a) an anomalous volume handle request is detected (via logic from the previous evidence block), (b) a process creation event for `vssadmin.exe`, `esentutl.exe`, or a known raw copy tool is logged, AND (c) Zeek conn.log shows a subsequent outbound connection from that host with a total byte count `orig_bytes` greater than 50MB. 2. (Statistical) For each host, maintain a 30-day rolling baseline of its average hourly outbound data volume using Zeek conn.log. After a potential T1006 event (handle open + utility execution) is flagged, monitor the host's network traffic. If the outbound volume in the next hour exceeds 3 standard deviations above the baseline for that specific hour of the day and day of the week, escalate the alert priority. 3. (Machine Learning) Train a Hidden Markov Model (HMM) where the hidden states represent stages of an attack (`benign`, `volume_access`, `copy`, `exfiltrate`) and observations are host and network log events. Use the Viterbi algorithm to find the most likely sequence of hidden states given a new stream of events from a host. A state transition path of `volume_access -> copy -> exfiltrate` provides a high-confidence detection of the full attack chain."
          },
          {
            "description": "A PowerShell script block is logged that exhibits high levels of obfuscation or contains direct calls to .NET or Win32 APIs for raw disk I/O, such as System.IO.FileStream on a volume path.",
            "data_sources": [
              "Windows Event ID 4103",
              "Windows Event ID 4104",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers (Domain Controllers, File Servers, Database Servers), Administrator Workstations",
            "action": "1. (Symbolic) Search all PowerShell script block logs (Windows Event ID 4104) for keywords and API calls related to direct access, such as `.new('\\\\.\\')`, `CreateFileW`, `DeviceIoControl`, `[System.Runtime.InteropServices.Marshal]::`, or `[System.IO.FileStream]`. Correlate findings with parent process information from Event ID 4688 to understand the execution context. 2. (Statistical) For each script block, calculate a vector of features including Shannon entropy, character frequency distribution, and the length of the longest continuous string without spaces. Establish a baseline for these features from known benign scripts in your environment. Flag any script where the Mahalanobis distance of its feature vector from the baseline mean is above a defined threshold, indicating statistical abnormality. 3. (Machine Learning) Implement a real-time analysis pipeline that feeds all script block text from Event ID 4104 into a pre-trained deep learning model (e.g., a transformer-based text classifier). The model, trained on millions of benign and malicious script examples, should classify each script. Escalate any script classified as malicious with a confidence score above 95% for immediate analyst review."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]