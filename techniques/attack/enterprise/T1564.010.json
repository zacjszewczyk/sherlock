[
  {
    "information_requirement": "Is the adversary evading defenses by spoofing process arguments?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.010",
        "name": "Process Argument Spoofing",
        "evidence": [
          {
            "description": "A process whose logged command line (Windows Event ID 4688) lacks suspicious parameters, but which subsequently initiates a network connection (Zeek conn.log) to an IP address or domain present on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Internet Gateway",
            "action": [
              "Symbolic: Correlate process creation events (Windows Event ID 4688) with network connection logs (Zeek conn.log) by host and a short time window (< 60 seconds). Join the destination IP or resolved domain (from Zeek dns.log) against a threat intelligence list of known malicious indicators. Generate an alert if a process with a common, non-suspicious command line (e.g., 'svchost.exe -k netsvcs') communicates with a listed malicious entity.",
              "Statistical: For common processes (e.g., svchost.exe, rundll32.exe) with non-suspicious arguments, establish a baseline of destination country codes derived from GeoIP enrichment of Zeek conn.log data. Calculate the frequency distribution of countries each process typically connects to. Alert when a new instance of such a process communicates with a country that falls outside the top 95% of the frequency distribution, indicating a rare geographic connection.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) on labeled process-network events. Features should include process name, command line length, number of arguments, destination port, protocol, and bytes transferred. The model's goal is to predict if the connection is malicious. Use the model to score new events where the logged command line appears benign, alerting on any connection classified as malicious with a high probability score."
            ]
          },
          {
            "description": "A parent process with a common, non-suspicious command line (e.g., 'svchost.exe -k netsvcs') that spawns an unusual or high-risk child process (e.g., 'powershell.exe', 'cmd.exe', 'whoami.exe').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Application Servers",
            "action": [
              "Symbolic: Create a rule that monitors process creation events (Windows Event ID 4688). Define a list of common parent processes often abused for hosting code (e.g., 'svchost.exe', 'rundll32.exe', 'dllhost.exe'). Alert if one of these parent processes, when created with a standard command line, spawns a child process from a high-risk list (e.g., 'powershell.exe', 'cmd.exe', 'cscript.exe', 'reg.exe').",
              "Statistical: For each common parent process name, build a historical baseline of all its unique child process names. Calculate the rarity of each parent-child relationship. Alert when a parent-child process creation event occurs that is in the bottom 5th percentile of frequency (i.e., is extremely rare), suggesting an anomalous execution chain that could indicate argument spoofing in the parent.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on process creation events. Feature vectors should consist of categorical representations of the parent process name, child process name, and parent command line pattern. Identify clusters of normal behavior. Treat any new process creation event that does not fall into a known-good cluster as an outlier and flag for investigation."
            ]
          },
          {
            "description": "A process, created with a seemingly benign command line, that exhibits network behavior deviating by more than two standard deviations from its established baseline in terms of destination port, protocol, or data volume.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Internet Gateway",
            "action": [
              "Symbolic: For a process like 'powershell.exe' with a benign command line (e.g., lacking '-enc' or '-nop'), create a rule to alert if it initiates a network connection (Zeek conn.log) over a non-standard port such as 4444, 8443, or any port outside the common list of [80, 443, 53, 22].",
              "Statistical: For common executables (e.g., svchost.exe, msedge.exe), establish a baseline of normal network activity using historical Zeek conn.log data correlated by process GUID/PID from Windows Event ID 4688. For each process name, calculate the mean and standard deviation of bytes transferred ('orig_bytes' + 'resp_bytes'). Alert if a new instance's data transfer for a single session exceeds 3 standard deviations from the mean for that process name.",
              "Machine Learning: Implement a time series anomaly detection model (e.g., ARIMA or Prophet) on aggregated network traffic volume per host. If a significant anomaly in outbound traffic volume is detected, correlate the timestamp of the anomaly with process creation events (Windows Event ID 4688) on that host. Investigate any process created with benign arguments immediately preceding the traffic spike as a potential source."
            ]
          },
          {
            "description": "A process whose logged command line implies a benign function (e.g., 'msedge.exe') but whose subsequent host-based actions include creating a scheduled task or modifying a registry run key within 5 minutes of creation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 12",
              "Windows Event ID 13",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process creation event (Windows Event ID 4688) for a common browser or office application is followed within 5 minutes by a scheduled task creation (Windows Event ID 4698) or a registry modification in a persistence key (e.g., HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run) by the same Process ID (Windows Event ID 12/13).",
              "Statistical: Profile the sequence of actions for common processes. For a process like 'winword.exe', count the historical frequency of subsequent events like 'Scheduled Task Creation' or 'Registry Run Key Modification' attributed to it. If the frequency of these persistence events is historically near zero, alert on any new occurrence, as it represents a statistically significant deviation from normal application behavior.",
              "Machine Learning: Use a sequence analysis model to learn common event chains initiated by benign processes. Represent each process's activity as a sequence of events (e.g., 'ProcessCreate' -> 'FileWrite' -> 'NetConnect'). Train the model on legitimate sequences. Flag any new sequence that has a low probability of occurring based on the trained model, such as 'msedge.exe:ProcessCreate' -> 'RegistryRunKey:Modify'."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]