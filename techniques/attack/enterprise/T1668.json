[
  {
    "information_requirement": "Is an adversary attempting to maintain exclusive control over a compromised system by eliminating competition or hardening the system against other attackers?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1668",
        "name": "Exclusive Control",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) where the new process's SHA256 hash matches a known malware removal or security tool disabling utility.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, particularly Domain Controllers and critical application servers.",
            "action": [
              "Symbolic: Correlate the file hash for each new process from Windows Event ID 4688 against a threat intelligence feed of known 'exclusive control' tools (e.g., PCHunter, GMER, specific malware removers). Generate a high-priority alert for any match.",
              "Statistical: For each new process hash observed, calculate its prevalence across the enterprise (number of hosts where the hash has been seen). Alert on hashes with a prevalence score below a defined threshold (e.g., seen on fewer than 0.1% of endpoints), excluding known software deployment packages.",
              "Machine Learning: Utilize a pre-trained file classifier model that inputs file metadata (e.g., hash, signing information, name) to output a maliciousness score. Flag any file that is classified as malicious and whose name or metadata suggests it is a system utility or cleaner."
            ]
          },
          {
            "description": "A command-line execution (Windows Event ID 4688) contains arguments consistent with disabling security services, modifying firewall rules, or forcefully uninstalling security software.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, especially those hosting security management consoles or acting as domain controllers.",
            "action": [
              "Symbolic: Use regular expression matching on process command-line arguments to detect patterns like `netsh advfirewall set allprofiles state off`, `sc.exe config <service_name> start= disabled`, `sc.exe stop <service_name>`, or `powershell.exe -c Set-MpPreference -DisableRealtimeMonitoring $true`.",
              "Statistical: Calculate the Shannon entropy of command-line arguments for common system processes (e.g., powershell.exe, cmd.exe, svchost.exe). Establish a baseline entropy score for legitimate commands and alert when a command's entropy exceeds a percentile threshold (e.g., 95th percentile), indicating potential obfuscation.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression, Random Forest) on labeled command-line strings to distinguish between benign and malicious commands. Features could include command length, character distribution, presence of special characters, and keyword counts."
            ]
          },
          {
            "description": "An unauthorized process modifies a registry key or value (Windows Event ID 4657) known to configure, disable, or impair the functionality of a security product.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System registries on all endpoints and servers, with a focus on administrator workstations and critical servers.",
            "action": [
              "Symbolic: Monitor for any modification event (Windows Event ID 4657) targeting a predefined list of critical registry keys associated with security tools (e.g., `HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware`) and alert if the modifying process is not on an approved list of installers or system management tools.",
              "Statistical: For the monitored list of critical registry keys, establish a baseline of normal modifying processes. Alert when a process that has never or rarely been observed modifying a specific security key performs a modification. This represents a statistical anomaly in the (process_name, registry_key) pairing.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., SARIMA) on the volume of modifications to security-related registry keys. A sudden spike in modifications outside of a defined maintenance window or normal business hours would be flagged as an anomaly."
            ]
          },
          {
            "description": "A process spawned by a network service or non-standard parent process modifies firewall rules, disables security-related services, or deletes files in security tool directories.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4947",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing web servers, remote access gateways, and general user endpoints.",
            "action": [
              "Symbolic: Create a correlation rule to detect suspicious parent-child process relationships followed by a defensive evasion action. For example: IF Parent Process is (`winword.exe`, `excel.exe`, `wmiprvse.exe`) AND Child Process is (`powershell.exe`, `cmd.exe`) AND a subsequent event (e.g., Event ID 4947, 7036) indicates a security change, THEN generate an alert.",
              "Statistical: Build a baseline of normal parent-child process relationships across the environment and calculate the conditional probability P(Child|Parent) for all observed pairs. Alert when a rare pairing occurs (probability below a threshold) that also involves a sensitive child process like `powershell.exe` or `netsh.exe`.",
              "Machine Learning: Model system activity as a graph where nodes are processes and edges represent parent-child relationships. Use a graph-based anomaly detection algorithm to identify subgraphs that deviate from learned normal structures, such as a web server process spawning a shell that then modifies a system service."
            ]
          },
          {
            "description": "A rapid sequence of account manipulation events occurs, such as a newly created administrative account disabling or deleting other legitimate user accounts within a short time frame.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4726",
              "Windows Event ID 4732",
              "Windows Event ID 4725"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory databases, and local account databases on critical servers.",
            "action": [
              "Symbolic: Implement a stateful correlation rule that triggers an alert upon detecting the following sequence within a short window (e.g., 15 minutes): Event 4720 (User Created) -> Event 4732 (User Added to Privileged Group) -> Event 4725/4726 (Another User Disabled/Deleted) initiated by the newly created user or its parent process.",
              "Statistical: Analyze the time delta between account creation (4720) and addition to a privileged group (4732). Calculate the 99th percentile for this delta during legitimate operations. A sequence of events occurring faster than this statistical baseline (e.g., within seconds) is highly anomalous and should be investigated.",
              "Machine Learning: Train a classification model to assign a risk score to new user creation events. Features can include username entropy, creation time of day, and source workstation. A high-risk creation event that is immediately followed by any privileged activity, such as disabling another account, would trigger a high-confidence alert."
            ]
          },
          {
            "description": "Following suspicious inbound network activity indicative of exploitation, a patch is installed or a vulnerable service is disabled by an unauthorized process on the target system.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Windows Event ID 4688",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing servers (e.g., web, VPN, RDP), network perimeter security devices, and patch management systems.",
            "action": [
              "Symbolic: Correlate a Zeek `notice.log` entry for exploitation (e.g., 'Log4j_Exploitation_Attempt') or a connection from a known malicious IP in `conn.log` with a subsequent service stop (Event ID 7036) or patch execution (Event ID 4688) on the targeted host within a 1-hour window.",
              "Statistical: Establish a baseline of normal patching and service management activity, noting typical processes (e.g., trusted installer, SCCM client), times, and days. A patching or service modification event that is a statistical outlier (e.g., occurs at 3 AM on a Saturday, initiated by `powershell.exe`) should be flagged for review.",
              "Machine Learning: Employ a time-series cross-correlation analysis to identify anomalous relationships between external network traffic metrics (e.g., connection volume from new ASNs) and internal host events (e.g., service status changes). The model can learn normal operational correlations and flag novel, suspicious ones like an exploit scan followed by a service modification."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]