[
  {
    "information_requirement": "Is the adversary maintaining persistence by implanting internal images?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1525",
        "name": "Implant Internal Image",
        "evidence": [
          {
            "description": "A container, deployed from a recently modified internal image, initiates a network connection to a destination IP address or fully qualified domain name (FQDN) present on a threat intelligence feed of known command and control (C2) servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host nodes, network egress points, internal DNS resolvers",
            "action": [
              "Symbolic Logic: Continuously filter Zeek conn.log and dns.log for all traffic originating from container host IP address space. Join the destination IP addresses and resolved FQDNs against a high-confidence C2 threat intelligence feed. Generate an alert upon any match, including the source container, destination, and the matched C2 indicator.",
              "Statistical: For each containerized application, profile the JA3 and JA3S TLS hashes from Zeek ssl.log to establish a baseline of legitimate client and server fingerprints. Alert on the appearance of new or rare JA3/JA3S hashes not previously associated with that application's baseline, as this indicates the use of non-standard cryptographic libraries common in C2 frameworks.",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA) on the byte count (orig_bytes + resp_bytes in Zeek conn.log) per container over a 30-day period. Generate an alert if the observed traffic volume for a container significantly exceeds the forecasted volume and its confidence interval, suggesting anomalous C2 beaconing or data exfiltration."
            ]
          },
          {
            "description": "A process is created within a container that executes a command line containing syntax associated with reverse shells, remote file download/execution, or known cryptomining tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host nodes (Windows Servers)",
            "action": [
              "Symbolic Logic: On container hosts, monitor Windows Event ID 4688 (Process Creation) events. Scan the 'CommandLine' field using a library of regular expressions to detect high-fidelity patterns of malicious activity, such as 'bash -i >& /dev/tcp/', 'certutil -urlcache -f', or process names like 'xmrig' and 'kinsing'.",
              "Statistical: For each distinct image, create a baseline of all normally executed process names and their parent-child relationships. Calculate the Shannon entropy of the command-line arguments for each process. An alert is triggered if a newly deployed container spawns a process with command-line entropy that is more than three standard deviations above the established baseline for that process, or if a process appears that is not in the baseline.",
              "Machine Learning: Utilize a pre-trained classification model (e.g., Logistic Regression, Random Forest) on labeled command-line strings. Feed the 'CommandLine' data from new Event ID 4688 events into the model to classify them as benign or malicious. A 'malicious' classification with a confidence score above a set threshold (e.g., 0.90) generates an alert for analyst review."
            ]
          },
          {
            "description": "An image is pushed to the internal container registry from a source IP not associated with CI/CD systems, by a user account outside of the authorized developer/admin group, or at a time outside of standard business/deployment hours.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal container image registry, CI/CD pipeline servers, authentication servers",
            "action": [
              "Symbolic Logic: Create and maintain an explicit allowlist of source IP addresses for known CI/CD build servers and authorized administrator workstations. Monitor Zeek http.log for registry API calls indicating image pushes (e.g., HTTP POST to '/v2/.../blobs/uploads/'). Alert on any such call originating from an IP address not on the allowlist.",
              "Statistical: Establish a statistical baseline of normal image push activity, profiling source IPs, user accounts, time-of-day, and image sizes (from 'Content-Length' header in Zeek http.log). Use percentile analysis to flag pushes from IP addresses in the bottom 5th percentile of frequency, by users who are not in the top 95th percentile of push activity, or at anomalous times.",
              "Machine Learning: Develop a multi-feature anomaly detection model (e.g., Isolation Forest) using features such as source IP geolocation, user agent, time of day, day of week, and image size. Train the model on historical registry log data. Feed new image push events into the model to identify anomalous combinations of features that are collectively suspicious."
            ]
          },
          {
            "description": "A newly deployed container, after an image update, exhibits a significant deviation in network or process behavior compared to its own historical baseline, such as creating novel network connections or executing unexpected processes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host nodes, internal network segments, network egress points",
            "action": [
              "Symbolic Logic: For each critical application, define a strict, stateful profile of allowed network connections (destination IP/subnet and port) and allowed process execution trees (parent/child processes). After an image update, monitor for any network connection or process execution that violates this pre-defined profile and generate an immediate alert.",
              "Statistical: For each container, establish a baseline of network behavior by calculating the frequency of destination ports and the Shannon entropy of destination IP addresses over a 5-minute window. A sudden spike in entropy may indicate scanning activity. A connection to a port that falls outside the 95th percentile of common ports for that application should trigger an alert.",
              "Machine Learning: Use K-Means clustering to group containers based on their runtime behavior profiles (e.g., vectors of process names, network port frequencies). After an image update, if a container instance migrates from its typical, established cluster to a new or sparsely populated cluster, it indicates a significant and potentially malicious change in behavior requiring investigation."
            ]
          },
          {
            "description": "An entity performs a high volume of discovery-related API calls against the image registry (e.g., listing all repositories or tags) without subsequently pulling or pushing an image, indicative of reconnaissance.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal container image registry, user workstation network segments",
            "action": [
              "Symbolic Logic: Monitor Zeek http.log for a high count (e.g., > 20) of registry discovery API calls ('GET /v2/_catalog', 'GET /v2/.../tags/list') from a single source IP within a 10-minute window, where the activity is not followed by a corresponding pull ('GET /v2/.../manifests/...') or push ('POST /v2/...') call.",
              "Statistical: Establish a baseline for the ratio of discovery API calls to pull/push calls per source IP over a 24-hour period. A source IP whose ratio dramatically exceeds the 99th percentile of all sources indicates reconnaissance activity. For example, a normal build server might have a 1:10 ratio, while a scanning tool might have a 50:1 ratio.",
              "Machine Learning: Train a sequence analysis model (e.g., a Hidden Markov Model) on typical user session workflows with the registry API. An alert is triggered when a user's sequence of API calls has a very low probability of occurring based on the learned 'normal' sequences, such as a long, repetitive sequence of only 'list tags' calls."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]