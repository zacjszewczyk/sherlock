[
  {
    "information_requirement": "Is the adversary attempting to discover browser information on compromised hosts?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1217",
        "name": "Browser Information Discovery",
        "evidence": [
          {
            "description": "A process execution event is observed where the process name or file hash corresponds to a known browser information or credential harvesting utility.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer workstations, Administrative jump boxes, Critical servers",
            "action": [
              "Symbolic: Continuously monitor process creation events (Sysmon Event ID 1, Windows Event ID 4688). Correlate the ProcessName/Image and file hashes (SHA256, MD5) against a maintained threat intelligence feed of known browser credential dumping tools (e.g., LaZagne, WebBrowserPassView, Mimikatz, SharpWeb). Generate a high-severity alert upon any exact match for immediate incident response.",
              "Statistical: Analyze process execution events (Sysmon Event ID 1) across the enterprise. For each unique process hash, calculate its prevalence (percentage of hosts it runs on). Flag any process that matches a watchlist of suspicious tool names (e.g., 'lazagne', 'sharpweb', 'passview') and has a low prevalence score (e.g., runs on < 1% of endpoints), indicating it is not common or approved software.",
              "Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on process creation events. Features should include process name string characteristics (e.g., length, character entropy), parent process name, user context, and whether the process is signed. The model will classify each execution as benign or suspicious, flagging those predicted as suspicious for analyst review."
            ]
          },
          {
            "description": "Execution of a scripting interpreter or utility with command-line parameters referencing sensitive browser file paths or database names.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer workstations, Administrative jump boxes, Critical servers",
            "action": [
              "Symbolic: Analyze process command lines (Sysmon Event ID 1) for the execution of interpreters (powershell.exe, cmd.exe, cscript.exe) or utilities (sqlite3.exe, esentutl.exe) where the command line contains strings or regular expressions matching known browser profile paths (e.g., 'AppData\\\\Local\\\\Google\\\\Chrome\\\\User Data', 'AppData\\\\Roaming\\\\Mozilla\\\\Firefox\\\\Profiles') or sensitive filenames (e.g., 'Login Data', 'cookies.sqlite', 'key4.db'). Alert on any match.",
              "Statistical: For common scripting interpreters, establish a baseline of command-line argument entropy and length per user and host. Flag executions where entropy or length exceeds a high percentile (e.g., 95th), which can indicate obfuscation. Additionally, track the frequency of file paths in command lines; a command that references a browser-related path that is historically rare for that user or host (e.g., in the bottom 5% of path frequency) should be scored as high risk.",
              "Machine Learning: Use a Natural Language Processing (NLP) model, such as a pre-trained transformer, to classify command-line arguments. Fine-tune the model to categorize commands into classes like 'benign system administration', 'software installation', or 'malicious discovery'. The model learns the semantic context of commands accessing browser files, distinguishing legitimate use from malicious intent, and alerts on commands classified as 'malicious discovery'."
            ]
          },
          {
            "description": "An unauthorized process performs a read operation on a sensitive browser data file, such as a cookie database or login data store.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 11",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Default user profile directories on endpoints and servers (e.g., C:\\Users\\<username>\\AppData\\)",
            "action": [
              "Symbolic: Enable object access auditing (SACL) on sensitive browser profile directories. Monitor for file read events (Windows Event ID 4663 with Accesses containing 'ReadData') targeting files like 'Login Data', 'cookies.sqlite', or 'places.sqlite'. Maintain an explicit allowlist of legitimate processes (e.g., chrome.exe, firefox.exe, and approved EDR/AV scanners). Alert on any access from a process not on the allowlist.",
              "Statistical: For each host, create a baseline of processes that normally access browser data files and their access frequency. Use a statistical measure like a Z-score to identify anomalies. If a rarely seen process (e.g., powershell.exe, rundll32.exe) accesses these files, or if any process accesses them with an anomalous frequency (e.g., > 3 standard deviations above its hourly mean), generate an alert.",
              "Machine Learning: Implement an unsupervised anomaly detection model (e.g., Isolation Forest) on file access events targeting browser data. Train the model using features such as the process name, parent process name, user account, and time of day. The model will learn the pattern of normal access to browser files and flag any access event that significantly deviates from this learned 'normal' behavior as a potential threat."
            ]
          },
          {
            "description": "A sequence of actions where a process accesses browser data files, followed shortly by file creation in a staging directory and subsequent outbound network connections.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Sysmon Event ID 11",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Temporary file directories (e.g., %TEMP%, C:\\Users\\Public), Network egress points",
            "action": [
              "Symbolic: Create a stateful detection rule that triggers on a sequence of events from a single host within a 5-minute window: 1) A process reads a browser data file (Windows Event ID 4663). 2) The same process creates a file, especially an archive (e.g., .zip, .rar), in a staging directory (Sysmon Event ID 11). 3) The same host initiates an outbound network connection (Sysmon Event ID 3, Zeek conn.log) to a non-corporate IP address. Alert if all three conditions are met.",
              "Statistical: After a browser file access event (Event ID 4663), monitor subsequent outbound network flows (Zeek conn.log) from the same host. If, within 10 minutes, the host initiates a connection where the outbound data volume (`orig_bytes`) exceeds the 99th percentile of its historical baseline, flag it as potential exfiltration. Increase the risk score if the destination IP has a low reputation or is new to the organization.",
              "Machine Learning: Use a sequence analysis model like a Hidden Markov Model (HMM) or an LSTM-based autoencoder to learn normal event chains on a host. Train the model on sequences of events (file reads, file creations, network connections). The model will flag the sequence [Browser File Read -> Staging File Create -> Outbound Connection] as a high-risk anomaly if it deviates from learned benign operational sequences."
            ]
          },
          {
            "description": "A process access event is recorded where a non-standard utility requests read access to the memory space of a running web browser process.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process memory space of web browsers on user workstations and servers",
            "action": [
              "Symbolic: Create a detection rule to monitor Sysmon Event ID 10 (ProcessAccess). Alert when the `TargetImage` is a known browser process (e.g., chrome.exe, msedge.exe) and the `SourceImage` is not an approved debugger or system utility (e.g., WerFault.exe). The rule should specifically look for `GrantedAccess` codes that include `0x1000` (PROCESS_VM_READ) or `0x1F0FFF` (PROCESS_ALL_ACCESS).",
              "Statistical: Establish a baseline for the frequency of Sysmon Event ID 10 events where a browser is the target, per host and per source process. Generate an alert when the count of these events from an unusual `SourceImage` (e.g., powershell.exe) exceeds a statistical threshold (e.g., more than 2 events in 5 minutes), which could indicate repeated attempts to access browser memory.",
              "Machine Learning: Train a supervised classification model (e.g., Gradient Boosting) on Sysmon Event ID 10 data. Use features including `SourceImage`, `TargetImage`, `GrantedAccess` flags, user context, and the parent of the `SourceImage`. The model learns to differentiate between benign debugging activities and malicious memory scraping attempts, alerting on events classified as malicious with high confidence."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]