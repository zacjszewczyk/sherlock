[
  {
    "information_requirement": "Is the adversary attempting to exfiltrate data over an unusual or secondary network medium? (PIR)",
    "tactic_id": "TA0010",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1011",
        "name": "Exfiltration Over Other Network Medium",
        "evidence": [
          {
            "description": "A process executes whose file hash matches a known indicator of compromise (IOC) for tools capable of T1011, and this process initiates an outbound network connection over a non-primary network interface (e.g., Wi-Fi, Bluetooth, Cellular) to a destination IP address that is also a known IOC.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints with multiple network interfaces (e.g., laptops, workstations with cellular cards), Network egress points monitoring secondary channels, VPN concentrators",
            "action": [
              "Symbolic Logic: Join process creation events (Windows Event ID 4688) with network connection events (Windows Event ID 5156) on the Process ID. Correlate the destination IP from the network event with Zeek conn.log data for the same flow. Alert if the process hash matches a T1011 IOC list AND the destination IP matches a known C2/exfil IOC list AND the connection traverses a non-primary network interface (e.g., WLAN, WWAN, Bluetooth).",
              "Statistical Method: Aggregate all observed (process name, network interface type) pairs from host network logs (Windows Event ID 5156) across the enterprise over a 30-day period. Calculate the frequency of each pair. Alert when a new pair is observed that has a frequency in the bottom 1st percentile or has never been seen before, indicating a rare process is using a secondary interface.",
              "Machine Learning: Train a supervised classification model (e.g., Gradient Boosting) using labeled historical data of network connections. Features must include: process path, parent process name, command-line arguments, network interface type, destination IP autonomous system number (ASN), destination port, total bytes sent, and connection duration. The model classifies each connection from a secondary interface as 'benign' or 'T1011'. Alert on classifications of 'T1011' with a model confidence score greater than 0.90."
            ]
          },
          {
            "description": "The execution of network configuration utilities (e.g., netsh.exe) or PowerShell cmdlets (e.g., Enable-NetAdapter) with arguments that enable or modify a secondary network interface, where the execution context (user, parent process) is anomalous and is followed by network traffic on that interface.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, Domain Controllers (for GPO changes), System management servers (MECM, Intune)",
            "action": [
              "Symbolic Logic: Create a detection rule that searches process command lines (Windows Event ID 4688) and PowerShell script blocks (Windows Event ID 4104) for strings such as 'netsh wlan connect', 'netsh interface set interface', 'Enable-NetAdapter', or 'New-NetIPAddress'. Alert if the command is executed by a non-standard administrative user account or is spawned from an unusual parent process (e.g., winword.exe, outlook.exe).",
              "Statistical Method: For each user, baseline the frequency and argument patterns of network configuration commands (netsh.exe, ipconfig.exe, and PowerShell networking cmdlets). Calculate the Shannon entropy of the command-line arguments for these tools per user session. Alert when a user executes a rare network configuration command OR the command-line entropy for a specific execution exceeds 2 standard deviations above the user's historical mean, suggesting obfuscation or randomization.",
              "Machine Learning: Use an unsupervised anomaly detection model (e.g., Isolation Forest) on features extracted from command execution events (Windows Event ID 4688, 4104). Features must include: hour of day, day of week, user SID, parent process name, command-line length, and a binary feature indicating if the command contains 'wlan', 'wwan', or 'bluetooth'. The model flags command executions scored as highly anomalous relative to all historical administrative activity."
            ]
          },
          {
            "description": "A timed sequence of events on a single host: [1] A command to enable a secondary network interface, [2] execution of data archiving utilities on sensitive directories, and [3] an outbound network connection over the newly enabled interface with a data volume greater than 10x the host's 30-day average for that interface.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints, File servers hosting sensitive data, Network egress points, Data Loss Prevention (DLP) sensor locations",
            "action": [
              "Symbolic Logic: Create a stateful correlation rule that triggers on a single host within a 15-minute window. The sequence must be: 1) Detection of a network interface activation command (e.g., 'netsh wlan connect'). 2) Detection of a process creation event (Windows Event ID 4688) for an archiving tool (e.g., 7z.exe, rar.exe, tar.exe). 3) Detection of a large outbound connection (e.g., > 50MB) in Zeek conn.log where the source is the target host and the interface is secondary. Alert on a successful sequence match.",
              "Statistical Method: For each host, calculate the 98th percentile of daily outbound data volume for each secondary interface using 30 days of Zeek conn.log data. Separately, monitor for process chains where a data staging/archiving process is followed by any network connection on a secondary interface within 5 minutes. Alert if that subsequent connection's data volume exceeds the host's established 98th percentile threshold.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA) on outbound network traffic volume for each host's secondary interfaces, aggregated in 5-minute intervals. The model forecasts the expected volume for the next interval. Generate an alert when the observed volume significantly exceeds the model's prediction confidence interval, especially if the anomaly is temporally correlated with recent process creation events for archiving tools or network interface commands."
            ]
          },
          {
            "description": "Outbound traffic on a secondary network interface exhibits statistically significant deviations from its established baseline in one or more metrics: total bytes transferred, connection duration, destination port, protocol used, or exhibits beaconing-like periodicity.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at egress points, Wireless Access Points, Endpoints with packet monitoring agents, Cloud Access Security Brokers (CASBs)",
            "action": [
              "Symbolic Logic: Monitor Zeek conn.log for traffic over secondary interfaces. Alert if the destination port is on a watchlist of non-standard exfiltration ports (e.g., 53 for non-DNS traffic, 6667, 8888) OR if the User-Agent string in http.log for that traffic matches a known T1011 tool signature.",
              "Statistical Method: For each host's secondary interface, profile normal behavior using 30 days of Zeek log data. The profile includes: 1) 99th percentile of `orig_bytes` from conn.log, 2) 99th percentile of `duration` from conn.log, and 3) a set of common destination ports. For TLS traffic, also baseline the JA3 hash from ssl.log. Alert when a new connection exceeds the byte/duration percentile, uses a new port, or presents a JA3 hash that is rare (<1% prevalence) for that host.",
              "Machine Learning: Apply an unsupervised clustering algorithm (e.g., DBSCAN) to network connection logs (Zeek conn.log) from secondary interfaces. Use normalized features like log10(bytes_sent), log10(duration), destination port, and protocol. After establishing stable clusters of 'normal' activity, flag any new connection that is marked as a noise point (not belonging to any cluster) as an anomaly requiring investigation."
            ]
          },
          {
            "description": "A network connection is initiated over a secondary interface by a process that is either [1] not on an allowlist of network-capable applications (e.g., notepad.exe), or [2] a legitimate network-capable process (e.g., powershell.exe) executing from a non-standard file path (e.g., %APPDATA%, C:\\Temp\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Symbolic Logic: Maintain an allowlist of standard executable paths for common network-aware processes. Join process creation events (Windows Event ID 4688) with network connection events (Windows Event ID 5156). Alert when a network connection is initiated over a secondary interface AND the process's full path is not on the allowlist OR its path is in a user-writable directory (e.g., C:\\Users\\, C:\\Temp\\, C:\\ProgramData\\).",
              "Statistical Method: Aggregate a baseline of all unique (Process Path, Parent Process Path, Network Interface Type) triples from across the enterprise over 30 days. Calculate the enterprise-wide frequency of each triple. Alert on the observation of any new triple that has a frequency of less than 0.01% or has never been observed before, indicating a highly unusual process execution and networking context.",
              "Machine Learning: Train a classification model to predict the likelihood that a given process path is legitimate based on lexical features (e.g., path depth, presence of user-writable directories, character entropy of the filename). Use the output of this model as a feature in a larger anomaly detection system that also considers the network interface, destination port, and bytes sent, flagging connections from processes with a high 'malicious path' score that also exhibit anomalous network behavior."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]