[
  {
    "information_requirement": "Has the adversary accessed credentials by stealing or forging authentication certificates?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1649",
        "name": "Steal or Forge Authentication Certificates",
        "evidence": [
          {
            "description": "A process execution event where the process file hash matches a known hash of a certificate theft tool (e.g., Certipy, Mimikatz), or a network connection using a TLS certificate whose thumbprint matches a known malicious certificate.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Certificate Authority Servers, All Endpoints, Network Egress Points",
            "action": [
              "Symbolic: Continuously correlate the SHA256 hash from process creation events (Windows Event ID 4688) against a threat intelligence feed of file hashes for known certificate manipulation tools. Separately, correlate the `id` field (thumbprint) from Zeek x509.log against a threat intelligence feed of known malicious or forged certificate thumbprints. Generate a high-severity alert on any match.",
              "Statistical: For each endpoint, calculate the frequency of process executions whose names are associated with certificate management (e.g., certutil.exe, powershell.exe with specific modules). Establish a baseline for each host profile (e.g., workstation, developer machine, server). Alert when the execution frequency for a given host exceeds the 99th percentile of its baseline, especially outside of business hours.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on enriched process execution data (Windows Event ID 4688). Features should include process name, parent process, command-line arguments, user context, and a binary feature indicating if the hash is on a known-good or known-bad list. Use the model to score all new process executions for their likelihood of being malicious certificate theft activity, flagging those with a high probability score."
            ]
          },
          {
            "description": "A process creation event (e.g., powershell.exe, cmd.exe) whose command line contains arguments and patterns indicative of certificate enumeration, request, or theft using tools like Certipy, Rubeus, or Mimikatz.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Certificate Authority Servers, All Endpoints with PowerShell/CMD access",
            "action": [
              "Symbolic: Using regular expressions, scan command-line arguments from process creation events (Windows Event ID 4688) and PowerShell script block logs (Event ID 4104) for patterns associated with certificate abuse tools. Examples include `certipy find -vulnerable`, `certipy auth -pfx`, `certipy req`, `mimikatz crypto::certificates /export`, or `Rubeus asktgs /pfx`. Generate an alert upon a regex match.",
              "Statistical: Calculate the entropy of command-line arguments for common processes like `powershell.exe` and `certutil.exe`. Establish a baseline entropy score for typical administrative commands. A command with an unusually high entropy score (e.g., exceeding 3 standard deviations from the mean), which may indicate obfuscated or complex malicious commands, should be flagged for review.",
              "Machine Learning: Utilize a Natural Language Processing (NLP) model, fine-tuned on a dataset of malicious and benign command lines. The model will classify new command lines from Event ID 4688 and 4104 as either benign, suspicious, or malicious based on semantic structure and keyword presence. This can detect novel or obfuscated variations of known attack patterns."
            ]
          },
          {
            "description": "A certificate enrollment request is logged on a Certificate Authority (CA) server where the requestor, template, or Subject Alternative Name (SAN) deviates from established policy or baselines, such as a user requesting a machine template or a non-privileged user specifying a SAN for a Domain Controller.",
            "data_sources": [
              "Windows Event ID 4886",
              "Windows Event ID 4898",
              "Windows Event ID 4887"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Certificate Authority (CA) Servers",
            "action": [
              "Symbolic: Create an explicit allow-list of (User/Group, Template) pairings. Monitor certificate request events (Windows Event ID 4886) and alert on any request that violates this policy. Specifically, flag any request for a template configured with 'Client Authentication' EKU and a user-defined SAN (potential ESC1 vulnerability) from a user not explicitly authorized for that template.",
              "Statistical: For each certificate template, establish a baseline of requesting users and machines. Use a rarity score for each new (requester, template) pair. A request pair with a very high rarity score (e.g., in the top 1% of rarity) should be flagged. Also, track the rate of failed requests (Event ID 4887) per user; a sudden spike in failures could indicate an adversary probing for misconfigurations.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., ARIMA or LSTM) on the volume of certificate requests per template over time. An anomalous spike in requests for a specific template, particularly a sensitive one, could indicate an automated abuse attempt by an adversary. The model would learn the normal daily/weekly seasonality of requests and flag significant deviations."
            ]
          },
          {
            "description": "An event is logged indicating a cryptographic key was accessed or exported by a process or user account not typically associated with certificate management, or a file system audit event shows access to protected key storage directories by an unusual process.",
            "data_sources": [
              "Windows Event ID 5058",
              "Windows Event ID 5059",
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, especially Domain Controllers and CA Servers where sensitive keys are stored",
            "action": [
              "Symbolic: Monitor for key export events (Windows Event ID 5058 with Operation 'Export of persistent key' and 5059). Correlate the Process ID from these events with process creation events (Event ID 4688) to identify the process name. Alert if the process is not on an approved list of applications allowed to export keys (e.g., certlm.msc, lsass.exe).",
              "Statistical: Establish a baseline of users who perform key export operations and the frequency of these operations. Alert when a user who has never performed a key export before does so, or when a known user's activity exceeds their baseline by more than 3 standard deviations. Also, monitor for access (Event ID 4663) to key storage directories (C:\\ProgramData\\Microsoft\\Crypto\\*) and alert on a statistically unusual number of access events from a single process in a short time window.",
              "Machine Learning: Train an unsupervised anomaly detection model (e.g., Isolation Forest) on a feature set derived from key access events (5058, 5059, 4663). Features should include user, process name, time of day, and target key/file. The model will identify rare combinations of these features that represent anomalous behavior, such as a web server process accessing a user's private key in the middle of the night."
            ]
          },
          {
            "description": "A successful logon event using a certificate (Kerberos or Schannel) exhibits multiple anomalous characteristics simultaneously, such as originating from a rare geographic location, using an unfamiliar device, or being the first certificate-based logon for that user account.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Authentication Servers (RADIUS/NPS), VPN Concentrators, Network Egress Points",
            "action": [
              "Symbolic: Monitor successful logon events (Windows Event ID 4624) where the Authentication Package is `Kerberos` or `Schannel` and a certificate is used. Maintain a list of users/machines that are not expected to use certificate-based authentication. Generate an alert if any of those accounts successfully authenticates using a certificate.",
              "Statistical: For each user, create a baseline of typical certificate-based logon attributes, including source IP address, source hostname, and time of day. Use statistical measures to detect 'impossible travel' by comparing the time and location of the current logon with the previous logon. Also, alert on logons from an IP address that falls outside the user's historical IP geolocation and ISP profile (enriched from Zeek conn.log).",
              "Machine Learning: Implement a peer group analysis model. Group users based on their roles and access patterns. The model identifies when a user's certificate authentication behavior significantly deviates from that of their peers. For example, if a user in the 'Sales' group authenticates via certificate to a developer server, and no other sales user has ever done so, the model flags this as a cross-peer-group anomaly."
            ]
          },
          {
            "description": "File system auditing logs show a process creating, reading, or modifying a file with a certificate-related extension (e.g., .pfx, .p12, .pem) in a directory not typically used for certificate storage (e.g., C:\\Users\\Public, %TEMP%), potentially followed by an outbound network connection from the same process.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, File Servers, Web Servers, Network Egress Points",
            "action": [
              "Symbolic: Configure File System Object Access auditing (SACL) on non-standard directories (e.g., %TEMP%, C:\\Users\\Public) to monitor for write actions (Event ID 4663) on files with extensions `.pfx`, `.p12`, `.pem`, `.crt`. Correlate the Process ID from the 4663 event with a process creation event (4688) to find the process name. Alert if the process is not an approved software installation or update utility.",
              "Statistical: Analyze Zeek files.log to establish a baseline for the MIME types of files transferred over the network. Alert when the volume of files with MIME type `application/x-pkcs12` exceeds a statistically determined threshold (e.g., 95th percentile) for a given time window. Correlate this with outbound connection data from conn.log to identify potential exfiltration destinations.",
              "Machine Learning: Create a sequence analysis model that looks for a chain of events within a short time window: 1) A process (e.g., powershell.exe) reads a sensitive certificate file (Event ID 4663). 2) The same process initiates an outbound network connection to a new or rare external IP address (Zeek conn.log). 3) A significant amount of data is transferred in that connection. The model would score these sequences, and a high-scoring sequence would trigger an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]