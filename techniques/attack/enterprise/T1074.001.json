[
  {
    "information_requirement": "Is the adversary collecting and staging data on local systems prior to exfiltration? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1074.001",
        "name": "Local Data Staging",
        "evidence": [
          {
            "description": "A process hash matching a known staging tool or the creation of an archive file with a filename or hash matching a known indicator of compromise (IOC) is observed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, application servers, and domain controllers, focusing on common staging directories (e.g., C:\\Windows\\Temp, C:\\Perflogs, C:\\Users\\Public, and user Recycle Bins).",
            "action": "1. (Symbolic) Continuously ingest threat intelligence feeds for known staging tool hashes and malicious archive filenames. Create a SIEM rule to alert when a process creation event (Windows Event ID 4688) has a hash matching the watchlist, or when a file creation event (Windows Event ID 4663) in a monitored staging directory has a filename matching the IOC list. 2. (Statistical) For each host, calculate the 95th percentile of archive file sizes (.zip, .rar, .7z, .tar) created per day. Alert if a newly created archive file's size exceeds this host-specific threshold, especially if created by a process not typically associated with archiving. 3. (Machine Learning) Train a classification model (e.g., Random Forest) on features from process creation events (EID 4688), such as parent process, user context, and command-line arguments. Use the model to predict the likelihood that a process is a malicious staging tool, even if the hash is unknown. Flag processes with a high probability score for analyst review."
          },
          {
            "description": "Command-line or PowerShell execution is observed containing syntax patterns for finding, copying, and archiving files into a single location, especially when targeting sensitive user or system directories.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server command-line and PowerShell execution logs, particularly on systems hosting sensitive data or belonging to privileged users.",
            "action": "1. (Symbolic) Use regular expressions to search process command lines (Windows Event ID 4688) and PowerShell script blocks (Windows Event ID 4104) for the execution of archiving tools (`7z.exe`, `rar.exe`, `tar.exe`, `Compress-Archive`) that target multiple sensitive directories (e.g., 'My Documents', 'Desktop') or use password protection flags. 2. (Statistical) For PowerShell logs (EID 4104), calculate the entropy of script blocks. A script with unusually high entropy that also contains archiving cmdlets may indicate obfuscation. Establish a baseline entropy score for legitimate administrative scripts and alert on significant deviations (e.g., > 3 standard deviations from the mean). 3. (Machine Learning) Use a Natural Language Processing (NLP) model to classify command-line strings and PowerShell scripts as benign or malicious staging. Fine-tune the model on a labeled dataset of known adversary and administrator commands to learn semantic patterns indicative of staging beyond simple keyword matching."
          },
          {
            "description": "A single process reads an anomalously high number of files from diverse directory paths and subsequently writes a large, single archive file to a common staging directory.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs on high-value servers (e.g., file servers, database servers) and endpoints of privileged users. Focus on directories containing intellectual property, user profiles, and system configuration data.",
            "action": "1. (Symbolic) Create a correlation rule that triggers when a process (identified by PID from EID 4688) generates a high volume of file read events (EID 4663) from >10 unique directory paths within a 5-minute window, and is immediately followed by a file write event for an archive file type (.zip, .rar, .7z) in a staging location. 2. (Statistical) For each process, calculate the Shannon entropy of the directory paths it reads from over a sliding time window. A sudden, sharp increase in path entropy for a process like `explorer.exe` or `powershell.exe` is highly suspicious. Alert when the path entropy for a process exceeds the 99th percentile of its historical baseline. 3. (Machine Learning) Apply time series anomaly detection (e.g., using an LSTM autoencoder) to the count of file I/O operations per process per host. Train the model on baseline activity to learn normal patterns. An anomalous spike in file reads followed by a large file write, as detected by the model, should be flagged as a potential staging event."
          },
          {
            "description": "A host exhibits a burst of network file access activity (e.g., SMB reads) from multiple network shares, which is temporally correlated with the creation of a large, local archive file on that same host.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek smb_files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic at key aggregation points (e.g., core switches, data center distribution layer) and file system/network I/O logs on endpoints and file servers.",
            "action": "1. (Symbolic) Create a SIEM rule that alerts when a single source host reads files from more than 5 distinct network shares within 15 minutes (from Zeek `smb_files.log`), and this activity is followed by the creation of a local archive file larger than 100MB on that same host (from Windows Event ID 4663). 2. (Statistical) For each host, establish a baseline of daily SMB read bytes and unique shares accessed using Zeek's `conn.log` and `smb_files.log`. Alert when a host's SMB read volume exceeds its 95th percentile and the number of unique source shares accessed exceeds its historical norm by more than 3 standard deviations in a single hour. 3. (Machine Learning) Use a graph-based clustering algorithm on network connection data. Represent hosts and file shares as nodes and SMB reads as edges. A cluster of anomalous density, where one host node connects to an unusually high number of file share nodes in a short time, indicates collection. Correlate the timestamp of this graph anomaly with local file creation events on the source host."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]