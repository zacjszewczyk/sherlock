[
  {
    "information_requirement": "Is the adversary attempting to discover our cloud infrastructure to map available resources?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1580",
        "name": "Cloud Infrastructure Discovery",
        "evidence": [
          {
            "description": "A TCP connection to a known cloud provider API endpoint (e.g., ec2.amazonaws.com) originates from an IP address present on a high-confidence threat intelligence feed of malicious actors or anonymizing proxies (e.g., TOR).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Egress Points, DNS Resolvers, Network Security Monitoring (NSM) sensor locations",
            "action": [
              "Symbolic: Join Zeek ssl.log (on server_name matching cloud API FQDN patterns like '*.amazonaws.com', '*.googleapis.com', 'management.azure.com') with Zeek conn.log (on uid). Filter for connections where the originator IP (id.orig_h) matches a list of known malicious IPs from a threat intelligence feed. Generate an alert for every match.",
              "Statistical: For all connections to cloud API endpoints, extract the source IP's geolocation and Autonomous System (AS). Establish a baseline of common source countries and ASNs. Generate an alert if a connection originates from a country or ASN that falls below the 5th percentile of frequency in the last 30 days.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from Zeek logs such as source/destination port, connection duration, protocol, requested SNI, and source IP geolocation/reputation. The model should be trained on labeled data to classify connections to cloud APIs as 'benign administrative activity' or 'suspicious discovery'. Apply the model in real-time to new connections."
            ]
          },
          {
            "description": "A process is created with a command line that contains arguments, flags, or script names uniquely associated with known open-source or malicious cloud discovery tools (e.g., Pacu, CloudMapper, ScoutSuite).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrator and developer workstations, CI/CD pipeline runners, Bastion hosts",
            "action": [
              "Symbolic: Scan the 'CommandLine' or 'NewProcessName' fields in Windows Event ID 4688 logs for specific strings and regular expressions matching known tool names ('pacu.py', 'cloudmapper.py'), modules ('--module ec2__enum_unauthenticated'), or unique argument patterns. Maintain a library of these signatures and alert on any match.",
              "Statistical: Calculate the entropy of command-line arguments for all cloud CLI tool executions (aws.exe, az.exe, gcloud.cmd). Establish a baseline entropy score for legitimate administrative commands. A command with an unusually high entropy score may indicate the complex, parameter-heavy invocations typical of automated scanning tools. Alert on commands with entropy scores exceeding the 98th percentile.",
              "Machine Learning: Use Natural Language Processing (NLP) techniques like TF-IDF to vectorize command-line arguments. Train a one-class SVM (Support Vector Machine) model on the vectorized commands from known legitimate administrative activity. Use the trained model to identify any new command that is a significant outlier, indicating a potentially malicious or unauthorized tool.",
              "Human-in-the-loop: For any detected anomalous command, automatically query the user's manager via an integrated chat or email system to confirm if the activity was legitimate. This can help reduce false positives and enrich the model."
            ]
          },
          {
            "description": "Cloud infrastructure discovery commands (e.g., 'aws describe-*', 'az vm list', 'gcloud compute instances list') are executed by a user account or on a host that is not part of a pre-defined group of cloud administrators or automated systems.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, Active Directory servers (for group membership lookups), Privileged Access Management (PAM) systems",
            "action": [
              "Symbolic: Maintain an explicit allow-list of Active Directory user groups (e.g., 'CloudAdmins', 'DevOps-Team') authorized to execute cloud CLI commands. For each execution of 'aws.exe', 'az.exe', or 'gcloud.cmd', check the user's group membership. Alert if the user is not in an authorized group.",
              "Statistical: For each user, create a historical baseline of the specific discovery commands they run. Alert if a user runs a discovery command (e.g., 'describe-instances') for the first time or if the daily count of their discovery commands exceeds three standard deviations from their personal average.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) to group users based on their command-line activity profiles (e.g., frequency and variety of commands). This will create organic clusters of roles like 'Cloud Admins', 'Developers', 'Power Users'. Alert when a user's activity profile shifts significantly, causing them to be re-classified into a different cluster, or when they appear as a new outlier."
            ]
          },
          {
            "description": "A single user identity or source IP executes a number of distinct cloud discovery API calls that exceeds a dynamically calculated threshold within a short time frame (e.g., >50 'describe' or 'list' calls in 5 minutes).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "AWS CloudTrail",
              "Azure Monitor Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane (API logging), Administrator workstations, Network egress points",
            "action": [
              "Symbolic: Create a rule that triggers if the count of API calls with names matching 'describe*', 'list*', or 'get*' from a single source IP or user ARN exceeds a hard threshold of 100 events within a 10-minute window.",
              "Statistical: For each user identity, establish a baseline of API call volume per hour. Using a sliding window, calculate the rate of discovery calls. Alert if the current rate exceeds the 99th percentile of that identity's historical baseline. Additionally, calculate the Shannon entropy of the API event names in the window; a high entropy suggests broad enumeration across many services, while low entropy suggests repeated calls to one service.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or Prophet) for each user's discovery API call stream. The model will forecast the expected volume of calls with a confidence interval. An alert is generated if the actual volume of calls significantly exceeds the upper bound of the forecasted confidence interval, indicating a burst of activity inconsistent with past behavior."
            ]
          },
          {
            "description": "A single user identity executes discovery commands querying an anomalously high number of distinct service types or all available geographic regions, especially when their history shows a narrow scope.",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail",
              "Azure Monitor Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane (API logging), Administrator and developer workstations",
            "action": [
              "Symbolic: Search API call parameters (from cloud logs) or command line arguments (from Event ID 4688) for wildcard region specifiers or evidence of looping through all available regions. Alert immediately on detection of such patterns, as they are rarely used in legitimate manual operations.",
              "Statistical: For each user, profile the set of services (e.g., EC2, S3, RDS) and regions (e.g., us-east-1, eu-west-2) they typically interact with over a 30-day period. Alert if a user makes a discovery call for a service or in a region not present in their historical profile. This detects horizontal deviation from normal behavior.",
              "Machine Learning: Model user-service interactions as a bipartite graph. Use a link prediction algorithm to score the probability of a user interacting with a new service. An alert is triggered when a user makes a discovery call to a service that the model predicted as highly unlikely, suggesting a significant and suspicious departure from their established role and responsibilities."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]