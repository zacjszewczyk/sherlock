[
  {
    "information_requirement": "Is the adversary performing vulnerability scanning against our external-facing infrastructure?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1595.002",
        "name": "Vulnerability Scanning",
        "evidence": [
          {
            "description": "An inbound connection attempt in Zeek conn.log from a source IP address present on a threat intelligence feed list of known scanners, TOR exit nodes, or malicious IPs.",
            "data_sources": [
              "Zeek conn.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Perimeter Firewall",
            "action": [
              "Symbolic: For every inbound event in Zeek conn.log, query the source IP against a threat intelligence database. Generate an alert if the IP is on a blocklist for 'scanning', 'malicious', or 'TOR'.",
              "Statistical: For IPs matching threat intelligence categories, calculate the frequency of connections over a 24-hour period. Flag IPs that exhibit a connection frequency greater than the 95th percentile for their specific threat category, indicating unusually persistent activity.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) using features like threat intel category, connection count, port diversity, and connection state (REJ, S0, S1). Use the model to predict the probability that a connection from a CTI-flagged IP is part of a targeted reconnaissance campaign versus benign internet background noise."
            ]
          },
          {
            "description": "An inbound web request in Zeek http.log contains a User-Agent string matching a known scanning tool (e.g., 'nmap', 'sqlmap') or a URI path targeting common configuration files or vulnerabilities (e.g., '/.env', '/.git/config').",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing Web Servers",
            "action": [
              "Symbolic: In Zeek http.log, create a rule to alert on inbound requests where the user_agent field matches a regex list of scanner tools OR the uri field matches a regex list of sensitive paths and vulnerability probes.",
              "Statistical: For a given source IP, calculate the ratio of HTTP 404 responses to total requests within a 5-minute window. A ratio exceeding a dynamic threshold (e.g., > 80% and > 10 requests) suggests directory/file brute-forcing, a common scanner behavior.",
              "Machine Learning: Use a pre-trained Natural Language Processing (NLP) model to analyze URI paths and query parameters. Classify requests as 'benign', 'exploit-attempt', or 'recon-probe' based on token patterns that differ from normal user traffic."
            ]
          },
          {
            "description": "An inbound connection in Zeek conn.log to a specific service port (e.g., 22, 3389) is established (S1 state) but is immediately terminated (RSTO, RSTR) after initial protocol data exchange, as seen in service-specific logs (e.g., Zeek ssh.log), with no successful authentication.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssh.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Servers hosting services like SSH or RDP",
            "action": [
              "Symbolic: Correlate Zeek conn.log events with service-specific logs. Alert if a connection UID shows an S1 connection state in conn.log but has no corresponding successful authentication event in ssh.log or rdp.log within 30 seconds.",
              "Statistical: For each service port (22, 3389, etc.), establish a baseline ratio of successful authentications to total connection attempts. Alert when the ratio for a given source IP drops significantly below the baseline (e.g., falls into the bottom 5th percentile), indicating repeated failed or aborted attempts.",
              "Machine Learning: Develop a time-series anomaly detection model on the duration of established connections (duration field in conn.log for S1 state). A cluster of connections with anomalously short durations (e.g., < 2 seconds) from a single source IP suggests automated banner grabbing."
            ]
          },
          {
            "description": "A single external source IP in Zeek conn.log generates connection attempts to a high number of distinct destination ports on a single host within a short time frame (e.g., >50 ports in <1 minute).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Perimeter Firewall",
            "action": [
              "Symbolic: Create a rule that triggers an alert if a single source IP (id.orig_h) in Zeek conn.log is associated with more than a hard-coded threshold (e.g., 50) of unique destination ports (id.resp_p) to a single destination IP (id.resp_h) within a 1-minute window.",
              "Statistical: For each source IP in a 5-minute window, calculate the Shannon entropy of the destination ports contacted. An entropy score above a dynamically calculated threshold (e.g., > 3.0, or in the 99th percentile of all source IP port entropies) indicates a port scan.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on a feature space of (source IP, destination port, timestamp). A dense cluster of points belonging to a single source IP but spread across the destination port axis identifies a vertical port scan."
            ]
          },
          {
            "description": "A single external source IP in Zeek conn.log generates connection attempts to a single destination port (e.g., 445) across a high number of distinct destination hosts in the same subnet within a short time frame (e.g., >20 hosts in <1 minute).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Perimeter Firewall",
            "action": [
              "Symbolic: Create a rule that triggers an alert if a single source IP (id.orig_h) in Zeek conn.log is associated with more than a hard-coded threshold (e.g., 20) of unique destination IPs (id.resp_h) on a single destination port (id.resp_p) within a 1-minute window.",
              "Statistical: Aggregate Zeek conn.log data by source IP and destination port over 5-minute intervals. Calculate the count of unique destination IPs for each pair. Flag any source IP where this count exceeds the 99th percentile for that specific port, indicating a sweep.",
              "Machine Learning: Model the count of distinct hosts contacted by a source IP over time as a time series. Apply an anomaly detection algorithm (e.g., Seasonal Hybrid ESD) to identify sudden, uncharacteristic spikes in host discovery activity that constitute a network sweep."
            ]
          },
          {
            "description": "A single external source IP triggers multiple distinct scanning alerts (e.g., a port scan alert followed by a web vulnerability probe alert) against the same target host or subnet within a defined time window (e.g., 1 hour).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "SIEM Alerts"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM / Log Aggregation Platform",
            "action": [
              "Symbolic: Create a correlation rule in the SIEM that looks for a port scan alert followed by a web vulnerability probe alert from the same source IP within 60 minutes. Escalate the severity of the resulting meta-alert.",
              "Statistical: Implement a risk scoring system. Assign a base score to each alert type (e.g., Port Scan=10, Web Probe=15, CTI Hit=25). Sum the scores for a given source IP over a 1-hour sliding window. An aggregate score exceeding a high-watermark threshold (e.g., >40) generates a high-fidelity 'Multi-Stage Recon' alert.",
              "Machine Learning: Use a sequence pattern mining algorithm (e.g., GSP, PrefixSpan) on the stream of security alerts. Discover common sequences of reconnaissance activities (e.g., 'Port Scan -> Banner Grab -> Web Probe'). Classify a new sequence of alerts from an IP as part of a known malicious pattern and alert with higher confidence."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]