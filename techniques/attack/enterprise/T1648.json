[
  {
    "information_requirement": "Has the adversary abused serverless computing for arbitrary code execution? (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1648",
        "name": "Serverless Execution",
        "evidence": [
          {
            "description": "An outbound network connection is initiated from a known cloud provider serverless compute IP range to an external IP address or domain on a threat intelligence feed of known malicious indicators. The connection may also exhibit anomalously high data transfer volume (e.g., >95th percentile of typical outbound volume from serverless functions).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feed",
              "Cloud Provider IP Range Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Internet gateways, DNS resolvers, Cloud provider serverless compute environments (e.g., AWS Lambda, Azure Functions, Google Cloud Functions).",
            "action": [
              "Continuously ingest and update lists of cloud provider serverless IP ranges and a threat intelligence feed of malicious IPs/domains. Create a rule to join Zeek conn.log records where `id.orig_h` is in the serverless IP list with the threat intelligence feed on the destination IP (`id.resp_h`). Alert on any match.",
              "For all connections originating from the serverless IP range (`id.orig_h`), establish a historical baseline of outbound data volume (`orig_bytes`) over a 30-day rolling window. Calculate the 95th percentile for session volume. Alert when a new connection's `orig_bytes` exceeds this percentile, indicating potential data exfiltration.",
              "Train a Random Forest classification model on labeled Zeek conn.log records to identify malicious C2 traffic. Engineer features such as `duration`, `orig_bytes`, `resp_bytes`, `proto`, destination port, connection state (`conn_state`), and the entropy of the destination domain name (from dns.log). Apply the model to new outbound connections from serverless IPs and alert on connections classified as 'malicious' with a confidence score above 0.9."
            ]
          },
          {
            "description": "A process is created on a host (Windows Event ID 4688) by a dedicated service account used for hybrid cloud operations, and the process command line includes tools or parameters associated with reconnaissance, credential access, or execution of suspicious scripts (e.g., LOLBAS, PowerShell).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Service Account Inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Hybrid application servers, On-premise data stores, Endpoints of cloud administrators.",
            "action": [
              "Maintain a list of dedicated service accounts for hybrid cloud functions. Correlate successful logons (Event ID 4624) by these accounts with subsequent process creation events (Event ID 4688) using the `Logon ID`. Scan the `CommandLine` field with regular expressions for known malicious tools (`mimikatz`, `procdump`), reconnaissance commands (`whoami`, `nltest /dclist:*`, `net user`), or suspicious LOLBAS usage (`certutil.exe -urlcache`, `mshta.exe http://...`). Alert on any match.",
              "For each hybrid service account, build a historical frequency distribution of `NewProcessName` and parent process `CreatorProcessName` from Windows Event ID 4688 data. Calculate a rarity score for each new process execution based on its historical frequency. Alert when a process execution has a rarity score above the 98th percentile for that specific account, indicating anomalous activity.",
              "Model the sequence of command-line arguments for common processes (e.g., `powershell.exe`, `cmd.exe`) executed by hybrid service accounts using n-gram analysis. Calculate the probability of new argument sequences. Alert when an observed sequence has a probability below a dynamically learned threshold, suggesting a deviation from normal administrative scripting or behavior."
            ]
          },
          {
            "description": "A service account associated with a serverless function authenticates (Windows Event ID 4624) or connects (Zeek conn.log) to an internal host for the first time, or the number of unique internal hosts accessed by the account in a 24-hour period exceeds a learned baseline by more than 3 standard deviations.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Service Account Inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, Authentication servers (e.g., Domain Controllers, RADIUS), High-value data repositories (e.g., file servers, database servers), Crown jewel application servers.",
            "action": [
              "For each hybrid service account, maintain an explicit allow-list of internal hostnames/IPs it is authorized to access. Monitor Windows Event ID 4624 (`TargetServerName`, `IpAddress`) and Zeek conn.log (`id.resp_h`) for any authentication or connection attempt by the service account to a destination not on its specific allow-list. Alert immediately on any violation.",
              "For each hybrid service account, create a daily time series of the count of unique destination hosts (`id.resp_h` in Zeek conn.log or `TargetServerName` in Event ID 4624) accessed over the past 90 days. Calculate the mean and standard deviation for this metric. Alert if the count of unique hosts accessed in a new 24-hour period exceeds the mean by more than 3 standard deviations, indicating potential network scanning or lateral movement.",
              "Use unsupervised clustering (e.g., DBSCAN) on connection data for hybrid service accounts. Use features from Zeek conn.log such as destination port, protocol, `orig_bytes`, `resp_bytes`, and `duration`. Identify clusters representing normal application behavior (e.g., 'database queries', 'file transfers'). Alert when a new connection is flagged as a noise point (does not belong to any cluster), indicating a potential anomalous connection."
            ]
          },
          {
            "description": "A process created by a hybrid service account (Windows Event ID 4688) has an anomalous parent-child relationship that deviates from established operational norms, such as a web server process (`w3wp.exe`) spawning a command shell (`cmd.exe`) or a script interpreter (`python.exe`) spawning `powershell.exe`.",
            "data_sources": [
              "Windows Event ID 4688",
              "Service Account Inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application servers running hybrid workloads, Web servers, Database servers, Critical infrastructure hosts.",
            "action": [
              "Define and maintain a deny-list of high-risk parent-child process relationships for hybrid service accounts (e.g., Parent: `w3wp.exe`, Child: `cmd.exe`; Parent: `sqlservr.exe`, Child: `powershell.exe`; Parent: `python.exe`, Child: `rundll32.exe`). Create a rule to monitor Windows Event ID 4688 events where the `SubjectUserName` is a hybrid service account and the `CreatorProcessName` and `NewProcessName` fields match a forbidden pair. Alert on any match.",
              "For each server running hybrid workloads, build a baseline of all observed parent-child process pairs from Windows Event ID 4688 data over a 30-day period. Calculate the frequency of each pair. Alert when a new pair is observed for the first time on a server, or if a historically rare pair (e.g., observed frequency < 0.1%) occurs.",
              "Represent process execution activity as a directed graph where nodes are processes and edges are parent-child relationships, enriched with user context. Train a graph-based anomaly detection model to learn the normal graph structure. Analyze new process execution subgraphs generated by hybrid service accounts and identify anomalous structures (e.g., unusual path lengths, unexpected node degrees, cycles) that indicate a deviation from benign execution flow."
            ]
          },
          {
            "description": "A network session initiated from an internal host shows a large volume of outbound data transfer to an external destination, where the session occurs within a short time window (e.g., 15 minutes) after a successful authentication by a hybrid service account on that same host.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Data staging servers, File shares, Hosts accessed by hybrid service accounts.",
            "action": [
              "Correlate successful logons by hybrid service accounts (Windows Event ID 4624 on a specific host) with subsequent outbound network connections from that same host's IP address (Zeek conn.log `id.orig_h`) within a 15-minute window. Alert if the destination (`id.resp_h` or associated DNS query) is a known file-sharing or paste site (e.g., pastebin.com, mega.nz, anonfiles.com) or a public cloud storage bucket not owned by the organization.",
              "For each internal host, establish a baseline of outbound data volume (`orig_bytes` in Zeek conn.log) per destination IP over a 30-day period. Use a percentile-based threshold (e.g., 99th percentile) for data sent in a single session. Alert if a host, within 15 minutes of a hybrid service account logon, initiates a connection where `orig_bytes` exceeds this established threshold.",
              "Develop a time-series model (e.g., ARIMA or Prophet) for each critical server's expected outbound network traffic volume (`orig_bytes` aggregated per minute). Use hybrid service account logon events (Event ID 4624) as an external regressor in the model. Alert when the actual observed traffic volume significantly deviates from the model's prediction (i.e., the residual error is anomalous) following a logon event."
            ]
          },
          {
            "description": "A serverless function is created or updated with high-risk IAM permissions, or is assigned a trigger from an unusual source or with overly permissive scope. This includes permissions like `iam:PassRole` attached to a privileged role, wildcard permissions (`*:*`), or event triggers that monitor sensitive API calls.",
            "data_sources": [
              "Cloud provider audit logs (e.g., AWS CloudTrail, Azure Activity Logs, Google Cloud Audit Logs)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM services, Serverless function configuration portals (e.g., AWS Lambda Console), Cloud event/messaging services (e.g., AWS EventBridge, Azure Event Grid), Cloud code repositories.",
            "action": [
              "Create a rule to alert on cloud audit log events (e.g., `CreateFunction`, `UpdateFunctionConfiguration`, `CreateEventSourceMapping`) where the request parameters contain high-risk permissions (`iam:PassRole`, `iam:CreatePolicyVersion`, `sts:AssumeRole`) or wildcards in resource or action fields (`\"*\"`).",
              "Profile the set of IAM permissions and event trigger configurations for all serverless functions in the environment. Calculate a rarity score for each permission and trigger source. For each function, sum the rarity scores of its assigned permissions and triggers to create a total risk score. Alert when a new or modified function's risk score exceeds the 99th percentile for the environment.",
              "Train a classification model (e.g., Logistic Regression) to distinguish between benign and potentially malicious function configurations based on features from cloud audit logs. Features should include the identity of the creator, source IP, number and type of permissions, presence of specific risky permissions, and the type of event trigger. Flag functions classified as malicious with high confidence for review."
            ]
          },
          {
            "description": "A Power Automate flow is created or modified to include actions indicative of data exfiltration or persistence. This includes actions that automatically forward emails, create public sharing links for files, or use the 'HTTP' connector to send data to an external, non-corporate web service.",
            "data_sources": [
              "Microsoft 365 Unified Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Microsoft 365 environment, User mailboxes (Exchange Online), Document libraries (SharePoint Online, OneDrive), Power Platform admin center.",
            "action": [
              "Create a detection rule that triggers on Microsoft 365 audit log records where `Operation` is `FlowCreated` or `FlowUpdated`. The rule should check the flow's definition (in the `FlowDetails` field) for sensitive action names ('Send_an_email_V2', 'Create_sharing_link_for_a_file_or_folder', 'Response') combined with external destinations or anonymous link settings.",
              "Establish a baseline of flow creation activity per user. Alert when a user creates an anomalous number of flows in a short period (e.g., > 3 standard deviations above their own or their peers' average). Additionally, baseline the combinations of triggers and actions used across the organization and alert when a statistically rare combination is used (e.g., a 'new email arrives' trigger combined with an 'HTTP POST' action).",
              "Use unsupervised clustering (e.g., K-Means or hierarchical clustering) on vectorized representations of Power Automate flow definitions. Features can be derived from the set of actions, connectors, and trigger types used. Identify clusters of normal business process flows. Alert when a new flow is classified as an outlier or falls into a small, suspicious cluster, indicating it does not conform to established patterns."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]