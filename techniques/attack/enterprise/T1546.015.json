[
  {
    "information_requirement": "Is the adversary maintaining persistence using COM Hijacking?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546.015",
        "name": "Component Object Model Hijacking",
        "evidence": [
          {
            "description": "A registry modification event (Windows Event ID 4657) shows a change to a COM server key's default value (e.g., HKCU\\Software\\Classes\\CLSID\\{...}\\InProcServer32\\(Default)) where the new value is a path to an executable whose file hash matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Remote Desktop Servers, VDI Environments",
            "action": [
              "Symbolic: Filter Windows Event ID 4657 for modifications where the 'Object Name' contains `\\Software\\Classes\\CLSID\\` and `\\InProcServer32` or `\\LocalServer32`. Extract the file path from the 'New Value' field. Retrieve the file hash of the specified binary. Alert if the hash matches a known-bad hash from a threat intelligence feed.",
              "Statistical: For each host, establish a baseline of parent processes that modify HKCU\\Software\\Classes\\CLSID keys. Calculate the frequency of modifications per parent process (e.g., 'reg.exe', 'powershell.exe', 'msiexec.exe'). Alert when the frequency for a specific parent process on a host exceeds the 95th percentile of its historical activity or the global baseline for that process.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features extracted from COM registry modifications. Features should include: file path entropy of the new value, presence of keywords like 'temp' or 'appdata' in the path, parent process name, and whether the modification occurs outside of typical business hours. Use the model to score each modification event for maliciousness and alert on high-probability events."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) shows a change to a COM server key's default value where the new value is a command line that invokes a script interpreter (e.g., powershell.exe, mshta.exe, wscript.exe) with arguments.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Remote Desktop Servers",
            "action": [
              "Symbolic: Using regular expressions, search the 'New Value' field in Windows Event ID 4657 events (filtered for COM CLSID paths) for patterns matching script interpreters followed by arguments (e.g., `/(powershell|wscript|cscript|mshta|rundll32)\\.exe/i`). Alert on any match.",
              "Statistical: Calculate the character entropy of the 'New Value' field for all COM server key modifications. Establish a baseline entropy score for legitimate modifications, which are typically simple file paths. Alert on modifications where the entropy score is a statistical outlier (e.g., exceeds the 99th percentile), as this often indicates obfuscated script content passed as an argument.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA, LSTM) to monitor the rate of COM modifications involving script interpreters per host. An anomalous spike in such modifications, even if the scripts themselves are not immediately flagged as malicious, can indicate a broader campaign or automated persistence deployment. Alert on statistically significant spikes in this specific activity."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) shows a change to a HKCU\\Software\\Classes\\CLSID key where the new value is a file path pointing to a user-writable or temporary location (e.g., %APPDATA%, %TEMP%, C:\\Users\\Public\\).",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Multi-user servers (e.g., Citrix, RDS)",
            "action": [
              "Symbolic: Filter Windows Event ID 4657 for HKCU COM key modifications. Use a watchlist or regular expression to check if the file path in the 'New Value' field points to a suspicious directory (e.g., `\\AppData\\`, `\\Temp\\`, `\\Downloads\\`, `\\Public\\`, `C:\\ProgramData\\`). Alert on any match.",
              "Statistical: Create a baseline of all directory paths seen in legitimate COM server key values across the enterprise. Calculate the rarity of each directory path. Alert when a COM key is modified to point to a path that falls below a rarity threshold (e.g., seen on fewer than 0.1% of endpoints or is entirely new).",
              "Machine Learning: Develop a clustering model (e.g., DBSCAN) on COM modification events, using features like the directory path, parent process, and file extension. Legitimate software installations will form dense clusters. Unsupervised clustering can identify sparse, outlier events that do not fit known good patterns, indicating potentially malicious, one-off persistence attempts."
            ]
          },
          {
            "description": "Following a COM key modification event, a legitimate parent process (e.g., explorer.exe, svchost.exe) associated with that COM object spawns a suspicious child process (e.g., cmd.exe, powershell.exe) or initiates a network connection to a destination with a low reputation score or that is statistically rare for that host.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Network Egress Points",
            "action": [
              "Symbolic: Correlate Windows Event ID 4657 (COM modification) with subsequent Windows Event ID 4688 (process creation) on the same host. Alert if a process like 'explorer.exe' or 'svchost.exe' spawns a command-line interpreter (`cmd.exe`, `powershell.exe`) within a short time window (e.g., 5 minutes) of the registry change.",
              "Statistical: For each host, baseline the domains and IP addresses contacted by common system processes (explorer.exe, svchost.exe, etc.) using Zeek conn.log. After a COM modification alert, monitor the network traffic from the associated process. Alert if the process connects to an IP address or domain that is in the bottom 5th percentile of prevalence (i.e., very rare) for that process across the enterprise.",
              "Machine Learning: Use a graph-based analysis model to link events: a registry modification, the parent process that triggered it, any child processes it spawns, and any network connections they make. Train a model to recognize 'normal' subgraphs of activity. A subgraph containing a rare HKCU registry write, followed by `explorer.exe` spawning `powershell.exe`, which then connects to a new external IP, would be flagged as a high-risk anomalous sequence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using COM Hijacking?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546.015",
        "name": "Component Object Model Hijacking",
        "evidence": [
          {
            "description": "A registry modification event (Windows Event ID 4657) shows a change to a COM server key's default value under HKLM\\SOFTWARE\\Classes\\CLSID\\ where the new value is a path to a binary whose file hash is present on a threat intelligence blacklist.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0 Servers, Administrator Workstations",
            "action": [
              "Symbolic: Filter Windows Event ID 4657 for modifications where the 'Object Name' contains `HKLM\\SOFTWARE\\Classes\\CLSID\\`. Extract the file path from the 'New value' and retrieve the file's hash. Alert if the hash matches a known malicious hash from a threat intelligence feed.",
              "Statistical: Baseline the count of `HKLM\\SOFTWARE\\Classes\\CLSID\\` modifications per host, per day. These should be extremely rare outside of software installation or patching windows. Alert if the daily count for any host exceeds a low threshold (e.g., > 2) or deviates by more than 3 standard deviations from its own historical baseline.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on features of legitimate HKLM COM modifications, which typically occur during software installations. Features could include the parent process name (e.g., `msiexec.exe`, `TrustedInstaller.exe`), the presence of a valid digital signature on the new binary, and the time of day. Any modification that falls outside the learned 'normal' boundary is flagged as a potential privilege escalation attempt."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) shows a change to a specific, high-risk CLSID under HKLM\\SOFTWARE\\Classes\\CLSID\\ that is known to be a target for public privilege escalation exploits or is loaded by a SYSTEM-level process.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Servers and Workstations",
            "action": [
              "Symbolic: Create and maintain a watchlist of specific, high-risk CLSIDs under `HKLM\\SOFTWARE\\Classes\\CLSID\\` known to be associated with privilege escalation techniques (e.g., from public exploit PoCs). Configure a high-severity alert to trigger immediately upon any modification (Windows Event ID 4657) to the `InProcServer32` or `LocalServer32` subkeys for any CLSID on this watchlist.",
              "Statistical: Analyze the 'Process Name' field for all HKLM COM modification events (Windows Event ID 4657). Establish a baseline of typical processes that perform these writes (e.g., `msiexec.exe`, `svchost.exe`, `setup.exe`). Alert if an HKLM COM key is modified by a process that is statistically rare for this action (e.g., `cmd.exe`, `powershell.exe`, or a user-land application).",
              "Machine Learning: Use a community detection algorithm on a graph of processes and registry keys. Legitimate installers will form a community of related processes writing to multiple related keys. A single, isolated write to a high-risk HKLM COM key by a non-installer process will not belong to a known 'good' community and can be flagged as a targeted, anomalous privilege escalation attempt."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) to an HKLM\\SOFTWARE\\Classes\\CLSID\\ key is performed by a process whose integrity level is identified as 'Medium' or 'Low', indicating a successful privilege bypass.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Servers and Workstations",
            "action": [
              "Symbolic: For every Windows Event ID 4657 showing a modification to `HKLM\\SOFTWARE\\Classes\\CLSID\\`, use the 'Process ID' to find the corresponding process creation event (Windows Event ID 4688). Check the 'Token Elevation Type' and 'Mandatory Label' fields. Alert if a process with an integrity level other than 'High' or 'System' (e.g., `S-1-16-8192` for Medium) successfully modifies an HKLM key.",
              "Statistical: Track the integrity levels of all processes that write to any HKLM registry key. The overwhelming majority should be 'High' or 'System'. Any occurrence of a 'Medium' or 'Low' integrity write to `HKLM\\SOFTWARE\\Classes\\CLSID\\` is a significant statistical anomaly and should trigger a high-priority alert, as it directly indicates a permissions bypass.",
              "Machine Learning: This scenario is a prime candidate for a rule-based expert system. However, an ML model can triage the severity. Train a model on post-exploit behavior, so that when a low-integrity HKLM write is detected, the model can automatically analyze subsequent child processes and network connections to classify the event as 'Privilege Escalation - Confirmed C2' vs. 'Privilege Escalation - Local Reconnaissance', aiding in prioritization."
            ]
          },
          {
            "description": "Following a modification to an HKLM COM key, a high-privilege process (e.g., a service running as SYSTEM) is observed loading a DLL from a user-writable directory or initiating network connections to a destination that is statistically rare for that process or the host.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Tier 0 Servers, Domain Controllers, Network Egress Points",
            "action": [
              "Symbolic: Correlate an alert for an HKLM COM key modification (Windows Event ID 4657) with subsequent process execution (Windows Event ID 4688) and network connection (Zeek conn.log) events on the same host. Alert if a high-privilege process (e.g., `services.exe`) spawns a child or initiates a network connection to an external IP within a 10-minute window of the registry modification.",
              "Statistical: Maintain a baseline of all DLLs loaded by critical, high-privilege system processes. After an HKLM COM modification, monitor module loads by these processes. Alert if a DLL is loaded from a statistically anomalous path (e.g., a user profile directory) or if the loaded DLL's prevalence across the enterprise is below a rarity threshold (e.g., present on < 5 systems).",
              "Machine Learning: Use time-series analysis on the network beaconing behavior of high-privilege processes. A successful COM hijack for privilege escalation will often be followed by the establishment of a new, persistent C2 channel. An anomaly detection model can identify the emergence of a new, periodic connection (e.g., every 60 seconds) from a SYSTEM-level process, which is a strong indicator of a successful compromise following the hijack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]