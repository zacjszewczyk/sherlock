[
  {
    "information_requirement": "Has the adversary attempted to gain credentials using an Evil Twin attack?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1557.004",
        "name": "Evil Twin",
        "evidence": [
          {
            "description": "A corporate device connects to a Wi-Fi network where the BSSID, SSID, or the SSL certificate thumbprint of an associated captive portal is present on a threat intelligence blocklist.",
            "data_sources": [
              "Zeek wifi.log",
              "Zeek ssl.log",
              "Windows Event ID 8001"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate endpoints (laptops), network egress points, wireless infrastructure controllers.",
            "action": [
              "Symbolic: Maintain and query a threat intelligence feed of known malicious BSSIDs, SSIDs, and SSL certificate thumbprints. Create a rule to alert when a BSSID from Windows Event ID 8001 or Zeek wifi.log or a certificate thumbprint from Zeek ssl.log matches an entry on this list.",
              "Statistical: For each corporate SSID, calculate the frequency of observed BSSIDs. Alert on connections to BSSIDs that fall below a low frequency threshold (e.g., seen less than 5 times in 30 days), as these may represent transient, malicious APs.",
              "Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on labeled data of legitimate and malicious connections. Use features such as BSSID vendor, channel, signal strength, connection duration, and whether a captive portal was observed. Deploy the model to score new connections in real-time."
            ]
          },
          {
            "description": "A device, after connecting to a new Wi-Fi network, interacts with a captive portal whose HTTP headers, URI path, or HTML content contains signatures associated with known Evil Twin toolkits (e.g., WiFi Pineapple, Evilginx).",
            "data_sources": [
              "Zeek http.log",
              "Zeek wifi.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at egress points, endpoint EDR agents with network visibility.",
            "action": [
              "Symbolic: Create and maintain a library of regular expressions that match known Evil Twin framework artifacts (e.g., 'Server: WiFi-Pineapple', specific JavaScript file names, hidden form fields in HTML). Scan Zeek http.log headers and Zeek files.log (for HTML/JS content) for matches.",
              "Statistical: For captive portal pages, calculate the entropy of URI paths and query parameters. A high entropy score, compared to a baseline of legitimate captive portals, can indicate the use of session identifiers or other artifacts from automated attack tools.",
              "Machine Learning: Use an NLP topic modeling technique (e.g., Latent Dirichlet Allocation) on the text content of captive portal login pages. Cluster pages into topics and flag outliers or those belonging to a 'suspicious credentials' topic as potential Evil Twin portals."
            ]
          },
          {
            "description": "A corporate device is observed connecting to a BSSID that is broadcasting a legitimate corporate SSID but the BSSID itself is not on an established whitelist of approved access points for that physical location.",
            "data_sources": [
              "Zeek wifi.log",
              "Windows Event ID 8001"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Wireless infrastructure controllers, endpoint devices (for location context), Active Directory for device/user identity.",
            "action": [
              "Symbolic: Maintain an authoritative inventory mapping legitimate corporate SSIDs to their authorized BSSIDs and physical locations. Create a rule to alert when a device connects to a BSSID broadcasting a corporate SSID but the BSSID is not in the inventory for that location.",
              "Statistical: For each physical office location, establish a baseline of all observed BSSID-SSID pairs. Monitor for new, un-baselined pairs. Alert if the count of devices connecting to a new BSSID for a corporate SSID exceeds a low threshold (e.g., > 1 device).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on connection data, with features like BSSID, SSID, physical location (if available), and client MAC address. A small cluster of devices connecting to a previously unseen BSSID that spoofs a corporate SSID would be flagged as an anomalous cluster."
            ]
          },
          {
            "description": "Following a connection to a non-corporate or un-baselined Wi-Fi network, a device receives DNS responses mapping internal or high-value external domains to private IP addresses, or a high rate of ARP updates for the default gateway is observed.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek wifi.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network DNS resolvers, network traffic sensors, endpoint devices.",
            "action": [
              "Symbolic: Create a rule that triggers if, within 5 minutes of connecting to a new BSSID, a device receives a DNS response for a known external corporate domain (e.g., 'login.mycorp.com') that resolves to a non-routable (RFC1918) IP address.",
              "Statistical: For each device, baseline the set of IP addresses it receives from DNS for its top 50 most frequently accessed domains. After connecting to a new network, monitor for DNS responses that provide an IP address not in the established baseline for a given domain. Alert if the number of 'deviant' DNS responses exceeds a threshold (e.g., > 3 in 10 minutes).",
              "Machine Learning: Implement a time-series anomaly detection model on the rate of DNS responses resolving to private IPs for a given host. A sudden spike in these events after a new Wi-Fi connection is a strong indicator of DNS-based redirection by an Evil Twin."
            ]
          },
          {
            "description": "Following a new Wi-Fi connection, a device attempts to authenticate to a captive portal that is either served over unencrypted HTTP, or uses an SSL certificate with a validation status of 'self-signed', 'expired', or 'host mismatch'.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek wifi.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, endpoint browsers (via EDR), wireless network sensors.",
            "action": [
              "Symbolic: Create a rule to alert when a connection event in ssl.log has a 'validation_status' of 'self-signed_certificate' or 'wrong_host_in_cert' and the destination URI, seen in http.log, contains keywords like 'login' or 'portal'. Correlate this with a recent connection to a non-corporate SSID in wifi.log.",
              "Statistical: Track the ratio of HTTP to HTTPS login pages encountered by corporate devices. Alert if this ratio for a specific device, or fleet-wide, suddenly increases beyond a statistical threshold (e.g., > 2 standard deviations above the mean), indicating a potential downgrade attack or unencrypted portal.",
              "Machine Learning: Train a decision tree classifier to predict malicious captive portals. Features would include: is_http (boolean), ssl_validation_status (categorical), uri_contains_keyword (boolean), and is_new_bssid (boolean). A prediction of 'malicious' would trigger an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary collected data using an Evil Twin attack?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1557.004",
        "name": "Evil Twin",
        "evidence": [
          {
            "description": "A device, connected to a Wi-Fi network flagged as suspicious (e.g., non-corporate, un-baselined BSSID), initiates outbound connections to destinations (IPs, domains) matching a C2 or data exfiltration threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek wifi.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, threat intelligence platforms.",
            "action": [
              "Symbolic: After a device connects to a suspicious BSSID, inner join the destination IPs from its conn.log events and resolved domains from its dns.log events against a high-confidence C2/exfil threat intelligence list. Alert on any match.",
              "Statistical: For devices on suspicious networks, track the rarity of JA3 hashes across the enterprise; an extremely rare hash (e.g., seen only once) from a device on a suspicious network is a high-fidelity indicator of custom C2 malware.",
              "Machine Learning: Use a graph-based anomaly detection model where nodes are devices and destinations. If a device, after joining a suspicious network, connects to a destination node that is an outlier with no other connections from the enterprise, flag it as a potential C2 channel."
            ]
          },
          {
            "description": "Anomalous DNS query structure (e.g., high entropy subdomains) or HTTP POST requests with large body sizes and non-standard User-Agents are observed from a device connected to a suspicious Wi-Fi network.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS servers, network traffic sensors at egress.",
            "action": [
              "Symbolic: For devices on suspicious networks, scan http.log for POST requests to URIs matching known data exfiltration patterns or User-Agent strings associated with tools like Cobalt Strike. Scan dns.log for queries to domains known to be used for DNS tunneling.",
              "Statistical: For each host, calculate the Shannon entropy of the subdomain portion of its DNS queries. A sustained high entropy score (e.g., > 3.5) for a device on a suspicious network indicates probable DNS tunneling. Also, monitor the size of HTTP POST requests; flag any request where the size is > 99th percentile of the user's historical baseline.",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA or LSTM) on normal DNS query length and frequency per host. If, after connecting to a suspicious network, the observed query length or frequency significantly deviates from the forecasted values, flag it as anomalous exfiltration activity."
            ]
          },
          {
            "description": "Following a connection to a suspicious Wi-Fi network, a device initiates an outbound data transfer where the total volume (in bytes) or the file types transferred significantly deviate from its established historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek wifi.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, file servers (for context on what is normal).",
            "action": [
              "Symbolic: For a device on a suspicious network, create a rule to alert if files.log shows an outbound transfer of files with sensitive extensions (e.g., '.pst', '.kdbx', '.zip', '.rar') to a non-corporate IP address.",
              "Statistical: For each user/device, create a daily baseline of outbound data volume ('orig_bytes' in conn.log). After connecting to a suspicious network, if the outbound data volume in a 1-hour window exceeds 3 standard deviations from the user's daily average, generate an alert.",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) to model normal data transfer behavior for each device, using features like total_bytes, protocol, destination_port, and hour_of_day. Any transfer that falls outside the learned boundary after connecting to a suspicious network is flagged as an anomaly."
            ]
          },
          {
            "description": "TLS connections from a device on a suspicious Wi-Fi network exhibit unexpected properties, such as server certificates issued by a non-Public CA, weak cipher suites, or protocol version downgrades, indicating a potential MitM proxy.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors, endpoint EDR agents with network visibility.",
            "action": [
              "Symbolic: Create a rule to alert if an entry in ssl.log from a device on a suspicious network shows a 'version' of 'TLSv1.0' or 'SSLv3' when connecting to a major service (e.g., Google, Microsoft 365) that is known to support TLS 1.2+.",
              "Statistical: Maintain a baseline of common 'cipher' and 'version' values in ssl.log for connections to your top 100 most visited domains. Alert if a new connection from a device on a suspicious network uses a cipher or version that is statistically rare (<1% of all connections) for that destination domain.",
              "Machine Learning: Use a clustering algorithm to group TLS sessions based on features like cipher suite, TLS version, certificate issuer, and JA3 hash. If a session from a device on a suspicious network falls into a small, isolated cluster, it indicates a deviation from normal TLS parameters and could be a MitM proxy."
            ]
          },
          {
            "description": "After connecting to a suspicious Wi-Fi network, a device initiates a high number of connection attempts to distinct IP addresses or ports within its new local subnet, indicative of network scanning.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors monitoring the suspicious subnet, endpoint EDR.",
            "action": [
              "Symbolic: Monitor notice.log for Zeek's built-in 'Scan::Address_Scan' or 'Scan::Port_Scan' notices originating from a device that recently joined a suspicious Wi-Fi network.",
              "Statistical: In a 1-minute sliding window, count the number of distinct destination IPs within the same /24 subnet a device attempts to connect to. If this count exceeds a high percentile threshold (e.g., 99th percentile of all devices' local connection rates), flag the device as scanning.",
              "Machine Learning: Model a device's 'fan-out' behavior (number of unique IPs contacted over time) using a time-series model. A sudden, sharp increase in fan-out after joining a new network, which deviates significantly from the model's prediction, indicates scanning activity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]