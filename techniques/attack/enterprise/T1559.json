[
  {
    "information_requirement": "Is the adversary executing code using inter-process communication mechanisms?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1559",
        "name": "Inter-Process Communication",
        "evidence": [
          {
            "description": "A process creates a named pipe (Sysmon Event ID 17) or connects to a named pipe (Sysmon Event ID 18) where the pipe name is found on a threat intelligence list, has high entropy, or is created/accessed by an unusual process.",
            "data_sources": [
              "Windows Sysmon Event ID 17",
              "Windows Sysmon Event ID 18"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Create a detection rule to query for named pipe events (Sysmon Event ID 17, 18) and match the 'PipeName' field against a curated threat intelligence list of known malicious pipe names (e.g., \\\\.\\pipe\\msagent_..., \\\\.\\pipe\\postex_...). Generate an alert on any match.",
              "For all named pipe creation events (Sysmon Event ID 17), calculate the Shannon entropy of the pipe name. Establish a baseline of entropy scores for legitimate pipe names across the environment. Flag pipe names with entropy scores exceeding the 95th percentile of the baseline, especially when created by non-system processes (e.g., not svchost.exe, lsass.exe).",
              "Train a classification model (e.g., Random Forest) using features from named pipe events, including the creating process name, parent process name, pipe name entropy, and user context. Use labeled historical data of legitimate and known malicious pipe activity to train the model to classify new, unseen events as benign or suspicious."
            ]
          },
          {
            "description": "A command interpreter (e.g., cmd.exe, powershell.exe) is spawned by a parent process that does not typically create shells, such as a Microsoft Office application or PDF reader, often as a result of Dynamic Data Exchange (DDE) abuse.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Remote Desktop Servers",
            "action": [
              "Implement a rule to alert whenever a process creation event (Windows Event ID 4688 or Sysmon Event ID 1) shows a 'ParentProcessName' from the set [WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE, AcroRd32.exe] and a 'NewProcessName' from the set [cmd.exe, powershell.exe, wscript.exe, cscript.exe, mshta.exe].",
              "Analyze all process creation events over a 30-day period to build a frequency table of parent-child process relationships. Calculate the rarity of each observed pair. Generate an alert for any parent-child pair that falls into the bottom 1st percentile of frequency, indicating a statistically rare and potentially suspicious execution chain.",
              "Use a time-series anomaly detection model (e.g., Seasonal-Trend decomposition using LOESS) to monitor the daily count of shell processes (powershell.exe, cmd.exe) spawned by each parent process. A sudden spike in shell creations from a parent like EXCEL.EXE, which normally has a baseline of zero, would be flagged by the model as a significant anomaly."
            ]
          },
          {
            "description": "A single source host initiates an anomalously high number of DCOM/RPC connections (TCP port 135) to unique internal destinations, or specific RPC methods related to remote execution are called by an unusual client process.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dce_rpc.log",
              "Windows Security Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "East-West traffic between workstations, Server-to-workstation traffic lanes, Network egress points monitoring port 135",
            "action": [
              "Create a rule to detect when a single source IP (id.orig_h in Zeek conn.log) makes connections to destination port 135 on more than 20 unique destination IPs (id.resp_h) within a 10-minute window. Exclude known vulnerability scanners or management systems from this rule.",
              "For each source host, profile the number of unique destination hosts it communicates with via RPC (destination port 135) per hour. Establish a baseline distribution for this count for each host or host role. Alert when a host's RPC fan-out exceeds 3 standard deviations above its mean or the 99th percentile for its role.",
              "Apply a time-series forecasting model (e.g., ARIMA) to the volume of RPC traffic (bytes or connection counts) between defined network zones (e.g., workstation-to-workstation, workstation-to-server). An alert is generated if the observed traffic volume significantly deviates from the forecasted volume and its confidence interval, indicating potential widespread lateral movement using DCOM/RPC."
            ]
          },
          {
            "description": "A process instantiates a COM object using a CLSID associated with known malicious activity, or a process instantiates a COM object typically used for execution (e.g., ShellBrowserWindow) where the parent process is anomalous.",
            "data_sources": [
              "Windows Sysmon Event ID 1",
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 10",
              "Windows Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Windows Registry hives (HKCR\\CLSID)",
            "action": [
              "Search command line arguments (Sysmon Event ID 1, Windows Event ID 4688) for patterns like 'rundll32.exe ...' or 'New-Object -ComObject' in PowerShell scripts. Match the referenced CLSID or DLL against a threat intelligence list of known malicious/abusable COM objects and alert on a match.",
              "Establish a baseline of parent processes that legitimately instantiate execution-related COM objects (e.g., explorer.exe creating ShellBrowserWindow). Profile the frequency of these instantiations. Alert when a statistically rare parent process (e.g., services.exe) instantiates one of these objects, or when the frequency from a common parent exceeds its 99th percentile.",
              "Train a classification model (e.g., Gradient Boosting) to identify malicious COM usage. Features can include the parent process name, the target CLSID (if available), user context, command-line arguments, and whether the process is interactive. The model is trained on labeled data to classify COM instantiation events as benign or malicious."
            ]
          },
          {
            "description": "A long-lived, low-volume TCP connection is observed between two internal hosts on a non-standard port, where the ratio of connection duration to data transferred is a statistical outlier, indicating a potential custom socket-based C2 channel.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments (workstation-to-workstation, server-to-server), DMZ-to-internal traffic, VPN user subnets",
            "action": [
              "Execute a query for all successful internal TCP connections (Zeek conn.log where id.orig_h and id.resp_h are internal) on ports not on an allow-list of known application ports. Alert on any connection with a 'duration' greater than 24 hours and total bytes ('orig_bytes' + 'resp_bytes') less than 1MB.",
              "For all internal TCP connections, calculate a 'data-to-duration' ratio ((orig_bytes + resp_bytes) / duration). Analyze the distribution of this ratio and flag connections in the lowest 1st percentile (very little data over a long duration). Enrich this by also calculating the periodicity of packets using connection timestamps to identify C2-like beaconing.",
              "Use a clustering algorithm (e.g., DBSCAN) on connection data with features such as duration, orig_bytes, resp_bytes, id.resp_p, and the data-to-duration ratio. This method will automatically group normal traffic clusters. Connections that do not belong to any cluster (identified as noise points) are flagged as anomalous and may represent custom IPC or C2 channels."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]