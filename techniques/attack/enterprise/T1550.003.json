[
  {
    "information_requirement": "Has an adversary forged or misused a Kerberos ticket to evade standard authentication controls?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1550.003",
        "name": "Pass the Ticket",
        "evidence": [
          {
            "description": "A Kerberos Ticket-Granting-Ticket (TGT) or Service Ticket (ST) is requested or granted using a deprecated encryption algorithm, such as RC4_HMAC (0x17), which is a common default for adversary tools.",
            "data_sources": [
              "Windows Event ID 4768",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: Alert when Windows Event ID 4768 or 4769 shows a 'Ticket Encryption Type' of '0x17' (RC4_HMAC) for any account belonging to a privileged group (e.g., Domain Admins, Enterprise Admins).",
              "Statistical: For each user, calculate the historical distribution of encryption types used. Flag any user who requests a ticket with an encryption type they have never used before or one that is statistically rare for their user group.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from Kerberos ticket requests (Account Name, Service Name, Client Address, Encryption Type) to predict legitimacy. Flag requests classified as suspicious, particularly those where RC4 encryption is a key contributing feature."
            ]
          },
          {
            "description": "A Kerberos ticket is observed with a lifetime ('till' or 'renew_until' timestamp) that significantly exceeds the domain's configured policy, a hallmark of a forged Golden Ticket.",
            "data_sources": [
              "Zeek kerberos.log",
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points, Core network switches, Domain Controllers",
            "action": [
              "Symbolic: Query the domain's Kerberos policy for the maximum ticket lifetime (e.g., 10 hours). Create a rule to alert on any ticket observed in Zeek kerberos.log where the duration (till - from) exceeds this policy limit by more than a small grace period (e.g., 1 minute).",
              "Statistical: Calculate the 99th percentile for all ticket lifetimes observed over a 30-day rolling window. Alert on any new ticket whose lifetime exceeds this percentile, indicating a statistical outlier.",
              "Machine Learning: Use an anomaly detection algorithm (e.g., Isolation Forest) on ticket features from Zeek kerberos.log including lifetime, client, service, and encryption type. Tickets that are flagged as strong anomalies, especially due to an unusually long lifetime, are candidates for forged tickets."
            ]
          },
          {
            "description": "A Kerberos ticket request originates from a client IP address or hostname that is anomalous for the requesting user account, particularly when the account is privileged or a service account.",
            "data_sources": [
              "Windows Event ID 4768",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, VPN concentrators, Workstation and Server subnets",
            "action": [
              "Symbolic: For a pre-defined list of highly privileged accounts, maintain a static list of approved source hosts or subnets. Alert if a ticket request for one of these accounts originates from a source not on its approved list.",
              "Statistical: For each user, create a baseline of source IP subnets/regions and hostnames they typically request tickets from. Calculate the frequency of requests from each source. Alert when a request comes from a source with zero or near-zero historical frequency for that user.",
              "Machine Learning: Develop a user-specific time series model that forecasts the probability of a ticket request from a given IP address at a given time. A request from an IP with a very low forecasted probability indicates an anomaly. This can also be modeled as a community detection problem on a user-host graph."
            ]
          },
          {
            "description": "A single client IP address requests a high volume of unique service tickets in a short time window, which is indicative of an adversary using a stolen TGT to perform service enumeration.",
            "data_sources": [
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: Create a rule that triggers if a single source IP requests more than 20 unique Service Tickets (from Event ID 4769 'Service Name' or Zeek kerberos.log 'service' field) within a 5 minute window.",
              "Statistical: For each source IP, calculate the rolling 5-minute average and standard deviation of unique service tickets requested. Alert when the count for a new 5-minute window exceeds 3 standard deviations above the mean for that specific IP.",
              "Machine Learning: Model the sequence of service ticket requests from a client as a session. Use clustering (e.g., K-Means) on session features like number of unique services, time duration, and entropy of service names. Sessions falling into a 'high-velocity, high-entropy' cluster are likely reconnaissance."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has an adversary successfully used a passed Kerberos ticket to authenticate to a remote system and execute code?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1550.003",
        "name": "Pass the Ticket",
        "evidence": [
          {
            "description": "A Kerberos service ticket request is made for a Service Principal Name (SPN) that does not exist in the Active Directory environment, indicating a potential Kerberoasting attempt or misconfigured tool.",
            "data_sources": [
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: Maintain a current, cached list of all valid SPNs from Active Directory. Alert whenever a Windows Event ID 4769 is generated with a 'Service Name' that is not present in this allowlist and the status code indicates the SPN is unknown ('0x7' KDC_ERR_S_PRINCIPAL_UNKNOWN).",
              "Statistical: Calculate the request frequency for all SPNs. A sudden spike in requests for a historically low-frequency SPN is anomalous. Also, calculate the Levenshtein distance between a failed SPN request and the nearest valid SPN; a small distance might indicate typos, while a large distance could suggest scanning.",
              "Machine Learning: Use Natural Language Processing (NLP) techniques to analyze the structure of requested SPNs. Train a model to distinguish between legitimate SPN formats (e.g., 'HOST/server.domain.com') and malformed or randomized strings. Classify requests for malformed SPNs as malicious."
            ]
          },
          {
            "description": "A successful Kerberos network logon (Logon Type 3) is associated with ticket properties that are inconsistent with established baselines, or occurs on a target system where the authenticating account is anomalous.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers, Domain Controllers, Endpoint workstations",
            "action": [
              "Symbolic: Correlate a successful Kerberos logon (Windows Event ID 4624, Logon Type 3) with network data (Zeek kerberos.log) using the client IP and timestamp. Alert if the logon's associated ticket used RC4 encryption ('encryption_type' of 'rc4-hmac').",
              "Statistical: Build a statistical profile for each server, including typical authenticating users, source IPs, and time of day. Alert if a new logon (Event ID 4624) deviates significantly from this profile (e.g., a user from the 1st percentile of authenticating users for that server).",
              "Machine Learning: Use a graph-based anomaly detection model where nodes are users and hosts, and edges represent successful Kerberos logons. A new edge connecting two nodes (user, host) that are not typically connected would be flagged as a high-risk lateral movement event."
            ]
          },
          {
            "description": "A user account performs a successful Kerberos network logon to a new host for the first time, especially if the movement is between peer workstations rather than from a workstation to a server.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, Member Servers",
            "action": [
              "Symbolic: Alert when a Windows Event ID 4624 (Logon Type 3, Kerberos) occurs where the 'Account Name' is a standard user (not an admin/service account) and both the 'Source Network Address' and the logging computer are classified as workstations.",
              "Statistical: Maintain a baseline of all (user, destination host) logon pairs seen in the last 90 days. Alert whenever a new pair is observed (a 'first-time' access event). Assign a risk score based on the roles of the user and the host.",
              "Machine Learning: Model user-to-host logon behavior using a clustering algorithm. Group users by their typical access patterns (e.g., 'Server Admins', 'Standard Workstation Users'). If a user's logon behavior suddenly shifts to match a different cluster, flag it as anomalous lateral movement."
            ]
          },
          {
            "description": "Following a successful remote Kerberos authentication, the new logon session immediately spawns processes associated with credential dumping, reconnaissance, or execution of remote administration tools.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, High-value servers",
            "action": [
              "Symbolic: Trigger an alert when a Windows Event ID 4624 (Logon Type 3, Kerberos) is followed within 2 minutes by a process creation (Event ID 4688) on the same machine and for the same user, where the new process name is a known suspicious tool (e.g., mimikatz.exe, psexec.exe, procdump.exe).",
              "Statistical: For each remote logon session, calculate the entropy of the command line arguments for child processes (Event ID 4688). A sudden spike in command line entropy is often associated with obfuscated PowerShell. Flag sessions where the argument entropy exceeds the 95th percentile for that user or host.",
              "Machine Learning: Train a sequence-based model (e.g., an LSTM) on sequences of events (Logon -> Process Create -> Network Connection). The model learns normal user session behavior. Flag new sessions that the model identifies as having a low probability of occurring, indicating a deviation from normal activity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]