[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying Security Support Providers?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.005",
        "name": "Security Support Provider",
        "evidence": [
          {
            "description": "A modification to the 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages' or 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages' registry keys adds a DLL name that is not on an established enterprise-wide allowlist of legitimate SSPs.",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry hives on all Windows endpoints, especially Domain Controllers and privileged access workstations.",
            "action": [
              "Query for Windows Event ID 4657 or Sysmon Event ID 13 where the 'TargetObject' or registry path contains 'Lsa\\Security Packages'. Extract the list of DLLs from the 'New Value' or 'Details' field. Alert if any DLL in the new list is not present on a curated allowlist of legitimate SSPs for your environment or matches a known malicious SSP DLL from a threat intelligence feed (e.g., 'mimilib.dll').",
              "For each registry modification event affecting the SSP keys, extract the newly added DLL name. Maintain a baseline frequency table of all DLLs added to these keys across the enterprise over a 90-day period. Flag any DLL whose name falls below the 1st percentile of prevalence (i.e., is extremely rare) for manual review, as legitimate SSPs are typically uniform across the environment.",
              "Train a classification model (e.g., Random Forest) on features from registry modification events. Features should include: process name making the change (e.g., 'reg.exe', 'powershell.exe'), parent process, user context, time of day, and string characteristics (length, entropy) of the new DLL name. Apply the model to score each SSP registry modification event; scores above a predefined threshold indicate a likely malicious event."
            ]
          },
          {
            "description": "The lsass.exe process loads a DLL that is either unsigned, signed by an untrusted or rare publisher, or is not present on a baseline of DLLs typically loaded by lsass.exe on similar systems.",
            "data_sources": [
              "Sysmon Event ID 7",
              "Windows Event ID 4657",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution and module load logs on all Windows endpoints and servers.",
            "action": [
              "Query Sysmon Event ID 7 logs for events where the 'ProcessName' is 'lsass.exe'. Extract the 'ImageLoaded' and 'Signature' fields. Alert if the 'ImageLoaded' DLL is not on a pre-defined allowlist of known-good system DLLs and SSPs, or if the 'SignatureStatus' is 'Unsigned' or 'Invalid'. On Windows 8.1/2012R2+, also monitor for specific events generated by 'AuditLevel = 8' for LSASS.exe.",
              "Using Sysmon Event ID 7 data, generate a baseline frequency distribution of all (ImageLoaded, Signature) tuples for the 'lsass.exe' process across the enterprise. For each new DLL load event, calculate the prevalence of its tuple. Flag events where the tuple's frequency is in the bottom 5th percentile, especially if correlated with a recent reboot (Windows Event ID 6005) on the same host.",
              "Train a sequence-aware model (e.g., LSTM) on the temporal order of DLLs loaded by 'lsass.exe' during normal system startups, using Sysmon Event ID 7 data. Apply the model to new boot sequences. An alert is generated when the model detects a significant deviation from the learned normal sequence, such as an out-of-order or unexpected DLL being loaded."
            ]
          },
          {
            "description": "The lsass.exe process initiates an outbound network connection to a destination IP/domain that is rare for the host or enterprise, particularly after a system reboot or suspicious registry modification.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon Event ID 3",
              "Windows Event ID 4657",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic logs from egress points and host-based network connection logs from all Windows systems.",
            "action": [
              "Create a rule that alerts if 'lsass.exe' initiates a network connection (Sysmon Event ID 3) to a destination IP or domain present on a threat intelligence feed of known command-and-control servers. Correlate this with a recent SSP registry modification (Windows Event ID 4657) on the same host within the last 24 hours to increase alert priority.",
              "Using Sysmon Event ID 3 and Zeek conn.log data, establish a baseline for network connections from 'lsass.exe'. This baseline should include destination ports, destination IP prevalence, and data volume. Alert on connections where the destination port is not in the top 99% of common ports, the destination IP is in the bottom 1% of prevalence (a 'long tail' analysis), or the volume of data sent is more than 3 standard deviations above the mean.",
              "Train an anomaly detection model (e.g., One-Class SVM or Isolation Forest) on features of network connections from 'lsass.exe'. Features should include: destination port, protocol, connection duration, bytes sent/received (from Zeek conn.log), and JA3/JA3S TLS fingerprints. Apply the model to score all new connections; flag high-scoring outliers, especially when correlated with a recent reboot (Windows Event ID 6005)."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting privilege escalation by abusing Security Support Providers?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.005",
        "name": "Security Support Provider",
        "evidence": [
          {
            "description": "Process command-line arguments contain strings or patterns indicative of tools (e.g., Mimikatz) or manual commands used to add or modify Security Support Providers.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process creation logs with command-line auditing enabled on all Windows endpoints and servers.",
            "action": [
              "Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for command lines matching regular expressions for SSP abuse tools and commands (e.g., '(?i)mimikatz', 'Install-SSP', 'Security\\\\sPackages', 'AddSecurityPackage'). Alert upon any match.",
              "For all process creation events, calculate the length and Shannon entropy of the command-line arguments. Establish a baseline for common processes (e.g., 'powershell.exe', 'cmd.exe', 'reg.exe'). Flag command lines with an entropy or length in the 99th percentile, especially if they contain keywords like 'Lsa' or 'Security Packages'.",
              "Train a text classification model (e.g., using TF-IDF and a Logistic Regression classifier) on a labeled dataset of malicious and benign command lines. Features should include n-grams and keywords related to registry and LSA manipulation. Apply the model to score all new command-line executions for their probability of being malicious."
            ]
          },
          {
            "description": "The Security Packages registry key is modified in a user session that originated from a non-administrative account, indicating an exploit was used to elevate privileges.",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 1",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Logon session, process creation, and registry audit logs across all Windows systems.",
            "action": [
              "For each SSP registry modification (Windows Event ID 4657), trace the responsible 'ProcessID' back through the process lineage (Sysmon Event ID 1) to its parent logon session. Correlate with logon events (Windows Event ID 4624) to determine the user's administrative group membership. Alert if the modification was performed by a process chain originating from a non-administrative user account.",
              "Maintain a frequency list of all user accounts that modify the SSP registry keys. Any account making this modification that is not on a pre-approved allowlist of administrative or system deployment accounts should be flagged. This is a zero-trust statistical approach where the expected frequency for any unauthorized user is zero.",
              "Construct a session graph where nodes represent users, logon sessions, processes, and registry keys, and edges represent actions (logon, process creation, registry write). Use a graph algorithm to search for paths from a 'non-admin user' node to an 'SSP registry key' node via a chain of process creation and registry write edges. The existence of such a path is a high-confidence anomaly indicative of privilege escalation."
            ]
          },
          {
            "description": "Anomalous process execution under the SYSTEM context occurs after a system reboot, following a suspicious modification to the Security Packages registry key by a process traced back to a non-administrative user.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Windows Event ID 6005",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process creation and system event logs on all Windows systems, especially those flagged for suspicious registry activity.",
            "action": [
              "Tag any host where a suspicious SSP registry modification occurs (e.g., from a non-admin user). After the next reboot event (Windows Event ID 6005) on that host, trigger a high-priority alert if a process creation event (Windows Event ID 4688 or Sysmon Event ID 1) shows 'cmd.exe' or 'powershell.exe' being spawned by 'lsass.exe'.",
              "For each host, build a baseline set of process names that normally execute as 'NT AUTHORITY\\SYSTEM' within the first 10 minutes after a boot event (Windows Event ID 6005). Following a suspicious SSP registry modification alert, monitor the host's next boot sequence. Flag any process running as SYSTEM that is not in the baseline set for that host or host group.",
              "Train a time-series model (e.g., ARIMA) on the count of new processes per minute spawned as 'NT AUTHORITY\\SYSTEM' during the first 15 minutes of a normal boot sequence. Apply this model to boot sequences on hosts that have been flagged for SSP registry modification. A significant, unpredicted spike in SYSTEM processes indicates anomalous payload execution."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]