[
  {
    "information_requirement": "Is the adversary establishing persistence on critical Linux hosts by modifying Pluggable Authentication Modules?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1556.003",
        "name": "Pluggable Authentication Modules",
        "evidence": [
          {
            "description": "A successful Windows network logon (Logon Type 3) or remote interactive logon (Logon Type 10) occurs using a username/password combination known to be a hardcoded backdoor credential in a specific Pluggable Authentication Module (PAM) malware variant.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints, Identity and Access Management Systems",
            "action": [
              "1. (Symbolic) Maintain a watchlist of usernames and password patterns associated with known PAM backdoor malware. Create a SIEM rule to generate a high-severity alert upon any successful Windows authentication (Event ID 4624) where the username matches this watchlist.",
              "2. (Statistical) For all successful logins, calculate the baseline frequency of each username. Flag any successful login where the username's frequency is below the 1st percentile and the source IP has a low historical login count for that user (e.g., fewer than 5 logins in the last 90 days). A successful login with a rare username from a new location is a strong anomaly.",
              "3. (ML) Develop a time-series anomaly detection model for the volume of login failures (Event ID 4625) followed by a success (Event ID 4624) from a single source IP; a sharp, anomalous spike can indicate credential guessing or testing of a backdoor."
            ]
          },
          {
            "description": "A series of successful Windows authentications (Event ID 4624) originates from a single Linux host IP address at highly regular, machine-like intervals (e.g., every 300 seconds +/- 2 seconds), indicative of an automated persistence mechanism using credentials obtained via a compromised PAM module.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors monitoring Linux server subnets",
            "action": [
              "1. (Symbolic) For any source IP associated with a Linux server, create a rule to flag a sequence of five or more successful Windows logins (Event ID 4624) to the same destination host where the time between each login is between 298 and 302 seconds.",
              "2. (Statistical) For each source IP, analyze the inter-arrival time of successful Windows authentications (Event ID 4624). Calculate the standard deviation of these time deltas over a 1-hour window. A standard deviation below 5 seconds for a series of 5+ logins suggests automated, beacon-like activity. Additionally, calculate the entropy of the minute-of-the-hour for logins from a source; low entropy indicates non-random, scheduled regularity.",
              "3. (ML) Use a time-series forecasting model (e.g., ARIMA or Prophet) to predict the expected volume and timing of logins from Linux subnets to Windows hosts. An observed pattern of highly periodic spikes that consistently deviates from the forecasted model indicates a potential automated persistence mechanism."
            ]
          },
          {
            "description": "A user account, primarily associated with Linux systems, exhibits a sustained pattern of successful Windows logins (Event ID 4624) with multiple anomalous characteristics simultaneously, such as a rare source country, unusual logon type (e.g., Batch), and off-hours timing.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, VPN Concentrators, DNS Servers, Internet Gateway",
            "action": [
              "1. (Symbolic) For accounts tagged as 'Linux-primary users' in an identity management system, create a rule to alert on any successful Windows login (Event ID 4624) that occurs outside of standard business hours (e.g., 22:00 - 05:00 local time) and originates from an IP geolocated to a country not on an approved list.",
              "2. (Statistical) For each user, build a baseline profile of their Windows login activity including common source ASNs, logon types, and hours. For each new login, calculate a risk score by summing deviation points (e.g., +2 for rare ASN, +1 for rare logon type, +1 for off-hours). Flag logins exceeding a percentile-based threshold (e.g., 95th percentile) of this risk score for that user's population.",
              "3. (ML) Employ a clustering algorithm (e.g., DBSCAN) on user login data, using features like geolocation, time of day, logon type, and target system. Logins that do not belong to a user's established clusters ('noise' points) represent significant deviations from normal behavior and are candidates for investigation."
            ]
          },
          {
            "description": "A single non-service user account has two successful Windows authentications (Event ID 4624) from different geolocations where the time elapsed between them is less than the minimum required travel time, indicating simultaneous use of credentials potentially stolen from a central Linux host.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway",
            "action": [
              "1. (Symbolic) For every successful login (Event ID 4624), retrieve the source IP and its geolocation. Cache the user, time, and location. For the next login by the same user, calculate the distance and time difference. If (distance in km / time_diff in hours) > 1000, generate an 'Impossible Travel' alert.",
              "2. (Statistical) Aggregate all impossible travel alerts over 30 days. Identify users who trigger these alerts with a frequency in the top 5th percentile of all users, as this indicates persistent, simultaneous abuse rather than a one-off anomaly like rapid VPN switching.",
              "3. (ML) Train a classifier (e.g., Random Forest) to distinguish between benign impossible travel events (e.g., rapid VPN switching, cloud service proxies) and malicious ones using features such as the consistency of the source ISP/ASN for each location, subsequent post-login behavior, and time of day.",
              "1. (Symbolic) Create a correlation rule that triggers when a user account generates an 'Impossible Travel' or 'Anomalous Login' alert and, within 5 minutes on the target host, executes a process matching a watchlist of suspicious utilities (e.g., `whoami.exe`, `nltest.exe`, `net.exe`).",
              "2. (Statistical) For each user-host pair, create a baseline of normally executed processes. After a high-risk login, flag any subsequent process (Event ID 4688) that is rare for that user on that host (e.g., in the bottom 5th percentile of execution frequency). Calculate a TF-IDF score for each process in a command line to identify rare commands.",
              "3. (ML) Use a sequence analysis model (e.g., Hidden Markov Model) to learn common sequences of actions (process executions, network connections) following a login. Flag login sessions where the post-authentication activity sequence has a very low probability according to the trained model."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses on Linux hosts by tampering with authentication modules to bypass logging or controls?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1556.003",
        "name": "Pluggable Authentication Modules",
        "evidence": [
          {
            "description": "A network connection is observed in Zeek conn.log from an internal Linux host to an external IP address or domain known to be a C2 server for malware that specifically modifies PAM to bypass local logging or security controls.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Core network switches, DNS resolvers, Linux server subnets",
            "action": [
              "1. (Symbolic) Continuously ingest threat intelligence feeds for C2 indicators (IPs, domains, JA3/JA3S hashes) associated with PAM-modifying malware. Create a SIEM rule to alert on any connection in Zeek conn.log, DNS query in Zeek dns.log, or TLS negotiation in Zeek ssl.log from an internal Linux host to a matching indicator.",
              "2. (Statistical) Profile the external connectivity of Linux servers. Calculate the rarity of each destination IP/domain across the enterprise. Flag connections to destinations that fall in the bottom 1st percentile of connection frequency across the Linux server population. Also, flag JA3/JA3S hashes that are rare for the environment.",
              "3. (ML) Train a classifier on Zeek connection metadata (e.g., duration, bytes sent, protocol, JA3S) to identify C2-like traffic. Use features like high-entropy DNS queries and long-lived connections with periodic 'heartbeats' (low-volume data transfers at regular intervals) to score and flag potential C2 channels."
            ]
          },
          {
            "description": "Successful Windows authentications (Event ID 4624) originating from a RADIUS client (e.g., a Linux-based VPN server) consistently lack a corresponding successful MFA log event for the same user within a 3-minute window, indicating a potential MFA bypass facilitated by a compromised PAM module on the Linux-based RADIUS client.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms, VPN Concentrators",
            "action": [
              "1. (Symbolic) For every successful RADIUS-based Windows login (Event ID 4624 from a known RADIUS server), require a matching successful MFA log for the same username within the last 3 minutes. Create a rule to alert if no such MFA log is found.",
              "2. (Statistical) Calculate the ratio of successful MFA logs to successful RADIUS logins per user and per RADIUS client (Linux VPN server) over a 24-hour period. A user or client with a ratio significantly deviating from the mean (e.g., >2 standard deviations below) indicates a systematic bypass.",
              "3. (ML) Use a clustering model (e.g., K-Means) to group users based on their MFA-to-login ratios and other authentication features. Users who fall into a 'low-ratio' or 'no-MFA' cluster are prime candidates for investigation, as they represent a behavioral anomaly compared to their peers."
            ]
          },
          {
            "description": "A successful Windows authentication (Event ID 4624) is part of a network session (Zeek conn.log) that violates established network segmentation policies (e.g., a login to a finance server from a developer-subnet Linux host) without a corresponding firewall block log, suggesting a compromised authentication mechanism is being used to pivot.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network sensors, Domain Controllers, Critical Server VLANs, Network Taps",
            "action": [
              "1. (Symbolic) Codify network segmentation rules into a lookup table (e.g., 'dev_subnet' cannot access 'prod_db_subnet' via RDP/3389). Join Zeek conn.log data with Windows login data (Event ID 4624). Alert on any successful login session that violates these codified rules.",
              "2. (Statistical) Model the network graph of normal authentications, showing which subnets typically authenticate to which other subnets. Calculate the frequency of each source-destination subnet pair for authentication traffic. Flag any successful authentication path that has a very low frequency (e.g., bottom 1st percentile).",
              "3. (ML) Use graph analytics (e.g., community detection algorithms like Louvain) on the authentication network graph. Nodes (subnets/hosts) that form new edges between previously disconnected communities could represent a compromised asset being used as a pivot point, facilitated by a compromised credential."
            ]
          },
          {
            "description": "A sequence of failed Windows logins (Event ID 4625) with specific, non-password-related error codes (e.g., account disabled, logon hours) is immediately followed by a successful login (Event ID 4624) from the same source IP for a different account, suggesting an attacker is probing account policies before using a valid credential stolen from a Linux host.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS Servers, Edge Authentication Gateways",
            "action": [
              "1. (Symbolic) Create a rule to detect a sequence from a single source IP within 1 minute: 5+ failed logins (Event ID 4625) with status codes other than '0xC000006A' (bad password), such as '0xC0000072' (account disabled) or '0xC000006F' (logon hours), followed by one successful login (Event ID 4624) for any account.",
              "2. (Statistical) For each source IP, calculate the ratio of failed-to-successful logins over a 5-minute rolling window. A sudden spike in this ratio followed by a drop to zero is anomalous. Flag IPs whose ratio pattern exceeds the 98th percentile of historical volatility for all authenticating IPs.",
              "3. (ML) Use a sequence-matching algorithm (e.g., Dynamic Time Warping) to find login patterns that match known attack signatures (e.g., probing for disabled accounts then succeeding with a valid one). This can identify variations of the attack that symbolic rules might miss."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary accessing credentials on Linux hosts via compromised authentication modules?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1556.003",
        "name": "Pluggable Authentication Modules",
        "evidence": [
          {
            "description": "A network connection is observed in Zeek conn.log from a multi-user Linux host (e.g., jump box, shared development server) to an external IP address or domain known to be an exfiltration destination for credential harvesting malware.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Core network sensors monitoring Linux server subnets",
            "action": [
              "1. (Symbolic) Ingest and apply threat intelligence feeds specific to credential theft malware exfiltration points. Generate a high-severity alert for any DNS query (Zeek dns.log) or network connection (Zeek conn.log) from a Linux server to a matching indicator.",
              "2. (Statistical) For each Linux server, baseline the daily volume of data uploaded (orig_bytes) to external destinations. Alert if the daily upload volume for a server exceeds 4 standard deviations above its 30-day moving average, especially if the destination IP is rare (in the bottom 5% of destinations contacted).",
              "3. (ML) Use a domain generation algorithm (DGA) detection model on outbound DNS queries from Linux hosts. A positive match on a query that resolves and is followed by a connection is a strong indicator of compromise by a credential harvester preparing to exfiltrate data."
            ]
          },
          {
            "description": "Outbound DNS queries from a Linux host are observed in Zeek dns.log containing unusually long subdomains or TXT record queries with high entropy, characteristic of DNS tunneling used to exfiltrate credentials harvested by a modified PAM module.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS Resolvers, Internet Gateway, Network Taps",
            "action": [
              "1. (Symbolic) Create a rule to detect DNS queries for TXT or CNAME records where the query label length exceeds 100 characters, originating from a Linux server IP.",
              "2. (Statistical) For each internal host, calculate the Shannon entropy of all DNS query labels (subdomains). Flag any query whose entropy score is in the 99th percentile for the environment. Also, calculate the ratio of A/AAAA queries to other query types (TXT, CNAME, MX) per host; a low ratio indicates anomalous DNS usage.",
              "3. (ML) Train a classifier to distinguish between legitimate and tunneled DNS traffic using features like query length, record type, query frequency, label entropy, and the historical reputation of the parent domain to provide a probability score for exfiltration."
            ]
          },
          {
            "description": "A single source IP address, identified as a Linux host, generates a high volume of failed Windows logins (Event ID 4625) across many different user accounts, followed by successful logins (Event ID 4624) for a subset of those accounts, consistent with a password spraying attack using credentials stolen from a central Linux system via a compromised PAM module.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS servers, Internet Gateway",
            "action": [
              "1. (Symbolic) Create a rule to alert when a single source IP generates >100 failed login events (Event ID 4625) across >20 unique accounts, followed by at least one successful login (Event ID 4624) within a 1-hour window.",
              "2. (Statistical) Over a 10-minute window, calculate the ratio of unique accounts attempted to the number of successful logins from a single source IP. A very high ratio (e.g., > 50:1) is indicative of password spraying. Flag source IPs with a ratio >3 standard deviations above the mean for all authenticating IPs.",
              "3. (ML) Use a clustering algorithm (e.g., K-Means) to group source IPs based on their login behavior, using features like total attempts, failure/success ratio, number of unique accounts targeted, and inter-arrival time of attempts. IPs that fall into a 'high-volume, low-success, high-target-count' cluster are likely conducting password spray attacks."
            ]
          },
          {
            "description": "On a Windows host, a process associated with credential dumping (e.g., `lsass.exe` being accessed by a non-system process) is observed via Windows Event ID 4688, running under the context of a user account whose credentials were used in a recent successful password spray or impossible travel event.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, High-value user endpoints",
            "action": [
              "1. (Symbolic) Create a correlation rule that alerts if an account that triggered a 'Password Spray Success' or 'Impossible Travel' alert is then used within 1 hour to execute a process with a command line matching signatures for Mimikatz (`'sekurlsa::logonpasswords'`) or `procdump.exe` targeting `lsass.exe`.",
              "2. (Statistical) Baseline parent-child process relationships on critical servers. Flag any anomalous relationship, such as `services.exe` spawning `powershell.exe`, especially when initiated by a user recently flagged for suspicious login behavior. Calculate the rarity of the parent-child-user triplet; triplets in the bottom 1st percentile are highly suspicious.",
              "3. (ML) Train a classification model on process command-line arguments to identify obfuscated credential dumping commands. Use features derived from tokenizing the command line, such as argument counts, character entropy, and presence of base64-encoded strings, to detect suspicious commands that evade simple string matching."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]