[
  {
    "information_requirement": "Is the adversary maintaining persistence using Winlogon Helper DLLs?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.004",
        "name": "Winlogon Helper DLL",
        "evidence": [
          {
            "description": "A modification to a Winlogon registry key (Userinit, Shell, or a Notify subkey) references a DLL or executable file whose SHA256 hash is present on a known-malicious threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Correlate registry modification events (Windows Event ID 4657) for Winlogon keys with file write events (Windows Event ID 4663) in system directories. Upon a registry write, extract the file path, retrieve the file's hash, and compare it against a threat intelligence feed of known-malicious file hashes. Alert on any match.",
              "Statistical: Analyze the file paths referenced in Winlogon registry modifications. Calculate the entropy of the file names and the rarity of the parent directory. A high entropy score combined with a low-frequency parent directory (e.g., not 'C:\\Windows\\System32') suggests an attempt to evade simple signature-based detection. Alert on values exceeding the 95th percentile for filename entropy or directory rarity.",
              "Machine Learning: Develop a classification model (e.g., Random Forest) trained on features from registry modification events. Features should include the process that made the change, the rarity of the new registry value, the entropy of the file path, and whether the file was recently created. The model will classify each Winlogon key modification as benign or malicious."
            ]
          },
          {
            "description": "A modification to the 'HKLM\\...\\Winlogon\\Userinit' or 'HKLM\\...\\Winlogon\\Shell' registry values to a value other than the established baseline, or the creation of a new subkey under the 'HKLM\\...\\Winlogon\\Notify' registry key.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Create a strict baseline for the `Userinit` (default: `C:\\Windows\\system32\\userinit.exe,`) and `Shell` (default: `explorer.exe`) registry values. Monitor for any modification (Windows Event ID 4657) that deviates from this baseline. Additionally, monitor for the creation of any new subkey under the `...\\Winlogon\\Notify` key. Alert on any deviation or creation.",
              "Statistical: For the `Userinit` value, which can legitimately contain multiple comma-separated executables, calculate a baseline for the number of entries. Monitor for changes that increase this count. Use a statistical Z-score to measure the deviation of the new string length from the historical average length for that specific host. Alert if the Z-score exceeds 3.",
              "Machine Learning: Implement a time-series anomaly detection model on the frequency of `...\\Winlogon\\Notify` subkey creation events across the enterprise. A sudden spike in creation events, departing from a near-zero baseline, indicates a potential widespread campaign leveraging this technique. The model would detect this collective anomaly even if individual events are missed."
            ]
          },
          {
            "description": "A process such as a command shell (cmd.exe), scripting interpreter (powershell.exe), or an executable from a non-standard directory is created as a child of winlogon.exe, userinit.exe, or explorer.exe within a short time window following a successful interactive user logon.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Correlate successful interactive logon events (Windows Event ID 4624, Type 2 or 10) with subsequent process creation events (Windows Event ID 4688) on the same host within 60 seconds. Alert if the parent process is `winlogon.exe`, `userinit.exe`, or `explorer.exe` and the child process is `cmd.exe`, `powershell.exe`, or any executable not located in `C:\\Windows\\System32`.",
              "Statistical: For each parent process (`winlogon.exe`, `userinit.exe`, `explorer.exe`), build a historical baseline of all child process names and their command-line arguments. Calculate the frequency of each child process/command-line pair. Alert on any new child process that has a frequency of zero in the historical baseline (first-time seen) or falls below a low percentile threshold (e.g., 1st percentile).",
              "Machine Learning: Use a sequence analysis model (e.g., an LSTM network) to learn normal sequences of processes that occur after a user logon. The model would take a sequence of process creation events following a logon as input. An anomalous sequence, such as `logon -> explorer.exe -> powershell.exe -enc ...`, would be flagged by the model as a deviation from learned benign patterns."
            ]
          },
          {
            "description": "A temporal correlation on a single host where a file write event in a system directory is followed within minutes by a registry modification event that sets a Winlogon key (Userinit, Shell, Notify) to reference the newly written file.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: On a per-host basis, trigger on a Winlogon registry modification (Event ID 4657). Within the preceding 5 minutes, search for a file write event (Event ID 4663) where the filename in the write event matches the filename referenced in the registry modification. Alert if this sequence is observed.",
              "Statistical: Graph the relationship between processes that write to system directories and processes that modify Winlogon registry keys. Analyze the graph to find rare or first-time-seen edges (relationships). For example, if `msiexec.exe` writes a DLL and then `svchost.exe` modifies a Notify key to point to it, this rare process-to-process sequence would be flagged as statistically anomalous.",
              "Machine Learning: Develop a supervised learning model that predicts the likelihood of a file write event being part of a persistence installation. Features would include the source process name, file path, file type, and time delta to the next security-relevant registry modification. The model would assign a risk score to file write events, allowing analysts to focus on the highest-risk activities."
            ]
          },
          {
            "description": "An outbound network connection from userinit.exe, explorer.exe, or their immediate child processes to an external IP address, especially to a destination with a low reputation score or over a non-standard port.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Monitor Zeek conn.log for any connection where the source process on the endpoint (if available via endpoint agent enrichment) is `userinit.exe`. For `explorer.exe`, alert on connections to IP addresses found on a CTI feed of malicious C2 servers or to non-standard ports (e.g., not 80/443).",
              "Statistical: Establish a baseline of normal outbound network activity for `explorer.exe` on a per-host or per-user basis, including destination countries, ASNs, and data volume. Use a percentile-based threshold to detect anomalies. Alert if `explorer.exe` initiates a connection to a country from which it has never connected before, or if the daily data uploaded exceeds the 99th percentile of its historical daily average.",
              "Machine Learning: Use an autoencoder to learn the normal pattern of network connections (destination IP, port, protocol, bytes out) originating from processes spawned by explorer.exe post-logon. The model will flag any connection with a high reconstruction error, indicating it does not conform to the learned benign profile. This can detect novel C2 channels."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using Winlogon Helper DLLs?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.004",
        "name": "Winlogon Helper DLL",
        "evidence": [
          {
            "description": "A modification to a Winlogon registry key (Userinit, Shell, or Notify) references a DLL or executable whose file hash matches a known privilege escalation tool (e.g., Mimikatz, PowerSploit) from a threat intelligence database.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Upon a Winlogon registry modification (Event ID 4657), extract the referenced file path. Retrieve the file's hash (from the file system or preceding file write event, ID 4663) and compare it against a curated list of hashes for known privilege escalation tools. Alert on any match.",
              "Statistical: Analyze the command-line arguments of processes that modify Winlogon registry keys. Build a frequency distribution of the arguments used. Flag processes that use rare or unique combinations of arguments, as adversaries may use custom scripts or flags to place their tools, deviating from normal administrative behavior.",
              "Machine Learning: Train a classification model to identify malicious file paths referenced in registry keys. Features could include path depth, presence of keywords like 'temp' or 'appdata', filename entropy, and the rarity of the file extension for that directory. The model would classify a path like `C:\\Users\\Public\\mim.dll` as highly suspicious."
            ]
          },
          {
            "description": "The 'HKLM\\...\\Winlogon\\Userinit' registry value is modified to include commands for user or group management (e.g., `net user`, `net localgroup`) or other privileged operations, appended to the legitimate userinit.exe path.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Monitor `Userinit` registry value modifications (Event ID 4657). Use regular expressions to parse the new value for the presence of strings like `net user /add`, `net localgroup Administrators /add`, `reg add`, or `wmic process call create`. Alert on any match.",
              "Statistical: Calculate the character length and token count (split by spaces and commas) of the `Userinit` registry value across all systems. The default is short (`C:\\Windows\\system32\\userinit.exe,`). Establish a baseline and alert on any value whose length or token count exceeds the 99th percentile, indicating the likely addition of malicious commands.",
              "Machine Learning: Use Natural Language Processing (NLP) techniques, such as a Bag-of-Words model, to analyze the text of the `Userinit` value. Train the model on examples of benign values and known-malicious values. The model will learn to classify new modifications as benign or malicious based on the commands and syntax used."
            ]
          },
          {
            "description": "A correlated sequence of events on a single host where: 1) an anomalous process is spawned by winlogon.exe or userinit.exe, 2) the process runs with SYSTEM privileges, and 3) the process subsequently creates a new user account or adds a user to a privileged group.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4720",
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory, Windows Servers",
            "action": [
              "Symbolic: Create a rule that triggers when a process creation event (Event ID 4688) with ParentProcessName `winlogon.exe` or `userinit.exe` and SubjectLogonId `0x3e7` (SYSTEM) is followed within 60 seconds by a user creation event (Event ID 4720) or group membership change event (Event ID 4732) initiated by the same Process ID. Alert on this complete sequence.",
              "Statistical: Profile the typical actions performed by processes running as SYSTEM. Create a frequency count of event IDs generated by processes with SubjectLogonId `0x3e7`. Flag any process that generates a low-frequency event for a SYSTEM process, such as Event ID 4720 (User Creation), especially if that process was spawned by `userinit.exe`.",
              "Machine Learning: Use a graph-based anomaly detection algorithm. Model system activity as a graph where nodes are processes and users, and edges are actions (e.g., 'created', 'added to group'). The model learns the normal structure of this graph. An anomalous path like `userinit.exe -> created -> evil.exe -> added to group -> Administrators` would be flagged as a structurally anomalous subgraph."
            ]
          },
          {
            "description": "An anomalous child process of winlogon.exe or userinit.exe requests a handle to the LSASS process with memory access rights (PROCESS_VM_READ), indicative of a credential dumping attempt.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, Windows Workstations",
            "action": [
              "Symbolic: Prerequisite: Enable kernel object access auditing for `lsass.exe`. Create a rule that alerts when a process access event (Event ID 4656) for `lsass.exe` with an Access Mask containing `0x10` (PROCESS_VM_READ) is generated by a source process whose parent is `winlogon.exe` or `userinit.exe` (determined by correlating with Event ID 4688).",
              "Statistical: Build a baseline of all processes that legitimately access the LSASS process. This list should be very small (e.g., `csrss.exe`, `svchost.exe`). Use frequency analysis to identify any process accessing LSASS that is not on the allowlist or has a very low historical frequency of access. Alert on any process that deviates from this statistical norm.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on the features of legitimate LSASS access events (e.g., Source Process Name, Parent Process Name, Access Mask). This model creates a boundary around normal activity. Any new access event that falls outside this boundary is classified as an anomaly, indicative of a credential dumping attempt."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]