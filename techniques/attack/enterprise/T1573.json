[
  {
    "information_requirement": "Is the adversary using encrypted channels for command and control? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1573",
        "name": "Encrypted Channel",
        "evidence": [
          {
            "description": "An outbound SSL/TLS connection matches a known malicious indicator (IP, domain, or certificate hash) from a threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies), Threat intelligence platform",
            "action": [
              "Join Zeek conn.log destination IPs, Zeek ssl.log server names (SNI), and Zeek ssl.log certificate SHA1 hashes against a threat intelligence feed of known C2 indicators. Generate an alert upon a match.",
              "For all outbound SSL/TLS connections, calculate the public suffix + 1 (e.g., 'example.com'). For each unique domain, calculate the ratio of the number of unique source hosts connecting to it versus the total number of connections. A low host-to-connection ratio (e.g., < 0.1) can indicate a single infected host making many connections. Flag domains that also have a recent registration date (< 60 days).",
              "Train a supervised classification model (e.g., Random Forest) using a labeled dataset of benign and malicious SSL/TLS connections. Features should include: connection duration, bytes sent/received, SNI length, SNI entropy, certificate validity period, and whether the certificate is self-signed. Deploy the model to score all new outbound connections and alert on scores exceeding a pre-defined probability threshold (e.g., > 0.9)."
            ]
          },
          {
            "description": "An encrypted communication session uses a TLS client signature (JA3) or server signature (JA3S) known to be associated with a specific malware family or malicious tool.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors capturing TLS handshakes (e.g., Zeek sensors at network chokepoints)",
            "action": [
              "Extract the `ja3` and `ja3s` hash values from Zeek ssl.log records. Match these hashes against a known-malicious JA3/JA3S hash feed (e.g., from abuse.ch). Generate an alert on any match.",
              "For every 24-hour window, calculate the frequency of each JA3 hash observed across the enterprise. Identify JA3 hashes that are present on a small number of hosts (e.g., < 3) and represent a small fraction of total TLS connections (< 0.01%). Investigate these rare hashes as they represent non-standard client software.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to the set of observed JA3 hashes. Enrich each hash with metadata like destination port, destination ASN, and SNI TLD. Analyze small, dense clusters of rare JA3 hashes to identify groups of hosts exhibiting similar non-standard client behavior, potentially indicating a coordinated malware campaign."
            ]
          },
          {
            "description": "An outbound SSL/TLS connection uses a certificate with anomalous attributes, such as being self-signed, having an unusually short or long validity period, or possessing a low-entropy subject or issuer name.",
            "data_sources": [
              "Zeek x509.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points with SSL/TLS inspection capabilities, Certificate Transparency logs",
            "action": [
              "From Zeek x509.log, create a rule to alert on certificates where `certificate.issuer` equals `certificate.subject` (self-signed) AND the connection is to an external IP. Also, alert on certificates with empty or generic subject fields (e.g., CN='.', O='.').",
              "Calculate the distribution of validity periods (in days) for all observed certificates in Zeek x509.log. Flag certificates with validity periods below the 5th percentile (e.g., < 90 days) or above the 95th percentile (e.g., > 398 days). Separately, calculate the Shannon entropy of the `certificate.subject.CN` field and flag those in the lowest 5th percentile.",
              "Train a binary classification model (e.g., Decision Tree) on a labeled dataset of certificates. Features should include: `is_self_signed` (boolean), `validity_period` (numeric), `subject_CN_entropy` (numeric), `key_length` (numeric), and `number_of_SAN_entries` (numeric). Use the trained model to classify all newly observed certificates as 'benign' or 'suspicious'."
            ]
          },
          {
            "description": "An internal host establishes SSL/TLS connections to a single external destination with highly regular time intervals (beaconing) or with randomized but statistically consistent intervals (jittered beaconing), often involving small, similar-sized data transfers.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Client subnets, servers with direct internet access, Network flow collectors at key network boundaries",
            "action": [
              "For a given source-destination IP pair, if the connection count exceeds a threshold (e.g., > 100 in 24 hours) and the destination port is 443, but the SNI in the associated `ssl.log` does not belong to a major CDN or cloud provider (e.g., Akamai, Cloudflare, AWS, Google), flag for review.",
              "For each internal source IP, group outbound connections from Zeek conn.log by destination IP over a 24-hour period. Calculate the time difference (delta) between consecutive connections in each group. Calculate the standard deviation of these time deltas. A very low standard deviation (e.g., < 1 second) indicates rigid beaconing. Also, calculate the mean and standard deviation of `orig_bytes` and `resp_bytes`; low variance in payload size is another indicator.",
              "For each source-destination communication channel, create a time series of connection events. Apply a Fast Fourier Transform (FFT) to this time series to identify dominant frequencies. A strong peak in the frequency domain indicates a periodic signal, which is a high-fidelity indicator of automated beaconing. Alert on channels with a periodicity confidence score above a set threshold."
            ]
          },
          {
            "description": "An encrypted outbound connection is initiated by a process that is not a standard web browser or mail client, or by a process executing from a non-standard or user-writable directory (e.g., C:\\Users\\Public\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and critical servers (e.g., Domain Controllers, Application Servers), EDR agent logs",
            "action": [
              "Correlate process creation events (Windows Event ID 4688) with network connection events (Windows Event ID 5156). Maintain and apply an allow-list of process names known to make external SSL/TLS connections (e.g., chrome.exe, firefox.exe, outlook.exe, teams.exe). Alert on any process that initiates an external connection and is not on the allow-list, especially if the process path is in a temporary or user-writable location.",
              "For all processes initiating network connections, establish a baseline of normal parent processes. Flag any network-connected process spawned by an unusual parent (e.g., 'winword.exe' spawning 'powershell.exe' which then connects out). Additionally, calculate the frequency of process image paths; flag paths that are rare across the enterprise (long-tail analysis).",
              "Train an anomaly detection model (e.g., Isolation Forest) on features from process and network events. Features should include: process name, parent process name, command-line length and entropy, and if the process is unsigned. Use the model to score each new network-initiating process and alert on those identified as strong anomalies."
            ]
          },
          {
            "description": "SSL/TLS protocol traffic is detected by a protocol analyzer (like Zeek) on a destination port not commonly associated with TLS, or the TLS handshake itself generates protocol violation warnings.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and internal network segment gateways",
            "action": [
              "Create a rule to alert when a connection in Zeek conn.log has `service` = 'ssl' OR 'tls' AND the `id.resp_p` (destination port) is NOT in the set {443, 465, 587, 993, 995, 8443}. Increase severity if a corresponding entry exists in Zeek weird.log with a `name` related to SSL/TLS (e.g., `ssl_weird_version`).",
              "Aggregate all connections from Zeek conn.log where `service` is 'ssl' or 'tls'. Group by destination port and calculate the frequency of each port's usage. Flag any destination port that falls below the 1st percentile of usage frequency, as these represent rare channels for encrypted traffic that warrant investigation.",
              "Train a One-Class SVM model on the characteristics of 'normal' SSL/TLS traffic (e.g., connections on port 443 with a valid, non-self-signed certificate and a common JA3 hash). The feature vector should include port number, JA3 hash prevalence, and certificate validity flags. Use this model to identify and alert on any new SSL/TLS connections that are classified as outliers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]