[
  {
    "information_requirement": "Is the adversary attempting to steal credentials using ARP cache poisoning?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1557.002",
        "name": "ARP Cache Poisoning",
        "evidence": [
          {
            "description": "An ARP reply is observed where the source MAC address or its OUI (Organizationally Unique Identifier) is on a threat intelligence watchlist for known ARP poisoning tools (e.g., Ettercap, Cain & Abel).",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, especially those containing critical servers and user workstations.",
            "action": [
              "Symbolic: Maintain and query a watchlist of MAC addresses and OUIs associated with known ARP spoofing tools. Create a rule to alert when an ARP packet in Zeek arp.log has a source MAC that matches an entry on this watchlist.",
              "Statistical: Profile the frequency of ARP replies from all MAC addresses on a given subnet. Alert on MAC addresses whose ARP reply count suddenly deviates significantly (e.g., > 3 standard deviations) from their established baseline, especially if the MAC is on a 'low reputation' list derived from threat intelligence.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from Zeek arp.log (source MAC, target IP, opcode) and external data (OUI reputation, threat intel feeds). Use the model to classify each ARP event as 'benign' or 'malicious-tool-related', alerting on high-confidence 'malicious' classifications."
            ]
          },
          {
            "description": "A single source MAC address performs a subnet-wide ARP scan (multiple ARP requests for different IPs) within a short time window, immediately followed by a high volume of gratuitous ARP replies impersonating a critical asset like the default gateway.",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Default gateway, DNS servers, and Domain Controllers.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a single source MAC sends ARP requests for > 20 unique IPs in a subnet within 60 seconds, and this is immediately followed by that same MAC sending gratuitous ARP replies for the gateway's IP.",
              "Statistical: For each MAC, calculate the entropy of the destination IPs in its ARP requests over a 1-minute window. A sudden, high-entropy spike indicates a scan. Correlate this with a subsequent spike in the rate of gratuitous ARP replies from the same MAC to identify the full attack chain.",
              "Machine Learning: Use a sequence-based model (e.g., Hidden Markov Model or LSTM) trained on sequences of ARP events (opcodes, source/destination IPs/MACs). The model learns normal ARP sequences and flags anomalous sequences characteristic of a scan-then-poison attack pattern."
            ]
          },
          {
            "description": "A Windows endpoint logs an IP address conflict event (Event ID 4199), and the IP address in conflict belongs to a critical network infrastructure asset (e.g., Gateway, DNS Server, Domain Controller).",
            "data_sources": [
              "Windows Event ID 4199",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly Domain Controllers and authentication servers.",
            "action": [
              "Symbolic: Create an alert that triggers on Windows Event ID 4199. Enrich the alert by looking up the IP address from the event message in an asset inventory. If the IP belongs to a pre-defined list of critical assets, escalate the alert's priority.",
              "Statistical: Monitor the rate of Event ID 4199 across the enterprise. An anomalous cluster of these events occurring in the same subnet within a short time frame (e.g., multiple hosts reporting conflicts for the same IP) is a strong indicator of a widespread ARP poisoning attack. Calculate the moving average of these events and alert on spikes.",
              "Machine Learning: Train a decision tree classifier to predict the severity of an IP conflict. Features could include the type of host logging the event (workstation, server), the role of the IP in conflict (gateway, DC), and time of day. The model can automatically prioritize conflicts that are highly likely to be malicious."
            ]
          },
          {
            "description": "A high volume of gratuitous ARP replies for a critical IP (e.g., Default Gateway) are sent from a MAC address that does not match the statically defined or historically established MAC for that IP.",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches, gateway routers, and DNS servers.",
            "action": [
              "Symbolic: Maintain a static IP-to-MAC mapping table for critical infrastructure. Create a rule to alert any time a gratuitous ARP reply is seen in Zeek arp.log where the sender's IP is in the critical list, but the sender's MAC does not match the table.",
              "Statistical: For each critical IP, baseline the rate of gratuitous ARP replies over time. Use a percentile-based threshold (e.g., alert if the count in a 5-minute window exceeds the 99th percentile) to detect anomalous floods of gratuitous ARPs, regardless of the source MAC.",
              "Machine Learning: Use a time series anomaly detection model (e.g., ARIMA) to forecast the expected volume of gratuitous ARPs for critical IPs. Alert when the observed volume significantly deviates from the forecasted range, indicating a potential poisoning attempt."
            ]
          },
          {
            "description": "A single MAC address, not associated with a gateway or router, sends gratuitous ARP replies claiming ownership of multiple different IP addresses, particularly those of high-value servers, within a short period.",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., Domain Controllers, RADIUS servers) and subnets containing them.",
            "action": [
              "Symbolic: Create a rule that tracks the set of IPs claimed by each MAC address via gratuitous ARP replies over a 5-minute window. Alert if a non-gateway MAC claims more than 3 distinct IP addresses.",
              "Statistical: For each MAC address, calculate the entropy of the IP addresses it claims via gratuitous ARP over a rolling time window. A low-entropy baseline (claiming one IP) that suddenly spikes to high entropy (claiming many IPs) is a strong indicator of malicious activity. Alert when entropy for a non-gateway MAC exceeds a predefined threshold.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features derived from ARP traffic (MAC, number of IPs claimed, frequency of replies). Normal devices will form dense clusters, while an attacker claiming multiple IPs will be flagged as a noise point or a sparse cluster."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary collecting sensitive data using ARP cache poisoning?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1557.002",
        "name": "ARP Cache Poisoning",
        "evidence": [
          {
            "description": "An ARP reply from a MAC address on a threat intelligence watchlist is observed impersonating the IP address of a designated high-value data asset (e.g., file server, database server).",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Subnets containing high-value data assets (e.g., file servers, database servers, code repositories).",
            "action": [
              "Symbolic: Create a rule that joins a watchlist of malicious MACs/OUIs with a list of high-value asset IPs. Alert if a malicious MAC sends an ARP reply claiming to be a high-value IP.",
              "Statistical: Calculate a 'targeting score' for each suspicious ARP event (e.g., gratuitous ARP from an unknown MAC). The score is higher if the impersonated IP belongs to a data server. Alert when the targeting score for any single event exceeds a set threshold.",
              "Machine Learning: Train a classification model to predict if an ARP poisoning event is targeting a data asset. Features would include the source MAC's reputation, the impersonated IP's role (e.g., 'database', 'fileserver'), and network segment. Use the model to prioritize alerts for collection attempts."
            ]
          },
          {
            "description": "A single malicious MAC address sends two distinct, targeted ARP replies: one to a client (Host A) claiming the IP of a server (Host B), and another to the server (Host B) claiming the IP of the client (Host A).",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Communication paths between user workstations and sensitive data servers.",
            "action": [
              "Symbolic: Create a stateful correlation rule that detects when a single MAC address (Attacker) sends an ARP reply to MAC_A claiming to be IP_B, and also sends an ARP reply to MAC_B claiming to be IP_A, all within a 10 second window.",
              "Statistical: Graph the network based on ARP replies, where nodes are MACs and directed edges represent 'claims-to-be' relationships. A bidirectional claim between an attacker's MAC and two other nodes (A and B) is a strong statistical anomaly. Monitor for the formation of such 'MitM triangles'.",
              "Machine Learning: Use graph-based anomaly detection algorithms on the ARP communication graph. Models can learn normal communication patterns (e.g., star-shaped from a gateway) and flag the sudden appearance of the specific triangular MitM structure as a high-confidence anomaly."
            ]
          },
          {
            "description": "A Windows Event ID 4199 (IP address conflict) is logged on a system designated as a high-value data asset or on the workstation of a user with privileged data access.",
            "data_sources": [
              "Windows Event ID 4199",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Designated high-value data servers (file servers, databases) and workstations of privileged users.",
            "action": [
              "Symbolic: Create a high-priority alert that triggers when Windows Event ID 4199 is generated on any host listed in a 'critical data assets' or 'privileged users' group. Automatically enrich the alert with the conflicting MAC address from the event log.",
              "Statistical: Analyze the distribution of Event ID 4199 alerts across asset tiers. If the proportion of alerts from high-value assets significantly exceeds the historical norm, it may indicate a targeted campaign. Use a Chi-squared test to check for statistical significance.",
              "Machine Learning: Train a risk-scoring model for Event ID 4199. Features would include the criticality of the host logging the event, the time of day, and recent ARP activity involving the conflicting MAC. The model output can be a score from 1-100 indicating the likelihood of a targeted collection attempt."
            ]
          },
          {
            "description": "Following a change in the IP-to-MAC mapping for a high-value data server, network traffic from a client to that server's IP is observed being sent to the new, unauthorized MAC address at the link layer.",
            "data_sources": [
              "Zeek arp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic flows to and from high-value data assets.",
            "action": [
              "Symbolic: Correlate Zeek arp.log with conn.log. Trigger an alert if an ARP reply changes the MAC for a server IP (IP_S) from MAC_legit to MAC_new, and within 5 minutes, a connection in conn.log is seen from a client to IP_S where the destination link-layer address is MAC_new.",
              "Statistical: Model the normal Layer 2 (MAC address) path for traffic to critical servers. For each connection to a critical server IP, check if the destination MAC is the expected one. Calculate the percentage of 'misdirected' traffic over time. A sudden increase in this percentage after an ARP anomaly is a strong indicator of successful interception.",
              "Machine Learning: Use a time series model to forecast the expected data volume between specific client-server pairs. If an ARP poisoning event is detected, and the subsequent observed traffic volume between the legitimate client and server drops significantly (while traffic to the attacker's MAC increases), flag it as a confirmed interception for collection."
            ]
          },
          {
            "description": "A non-gateway endpoint's MAC address begins receiving a statistically anomalous volume of traffic on ports associated with data services (e.g., SMB/445, SQL/1433), where the destination IP address in the packets is that of a known data server.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All non-gateway endpoints on internal network segments.",
            "action": [
              "Symbolic: For traffic in conn.log where the destination IP is a known data server, create a rule to alert if the destination MAC address is not the server's legitimate MAC and is not a gateway/router MAC. This directly detects misrouted data traffic.",
              "Statistical: For each non-gateway MAC address, baseline the volume of bytes and number of connections received on common data-service ports (445, 1433). Use a standard deviation or percentile-based threshold (e.g., received bytes > 4 standard deviations above the mean) to detect when an endpoint anomalously starts acting like a server.",
              "Machine Learning: Use unsupervised learning (e.g., k-means clustering) to group endpoints based on their network traffic profiles (bytes in/out, common ports). An endpoint that suddenly shifts from a 'client' cluster to a 'server-like' cluster (high inbound traffic on server ports) is a strong anomaly indicative of a successful MitM position for data collection."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]