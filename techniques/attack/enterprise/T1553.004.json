[
  {
    "information_requirement": "Is the adversary evading defenses by installing a malicious root certificate?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1553.004",
        "name": "Install Root Certificate",
        "evidence": [
          {
            "description": "A certificate installation event is logged on an endpoint, and the certificate's thumbprint (SHA-1 hash) is present on a blocklist of known-malicious certificates or is absent from an established enterprise allowlist of trusted root certificate authorities (CAs).",
            "data_sources": [
              "Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)",
              "Windows Registry (HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\)",
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Public-facing Web Servers, Enterprise Certificate Authority Servers, Endpoint devices, Centralized log aggregation platform (SIEM)",
            "action": [
              "Create and maintain an enterprise-specific allowlist of approved root certificate thumbprints and a blocklist sourced from threat intelligence. Upon detecting a certificate registry write (Sysmon Event ID 13 to a root store path) or a CAPI2 log (Event ID 41), extract the certificate thumbprint. Generate a high-severity alert if the thumbprint exists in the blocklist or does not exist in the allowlist.",
              "From Zeek ssl.log data, calculate the prevalence of each certificate issuer ('issuer' field) seen across the network over a 30-day rolling window. For issuers falling below a low prevalence threshold (e.g., associated with <0.05% of TLS sessions), cross-reference their certificates against the enterprise allowlist. A rare issuer not on the allowlist warrants investigation of the hosts communicating with it.",
              "Develop a Random Forest classification model to predict certificate legitimacy. Train the model using features from both allowlisted and known-malicious certificates, such as: certificate validity duration, key length (e.g., 2048, 4096), signature algorithm (e.g., sha256WithRSAEncryption), issuer and subject string entropy, and the presence of basic constraints. Score all newly observed certificates in near real-time and flag those classified as malicious with high confidence for analyst review."
            ]
          },
          {
            "description": "A process is created for a command-line utility (e.g., certutil.exe, powershell.exe, security) with arguments used to add a new certificate to a system's root trust store.",
            "data_sources": [
              "Windows Event ID 4688 (Process Creation with Command Line)",
              "Sysmon Event ID 1 (Process Creation)",
              "Windows PowerShell Event ID 4104 (Script Block Logging)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, particularly Domain Controllers, administrative workstations, and developer machines.",
            "action": [
              "Monitor process creation logs (Sysmon EID 1, WEF EID 4688) for command lines containing 'certutil' with '-addstore' and 'root' arguments, or 'powershell' with 'Import-Certificate' or 'Install-Certificate' targeting a root store location ('Cert:\\LocalMachine\\Root'). Alert on any match not associated with an approved change request or known software deployment process.",
              "Establish a baseline of Shannon entropy for the command-line arguments of legitimate `certutil.exe` and `powershell.exe` certificate management commands observed in the environment. Calculate the entropy for each new execution involving certificate store modifications. Flag any execution whose command-line entropy exceeds the 98th percentile of the established baseline, as this can indicate obfuscated or randomized file paths used by an adversary.",
              "Train a sequence-based model, such as a Long Short-Term Memory (LSTM) network, on legitimate process execution chains and their associated command lines. The model should learn normal sequences, like `svchost.exe` -> `gpupdate.exe` -> `certutil.exe`. Flag any execution sequence that deviates significantly, such as `winword.exe` -> `powershell.exe` -> `Import-Certificate ... -CertStoreLocation Cert:\\LocalMachine\\Root`, as a high-risk anomaly indicative of malicious activity."
            ]
          },
          {
            "description": "A root certificate's thumbprint is found to be installed on a very small number of endpoints relative to the total population, indicating it is not part of a standard operating system build or widespread software deployment.",
            "data_sources": [
              "Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)",
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Asset inventory or configuration management database (CMDB)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized log aggregation platform (SIEM), All Windows Endpoints and Servers, Configuration Management Database (CMDB).",
            "action": [
              "Upon detection of a new certificate installation (Sysmon Event ID 13 in a root certificate registry path), query an enterprise-wide inventory of all known root certificate thumbprints. If the newly installed certificate's thumbprint has never been seen before on any other host in the inventory, generate a 'First Seen In Environment' alert for immediate investigation.",
              "On a daily basis, aggregate a complete inventory of all installed root certificate thumbprints from all endpoints. For each unique thumbprint, calculate its prevalence by dividing the number of hosts it is installed on by the total number of hosts. Flag any certificate with a prevalence below a dynamic threshold (e.g., the 5th percentile) or a static threshold (e.g., installed on fewer than 10 hosts) for review as a potential outlier.",
              "Represent each host as a binary vector where each element corresponds to the presence (1) or absence (0) of a unique root certificate thumbprint across the enterprise. Apply a density-based clustering algorithm like DBSCAN to these host vectors. Hosts that are marked as noise points or fall into extremely small clusters have anomalous certificate configurations and should be prioritized for investigation."
            ]
          },
          {
            "description": "A root certificate installation is initiated by a user account or process that is not authorized for system administration, such as a standard user account, a web browser, or an office productivity application.",
            "data_sources": [
              "Sysmon Event ID 1 (Process Creation)",
              "Windows Event ID 4688 (Process Creation with Command Line)",
              "Sysmon Event ID 13 (RegistryValue Set)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Identity and Access Management (IAM) systems for user context, Change Management Database (CMDB) for maintenance window data.",
            "action": [
              "For every process creation event involving a certificate utility (e.g., `certutil.exe`), check the parent process name. Generate an alert if the parent process is not on a pre-defined allowlist of legitimate initiators (e.g., `explorer.exe`, `mmc.exe`, `svchost.exe`, `ccmexec.exe`). Specifically, create high-severity alerts for parent processes like `chrome.exe`, `firefox.exe`, `winword.exe`, `excel.exe`, or `outlook.exe`.",
              "For each certificate installation event, analyze the user account that initiated the action. Establish a baseline of which users and service accounts normally perform certificate management. Flag any installation performed by a user account that has never performed this action before or whose primary role is non-administrative. This can be achieved by looking for first-time occurrences of a user performing this action.",
              "Develop a User and Entity Behavior Analytics (UEBA) model that scores the risk of administrative actions. The model should ingest features such as user role, process name (`certutil.exe`), parent process name, command-line arguments, and time of day. An event like a user from the 'Marketing' group running `certutil -addstore` at 2:00 AM, spawned from `outlook.exe`, would receive a very high anomaly score, indicating a likely compromise."
            ]
          },
          {
            "description": "Within a short time window after a new root certificate is installed on a host, the same host begins initiating network connections to unusual destinations, such as domains with low reputation, high entropy, or those that were registered recently.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log",
              "Zeek conn.log",
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring sensors (e.g., Zeek), DNS Resolvers, Endpoint log shippers, Centralized log aggregation platform (SIEM).",
            "action": [
              "Create a correlation rule that triggers on a certificate installation event (Sysmon Event ID 13). Within the next 60 minutes, monitor all DNS queries (Zeek dns.log) and TLS handshakes (Zeek ssl.log) from that host. Generate a high-severity alert if the host contacts any domain or IP address present on a threat intelligence feed of known malicious or newly registered domains (NRDs).",
              "For any host that has a new root certificate installed, establish a baseline of its network behavior from the prior 14 days, specifically the Shannon entropy of the Server Name Indication (SNI) values in its outbound TLS traffic (Zeek ssl.log). After the installation, monitor this metric in 1-hour windows. A statistically significant increase (e.g., a jump of 2 standard deviations above the baseline) in SNI entropy indicates the host is contacting a much wider and more random set of domains, which is suspicious.",
              "Implement an LSTM-based autoencoder model for each host, trained on time-series vectors of its normal network activity. Features in the vector should include bytes sent/received, number of unique destination IPs, number of unique DNS queries, and the ratio of successful to failed TLS handshakes. After a certificate installation event on a host, feed its subsequent network data into its trained model. A sustained period of high reconstruction error indicates a significant behavioral anomaly that warrants immediate investigation for potential command-and-control or data exfiltration activity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]