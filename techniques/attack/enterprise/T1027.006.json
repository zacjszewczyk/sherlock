[
  {
    "information_requirement": "Is the adversary using HTML Smuggling to deliver malicious payloads and evade network defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.006",
        "name": "HTML Smuggling",
        "evidence": [
          {
            "description": "Network traffic logs show an HTML file download where the source IP/domain or the file's hash is present on a threat intelligence list of known malicious indicators.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, including firewalls and web proxies, and DNS resolvers.",
            "action": [
              "Correlate the `id.orig_h` field from Zeek conn.log and the `host` field from Zeek http.log against a threat intelligence feed of known malicious IPs and domains. Simultaneously, calculate the SHA1 hash of files with a `text/html` MIME type from files.log and match against a known-malicious file hash database. Generate an alert on any match.",
              "For each source IP (`id.orig_h`) in conn.log associated with an HTML file download, calculate its historical connection frequency over the last 90 days. Using a percentile-based model, flag connections from IPs in the 99.5th percentile of rarity (i.e., newly seen or very rare IPs). Combine this rarity score with a domain age check (from dns.log or WHOIS enrichment) and ASN reputation to create a composite risk score. Alert on scores exceeding a defined threshold.",
              "Deploy a pre-trained supervised classification model (e.g., Random Forest) that predicts the likelihood of a connection being malicious. Use features such as source IP/ASN reputation, JA3/JA3S hash, requested URI, file MIME type, and historical connection patterns. Score all network connections resulting in an HTML file download and alert on any connection with a predicted probability of malice greater than 0.9."
            ]
          },
          {
            "description": "The content of a downloaded HTML or JavaScript file contains a co-occurrence of keywords related to blob creation (e.g., 'Blob', 'atob') and keywords related to file download initiation (e.g., 'msSaveOrOpenBlob', 'download=', 'a.click()').",
            "data_sources": [
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring (NSM) sensors with file extraction capabilities, Web Content Filters.",
            "action": [
              "Implement a YARA rule or regular expression search across the extracted content of files with MIME types `text/html` and `application/javascript`. The rule must trigger on the co-occurrence of keywords from a creation set (e.g., 'Blob', 'atob', 'DataURL') and a download set (e.g., 'msSaveOrOpenBlob', 'download=', '.click()') within the same script tag or file. Generate an alert on a match.",
              "For any file matching the symbolic rule, calculate the Shannon entropy of the specific JavaScript block containing the matched keywords. Establish a baseline entropy for legitimate JavaScript on the network by analyzing a large sample of benign files. Alert if the entropy of the suspicious block exceeds the 98th percentile of the baseline, indicating a high probability of obfuscation or embedded data.",
              "Apply a pre-trained text classification model, such as one using a Convolutional Neural Network (CNN), to the content of all downloaded JavaScript and embedded scripts. The model should be trained on a labeled dataset of benign and malicious (smuggling) scripts to identify complex smuggling patterns beyond simple keyword matching. Alert when a script is classified as 'malicious-smuggling' with a confidence score above 0.85."
            ]
          },
          {
            "description": "A downloaded HTML file exhibits statistically anomalous characteristics, such as excessive file size, a high ratio of script content to markup, or large embedded data blobs, when compared to a dynamically generated baseline of typical HTML files.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring sensor data lake, Web Proxy logs.",
            "action": [
              "Create a high-speed filter rule to flag any downloaded file with a `text/html` MIME type where the `total_bytes` field in Zeek files.log exceeds a static threshold of 2MB. This serves as an initial tripwire for investigation, as most legitimate HTML pages are significantly smaller.",
              "For all `text/html` downloads, establish a multi-variable baseline using a 30-day moving average for: 1) file size (`total_bytes` in files.log), 2) the ratio of script tag content length to total file length, and 3) the total size of all base64-encoded strings. For each new HTML file, calculate the Mahalanobis distance from the centroid of this baseline. Alert on files with a distance exceeding 3 standard deviations, indicating a multi-faceted anomaly.",
              "Utilize an unsupervised clustering algorithm, such as DBSCAN, on a feature space composed of file size, script-to-HTML ratio, entropy, and the number/size of encoded strings. Periodically re-run the clustering on recent data. Profile the resulting clusters to identify the 'normal' web page cluster. Investigate any file that is assigned to a small, distant, or newly formed outlier cluster."
            ]
          },
          {
            "description": "A browser process spawns a script interpreter or an unsigned executable from a temporary or download directory within a short time window following a user download of a file type commonly used for smuggling (HTML, ISO, ZIP, JS).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Terminal Servers.",
            "action": [
              "Create a SIEM correlation rule that triggers when: 1) Zeek files.log records a download of a `.html`, `.iso`, `.zip`, or `.js` file to a specific host. 2) Within 90 seconds, on the same host, Windows Event ID 4688 logs a `NewProcessName` of `powershell.exe`, `wscript.exe`, `cscript.exe`, or `mshta.exe` where the `ParentProcessName` is a browser (`chrome.exe`, `msedge.exe`, etc.). The rule should also trigger if the `NewProcessName` is any executable running from a user's `Downloads` or `AppData\\Local\\Temp` directory.",
              "For each host, build a frequency table of all parent-child process relationships where the parent is a web browser. Calculate the probability of each unique relationship (e.g., `msedge.exe` -> `powershell.exe`). Generate a low-frequency alert when a browser spawns a process that falls into the bottom 1st percentile of observed relationships across the enterprise, indicating a highly unusual execution chain.",
              "Deploy a sequence-based anomaly detection model, such as an LSTM autoencoder, on endpoint event streams. Train the model on sequences of events (e.g., file download, process creation, network connection) per host. Generate an alert when a new sequence of events has a high reconstruction error, indicating a deviation from normal learned behavior, such as a browser download followed immediately by suspicious script execution."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]