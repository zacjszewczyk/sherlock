[
  {
    "information_requirement": "Is the adversary using trusted utilities like mshta.exe for defense evasion? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.005",
        "name": "Mshta",
        "evidence": [
          {
            "description": "An mshta.exe process, identified by process monitoring, either executes a file with a known malicious hash or initiates a network connection to a domain or IP address present on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers; Network egress points",
            "action": [
              "Symbolic: Correlate Windows Event ID 4688 process creation events for mshta.exe with Zeek conn.log records within a 5-second window by joining on source IP and timestamp. Alert if the destination IP or resolved domain (from Zeek dns.log) matches an active, high-confidence threat intelligence feed. Separately, for .hta files identified in the command line, calculate the file hash and match against a malware hash repository.",
              "Statistical: For all domains contacted by mshta.exe, calculate the public suffix + 1 (e.g., 'example.co.uk'). Compare this against a historical baseline of domains contacted by mshta.exe across the enterprise. Flag domains that are in the 99th percentile of rarity or have never been seen before in this context.",
              "Machine Learning: Use a pre-trained classification model (e.g., a gradient boosting classifier) to score the maliciousness of domains contacted by mshta.exe. Features for the model should include domain length, character entropy, presence of numbers, TLD type, and domain age (from WHOIS data). Alert on domains with a high malicious probability score."
            ]
          },
          {
            "description": "An mshta.exe process is executed with command-line arguments containing inline VBScript or JScript, remote script URLs, or base64-encoded content, indicative of 'living-off-the-land' script execution.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers",
            "action": [
              "Symbolic: Create a detection rule that uses regular expressions to search mshta.exe command lines in Windows Event ID 4688 for patterns like `javascript:`, `vbscript:`, `GetObject(\"script:`, `http://`, `https://`, and `data:text/html;base64,`. Alert on any match.",
              "Statistical: Calculate the length and character entropy of all mshta.exe command lines. Establish a baseline for these metrics across the environment. Alert on command lines where the length or entropy exceeds a dynamic threshold, such as 3 standard deviations above the mean or the 95th percentile.",
              "Machine Learning: Train a logistic regression classifier on a labeled dataset of benign and malicious mshta.exe command lines. Features should include command-line length, entropy, n-gram frequency of characters, and the presence/count of special characters. Use the model to classify new mshta.exe executions in real-time and alert on those classified as malicious."
            ]
          },
          {
            "description": "An mshta.exe process is spawned by a parent process not typically associated with its execution, such as a Microsoft Office application, an email client, or a web browser.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers",
            "action": [
              "Symbolic: Create a detection rule that alerts when the parent process of mshta.exe (from Windows Event ID 4688) is `winword.exe`, `excel.exe`, `powerpnt.exe`, `outlook.exe`, `wscript.exe`, or `cscript.exe`.",
              "Statistical: Generate a frequency table of all parent-child process relationships involving mshta.exe over a 30-day rolling window. Calculate the rarity of each observed parent process. Alert on any parent process that falls below a rarity threshold (e.g., seen in less than 1% of all mshta.exe executions) or is observed for the first time.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on process execution data. Features should include the parent process name, the child process name (mshta.exe), the user context, and the host. Identify clusters of normal behavior. Flag any mshta.exe execution that is an outlier or does not belong to an established 'normal' cluster."
            ]
          },
          {
            "description": "An mshta.exe process is executed with a command-line argument that is significantly longer or has a higher character entropy than a historical baseline, suggesting the presence of an embedded or obfuscated script.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers",
            "action": [
              "Symbolic: Apply a regular expression to mshta.exe command lines to detect long, contiguous strings of base64 characters `([A-Za-z0-9+/]{40,}=*)` or hexadecimal characters `([0-9a-fA-F]{40,})`. Alert on any matches.",
              "Statistical: For each mshta.exe execution, calculate the command-line length and Shannon entropy. Maintain a rolling 30-day baseline of the mean and standard deviation for these two metrics. Alert on any execution where either metric exceeds 3 standard deviations from its respective mean.",
              "Machine Learning: Develop an anomaly detection model using an autoencoder. Train the autoencoder on the command-line strings of legitimate mshta.exe executions. During inference, a high reconstruction error for a new command line indicates that it is anomalous and does not conform to the learned pattern of normal behavior, suggesting potential obfuscation."
            ]
          },
          {
            "description": "A network connection originating from an mshta.exe process exhibits anomalous characteristics, such as an unusual destination port, a rare user-agent string, or a connection pattern consistent with command-and-control beaconing.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points; All enterprise endpoints and servers",
            "action": [
              "Symbolic: Correlate mshta.exe process executions (Windows Event ID 4688) with subsequent HTTP requests (Zeek http.log) from the same source IP. Alert if the `user_agent` field is blank, missing, or does not contain 'Microsoft HTML Application host'.",
              "Statistical: For network connections attributed to mshta.exe, create a frequency distribution of destination ports (from Zeek conn.log). Alert on any connection to a port that falls outside the top 95% of most frequently used ports (e.g., not 80, 443). Additionally, calculate the JA3 hash of the TLS client hello (from Zeek ssl.log) and flag any JA3 hash that is rare or has never been seen before from an mshta.exe process.",
              "Machine Learning: Apply time series analysis to network connections (Zeek conn.log) originating from a host within 5 minutes of an mshta.exe execution. Look for beaconing behavior by analyzing the time deltas between connections to the same destination. Use a Fast Fourier Transform (FFT) or autocorrelation to detect regularly spaced intervals indicative of automated C2 communications."
            ]
          },
          {
            "description": "An mshta.exe process executes an HTA file located in a non-standard or user-writable directory, such as a temporary folder, a download directory, or a public share.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers; File servers with public shares",
            "action": [
              "Symbolic: Create a detection rule that uses a regular expression to search mshta.exe command lines (Windows Event ID 4688) for file paths pointing to `.hta` files located in suspicious directories. The regex should match paths including `\\Temp\\`, `\\Downloads\\`, `\\AppData\\`, `\\Temporary Internet Files\\`, or `\\Users\\Public\\`.",
              "Statistical: Build a frequency map of all directory paths from which `.hta` files are executed by mshta.exe. Establish a baseline of common, legitimate paths (if any). Alert when an HTA file is executed from a path that has a very low frequency score (e.g., seen less than 5 times across the enterprise in 30 days).",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) trained on legitimate file paths from which mshta.exe is known to operate. The model will create a boundary around normal path structures. Any new execution path that falls outside this boundary is flagged as an anomaly, indicating a potentially malicious file location."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]