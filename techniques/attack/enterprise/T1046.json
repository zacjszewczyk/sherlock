[
  {
    "information_requirement": "Is the adversary attempting to discover network services on the enterprise network?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1046",
        "name": "Network Service Discovery",
        "evidence": [
          {
            "description": "One or more network connections exhibiting User-Agent strings or protocol-specific artifacts matching a watchlist of known network scanning tools (e.g., Nmap, Masscan).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Internal network segments (East-West traffic), Server subnets, DMZ",
            "action": [
              "Symbolic: Create a watchlist of User-Agent strings associated with scanning tools (e.g., 'Nmap Scripting Engine', 'masscan/1.3.2'). Query Zeek http.log for any requests where the user_agent field matches this watchlist. Alert on any match.",
              "Statistical: From Zeek weird.log, calculate the frequency of specific event types like 'TCP_Christmas_scan' or 'possible_split_routing'. Establish a baseline for these events per source IP over a 24-hour period. Alert if a source IP generates a count of these events exceeding the 99th percentile of the baseline.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled packet captures or Zeek conn.log features (protocol, duration, service, flags) to distinguish between benign traffic and traffic generated by scanning tools. Apply the model in near-real-time to network flows to classify and flag suspected scanning activity."
            ]
          },
          {
            "description": "A process is created with a filename or command-line arguments that match a known network scanning tool or a native utility being used for network discovery.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Critical Workstations, Jump Boxes",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for process names matching a watchlist of scanning tools (e.g., 'nmap.exe', 'masscan.exe'). Additionally, use regular expressions to search command-line arguments for patterns indicative of scanning (e.g., 'Test-NetConnection -Port', 'arp -a', 'nmap -sV'). Alert on any match.",
              "Statistical: For each host, calculate the entropy of command-line arguments for common utilities like 'powershell.exe' or 'cmd.exe'. Establish a baseline entropy score for each host/user. A sudden, sharp increase in command-line entropy for these processes can indicate obfuscated or complex discovery commands. Alert when entropy exceeds 3 standard deviations above the mean for that host's baseline.",
              "Machine Learning: Use a Natural Language Processing (NLP) model to classify command-line arguments as benign or discovery-related. Fine-tune a pre-trained model on a labeled dataset of commands. Deploy the model to score all new process creation events and alert on those classified as high-risk discovery activity."
            ]
          },
          {
            "description": "A single source IP address initiates connections to a statistically significant number of unique destination IP addresses on a specific port or set of ports within a defined time window, indicative of a horizontal scan.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, Cloud VPCs, VPN client subnets",
            "action": [
              "Symbolic: In a 5-minute window, trigger an alert if a single source IP is observed in Zeek conn.log connecting to more than a hard-coded threshold of unique destination IPs (e.g., > 50) on a common port (e.g., 22, 445, 3389).",
              "Statistical: In a 10-minute sliding window, calculate the number of unique destination IPs per source IP from Zeek conn.log. For the entire network, establish a baseline distribution of this 'fan-out' count. Alert on any source IP whose fan-out count exceeds the 98th percentile of this distribution, indicating it is scanning significantly more hosts than is typical.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on connection data, with features like (source_ip, destination_ip_count, destination_port_count, time_window). The algorithm can automatically group normal traffic into clusters and identify scanning behavior as noise or as sparse, small clusters. These outliers represent hosts performing horizontal scans."
            ]
          },
          {
            "description": "A single source IP address initiates connections to a statistically significant number of unique destination ports on a single destination IP address within a defined time window, indicative of a vertical scan.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical asset subnets (e.g., database servers, application servers), Domain Controllers, Internet-facing servers",
            "action": [
              "Symbolic: In a 5-minute window, trigger an alert if a single source IP/destination IP pair in Zeek conn.log is associated with more than a hard-coded threshold of unique destination ports (e.g., > 100).",
              "Statistical: In a 10-minute sliding window, calculate the Shannon entropy of the destination port numbers for each source IP connecting to a single destination IP. A high entropy score indicates a wide, non-sequential scan. Alert on source IPs with a port count or entropy score exceeding the 99th percentile of their respective historical baselines.",
              "Machine Learning: Use time series analysis (e.g., ARIMA) on the count of connections per minute from a source to a destination. Train the model on benign traffic patterns. A sudden, sharp spike in connection attempts that the model fails to predict (i.e., a high residual error) is indicative of a vertical scan burst. Alert when the prediction error exceeds a dynamic threshold."
            ]
          },
          {
            "description": "A process, identified by name or hash, initiates network connection patterns (high volume of connections, high fan-out to IPs or ports) that are anomalous compared to its established historical baseline.",
            "data_sources": [
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, any host where process and network telemetry can be correlated",
            "action": [
              "Symbolic: Join Sysmon Event ID 1/3 (Process/Network) data. Create a rule that alerts if a process name from a watchlist of non-network-intensive applications (e.g., 'winword.exe', 'acrord32.exe', 'notepad.exe') is observed making more than a static threshold of outbound connections (e.g., > 20) in one minute.",
              "Statistical: For each process name on each host, build a historical baseline of its network behavior (e.g., average unique destination IPs per hour, average unique destination ports per hour) using Sysmon Event ID 3 data. Periodically recalculate these metrics and alert if a process's current behavior deviates from its baseline by more than 3 standard deviations.",
              "Machine Learning: For each process, create a feature vector including process name, parent process, and network statistics (connection count, port entropy). Use an anomaly detection algorithm like Isolation Forest to score each process event. Events with high anomaly scores, particularly those involving non-administrative processes exhibiting scanning-like network behavior, should be flagged for investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]