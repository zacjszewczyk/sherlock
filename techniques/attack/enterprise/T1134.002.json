[
  {
    "information_requirement": "Has the adversary escalated privileges by creating a process with a stolen or manipulated token?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1134.002",
        "name": "Create Process with Token",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) shows a new process whose name or command line matches a known token manipulation tool signature, and the event's 'Target User Name' is privileged (e.g., NT AUTHORITY\\SYSTEM) while the 'Creator User Name' is non-privileged.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Administrator Workstations, Critical Application Servers, Tier 0 Assets",
            "action": [
              "Symbolic: Create and maintain a watchlist of process names and command-line arguments associated with token manipulation tools (e.g., 'incognito.exe', 'psgetsys.exe', 'Invoke-TokenManipulation', 'runas.exe'). Query Windows Event ID 4688 for events where the 'New Process Name' or 'Command Line' field matches this list AND the 'Target User Name' is a privileged account (e.g., 'SYSTEM', 'Administrator') AND the 'Creator User Name' is a non-privileged account.",
              "Statistical: For every process creation event where 'Token Elevation Type' is 'Type 1' (a full token) or 'Type 2' (an elevated token), calculate the enterprise-wide rarity of the 'Creator Process Name'. Flag instances where the creator process's frequency falls below a 5th percentile threshold, indicating it is an unusual process to be spawning privileged children.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest, Gradient Boosting) on labeled historical process creation events. Use features such as 'Creator Process Name', 'New Process Name', 'Target User Name', 'Creator User Name', command-line length, and command-line entropy. Use the model to classify new process creation events as 'benign escalation' or 'suspicious escalation' based on learned patterns of token usage."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a typically non-interactive system process (e.g., lsass.exe, services.exe, wininit.exe) spawning an interactive shell or Living-Off-the-Land Binary (LOLBin) such as cmd.exe, powershell.exe, rundll32.exe, or regsvr32.exe.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Standard User Endpoints, Web Servers, Core Infrastructure Servers",
            "action": [
              "Symbolic: Create a rule that alerts on any process creation event (Windows Event ID 4688) where the 'Creator Process Name' is on a list of sensitive system processes (e.g., 'lsass.exe', 'wininit.exe', 'winlogon.exe', 'services.exe', 'smss.exe') and the 'New Process Name' is an interactive shell or script interpreter (e.g., 'cmd.exe', 'powershell.exe', 'pwsh.exe', 'wscript.exe', 'cscript.exe', 'rundll32.exe').",
              "Statistical: Profile normal parent-child process relationships across the enterprise. For each parent, calculate the historical frequency of each child it spawns. Generate an alert when a rare 'Creator Process Name' -> 'New Process Name' pair (e.g., frequency below the 1st percentile) is observed, especially when the 'Target User Name' is privileged and different from the 'Creator User Name'.",
              "Machine Learning: Use an anomaly detection model (e.g., Isolation Forest) on process creation data. Features should include the parent process name, child process name, child process path, command-line length, and command-line argument entropy. The model will learn normal process creation behavior and flag outliers, such as `services.exe` spawning `powershell.exe` with a long, encoded command line."
            ]
          },
          {
            "description": "A process is created with a token that grants it a higher integrity level (e.g., High or System) or a different, more privileged user context than its parent process, and the parent is not on an allow-list of legitimate privilege brokers (e.g., svchost.exe, consent.exe, runas.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: In Windows Event ID 4688, compare the 'Creator User Name' with the 'Target User Name'. Alert if 'Target User Name' is a privileged account (e.g., 'SYSTEM', 'Administrator') while 'Creator User Name' is not, AND the 'Creator Process Name' is not on a pre-defined allow-list of legitimate brokers (e.g., 'svchost.exe', 'consent.exe', 'runas.exe', specific third-party application launchers).",
              "Statistical: For each 'Creator Process Name', build a historical baseline set of 'Target User Name' accounts it typically creates processes for. Use Jaccard distance or a similar set-based comparison to measure the deviation when a new process is created. Alert when the new 'Target User Name' is highly dissimilar from the baseline set (e.g., Jaccard distance > 0.9) and is a privileged account.",
              "Machine Learning: Train a time-series anomaly detection model (e.g., using Prophet or an LSTM autoencoder) on the rate of privilege escalations (events where 'Target User Name' is more privileged than 'Creator User Name') per host, per hour. A sudden spike in this rate on a single machine, outside of known patching or software deployment windows, indicates a potential compromise."
            ]
          },
          {
            "description": "A process creation event involving an elevated token is followed within a 5-minute window by an outbound network connection from the same host to a low-reputation IP address or an unusual port.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Devices, DNS Servers, Network Egress Points, Firewalls",
            "action": [
              "Symbolic: Join Windows Event ID 4688 with Zeek conn.log on the host's IP address and a 5-minute time window. Trigger an alert if an event with an elevated token ('Token Elevation Type' = 'Type 1' or 'Type 2') is followed by an outbound connection from that host to a destination IP on a threat intelligence feed or to a non-standard port (e.g., not 80, 443, 22, 3389).",
              "Statistical: For each process created with an elevated token, analyze subsequent DNS requests (Zeek dns.log) and network connections (Zeek conn.log) from the same host within 1 minute. Calculate the entropy of requested domain names or the rarity percentile of the destination port. Generate an alert if a newly escalated process immediately makes requests for high-entropy domains (e.g., > 3.5 bits for a single domain label) or connects to a port in the 99th percentile of rarity.",
              "Machine Learning: Create a sequence analysis model (e.g., a Hidden Markov Model or LSTM) that examines the sequence of host and network events following a token escalation. Train the model to recognize legitimate sequences (e.g., escalation -> read config file -> bind to local port) versus malicious ones (e.g., escalation -> DNS query for dynamic DNS domain -> outbound connection to rare port -> data transfer). Flag sequences with low probability under the 'legitimate' model."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary bypassing defenses by creating a process with a stolen or manipulated token?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1134.002",
        "name": "Create Process with Token",
        "evidence": [
          {
            "description": "A process with a suspicious name or command-line signature is created with a token belonging to a legitimate, trusted system process (e.g., explorer.exe, svchost.exe), making it appear as a legitimate child process to evade detection.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard User Endpoints, Critical Application Servers, Terminal Servers",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 for events where the 'Creator Process Name' is a commonly impersonated trusted process (e.g., 'explorer.exe', 'svchost.exe') but the 'New Process Name' or 'Command Line' matches a watchlist of suspicious tools, LOLBins, or command-line patterns (e.g., 'mimikatz', 'powershell -enc').",
              "Statistical: Establish a baseline of all legitimate child processes for 'explorer.exe' and 'svchost.exe'. Calculate the frequency of each child process across the enterprise. Alert when one of these parents spawns a child process that is statistically rare (e.g., frequency below the 0.1st percentile), has a command-line length in the 99th percentile, or has never been seen before.",
              "Machine Learning: Use a graph-based community detection algorithm (e.g., Louvain Modularity) to model normal process relationships. Represent processes as nodes and parent-child relationships as edges. A newly created process that is spawned from a trusted parent but is classified as part of a different, smaller, or less-connected 'community' than its parent's typical children is a strong anomaly indicative of impersonation for evasion."
            ]
          },
          {
            "description": "A high-privilege system process (e.g., svchost.exe, lsass.exe, services.exe) spawns a child process that is unsigned, located in a non-standard directory (e.g., %APPDATA%, %TEMP%), or is otherwise uncharacteristic for that parent.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Core Infrastructure Servers (e.g., AD, DNS), All Windows Servers",
            "action": [
              "Symbolic: Create a rule to alert on any process creation event (Windows Event ID 4688 or Sysmon Event ID 1) where the 'Creator Process Name'/'ParentProcess' is a critical system process ('lsass.exe', 'wininit.exe', 'services.exe') AND the 'New Process Name'/'Image' is located in a user-writable directory (e.g., C:\\Users\\*, C:\\ProgramData\\*, C:\\Temp\\*) OR is unsigned ('Signed' field is false, from Sysmon). Always generate a critical alert for any child process spawned from 'lsass.exe'.",
              "Statistical: For each critical parent process, profile the attributes of its typical children, including file path, signature status, and command-line length. Create a baseline using descriptive statistics (mean, median, mode, standard deviation). Alert when a new child process deviates significantly (e.g., >3 standard deviations) from the established baseline for any of these attributes, such as a command-line length far exceeding the norm.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on the attributes of legitimate child processes for high-privilege parents. Use features like file path entropy, signer status (present/absent), parent-child process name pair, and command-line argument count. The model will create a boundary around normal behavior, flagging any new process that falls outside this boundary as anomalous."
            ]
          },
          {
            "description": "A process is created where the process that invoked the creation API is different from the process that becomes the parent of the new process, indicating an attempt to break the process ancestry chain for attribution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers with advanced audit logging and Sysmon enabled",
            "action": [
              "Symbolic: For each new process, correlate Sysmon Event ID 1 and Windows Event ID 4688 using the Process ID. Generate a high-priority alert for every instance where the 'Creator Process ID' from event 4688 does not match the 'ParentProcessID' from event 1, as this is a strong indicator of advanced evasion techniques.",
              "Statistical: Profile all instances of Creator/Parent mismatches. Calculate the frequency of the ('Creator Process Name', 'Parent Process Name', 'New Process Name') triplet. Flag triplets that fall below a 1st percentile frequency threshold as potentially novel malicious activity not associated with known benign software (e.g., EDR, admin tools).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on the feature set of events where the Creator ID differs from the Parent ID. Benign instances (e.g., from specific EDR or management tools) will form dense clusters based on features like process names and paths. Sporadic, un-clustered events (noise points) are more likely to be unique, malicious tools and should be prioritized for investigation."
            ]
          },
          {
            "description": "A single non-interactive logon session (e.g., Logon Type 3 for Network, 5 for Service) is used to create multiple, functionally unrelated processes with different parent processes over a short period, suggesting a single stolen token is being reused for various tasks.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Multi-user Systems (e.g., Terminal Servers), Critical Servers, Domain Controllers",
            "action": [
              "Symbolic: Correlate Windows Event ID 4688 with Windows Event ID 4624 using the 'Logon ID' field. Alert when a 'Logon ID' associated with a non-interactive 'Logon Type' (any type other than 2 or 10) spawns more than 5 distinct 'New Process Name's from more than 3 distinct 'Creator Process Name's within a 10 minute window.",
              "Statistical: For each non-interactive 'Logon ID', calculate the rate of process creation and the entropy of the set of 'New Process Name's per hour. Establish a baseline for these metrics for each logon type and host. Use a percentile-based threshold (e.g., 99th percentile) to alert on sessions with an unusually high volume or variety of process creation activity.",
              "Machine Learning: Model the sequence of processes created within a logon session. Train a sequence-to-sequence autoencoder on legitimate process sequences observed in non-interactive sessions. A logon session whose process creation sequence has a high reconstruction error is anomalous, suggesting the activity does not match any known legitimate workflow (e.g., patching, service startup) and may be an adversary reusing a token for disparate tasks."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]