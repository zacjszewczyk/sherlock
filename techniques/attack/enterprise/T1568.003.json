[
  {
    "information_requirement": "Has the adversary established command and control by calculating C2 endpoints from DNS query responses? (TA0011 - Command and Control)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1568.003",
        "name": "DNS Calculation",
        "evidence": [
          {
            "description": "An internal host connects to a destination port that is mathematically derived from the octets of an IP address returned in a recent DNS A-record response. For example, using the first three octets of the resolved IP 198.51.100.5 to calculate the C2 port (e.g., 198 + 51 + 100 = 349).",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Egress Network Gateways, Endpoint Devices",
            "action": [
              "Symbolic Logic: For each successful DNS A-record response in `dns.log`, script a check that simulates known calculation algorithms (e.g., sum of first three octets, XOR of octets) on the resolved IP. Correlate with `conn.log` to find if the source host connects to the original resolved IP but on the calculated port within 60 seconds. Alert on any match.",
              "Statistical Method: For every connection in `conn.log`, correlate it back to the most recent DNS query for that destination IP from the same source host. For connections on non-standard ports (>1024), calculate the mathematical difference between the destination port and various arithmetic combinations of the resolved IP's octets. Identify statistical outliers where this difference is consistently zero or a simple, repeated integer, suggesting a fixed calculation offset.",
              "Machine Learning: Train an unsupervised learning model (e.g., DBSCAN) on features extracted from correlated DNS and network connection events. Features should include: (1) queried domain entropy, (2) resolved IP reputation, (3) destination port, and (4) arithmetic combinations of the resolved IP's octets. The model should cluster normal traffic together, isolating anomalous clusters where destination ports appear mathematically linked to resolved IPs."
            ]
          },
          {
            "description": "An internal host makes a network connection to a resolved IP address on a non-standard or ephemeral port (>1024) within a short time window (< 60 seconds) after a DNS query for a domain that is newly observed, has high entropy, or matches a threat intelligence feed.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Firewalls/Proxies, Internal DNS Resolvers, Endpoint Devices",
            "action": [
              "Symbolic Logic: Create a SIEM rule that joins `dns.log` with `conn.log` on the source host IP. Alert when a connection event (`conn.log`) occurs within 60 seconds of a DNS response (`dns.log`) from the same host, where the `conn.log` destination port is not in a pre-defined list of common ports (e.g., 80, 443, 53, 22, 3389) and the queried domain in `dns.log` matches a known C2 domain from a threat intelligence feed.",
              "Statistical Method: For each host, calculate the frequency distribution of destination ports for traffic following a DNS query. Establish a baseline of typical port usage per host and across the enterprise. Flag any host that shows a statistically significant deviation, such as a sudden increase in connections to a specific high-numbered port or a wide distribution of connections across many high-numbered ports after querying low-reputation domains.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA or LSTM) to monitor the rate of connections to non-standard ports per host. Enrich the time series data with features from preceding DNS queries (e.g., domain entropy, TLD rarity). The model should learn the normal pattern of DNS-to-connection behavior and alert on temporal anomalies that indicate a potential C2 channel being established."
            ]
          },
          {
            "description": "DNS queries from one or more internal hosts for domains exhibiting statistical properties of algorithmic generation, such as high Shannon entropy, unusual n-gram distribution, or low linguistic cohesion, not present on an organizational allowlist.",
            "data_sources": [
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Domain Controllers, Endpoint Devices",
            "action": [
              "Symbolic Logic: Maintain and query against a dynamic allowlist of known-good FQDNs. Any DNS query for a domain not on this list is passed to further inspection. Check these domains against public and commercial threat intelligence feeds for known DGA patterns or families. An immediate match generates a high-priority alert.",
              "Statistical Method: For all queried domains not on the allowlist, calculate the Shannon entropy of the FQDN. Compare this value against a baseline established from known-good domains. Flag domains with entropy scores in the top percentile (e.g., > 95th percentile) or exceeding a fixed threshold (e.g., > 3.5 for second-level domains) as potentially algorithmically generated.",
              "Machine Learning: Train a binary classification model (e.g., Random Forest) on a labeled dataset of legitimate and DGA domains. Use features such as domain length, entropy, n-gram frequencies, and vowel-to-consonant ratio. Apply the trained model in real-time to classify newly observed domains from `dns.log` and flag those predicted as DGA with a high confidence score."
            ]
          },
          {
            "description": "A single internal host generates a high ratio of DNS queries resulting in NXDOMAIN (Non-Existent Domain) responses compared to its own baseline and the network-wide average, indicating a potential DGA 'rendezvous' search for an active C2 server.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Endpoint Devices",
            "action": [
              "Symbolic Logic: Create a SIEM rule to count DNS queries by source IP and response code over a 5-minute window. Alert if a single host generates more than a fixed number (e.g., > 100) of NXDOMAIN responses and the ratio of NXDOMAIN to total queries exceeds a hard threshold (e.g., 80%).",
              "Statistical Method: For each internal host, calculate a rolling average of the NXDOMAIN-to-total-query ratio over a 1-hour period. Establish a baseline for each host and for the network as a whole. Use z-scores to identify hosts whose NXDOMAIN ratio is a statistical outlier (e.g., z-score > 3) compared to their own historical behavior or peer systems.",
              "Machine Learning: Apply time-series clustering (e.g., k-shape) to group hosts with similar DNS query patterns over time. A host that moves from a 'normal' cluster (low NXDOMAIN ratio) to a small, isolated 'anomalous' cluster characterized by a sudden and sustained spike in NXDOMAIN responses is a strong candidate for investigation."
            ]
          },
          {
            "description": "An internal host establishes a periodic, 'heartbeat'-like network connection (beaconing) characterized by regular intervals, low data volume, and long duration. The connection is directed to an IP address recently resolved via a DNS query flagged as suspicious (e.g., high entropy or linked to DNS Calculation).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Network Gateways, Core Network Switches, Endpoint Devices",
            "action": [
              "Symbolic Logic: For any destination IP flagged by other detection logic (DGA, DNS Calculation, etc.), search `conn.log` for all connections to that IP. If connections from a single source occur at regular intervals (e.g., every 5 minutes +/- 10 seconds) for a sustained period (e.g., > 1 hour), generate an alert for C2 beaconing.",
              "Statistical Method: For each source-destination IP pair in `conn.log`, analyze the time delta between consecutive connections. Calculate the standard deviation of these time deltas. A very low standard deviation indicates a highly regular, machine-generated interval. Also analyze connection size (`orig_bytes`, `resp_bytes`); a low mean and variance in packet sizes can also indicate beaconing. Flag pairs that are outliers on both regularity and size metrics.",
              "Machine Learning: Use a sequence analysis model to examine connection logs (`conn.log`) associated with a single internal host. Features for each connection event can include destination IP, port, duration, and bytes sent/received. The model can learn to identify sequences indicative of normal browsing versus anomalous sequences that represent beaconing (e.g., DNS -> connect -> idle -> repeat) to suspicious destinations."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]