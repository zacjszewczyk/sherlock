[
  {
    "information_requirement": "Is the adversary establishing persistence via event triggered execution?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546",
        "name": "Event Triggered Execution",
        "evidence": [
          {
            "description": "A new or modified event trigger, such as a Registry Run Key or Startup Folder item, is created where the associated executable's hash matches a known malicious hash from a threat intelligence feed, or the command-line arguments contain patterns associated with malicious activity.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13",
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers, Domain Controllers",
            "action": [
              "Continuously monitor Sysmon Event ID 13 (Registry Value Set) for modifications to common autorun registry keys (e.g., HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run, HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce) and Sysmon Event ID 11 (File Create) for new files in startup folders. For any associated process execution (Sysmon Event ID 1), extract the file hash and command line. Alert if the hash matches a known malicious hash from a threat intelligence feed or if the command line contains known malicious strings (e.g., 'mimikatz', 'invoke-expression').",
              "For processes launched from common persistence locations, build a baseline of process names and parent processes per host. Using frequency analysis, flag any process whose name or parent-child relationship falls below a low-frequency threshold (e.g., 5th percentile) for that host or its peer group. Concurrently, calculate the Shannon entropy of command-line arguments to detect obfuscation, flagging arguments with scores greater than 2 standard deviations above the baseline for that specific persistence mechanism.",
              "Develop a logistic regression or gradient boosting classifier trained on labeled historical data to classify newly created persistence entries as malicious or benign. Engineer features such as: process path rarity, command-line argument length and entropy, presence of suspicious keywords (e.g., 'powershell', '-enc', 'http'), parent process legitimacy, whether the executable is signed, and the time since the file was created. A high probability score from the classifier indicates a likely malicious persistence attempt."
            ]
          },
          {
            "description": "A modification is detected in a sensitive registry key known to trigger execution (e.g., Image File Execution Options, Winlogon Notify keys, COM CLSIDs), where the new value points to an executable located in a user-writable or non-standard directory such as %APPDATA%, %TEMP%, or C:\\Users\\Public.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 13",
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers",
            "action": [
              "Maintain a watchlist of critical registry keys for event-triggered execution (e.g., `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options`, `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify`). Monitor Sysmon Event ID 13 for write operations on these keys. Alert if the process performing the modification is not a known trusted installer and the new registry value contains a path to a non-standard, user-writable directory (e.g., `%APPDATA%`, `C:\\PerfLogs`).",
              "Establish a baseline of legitimate values, particularly file paths, within the monitored critical registry keys. For any modification, analyze the new path string. Flag new values where the path structure is an outlier compared to the historical baseline for that specific key, such as a path that does not end in a known system binary, has an unusual directory depth, or resides in a rare parent directory. Use frequency analysis on path components to identify these outliers.",
              "Use an anomaly detection model, such as an Isolation Forest, trained exclusively on the features of legitimate modifications to these sensitive locations. Features should include the modifying process name, its parent process name, the file path of the new value, time of day, and user context. Any modification that the model flags as a significant deviation from the learned 'normal' administrative activity should be alerted for investigation."
            ]
          },
          {
            "description": "A process not on an established baseline of normal startup processes is executed within 2 minutes of a user logon event (Windows Event ID 4624, Logon Type 2 or 10) and subsequently initiates one or more external network connections to a non-RFC1918 address space.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers, Core Network Switches, DNS Servers, Internet Gateway",
            "action": [
              "Join process creation events (Sysmon Event ID 1) with network connection logs (Zeek conn.log) on source IP and timestamp. Filter for processes created within 2 minutes after a successful interactive logon event (Windows Event ID 4624, Logon Type 2 or 10). Alert if such a process initiates an outbound connection to a non-local IP address that is present on a threat intelligence blocklist or resolves a domain (from Zeek dns.log) known to be malicious.",
              "For each host, create a historical baseline of processes that normally run at startup and their typical network behavior (e.g., destination ports, data volume, protocol). Monitor for startup processes not in this baseline (low-frequency outlier). For any such process, analyze its network connections from Zeek conn.log. Flag connections to destination ports that are rare for the host (<1st percentile) or connections with a data volume (orig_bytes + resp_bytes) that is more than 3 standard deviations above the average for startup processes.",
              "Implement a multivariate time series analysis model (e.g., VAR or LSTM) on the count of new process creations and network connections per host immediately following logon events. The model learns the expected temporal pattern and volume of activity. An alert is triggered when the model detects a statistically significant anomaly that deviates from the predicted pattern, suggesting an unexpected process is executing and establishing command and control."
            ]
          },
          {
            "description": "A WMI Event Filter (Sysmon Event ID 19) and a WMI Event Consumer (Sysmon Event ID 21) are created within a 5 minute time window, where the consumer is configured to execute a command-line payload exhibiting high entropy or containing script interpreter calls.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 19",
              "Sysmon Event ID 20",
              "Sysmon Event ID 21"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers, especially those with management roles",
            "action": [
              "Correlate Sysmon Event ID 19 (WmiEventFilter activity) and Sysmon Event ID 21 (WmiEventConsumer activity) on the host. Alert if both events occur for the same subscription within a 5-minute window and the consumer's payload (e.g., `CommandLineTemplate` or `ScriptText`) contains suspicious keywords like 'powershell', '-enc', 'IEX', 'DownloadString', or references `vbscript` or `jscript`.",
              "For all `CommandLineEventConsumer` or `ActiveScriptEventConsumer` creations (Sysmon Event ID 21), calculate the Shannon entropy of the payload (`CommandLineTemplate` or `ScriptText`). Establish a baseline entropy score for legitimate WMI consumer payloads in the environment. Alert on any new consumer whose payload entropy exceeds the 95th percentile of this baseline, indicating probable obfuscation or packed scripting.",
              "Train a Random Forest classifier to identify malicious WMI subscriptions. Features should include: time difference between filter and consumer creation, the process that created the subscription (from correlated Sysmon Event ID 1), the consumer type (e.g., `CommandLineEventConsumer`), the entropy of the payload, payload length, and the presence of script interpreters in the payload. The model's output (malicious/benign) can be used to trigger high-fidelity alerts."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary elevating privileges via event triggered execution?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546",
        "name": "Event Triggered Execution",
        "evidence": [
          {
            "description": "A process creation event is observed where the process is running as NT AUTHORITY\\SYSTEM, the parent process is a service host or task scheduler, and the executable's file hash matches a known malicious hash from a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers, Domain Controllers",
            "action": [
              "Filter all process creation events (Sysmon Event ID 1) where the `User` field is 'NT AUTHORITY\\SYSTEM'. Extract the file hash of the `Image` and compare it against a threat intelligence feed of known malware and privilege escalation tools (e.g., Juicy Potato, PrintNightmare exploits). Alert on any match.",
              "For all processes running as 'NT AUTHORITY\\SYSTEM', build a baseline of legitimate executable paths (`Image`). Alert when a SYSTEM process is launched from a path that is statistically rare in the environment (e.g., `%APPDATA%`, `%TEMP%`, or any path not in the top 99th percentile of common SYSTEM process paths). Also, flag SYSTEM processes whose parent process is rare (e.g., `explorer.exe`).",
              "Use a supervised classification model, like Random Forest, to determine the likelihood that a SYSTEM-level process is malicious. Features would include: process image path, parent process name, command-line arguments, whether the executable is signed, the `IntegrityLevel`, and the age of the executable on disk. The model, trained on known good and bad examples, can provide a risk score for each new high-privilege process execution."
            ]
          },
          {
            "description": "A process is created by a service with a known path-interception vulnerability (e.g., unquoted service path), and the process executable path corresponds to a malicious file placed in an intermediate directory by an adversary, rather than the intended system binary.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers",
            "action": [
              "Maintain a static list of services with unquoted paths, enumerated via `wmic service get name, pathname`. Monitor process creation events (Sysmon Event ID 1) with `services.exe` as a parent. Alert if the `Image` path does not exactly match the intended executable path, especially if the path includes spaces and the executed file is in a higher-level directory (e.g., `C:\\Program.exe` instead of `C:\\Program Files\\App\\App.exe`).",
              "Periodically scan for path-interception vulnerabilities (unquoted paths, weak folder permissions). For any identified vulnerable service, establish a baseline of the legitimate process execution path. Monitor for deviation from this path. Alert if the observed execution path has a different directory depth or parent directory than the expected path. Use frequency analysis to flag executions from directories that rarely host service executables.",
              "Use a graph-based anomaly detection model to map relationships between parent processes (like `services.exe` or `svchost.exe`), child processes, and image file paths. A legitimate service starting its designated binary forms a consistent, high-frequency subgraph. An alert is triggered when a new, anomalous edge appears, such as `services.exe` launching a process from a previously unseen path that is associated with a known vulnerable service configuration."
            ]
          },
          {
            "description": "A registry key or file system object controlling an event trigger is modified by a standard user account, and within a 5 minute window, the corresponding trigger executes a process under a high-privilege account context such as NT AUTHORITY\\SYSTEM.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Workstations, Windows Servers",
            "action": [
              "Correlate Sysmon Event ID 13 (Registry Modify) or 11 (File Create) on known persistence locations with subsequent process creation events (Sysmon Event ID 1). Alert if a modification is made by a non-administrative user (`User` is not in a privileged group) and the subsequently triggered process runs as 'NT AUTHORITY\\SYSTEM'.",
              "Build a profile of which users typically modify which event trigger configurations. If a rare user-key modification pair is observed, followed by a privileged execution, calculate the time delta. Flag chains of events where the modification is a statistical outlier (rare user-object pair) and the time delta to privileged execution is below a threshold (e.g., < 5 minutes), indicating a likely cause-and-effect relationship.",
              "Model this as a sequence classification problem. Create event sequences of `[modifying_user_privilege, modification_event, target_object, time_delta, execution_event, executed_process_privilege]`. Train a Recurrent Neural Network (RNN) or LSTM model to classify sequences as either benign (e.g., a standard software update process) or malicious privilege escalation. The model learns the temporal patterns of an attack chain and can flag suspicious sequences in real-time."
            ]
          },
          {
            "description": "A process running as NT AUTHORITY\\SYSTEM, which was initiated by an event trigger mechanism like the Task Scheduler, spawns a child process such as `cmd.exe` or `powershell.exe`, or initiates an external network connection to a destination not on a pre-defined allowlist.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Servers, Domain Controllers, Core Network Switches, DNS Servers, Internet Gateway",
            "action": [
              "From Sysmon Event ID 1, identify processes running as 'NT AUTHORITY\\SYSTEM' with a parent process associated with event triggers (e.g., `taskeng.exe`, `svchost.exe`). Alert if any of these processes spawn a child process with an image name of `cmd.exe`, `powershell.exe`, or `wscript.exe`. Correlate the SYSTEM process with Zeek conn.log data and alert if it connects to a destination IP on a CTI blocklist.",
              "For each privileged SYSTEM process launched by an event trigger (e.g., parent is `taskeng.exe`), build a baseline of normal child processes and network destinations. Alert when a new child process appears that is a statistical outlier (e.g., not in the top 98% of common child processes for that parent). Also, analyze network connections (Sysmon Event ID 3) and flag connections to domains with a low prevalence score across the enterprise (e.g., seen by < 5 hosts).",
              "Use a graph-based anomaly detection algorithm to model the process execution tree. Train the model on legitimate SYSTEM process activity initiated by event triggers. Flag any newly observed subgraph where a privileged, event-triggered process spawns an unusual sequence of children (e.g., `svchost.exe` -> `powershell.exe` -> `rundll32.exe`) or interacts with the network in a way that deviates structurally from the learned baseline."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]