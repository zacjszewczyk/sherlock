[
  {
    "information_requirement": "Is an adversary leveraging Unix shell environments for command execution on enterprise assets? (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.004",
        "name": "Unix Shell",
        "evidence": [
          {
            "description": "A successful interactive SSH login from a high-risk source IP (e.g., non-corporate, un-categorized ASN, or known-malicious) is followed within 5 minutes by network connections from the target host to known malicious C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssh.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Web Servers, Internal Linux Application Servers, SSH Jump Boxes, VPN Concentrators, Crown Jewel Asset Subnets, Network Egress Points",
            "action": [
              "Correlate successful interactive SSH logins (Zeek ssh.log, auth='SUCCESS') with subsequent outbound network traffic (Zeek conn.log, dns.log, http.log) from the same host (id.orig_h) within a 5-minute window. Generate an alert if the destination IP (id.resp_h), DNS query (query), or HTTP host header (host) matches a high-confidence threat intelligence feed of C2 servers.",
              "For each host, establish a 30-day baseline of outbound connection patterns (e.g., destination ports, protocols, data volume). Following a successful SSH login, monitor for statistically significant deviations. Generate an alert if the number of distinct destination ports used in a 1-hour window exceeds the 95th percentile of the baseline, or if the Shannon entropy of the destination IP address distribution increases by more than 3 standard deviations from the established norm.",
              "Train a time-series forecasting model (e.g., ARIMA or Prophet) on historical data for each host's outbound data volume per minute. After an SSH login event, if the observed outbound data volume exceeds the model's 99% prediction interval for a sustained period (e.g., more than 10 consecutive minutes), generate an alert for potential data staging or exfiltration."
            ]
          },
          {
            "description": "A Unix shell process (e.g., bash.exe, wsl.exe) is executed via the Windows Subsystem for Linux (WSL) with command-line arguments containing patterns for downloading and executing a remote payload (e.g., 'curl | bash').",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, Administrator Workstations, Windows Servers with WSL enabled, Build and CI/CD Servers",
            "action": [
              "Monitor process creation events (Windows Event ID 4688 or Sysmon Event ID 1) for ProcessName ending in 'wsl.exe' or 'bash.exe'. Scan the CommandLine field using regular expressions for patterns indicative of remote payload execution, such as 'curl .* | bash', 'wget .* | sh', or 'bash -c .*base64'. Generate an alert on any match.",
              "Calculate the character entropy and length for all CommandLine values associated with shell processes (wsl.exe, bash.exe). Establish a baseline of these metrics across the environment. Generate an alert when a command's entropy or length exceeds the 98th percentile of the established baseline, indicating potential obfuscation or complex, non-interactive commands.",
              "Train a supervised classification model (e.g., Random Forest or Gradient Boosting) on a labeled dataset of benign and malicious shell commands. Extract features such as command length, argument count, presence of URLs, IP addresses, and keyword counts ('curl', 'wget', 'base64'). Deploy the model to score new commands in real-time and generate an alert for commands classified as malicious with a confidence score above 0.9."
            ]
          },
          {
            "description": "A Unix shell process on a Windows host (e.g., bash.exe) is spawned by a parent process that does not typically initiate shell activity, such as a Microsoft Office application (WINWORD.EXE), a web browser (chrome.exe), or a PDF reader (AcroRd32.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations (Windows), Virtual Desktop Infrastructure (VDI), Microsoft Office and Web Servers, Terminal Servers",
            "action": [
              "Create and maintain an explicit allowlist of legitimate parent-child process relationships for shells (e.g., 'explorer.exe' -> 'wsl.exe', 'cmd.exe' -> 'bash.exe'). Monitor process creation events (Sysmon Event ID 1) and generate a high-priority alert for any observed parent-child relationship where the child is a Unix shell process and the pair is not on this list, especially for parents like 'WINWORD.EXE', 'EXCEL.EXE', or 'chrome.exe'.",
              "Profile all parent-child process pairs across the enterprise over a 30-day period to establish a frequency distribution. Generate an alert on the creation of any Unix shell process where the specific parent-child relationship falls into the bottom 1% of observed frequencies, indicating a rare and potentially unauthorized execution chain.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to process creation event data. Use a feature set including one-hot encoded parent process names, child process names, and user context (SID). Identify and investigate clusters that are small and isolated, as these represent anomalous process chains that deviate from common operational norms."
            ]
          },
          {
            "description": "A Unix host exhibits network scanning (e.g., connections to many hosts on a single port) or beaconing (e.g., periodic connections to a single host) immediately following an interactive SSH session that is anomalous based on time-of-day or geographic origin.",
            "data_sources": [
              "Zeek ssh.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Linux/Unix Servers (e.g., database, application), Network Egress Points, Authentication Servers, Internal Network Segments",
            "action": [
              "Enrich successful interactive SSH login events (Zeek ssh.log) with GeoIP data for the source IP. Generate an alert for any interactive login from a country where the organization has no business presence or from an IP not on an approved allowlist, especially when correlated with post-login DNS queries for dynamic DNS domains.",
              "For each user account, baseline their typical login hours and source IP Autonomous System Numbers (ASNs). Generate an alert if a user logs in outside their normal time window (> 3 standard deviations from their mean login hour) or from a new/rare ASN. Correlate this login with a post-login spike in the ratio of 'S0' (connection attempt, no reply) to total connections in Zeek conn.log, which indicates port scanning.",
              "Model C2 beaconing by applying a Fast Fourier Transform (FFT) to the time series of connection start times (ts) for a given source-destination IP pair. A strong, sharp peak in the resulting frequency spectrum indicates periodic, machine-generated traffic. Generate an alert when such a periodic signal is detected with a high signal-to-noise ratio following an anomalous SSH login."
            ]
          },
          {
            "description": "Network traffic analysis reveals a small file download (e.g., via curl or wget) from a low-reputation or uncategorized source, immediately followed by new outbound connections from the same host, consistent with a 'curl-pipe-shell' attack pattern.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal network segments containing Linux/Unix systems, Developer and DevOps Subnets, Cloud VPC Flow Logs",
            "action": [
              "Monitor Zeek http.log for requests where the 'user_agent' field contains 'curl' or 'wget'. Correlate with Zeek files.log to check the 'mime_type' ('text/plain', 'application/x-sh'). If the downloaded file is identified, generate an alert if the client IP initiates a new outbound connection to a destination matching a threat intelligence feed within 60 seconds.",
              "For each internal host, establish a baseline for the time delta between an HTTP file download and a subsequent new outbound connection to a different destination. An observed time delta in the lowest 1st percentile (near-instantaneous) is highly suspicious. Additionally, generate an alert for any HTTP download where the server 'host' header is a raw IP address rather than a fully qualified domain name.",
              "Use a sequence analysis model (e.g., a Hidden Markov Model) to detect the specific event chain: [1] DNS query for a non-categorized or newly-seen domain (Zeek dns.log), [2] HTTP GET request to that domain with a 'curl' User-Agent (Zeek http.log), [3] HTTP response with a small payload size (< 50KB) and script-like MIME type (Zeek files.log), [4] New outbound TCP/UDP connection from the same client to a different IP within 30 seconds (Zeek conn.log). Alert when the model identifies this sequence."
            ]
          },
          {
            "description": "A new or modified script file is created or executed from a known Unix/Linux persistence location, such as a cron directory, profile script, or systemd service unit file.",
            "data_sources": [
              "auditd logs",
              "Sysmon for Linux Event ID 11",
              "Sysmon for Linux Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System-level persistence locations on critical Linux servers (/etc/cron.d, /etc/init.d, /etc/rc.local, /etc/systemd/system, /etc/profile.d), User-specific persistence locations (~/.bashrc, ~/.profile, /var/spool/cron/)",
            "action": [
              "Monitor file creation (Sysmon for Linux Event ID 11) and process creation (Sysmon for Linux Event ID 1) events in sensitive directories like '/etc/cron.d/', '/etc/systemd/system/', and '/etc/profile.d/'. Generate an alert on any file creation or modification not associated with a known package manager process (e.g., 'yum', 'apt') or an authorized change management ticket.",
              "Upon detection of a new executable script, calculate the Shannon entropy of the file's content. Compare this value to a pre-computed baseline entropy for benign administrative scripts on the system. A score that is a statistical outlier (> 3 standard deviations above the mean) suggests the script may be packed, encrypted, or obfuscated. Also, flag scripts with unusually long, unbroken strings.",
              "Train an NLP model (e.g., using TF-IDF vectorization and a Naive Bayes classifier) on a corpus of known-good and known-bad shell scripts. Use the model to analyze the text content of new scripts and classify their intent based on the commands they contain (e.g., presence of 'nc', 'base64 -d', 'reverse shell one-liners', 'unset HISTFILE'). Generate an alert for any script classified as malicious."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]