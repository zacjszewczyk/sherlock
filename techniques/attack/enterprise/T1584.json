[
  {
    "information_requirement": "Are internal systems communicating with external infrastructure that has been compromised by an adversary for operational use (e.g., C2, staging)?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1584",
        "name": "Compromise Infrastructure",
        "evidence": [
          {
            "description": "A network connection is initiated from an internal host to an external IP address, domain, or URL that is present on a high-confidence threat intelligence feed of known compromised infrastructure (e.g., C2 servers, staging sites).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways (e.g., firewalls, proxies), Internal DNS servers, Endpoint devices",
            "action": [
              "[Symbolic Logic]: Create a watch list of IPs, domains, and URLs from high-confidence threat intelligence feeds. Join this watch list against real-time network logs (Zeek conn.log, dns.log, http.log). Generate a high-severity alert for any successful connection from an internal source IP to a destination on the watch list.",
              "[Statistical Analysis]: For each threat intelligence source, calculate a reputation score based on the frequency and age of indicators it provides. For an observed connection to a flagged indicator, weight the alert's risk score by the reputation of the intelligence source. Sum the risk scores for a given host over a 1-hour window. Alert if a host's cumulative score exceeds the 98th percentile for all hosts.",
              "[Machine Learning]: Train a supervised classification model (e.g., Random Forest) using labeled historical data where features include connection properties (port, protocol, data volume) and indicator properties (threat type, confidence score, age). Use the model to predict the probability that a new connection to a threat intelligence-flagged destination is malicious. Alert on connections with a probability score greater than 0.85."
            ]
          },
          {
            "description": "An SSL/TLS connection is observed using a certificate whose SHA1 hash, serial number, or Subject/Issuer details match entries in a threat intelligence feed of known malicious certificates.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways, Web proxies, Any system performing TLS inspection",
            "action": [
              "[Symbolic Logic]: Maintain a watch list of malicious certificate SHA1 hashes and serial numbers from threat intelligence. Scan all Zeek ssl.log entries in real-time and generate an alert if the 'id.resp_h' (destination) is associated with a certificate whose 'sha1' or 'serial' field matches an entry on the watch list.",
              "[Statistical Analysis]: For all observed certificates, calculate the global rarity of the certificate's issuer and subject organization. Create a risk score by combining the rarity of the issuer, the rarity of the subject, and whether the certificate is self-signed. Alert on connections where the combined risk score is in the top 5% (95th percentile) of all new certificates seen in the last 24 hours.",
              "[Machine Learning]: Use an unsupervised clustering algorithm (e.g., DBSCAN) on certificate features (validity period, key length, issuer entropy, subject common name entropy). Identify clusters of anomalous certificates that do not group with legitimate, high-volume certificates. Manually investigate samples from these anomalous clusters to identify new adversary campaigns."
            ]
          },
          {
            "description": "A network connection to an external destination exhibits one or more of the following: (1) A common application protocol (e.g., TLS, SSH) on a non-standard port. (2) A JA3/JA3S hash that matches a known malicious client/server fingerprint. (3) HTTP headers (e.g., User-Agent, Server) that match signatures of adversary C2 frameworks.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways, Internal network segments, Endpoint devices",
            "action": [
              "[Symbolic Logic]: Maintain and apply a ruleset that flags: (a) connections in conn.log where 'service' is 'ssl' but 'id.resp_p' is not 443; (b) connections in ssl.log where 'ja3' or 'ja3s' hash matches a known C2 fingerprint list; (c) connections in http.log where 'user_agent' or 'server' header matches a known C2 tool signature. Alert on any match.",
              "[Statistical Analysis]: For each internal host, calculate a baseline of destination ports used for common services (e.g., 'ssl', 'http'). Use a Z-score to detect significant deviations where a host begins using a rare port for a common service. For JA3 hashes, calculate the prevalence of each hash across the enterprise. Flag and score hosts that use JA3 hashes seen on less than 1% of other endpoints.",
              "[Machine Learning]: Train a time-series forecasting model (e.g., ARIMA) on the volume of connections per service (e.g., 'ssl') on non-standard ports. Trigger an alert when the observed volume significantly exceeds the forecasted volume with a 99% confidence interval, indicating a potential widespread C2 deployment."
            ]
          },
          {
            "description": "A DNS query is made for a domain that is either: (1) registered within the last 30 days (Newly Registered Domain), or (2) has a high character entropy score and low linguistic meaning, characteristic of a Domain Generation Algorithm (DGA).",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS servers, DNS forwarders, Egress network gateways",
            "action": [
              "[Symbolic Logic]: Ingest a feed of known DGA domains and Newly Registered Domains (NRDs). Join this feed against the 'query' field in Zeek dns.log. Alert on any DNS query for a domain on the list that is followed by a successful connection attempt in Zeek conn.log.",
              "[Statistical Analysis]: For each domain in dns.log, calculate the Shannon entropy of the query string. Establish a baseline entropy score for legitimate domains. Alert on queries where the entropy score exceeds the 99th percentile of the baseline. Also, track the age of all resolved domains and flag any connection to a domain less than 7 days old.",
              "[Machine Learning]: Train a binary classification model (e.g., LSTM or logistic regression) on a large dataset of known legitimate and DGA domains using features like domain length, vowel-to-consonant ratio, n-gram frequency, and entropy. Use the model to classify all new, unseen domains in real-time. Score and alert on domains classified as 'DGA' with high confidence."
            ]
          },
          {
            "description": "A sequence of connections from an internal host to a single external destination exhibits: (1) fixed-interval timing (beaconing), (2) a total data transfer volume (orig_bytes or resp_bytes) exceeding 3 standard deviations of the host's 30-day baseline for that destination, or (3) connection times occurring outside the host's established business hours baseline.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Server farm network segments, Endpoint devices",
            "action": [
              "[Symbolic Logic]: Create a rule to detect simple beaconing: if a host connects to the same destination IP and port more than 10 times in 60 minutes with a connection size less than 1KB, flag it. This is a simple, but effective, signature for some C2.",
              "[Statistical Analysis]: For each source-destination pair, calculate the time delta between consecutive connections. Compute the standard deviation of these deltas over a 24-hour window. A very low standard deviation indicates periodicity (beaconing). Alert if the standard deviation of time deltas is below the 1st percentile for all connections. Also, use Z-scores to flag outliers for 'duration', 'orig_bytes', and 'resp_bytes' fields per host.",
              "[Machine Learning]: Apply a time-series decomposition model (e.g., STL) to the bytes-transferred data for each host's external traffic. This separates the data into trend, seasonal (e.g., daily patterns), and residual components. A spike in the residual component indicates an anomaly that cannot be explained by normal patterns. Alert on significant residual spikes."
            ]
          },
          {
            "description": "An internal host establishes successful connections to a number of unique external IP addresses or domains that exceeds its individual 24-hour baseline by more than 3 standard deviations.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Servers with outbound internet access, DMZ segments",
            "action": [
              "[Symbolic Logic]: Create a hard threshold rule: alert if any single host queries for more than 1000 unique domains in one hour, or connects to more than 500 unique external IP addresses in one hour, excluding known high-volume services like CDNs or update servers.",
              "[Statistical Analysis]: For each host, create a rolling 24-hour baseline of the count of unique destination IPs. Calculate the mean and standard deviation. Generate an alert if the count in the current hour exceeds the mean by 3 standard deviations (Z-score > 3). This creates a dynamic, per-host threshold.",
              "[Machine Learning]: Use a change point detection algorithm (e.g., Pruned Exact Linear Time - PELT) on the time series of unique destination counts per hour for each host. The algorithm will automatically identify points in time where the statistical properties of the series change, indicating a shift in behavior (like the start of scanning). Alert on any detected change point."
            ]
          },
          {
            "description": "A connection is made to a known public file-sharing or code repository service from a host that is not on an approved list (e.g., a domain controller connecting to GitHub), or a file transfer to/from these services involves an executable, script, or encrypted archive.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (e.g., Domain Controllers, database servers), Endpoint devices, Network egress points",
            "action": [
              "[Symbolic Logic]: Maintain a list of domains for common file sharing/paste sites and a list of critical server subnets. Create a rule to alert if a source IP from a server subnet connects to a domain on the file-sharing list. Additionally, alert if Zeek files.log shows a transfer of a file with a MIME type of 'application/x-dosexec', 'application/x-sh', or 'application/zip' to/from one of these domains.",
              "[Statistical Analysis]: Profile the job roles/departments of users who typically access file-sharing sites. For each new connection, calculate the probability of that user's role accessing the site based on historical data. Flag connections from users in roles with a very low historical probability (e.g., less than 1% chance), representing a peer group anomaly.",
              "[Machine Learning]: Train a one-class SVM (Support Vector Machine) model on the features of 'normal' connections to file-sharing sites (e.g., source subnet, user agent, time of day, data volume). Use the model to identify connections that are outliers from this normal behavior. These outliers represent anomalous access that should be investigated."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]