[
  {
    "information_requirement": "Is the adversary executing commands or payloads using Dynamic Data Exchange (DDE)?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1559.002",
        "name": "Dynamic Data Exchange",
        "evidence": [
          {
            "description": "An office document (e.g., .docx, .xlsx, .csv, .rtf) or other DDE-capable file format is observed in network traffic containing literal strings 'DDEAUTO', 'DDE', or formulas initiating command execution such as '=cmd|', '=powershell|', or '=mshta|'.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek smb_files.log",
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points (e.g., internet gateway, email gateway), internal file servers.",
            "action": "1. (Symbolic) Using a SIEM or script, continuously scan network file transfer logs (Zeek files.log, http.log, smb_files.log) and extracted file content for case-insensitive regular expressions matching known DDE syntax, such as `DDEAUTO`, `\\sDDE\\s`, or `=cmd\\|`, `=powershell\\|`, `=mshta\\|`. Generate a high-severity alert upon match, including file hash, source/destination IPs, and protocol. 2. (Statistical) For files identified as CSVs, calculate the entropy of each cell's content. Establish a baseline for typical entropy in CSV files across the organization. Flag any CSV file where a cell's entropy exceeds the 99th percentile, as this may indicate obfuscated commands or payloads within a DDE formula. 3. (Machine Learning) Train a supervised classification model (e.g., Gradient Boosting, Random Forest) on a labeled dataset of benign and malicious documents. Use features such as the presence/count of DDE-related keywords, file metadata, structural properties (e.g., XML schema relationships for OOXML), and n-gram analysis of text content. Deploy the model to score new documents transferred over the network, alerting on those classified as malicious with high confidence."
          },
          {
            "description": "A process creation event is logged where a parent process, identified as a Microsoft Office application (e.g., WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE, OUTLOOK.EXE), spawns a direct child process that is a command-line interpreter or scripting engine (e.g., cmd.exe, powershell.exe, mshta.exe, rundll32.exe, wscript.exe, cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, terminal servers (e.g., Citrix), Microsoft Office 365 servers, application servers.",
            "action": "1. (Symbolic) Implement a SIEM rule to trigger a high-severity alert when a process creation event (Windows Event ID 4688 / Sysmon Event ID 1) occurs where the ParentProcessName is one of ('WINWORD.EXE', 'EXCEL.EXE', 'POWERPNT.EXE', 'OUTLOOK.EXE') and the NewProcessName is one of ('cmd.exe', 'powershell.exe', 'mshta.exe', 'rundll32.exe', 'wscript.exe', 'cscript.exe'). The alert must include the full command line for analysis. 2. (Statistical) For each Microsoft Office parent process, build a historical frequency distribution of all its child processes across the enterprise. Calculate the rarity of each parent-child pair. Trigger a medium-severity alert if an Office application spawns a child process that is in the bottom 5th percentile of frequency, indicating a statistically anomalous event. 3. (Machine Learning) Develop an anomaly detection model (e.g., Isolation Forest or One-Class SVM) trained on legitimate process creation events originating from Office applications. Feature vectors should include the parent process name, child process name, user context, command-line length, and command-line argument entropy. The model should score new events in real-time, flagging those with a high anomaly score as potential DDE abuse."
          },
          {
            "description": "A correlated sequence of events, occurring within a short time window (e.g., under 60 seconds) on a single host, consisting of: 1) a file creation/modification event for an Office document, followed by 2) a process creation event where an Office application spawns a child process, and finally 3) a network connection event originating from that child process to an external IP address.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, DMZ web servers, email servers, network perimeter.",
            "action": "1. (Symbolic) Create a SIEM correlation rule that joins three events on the same host within a 60-second window: a) a file creation for a document (`.doc*`, `.xls*`, `.csv`) (Sysmon Event ID 11), b) a process creation from an Office parent (Sysmon Event ID 1), and c) a network connection from the spawned child process (Sysmon Event ID 3). Alert if the destination IP in (c) is external. 2. (Statistical) Enrich the network connection event from the child process with domain/IP reputation and geolocation data. Calculate a risk score based on statistical rarity: add points if the destination ASN, country, or domain age is in the 98th percentile of rarity for the organization's overall traffic. A score exceeding a defined threshold triggers an alert. 3. (Machine Learning) Use a sequence mining algorithm (e.g., a Hidden Markov Model or Recurrent Neural Network) trained on benign user activity sequences (file open -> process spawn -> network connection). The model should identify anomalous sequences of events that deviate significantly from learned normal behavior, indicating a likely malicious chain of execution initiated by a document."
          },
          {
            "description": "A Microsoft Office process (e.g., WINWORD.EXE) directly initiates an outbound network connection to an IP address that is statistically rare for that application or user, or it spawns a child process that is not on a pre-defined allowlist of expected child processes for Office applications.",
            "data_sources": [
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers running Microsoft Office, network gateway.",
            "action": "1. (Symbolic) Create and maintain an explicit allowlist of known-good child processes for each MS Office application (e.g., EXCEL.EXE should not spawn cmd.exe). Implement a SIEM rule using process creation logs (Sysmon Event ID 1) to alert on any parent-child relationship not on this allowlist. 2. (Statistical) For each Office application, establish a multi-faceted baseline of normal network behavior (using Sysmon Event ID 3 / Zeek conn.log), including destination ports, destination IP subnets, and data volume. Monitor for outliers using a z-score or Inter-Quartile Range (IQR) method. For example, alert if an Office process connects to a destination port outside of {80, 443} or if the daily data transfer volume for a single process exceeds 3 standard deviations from the mean. 3. (Machine Learning) Apply unsupervised clustering algorithms (e.g., DBSCAN) to process and network events from Office applications. Features should include process name, user, destination IP/port, connection duration, and data transferred. The algorithm will group normal behaviors into dense clusters. Any event that does not belong to a cluster (i.e., is identified as noise) should be flagged as an anomaly for analyst review."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]