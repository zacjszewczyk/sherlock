[
  {
    "information_requirement": "Is the adversary executing commands or payloads using Dynamic Data Exchange (DDE)? (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1559.002",
        "name": "Dynamic Data Exchange",
        "evidence": [
          {
            "description": "A file transferred over the network (e.g., .docx, .xlsx, .csv, .rtf) contains embedded DDE syntax, identified by the presence of specific strings like 'DDEAUTO' or 'DDE' within file content, or formulas in spreadsheet files that initiate command execution (e.g., '=cmd|...').",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek smb_files.log",
              "Zeek smtp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points (e.g., internet gateway, email gateway), internal file servers, and cloud storage repositories (e.g., SharePoint, OneDrive) accessible by end-users.",
            "action": [
              "Using a file inspection tool or YARA rule integrated with network sensors, scan the content of transferred files for case-insensitive regular expressions such as `DDEAUTO`, `\\sDDE\\s`, or formulas like `=cmd\\|`, `=powershell\\|`, `=mshta\\|`. An alert should be generated upon a match, capturing the file hash, source/destination IPs, protocol, and user.",
              "For files identified as CSVs, parse each cell and calculate its Shannon entropy score. Establish a baseline entropy distribution for legitimate CSVs in the environment by analyzing a large sample over a 30-day period. Generate an alert for any CSV file where a cell's content entropy exceeds the 99.5th percentile of the established baseline, as this can indicate obfuscated code within a DDE formula.",
              "Train a supervised binary classification model (e.g., Gradient Boosting) on a labeled dataset of benign and malicious office documents. Extract features including: 1) frequency of DDE-related keywords, 2) file metadata (e.g., author, template), 3) structural properties (e.g., for OOXML, count of external relationship links), and 4) n-gram frequency analysis of text content. Deploy the model to score newly observed documents, alerting on those classified as malicious with a confidence score > 0.9."
            ]
          },
          {
            "description": "A process creation event is observed where a Microsoft Office application (e.g., WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE) is the parent process and a command-line interpreter or scripting host (e.g., cmd.exe, powershell.exe, mshta.exe) is the direct child process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, terminal servers (e.g., Citrix), Microsoft Office 365 servers, and application servers.",
            "action": [
              "Using a SIEM, create a detection rule that triggers a high-severity alert for any process creation event (Windows Event ID 4688 or Sysmon Event ID 1) where the `ParentProcessName` field is one of ('WINWORD.EXE', 'EXCEL.EXE', 'POWERPNT.EXE', 'OUTLOOK.EXE') and the `ProcessName` or `Image` field is one of ('cmd.exe', 'powershell.exe', 'mshta.exe', 'rundll32.exe', 'wscript.exe', 'cscript.exe'). The alert must include the full command line from the event for immediate triage.",
              "Aggregate all process creation events (Sysmon Event ID 1) over a 30-day rolling window to build a frequency table of all parent-child process pairs across the enterprise. Calculate the empirical probability of each observed pair. Trigger a medium-severity alert if an Office application spawns a child process where the corresponding parent-child pair probability falls in the bottom 5th percentile of all observed pairs, indicating a statistically rare event.",
              "Develop an anomaly detection model (e.g., Isolation Forest) trained on a baseline of legitimate process creation events originating from Office applications. Use features such as parent process name, child process name, user context, command-line length, and the Shannon entropy of the command-line arguments. The model should score new events in real-time, flagging those with a high anomaly score as potential DDE abuse."
            ]
          },
          {
            "description": "A sequence of events occurs on a single host within a short time window (e.g., < 60 seconds), consisting of: 1) a file creation/modification event for an Office document, followed by 2) a process creation event where an Office application spawns a suspicious child process, and finally 3) a network connection initiated by that child process to an external IP address.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, DMZ web servers, email servers, and the network perimeter.",
            "action": [
              "Create a SIEM correlation rule that triggers when the following three events are observed from the same `HostName` and `User` within a 60-second window: 1. Sysmon Event ID 11 where `TargetFilename` ends in `.doc*`, `.xls*`, `.csv`, or `.rtf`. 2. Sysmon Event ID 1 where the parent is an Office app and the child is a shell/interpreter. 3. Sysmon Event ID 3 where the `ProcessId` matches the child process from step 2 and the destination IP is not a private (RFC1918) address. Generate a critical alert with the full event chain.",
              "For alerts generated by the symbolic rule, enrich the destination IP from the network connection event (Sysmon Event ID 3) with threat intelligence and geolocation data. Calculate a risk score by summing weights for anomalous attributes: +10 for a destination country never before seen from the user's department, +15 for a destination ASN known for malicious hosting, +5 for a connection outside of business hours. An alert with a score exceeding a threshold of 20 is automatically escalated.",
              "Use a sequence analysis model like a Hidden Markov Model (HMM) trained on event chains from benign user sessions (e.g., file open -> helper process -> legitimate network call). The model learns normal transition probabilities between states (file event, process event, network event). Flag any sequence of events whose overall probability under the model is exceptionally low (e.g., below a 0.01 percentile threshold), indicating a deviation from normal execution flow."
            ]
          },
          {
            "description": "A Microsoft Office process (e.g., WINWORD.EXE) or its immediate, non-standard child process, initiates a network connection that is anomalous based on destination, port, or protocol.",
            "data_sources": [
              "Sysmon Event ID 3",
              "Sysmon Event ID 1",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers running Microsoft Office, and the network gateway.",
            "action": [
              "Using network connection logs (Sysmon Event ID 3, Zeek conn.log), create a SIEM rule to alert when a process with an image name of an Office application (`WINWORD.EXE`, `EXCEL.EXE`, etc.) initiates a connection where the destination port is not 80, 443, or 53. This rule must have exceptions for known-good corporate destinations like internal SharePoint or M365 update servers.",
              "For each Office application process, establish a baseline of normal network behavior using 30 days of network connection logs (Sysmon EID 3). The baseline should be a multi-dimensional profile including the set of unique destination ports, the distribution of data volume sent/received (e.g., mean and standard deviation), and the set of destination IP subnets. Alert if a new connection deviates significantly, such as if the data volume is > 4 standard deviations from the mean or the destination port is not in the established set for that process.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to network connection events originating from Office applications. Use features like source process name, user, destination IP, destination port, protocol, and bytes sent. The algorithm will group normal behaviors into dense clusters. Any event that is classified as noise (i.e., does not belong to a known cluster) should be flagged as a network anomaly for analyst review, as it represents a connection pattern not previously seen."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]