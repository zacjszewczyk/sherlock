[
  {
    "information_requirement": "Is an adversary forging SAML tokens to gain unauthorized credential access? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1606.002",
        "name": "SAML Tokens",
        "evidence": [
          {
            "description": "SAML assertion is signed by a certificate whose thumbprint or issuer name matches a known-bad indicator from threat intelligence.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Zeek x509.log",
              "Windows Event ID 1202"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "AD FS / Identity Provider servers, Cloud Identity Provider consoles (e.g., Entra ID, Okta), network gateways with TLS inspection, reverse proxies.",
            "action": [
              "Requires TLS inspection. Parse SAML assertions from network traffic (e.g., Zeek http.log, files.log) to extract the signing certificate thumbprint and issuer name. Compare these values against a watchlist of known-bad indicators from threat intelligence feeds. Generate a high-severity alert upon a match.",
              "For all observed SAML authentications, calculate the frequency of each signing certificate thumbprint and issuer over a 30-day rolling window. Flag any certificate or issuer whose usage frequency is a statistical outlier (e.g., below the 5th percentile) but is associated with authentications for multiple or high-privilege accounts, as this could indicate a newly introduced malicious certificate.",
              "Train a classification model (e.g., Random Forest) on features extracted from the SAML signing certificate, such as validity period, key strength, issuer attributes, and self-signed status. Use known-good certificates from the environment and known-bad certificates from threat intelligence to label training data. Classify new certificates as 'suspicious' or 'benign' and alert on 'suspicious' classifications."
            ]
          },
          {
            "description": "A SAML assertion contains an abnormally long lifetime value (e.g., NotOnOrAfter > 8 hours from issue time) or exhibits structural inconsistencies, such as a mismatch between NameID and Subject fields, indicative of forgery.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "AD FS / Identity Provider servers, application servers acting as Service Providers, network segments with full TLS inspection.",
            "action": [
              "Requires TLS inspection. Create a rule to parse SAML assertions from network traffic (Zeek http.log or files.log). Alert if the calculated lifetime (NotOnOrAfter - NotBefore) exceeds the maximum duration defined in organizational policy (e.g., 8 hours). Additionally, check for the presence of known artifacts from forging tools like ADFSpoof.",
              "For each service provider, establish a baseline of normal token lifetimes using a 30-day lookback. Alert when a new token's lifetime exceeds the 99th percentile of this baseline. Separately, calculate the entropy of the claims block for each user's tokens; a sudden, high-entropy event can indicate anomalous claim stuffing.",
              "Develop a time-series anomaly detection model (e.g., LSTM) trained on sequences of token attributes (lifetime, claim count, claim types) per user. The model learns a user's normal token request patterns. Flag sequences of requests with anomalous attributes, such as a sudden change in lifetime followed by unusual claims, for investigation."
            ]
          },
          {
            "description": "A successful SAML authentication is logged at a Service Provider (SP) without a corresponding token issuance event (Windows Event ID 1200/1202) or authentication event (Windows Event ID 4769) on the Identity Provider (IdP) for the same user within a short time window.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 1202",
              "Windows Event ID 1200",
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "AD FS / Identity Provider servers, Domain Controllers, key Service Provider application servers, network gateways.",
            "action": [
              "Create a SIEM correlation rule: For every SP log or Zeek http.log event indicating a successful SAML login for user 'U' at time 'T', search for an IdP log (Windows Event ID 1200 or 1202) for user 'U' within a T-2min to T window. If no IdP log is found, generate an alert for a potential 'Golden SAML' or 'Phantom SAML Login' event.",
              "On an hourly basis, calculate the ratio of SP-observed SAML logins to IdP-issued tokens per application. Establish a baseline for this ratio over a 30-day period. Trigger an alert if the current hourly ratio deviates from the historical baseline by more than 3 standard deviations, which could indicate a flood of forged tokens not originating from the IdP.",
              "Use a clustering algorithm (e.g., DBSCAN) on login events with features including user, source IP, service provider, and a binary feature 'IdP_Log_Present'. Events that cluster together and consistently lack the 'IdP_Log_Present' feature are highly suspicious and can identify groups of related phantom logins potentially representing a single adversary campaign."
            ]
          },
          {
            "description": "A successful SAML-based authentication for a user account originates from an IP address that is geographically impossible given the user's previous login, or the login's source ASN/country is statistically rare for that user.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network gateways, VPN concentrators, cloud infrastructure VPCs, application servers logging authentication events, IdP servers.",
            "action": [
              "For each successful SAML login (identified in SP logs, Zeek http.log, or Windows Event ID 4624), enrich the source IP with geolocation data. Compare the location and timestamp with the user's previous login. If the calculated speed required to travel between the two points exceeds a physically impossible threshold (e.g., 1000 km/h), trigger an 'Impossible Travel' alert.",
              "For each user, maintain a 90-day baseline profile of their source countries, ASNs, and typical login hours. For each new SAML login, calculate a risk score. Add points if the source country/ASN is outside the user's top 95% most frequent locations, or if the login hour falls into the user's least common 5% of login hours. An aggregated score exceeding a statistically determined threshold triggers an alert.",
              "Train a one-class SVM model for each user based on features from their normal login behavior (e.g., source IP subnet, user agent from http.log, time of day, day of week). Any new SAML login that the model classifies as an outlier from the learned 'normal' boundary is flagged as a potential compromise, indicating it does not fit the user's established pattern."
            ]
          },
          {
            "description": "A logon session initiated via SAML is immediately followed by high-privilege activity (e.g., special privilege assignment, process creation from a high-integrity process) that is anomalous for the user's established role or behavior.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4672",
              "Windows Event ID 4673"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, high-value servers (e.g., database, financial), endpoint devices of privileged users, Certificate Authority servers, code repositories and CI/CD pipeline servers.",
            "action": [
              "Correlate a SAML-based logon (Windows Event ID 4624 with Logon Type 3 or 10) with subsequent events sharing the same Logon ID. Trigger an alert if this Logon ID is associated with a Special Privilege Assignment event (Windows Event ID 4672) within 10 minutes of logon, and the user is not a member of a pre-defined administrative group.",
              "For each user role, establish a baseline of normal post-authentication process command-line arguments using entropy. Calculate the entropy of command-line arguments for processes (from Windows Event ID 4688) spawned within a user's session. A command-line with an entropy score significantly higher than the user's baseline (e.g., >3 standard deviations) may indicate obfuscated or unusual commands following a potentially forged login.",
              "Use a graph-based anomaly detection model where nodes represent users, processes, and network destinations. Train the model on normal post-SAML-authentication activity graphs. A new login that results in a sub-graph with a rare or anomalous structure (e.g., a non-admin user's session spawning a process that connects to a domain controller over RPC) would be flagged by the model as a high-risk event."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]