[
  {
    "information_requirement": "Is the adversary conducting reconnaissance to identify business tempo, or leveraging this knowledge for malicious activity?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1591.003",
        "name": "Identify Business Tempo",
        "evidence": [
          {
            "description": "Network traffic to or from the perimeter originating from IP addresses or using domains/JA3 hashes known to be associated with reconnaissance-as-a-service platforms or specific reconnaissance tools.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, external-facing web servers, DNS resolvers",
            "action": "1. Symbolic Logic: Continuously match source/destination IPs from Zeek conn.log, queried domains from Zeek dns.log, and JA3/JA3S hashes from Zeek ssl.log against a high-confidence threat intelligence feed for known reconnaissance tools and services. Alert on any match. 2. Statistical Method: For IPs that match CTI, calculate the frequency of connections over a 24-hour period. If the connection count is below the 5th percentile of all external traffic but persists over multiple days, flag for review. This helps filter out noisy scanners and focus on low-and-slow activity. 3. Machine Learning: Train a classification model (e.g., Logistic Regression) using labeled historical data of known benign and malicious reconnaissance traffic. Use features like connection duration, bytes transferred, protocol, and CTI match status. Use the model to score new, unknown traffic for its likelihood of being malicious reconnaissance."
          },
          {
            "description": "A consistent pattern of repeated, passive queries from a single external source to services that reveal activity (e.g., VPN login pages, webmail portals) over an extended period without login attempts, to baseline server response times or observe activity patterns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, webmail portals, single sign-on (SSO) platforms",
            "action": "1. Symbolic Logic: Create a rule that triggers when an external source IP (id.orig_h in Zeek conn.log) connects to a defined list of critical service ports (e.g., 443 on VPN/webmail IPs) more than 10 times in a 30-day period but is never associated with a successful login event from that IP range. 2. Statistical Method: For each external source IP connecting to these services, calculate the time delta between consecutive connections. Identify IPs where the standard deviation of this time delta is very low, indicating automated, periodic probing. Also, track the ratio of connections to failed login attempts (Windows Event ID 4625) from the same source; a high ratio with zero successful logins is suspicious. 3. Machine Learning: Use time series analysis (e.g., ARIMA) to model the expected volume of connections to these external services. Anomaly detection on this time series can reveal unusual, low-frequency patterns that deviate from the normal ebb and flow of user access, especially during off-hours."
          },
          {
            "description": "Anomalous long-term, low-frequency information gathering from a single external entity across a wide range of services, inconsistent with normal user or automated scanner behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Demilitarized Zone (DMZ), public-facing application servers, cloud service endpoints",
            "action": "1. Symbolic Logic: Define a set of 'high-information' services (e.g., DNS, SMTP, specific web app ports). Create a rule that flags any external IP that probes more than 5 of these services within a 30-day window without generating any legitimate application-layer traffic. 2. Statistical Method: For each external source IP over a 30-day window, calculate the Shannon entropy of the destination ports (id.resp_p in Zeek conn.log) it connects to. Flag IPs in the top 98th percentile for port entropy but in the bottom 25th percentile for total connection count. This isolates wide, slow scanning from noisy, fast scanners. 3. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on a dataset of external source IPs. Feature engineer variables such as total connections, unique destination ports, average bytes sent, and the standard deviation of inter-arrival times between connections. Identify and investigate small, outlier clusters that are distant from the large clusters of normal traffic and automated scanners."
          },
          {
            "description": "Execution of sensitive commands or access to critical assets during identified low-activity periods (nights, weekends, holidays), deviating from established user and system baselines of activity.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, critical file servers, privileged user workstations, database servers",
            "action": "1. Symbolic Logic: Create a high-severity rule that alerts on any interactive privileged login (Logon Type 2 or 10 in Event ID 4624) followed by the execution of specific discovery commands (e.g., net.exe, whoami.exe, nltest.exe in Event ID 4688) occurring during defined non-business hours (e.g., 10 PM - 6 AM local time, weekends, and a list of company holidays). 2. Statistical Method: For each user, establish a baseline of normal activity hours by calculating the mean and standard deviation of their login times (Event ID 4624) over a 90-day period. Generate a risk score for any activity (e.g., process execution, file access) that occurs more than 2 standard deviations outside their typical hourly activity window. 3. Machine Learning: Develop a time series model for each critical server that forecasts expected network traffic volume (Zeek conn.log) and file access counts (Event ID 4663) based on historical data, accounting for time-of-day and day-of-week seasonality. Use this model to detect anomalous spikes in activity during predicted low-tempo periods."
          },
          {
            "description": "Creation or modification of scheduled tasks or services configured to execute payloads or scripts specifically during non-business hours, weekends, or holidays.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Microsoft-Windows-TaskScheduler/Operational Event ID 106",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows servers and workstations, especially those of privileged users or with access to critical systems",
            "action": "1. Symbolic Logic: Create a rule to alert on the creation of any new scheduled task (Event ID 4698) where the task's XML definition contains a <TimeTrigger> or <CalendarTrigger> set for a time between 10 PM and 6 AM, or for a Saturday/Sunday, and the <Actions> block contains suspicious commands like 'powershell.exe -enc'. 2. Statistical Method: Profile the frequency of scheduled task creation/modification per host and user. Calculate a baseline rate. Alert when a user or host creates tasks at a rate exceeding the 95th percentile of their own or their peer group's historical behavior, especially if those tasks are configured to run off-hours. 3. Machine Learning: Train a classification model (e.g., Gradient Boosting Machine) to predict if a newly created scheduled task is malicious. Features can include the user context it runs as (e.g., SYSTEM), whether the action is obfuscated, the rarity of the executable path, and if the trigger is for off-hours."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]