[
  {
    "information_requirement": "Is the adversary moving laterally by using direct connections to cloud virtual machines?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1021.008",
        "name": "Direct Cloud VM Connections",
        "evidence": [
          {
            "description": "A direct interactive cloud VM login event is followed within 30 minutes by an outbound network connection from the same VM to an IP address or domain on a C2 threat intelligence feed.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Logs",
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud management plane (e.g., AWS CloudTrail, Azure Activity Logs), Cloud VM instances (e.g., Windows Event Logs), Virtual network traffic sensors (e.g., VPC Flow Logs, Zeek sensors), and Egress network gateways.",
            "action": [
              "Create a correlation rule that triggers when a cloud API event for direct VM access (e.g., AWS SSM 'StartSession', Azure 'RunCommand') is recorded for a specific VM, and within 30 minutes, a network flow from that same VM's IP address (in Zeek conn.log) has a destination IP or FQDN (from Zeek dns.log) that matches an entry in the C2 threat intelligence feed. Alert on a match.",
              "For each VM, establish a 30-day baseline of destination port entropy for outbound connections using Zeek conn.log. Following a direct VM access event, calculate the destination port entropy for all outbound connections from that VM in the next 60 minutes. Alert if the calculated entropy value exceeds 3 standard deviations above the mean of the historical baseline for that specific VM.",
              "For each VM, train a time-series forecasting model (e.g., Prophet, ARIMA) on the hourly volume of outbound data ('orig_bytes' in Zeek conn.log). After a direct VM access event, feed the observed hourly outbound data volume into the model. Alert if the observed volume significantly exceeds the model's predicted upper confidence bound for that hour, indicating anomalous data transfer."
            ]
          },
          {
            "description": "A direct interactive cloud VM login event is followed within 60 minutes by a process creation event on the same VM where the process name or command-line arguments match known post-exploitation tool signatures.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "AWS CloudTrail",
              "Azure Activity Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud VM instance event logs (e.g., Windows Event Log, Linux auditd), Cloud management plane logs, and EDR agent logs.",
            "action": [
              "Create a correlation rule that triggers when a direct cloud VM access event occurs, and is followed within 60 minutes on the same VM by a process creation event (Windows Event ID 4688) where the 'CommandLine' or 'NewProcessName' field matches a watchlist of known malicious tool names, discovery commands, or suspicious argument patterns (e.g., 'mimikatz.exe', 'powershell -enc', 'nltest /dclist').",
              "For each common process name on a VM (e.g., 'powershell.exe', 'cmd.exe'), create a historical baseline of its command-line arguments. After a direct VM access event, for each new process (Windows Event ID 4688), calculate the character-level entropy of its command-line string. Alert if the entropy is in the top 5th percentile for that specific process name, suggesting obfuscation or unusual complexity.",
              "Following a direct VM access event, feed all subsequent command lines (from Windows Event ID 4688) into a pre-trained machine learning classifier. The model, trained on features such as argument length, special character ratio, n-gram frequency, and entropy, will output a maliciousness score. Alert on any command line that receives a score above a predefined threshold (e.g., 0.9), indicating high confidence of malicious intent."
            ]
          },
          {
            "description": "A successful interactive login to a cloud VM (e.g., Logon Type 2 or 10) exhibits multiple anomalous properties simultaneously, such as a source IP from a new geographic location for that user and occurring at an unusual time.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "AWS CloudTrail",
              "Azure Activity Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud VM instance authentication logs (e.g., Windows Security Log), Cloud management plane logs, Identity and Access Management (IAM) logs, and Geolocation databases.",
            "action": [
              "Create a rule that alerts on a successful interactive logon (Windows Event ID 4624, Logon Type 2 or 10) to a cloud VM where the source IP address's country of origin is not on an allow-list of expected countries for the organization.",
              "For each user account, build a historical profile of login behavior including source country, source ISP, and login hour-of-day. For each new successful login (Windows Event ID 4624), compare its attributes to the user's profile. Increment a risk score for each deviation (e.g., new country, new ISP, non-working hour). Alert if the cumulative risk score for a single login event exceeds the 98th percentile of scores for that user's historical logins.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to historical user login data, using features such as user, source IP geolocation, and timestamp. New login events that do not map to an established cluster are flagged as outliers. Alert on all outlier login events for analyst investigation, as they represent a significant deviation from established patterns of activity."
            ]
          },
          {
            "description": "A direct interactive cloud VM login event is followed within one hour by a spike in outbound data transfer from that VM, significantly exceeding its historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156",
              "Windows Event ID 4624",
              "AWS CloudTrail",
              "Azure Activity Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors capturing VPC/VNet flow data (e.g., Zeek sensors), Egress network gateways, Cloud VM network kernel logs (e.g., Windows Event ID 5156), and DNS server logs.",
            "action": [
              "Create a correlation rule that triggers when a direct cloud VM access event occurs, and is followed within 60 minutes by a DNS query (from Zeek dns.log) from the same VM for a domain belonging to a known dynamic DNS provider (e.g., no-ip.com, duckdns.org) that is not on an organizational allow-list.",
              "For each cloud VM, calculate a 30-day rolling baseline for the 99th percentile of total outbound bytes per hour ('orig_bytes' from Zeek conn.log). After a direct VM access event, if the total outbound bytes in the subsequent hour exceeds this 99th percentile threshold for that VM, generate an alert.",
              "For each VM, train a multivariate time-series anomaly detection model on network behavior metrics (e.g., bytes sent, connection count, unique destination ports per hour). After a direct VM access event, feed the subsequent network metrics into the model in real-time. Alert if the model flags the sequence of behavior as anomalous, indicating a significant deviation from the learned normal network profile."
            ]
          },
          {
            "description": "A sequence of events on a single cloud VM within a 60-minute window: 1) A direct interactive login, 2) Execution of at least two distinct discovery commands (e.g., 'whoami', 'ipconfig', 'net user'), and 3) An outbound connection attempt to another internal network segment on an administrative port (e.g., RDP/3389, SSH/22, WinRM/5985).",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4648",
              "Zeek conn.log",
              "AWS CloudTrail",
              "Azure Activity Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud VM instance logs (Security and System), Cloud management plane logs, Network sensors monitoring east-west traffic between internal segments, and Domain Controller authentication logs.",
            "action": [
              "Create a stateful correlation rule that triggers on a single VM within a 60-minute window when: 1) A direct cloud VM access event occurs, followed by 2) At least two process creation events (Windows Event ID 4688) for common discovery commands (e.g., 'whoami', 'net', 'ipconfig', 'hostname'), followed by 3) An outbound connection attempt (Zeek conn.log) to a different internal IP address on an administrative port (e.g., 22, 3389, 5985). Alert on the full sequence.",
              "Profile user sessions by the count of discovery-related commands (e.g., 'net.exe', 'ipconfig.exe', 'nltest.exe', 'whoami.exe') executed within the first 60 minutes after login. Establish a baseline for this count per user role (e.g., standard admin vs. developer). Alert if a user's session count exceeds the 95th percentile for their role, indicating abnormally high reconnaissance activity.",
              "Represent user sessions as sequences of events (e.g., login -> process_create -> net_conn -> process_create). Train a sequence-based machine learning model (like an LSTM autoencoder) on sequences from normal administrative sessions. After a direct VM access event, feed the new event sequence into the model. Alert if the model's reconstruction error for the sequence is high, indicating it is anomalous and does not conform to learned legitimate patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]