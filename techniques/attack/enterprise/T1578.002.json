[
  {
    "information_requirement": "Is the adversary creating new cloud instances to evade defenses or stage data?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1578.002",
        "name": "Create Cloud Instance",
        "evidence": [
          {
            "description": "An instance creation event (e.g., AWS RunInstances) where the initiating principal's source IP address is present in a high-confidence threat intelligence feed, or the source image ID (e.g., AMI) is on a deny-list of known malicious or non-vetted public images.",
            "data_sources": [
              "AWS CloudTrail logs (RunInstances event)",
              "Azure Activity Logs (Microsoft.Compute/virtualMachines/write event)",
              "Google Cloud Admin Activity audit logs (gcloud compute instances create event)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane and API endpoints",
            "action": [
              "[Symbolic] For each instance creation event, correlate the `sourceIPAddress` field with a CTI feed of known malicious IPs. Simultaneously, compare the `imageId` against a curated deny-list of public images known to be malicious or unvetted. Alert on any match.",
              "[Statistical] For all instance creation events, calculate the rarity of the source Autonomous System Number (ASN) and geographic location based on historical data. Create a risk score by adding points for creations from ASN/geolocations seen less than 1% of the time in the last 90 days. An event with a high rarity score, even without a direct IOC match, indicates a statistical anomaly.",
              "[ML] Train a classification model (e.g., Random Forest) on historical instance creation events, using features like source IP geolocation, ASN, image ID properties (public/private, owner), and time of day. Label events based on past incident data or CTI matches. Use the model to predict the probability of a new instance creation event being malicious."
            ]
          },
          {
            "description": "An instance creation event where the instance name, tags, or the API call's User-Agent string contains patterns matching known offensive security tools, suspicious keywords (e.g., 'temp'), or exhibits character entropy in the top 99th percentile of the established baseline.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Admin Activity audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane",
            "action": [
              "[Symbolic] Parse the `userAgent`, instance name, and tag fields from instance creation events. Apply regular expressions to match against a list of known malicious tool signatures (e.g., 'Pacu', 'CloudSploit'), common temporary placeholders (e.g., `^test-`, `temp-\\d+$`), or other suspicious patterns. Alert on a match.",
              "[Statistical] For each new instance, calculate the Shannon entropy of the instance name. Establish a baseline of entropy scores for normally created instances within the environment. Flag instances with names that fall in the top 99th percentile of entropy, as this can indicate randomly generated names used by malicious scripts.",
              "[ML] Use a Natural Language Processing (NLP) classifier to analyze the text in instance names and tags. Train the model to distinguish between legitimate, project-related naming conventions and anomalous or malicious-looking names. The model can flag names that do not conform to learned organizational grammar or patterns."
            ]
          },
          {
            "description": "An instance creation event initiated by a user principal that has been dormant for over 90 days, was created within the last 72 hours, or whose instance creation frequency deviates more than 3 standard deviations from their own or their peer group's historical baseline.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Admin Activity audit logs",
              "Identity Provider (IdP) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity and Access Management (IAM) service logs",
            "action": [
              "[Symbolic] For every instance creation event, check the `userIdentity.principalId`. Query IAM or IdP data to determine the principal's creation date and last activity date. Alert if the account was created < 72 hours ago or has been inactive for > 90 days.",
              "[Statistical] For each user, maintain a rolling 30-day baseline of their instance creation frequency. Use a Z-score to detect when a user's daily creation count exceeds 3 standard deviations from their typical behavior. Also, compare the user's activity to a peer group baseline (e.g., other developers) and flag significant deviations.",
              "[ML] Employ an unsupervised learning algorithm like DBSCAN to cluster users based on multi-dimensional activity features (e.g., frequency of API calls, types of resources created, time of day). Monitor for users that are identified as outliers (noise points), as this could indicate a compromised account performing anomalous actions."
            ]
          },
          {
            "description": "An instance creation event specifying a configuration that is statistically rare for the organization, such as creation in an unused geographic region, use of a non-standard instance family, or attachment of a new or overly permissive security group (e.g., allowing 0.0.0.0/0 on a sensitive port).",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Admin Activity audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane and network configuration logs (VPC/VNet)",
            "action": [
              "[Symbolic] For each new instance, inspect the attached security group rules. Trigger an alert if any rule allows inbound traffic from `0.0.0.0/0` or `::/0` on ports other than 80/443, such as 22, 3389, or 1433, unless explicitly defined in an exception list.",
              "[Statistical] Profile historical instance creation events to build a frequency distribution for attributes like `awsRegion` and `instanceType`. Calculate the rarity of each attribute in a new creation event. Flag any event where the combination of rare attributes (e.g., an instance created in an unused region with a rare instance type) generates a risk score exceeding the 98th percentile.",
              "[ML] Develop a time-series anomaly detection model (e.g., ARIMA) for the volume of instances created per region and per type. A sudden, unexplained spike in creations in a specific region or of a specific type that deviates from the model's forecast could indicate automated, malicious activity."
            ]
          },
          {
            "description": "A sequence of API calls occurring within a short time window (< 15 minutes) consisting of: 1) `CreateSnapshot`, 2) `RunInstances`, and 3) `AttachVolume`, especially when the new instance is in a different region or has a less restrictive security policy than the snapshot's source.",
            "data_sources": [
              "AWS CloudTrail logs (CreateSnapshot, RunInstances, AttachVolume events)",
              "Azure Activity Logs (Microsoft.Compute/snapshots/write, Microsoft.Compute/virtualMachines/write, Microsoft.Compute/virtualMachines/disks/write events)",
              "Google Cloud Admin Activity audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane and data storage services (e.g., EBS)",
            "action": [
              "[Symbolic] Create a stateful detection rule that triggers on a `CreateSnapshot` event. If, within 15 minutes, a `RunInstances` event is followed by an `AttachVolume` event using the ID of the snapshot from the first event, fire an alert. The alert priority is critical if the `awsRegion` of the new instance differs from the snapshot's source.",
              "[Statistical] Analyze the time delta between `CreateSnapshot`, `RunInstances`, and `AttachVolume` events for all historical sequences. Calculate the distribution of these time deltas. Flag any sequence where the time delta falls below the 5th percentile, indicating an abnormally fast, likely scripted, operation.",
              "[ML] Use a sequence analysis model, such as a Hidden Markov Model (HMM), to learn normal sequences of cloud API calls for operations like disaster recovery testing or application scaling. The model can then identify and score the likelihood of an observed sequence (e.g., Snapshot -> New Instance -> Attach Volume) being anomalous compared to learned legitimate workflows."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]