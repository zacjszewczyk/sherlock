[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying power settings to prevent system sleep or lockdown? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1653",
        "name": "Power Settings",
        "evidence": [
          {
            "description": "A process creation event is recorded where the executable's file hash (MD5, SHA1, or SHA256) matches a known malicious hash from threat intelligence feeds, specifically for malware families documented to use T1653.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical application servers, Domain Controllers",
            "action": [
              "Symbolic: Continuously monitor process creation events (Windows Event ID 4688) and correlate the file hash of the new process against a threat intelligence feed of known-bad hashes associated with malware using T1653. Generate a high-severity alert upon a match.",
              "Statistical: For processes not matching known-bad hashes, calculate the prevalence of each hash across the enterprise. Flag executables that are statistically rare (e.g., seen on fewer than 0.1% of endpoints) and are observed executing power-setting modification commands for further investigation.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from process execution events (parent process, command-line length, entropy of process name, hash prevalence) to predict the likelihood that a given process is malicious. A high probability score for a process that modifies power settings should trigger an alert."
            ]
          },
          {
            "description": "The command-line utility `powercfg.exe` is executed with arguments to alter power schemes, disable sleep/hibernate modes, or set display/sleep timeouts to zero (indefinite).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical application servers, Domain Controllers",
            "action": [
              "Symbolic: Filter process creation events (Windows Event ID 4688) where the process name is `powercfg.exe`. Use regular expressions to search the command line for patterns such as `/hibernate off`, `/change standby-timeout-ac 0`, `/change monitor-timeout-ac 0`, or `/setactive`. Alert on any matches, as these are highly indicative of this technique outside of managed configuration changes.",
              "Statistical: Establish a baseline of `powercfg.exe` command-line argument usage across the environment. Calculate the frequency of different argument combinations. Alert when a command-line combination deviates significantly from the norm (e.g., falls outside the 99th percentile of common commands) or is executed by a user for the first time.",
              "Machine Learning: Develop a time-series anomaly detection model for each host that monitors the rate of `powercfg.exe` executions. A sudden spike in executions on a host, especially outside of maintenance windows, can indicate malicious scripting or user activity and should be flagged as an anomaly."
            ]
          },
          {
            "description": "The `reg.exe` command-line utility or direct API calls are used to add or modify registry values related to power settings, screen savers, or the system lock screen.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical application servers, Domain Controllers",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688) for `reg.exe` and registry modification events (Windows Event ID 4657). Create rules to detect `ADD` or `MODIFY` operations targeting specific power-related registry paths, such as `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Power\\PowerSettings`, `HKCU\\Control Panel\\Desktop\\ScreenSaveActive`, or `ScreenSaveTimeout`. Alert when values are set to disable features (e.g., '0').",
              "Statistical: Profile the normal rate and source of modifications to power-related registry keys. Calculate the entropy of the command-line arguments used with `reg.exe` when modifying these keys. A command with unusually high or low entropy, or a modification originating from a statistically rare user or process, should increase the event's risk score.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features from registry modification events (process path, user context, target key, time of day). Identify clusters of anomalous modifications that do not group with known administrative or legitimate software behavior. These outlier clusters represent potentially malicious activity."
            ]
          },
          {
            "description": "A power management utility, such as `powercfg.exe`, is spawned by a parent process that is not a standard shell or administrative tool (e.g., parent is `winword.exe`, `acrordr32.exe`, `wscript.exe`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical application servers",
            "action": [
              "Symbolic: For every `powercfg.exe` execution (Windows Event ID 4688), check the Parent Process Name against a static allowlist of expected parents (e.g., `explorer.exe`, `cmd.exe`, `powershell.exe`, `mmc.exe`, `taskeng.exe`). Any execution from a parent not on this list (e.g., `outlook.exe`, `chrome.exe`) should trigger an immediate alert.",
              "Statistical: Build a statistical model of parent-child process relationships across the enterprise. For each host, calculate the conditional probability P(child=`powercfg.exe` | parent=`process_name`). Flag any instance where this probability is historically very low (e.g., < 0.01%) as a rare and suspicious event.",
              "Machine Learning: Train a supervised learning model to classify parent-child process pairs as benign or suspicious. Features could include the parent process name, child process name, command-line arguments, and user context. Use the model to score the risk of each `powercfg.exe` execution based on its parentage."
            ]
          },
          {
            "description": "A temporal correlation is observed where a power setting modification event is followed within a short time window (e.g., 5 minutes) by the initiation of a long-running or periodic network connection to an external destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical application servers, Network Egress Points",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when a power setting modification event (from `powercfg.exe` or `reg.exe` in Windows Event ID 4688/4657) from a specific host is followed within 10 minutes by a network connection from the same host (Zeek conn.log) to a destination IP on a threat intelligence blocklist.",
              "Statistical: After detecting a power setting modification, monitor the host's network traffic in `Zeek conn.log`. Calculate the duration and data volume for all subsequent connections. Flag connections that fall into high-percentile durations (e.g., > 99th percentile of all connection durations) but have low-percentile data volumes, a pattern characteristic of C2 heartbeating.",
              "Machine Learning: Implement a time-series forecasting model for each host's network beaconing behavior (e.g., connections of similar size to the same destination at regular intervals). When a power setting modification event occurs, check if a new, previously unobserved beaconing pattern emerges shortly thereafter. Anomaly scores from the model that spike after the host event indicate a likely C2 channel established for persistence."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]