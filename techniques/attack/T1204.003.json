[
    {
        "information_requirement": "Has the adversary achieved execution through a malicious image?",
        "tactic_id": "TA0002",
        "tactic_name": "Execution",
        "indicators": [
            {
                "technique_id": "T1204.003",
                "name": "Malicious Image",
                "evidence": [
                    {
                        "description": "Execution of a container based on an image whose hash or tag is present on a known malicious image threat intelligence feed.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "From process creation logs (Windows Event ID 4688), parse container run commands to extract the image name and tag (e.g., from `docker run <image>`). If possible, correlate with image pull events from container daemon logs to get the image digest (SHA256 hash). Inner join the extracted image identifiers (tag or hash) against a CTI feed of known malicious container images. Alert on any match and isolate the container."
                    },
                    {
                        "description": "A container instance spawns child processes associated with known malicious tools, cryptominers, or suspicious utilities not consistent with the container's stated purpose.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor process creation events (Windows Event ID 4688) for processes whose parent is a container runtime process (e.g., `dockerd.exe`, `containerd-shim-runc-v2.exe`). Scan the new process name and command line arguments for signatures of malicious tools (e.g., `xmrig`, `mimikatz`, `kdevtmpfsi`), hacking tools (`nc.exe`, `nmap`), or unexpected shells (`bash`, `sh`). Maintain and correlate against a blocklist of such process names and command-line patterns."
                    },
                    {
                        "description": "A container is deployed using high-risk or excessively permissive runtime flags, such as privileged mode, host PID namespace sharing, or mounting sensitive host paths.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Parse process creation logs (Windows Event ID 4688) for container run commands (`docker run`, etc.). Use regular expressions to search command-line arguments for high-risk flags like `--privileged`, `--pid=host`, `--net=host`, or sensitive volume mounts (`-v /:/host`, `-v /var/run/docker.sock:/var/run/docker.sock`). Alert on any such deployments that are not explicitly documented and whitelisted for a legitimate operational need, as they indicate a likely container escape or host compromise attempt."
                    },
                    {
                        "description": "A newly deployed container initiates anomalous network communications, such as connecting to known malicious destinations, using non-standard protocols or ports, or exhibiting C2-like beaconing behavior.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Zeek dns.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate container IP addresses with network logs (Zeek conn.log, dns.log). First, check destination IPs/domains against CTI feeds. Second, establish a network behavior baseline for specific applications/images. Use time series analysis on Zeek conn.log data (e.g., connection counts over time) to detect beaconing (regular, low-volume connections). Use frequency analysis to identify connections to rare external ports or destination countries. Calculate the entropy of DNS queries originating from a container; a sudden spike in entropy can indicate domain generation algorithm (DGA) activity."
                    },
                    {
                        "description": "Deployment of a container from an image with a name that typosquats a legitimate, commonly used image or originates from an untrusted public repository instead of the approved internal registry.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log",
                            "Zeek dns.log"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Maintain an allow-list of approved internal registries (by domain/IP) and popular, vetted public images. From process creation logs (Windows Event ID 4688), extract image names from `docker run` commands. Monitor Zeek dns.log and conn.log for connections to container registry domains. Flag any image pulls from unapproved registries. Use correlation analysis and fuzzy string matching algorithms to compare deployed image names against the approved list to detect potential typosquatting (e.g., `redis` vs `rediss`, `mongo` vs `mongoo`)."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
