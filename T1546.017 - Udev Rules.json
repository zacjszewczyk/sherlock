```json
[
  {
    "Is the adversary maintaining persistence using malicious udev rules? (TA0003 - Persistence)": {
      "Indicators": {
        "T1546.017 - Udev Rules": {
          "Presence of known malicious commands, scripts, or file paths within udev rule files used for persistence.": {
            "Data": "File content from udev rules directories (/etc/udev/rules.d/, /run/udev/rules.d/, /lib/udev/rules.d/)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Periodically scan the content of all files in udev rule directories. Use regular expression matching or YARA rules to search for `RUN` directives containing strings associated with known malicious activity, such as reverse shell commands (`nc`, `bash -i`), downloads from suspicious domains (`curl`, `wget`), or execution of scripts from world-writable temporary directories (`/tmp/`, `/var/tmp/`). Alert on any matches."
          },
          "Creation of new udev rule files or modification of existing ones containing a `RUN` directive, especially by non-standard users or processes.": {
            "Data": "Linux auditd logs; File integrity monitoring logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for file creation or modification events (`creat`, `open`, `rename` syscalls in auditd logs) within `/etc/udev/rules.d/` and other udev paths. Correlate the event with the user ID (`auid`) and process name (`exe`) that performed the action. Baseline legitimate rule modifications (e.g., from package managers like `dpkg`, `yum`, `rpm`) and alert on modifications by non-root users, interactive shells, or unusual processes. Specifically flag any modification that adds a `RUN=` directive."
          },
          "Execution of an anomalous process spawned by udevd, potentially exhibiting suspicious network behavior, triggered by a hardware event.": {
            "Data": "Linux auditd logs; Zeek conn.log; Linux syslog/journalctl",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for process creation events (`execve` syscall in auditd) where the parent process is `udevd` or `systemd-udevd`. Profile legitimate child processes of `udevd` and flag the execution of unexpected binaries (e.g., `/bin/bash`, `python`, `perl`, or binaries in `/tmp`). Correlate the timestamp of these process executions with hardware-related messages in syslog/journalctl (e.g., USB device connection). Use time series analysis to detect anomalous frequencies of such events. If the spawned process initiates an outbound network connection (by correlating process data with Zeek conn.log), elevate the alert priority for immediate investigation."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary attempting privilege escalation using malicious udev rules? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1546.017 - Udev Rules": {
          "A udev rule containing a known privilege escalation payload, such as commands to modify /etc/sudoers, create a root user, or set SUID bits.": {
            "Data": "File content from udev rules directories (/etc/udev/rules.d/, /run/udev/rules.d/, /lib/udev/rules.d/)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Scan all files in udev rule directories for `RUN` directives containing commands associated with known privilege escalation techniques. Use regular expressions to detect patterns such as modifying `/etc/passwd` or `/etc/shadow`, adding a `NOPASSWD` entry to `/etc/sudoers`, using `chmod u+s` to set a SUID bit on a binary, or using `useradd`/`usermod` to create or elevate a user. Alert on any rule matching these privilege escalation selectors."
          },
          "Creation of a udev rule that is configured to execute a script or binary from a world-writable directory like /tmp, /var/tmp, or /dev/shm.": {
            "Data": "Linux auditd logs; File content from udev rules directories",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Periodically scan or use file integrity monitoring (via auditd) for new or modified files in `/etc/udev/rules.d/`. For any rule containing a `RUN` directive, parse the command to identify the executable path. Flag any rule where the path points to a world-writable directory (`/tmp`, `/var/tmp`, `/dev/shm`), as this is a common pattern for privilege escalation where a low-privilege user can place a payload to be executed by the root-level udev service."
          },
          "A process spawned by udevd that executes with root privileges and performs actions inconsistent with normal device management, such as modifying critical system files or establishing a reverse shell.": {
            "Data": "Linux auditd logs; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor processes created with parent `udevd` (or `systemd-udevd`) and an effective user ID (euid) of 0 (root). Track the subsequent syscalls of these processes using auditd. Establish a baseline of normal actions for `udevd`-spawned root processes and flag any anomalous behavior, such as: 1) Writing to files in `/etc/`, `/root/`, or `/boot/`; 2) Executing user management commands; 3) Loading kernel modules; 4) Initiating an outbound network connection (by correlating with Zeek conn.log data). Use correlation analysis to link the initial hardware event, the udev rule, the root process execution, and the subsequent malicious action."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```