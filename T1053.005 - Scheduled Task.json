[
  {
    "Has the adversary executed code using scheduled tasks? (TA0002 - Execution)": {
      "Indicator": {
        "T1053.005 - Scheduled Task": {
          "Scheduled task executing a payload with a known malicious hash, or a command line referencing known malicious domains/IPs.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Extract executable paths and command-line arguments from task creation events (Event ID 4698, analyzing XML content for Command and Arguments) and process creation events (Event ID 4688, field: CommandLine) originating from taskeng.exe or svchost.exe (as parent). Hash identified executables and compare against a CTI feed of known malware hashes. Parse command lines for known malicious IPs/domains from CTI. Correlate with Zeek conn.log for network connections to these indicators from processes launched by scheduled tasks. Alert on verified matches."
          },
          "Use of `schtasks.exe` or PowerShell cmdlets (`Register-ScheduledTask`, `Set-ScheduledTask`) with command-line parameters or script blocks indicative of creating tasks for obfuscated/malicious execution.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for `schtasks.exe` executions. Analyze command-line arguments for patterns such as creating tasks pointing to non-standard paths (e.g., %TEMP%, %APPDATA%), executing scripts (e.g., .ps1, .vbs, .js), using `/TR` with LOLBAS (e.g., mshta.exe, rundll32.exe), or tasks with very short-lived or immediate execution triggers. Monitor PowerShell script block logs (Event ID 4104) for `Register-ScheduledTask`, `Set-ScheduledTask`, `New-ScheduledTaskAction`, `New-ScheduledTaskTrigger` cmdlets creating tasks with suspicious actions (e.g., encoded commands, downloads from internet, execution from unusual locations). Use regular expressions for known malicious patterns and frequency analysis on command parameters and script content snippets to identify outliers."
          },
          "Creation of suspicious child processes (e.g., `powershell.exe`, `cmd.exe`, `rundll32.exe`, unsigned executables in temporary locations) by the Task Scheduler service (`taskeng.exe` or `svchost.exe` with Task Scheduler context).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 where ParentProcessName is `taskeng.exe` or `svchost.exe` (and ParentProcessId matches the Task Scheduler service PID). Profile legitimate child processes executed by scheduled tasks. Flag executions of interpreters (`powershell.exe`, `cmd.exe`, `cscript.exe`, `wscript.exe`), LOLBAS, or unsigned executables, especially when launched from non-standard paths (e.g., user profiles, temp directories) or with obfuscated/suspicious command lines. Use entropy measures on command lines and frequency analysis of child process paths relative to their parent task context to detect anomalies."
          },
          "Anomalous creation or modification of scheduled tasks inconsistent with established baselines of system activity, user behavior, or software deployment patterns.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4702",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable and collect Microsoft-Windows-TaskScheduler/Operational logs (Event IDs 4698 - Task Created, 4702 - Task Updated). Establish baselines of normal task creation/modification activity (e.g., typical task names, paths, triggers, authors/users, actions) correlated with legitimate software installations, patching cycles, and administrative actions. Use descriptive statistics (e.g., frequency of task names, common executable paths) and time series analysis to identify deviations, such as tasks created by unusual user accounts, tasks with uncommon naming conventions, tasks pointing to newly dropped files in unusual locations, or tasks with very frequent or atypical trigger times (e.g., execution every few minutes). Calculate entropy of task names or executable paths created by non-system accounts to find unusual entries."
          },
          "Detection of a suspicious process starting at or near the scheduled time of a newly created or modified, potentially malicious task.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4698; Windows Event ID 4702",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate task creation/modification events (Event ID 4698/4702) with subsequent process creation events (Event ID 4688) where the process is launched by the Task Scheduler service. Specifically look for suspicious processes (identified by name, path, command line, or lack of signature) executing at or very near the trigger time specified in the task registration XML data. Use correlation analysis based on task name and execution path within a short time window (e.g., +/- 1 minute of scheduled time). Flag if the executed process is rare, unsigned, or has other suspicious characteristics not matching legitimate tasks."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary maintaining persistence using scheduled tasks? (TA0003 - Persistence)": {
      "Indicator": {
        "T1053.005 - Scheduled Task": {
          "Persistent scheduled task configured with known malicious executable names, paths, hashes, or command-line arguments referencing known C2 infrastructure.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4700; Windows Event ID 4702; Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Periodically audit all active scheduled tasks (via tools or by parsing Event ID 4700/4698 for enabled/new tasks) and analyze newly created/enabled tasks. Extract executable paths and command lines from task XML data. Compare executable hashes against CTI feeds. Scan command lines for known malicious strings, IPs, or domains associated with C2. Correlate process executions (Event ID 4688) by these persistent tasks with network connections (Zeek conn.log, Windows Event ID 5156) to known C2 servers. Alert on matches indicating persistent malicious tasks."
          },
          "Scheduled tasks created or modified using techniques to hide their presence (e.g., deleting SD registry value, altering Index value in TaskCache) or via non-standard mechanisms like direct WMI/COM API calls without typical utility usage.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688; Windows Event ID 4104",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable SACLs on `HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\*` and subkeys to log modifications (Event ID 4657), specifically targeting deletion/modification of 'SD' (Security Descriptor) or 'Index' values, which can indicate task hiding. Correlate these registry modifications with a lack of corresponding legitimate task modification events (4702). Monitor for PowerShell (Event ID 4104) or WMI process execution (Event ID 4688 for wmiprvse.exe actions) that directly manipulate task objects using COM interfaces or undocumented methods rather than standard cmdlets or schtasks.exe. Use correlation analysis: if a task is running but not found by standard enumeration, investigate for hiding techniques."
          },
          "Scheduled tasks configured for persistence (e.g., run at logon, system startup, or frequent recurring intervals) that execute unsigned executables, scripts from unusual/writable locations, or have unusually generic/stealthy names.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4702; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor task creation/modification events (Event ID 4698, 4702) for tasks with triggers indicative of persistence (e.g., 'AtLogon', 'AtStartup', or frequent schedules like every X minutes/hours). Scrutinize the task's action (executable path, name, arguments from XML data). Flag tasks where the executable is located in user-writable paths (e.g., %APPDATA%, %TEMP%, Public C:\\Users\\Public), is unsigned, or has a generic or misleading name (e.g., 'Update', 'SysScan', 'AdobeUpdater'). Use frequency analysis on task names, executable paths, and parent directories of executables for persistent tasks to find outliers. Correlate with Event ID 4688 to confirm execution and check process signature status."
          },
          "A legitimate scheduled task exhibits a sudden, unauthorized change in its configuration (e.g., action command, user context, trigger) to execute a new payload or run with different parameters, deviating from its established baseline.": {
            "Data": "Windows Event ID 4702",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a baseline of legitimate scheduled task configurations, particularly for critical or commonly abused tasks. Monitor task update events (Event ID 4702). Compare the updated configuration (action command, arguments, user context, trigger details in XML data) against the previously known good baseline for that specific task name. Flag significant deviations such as a change in executable path to a new/untrusted location, addition of suspicious arguments (e.g., -enc, http://), or escalation of privileges without authorization. Use string similarity algorithms (e.g., Levenshtein distance) on command lines or descriptive statistics on configuration parameter changes (e.g., number of arguments changed) to detect anomalies indicating hijacking for persistence."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Has the adversary elevated privileges using scheduled tasks? (TA0004 - Privilege Escalation)": {
      "Indicator": {
        "T1053.005 - Scheduled Task": {
          "Scheduled task created or modified to execute a known privilege escalation tool/exploit by name, hash, or specific command-line signature.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4702; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor task creation/update events (Event ID 4698, 4702) and subsequent process executions (Event ID 4688) by these tasks. Identify tasks whose action (executable path or command line in XML/Event Data) matches signatures of known privilege escalation tools (e.g., PrintSpoofer variants, JuicyPotato, LOLBAS abuse patterns specific to privesc like fodhelper.exe hijacking). Maintain and update a list of such signatures (hashes, file names, distinctive command patterns) from CTI and security research. Alert on matches, especially if the task is configured to run with, or aims to achieve, high privileges."
          },
          "Scheduled task created using common privilege escalation patterns, such as a standard user creating a task that is then modified or triggered to run as SYSTEM, or tasks directly configured to run with `NT AUTHORITY\\SYSTEM` privileges executing atypical system commands or scripts.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4702; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor task creation (Event ID 4698) and update (Event ID 4702) events. Look for patterns where a task is created by a non-administrative user (SubjectUserName in event) but is configured to run as SYSTEM or Administrator (UserId in task XML). Also, identify tasks explicitly configured to run as SYSTEM that execute non-standard system utilities or scripts (e.g., `powershell -enc <payload>`, `cmd /c <unusual_command>`) instead of known trusted system processes typically run by SYSTEM tasks. Use frequency analysis on commands executed by SYSTEM-level tasks to identify rare, unique, or suspicious activity potentially indicative of privilege escalation."
          },
          "A scheduled task is created or modified by a lower-privileged user account, but the task itself is configured to execute with higher privileges (e.g., SYSTEM, Administrator), and subsequently executes.": {
            "Data": "Windows Event ID 4698; Windows Event ID 4702; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate task creation/modification events (Event ID 4698, 4702) by comparing the 'SubjectUserName' or 'Author' field (who created/modified it) with the 'UserId' or 'RunLevel' field (privileges it runs with, from task XML) specifying the execution context. Flag tasks where a standard user account creates or modifies a task configured to run with Administrator or SYSTEM privileges. Further correlate with process execution events (Event ID 4688) to confirm the task ran with the intended elevated privileges. Maintain a baseline of users/groups authorized to create high-privilege tasks and use descriptive statistics to alert on deviations."
          },
          "A process launched by the Task Scheduler under high privileges (SYSTEM, Administrator) performs suspicious follow-on actions such as unexpected network connections to C2 servers, modifications to sensitive system files/registry keys for further exploitation, or attempts to access credentials (e.g., LSASS).": {
            "Data": "Windows Event ID 4688; Windows Event ID 5156; Zeek conn.log; Windows Event ID 4657",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Identify processes created by the Task Scheduler (parent `taskeng.exe` or `svchost.exe`) running as SYSTEM or Administrator (Event ID 4688, check `SubjectUserSid` or `User` in process token). Correlate these privileged process instances with subsequent: 1. Network connections (Windows Event ID 5156, Zeek conn.log) to unusual external IPs/domains (check against CTI, low frequency, high entropy domains) or internal systems not typically accessed by scheduled tasks. 2. Modifications to sensitive system files (e.g., OS files, security configuration) or registry keys (e.g., Event ID 4657 for Run keys, LSA configuration). 3. Attempts to access LSASS memory or other credential stores. Use correlation analysis and statistical profiling (e.g., volume of network traffic, frequency of file path access by SYSTEM tasks) to detect anomalies."
          },
          "Anomalous process execution with elevated privileges occurring at scheduled intervals, but without corresponding visible scheduled task creation/execution events in standard logs, suggesting a hidden or tampered task used for privilege escalation.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4698; Windows Event ID 4702; Windows Event ID 4699",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze Windows Event ID 4688 for processes executing with elevated privileges (e.g., SYSTEM, Administrator context) at periodic intervals that cannot be attributed to known, visible scheduled tasks (from Event ID 4698 or standard task enumeration tools like `schtasks /query`). Use time series analysis or periodicity detection algorithms (e.g., Fast Fourier Transform on process creation timestamps for a given executable name/path running as SYSTEM) to find such recurring patterns. Investigate the source process, command line, and user context of these periodically executing privileged processes to identify potentially hidden or manually manipulated scheduled tasks used for maintaining elevated access."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]