
[
  {
    "Is the adversary attempting to evade defenses by modifying code signing policies? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1553.006 - Code Signing Policy Modification": {
          "Execution of a process or loading of a driver whose file hash matches a known malicious tool or driver used for bypassing code signing enforcement.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable file hash computation for process creation events (Windows Event ID 4688). Continuously compare the hashes of all executed processes and loaded drivers against a high-fidelity threat intelligence feed of known malicious hashes for tools (e.g., KDU, DSEFix) and rootkits associated with this technique. Trigger a high-severity alert upon any match."
          },
          "Execution of specific commands or utilities known to disable or weaken code signing enforcement policies on the command line.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for command-line arguments containing patterns used to modify code signing policies (e.g., 'bcdedit.exe /set testsigning on', 'bcdedit.exe /set nointegritychecks on', 'csrutil disable'). Since these commands can be used legitimately by developers, establish a baseline of normal usage. Use frequency analysis and correlation with user roles to flag rare or unauthorized executions. For example, use descriptive statistics to identify hosts where this command is a low-frequency event."
          },
          "Direct modification of critical Windows Registry keys or values that control Driver Signature Enforcement or system integrity policies.": {
            "Data": "Windows Event ID 4657",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable auditing and monitor for modifications (Windows Event ID 4657) to specific registry keys controlling code signing (e.g., HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CI\\Policy, HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Driver Signing\\BehaviorOnFailedVerify). Profile the processes and users that modify these keys. Alert on any modification made by non-standard system processes or user accounts. Use time series analysis to detect unusual spikes in modification events across the environment."
          },
          "Anomalous loading of an unsigned or self-signed driver, particularly when temporally correlated with a recent system policy change and reboot.": {
            "Data": "Windows Event ID 5038; Windows Event ID 7045; Windows Event ID 7026",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for Windows Event ID 5038 (Code Integrity determined an image file is not signed or validated) and Windows Event ID 7026 (The following boot-start or system-start driver(s) failed to load). Correlate these events with recent code signing policy modifications (detected via command line or registry monitoring) and system reboots within a short time window (e.g., 30 minutes). Use correlation analysis on hostname and timestamp to link the policy change event to the unsigned driver load event, flagging this sequence as a high-risk behavior."
          },
          "A sequence of events where a legitimate but vulnerable signed driver is loaded to exploit the kernel, followed by the loading of a second, unsigned malicious driver (BYOVD attack).": {
            "Data": "Windows Event ID 7045; Windows Event ID 4688; Windows Event ID 5038",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a list of legitimate but vulnerable drivers commonly abused in Bring Your Own Vulnerable Driver (BYOVD) attacks. Monitor for the loading of these drivers (Windows Event ID 7045 or 4688). If a known vulnerable driver is loaded, flag subsequent events within a short timeframe (e.g., 5 minutes) where a new driver is loaded that fails code integrity checks (Windows Event ID 5038). This behavioral pattern indicates an attempt to use a trusted, vulnerable driver to bypass Driver Signature Enforcement and load a malicious payload."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
