```json
[
  {
    "Is the adversary communicating with command and control infrastructure using Domain Generation Algorithms? (TA0011 - Command And Control)": {
      "Indicators": {
        "T1568.002 - Domain Generation Algorithms": {
          "DNS queries or network connections to domain names or IP addresses found on threat intelligence feeds for known DGA C2 infrastructure.": {
            "Data": "Zeek dns.log; Zeek conn.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Integrate high-confidence threat intelligence feeds specializing in DGA-generated domains and associated C2 IP addresses. Continuously monitor Zeek dns.log for queries matching these known malicious domains and Zeek conn.log for outbound connections to listed C2 IPs. Generate high-priority alerts for any matches, ensuring feeds are updated at least daily. Use descriptive statistics to track hit rates from different feeds."
          },
          "DNS queries for domain names exhibiting structural characteristics or generation logic patterns typical of known DGA families.": {
            "Data": "Zeek dns.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze outbound DNS queries from Zeek dns.log. Apply rules and regular expressions based on known DGA family structural patterns, such as specific domain lengths (e.g., 16-32 random characters), unusual Top-Level Domain (TLD) usage, specific character distributions (e.g., high digit-to-letter ratio, low vowel count inconsistent with pronounceable words), or wordlist concatenation patterns (e.g., `word-word-word.tld`). Maintain and update a library of these DGA family-specific structural patterns. Use correlation analysis to identify if multiple pattern types are matched by a given domain, increasing confidence."
          },
          "DNS queries for domain names exhibiting high linguistic randomness (e.g., high character entropy, low n-gram frequency) or a low proportion of dictionary words.": {
            "Data": "Zeek dns.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "For each unique queried domain name (excluding TLD) in Zeek dns.log, calculate linguistic features: Shannon entropy, n-gram (e.g., bigram, trigram) frequencies compared against a baseline model trained on legitimate domain names, and the ratio of dictionary words or pronounceable segments. Utilize statistical thresholds (e.g., domains in the top X percentile for entropy or bottom Y percentile for n-gram commonality identified via IQR or box-plots) or a machine learning classifier (e.g., Random Forest, Logistic Regression) trained on these features to assign a DGA probability score. Actively maintain a whitelist of legitimate high-entropy domains (e.g., CDNs, cloud services) to reduce false positives."
          },
          "Outbound DNS queries or network connections to domains that are newly registered, possess unusually short Time-To-Live (TTL) values, or are exceptionally rare within the organization's observed traffic.": {
            "Data": "Zeek dns.log; Zeek conn.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Extract queried domains from Zeek dns.log. Enrich domains with registration date information (e.g., via external WHOIS services or threat intelligence) and flag domains registered within a recent window (e.g., last 7-30 days). Analyze DNS response TTLs, flagging domains with unusually short TTLs (e.g., < 300 seconds) which can indicate fast-flux or DGA infrastructure. Establish a baseline of domain query frequency within the organization using historical Zeek dns.log and conn.log. Use frequency analysis (e.g., domains queried by < N hosts or seen < M times historically, identified by percentile rankings) to identify exceptionally rare or first-seen domains. Use time series analysis to detect sudden increases in queries to newly registered domains."
          },
          "A high volume of unique, failed DNS lookups (NXDOMAIN responses) originating from a single internal host within a short time window.": {
            "Data": "Zeek dns.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek dns.log for DNS queries resulting in an NXDOMAIN response code. Group these failed queries by source host IP (`id.orig_h`) and aggregate over short, sliding time windows (e.g., 1, 5, 15 minutes). For each host, count the number of unique destination domains (query field) that resulted in NXDOMAINs. Apply statistical methods, such as calculating a moving average and standard deviation of unique NXDOMAIN counts per host, to flag hosts exceeding a dynamic threshold (e.g., mean + 3 standard deviations) or a predefined high-water mark (e.g., >50 unique NXDOMAINs in 5 minutes). Use entropy measures on the set of NXDOMAINs from a single host to gauge randomness of attempts."
          },
          "DGA-characteristic DNS activity (e.g., high entropy queries, NXDOMAIN storm) attributed to an internal host exhibiting suspicious process activity.": {
            "Data": "Zeek dns.log; Windows Event ID 4688",
            "Data Platform": "Network devices, Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "When DGA-like DNS activity (identified via methods like high entropy scores or NXDOMAIN storms from Zeek dns.log) is traced to a specific internal source IP, correlate this network observation with host-level process logs from that system. Analyze Windows Event ID 4688 (Process Creation) logs on the identified host occurring around the time of the DGA activity. Look for newly created processes, especially those that are unsigned, executing from unusual file paths (e.g., %TEMP%, %APPDATA%), have names commonly associated with malware, or are not standard enterprise applications. Use correlation analysis between the timestamp of DGA detection and process creation events to identify potential originating processes and investigate their command-line arguments."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```