
[
  {
    "Is the adversary maintaining persistence by manipulating service registry entries? (TA0003 - Persistence)": {
      "Indicators": {
        "T1574.011 - Services Registry Permissions Weakness": {
          "Service `ImagePath` or `binPath` registry value is modified to point to a known malicious executable (by hash or path/name) or a script interpreter executing a known malicious script.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 (Registry Value Modified) for changes to `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\ImagePath` or `binPath`. Extract the new path. If it's an executable file, calculate its hash. Compare the file path, name, and hash against threat intelligence feeds of known malicious executables and scripts. If `ImagePath` points to a script interpreter (e.g., powershell.exe, cmd.exe, cscript.exe, wscript.exe), examine the command line arguments from the corresponding process creation event (Windows Event ID 4688) for suspicious scripts or parameters. Alert on confirmed matches."
          },
          "A new service is created with a name, description, or `ImagePath` structure matching patterns used by known persistence tools or malware families.": {
            "Data": "Windows Event ID 4697; Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4697 (A new service was installed) and Event ID 4657 (Registry Value Modified for service creation). Analyze new service names, descriptions (obtainable via API/WMI if not in event, or look for patterns in names if description is generic), and `ImagePath` values. Compare against a curated list of patterns (e.g., random character sequences, misspellings of legitimate services, specific keywords, common malware service naming conventions) associated with known malware or persistence tools using regular expressions and string similarity. Correlate with Event ID 4688 to examine the process defined in `ImagePath`."
          },
          "Registry value `ImagePath` or `binPath` for an existing service is modified to point to an executable in an unusual or unauthorized location (e.g., user profile, temp folders, non-standard system directories).": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\ImagePath` or `binPath`. Identify the process responsible for the change (via Event ID 4688 correlation by time/user/PID). Compare the new path to a baseline of known legitimate paths for that specific service and organizational software. Flag changes where the new path is in user-writable locations (e.g., `C:\\Users\\`, `C:\\ProgramData\\`, `%TEMP%`), is unsigned, or deviates from historical norms for that service. Use frequency analysis on service path locations to identify outliers."
          },
          "Unusual creation or modification of `Performance`, `Parameters` subkeys, or addition/modification of `ServiceDll` value under a service's Registry key, especially if pointing to a suspicious DLL.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for creation/modification of `Performance`, `Parameters` subkeys, or `ServiceDll` value under `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*`. Baseline services that legitimately use these keys. Flag creation/modification of these keys for services that don't normally have them, or if the `ServiceDll` path is suspicious (e.g., unsigned, temporary location, known malicious DLL). Correlate with the modifying process (Event ID 4688) to check for non-standard tools making these changes. Use descriptive statistics of services with these keys to find anomalies."
          },
          "A service, potentially modified via registry, is started, and the launched process initiates persistent or repeated external network connections to unusual destinations or uses non-standard protocols.": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Servers, Endpoints, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate Windows Event ID 4688 events where `services.exe` is the parent process (or the service starts with a specific service name) with Zeek conn.log entries for the resulting child process's network activity. Identify processes launched by services making external connections. Analyze connection frequency, duration, data volume, destination IP/port, and protocol. Use time series analysis to detect beaconing or other persistent communication. Correlate destination IPs/domains with threat intelligence feeds. Flag connections to rare geolocations or non-standard ports for the identified service/process."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary attempting to escalate privileges by manipulating service registry entries? (TA0004 - Privilege-Escalation)": {
      "Indicators": {
        "T1574.011 - Services Registry Permissions Weakness": {
          "Service `FailureCommand` or `ImagePath` registry value is modified to execute a known malicious executable (by hash or path/name) or a script specifically designed for privilege escalation.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\FailureCommand` or `ImagePath` for services that run with high privileges (e.g., SYSTEM). Extract the new path or command. If an executable, calculate its hash. Compare the path, name, hash, and script content (if applicable and obtainable via other means) against threat intelligence feeds for known privilege escalation tools/payloads (e.g., Juicy Potato variants, PrintSpoofer payloads). Alert on confirmed matches."
          },
          "Execution of specific command-line utilities (e.g., `sc.exe`, `reg.exe`, PowerShell cmdlets) with parameters known to be used by privilege escalation exploits targeting service registry permissions, often by non-administrative users or unusual processes.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4657",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for command-line execution patterns like `sc.exe config <service> binPath=...`, `reg.exe add HKLM\\SYSTEM\\CurrentControlSet\\Services\\... /v ImagePath ... /d ... /f`, or PowerShell `Set-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\... -Name ImagePath -Value ...`. Correlate these commands with subsequent registry changes (Event ID 4657) and the user context of the invoking process. Maintain a list of suspicious command patterns associated with known privilege escalation techniques involving service registry modification. Use regular expression matching on command lines and flag executions by unexpected user accounts."
          },
          "A sequence involving a non-administrative user/process changing service registry permissions, followed by modifying the service's executable path or failure command, and subsequent service execution with elevated privileges.": {
            "Data": "Windows Event ID 4670; Windows Event ID 4657; Windows Event ID 4688; Windows Event ID 4624",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate a sequence of events: 1. Windows Event ID 4670: Permissions change on a service registry key (`HKLM\\SYSTEM\\CurrentControlSet\\Services\\*`) granting write access to a lower-privileged user or group. 2. Windows Event ID 4657: Modification of `ImagePath`, `FailureCommand`, or other critical values for that service, attributed to the user/process that gained permissions. 3. Windows Event ID 4688: The service starts (parent `services.exe` or specific service context) and executes the new, potentially malicious, binary. Check the privileges of the launched process (e.g., SYSTEM via Event ID 4624 Logon Type 5 for service logon). Use correlation analysis across these event IDs within a short time window (e.g., 5-30 minutes) to detect this behavioral pattern."
          },
          "Registry value `FailureCommand` for a service is modified to execute a suspicious command or an executable located in an unusual directory, especially if the service is configured to restart on failure.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\FailureCommand`. Identify the modifying process (from Event ID 4688 correlation). Analyze the command/path in `FailureCommand` for suspicious executables (unsigned, temp locations, user-writable dirs) or commands that launch script interpreters with risky arguments. Note if the service's failure actions (e.g., `FailureActions` registry key or `sc qfailure <servicename>`) are set to restart or run a command. Flag any suspicious `FailureCommand` modification, especially if it was previously empty or pointed to a legitimate recovery tool."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary attempting to evade defenses by manipulating service registry entries? (TA0005 - Defense-Evasion)": {
      "Indicators": {
        "T1574.011 - Services Registry Permissions Weakness": {
          "Service `ImagePath` or `ServiceDll` registry value is modified to point to a known malicious DLL, or a LOLBAS executing a known malicious script/payload identified by name, hash, or specific command line parameters.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for changes to `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\ImagePath` or `...\\Parameters\\ServiceDll`. If the path points to a DLL, calculate its hash and compare against CTI feeds of known malicious DLLs. If `ImagePath` specifies a LOLBAS (e.g., `rundll32.exe`, `regsvr32.exe`, `powershell.exe`), examine the full command line (from Event ID 4688 when the service starts) for arguments pointing to known malicious scripts, DLLs (by name/hash), or suspicious encoded commands. Alert on CTI matches or highly suspicious LOLBAS usage patterns."
          },
          "Service registry entries (`ImagePath`, `DisplayName`, `Description`) are modified to masquerade as legitimate Windows services or common third-party software, using techniques like minor misspellings or legitimate names with atypical executable paths.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4697; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 (Registry Value Modified) and Event ID 4697 (Service Installed) for service creations or modifications. Analyze `ImagePath`, `DisplayName`, and `Description` values. Compare `DisplayName` and `Description` against a list of legitimate Windows/common software service names using string similarity algorithms (e.g., Levenshtein distance) to detect minor misspellings (e.g., 'Microsft Update Service'). Check if the `ImagePath` (from Event ID 4657 or process path from Event ID 4688) is inconsistent with the claimed legitimate service (e.g., 'svchost.exe' running from a user profile directory). Maintain regex for known masquerading patterns."
          },
          "Service `ImagePath` is modified to execute code from an Alternate Data Stream (ADS), a hidden file, or an encrypted payload, attempting to conceal the malicious executable.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\ImagePath`. Look for paths containing colons indicative of ADS (e.g., `C:\\Windows\\System32\\calc.exe:malware.exe`). Correlate with Event ID 4688 to observe the actual process execution. Analyze process command lines for utilities known to execute from ADS or hidden locations. Use frequency analysis for `ImagePath` values containing ':' or pointing to unusual file attributes. Note: Direct execution from ADS in `ImagePath` might be restricted by Windows, but LOLBAS within `ImagePath` could launch from ADS."
          },
          "Registry modifications to critical system services or security-related services (e.g., Antivirus, EDR, Firewall, Windows Defender, Event Logging) to alter their `Start` type (e.g., to disabled), `ImagePath` (to a benign or non-functional path), or `FailureCommand`.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a list of critical system and security service registry keys. Monitor Windows Event ID 4657 for any modifications to these keys, specifically values like `Start` (target value 4 for Disabled), `ImagePath`, `FailureCommand`, or security descriptor changes. Flag any modification that weakens or disables these services, especially if the modifying process (Event ID 4688) is not a trusted installer or system process. Compare current values against known good baselines. Use frequency analysis of modifications to these sensitive keys."
          },
          "Registry modifications under `HKLM\\SYSTEM\\CurrentControlSet\\Services\\` are performed by an unexpected or unauthorized process not typically associated with service or system configuration management (e.g., Office applications, browsers, non-admin tools).": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for registry modifications under `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*`. Identify the process that initiated the modification (process name and path from Event ID 4688, correlated by PID/time/user). Maintain a baseline of legitimate processes that manage services (e.g., `services.exe`, `svchost.exe`, `mmc.exe`, `sc.exe`, `powershell.exe`, trusted installer processes). Flag modifications made by processes outside this baseline, such as common user applications or unsigned/unknown executables. Use frequency analysis to identify rare modifying processes."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
