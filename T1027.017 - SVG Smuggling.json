[
  {
    "Is the adversary attempting to evade defenses using SVG smuggling? (TA0005 - Defense-Evasion)": {
      "Indicators": {
        "T1027.017 - SVG Smuggling": {
          "Identification of SVG files containing embedded JavaScript or other executable code within <script> tags.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek http.log for files transferred, specifically checking for files identified as SVG. Analyze the content of suspect SVG files for the presence of '<script>' tags and potentially obfuscated code. Use entropy analysis on the script content to flag highly obfuscated or packed scripts."
          },
          "Network connections or browser redirects initiated from seemingly benign SVG files, potentially attempting to download malicious payloads or visit malicious sites.": {
            "Data": "Zeek http.log; Zeek conn.log; Windows Event ID 4688",
            "Data Platform": "Network devices, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek http.log and conn.log for outgoing connections initiated shortly after an SVG file is accessed or downloaded by an endpoint. Identify source/destination IP addresses and URLs. Cross-reference destination IPs/URLs with threat intelligence feeds. Use time series analysis to identify sudden spikes in outbound connections from endpoints after receiving SVG files. Examine process creation events (Windows Event ID 4688) for suspicious processes spawned by browser applications after SVG interaction."
          },
          "Identification of SVG files containing highly obfuscated content or unusual XML structure indicative of hidden data or code beyond simple scripts.": {
            "Data": "Zeek http.log; Zeek file.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek http.log for SVG file transfers. If file content extraction is enabled via Zeek file.log, analyze the XML structure and content of SVG files. Calculate entropy of file content or specific sections (e.g., within script tags or data URIs) to detect high levels of obfuscation. Look for large data sections encoded in base64 or similar within unexpected tags or attributes. Flag files exceeding entropy thresholds or containing unusual data encoding patterns."
          },
           "User interaction events (e.g., clicks, form submissions) or subsequent process execution triggered by opening or interacting with a seemingly benign SVG file.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4624; Zeek http.log",
            "Data Platform": "Endpoints, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate browser process creation/network events (Windows Event ID 4688, Zeek http.log) with prior user interaction with SVG files. Monitor for new processes spawned directly or indirectly by browser processes shortly after an SVG file is opened, particularly executables or script interpreters. Analyze browser network traffic (Zeek http.log) for unexpected POST requests (potentially form submissions) or file downloads initiated after SVG viewing. Use correlation analysis to link SVG interaction with subsequent suspicious activity like credential reuse (Windows Event ID 4624)."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  }
]