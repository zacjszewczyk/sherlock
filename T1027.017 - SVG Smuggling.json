[
    {
        "information_requirement": "Is the adversary attempting to evade defenses using SVG smuggling?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1027.017",
                "name": "SVG Smuggling",
                "evidence": [
                    {
                        "description": "Detection of SVG files with known malicious hashes or containing embedded links to known malicious URLs or IP addresses.",
                        "data_sources": [
                            "Zeek files.log",
                            "Zeek http.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Calculate the hash (e.g., SHA256) of all SVG files identified in Zeek files.log and compare them against a cyber threat intelligence (CTI) feed of known malicious file hashes. Additionally, parse SVG content from Zeek http.log or files.log to extract all URLs and IP addresses (e.g., from `href`, `xlink:href`, or within script content) and inner join them with a CTI feed of malicious domains/IPs. Alert on any confirmed matches."
                    },
                    {
                        "description": "SVG files containing specific JavaScript function names, variable names, or code structures known to be used by particular malware families for smuggling payloads.",
                        "data_sources": [
                            "Zeek files.log",
                            "Zeek http.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Using data from Zeek files.log or http.log, scan the content of embedded scripts within SVG files for specific, known patterns. This includes using regular expression matching to find unique function names, variable declaration patterns, or specific sequences of API calls (e.g., `atob`, `Blob`, `URL.createObjectURL`, `<a>.click()`) that are characteristic of known SVG smuggling campaigns (e.g., Qakbot, IcedID). Maintain and update a library of these actor- or malware-specific signatures."
                    },
                    {
                        "description": "An SVG file containing embedded script content that dynamically creates and downloads a file blob, often exhibiting high entropy or heavy obfuscation.",
                        "data_sources": [
                            "Zeek files.log",
                            "Zeek http.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Zeek files.log for SVG files containing `<script>` tags. For such files, analyze the script content for the behavioral sequence of decoding data (e.g., from base64), creating a Blob object, generating an object URL (`URL.createObjectURL`), and programmatically triggering a download (e.g., via `<a>.click()`). Calculate the entropy of the script content and any embedded data URIs; use a high entropy score as a factor to increase the alert's confidence score, flagging files that exceed a defined threshold (e.g., > 6.5) for manual review."
                    },
                    {
                        "description": "Suspicious network connections or process execution events on an endpoint immediately following the rendering or download of an SVG file.",
                        "data_sources": [
                            "Zeek http.log",
                            "Zeek conn.log",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Network devices",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate the timestamp of an SVG file being downloaded/rendered (from Zeek http.log) with subsequent events on the associated endpoint. Monitor for: 1) Windows Event ID 4688 (Process Creation) showing the browser process spawning a script interpreter (e.g., `wscript.exe`, `cscript.exe`, `powershell.exe`) or an unrecognized executable. 2) Zeek conn.log showing new connections to unusual ports or non-standard destinations from the endpoint that are not associated with normal user browsing. Use correlation analysis to link the SVG download with these follow-on activities within a short time window (e.g., 1-5 minutes)."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
