[
  {
    "Has the adversary escalated privileges using sudo or sudo caching? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1548.003 - Sudo and Sudo Caching": {
          "Successful execution of `sudo` commands by non-standard users or for unusual commands.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor audit logs for `sudo` command executions where the effective user ID differs from the real user ID. Filter for executions by accounts not typically granted sudo privileges or executions of commands considered high-risk. Use descriptive statistics to profile normal sudo usage per user and identify outliers."
          },
          "Repeated `sudo` command executions within the `timestamp_timeout` period without password prompt, potentially across different terminals if `tty_tickets` is disabled.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze audit logs for sequences of `sudo` commands by the same user occurring in rapid succession without re-authentication prompts. Check for events indicating `tty_tickets` being disabled in sudo configuration logs. Apply time series analysis to identify periods of unusually frequent sudo usage by a single user/terminal."
          },
          "Audit log entries showing a discrepancy between the real user ID (RUID) and effective user ID (EUID) during command execution, indicative of privilege escalation via `sudo` by non-root users.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Linux auditd logs for system calls where the RUID differs from the EUID for users not typically expected to elevate privileges (e.g., via `auditctl -a always,exit -F arch=b64 -S execve -F auid>=1000 -F auid!=unset -F euid!=uid -k priv_esc`). Analyze the associated command and user information. Use frequency analysis to identify users or commands with unusual RUID/EUID discrepancies."
          },
          "Suspicious access or modification attempts on `/var/db/sudo` timestamp files, or `sudo` command executions leveraging cached credentials beyond typical usage patterns.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor audit logs for file access/modification events targeting `/var/db/sudo/[user_id]` timestamp files. Correlate these with `sudo` command executions for the same user. Analyze the timing between `sudo` executions and the last timestamp update in `/var/db/sudo`. Use time series analysis to detect patterns of frequent `sudo` usage within timeout periods inconsistent with interactive user activity, potentially indicating automated sudo caching abuse."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  },
  {
    "Is the adversary evading detection using sudo or sudo caching? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1548.003 - Sudo and Sudo Caching": {
          "Modification of the `/etc/sudoers` file, specifically adding `NOPASSWD` or disabling `tty_tickets` through `Defaults !tty_tickets`.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor audit logs or file integrity monitoring for changes to `/etc/sudoers`. Parse changes to identify lines containing `NOPASSWD` or `Defaults !tty_tickets`. Alert on any such detected modifications, focusing on modifications by non-administrator accounts or outside approved change windows."
          },
          "Unusual frequency, timing, or command arguments associated with `sudo` usage by specific users, potentially obscured via sudo logging options.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze audit logs for `sudo` command executions, extracting user, command, arguments, and timestamp. Profile baseline usage patterns (frequency, timing, commands) per user using descriptive statistics. Use anomaly detection or entropy measures on command arguments or timing to identify deviations from normal usage that may indicate evasion or unusual activity, potentially looking for commands commonly used for defense evasion (e.g., disabling logging, modifying security configurations)."
          },
          "Audit log entries indicating changes to sudo configuration defaults, such as disabling `tty_tickets`, typically requiring root privileges to modify `/etc/sudoers` and potentially followed by actions to apply changes.": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor audit logs for writes/modifications to `/etc/sudoers` (`auditctl -w /etc/sudoers -p wa -k sudoers_change`). Parse the content changes (if logged) or the event details to identify the addition of `Defaults !tty_tickets`. Correlate these events with subsequent process execution events (e.g., `killall Terminal`) within a short time window that might be used to apply configuration changes."
          },
          "Execution of commands or scripts via `sudo` that exhibit patterns indicative of automated activity or attempts to bypass standard user interaction (e.g., background execution, unusual standard input/output handling).": {
            "Data": "Audit logs",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze audit logs for `sudo` command executions, examining process details (parent/child processes), command line arguments, and associated file descriptors (e.g., unusual redirection of stdin/stdout/stderr). Identify `sudo` executions originating from non-interactive sessions or scripts that are not part of normal system administration tasks. Use frequency analysis or correlation to flag repetitive patterns of `sudo` usage or executions of commands with suspicious flags or arguments."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  }
]