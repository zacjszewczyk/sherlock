
[
  {
    "Is the adversary attempting to escalate privileges using process injection? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1055.001 - Dynamic-link Library Injection": {
          "Loading of a DLL with a known malicious hash or a name explicitly associated with malware or hacking tools.": {
            "Data": "Windows Event ID 7",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Continuously monitor Windows Event ID 7 (Sysmon Image Load) events. Correlate the hash of the 'ImageLoaded' field (the DLL file) against a high-confidence threat intelligence feed of known malicious file hashes (e.g., SHA256, MD5). Additionally, use regular expressions to check the 'ImageLoaded' filename against a list of known malicious DLL names. Generate a high-priority alert on any match, especially if the target 'Image' is a privileged process."
          },
          "A process loads a DLL that is unsigned, has a mismatched internal name versus its on-disk filename, or is characteristic of a known process injection tool.": {
            "Data": "Windows Event ID 7",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 7 (Sysmon Image Load) events. Analyze DLL properties: flag events where 'Signed' is false, particularly when loading into system processes (e.g., lsass.exe, services.exe). Compare the on-disk filename with embedded metadata like 'OriginalFileName' and flag mismatches. Maintain and apply a list of patterns (e.g., regex for random names, specific names like 'beacon.dll') associated with adversarial tools to detect known injection frameworks."
          },
          "A process with a lower integrity level creates a remote thread in a process with a higher integrity level, indicating a classic privilege escalation attempt via injection.": {
            "Data": "Windows Event ID 8",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 8 (Sysmon Create Remote Thread) events. Correlate the 'SourceImage' and 'TargetImage' processes. Filter for events where the source process has a lower integrity level (e.g., 'Low', 'Medium') than the target process ('High', 'System'). Baseline legitimate low-to-high integrity thread creations (e.g., by installers, updaters) and use frequency analysis or correlation analysis to identify and alert on rare or unauthorized source/target process pairs engaged in this behavior."
          },
          "A process loads a DLL from an unusual or non-standard directory (e.g., user profile, temp folder, network share) into a privileged system process.": {
            "Data": "Windows Event ID 7",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 7 (Sysmon Image Load) events where the target 'Image' is a privileged process (e.g., svchost.exe, explorer.exe). Analyze the path of the 'ImageLoaded' DLL. Establish a baseline of standard DLL load paths for these processes (e.g., C:\\Windows\\System32\\). Alert on any DLLs loaded from atypical locations such as C:\\Users\\*, C:\\Windows\\Temp\\, C:\\ProgramData\\, or network shares. Use entropy measures on the DLL path to detect potential randomization."
          },
          "An anomalous sequence of process memory access followed by remote thread creation, particularly from an unusual source process to a privileged target process.": {
            "Data": "Windows Event ID 10; Windows Event ID 8",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate Windows Event ID 10 (Sysmon Process Access) and Windows Event ID 8 (Sysmon Create Remote Thread) events. Search for a sequence where a 'SourceImage' accesses a 'TargetImage' with write permissions (e.g., GrantedAccess includes PROCESS_VM_WRITE), followed within a short time window (e.g., <1 second) by the same 'SourceImage' creating a remote thread in that 'TargetImage'. Use time series analysis to identify this tight temporal correlation and prioritize alerts where the source/target pair is rare or involves a low-to-high privilege transition."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary attempting to evade defenses using process injection? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1055.001 - Dynamic-link Library Injection": {
          "A trusted process (e.g., web browser, explorer.exe) loads a DLL whose hash or file path is a known malicious indicator.": {
            "Data": "Windows Event ID 7",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 7 (Sysmon Image Load) events where the parent 'Image' is a common trusted process (e.g., chrome.exe, firefox.exe, explorer.exe, svchost.exe). Correlate the 'ImageLoaded' hash and file path against CTI feeds of known malicious artifacts. Generate a high-priority alert on any match to detect known threats hiding within legitimate processes."
          },
          "A trusted process exhibits command-line parameters or process ancestry characteristic of known injection techniques, such as rundll32.exe launching a DLL from a suspicious path.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 (Process Creation). Maintain a library of command-line patterns used by tools like Cobalt Strike or Metasploit for injection (e.g., 'rundll32.exe [dll_path],EntryPoint'). Use regular expression matching on the process command line to detect these patterns. Additionally, analyze process ancestry; for example, flag instances where a Microsoft Office application spawns powershell.exe or cmd.exe, which then may perform injection."
          },
          "A legitimate process, such as a browser or explorer.exe, initiates suspicious outbound network connections to rare external destinations or exhibits C2-like beaconing behavior after loading an unusual DLL.": {
            "Data": "Windows Event ID 7; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate host events and network logs. First, identify a potentially suspicious DLL load into a trusted process using Windows Event ID 7. Then, monitor subsequent network activity from that process instance using Zeek conn.log. For trusted processes, establish a baseline of normal network destinations and traffic patterns. Use time series analysis to detect anomalous behavior post-DLL-load, such as connections to low-reputation IPs, non-standard ports, or periodic connections with fixed intervals and similar byte counts (beaconing). Use linear regression to find correlations between a suspicious DLL load and an increase in anomalous network traffic."
          },
          "A process loads a DLL from a memory-only region (indicated by a null or malformed path) or from a transient/suspicious file path (e.g., AppData, Temp folders, Recycle Bin).": {
            "Data": "Windows Event ID 7",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 7 (Sysmon Image Load) events. Scrutinize events where the 'ImageLoaded' field lacks a file path, is malformed, or points to unusual locations like C:\\Users\\*\\AppData, C:\\Windows\\Temp, or the Recycle Bin. Use frequency analysis to identify rare DLL load paths for common system processes. High entropy in the path or filename may also indicate randomization used by malware. Alert when a common process like svchost.exe loads a DLL from a user's directory."
          },
          "A trusted process, not typically associated with debugging or monitoring, creates a remote thread in another legitimate process to hide its execution.": {
            "Data": "Windows Event ID 8",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 8 (Sysmon Create Remote Thread) events. Establish a baseline of which processes legitimately create remote threads (e.g., debuggers, some security products). Alert on any 'SourceImage'/'TargetImage' pair that deviates from this baseline. Pay special attention when the 'SourceImage' is a common application (e.g., winword.exe, chrome.exe, powershell.exe) and the 'TargetImage' is another common process (e.g., svchost.exe, explorer.exe). Use a box-plot or Inter-Quartile Range (IQR) analysis on the frequency of source/target pairs to identify rare, suspicious events."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
