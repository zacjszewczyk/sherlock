[
    {
        "information_requirement": "Is the adversary attempting to evade defenses using trusted developer utilities?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1127",
                "name": "Trusted Developer Utilities Proxy Execution",
                "evidence": [
                    {
                        "description": "Execution of a trusted developer utility whose file hash matches a known malicious or trojanized version, or which subsequently connects to a known malicious IP address or domain.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "On execution of a trusted developer utility (e.g., MSBuild.exe, WinDbg.exe, RCSI.exe), capture the file hash from the process creation event (Windows Event ID 4688) and compare it against a threat intelligence database of known malicious hashes. Additionally, correlate the process execution with subsequent network connections (Zeek conn.log) and check the destination IPs/domains against a CTI feed of known C2 servers or malicious endpoints. Alert on any confirmed matches."
                    },
                    {
                        "description": "Execution of a trusted developer utility with command-line arguments that match known malicious patterns, such as invoking inline tasks, referencing remote or obfuscated scripts, or loading unsigned modules.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze the 'CommandLine' field in Windows Event ID 4688 for executions of trusted developer utilities (e.g., MSBuild.exe, RCSI.exe, DNX.exe). Use regular expression matching to detect specific, high-fidelity patterns of abuse, such as MSBuild invoking `RoslynCodeTaskFactory` with embedded C# code, or `dnx.exe` executing code from a non-standard project location. Maintain and continuously update a list of these malicious command-line patterns for alerting."
                    },
                    {
                        "description": "A trusted developer utility spawning an unusual or suspicious child process, such as a script interpreter (`powershell.exe`, `cmd.exe`) or a networking utility (`bitsadmin.exe`, `certutil.exe`).",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor parent-child process relationships using Windows Event ID 4688. Create a baseline of legitimate child processes for common developer utilities in your environment (e.g., MSBuild.exe spawning `csc.exe`). Alert on deviations, particularly the creation of script interpreters (`powershell.exe`, `cmd.exe`, `wscript.exe`), networking tools, or processes running from unusual locations (e.g., C:\\Users\\Public\\). Use frequency analysis and correlation analysis on parent-child pairs to identify rare and potentially malicious occurrences."
                    },
                    {
                        "description": "Execution of trusted developer utilities on systems not belonging to developers or on servers outside of designated build/test environments, especially if the process is initiated by a non-interactive service or a common office application.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4624"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Enrich process creation events (Windows Event ID 4688) for developer utilities with user, host, and logon session information (from logon events like 4624). Profile systems and users to create allowlists for hosts (e.g., developer workstations, build servers) and user groups (e.g., 'Developers') authorized to use these tools. Alert on any execution outside of these allowlists. Use correlation analysis to investigate instances where the parent process is a common office application (e.g., WINWORD.EXE, OUTLOOK.EXE) or a web browser, as this may indicate a successful phishing and execution chain."
                    },
                    {
                        "description": "A behavioral sequence where a developer utility is written to a temporary location, executed to establish a network connection, and then deleted.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log",
                            "Windows Event ID 4663"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Hunt for a behavioral sequence within a short time window (e.g., 5 minutes) by correlating multiple data sources: 1) Detect file creation for a developer utility in a non-standard path (e.g., %TEMP%, %APPDATA%, C:\\Users\\Public). 2) Detect its execution via Windows Event ID 4688. 3) Correlate its process ID with network connections to external IPs via Zeek conn.log. 4) Detect file deletion for the same utility via Windows Event ID 4663 (Object Access). Use time series analysis to correlate these events and flag the complete sequence as highly suspicious activity indicative of living-off-the-land."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
