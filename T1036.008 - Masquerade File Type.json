
[
  {
    "Is the adversary attempting to evade defenses by masquerading file types? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1036.008 - Masquerade File Type": {
          "Detection of files with known malicious hashes that are masquerading under benign or common data file extensions.": {
            "Data": "Zeek file.log; Windows Event ID 4663",
            "Data Platform": "Network devices, Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Scan all files transferred over the network (captured in Zeek file.log) or written to disk (monitored via file creation events like Windows Event ID 4663) against a threat intelligence feed of known malicious file hashes (MD5, SHA1, SHA256). If a hash match is found, check the filename for a benign or data file extension (e.g., .txt, .jpg, .pdf, .log, .dat). Alert on any match, as this is a high-confidence indicator of a known malicious file attempting to evade signature-based defenses through masquerading."
          },
          "Identification of files where the file extension has a low correlation with its header-based file type (magic bytes), particularly for executable content hidden under benign extensions.": {
            "Data": "Zeek file.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze files transferred over the network using Zeek file.log. For each file, compare its extension against the MIME type determined by its magic bytes. Maintain a correlation matrix or a baseline of common valid extension-to-MIME-type mappings within the environment. Flag any file where the MIME type indicates executable content (e.g., 'application/x-dosexec', 'application/x-elf', 'application/x-mach-binary') but the file extension is non-executable (e.g., .jpg, .txt, .dat, .log). Use descriptive statistics to find rare or never-before-seen extension/MIME type pairings."
          },
          "Execution of a file with a non-executable extension (.txt, .jpg, .dat) by an interpreter or loader process (e.g., rundll32.exe, mshta.exe, wscript.exe, powershell.exe).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688). Create a baseline of normal command-line arguments for common system interpreters like 'rundll32.exe', 'mshta.exe', and 'wscript.exe'. Flag any execution where the command line includes a file argument with a non-executable or unusual extension (e.g., .jpg, .txt, .dat, .tmp). Use frequency analysis on the parent process/file extension pair to identify rare combinations indicative of masquerading. A box-plot of argument string lengths for these interpreters could also reveal anomalous file paths."
          },
          "An application known for handling benign file types (e.g., an image viewer, text editor) spawns a suspicious child process (e.g., cmd.exe, powershell.exe) or initiates an external network connection.": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal process ancestry using Windows Event ID 4688. Monitor for instances where a common document or media handling application (e.g., mspaint.exe, notepad.exe, AcroRd32.exe) becomes a parent to an interpreter, shell, or other unexpected process. Correlate this process creation event with subsequent network connections (from Zeek conn.log) originating from the new child process to external IP addresses. A time series analysis could detect spikes in such anomalous process chains, indicating a potential campaign."
          },
          "Benign-looking files (e.g., .png, .log, .tmp) being written to unusual or script-execution-related locations by processes that do not typically handle such files, followed by execution.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor file write events (Windows Event ID 4663) to sensitive or temporary locations (e.g., C:\\Users\\<user>\\AppData\\, C:\\Windows\\Temp\\, C:\\ProgramData\\). Profile the types of processes that normally write files to these locations and their typical file extensions. Use entropy measures and frequency analysis to detect anomalies, such as a browser process writing a '.txt' file to a startup folder. Correlate the file write event (4663) with a subsequent process creation event (4688) that executes the masqueraded file, linking the events by file path and a short time window."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
