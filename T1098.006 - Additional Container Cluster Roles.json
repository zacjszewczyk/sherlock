```json
[
  {
    "Is the adversary maintaining persistence by adding roles to container accounts? (TA0003 - Persistence)": {
      "Indicators": {
        "T1098.006 - Additional Container Cluster Roles": {
          "Kubernetes API requests to manage RBAC roles originating from IP addresses or using User-Agent strings known to be associated with malicious activity.": {
            "Data": "Zeek conn.log; Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Continuously correlate source IP addresses from Zeek conn.log for all traffic to the Kubernetes API server against a CTI feed of known malicious IPs. Additionally, analyze Zeek http.log to check User-Agent strings from these requests against a list of those associated with known Kubernetes attack tools. An inner join of connection logs with these threat lists should trigger an immediate alert."
          },
          "Creation of a new ClusterRoleBinding or RoleBinding with a name matching known malicious tool conventions or binding a subject to a high-privilege role like 'cluster-admin' for non-administrative purposes.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek http.log for POST requests to Kubernetes API endpoints for 'clusterrolebindings' or 'rolebindings'. Use regular expression matching on the HTTP payload to search for suspicious names (e.g., containing 'backdoor', 'exploit', 'pwn', 'system:stealth') or the assignment of the 'cluster-admin' role to a non-administrator account. Maintain and regularly update a list of these suspicious patterns."
          },
          "A non-administrative account or a newly created service account is granted new or modified RBAC roles, especially outside of established change control windows or by an unusual administrator.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal RBAC modification activity, including which administrative accounts perform these actions and during which time windows. Monitor Zeek http.log for POST/PUT requests to 'clusterrolebindings'/'rolebindings' endpoints. Use time-series analysis to detect modifications at anomalous times (e.g., nights, weekends). Use descriptive statistics and frequency analysis to flag any RBAC changes made by accounts not on an approved list of administrators or by newly created accounts."
          },
          "An account exhibits an unusual pattern of enumeration of RBAC roles followed by the creation or modification of a role binding to establish persistence.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "For each Kubernetes account, profile its typical API interactions to establish a behavioral baseline. Monitor for a sequence of actions where an account first performs broad enumeration of existing roles and permissions (high volume of GET requests to RBAC endpoints), followed shortly by a modification (POST/PUT request) that creates a new persistent access path. Correlate this sequence of discovery and action within a short time window (e.g., 10 minutes) to detect a potential attacker setting up a foothold."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary escalating privileges by adding roles to container accounts? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1098.006 - Additional Container Cluster Roles": {
          "Kubernetes API requests to modify RBAC roles originating from a source IP address recently associated with lower-privilege compromise within the cluster.": {
            "Data": "Zeek conn.log; Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate Kubernetes API traffic from Zeek conn.log and http.log with internal incident data and alerts. If a pod, node, or user IP was recently flagged for suspicious activity (e.g., a reverse shell, anomalous process execution), any subsequent Kubernetes API calls from that same IP to create or modify RBAC roles should be treated as a high-confidence indicator of privilege escalation and trigger a critical alert."
          },
          "An account is bound to a role that grants permissions to impersonate other users (the 'impersonate' verb), create new role bindings, or has wildcard permissions.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Parse the HTTP payloads of POST/PUT requests to 'clusterrolebindings'/'rolebindings' from Zeek http.log. Specifically look for the assignment of roles containing rules with the verb 'impersonate', rules granting 'create'/'update' permissions on `roles`, `clusterroles`, or `rolebindings` resources, or roles containing wildcard permissions ('*' for resources or verbs). Alert on any such assignment to an account not explicitly authorized for such privileges."
          },
          "A container service account, typically limited to a specific namespace, is bound to the high-privilege 'cluster-admin' role.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek http.log for API calls creating or modifying role bindings. Generate a high-priority alert specifically when the 'subjects' field in the request payload contains a service account ('kind: ServiceAccount') and the 'roleRef' field points to the 'cluster-admin' ClusterRole. This is a common and dangerous privilege escalation technique and should be investigated immediately."
          },
          "A low-privilege account successfully modifies its own permissions or the permissions of another account to a higher-privilege role.": {
            "Data": "Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a baseline of the privilege level of Kubernetes accounts (e.g., admin, user, service account). Monitor API requests that modify RBAC roles. If the source account of the request (identified in the API request metadata) is classified as low-privilege and the request successfully grants high-privilege roles to itself or another account, flag it as a critical event. This requires correlating the source of the API call with its known permission level."
          },
          "Anomalous process execution on a cluster node is followed by Kubernetes API calls from that node's IP address to escalate privileges.": {
            "Data": "Windows Event ID 4688; Zeek http.log",
            "Data Platform": "Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for suspicious process creation on cluster nodes (e.g., execution of a reverse shell, cryptocurrency miner, or known exploit tool via Windows Event ID 4688). If such an event is detected, use correlation analysis to determine if the IP address of that node subsequently makes API calls (observed in Zeek http.log) to create or modify 'clusterrolebindings' or 'rolebindings' within a short timeframe (e.g., 15 minutes). This behavioral sequence strongly indicates privilege escalation following a node-level compromise."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```