[
    {
        "information_requirement": "Is the adversary executing malicious code using XPC services?",
        "tactic_id": "TA0002",
        "tactic_name": "Execution",
        "indicators": [
            {
                "technique_id": "T1559.003",
                "name": "XPC Services",
                "evidence": [
                    {
                        "description": "Execution of XPC services with file names, paths, or code signatures known to be associated with malicious actors or malware.",
                        "data_sources": [
                            "macOS Process Creation Events",
                            "macOS File System Events",
                            "Code Signature Logs"
                        ],
                        "data_platforms": [
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor process creation events for the launch of XPC services. Correlate the process image path, file hash, and code signature information against a cyber threat intelligence feed of known malicious XPC services and associated malware campaigns. Maintain and alert on a watchlist of suspicious file paths for XPC service binaries (e.g., '/tmp/', '~/Library/LaunchAgents/')."
                    },
                    {
                        "description": "An application or process creates and installs a new XPC service bundle, particularly in a user-writable directory, and then immediately communicates with it.",
                        "data_sources": [
                            "macOS File System Events",
                            "macOS Process Creation Events",
                            "macOS IPC Logs"
                        ],
                        "data_platforms": [
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate file creation events for `.xpc` or `.appex` bundles within user-writable directories (e.g., '/tmp/', '~/Library/Application Support/') with subsequent process creation events for that service and inter-process communication (IPC) events from the creating process to the new service. Use correlation analysis across these log sources based on process IDs and timestamps to detect this pattern (write -> execute -> connect) within a short time window (e.g., < 60 seconds)."
                    },
                    {
                        "description": "An unusual or unexpected client process (e.g., a script interpreter, a document reader, a browser helper) communicates with a legitimate, high-privilege system XPC service.",
                        "data_sources": [
                            "macOS IPC Logs",
                            "macOS Process Creation Events"
                        ],
                        "data_platforms": [
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Establish a baseline of normal client-server relationships for XPC communications on endpoints. Monitor IPC logs for connections between processes. Flag instances where an unexpected client process (e.g., 'bash', 'python', 'Microsoft Word') initiates a connection to a sensitive system XPC service (e.g., 'com.apple.securityd', 'com.apple.opendirectoryd'). Use descriptive statistics and frequency analysis to identify rare client-service pairs. Box-plots can be used to visualize connection frequencies and identify statistical outliers."
                    },
                    {
                        "description": "A new XPC service is registered and executed from a non-standard file path, is unsigned, or is signed by an untrusted or newly-seen developer certificate.",
                        "data_sources": [
                            "macOS Process Creation Events",
                            "Code Signature Logs"
                        ],
                        "data_platforms": [
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for the execution of new XPC services. For each new service, analyze its properties: file path, code signature status, and certificate information. Compare the file path against an allow-list of standard locations for XPC services (e.g., '/System/Library/Frameworks/', '/Applications/AppName.app/Contents/XPCServices/'). Flag any XPC service that is unsigned, has an invalid signature, is signed by an ad-hoc certificate, or is located in a user-writable path like '/Users/Shared/' or '/tmp/'. Use time series analysis to detect a sudden increase in the number of XPC services signed by new, previously unseen developer certificates."
                    },
                    {
                        "description": "A legitimate system XPC service is launched by an unusual parent process, deviating from its normal launch by launchd or its primary application bundle.",
                        "data_sources": [
                            "macOS Process Creation Events"
                        ],
                        "data_platforms": [
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze process creation events for all system XPC services. The legitimate parent process for most XPC services is `launchd` (PID 1) or a specific, known parent application. Establish a baseline of normal parent-child relationships for all XPC services in the environment. Alert on any instance where a system XPC service is launched by a process other than its expected parent (e.g., a browser, a terminal shell, or an office application). Use frequency analysis to identify rare or singleton parent-child process relationships involving XPC services."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
