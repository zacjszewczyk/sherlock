```json
[
  {
    "Is the adversary elevating privileges via process injection? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1055 - Process Injection": {
          "A process with a known malicious hash accesses memory or creates a thread in a separate, higher-privileged process.": {
            "Data": "Windows Event ID 10 (Sysmon); Windows Event ID 8 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Sysmon Event ID 10 (ProcessAccess) and 8 (CreateRemoteThread). For each event, compute the cryptographic hash of the executable file listed in the `SourceImage` field. Cross-reference this hash against a continuously updated threat intelligence feed of known malware hashes. Generate a high-priority alert if a confirmed-malicious process attempts to access or create a thread in a separate process, especially a known privileged system process (e.g., lsass.exe, services.exe)."
          },
          "A sequence of host events matches a known process injection pattern, such as gaining memory write access to a target process followed by remote thread creation.": {
            "Data": "Windows Event ID 10 (Sysmon); Windows Event ID 8 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate Sysmon events on each host based on the `SourceProcessGUID` and `TargetProcessGUID`. Monitor for a specific sequence within a short time window (e.g., <1 second): 1) A Sysmon Event ID 10 where the `GrantedAccess` value includes write permissions (e.g., 0x1F0FFF, 0x143A, 0x1038). 2) Followed by a Sysmon Event ID 8 from the same source to the same target process. Use correlation analysis to link these events and alert on the full pattern, prioritizing alerts where the target process is a high-integrity system process."
          },
          "A process with a lower integrity level attempts to access memory or create a thread in a process with a higher integrity level (e.g., Medium IL process injecting into a High or System IL process).": {
            "Data": "Windows Event ID 10 (Sysmon); Windows Event ID 8 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Sysmon Event ID 10 (ProcessAccess) and 8 (CreateRemoteThread) events. For each event, compare the `SourceProcessIntegrityLevel` to the `TargetProcessIntegrityLevel`. Flag and investigate any instance where a source process attempts to access memory or create a thread in a target process with a strictly higher integrity level (e.g., Medium -> High, Medium -> System, High -> System). This behavior is a strong indicator of a privilege escalation attempt, independent of the specific malware used."
          },
          "A legitimate, privileged system process (e.g., services.exe, lsass.exe) exhibits anomalous post-injection behavior, such as initiating unexpected network connections or spawning non-standard child processes.": {
            "Data": "Windows Event ID 4688; Zeek conn.log; Windows Event ID 3 (Sysmon)",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a statistical baseline of normal child processes (from Windows Event ID 4688) and network activity (from Sysmon Event ID 3 and Zeek conn.log) for critical system processes (`services.exe`, `lsass.exe`, `svchost.exe`, etc.). Monitor for deviations from this baseline, such as these parent processes spawning command interpreters (cmd.exe, powershell.exe) or making external network connections. Use frequency analysis and set-based comparison against the baseline to identify anomalies indicative of a successful injection."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary evading defenses via process injection? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1055 - Process Injection": {
          "Creation of or connection to a named pipe with a name known to be used by malicious tools or C2 frameworks (e.g., Cobalt Strike, Metasploit).": {
            "Data": "Windows Event ID 17 (Sysmon); Windows Event ID 18 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Sysmon Event IDs 17 (Pipe Created) and 18 (Pipe Connected). Compare the value in the `PipeName` field against a curated list of named pipe IOCs associated with common offensive security tools and malware families. This list should be updated regularly from CTI sources. Use regular expression matching to detect variants and generate alerts on any matches for immediate investigation."
          },
          "A legitimate process loads a DLL that is unsigned or has an extremely low prevalence across the environment, a common pattern for evasive in-memory execution.": {
            "Data": "Windows Event ID 7 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Sysmon Event ID 7 (Image Loaded). For each event, check if the `Signed` field is 'false'. Calculate the prevalence of the `ImageLoaded` file hash across the enterprise. Use descriptive statistics and percentile rankings to identify rare or unique DLLs. Alert on the loading of any unsigned DLL or any signed DLL with a prevalence below a defined threshold (e.g., loaded on <1% of endpoints), especially when loaded by a commonly targeted process like a browser, explorer.exe, or svchost.exe."
          },
          "A legitimate process, often allow-listed for network access (e.g., explorer.exe, browser), loads a DLL from a non-standard, user-writable location such as a temporary directory or user profile folder.": {
            "Data": "Windows Event ID 7 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Sysmon Event ID 7 (Image Loaded) events. Identify DLL loads into trusted processes that are often abused for defense evasion (e.g., `explorer.exe`, `svchost.exe`, browsers). Analyze the path of the `ImageLoaded`. Flag any loads originating from user-writable locations (e.g., `C:\\Users\\*`, `C:\\ProgramData\\`, `C:\\Windows\\Temp\\`). Use frequency analysis and set-based comparisons against an established baseline of known-good DLL paths for each parent process to identify outliers that suggest DLL hijacking or other injection methods."
          },
          "A typically non-network-facing process initiates suspicious network connections shortly after being the target of a memory access event from another process.": {
            "Data": "Windows Event ID 10 (Sysmon); Windows Event ID 3 (Sysmon); Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Create a correlated detection rule. First, identify potential injection via Sysmon Event ID 10 (ProcessAccess) where a source process gains write access to a target process. Then, monitor the target process for subsequent anomalous network activity using Sysmon Event ID 3 (Network Connection) and Zeek conn.log within a short time window (e.g., 60 seconds). Establish a baseline of normal network behavior for common processes (e.g., notepad.exe, svchost.exe). Alert when a process that was recently a target of memory access begins making external network connections, especially to low-reputation IPs or over non-standard ports. Use correlation analysis to link the injection and network events."
          },
          "Anomalous named pipe creation or usage, such as pipes with high-entropy names or pipes being used by processes that do not normally perform Inter-Process Communication (IPC).": {
            "Data": "Windows Event ID 17 (Sysmon); Windows Event ID 18 (Sysmon)",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Sysmon Event IDs 17 and 18 for named pipe activity. Establish a baseline of normal pipe-creating/connecting processes and typical pipe name structures. Flag connections by processes that rarely use IPC (e.g., office applications, `rundll32.exe`). Calculate the Shannon entropy of all created `PipeName` values; use a box-plot or IQR method to alert on names with unusually high entropy, which may indicate random generation by malware. Use descriptive statistics on pipe usage per process to find rare and potentially suspicious activity."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```