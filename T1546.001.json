[
    {
        "information_requirement": "Is the adversary maintaining persistence by modifying file associations?",
        "tactic_id": "TA0003",
        "tactic_name": "Persistence",
        "indicators": [
            {
                "technique_id": "T1546.001",
                "name": "Change Default File Association",
                "evidence": [
                    {
                        "description": "Direct modification of a file association registry key to a known malicious value or by a known malicious process.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4657 (A registry value was modified) for changes to keys under `HKEY_CLASSES_ROOT`, `HKEY_CURRENT_USER\\Software\\Classes`, and `HKEY_LOCAL_MACHINE\\Software\\Classes`, specifically targeting `shell\\open\\command` subkeys. Correlate the 'Process Name' making the change against a list of known malicious executables. Compare the 'New Value' written to the registry with a threat intelligence feed of known malicious command lines or executable paths used for persistence. Alert on any matches."
                    },
                    {
                        "description": "File associations for common, non-executable file types (e.g., .txt, .lnk, .rtf) being changed to execute a script interpreter or a living-off-the-land binary (LOLBin).",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4657 for changes to `shell\\open\\command` default values for common file extensions (.txt, .html, .lnk, .jpg, etc.). Flag modifications where the new handler is a script interpreter (e.g., powershell.exe, cscript.exe, wscript.exe, mshta.exe) or a known LOLBin (e.g., rundll32.exe, regsvr32.exe). Use correlation analysis to identify if such a change occurs across multiple systems, indicating a potential campaign pattern."
                    },
                    {
                        "description": "An anomalous process, such as a script interpreter or command shell, is spawned by a common user application (e.g., text editor, image viewer) when a file is opened, indicating a hijacked file association.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Establish a baseline of normal parent-child process relationships for common applications that handle files (e.g., explorer.exe, notepad.exe, mspaint.exe, winword.exe). Monitor Windows Event ID 4688 for deviations, specifically where these parent processes launch unexpected child processes like powershell.exe, cmd.exe, wscript.exe, or any process from an unusual file path (e.g., %APPDATA%, %TEMP%). Use frequency analysis and descriptive statistics to identify rare or new process chains and alert on statistically significant outliers."
                    },
                    {
                        "description": "A process launched via a file association handler initiates network communication, especially to an unusual or known malicious destination.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate process creation events (Windows Event ID 4688) with network connection logs (Zeek conn.log) by joining on host IP and timestamp. Filter for processes spawned by common file handlers (e.g., explorer.exe, document viewers). Analyze the network destinations of these child processes. Cross-reference destination IPs/domains with threat intelligence feeds (selector-based). Additionally, use entropy measures or percentile analysis on destination IPs/ports/domains across the enterprise to identify statistically rare outbound connections (behavioral-based) originating from this execution pattern."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary escalating privileges by modifying file associations?",
        "tactic_id": "TA0004",
        "tactic_name": "Privilege Escalation",
        "indicators": [
            {
                "technique_id": "T1546.001",
                "name": "Change Default File Association",
                "evidence": [
                    {
                        "description": "Modification of a file association's `shell\\open\\command` registry key to include a known privilege escalation payload or tool command line.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4657 for modifications to file association registry keys (`...\\shell\\open\\command`). Scan the 'New Value' data against a list of signatures for known privilege escalation tools or commands (e.g., commands invoking `potato`-family exploits, specific `rundll32` invocations for bypasses). Alert on any matches, as this indicates a direct attempt to weaponize a file association with a known malicious payload."
                    },
                    {
                        "description": "File association for a file type commonly accessed by system-level processes (e.g., .log, .xml, .ini) is modified to execute a script interpreter or an executable in a user-writable directory.",
                        "data_sources": [
                            "Windows Event ID 4657"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Create a watch list of file extensions that are frequently opened automatically by services or applications running as SYSTEM or Administrator (e.g., .log, .xml, .ini, .cfg). Monitor Windows Event ID 4657 for changes to the `shell\\open\\command` for these specific extensions. Flag any change that points the handler to a script interpreter (powershell.exe, cscript.exe) or any executable path in a user-writable location like %APPDATA% or C:\\Users\\*. This pattern is highly suspicious as system processes should not be launching user-land executables via file associations."
                    },
                    {
                        "description": "A process running with high integrity or as a privileged user (e.g., SYSTEM, Administrator) launches an unexpected child process, where the execution chain suggests it was triggered by opening a file.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Filter process creation events (Windows Event ID 4688) where the Parent Process is running as a privileged user (SYSTEM, Local/Network Service, Administrator). Analyze the child processes spawned. Flag instances where these privileged parents launch unexpected children (e.g., cmd.exe, powershell.exe, unsigned executables from temporary locations) that are not part of their established baseline behavior. Use frequency analysis and parent-child process graphing to identify anomalous launches that deviate from known good system activity, which could indicate a privileged process was tricked into triggering a malicious file handler."
                    },
                    {
                        "description": "A process is created with an elevated token immediately following a user interaction with a common file type, where the parent-child relationship is anomalous.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate user file interactions (e.g., double-clicking a file, which spawns a process from explorer.exe) with subsequent process creation events. Monitor Windows Event ID 4688 for child processes launched from common file handlers (explorer.exe, word.exe, etc.) where the child process's 'Token Elevation Type' is Full (`0x2`). Baseline normal UAC prompts and behaviors. Use correlation analysis to flag chains where opening a benign-looking file type (e.g., .txt) results in a UAC prompt and the creation of an elevated process that is not the default, expected handler. This indicates an attempt to trick the user into elevating a malicious payload."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
