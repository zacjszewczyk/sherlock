
[
  {
    "Has the adversary attempted to impair command history logging? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1562.003 - Impair Command History Logging": {
          "Execution of scripts or binaries (identified by file hash or name) known to be used by threat actors specifically for impairing or clearing command history.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for executable names or command-line arguments. Correlate the file name or calculated hash of the executable against a cyber threat intelligence (CTI) feed of known malicious tools or scripts used for defense evasion and history clearing. Alert on any matches."
          },
          "Execution of specific, known commands or command sequences used to disable, clear, or manipulate shell history logging in PowerShell, bash, or other shells.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation logs (Windows Event ID 4688), specifically the command line field, for known history impairment patterns. Create a comprehensive regex or watchlist for commands such as `unset HISTFILE`, `export HISTSIZE=0`, `export HISTCONTROL=ignorespace`, `ln -sf /dev/null`, `> ~/.bash_history`, `Set-PSReadLineOption -HistorySaveStyle SaveNothing`, `Set-PSReadLineOption -HistorySavePath $null`, `Remove-Item *ConsoleHost_history.txt`, `del *ConsoleHost_history.txt*`, and `Set-Content *history* -Value \"\"`. Alert on any execution of these patterns."
          },
          "Anomalous execution of history impairment commands by non-administrative users, from unexpected parent processes, or as the first command in a new remote session.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4624",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Using the patterns from the pattern-based detection, analyze the execution context. Establish baselines for which users and parent processes (e.g., `explorer.exe`, `sshd.exe`) are associated with these commands. Use frequency analysis and correlation to flag executions by unusual users (e.g., standard users, service accounts), from suspicious parent processes (e.g., `winword.exe`, a web server process), or immediately following a remote login event (Windows Event ID 4624, Logon Type 3 or 10). A box-plot of command frequency by user can identify anomalous behavior."
          },
          "A sequence of actions where command history is disabled, followed by execution of suspicious commands, and potentially followed by re-enabling history logging within the same session.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate process creation events (Windows Event ID 4688) on a per-host and per-user session basis (e.g., by Logon ID). Define and monitor for a sequence where a known history impairment command is detected, followed within a short time window (e.g., 1-15 minutes) by other suspicious commands (e.g., discovery, credential dumping, lateral movement). Alert when this behavioral sequence is observed, as it strongly indicates an attempt to hide actions."
          },
          "The command history file for an active user session is unexpectedly empty, missing, or has not been modified for an unusually long period despite ongoing process activity for that user.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable file access auditing (Object Access Auditing) for standard history file locations (e.g., `%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine`). Monitor for deletion events (Event ID 4663 with specific access masks for delete). Correlate the file's last modification time and size with recent user process activity logs (Event ID 4688). If a user has significant process activity but their history file is empty or has not been updated (indicating no write events), flag for investigation. This can detect impairment methods that do not leave a direct command-line trace, such as symlinking to a null device or killing the shell process."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
