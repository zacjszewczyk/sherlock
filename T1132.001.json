[
    {
        "information_requirement": "Is the adversary communicating with command and control infrastructure using encoded data?",
        "tactic_id": "TA0011",
        "tactic_name": "Command and Control",
        "indicators": [
            {
                "technique_id": "T1132.001",
                "name": "Standard Encoding",
                "evidence": [
                    {
                        "description": "Detection of specific, known encoded strings or byte sequences within network traffic that are signatures of known malware C2 using standard encoding schemes.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Zeek http.log",
                            "Zeek files.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Utilize a regularly updated list of known malicious encoded strings or byte patterns (e.g., specific Base64 encoded commands, unique XOR keys followed by encoded data, specific MIME boundary markers used by malware) associated with specific malware families or campaigns. Scan network payloads extracted by Zeek (e.g., from http.log bodies/URIs, files.log, or sampled conn.log content) for these exact signatures using string matching or regular expressions. Alert on any confirmed matches."
                    },
                    {
                        "description": "Presence of common standard encoding patterns (e.g., Base64, Hexadecimal, URL encoding) in unusual parts of network protocols or in protocols/fields where they are not typically standard, particularly in C2-like communication channels.",
                        "data_sources": [
                            "Zeek http.log",
                            "Zeek dns.log",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Systematically scan common C2 channels for encoding patterns: In Zeek http.log, look for extensive Base64/Hex/URL encoded data in URI paths, query parameters, custom HTTP headers, cookies, or POST bodies where not standard for the application. In Zeek dns.log, inspect TXT records, A/AAAA record subdomains, or CNAME chains for patterns of Base64/Hex encoding. For Zeek conn.log, analyze payload snippets of non-standard protocols or traffic on unusual ports for common encoding markers (e.g., Base64 character set including padding '=', hex characters '0-9a-fA-F'). Use regular expressions and analyze character frequency distribution (e.g., high prevalence of Base64 alphabet) within relevant data fields. Correlate findings with connections to low-reputation or newly observed domains/IPs."
                    },
                    {
                        "description": "Anomalous network traffic flow characteristics, such as significantly asymmetric data volumes (e.g., client sending much more data than received, or vice-versa in beaconing scenarios) or unusual data transfer sizes, potentially indicative of encoded C2 communications.",
                        "data_sources": [
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze Zeek conn.log to calculate byte ratios (orig_bytes / resp_bytes) and total byte counts (orig_bytes + resp_bytes) for all network sessions. Establish baselines for typical traffic patterns per service, port, internal host group, and destination profile. Use descriptive statistics (mean, median, standard deviation, Inter-Quartile Range - IQR) and box-plots to identify sessions with unusually high or low byte ratios or abnormal data volumes compared to these baselines. Flag sessions where client bytes sent vastly exceed server bytes received (potential data exfiltration using encoding) or where small, regular client requests receive small server responses (potential beaconing with encoded data). Time series analysis can track volume changes over time for specific connections to detect sustained anomalies."
                    },
                    {
                        "description": "Network connections initiated by previously unseen, non-standard, or unauthorized processes on endpoints, exhibiting high data entropy or containing mixed character sets indicative of encoded C2 payloads.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 5156",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for process creation, focusing on new processes, unsigned executables, or processes running from unusual locations (e.g., temp directories, user profiles). Correlate these processes with their network connections using Windows Event ID 5156 (WFP connections) or by matching process information (PID, timestamp) with Zeek conn.log source/destination details. For traffic associated with these suspicious processes, calculate the Shannon entropy of payload data (if samples are available from Zeek's file extraction, content inspection capabilities, or other packet captures). High entropy values (e.g., > 6 for Base64, > 7 for compressed/encrypted, relative to typical plaintext for that protocol) can indicate encoding or encryption. Establish baseline entropy values for common protocols/processes and use statistical deviation (e.g., Z-score) to flag significant increases. Analyze character set distribution for non-standard mixes."
                    },
                    {
                        "description": "Network traffic on standard ports (e.g., HTTP/80, HTTPS/443, DNS/53) that deviates significantly from expected protocol structure, content types, or data field lengths, often containing large, opaque data blobs consistent with standard encoding schemes.",
                        "data_sources": [
                            "Zeek http.log",
                            "Zeek dns.log",
                            "Zeek conn.log",
                            "Zeek ssl.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Analyze Zeek http.log for requests/responses with unusual Content-Types (e.g., 'application/octet-stream' for typically text-based services), very long string values in headers/URIs/bodies that exceed normal lengths (use percentile-based alerting on length fields), or a lack of typical HTTP structural elements. For HTTPS (Zeek ssl.log), inspect unencrypted elements like SNI for anomalies (e.g., DGA-like names, unusual TLDs) and, if decryption is possible, apply HTTP structural analysis. In Zeek dns.log, look for unusually long DNS queries/responses (especially TXT, NULL records), an excessive number of queries for a specific domain/subdomain structure indicative of tunneling, or non-standard query types being used for data transfer. For traffic on common ports in Zeek conn.log that isn't fully parsed by corresponding protocol analyzers (e.g., Zeek reports 'partial' analysis or no entry in http.log for a port 80 connection), flag as suspicious. Use linear regression to model expected data sizes versus actual for common protocols and detect significant outliers."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
