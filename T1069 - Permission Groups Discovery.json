```json
[
  {
    "Has the adversary attempted to discover permission groups or settings within the network? (TA0007 - Discovery)": {
      "Indicators": {
        "T1069 - Permission Groups Discovery": {
          "Execution of known malicious scripts or binaries (identified by hash or name) for permission discovery, or use of discovery commands from atypical file paths.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creations. Correlate process names (e.g., `bloodhound.exe`, `sharphound.exe`) or their file hashes against a threat intelligence feed of known malicious tools/scripts used for permission discovery. Alert on matches. Additionally, monitor for common discovery utilities (`net.exe`, `whoami.exe`, `powershell.exe`) executed with discovery-related arguments from non-standard or suspicious paths (e.g., user's %TEMP%, Downloads, C:\\Windows\\Tasks, Recycle Bin). Maintain an approved list of paths for these utilities and use descriptive statistics on execution paths to flag anomalies."
          },
          "Execution of common command-line utilities or specific PowerShell cmdlets to enumerate local/domain groups, user memberships, or access control lists (ACLs).": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 (Process Creation with command line) for utilities like `net.exe` (e.g., `net user`, `net group`, `net localgroup`), `nltest.exe`, `dsquery.exe`, `whoami.exe /groups`. Monitor Windows Event ID 4104 (PowerShell Script Block Logging) for cmdlets like `Get-LocalGroup`, `Get-LocalGroupMember`, `Get-ADGroup`, `Get-ADGroupMember`, `Get-ADUser`, `Get-Acl`, `Find-InterestingDomainAcl`, or WMI access via `Get-WmiObject -Namespace root\\cimv2 -Class Win32_GroupUser`. Use regular expressions to identify these specific command patterns. Log detections and establish baselines for legitimate administrative use; deviations (e.g., unusual combinations or volume) trigger investigation. Calculate frequency of these commands per user/host and use IQR to spot outliers."
          },
          "Execution of container orchestration commands (e.g., kubectl, docker) to enumerate permissions or access controls within Windows-based container environments.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creations involving `kubectl.exe` or `docker.exe` on Windows hosts running container workloads. Look for command-line arguments indicative of permission enumeration such as `kubectl auth can-i --list`, `kubectl get rolebindings`, `kubectl get clusterrolebindings`, `docker inspect --type container <id>`. Profile normal usage of these commands in your environment. Use frequency analysis (count of commands per user/host/container over time) and thresholding to detect excessive or unexpected execution. Correlate such activity with unusual network connections from the container or host."
          },
          "Anomalous frequency, timing, or sourcing of permission group enumeration events, including targeting of highly privileged groups by unauthorized accounts.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104; Windows Event ID 4798; Windows Event ID 4799",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event IDs: 4688 (Process Creation), 4104 (PowerShell), 4798 (User's local group membership enumerated), and 4799 (User's domain group membership enumerated). Establish baselines for discovery command frequency and scope per user role and host type. Use statistical methods (e.g., IQR or Z-scores on command counts per user/host, entropy of targeted groups by a single user) to detect: 1. Enumeration activities by non-administrative accounts or service accounts not typically performing such tasks. 2. A single user/host enumerating an unusually large number or all domain/local groups. 3. Discovery commands executed at atypical times (e.g., late nights, weekends for standard business users) using time series analysis of event counts. 4. Specific enumeration (Event ID 4798/4799) of highly privileged groups (e.g., Domain Admins, Enterprise Admins) by accounts not part of a defined administrative team. Flag deviations for investigation."
          },
          "A sequence of permission group discovery activities followed by other suspicious behaviors like credential access, lateral movement tool staging, or exploit attempts.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104; Windows Event ID 4798; Windows Event ID 4799; Windows Event ID 4624; Windows Event ID 4648",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate permission discovery events (T1069 identified via Event IDs 4688, 4104, 4798, 4799) with subsequent indicators of other ATT&CK techniques within a defined time window (e.g., 5-60 minutes). Specifically look for sequences such as T1069 followed by credential dumping (e.g., T1003 via Mimikatz detection), use of remote services for lateral movement (e.g., T1021 like PsExec causing Event ID 4648 followed by remote 4624 Logon Type 3), or staging of new tools. Use correlation analysis and sequence pattern matching (e.g., if T1069 occurs on host A by user X, then user X attempts T1021 to host B). Develop a scoring system based on the temporal proximity and severity of correlated events to prioritize alerts indicating a developing attack chain."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```