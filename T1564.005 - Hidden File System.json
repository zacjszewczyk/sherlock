
[
  {
    "Is the adversary employing defense evasion techniques involving hidden file systems? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1564.005 - Hidden File System": {
          "Network traffic indicating the download of known utilities used for creating hidden file systems.": {
            "Data": "Zeek files.log; Zeek conn.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Zeek files.log for downloaded executables (PE files) or archives. Calculate the hash of downloaded files and inner join against a list of known hashes for hidden file system utilities (e.g., VeraCrypt, TrueCrypt, E4sh, BestCrypt). Correlate any matches with Zeek conn.log to identify the source, destination, and time of the download for investigation."
          },
          "Execution of disk management utilities with command-line arguments consistent with creating, manipulating, or hiding partitions and volumes.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for disk management utilities like `diskpart.exe`, `mountvol.exe`, and `fsutil.exe`. Analyze command-line arguments using regular expressions to detect patterns associated with hiding volumes (e.g., `mountvol <drive_letter>: /d`), manipulating unallocated space, or creating non-standard partitions. Maintain a baseline of normal administrative script behavior and use correlation analysis to flag executions that deviate or are not associated with known change requests."
          },
          "Loading of an unsigned or atypically named third-party file system or disk driver into the kernel.": {
            "Data": "Windows Event ID 7045",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for the creation of new services (Windows Event ID 7045) where the `ServiceType` is a kernel driver (`0x1`). Scrutinize events where the driver's signature is invalid or absent, or the `ImagePath` or `ServiceName` is unusual or matches known malicious drivers. Use descriptive statistics and frequency analysis on driver names and paths across the enterprise to identify rare or unique drivers for further investigation."
          },
          "A non-standard administrative process or user-land application directly accessing raw disk partitions, bypassing the standard file system.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4656; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for object access events (Windows Event ID 4663 for access, 4656 for handle requests) where the `Object Name` corresponds to a raw physical drive or volume (e.g., `\\.\\PhysicalDrive0`, `\\.\\C:`). Correlate these events with the process name that initiated them. Establish a baseline of legitimate processes that perform raw disk access (e.g., backup software, disk defragmenters). Use outlier detection and time-series analysis to alert on processes accessing raw disk that are rare, unsigned, or not on an approved application list. Analyze the `Accesses` field for high-privilege requests like `WriteData` or `ReadData` from unexpected processes."
          },
          "Anomalous modification of the Master Boot Record (MBR), Volume Boot Record (VBR), or critical file system driver registry keys by non-system processes.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Tightly monitor for write access (Windows Event ID 4663) to raw disk objects, specifically targeting low-level offsets consistent with boot sectors. Concurrently, monitor for modifications (Windows Event ID 4657) to critical registry keys controlling file system drivers (e.g., `HKLM\\SYSTEM\\CurrentControlSet\\Services\\Ntfs`, `\\FltMgr`) or boot configuration. Use entropy measures on the data being written (if available) or correlation analysis to link these low-level disk/registry writes to specific parent processes. Alert immediately on any process other than trusted system installers or patch management tools making these changes."
          },
          "A significant discrepancy between the reported physical disk size and the sum of its visible partition sizes, indicating the presence of hidden, unpartitioned space.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "This is primarily a hunting action. Periodically execute and log the output of disk management queries (e.g., `wmic diskdrive get size`, `wmic partition get size`, `fsutil volume list`) via scheduled tasks or remote administration tools, capturing the output through process creation logs (Windows Event ID 4688) with command-line logging enabled. Correlate and sum the sizes of all visible partitions and compare this to the total disk size. Use linear regression or other trend analysis to track this discrepancy over time on critical systems. A sudden increase in unaccounted-for space could indicate the creation of a hidden area and warrants investigation."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
