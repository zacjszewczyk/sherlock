
[
  {
    "Is the adversary escalating privileges using Process Doppelg채nging? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1055.013 - Process Doppelg채nging": {
          "A process creation event is observed where the parent process hash or name matches a known malicious tool that utilizes process injection for privilege escalation.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a list of selectors (file hashes, file names) for known malicious parent processes or scripts that are known to use process injection techniques for privilege escalation. Continuously monitor Windows Event ID 4688 events and correlate the 'Parent Process Name' and hash against this threat intelligence list. Investigate any matches, paying close attention to the user context and integrity level of the child process."
          },
          "A common user-level process (e.g., explorer.exe, winword.exe) spawns a system-level process (e.g., svchost.exe, lsass.exe), and the new child process is created with an elevated or system-level security token.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze Windows Event ID 4688 to build a baseline of normal parent-child process relationships. Create a high-priority rule to detect anomalous pairings where user-level applications are parents of core system processes. Specifically inspect the 'Token Elevation Type' (e.g., Type 2 '%%1937' or full '%%1938') and 'Subject User Name' fields of the child process event to confirm it is running with higher privileges than its parent. Use frequency analysis on parent-child pairs to identify statistically rare occurrences."
          },
          "A newly created system process, launched under a suspicious parent, immediately attempts to access sensitive system resources such as the SAM database, LSA secrets, or the memory of other critical processes.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4663; Windows Event ID 4656",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate a suspicious process creation event (Windows Event ID 4688, identified via anomalous parent-child pattern matching) with subsequent object access events. Hunt for Windows Event ID 4663 (file access) on critical files like the SAM database or Event ID 4656 (handle requested) for access to critical processes like 'lsass.exe'. Use correlation analysis based on the Process ID and a short time window (e.g., within 5 seconds of creation) to link these events into a single high-confidence alert for attempted privilege escalation."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary evading defenses using Process Doppelg채nging? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1055.013 - Process Doppelg채nging": {
          "A legitimate system process initiates an outbound network connection to a destination IP address or domain known to be associated with command and control (C2) infrastructure.": {
            "Data": "Zeek conn.log; Windows Event ID 4688",
            "Data Platform": "Network devices, Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate network connection logs (Zeek conn.log) with process information (Windows Event ID 4688) to attribute connections to specific processes. Inner join the destination IP addresses and domains from these connections with a high-confidence, continuously updated CTI feed. Alert on any matches originating from common system processes (e.g., svchost.exe, explorer.exe, runtimebroker.exe) that are likely hosts for injected code."
          },
          "A legitimate system process is created with an anomalous parent process (e.g., an Office application, a web browser) or an unusual command line argument pattern (e.g., empty when one is expected).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal parent processes and command-line structures for common system binaries (e.g., svchost.exe, lsass.exe, explorer.exe) across the environment. Monitor Windows Event ID 4688 for deviations. Flag any instances where a core system process is parented by a non-system, user-level process or has a blank or nonsensical command line. Use frequency analysis and rule-based logic to detect these anomalous patterns indicative of masquerading."
          },
          "A system process with a predictable network profile (e.g., svchost.exe hosting specific services) initiates connections to unusual external destinations or exhibits C2-like beaconing behavior.": {
            "Data": "Zeek conn.log; Windows Event ID 4688",
            "Data Platform": "Network devices, Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Profile the typical network behavior (destination IPs, ports, connection frequency, data volume) for each common system process by correlating Zeek conn.log with Windows Event ID 4688. Use time series analysis on connection logs to detect periodic, fixed-interval connections (beaconing). Use descriptive statistics (mean, std dev, IQR) on data volumes to find anomalous transfers. Use clustering algorithms to identify connections to destinations outside of established normal clusters, indicating a likely injected process."
          },
          "A legitimate system process performs actions inconsistent with its purpose, such as spawning command shells (cmd.exe, powershell.exe), writing new executable files to disk, or executing discovery commands.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for parent-child relationships where a trusted system process (e.g., svchost.exe, runtimebroker.exe, services.exe) is the parent of a command shell, a scripting engine, or a known discovery tool (e.g., whoami.exe, net.exe, ipconfig.exe). This behavior is highly anomalous. Create a baseline of allowed child processes for key system processes and use correlation analysis to alert on any deviation from this allow-list, as it strongly indicates a compromised process."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
