name: "T1406.002: Software Packing"
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook helps determine if an adversary is using packed or obfuscated applications to evade detection on mobile devices. This involves identifying Android Application Package (APK) files with high Shannon entropy scores, which can indicate packing or encryption. It also includes using YARA rules to detect byte sequences, strings, or executable section names associated with known software packers like UPX, FTT, or DexProtector.
type: technique
related:
  - "TA0030: Defense Evasion"
contributors:
  - "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: none
questions:
  - question: "Are newly downloaded APKs originating from known malicious sources?"
    context: |
      Monitors network logs for APK file transfers, extracts the source IP and domain, and compares them against threat intelligence feeds. A match indicates a high probability that a device has downloaded a malicious application from a known malware distribution command and control (C2) server, requiring immediate investigation.
    answer_sources:
      - "Zeek files.log"
      - "Zeek http.log"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Windows Sysmon Event ID 11"
      - "Network Security Monitoring (NSM) sensor locations monitoring traffic to/from corporate Wi-Fi and VPNs"
      - "Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) platform application inventories"
      - "Developer workstations and CI/CD build servers"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          FOR each file transfer with MIME type 'application/vnd.android.package-archive' in Zeek logs:
            GET source IP and domain.
            CHECK source IP/domain against threat intelligence feed.
            IF match: ALERT with file hash, source, destination.
  - question: "Are any newly observed APKs exhibiting unusually high entropy compared to a baseline of approved applications?"
    context: |
      Establishes a baseline of normal Shannon entropy scores from corporate-approved applications. It then monitors for new APKs and calculates their entropy. An APK with an entropy score significantly higher than the baseline (e.g., above the 95th percentile or a static threshold of 7.5) is flagged. This is a strong indicator of packing or encryption used to hide malicious code.
    answer_sources:
      - "Zeek files.log"
      - "Zeek http.log"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Windows Sysmon Event ID 11"
      - "Network Security Monitoring (NSM) sensor locations monitoring traffic to/from corporate Wi-Fi and VPNs"
      - "Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) platform application inventories"
      - "Developer workstations and CI/CD build servers"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          CREATE baseline of Shannon entropy from approved APKs in MDM.
          FOR each new APK from network/host logs:
            CALCULATE entropy.
            IF entropy > 95th percentile of baseline OR > 7.5: ALERT for manual review.
  - question: "Can a machine learning model identify high-risk APKs based on a combination of file features and network context?"
    context: |
      This involves developing and deploying a binary classification model trained on features from both benign and malicious APKs. Features include entropy, file size, permissions, and network context (e.g., source ASN, domain age). The model provides a risk score for each new APK, allowing for automated identification and sandboxing of highly suspicious files, improving detection speed and accuracy.
    answer_sources:
      - "Zeek files.log"
      - "Zeek http.log"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Windows Sysmon Event ID 11"
      - "Network Security Monitoring (NSM) sensor locations monitoring traffic to/from corporate Wi-Fi and VPNs"
      - "Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) platform application inventories"
      - "Developer workstations and CI/CD build servers"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          FOR each new APK:
            EXTRACT features (entropy, size, permissions, network context).
            APPLY pre-trained ML model to generate risk score.
            IF score > confidence threshold: ALERT and SUBMIT to sandbox.
  - question: "Are any newly observed APKs matching YARA rules for known mobile application packers or obfuscators?"
    context: |
      Integrates a YARA scanner into the analysis pipeline to scan all new APK files against a curated ruleset targeting mobile packers (like UPX, DexProtector) and obfuscation libraries. A positive match is a high-fidelity indicator that the application is packed, which is a common defense evasion technique for malware. This provides a direct and reliable signal for immediate investigation.
    answer_sources:
      - "Zeek files.log"
      - "Windows Sysmon Event ID 11"
      - "File systems on developer and user endpoints"
      - "Corporate application repositories and stores"
      - "Network file transfer inspection points (e.g., inline sandboxing)"
      - "Automated malware analysis sandboxes"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          FOR each new APK from network/host logs:
            SCAN with YARA ruleset for mobile packers.
            IF match: ALERT with file hash, path, and matched rule name.
  - question: "Do any new APKs contain an anomalous number of unusual executable section names compared to a baseline of approved applications?"
    context: |
      This question aims to detect packers that modify executable section names. It establishes a baseline of common section names from approved applications. New APKs are then analyzed for section names that are rare, randomized, or deviate significantly from the baseline. A high count of such anomalous names suggests the use of a packer and warrants deeper analysis.
    answer_sources:
      - "Zeek files.log"
      - "Windows Sysmon Event ID 11"
      - "File systems on developer and user endpoints"
      - "Corporate application repositories and stores"
      - "Network file transfer inspection points (e.g., inline sandboxing)"
      - "Automated malware analysis sandboxes"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          CREATE baseline of section names from approved APKs.
          FOR each new APK:
            PARSE section names.
            COUNT anomalous names not in baseline.
            IF count > 3 standard deviations from baseline mean: ALERT for analysis.
  - question: "Has there been a statistically significant spike in the detection of packed software, indicating a potential campaign?"
    context: |
      This question involves applying time-series anomaly detection to the frequency of YARA rule matches for software packing. By modeling the normal rhythm of detections, the system can automatically identify unusual spikes that might represent a coordinated attack or a new malware campaign. This shifts the focus from individual alerts to a broader, more proactive threat hunting perspective.
    answer_sources:
      - "Zeek files.log"
      - "Windows Sysmon Event ID 11"
      - "File systems on developer and user endpoints"
      - "Corporate application repositories and stores"
      - "Network file transfer inspection points (e.g., inline sandboxing)"
      - "Automated malware analysis sandboxes"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          COLLECT time-stamped YARA match counts for packing signatures.
          APPLY time-series anomaly detection model.
          IF observed count > forecasted confidence interval: ALERT to trigger threat hunt.