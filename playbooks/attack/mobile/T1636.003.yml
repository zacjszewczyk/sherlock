name: "T1636.003: Contact List"
id: "f8a9b1c2-d3e4-4f5a-6b7c-8d9e0f1a2b3c"
description: |
  This playbook helps determine if an adversary has successfully collected contact list data from corporate mobile devices. Detection strategies focus on identifying applications with 'read contacts' permission in unusual App Store categories, observing anomalous OS API calls to the contact list followed by suspicious network activity to unknown or malicious destinations, or finding a compromised device (e.g., failed integrity check) that has a sideloaded application with access to contacts.
type: "technique"
related:
  - "TA0035: Collection"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is there an installed mobile application with 'read contacts' permission that is a known malicious application?"
    context: |
      This question seeks to identify overtly malicious applications that have been installed on managed devices. By cross-referencing the application inventory with a threat intelligence feed of known malicious mobile apps, we can quickly detect high-confidence threats that have gained access to sensitive contact information. A match indicates a direct and immediate risk of data exfiltration.
    answer_sources:
      - "MDM Application Inventory Log"
      - "Threat Intelligence Feed (Mobile Malware Identifiers)"
    range: "last 90 days"
    queries:
      - "SEARCH MDM application inventory WHERE has_permission('read contacts') AND application_identifier IN (threat_intelligence_feed) | JOIN with MTD logs"
  - question: "Are there any mobile applications with 'read contacts' permission that belong to an App Store category where this permission is statistically uncommon?"
    context: |
      This question aims to uncover potentially malicious or privacy-invasive applications masquerading as legitimate software. Most apps in a given category (e.g., 'Games') do not require contact access. An app that requests this permission when its peers do not is a statistical anomaly and warrants investigation. This could indicate a 'grayware' app or a compromised legitimate app designed to siphon data.
    answer_sources:
      - "MDM Application Inventory Log"
      - "Application Vetting Service Results"
    range: "last 90 days"
    queries:
      - "QUERY MDM logs daily | GROUP BY app_category | CALCULATE percentage with 'read contacts' permission | FILTER where permission_prevalence < 2% | LIST anomalous applications for review"
  - question: "Can we use machine learning to predict if an application with 'read contacts' permission is malicious based on its metadata?"
    context: |
      This question leverages a supervised machine learning model to proactively identify high-risk applications. By training a model on various features like developer reputation, permissions, and app store ratings, we can score the likelihood of an application being malicious. This automated analysis helps prioritize investigative efforts on the applications that pose the greatest threat, even if they are not yet on a known threat intelligence list.
    answer_sources:
      - "MDM/MTD Logs (Application Metadata)"
    range: "last 90 days"
    queries:
      - "RUN classification model ON (all applications with 'read contacts' permission) | CREATE case IF prediction == 'malicious' AND confidence_score > 0.90"
  - question: "Has a mobile device accessed its contact list and then immediately connected to a known malicious command-and-control (C2) server?"
    context: |
      This question looks for a classic data exfiltration pattern: access data, then phone home. Correlating an OS-level contact access event with a subsequent network connection to an IP address on a malware C2 threat intelligence feed provides a strong signal of active compromise and data theft. The tight time window (5 minutes) increases the confidence that the two events are related.
    answer_sources:
      - "MTD OS API Call Log"
      - "Zeek conn.log"
      - "Threat Intelligence Feed (Mobile Malware C2)"
    range: "last 90 days"
    queries:
      - "CORRELATE MTD log (event: 'contact list access') with Zeek conn.log (destination_ip IN mobile_malware_c2_feed) WHERE device_id matches AND time_difference < 5 minutes"
  - question: "Has any application made an anomalous number of contact list API calls, followed by connections to suspicious or previously unseen domains?"
    context: |
      This question aims to detect abnormal behavior by establishing a baseline of normal activity for each application on each device. A sudden spike in contact list access (e.g., exceeding the 99th percentile) is a significant anomaly. Tying this spike to network connections to domains that are either algorithmically generated (high entropy) or new to the environment strengthens the hypothesis that the application is exfiltrating the contact data it just accessed.
    answer_sources:
      - "MTD OS API Call Log"
      - "Zeek dns.log"
    range: "last 90 days"
    queries:
      - "CALCULATE 30-day baseline of hourly contact API calls per app/device | ALERT if current_hour_count > 99th_percentile | ENRICH alert with Zeek DNS logs for high_entropy_domains (>3.5) or new_domains in the same hour"
  - question: "Can a time-series anomaly detection model identify sequences of events, including contact list access, that deviate from a device's normal behavior?"
    context: |
      This question uses an advanced machine learning approach to understand the holistic behavior of a device over time. Instead of looking at single events in isolation, a model (like an LSTM Autoencoder) learns the normal patterns of API calls, network traffic, and data volume. When a sequence of events, including contact access, cannot be 'reconstructed' accurately by the model, it signals a significant deviation from normalcy, suggesting a potential compromise that might be missed by rule-based detections.
    answer_sources:
      - "MTD OS API Call Log"
      - "Zeek conn.log"
      - "Zeek dns.log"
    range: "last 90 days"
    queries:
      - "RUN time-series model on real-time device event vectors (API calls, network stats) | ALERT if reconstruction_error > threshold for a sequence containing a 'contact list access' event"
  - question: "Is there a device that has failed an integrity check and has a sideloaded application with 'read contacts' permission?"
    context: |
      This question correlates multiple high-risk indicators to pinpoint a likely compromised device. A failed integrity check (e.g., device is rooted or jailbroken), the presence of an app from an untrusted source ('sideloaded'), and that same app having access to sensitive contacts creates a compelling narrative of compromise. This combination is a critical alert because the device's security controls are bypassed, and a potentially malicious app has access to data.
    answer_sources:
      - "MDM Device Compliance Log"
      - "MDM Application Inventory Log"
    range: "last 90 days"
    queries:
      - "CORRELATE MDM logs where (compliance_status == 'compromised' OR integrity_check == 'failed') AND (install_source == 'unofficial') AND (app_permission == 'read contacts') for the same device_id within a 1-hour window"
  - question: "Which devices with sideloaded applications pose the highest risk based on the permissions their sideloaded apps have?"
    context: |
      This question provides a method for risk-based prioritization. Not all sideloaded apps are malicious, but they carry inherent risk. By assigning weights to sensitive permissions (like contacts, microphone, SMS), we can calculate a cumulative risk score for each device. This allows analysts to focus their limited time on the devices that represent the biggest potential threat, rather than investigating every single device with a sideloaded app.
    answer_sources:
      - "MDM Application Inventory Log"
    range: "last 90 days"
    queries:
      - "QUERY MDM inventory for sideloaded apps | CALCULATE risk_score per device based on permission weights (e.g., Contacts=10, SMS=8) | RANK devices by score and investigate top 5% or score > 20"
  - question: "Can we use clustering algorithms to identify outlier mobile devices that deviate significantly from the secure baseline of the device fleet?"
    context: |
      This question uses unsupervised machine learning to find the 'black sheep' in the device fleet. By clustering devices based on security-relevant features (like patch level, integrity check failures, sideloaded app count), we can identify devices that don't fit into the main, presumably secure, clusters. These outliers, identified as 'noise' by algorithms like DBSCAN, are anomalous by definition and should be investigated as they may represent misconfigured or compromised devices.
    answer_sources:
      - "MDM Device Compliance Log"
      - "MDM Application Inventory Log"
    range: "last 90 days"
    queries:
      - "APPLY DBSCAN clustering on all mobile devices using features (os_patch_level, failed_integrity_checks, sideloaded_app_count) | ISOLATE and investigate outlier devices (noise points)"