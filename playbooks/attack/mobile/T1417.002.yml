name: T1417.002: GUI Input Capture
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: >-
  Investigates adversarial attempts to steal credentials or collect sensitive data on corporate mobile devices through GUI Input Capture (T1417.002). This involves detecting applications that use GUI impersonation, deceptive overlays, or input manipulation. The playbook focuses on identifying non-allowlisted applications that possess high-risk permissions like 'android.permission.SYSTEM_ALERT_WINDOW' or 'android.permission.BIND_ACCESSIBILITY_SERVICE'. It also looks for correlated suspicious behavior such as mimicking high-value app names, exhibiting unusually low installation prevalence, causing anomalous application switching events, and initiating suspicious network connections for data exfiltration.
type: technique
related:
  - TA0031: Credential Access
  - TA0035: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious application with overlay capabilities installed on a managed device?
    context: >-
      This question aims to detect the presence of applications that are already identified as malicious and have the technical capability to perform overlay attacks. By joining mobile device management (MDM) application inventories with corporate allowlists and threat intelligence feeds, we can quickly identify and alert on high-confidence threats that have bypassed initial security controls.
    answer_sources:
      - MDM Application Inventory
      - Mobile EDR Application Installation Events
      - Corporate Application Allowlist
      - Mobile Threat Intelligence Feed
      - Centralized MDM/UEM platform, Mobile EDR data repository, and corporate application vetting database.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          JOIN (MDM application inventory) WITH (Corporate Allowlist) AND (Threat Intel Feed) ON (app package name, signing certificate);
          ALERT WHERE (app has 'android.permission.SYSTEM_ALERT_WINDOW') AND (app is NOT in Allowlist) AND (app is IN Threat Intel Feed);
  - question: Is an unusually rare, non-allowlisted application with overlay capabilities present on corporate devices?
    context: >-
      Adversaries often use custom or newly developed malware that won't be in existing threat intelligence feeds. This question identifies these potential threats by searching for applications that are not on the corporate allowlist, have overlay permissions, and have a very low installation count across the enterprise. A low prevalence (e.g., bottom 5th percentile) is a strong indicator of a targeted or nascent threat that warrants investigation.
    answer_sources:
      - MDM Application Inventory
      - Mobile EDR Application Installation Events
      - Corporate Application Allowlist
      - Mobile Threat Intelligence Feed
      - Centralized MDM/UEM platform, Mobile EDR data repository, and corporate application vetting database.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          SELECT all applications FROM (MDM inventory) WHERE (app has 'android.permission.SYSTEM_ALERT_WINDOW');
          FOR each selected app, CALCULATE prevalence = (install count / total devices);
          ALERT WHERE (app is NOT in Allowlist) AND (prevalence < 5th percentile);
  - question: Does a newly installed application exhibit characteristics of malware based on its manifest and permissions?
    context: >-
      This question uses machine learning to proactively identify malware at the time of installation, even before it executes malicious behavior. By extracting features from an application's manifest (like permission counts and specific high-risk permissions), a pre-trained classifier can predict the likelihood of it being malicious. A high probability score can trigger automated responses, such as device quarantine, to contain the threat immediately.
    answer_sources:
      - MDM Application Inventory
      - Mobile EDR Application Installation Events
      - Corporate Application Allowlist
      - Mobile Threat Intelligence Feed
      - Centralized MDM/UEM platform, Mobile EDR data repository, and corporate application vetting database.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          ON (New App Install Event);
          EXTRACT features (permission count, SYSTEM_ALERT_WINDOW flag, etc.) from app manifest;
          INPUT features into Random Forest model;
          IF (malicious probability > 0.85), TRIGGER quarantine and create incident;
  - question: Is a newly installed application impersonating a high-value corporate application by using a similar display name?
    context: >-
      This question addresses typosquatting attacks, where an adversary tricks users into installing a malicious app by giving it a display name very similar to a legitimate, trusted application (e.g., 'Okta Verity' instead of 'Okta Verify'). By calculating the Levenshtein distance between a new app's name and a list of high-value targets, we can flag potential impersonations, especially when the underlying package name or signing certificate does not match the official record.
    answer_sources:
      - MDM Application Inventory
      - Mobile EDR Application Installation Events
      - Corporate Application Metadata Store
      - Centralized MDM/UEM platform and the corporate application metadata repository containing official names, package IDs, and signatures.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          ON (New App Install Event);
          FOR each app in (High-Value App List);
          CALCULATE Levenshtein distance between (new app name) and (high-value app name);
          IF (distance <= 2) AND (new app package/cert != official package/cert), GENERATE critical alert;
  - question: Is there a potential coordinated typosquatting campaign targeting high-value applications across the device fleet?
    context: >-
      Instead of looking at single installation events, this question analyzes trends over time to detect larger campaigns. A sudden spike in the number of installed applications with names highly similar (e.g., Jaro-Winkler score > 0.95) to legitimate apps can indicate a coordinated attack. Time-series analysis can automatically detect these statistically significant deviations from the norm.
    answer_sources:
      - MDM Application Inventory
      - Mobile EDR Application Installation Events
      - Corporate Application Metadata Store
      - Centralized MDM/UEM platform and the corporate application metadata repository containing official names, package IDs, and signatures.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          DAILY JOB:
          CALCULATE count of non-allowlisted apps with Jaro-Winkler similarity > 0.95 to high-value app names;
          ANALYZE count as time series;
          ALERT if count > (30-day moving average + 3 standard deviations);
  - question: Are there clusters of suspicious, similar applications that could represent a polymorphic malware family?
    context: >-
      This question aims to uncover evolving malware families that use polymorphism to evade signature-based detection. By vectorizing application metadata (like names and developer info) and using a clustering algorithm like DBSCAN, we can group similar applications together. Clusters that are small, contain no allowlisted apps, and have high internal similarity are highly suspicious and can point to a single adversary's toolset.
    answer_sources:
      - MDM Application Inventory
      - Mobile EDR Application Installation Events
      - Corporate Application Metadata Store
      - Centralized MDM/UEM platform and the corporate application metadata repository containing official names, package IDs, and signatures.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          PERIODICALLY:
          VECTORIZE app metadata (display name, package name, etc.) for all apps;
          APPLY DBSCAN clustering algorithm;
          FLAG clusters for review WHERE (cluster contains no allowlisted apps) AND (cluster size is small) AND (internal similarity is high);
  - question: Has a suspicious, non-allowlisted application gained focus immediately after a sensitive application, followed by anomalous network activity?
    context: >-
      This question seeks to detect an active overlay attack in progress. The logic correlates multiple data sources to build a high-fidelity alert. The sequence of a sensitive app being used, followed quickly by a suspicious app gaining focus, and then followed by a connection to a known-bad or newly registered domain, is a strong indicator of a credential or data theft overlay attack.
    answer_sources:
      - Mobile EDR Foreground App Events
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Blocklist (IP/Domain)
      - Passive DNS (Domain Age)
      - Mobile EDR data repository, network egress points instrumented with Zeek sensors (e.g., VPN gateways, corporate Wi-Fi controllers), and APIs for threat intelligence and passive DNS services.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          CORRELATE (EDR logs) and (Zeek logs) by (device, time);
          ALERT IF (sensitive app 'A' in foreground) AND (within 5s, non-allowlisted app 'B' in foreground) AND (within 60s, network connection to blocked IP/domain OR domain registered < 30 days ago);
  - question: Has a user exhibited an abnormal application switching pattern followed by high-entropy DNS requests?
    context: >-
      This question uses behavioral baselining to detect subtle attacks. It first identifies when a user performs a statistically rare action (switching from a sensitive app to an overlay-capable one). It then checks for a secondary anomaly: a spike in DNS query entropy, which often indicates connections to algorithmically generated domains used by malware. The combination of these two weak signals creates a stronger indicator of compromise.
    answer_sources:
      - Mobile EDR Foreground App Events
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Blocklist (IP/Domain)
      - Passive DNS (Domain Age)
      - Mobile EDR data repository, network egress points instrumented with Zeek sensors (e.g., VPN gateways, corporate Wi-Fi controllers), and APIs for threat intelligence and passive DNS services.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          MONITOR app transitions from EDR logs;
          IF (transition from sensitive app to overlay-capable app) AND (transition probability < 1st percentile for user);
          THEN CALCULATE Shannon entropy of DNS requests in next 5 mins;
          ALERT IF (entropy > 30-day average + 3 standard deviations);
  - question: Did a severe network anomaly, detected by an autoencoder, coincide with a suspicious application switching event?
    context: >-
      This question leverages an advanced machine learning model (an LSTM autoencoder) to detect anomalies in a device's network traffic patterns. When a suspicious application switch occurs (as identified by other methods), this model is queried. A high reconstruction error from the model indicates that the current network behavior is a significant deviation from the device's established norm, strongly suggesting malicious activity.
    answer_sources:
      - Mobile EDR Foreground App Events
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Blocklist (IP/Domain)
      - Passive DNS (Domain Age)
      - Mobile EDR data repository, network egress points instrumented with Zeek sensors (e.g., VPN gateways, corporate Wi-Fi controllers), and APIs for threat intelligence and passive DNS services.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          ON (Rare application transition event);
          QUERY LSTM autoencoder with current network feature vector;
          IF (reconstruction error > 99th percentile of historical errors);
          TRIGGER device quarantine and escalate to SOC;
  - question: Has a non-allowlisted application been granted high-risk permissions for GUI input capture?
    context: >-
      This is a fundamental detection for this technique. The 'SYSTEM_ALERT_WINDOW' and 'BIND_ACCESSIBILITY_SERVICE' permissions are powerful and commonly abused for overlay and input capture attacks. Alerting whenever a non-allowlisted application is granted these permissions provides an early warning of a potential threat, allowing for immediate enrichment and investigation before an attack can be fully executed.
    answer_sources:
      - MDM Application Permission Logs
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          MONITOR MDM Permission Logs;
          ALERT ON (permission grant of 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE');
          ESCALATE priority IF (app is NOT on allowlist);
          ENRICH app details against threat intelligence;
  - question: Did an application, recently granted high-risk permissions, initiate connections to a new destination or use a rare SSL/TLS certificate?
    context: >-
      This question correlates a suspicious permission grant with anomalous network behavior. An application that has just acquired powerful capabilities and immediately connects to a destination never seen before from that device is highly suspect. Further analysis of the SSL/TLS certificate (checking for self-signed certs or rare JA3/JA3S hashes) can provide additional evidence of malicious command and control or data exfiltration channels.
    answer_sources:
      - MDM Application Permission Logs
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          ON (Alert for high-risk permission grant);
          BASELINE last 30 days of network destinations for the device;
          MONITOR app's network traffic for 24 hours;
          ALERT IF (app connects to destination NOT in baseline) OR (connection uses self-signed cert) OR (JA3/JA3S hash is rare);
  - question: Does an application requesting high-risk permissions have a high-risk score from a machine learning model?
    context: >-
      This question automates the risk assessment of an application that requests dangerous permissions. Rather than relying solely on an allowlist, a machine learning model can provide a nuanced risk score based on a wide range of features (permissions, app store data, developer reputation, etc.). A high score serves as a strong, automated signal to trigger an incident response workflow, such as isolating the device to prevent harm.
    answer_sources:
      - MDM Application Permission Logs
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          ON (App requests 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE');
          INPUT app features into Random Forest model;
          IF (risk score > 0.8);
          TRIGGER device isolation and create critical incident;
  - question: Has a non-allowlisted application been granted permissions that could facilitate GUI input capture for data collection?
    context: >-
      This question is an initial detection step focused on the collection tactic. It is similar to previous checks but is the first step in a logic chain looking for data exfiltration. Alerting when a non-allowlisted app gets 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE' permissions is a critical first indicator that an app has the capability to scrape sensitive data from the screen.
    answer_sources:
      - MDM Application Permission Logs
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          MONITOR MDM Permission Logs;
          ALERT on grant of 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE' to non-allowlisted app;
          ENRICH app details against threat intel and internal inventories;
  - question: Following the grant of high-risk permissions, did the application exfiltrate an unusually large amount of data to a new destination?
    context: >-
      This question directly hunts for data exfiltration following a suspicious permission grant. After an app gains the ability to capture screen content, an attacker's next step is often to send that data out. This is detected by baselining the device's normal outbound traffic volume and alerting when the suspicious app sends a significantly larger payload (e.g., >95th percentile) to a new, previously unobserved destination.
    answer_sources:
      - MDM Application Permission Logs
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          ON (Alert for non-allowlisted app with high-risk permission);
          MONITOR app's outbound traffic;
          BASELINE device's outbound connection size (orig_bytes) and destinations;
          ALERT IF (connection size > 95th percentile) AND (destination is new);
  - question: Does an application with high-risk permissions also request data collection permissions, resulting in a high spyware risk score from a machine learning model?
    context: >-
      This question uses a refined machine learning model to specifically identify spyware. The model considers not only the GUI capture permissions but also permissions that grant access to sensitive data stores (e.g., 'READ_CONTACTS', 'READ_SMS'). The combination of these permission types is a very strong signal of spyware. A high-risk score from this specialized model warrants an immediate, automated response to contain the threat and preserve evidence for forensic analysis.
    answer_sources:
      - MDM Application Permission Logs
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: >-
          INPUT app features (including 'READ_CONTACTS', 'READ_SMS', etc.) into spyware classification model;
          IF (risk score > 0.85);
          TRIGGER device isolation and create critical incident for forensic analysis;