name: T1630.003: Disguise Root-Jailbreak Indicators
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is actively concealing a compromised (rooted/jailbroken) mobile device state from detection mechanisms. It focuses on identifying discrepancies between different security reporting tools, analyzing unknown privileged processes, and detecting suspicious command-line arguments indicative of tampering with the device's security posture. Evidence includes conflicts between MDM attestation failures and MTD compliance reports, the execution of unknown processes with root privileges, and commands used to remount filesystems or escalate privileges.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a device simultaneously reported a failed security attestation to the MDM and a compliant status to the MTD, and what was its network activity around that time?
    context: This question aims to detect a direct conflict between two key security systems. A failed MDM attestation often indicates rooting or jailbreaking, while a compliant MTD status suggests the MTD agent itself has been compromised or is being tricked. Correlating these conflicting signals in a tight time window (e.g., 5 minutes) is a strong indicator of an active attempt to hide the device's true compromised state. Enriching with network data provides immediate context for follow-on investigation.
    answer_sources:
      - MDM Remote Attestation Logs
      - MTD Compliance Status Logs
      - Zeek conn.log
      - Zeek dns.log
      - Centralized SIEM or data lake containing Mobile Device Management (MDM) and Mobile Threat Defense (MTD) logs
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH MDM logs for attestation failures AND MTD logs for compliant status from the same device_id within a 5-minute window. IF match found, THEN retrieve network logs (Zeek) for that device_id 30 minutes before and after the event.
  - question: Has a device exhibited anomalous network behavior, such as an unusual number of destination ports or IP addresses, shortly after a failed MDM attestation?
    context: This question looks for secondary evidence of compromise following a potential indicator (failed attestation). A compromised device may begin scanning, connecting to new C2 servers, or exfiltrating data, which would manifest as a statistical anomaly in its network traffic patterns. By comparing current activity against a 30-day baseline, we can spot deviations from normal behavior that, when correlated with an attestation failure, increase the likelihood of a true positive compromise.
    answer_sources:
      - Zeek conn.log
      - MDM Remote Attestation Logs
      - Centralized SIEM or data lake containing Mobile Device Management (MDM) and Mobile Threat Defense (MTD) logs
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each device, calculate hourly baseline of unique destination ports and destination IP entropy from last 30 days of Zeek logs. SEARCH for devices where current hourly metrics exceed the 95th percentile AND an MDM attestation failure occurred within the last 24 hours.
  - question: Is a device showing statistically significant anomalies in its DNS query patterns, and does this coincide with a failed MDM attestation?
    context: DNS traffic is a rich source for detecting malicious activity. Adversaries often use DGA (Domain Generation Algorithms) or connect to unusual domains for C2. This question uses unsupervised machine learning to model a device's normal DNS behavior (e.g., query volume, types, unique domains) over time, accounting for seasonality. A significant deviation from this learned pattern, especially when paired with an MDM attestation failure, strongly suggests the device is compromised and communicating with attacker-controlled infrastructure.
    answer_sources:
      - Zeek dns.log
      - MDM Remote Attestation Logs
      - Time-series database
      - Centralized SIEM or data lake containing Mobile Device Management (MDM) and Mobile Threat Defense (MTD) logs
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each device, apply a pre-trained anomaly detection model (e.g., Seasonal-Hybrid ESD) to hourly DNS log aggregates. ALERT on devices with high anomaly scores. IF an MDM attestation failure occurred for the same device, THEN escalate alert priority.
  - question: Is an unknown process running with root privileges on a mobile device?
    context: This question targets a fundamental indicator of compromise: a process running with the highest privileges (root) that is not a known, legitimate system binary (allowlist) or a known piece of malware (blocklist). Such a process is highly suspicious, as it could be a novel malicious tool or a custom utility used by an adversary to maintain persistence or perform other actions on the compromised device.
    answer_sources:
      - MTD Process Execution Logs
      - Threat Intelligence Hash Feeds
      - Internal file hash allowlist
      - MTD agent log repositories on mobile endpoints
      - Centralized SIEM or data lake
      - Threat Intelligence Platform for hash lookups
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: ON MTD process event with user.id == 0, GET process.file.sha256. QUERY internal allowlist and threat intel blocklist for the hash. IF hash is NOT FOUND in either list, THEN generate high-severity alert.
  - question: Has a rare or unusual parent-child process relationship resulted in the creation of a root-privileged process that subsequently made a network connection?
    context: Adversaries often execute privileged commands from unexpected parent processes (e.g., a web browser spawning a root shell). This question aims to detect such anomalies by baselining normal parent-child process relationships across the fleet. A rare relationship that spawns a root process is suspicious. If that new process then immediately initiates outbound network traffic, it is a strong signal of post-exploitation activity, such as establishing a C2 channel.
    answer_sources:
      - MTD Process Execution Logs
      - Zeek conn.log
      - MTD agent log repositories on mobile endpoints
      - Centralized SIEM or data lake
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: CALCULATE 30-day frequency of all parent-child process relationships from MTD logs. SEARCH for new root processes where the parent-child relationship is in the top 1% rarest. IF found, CHECK Zeek logs for outbound connections from that process within 5 minutes. IF connection exists, THEN escalate alert.
  - question: Does a machine learning model classify a new root-privileged process event as malicious based on its execution and network characteristics?
    context: This question operationalizes a more sophisticated, model-driven approach to detection. By training a classifier (like Random Forest) on a rich feature set—including process name entropy, command-line arguments, and associated network behavior—we can move beyond simple rules. This allows the system to identify complex, non-obvious patterns indicative of malicious activity that might be missed by signature- or rarity-based detections, providing a more robust defense against novel threats.
    answer_sources:
      - MTD Process Execution Logs
      - Zeek conn.log
      - Zeek software.log
      - Labeled dataset of process events
      - Machine Learning Platform
      - MTD agent log repositories on mobile endpoints
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each new root process event, featurize its attributes (process name, args, network activity). APPLY pre-trained classification model. IF model output is 'malicious' with confidence > 0.80, THEN generate alert.
  - question: Has a command been executed on a mobile device to remount a system partition with write access or dangerously modify file permissions?
    context: This question targets specific, high-fidelity commands that are almost always associated with rooting a device or installing persistent malware. System partitions are typically mounted read-only for security. A command like 'mount -o rw,remount /system' is a direct attempt to bypass this protection. Similarly, commands like 'chmod 777' on system binaries are used to enable privilege escalation. Detecting these commands via regex provides a strong, actionable signal of compromise.
    answer_sources:
      - MTD Process Command-line Logs
      - Zeek conn.log
      - Zeek files.log
      - Log storage for MTD agents on mobile endpoints
      - Centralized SIEM for log correlation
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH MTD command-line logs for regex patterns like 'mount -o rw' or 'chmod 777'. IF match found, THEN generate high-severity alert and enrich with network and file logs from Zeek around the event time.
  - question: Is an application suddenly writing to an unusually diverse and broad set of directories compared to its historical behavior?
    context: Legitimate applications typically interact with a predictable set of directories. A compromised application or malware might begin writing files to unexpected locations for persistence, staging data for exfiltration, or modifying system components. This question uses entropy to quantify the "randomness" or diversity of file paths an app touches. A sudden spike in this metric (e.g., >3 standard deviations from its norm) indicates a significant change in behavior that could be malicious.
    answer_sources:
      - MTD File System Integrity Logs
      - Log storage for MTD agents on mobile endpoints
      - Centralized SIEM for log correlation
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each application, calculate a 30-day baseline of daily file path entropy from MTD logs. ALERT if an application's current daily entropy score is > 3 standard deviations from its mean.
  - question: Is an application exhibiting a sequence of behaviors (e.g., API calls, network connections, file modifications) that is anomalous according to a deep learning model trained on normal activity?
    context: This question employs an advanced anomaly detection technique to understand the sequence and context of actions, not just individual events. A seq2seq autoencoder learns the typical "grammar" of an application's behavior. When the application performs a series of actions that the model cannot accurately reconstruct (high reconstruction error), it signifies a novel and potentially malicious workflow. This can detect sophisticated attacks where individual actions seem benign, but their combination is highly suspicious.
    answer_sources:
      - MTD File System Integrity Logs
      - MTD Process Command-line Logs
      - Zeek files.log
      - Zeek conn.log
      - Log storage for MTD agents on mobile endpoints
      - Deep Learning Platform
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each application, create event sequences from MTD and Zeek logs. INPUT sequence into a pre-trained seq2seq autoencoder model. IF model reconstruction error > 99th percentile threshold, THEN generate alert.