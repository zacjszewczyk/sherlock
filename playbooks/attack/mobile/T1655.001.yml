name: T1655.001: Match Legitimate Name or Location
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigators determine if an adversary is using masquerading techniques on corporate mobile devices to evade detection. It focuses on identifying mobile applications that mimic legitimate ones by having similar package names, display names, or icons but possess different signing certificates or appear on threat intelligence feeds. It also helps detect anomalous network behavior from these suspect applications, such as communication with malicious domains, high-entropy DNS queries, unusual port usage, or malicious TLS fingerprints.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any installed mobile applications on corporate devices listed on threat intelligence feeds as known malicious applications?
    context: This question aims to perform a direct check against known threats. By comparing the package names and signer certificate hashes of installed applications with a curated list of malicious indicators, an analyst can quickly identify and flag high-confidence threats that are attempting to masquerade. An exact match provides a strong signal of a compromise.
    answer_sources:
      - Mobile Device Management (MDM) Application Inventory Log
      - Mobile Device Management (MDM) server database
      - Cloud-hosted MDM administrative consoles
      - Corporate-managed iOS and Android devices
      - Threat Intelligence Feed
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH MDM logs for all application package names and signer certificate hashes. FOR each app, CHECK if package name or signer hash exists in Threat Intelligence Feed. IF match found, ALERT.
  - question: Are there any installed mobile applications that appear to be typosquatting or using a legitimate display name with an unauthorized signer certificate?
    context: This question helps detect more subtle masquerading techniques. Adversaries may create a malicious app with the same display name as a legitimate one but sign it with a different certificate. They might also slightly alter the package name (typosquatting) to trick users. This analysis identifies these discrepancies by comparing installed applications against an established allowlist of legitimate apps and their attributes.
    answer_sources:
      - Mobile Device Management (MDM) Application Inventory Log
      - Mobile Device Management (MDM) server database
      - Cloud-hosted MDM administrative consoles
      - Corporate-managed iOS and Android devices
      - Organizational Application Allowlist
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: GET all installed apps from MDM logs. GROUP apps by display name. FOR each group, IF count of unique signer certificates > 1, ALERT. FOR each installed app, CALCULATE Levenshtein distance between its package name and all allowlisted package names. IF distance > 0 AND < 3, ALERT.
  - question: Can machine learning models identify mobile applications that are likely masquerading based on their manifest features and permissions?
    context: This question leverages machine learning to proactively identify potential masquerading attempts that might evade simpler heuristic checks. By analyzing a combination of features from an application's manifest file—such as the number and type of permissions requested, exported components, and package name characteristics—a classification model can score the likelihood that an app is malicious, even without prior knowledge of its signature or name.
    answer_sources:
      - Mobile Device Management (MDM) Application Inventory Log
      - Mobile Device Management (MDM) server database
      - Cloud-hosted MDM administrative consoles
      - Corporate-managed iOS and Android devices
      - Application Manifest Data
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each installed app, EXTRACT features (permission count, high-risk permissions, package name entropy, etc.). INPUT features into pre-trained Random Forest model. IF model prediction is 'masquerade' AND confidence > 0.90, ALERT.
  - question: Is a suspected masquerading application communicating with known malicious domains or using TLS fingerprints associated with malware?
    context: This question seeks to confirm the maliciousness of a suspected application by analyzing its network traffic. Even if an application's name or icon appears legitimate, its network communications can reveal its true nature. Connecting to command-and-control (C2) servers or using known malicious TLS/JA3 fingerprints provides strong evidence that the application is part of a malicious campaign.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Mobile Device Management (MDM) Application Inventory Log
      - Network egress points (Firewalls, Proxies)
      - Corporate WiFi network segments
      - VPN concentrators
      - Threat Intelligence Feed
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: GET IP of device with suspect app from MDM. FILTER Zeek logs for device IP. CHECK DNS queries against malicious domain feed. CHECK SSL JA3 hashes against malicious JA3 feed. IF match found, ALERT.
  - question: Does a suspected masquerading application exhibit anomalous network behavior, such as using high-entropy domains, unusual ports, or abnormal data transfer ratios?
    context: This question focuses on identifying network anomalies that deviate from the baseline behavior of the legitimate application being mimicked. Adversaries often use algorithmically generated domains (DGAs), which have high entropy, for C2 communication. They may also use non-standard ports to bypass simple firewalls or exfiltrate data, leading to unusual traffic ratios. Detecting these deviations can help uncover malicious activity.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Mobile Device Management (MDM) Application Inventory Log
      - Network egress points (Firewalls, Proxies)
      - Corporate WiFi network segments
      - VPN concentrators
      - Legitimate Application Network Baseline
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR suspect app traffic, CALCULATE entropy of DNS queries, ALERT on high entropy. COMPARE destination ports to legitimate app's baseline, ALERT on deviation. CALCULATE outbound/inbound byte ratio, ALERT on deviation from baseline.
  - question: Can machine learning models detect anomalous network traffic patterns from a suspected masquerading application over time?
    context: This question employs an advanced machine learning approach to detect subtle, time-based anomalies in network behavior. An autoencoder model trained on the normal traffic patterns of a legitimate application can identify when a suspected masquerading app's behavior deviates significantly. By analyzing features like connection counts, unique IPs, and data volumes over time, this method can flag sophisticated malicious activity that might appear normal in short-term analysis.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Mobile Device Management (MDM) Application Inventory Log
      - Network egress points (Firewalls, Proxies)
      - Corporate WiFi network segments
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR suspect app, CREATE time-series vectors from Zeek logs (connection count, byte count, etc.). INPUT vectors into pre-trained LSTM Autoencoder model. IF reconstruction error > threshold, ALERT.