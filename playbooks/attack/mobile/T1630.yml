name: T1630: Indicator Removal on Host
id: d3a0a3e8-6c8a-4f5b-9d2c-1f8a7b6c5d4e
description: This playbook addresses the threat of adversaries removing indicators of compromise from mobile devices to evade detection. It focuses on identifying several suspicious activities: programmatic clearing of application data or cache outside of normal user behavior; high-volume file deletions, especially in sensitive or non-application-specific directories; applications being uninstalled very shortly after installation, particularly when preceded by suspicious network activity; and attempts to terminate, modify, or revoke permissions from mobile security agents.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known malicious applications attempting to clear their own data or cache to hide their activity?
    context: This question seeks to identify malware that is actively trying to cover its tracks by using system APIs to delete its stored data or cache. An application invoking a data-clearing API like `clearApplicationUserData` on Android or `FileManager.removeItem` on iOS is suspicious. When this action is performed by an application whose hash or package name is already identified as malicious by threat intelligence, it provides a high-confidence indicator of active defense evasion.
    answer_sources:
      - MDM Application Activity Log
      - Mobile EDR/MTP Agent Log
      - Zeek conn.log
      - Zeek dns.log
      - Managed mobile devices (iOS, Android); Corporate Wi-Fi access points; VPN concentrators; Cloud-based MDM/UEM management consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Mobile EDR logs WHERE event.type = 'api_call' AND (api.name = 'clearApplicationUserData' OR api.name = 'FileManager.removeItem')
          JOIN with threat_intel_feed ON app.hash OR app.package_name
          ALERT
  - question: Are any applications clearing their data or cache at an anomalously high frequency?
    context: This question aims to detect defense evasion by establishing a behavioral baseline for data-clearing events for each application on each device. A sudden, significant spike in the frequency of these events (e.g., exceeding the 99th percentile of its 30-day history) suggests that the application's behavior has changed, which could indicate a compromise or malicious activity designed to erase forensic evidence.
    answer_sources:
      - MDM Application Activity Log
      - Mobile EDR/MTP Agent Log
      - Zeek conn.log
      - Zeek dns.log
      - Managed mobile devices (iOS, Android); Corporate Wi-Fi access points; VPN concentrators; Cloud-based MDM/UEM management consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SCHEDULE HOURLY:
          SEARCH Mobile EDR logs WHERE event.type = 'api_call' AND is_user_initiated = false
          STATS count by app.package_name, device
          COMPARE count to 30-day rolling baseline
          ALERT if current_count > 99th_percentile(baseline)
  - question: Can we predictively identify malicious data-clearing events using machine learning?
    context: This question involves building a classification model to proactively identify malicious data-clearing events that might otherwise be missed by simple rule-based alerts. By training a model on features from multiple data sources (EDR, MDM, Zeek), such as time of day, user initiation status, and prior network activity, we can score each event for its likelihood of being malicious. High-probability events can then trigger automated responses, like device isolation, for rapid containment.
    answer_sources:
      - MDM Application Activity Log
      - Mobile EDR/MTP Agent Log
      - Zeek conn.log
      - Zeek dns.log
      - Managed mobile devices (iOS, Android); Corporate Wi-Fi access points; VPN concentrators; Cloud-based MDM/UEM management consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL Random_Forest ON (app_category, is_user_initiated, time_of_day, day_of_week, sum_bytes_out_5min_prior)
          PREDICT is_malicious from Mobile EDR and Zeek logs
          IF probability > 0.9 THEN trigger_device_isolation_workflow
  - question: Is any non-allowlisted application deleting files in sensitive or protected system directories?
    context: This question focuses on identifying unauthorized file deletion in critical areas of a mobile device's file system. Malware may attempt to delete logs, user data, or other forensic evidence. By monitoring protected directories like /var/log or user data folders and alerting on any deletion activity from processes not on an explicit allowlist, security teams can detect a direct attempt at evidence tampering.
    answer_sources:
      - MDM File Integrity Monitoring Log
      - Mobile EDR/MTP Agent Log
      - Zeek files.log
      - Zeek conn.log
      - Managed mobile devices (iOS, Android); MDM/UEM servers; Network egress points with file transfer monitoring
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH EDR/FIM logs WHERE event.type = 'deletion'
          AND (directory IN ['/var/log', '/storage/emulated/0/DCIM', '/private/var/mobile/Library/SMS/'])
          AND process.name NOT IN allowlist
          ALERT
  - question: Are any applications exhibiting anomalous file deletion patterns, such as deleting an unusually high number of files or a wide variety of file types?
    context: This question uses statistical analysis to find outliers in file deletion behavior. An adversary might perform indiscriminate, widespread file deletion to cause damage or destroy evidence. We can detect this by monitoring two key metrics, the total count of deleted files and the Shannon entropy of the file extensions ($$ H(X) = -\sum_{i=1}^{n} P(x_i) \log_2 P(x_i) $$), where high entropy suggests varied file types. A significant deviation from an application's established 30-day baseline for these metrics signals potentially malicious activity.
    answer_sources:
      - MDM File Integrity Monitoring Log
      - Mobile EDR/MTP Agent Log
      - Zeek files.log
      - Zeek conn.log
      - Managed mobile devices (iOS, Android); MDM/UEM servers; Network egress points with file transfer monitoring
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SCHEDULE HOURLY:
          SEARCH EDR file_events
          GROUPBY app.package_name
          CALCULATE deletion_count AND shannon_entropy(file_extension)
          COMPARE to 30-day baseline
          ALERT if deletion_count > 3*stdev(baseline) OR entropy_increase > 50%
  - question: Can we identify clusters of anomalous file deletion activity and correlate them with potential data exfiltration?
    context: This question uses unsupervised machine learning (DBSCAN) to group file deletion events into clusters based on their characteristics, such as deletion rate and directory depth. This approach can automatically surface unusual 'bursts' of deletion activity as outlier clusters. Once an anomalous cluster is identified, the associated device and timestamps can be correlated with network logs to check if the file deletion was preceded by data exfiltration, linking two stages of an attack.
    answer_sources:
      - MDM File Integrity Monitoring Log
      - Mobile EDR/MTP Agent Log
      - Zeek files.log
      - Zeek conn.log
      - Managed mobile devices (iOS, Android); MDM/UEM servers; Network egress points with file transfer monitoring
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL DBSCAN ON (deletion_count_per_minute, total_bytes_deleted, directory_path_depth) from EDR file events
          IDENTIFY outlier clusters
          FOR each outlier, CORRELATE device and timestamp with Zeek conn.log and files.log for signs of data exfiltration
  - question: Are any applications known to be 'short-lived malware' or 'droppers' being uninstalled shortly after installation?
    context: This question provides a high-confidence alert by combining two indicators, a short application lifetime and a positive threat intelligence match. Some malware is designed to install a payload and then quickly remove itself to avoid detection. This query creates a rule to specifically look for the uninstallation of applications that are already known to exhibit this 'dropper' behavior, allowing for a rapid and targeted response.
    answer_sources:
      - MDM Application Inventory Log
      - Mobile EDR/MTP Agent Log
      - Zeek dns.log
      - Zeek conn.log
      - Managed mobile devices (iOS, Android); MDM/UEM servers; Enterprise DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH MDM logs WHERE event.type = 'app_uninstall'
          JOIN with threat_intel_feed ON (app.package_name OR app.hash) WHERE category IN ['short-lived malware', 'dropper']
          ALERT
  - question: Are any applications being uninstalled anomalously quickly after installation, especially if they exhibited suspicious network behavior?
    context: This question seeks to identify suspicious 'hit-and-run' applications by calculating the time between installation and uninstallation. An application that exists for a very short time (e.g., in the bottom 5th percentile of all app lifetimes) is abnormal. To add context and reduce false positives, this query enriches the alert by checking the device's DNS logs during the app's brief lifetime. A high rate of failed DNS lookups (NXDOMAIN errors) is a strong indicator of command-and-control (C2) beaconing.
    answer_sources:
      - MDM Application Inventory Log
      - Mobile EDR/MTP Agent Log
      - Zeek dns.log
      - Zeek conn.log
      - Managed mobile devices (iOS, Android); MDM/UEM servers; Enterprise DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN MDM install_logs and uninstall_logs ON device_id, app.name
          CALCULATE app_lifetime
          ALERT if app_lifetime < 5th_percentile(all_app_lifetimes)
          ENRICH alert with DNS query for device during lifetime; FLAG if NXDOMAIN_ratio > 0.5
  - question: Can we use a machine learning model to generate a risk score for every application uninstallation event?
    context: This question proposes a proactive, data-driven approach to risk-scoring application uninstalls. By training a logistic regression model on a variety of features—such as the app's lifetime, its installation source, and associated network traffic—we can assign a probability score of maliciousness to each uninstall. Events exceeding a high-risk threshold can be automatically escalated to Tier 2 analysts with all the feature data needed for a quick investigation.
    answer_sources:
      - MDM Application Inventory Log
      - Mobile EDR/MTP Agent Log
      - Zeek dns.log
      - Zeek conn.log
      - Managed mobile devices (iOS, Android); MDM/UEM servers; Enterprise DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL Logistic_Regression ON (app_lifetime, install_source, unique_dns_domains, total_bytes_transferred, is_programmatic_uninstall)
          PREDICT risk_score for each uninstall_event
          IF risk_score > 0.85 THEN create_incident_ticket
  - question: Is an unauthorized process attempting to revoke Device Administrator permissions from our mobile security agent?
    context: This question looks for a direct and hostile act against the enterprise's mobile security posture. Revoking Device Administrator permissions is a key step for malware to disable a security agent. This query creates a critical alert that triggers when these permissions are revoked, but only if the action was not initiated by a legitimate process like the MDM agent itself. This provides a high-fidelity signal of an active attempt to disable defenses.
    answer_sources:
      - Mobile EDR/MTP Agent Log
      - MDM Policy Compliance Log
      - Zeek conn.log
      - Managed mobile devices; MDM/UEM management consoles; Centralized mobile log aggregation platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH MDM logs WHERE event.type = 'device_admin_revoked'
          AND target.process.name = 'enterprise_security_agent'
          AND initiator.process.name NOT IN ['mdm_agent', 'known_system_process']
          ALERT with CRITICAL severity
  - question: Has our mobile security agent stopped checking in or 'heartbeating' from an otherwise online device?
    context: This question uses a 'dead man's switch' approach to detect if a security agent has been disabled or terminated. The agent is expected to report its status at a regular interval. By establishing a baseline for the normal check-in delay for each device, we can alert if the agent suddenly goes silent for an unusual length of time, especially when network logs confirm the device is still online and communicating. This suggests the agent process has been tampered with.
    answer_sources:
      - Mobile EDR/MTP Agent Log
      - MDM Policy Compliance Log
      - Zeek conn.log
      - Managed mobile devices; MDM/UEM management consoles; Centralized mobile log aggregation platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SCHEDULE 5-min:
          SEARCH agent_heartbeat_logs
          CALCULATE time_delta since last check-in per device
          COMPARE to 30-day baseline
          IF time_delta > 95th_percentile(baseline) AND device_ip has recent Zeek conn.log traffic THEN ALERT
  - question: Is our mobile security agent exhibiting anomalous resource consumption, possibly indicating it is being tampered with or has crashed?
    context: This question uses an anomaly detection model (Isolation Forest) to monitor the health and behavior of the security agent itself. The model learns the agent's normal profile based on time-series data like its CPU, memory, and network usage. If the agent's behavior suddenly deviates significantly from this learned profile (e.g., it crashes or is suspended), the model will flag it as an anomaly, generating an alert for investigation. This can catch subtle forms of tampering.
    answer_sources:
      - Mobile EDR/MTP Agent Log
      - MDM Policy Compliance Log
      - Zeek conn.log
      - Managed mobile devices; MDM/UEM management consoles; Centralized mobile log aggregation platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL Isolation_Forest ON time-series (cpu_usage, memory_usage, network_bytes_sent) from security agent logs
          PREDICT anomaly_score for new data points
          IF anomaly_score = -1 THEN ALERT