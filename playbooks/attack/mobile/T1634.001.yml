name: T1634.001: Keychain
id: 46b45f1a-b8b1-4f2a-a9e3-8d6f7c0a9b3d
description: |
  This playbook helps determine if an adversary is attempting to steal credentials from mobile device keychains. The investigation focuses on identifying three main categories of evidence. First, it looks for network traffic artifacts associated with a jailbroken state, such as DNS requests for jailbreaking tool domains, TLS certificate validation errors indicating potential traffic interception, or a statistical reduction in TLS certificate issuer diversity suggesting a Man-in-the-Middle (MitM) attack. Second, it searches for signs of data exfiltration, characterized by single, anomalously large outbound network connections, especially to low-reputation or newly observed destinations. Third, it leverages a Mobile Device Management (MDM) platform to find direct indicators of compromise, such as an explicit 'jailbroken' status, the installation of unauthorized applications like Cydia, or the presence of files and processes outside the standard application sandbox.
type: technique
related:
  - TA0031: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is the mobile device making DNS requests for domains associated with jailbreaking tools or repositories?
    context: |
      This question aims to detect the precursor to many keychain access attacks: jailbreaking the device. This action sets up a real-time alert for DNS queries to a watchlist of known jailbreaking-related domains. Such activity is a strong indicator that a user is attempting to jailbreak their device, which removes security controls and allows unauthorized access to sensitive data stores like the keychain.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek dns.log
          WHERE query IN (jailbreak_domain_watchlist)
          GROUP BY source_ip, query
          TRIGGER high-severity alert
  - question: Is the mobile device exhibiting anomalous TLS activity, such as a high rate of certificate validation errors or a sudden drop in certificate issuer diversity, which could indicate a Man-in-the-Middle (MitM) attack?
    context: |
      This question aims to detect Man-in-the-Middle (MitM) attacks, a common technique used on compromised or jailbroken devices to intercept encrypted traffic. By establishing a 14-day rolling baseline of normal TLS behavior (certificate validation rates and issuer variety) for each device, we can programmatically spot significant deviations that suggest traffic is being proxied and re-encrypted, a necessary step for an attacker to read keychain data exfiltrated over HTTPS.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR EACH device_ip
          CALCULATE 14-day rolling baseline of:
            A) ratio of non-'ok' validation_status to total TLS sessions
            B) Shannon entropy of certificate issuer field
          ALERT IF current_day_ratio > 95th_percentile
          OR current_day_entropy < 5th_percentile
  - question: Are there any individual TLS sessions from the mobile device that are highly anomalous when compared to the established norm of legitimate traffic?
    context: |
      This question uses an unsupervised machine learning model to identify subtle anomalies in individual TLS sessions that might be missed by simple statistical thresholds. Features like certificate validity period, SNI server name rarity, connection size, and duration can collectively point to malicious activity, such as communication with a C2 server or data exfiltration, which might follow a keychain compromise. A cluster of high-scoring anomalies from a single device is a strong indicator of compromise.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN Isolation Forest model on legitimate TLS features (cert_validity, sni_rarity, validation_status, bytes_in, bytes_out, duration)
          SCORE live TLS sessions from mobile devices
          ALERT ON high anomaly_score
  - question: Is the mobile device communicating with known malicious destinations, such as C2 servers, anonymization services, or suspicious hosting providers?
    context: |
      This question focuses on identifying connections to destinations that are already flagged as malicious by threat intelligence feeds. A connection from a corporate mobile device to a known command-and-control (C2) server, Tor node, or suspicious hosting provider is a high-confidence indicator of compromise and could represent the channel through which stolen keychain data is being exfiltrated.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek conn.log and ssl.log
          WHERE destination_ip OR server_name IN (threat_intelligence_feed)
          TRIGGER high-severity alert with full connection details
  - question: Has the mobile device sent an unusually large amount of data in a single connection, especially to an unfamiliar destination?
    context: |
      This question aims to detect data exfiltration by looking for anomalously large outbound data transfers from a single session. Stealing an entire keychain file would likely result in a single, large upload that is inconsistent with normal app behavior. By baselining normal connection sizes for each device, we can flag significant outliers that could represent data theft, escalating the alert's severity if the destination is new or uses a non-standard port.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR EACH device_ip
          CALCULATE 30-day rolling baseline of outbound_bytes per connection
          TRIGGER medium-severity alert IF single_connection_bytes > 99.5th_percentile
          ESCALATE to high-severity IF destination is rare OR destination port is not 80/443
  - question: Does a network connection from the mobile device exhibit a combination of anomalous features (e.g., data volume, duration, destination ASN) that deviates significantly from learned legitimate behavior?
    context: |
      This question employs an autoencoder neural network to learn the complex, multi-dimensional patterns of normal network traffic. Connections that the trained model cannot accurately reconstruct are flagged as anomalous. This method is effective at detecting novel exfiltration techniques that might not involve a single massive data transfer but rather a suspicious combination of connection attributes (e.g., data size, duration, destination ASN). A high reconstruction error, especially when paired with a large outbound data volume, is a strong indicator of potential exfiltration.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN Autoencoder model on connection features (orig_bytes, resp_bytes, duration, dest_port, protocol, dest_asn)
          SCORE live connections and identify high reconstruction_error
          ALERT if reconstruction_error is high and orig_bytes is large
  - question: Does the Mobile Device Management (MDM) platform explicitly report that the device is compromised or jailbroken?
    context: |
      This is the most direct investigative question, seeking a definitive signal from the MDM system, which is designed to monitor device health and compliance. An alert from the MDM indicating a device status of 'compromised' or `isJailbroken = true` is a high-fidelity indicator that requires immediate automated response, such as device quarantine, as a jailbroken device provides an attacker the necessary privileges to access keychain data.
    answer_sources:
      - MDM Platform Logs (e.g., Compliance Status, Application Inventory)
      - Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH MDM logs
          WHERE isJailbroken == true OR complianceState == 'Non-Compliant'
          TRIGGER critical alert to initiate SOAR playbook for quarantine
  - question: Has the mobile device installed any unauthorized or rare applications not found on other devices in the fleet?
    context: |
      This question hunts for indicators of compromise by analyzing the software installed on the device. Malicious spyware or tools used for jailbreaking (e.g., Cydia, Sileo, Zebra) will appear as statistically rare or unique applications when their prevalence is calculated across the entire device fleet. Identifying the installation of such low-prevalence apps can provide an early warning of device compromise before data exfiltration occurs.
    answer_sources:
      - MDM Platform Logs (e.g., Compliance Status, Application Inventory)
      - Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          ANALYZE daily MDM application inventory logs
          CALCULATE prevalence for each application
          ALERT for any device installing an app with < 1% prevalence (and not on approved list)
  - question: Does a predictive model, based on various device attributes, indicate a high probability that the device is compromised?
    context: |
      This question uses a predictive classification model to proactively identify at-risk devices even without a single explicit indicator of compromise. By training on historical features from known-compromised devices (e.g., outdated OS, time since last update, number of installed apps, history of policy violations), the model can learn to recognize subtle patterns that precede or accompany a compromise. A sustained high probability score from the model serves as a strong investigative lead for manual review.
    answer_sources:
      - MDM Platform Logs (e.g., Compliance Status, Application Inventory)
      - Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN classification model using historical MDM data with confirmed compromised devices as labels
          SCORE live devices daily
          ALERT for manual review if probability_of_compromise > 0.90