name: "T1629.002: Device Lockout"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook helps investigate whether an adversary is attempting to evade defenses by locking users out of their mobile devices. This involves detecting applications that gain high-level privileges, such as 'Device Administrator' or 'SYSTEM_ALERT_WINDOW' (overlay), and then exhibit suspicious behavior. Key indicators include being on a threat intelligence blocklist, being sideloaded or rare, communicating with malicious network infrastructure, using DGA-like domains, exfiltrating anomalous amounts of data, or running persistent overlay screens without user interaction."
type: "technique"
related:
  - "TA0030: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Has an application with 'Device Administrator' privileges been identified as malicious by threat intelligence feeds?"
    context: "This question aims to detect the most straightforward case of a malicious application gaining powerful permissions. An application that has the ability to lock a device and is also a known malicious indicator presents a high-confidence threat and requires immediate attention."
    answer_sources:
      - "MDM application inventory and event logs"
      - "Mobile EDR process and permission grant logs"
      - "Android Logcat"
      - "Threat Intelligence Feeds"
      - "NAI: Corporate-managed mobile devices; Mobile Device Management (MDM) servers; Application Vetting and Sandboxing Environments; Enterprise Application Stores"
    range: "last 90 days"
    queries:
      - "pseudocode: QUERY MDM/EDR logs for 'Device Admin Enabled' events. FOREACH event, JOIN app package/cert with threat intel feed. ALERT on match."
  - question: "Has an application gained 'Device Administrator' privileges and exhibited risky characteristics, such as being from an unknown source or being unusually rare?"
    context: "This question looks for suspicious indicators that, when combined, suggest a malicious application, even if it is not yet on a threat intelligence blocklist. Sideloaded, non-standard, and rare applications gaining high privileges are inherently risky and warrant investigation."
    answer_sources:
      - "MDM application inventory and event logs"
      - "Mobile EDR process and permission grant logs"
      - "Android Logcat"
      - "NAI: Corporate-managed mobile devices; Mobile Device Management (MDM) servers; Application Vetting and Sandboxing Environments; Enterprise Application Stores"
    range: "last 90 days"
    queries:
      - "pseudocode: QUERY 'Device Admin Enabled' events. FOREACH event, CALCULATE risk score based on (is not allowlisted, is sideloaded, is rare). ALERT if score > threshold."
  - question: "Can a machine learning model identify applications that are likely malicious based on characteristics observed when they request 'Device Administrator' rights?"
    context: "This question uses a predictive model to proactively identify potentially malicious applications. By analyzing features like installation source, permission request timing, and certificate details, the model can flag suspicious apps that might evade simpler rule-based detections."
    answer_sources:
      - "MDM application inventory and event logs"
      - "Mobile EDR process and permission grant logs"
      - "Android Logcat"
      - "NAI: Corporate-managed mobile devices; Mobile Device Management (MDM) servers; Application Vetting and Sandboxing Environments; Enterprise Application Stores"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY logistic regression model to apps requesting 'Device Admin' rights. FEATURES include install source, permission grant timing, cert details. FLAG apps with prediction > 0.85."
  - question: "Is a privileged mobile application (with 'Device Administrator' or overlay permissions) communicating with known malicious network infrastructure?"
    context: "This question checks for command-and-control (C2) or data exfiltration activity from a high-privilege application. Communication with a known malicious endpoint from an application with the ability to lock a device is a strong indicator of compromise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Mobile EDR Network Flow Logs"
      - "MDM Application Inventory Logs"
      - "NAI: Our organization's internet gateway; Corporate DNS resolvers; Network proxies; VPN Concentrators"
    range: "last 90 days"
    queries:
      - "pseudocode: JOIN MDM logs (for privileged apps) with network logs (Zeek conn.log) on device IP. ALERT if privileged app communicates with destination on threat intel blocklist."
  - question: "Is a privileged mobile application attempting to resolve unusually random-looking domain names, suggesting the use of a Domain Generation Algorithm (DGA)?"
    context: "DGAs are often used by malware to dynamically find C2 servers. A privileged application making high-entropy DNS queries is highly suspicious and may be trying to establish a resilient C2 channel before locking the device."
    answer_sources:
      - "Zeek dns.log"
      - "Mobile EDR Network Flow Logs"
      - "MDM Application Inventory Logs"
      - "NAI: Our organization's internet gateway; Corporate DNS resolvers; Network proxies; VPN Concentrators"
    range: "last 90 days"
    queries:
      - "pseudocode: FROM Zeek dns.log, CALCULATE entropy for queried domains. FOR privileged apps, ALERT if a new query's entropy > 98th percentile of baseline."
  - question: "Is a privileged mobile application exhibiting anomalous network traffic patterns, such as an unusual spike in outbound data transfer?"
    context: "This question aims to detect data staging or exfiltration by identifying significant deviations from an application's normal network behavior. A sudden, large data transfer from a privileged app could precede a ransomware-style lockout and must be investigated."
    answer_sources:
      - "Zeek conn.log"
      - "Mobile EDR Network Flow Logs"
      - "NAI: Our organization's internet gateway; Corporate DNS resolvers; Network proxies; VPN Concentrators"
    range: "last 90 days"
    queries:
      - "pseudocode: MODEL hourly outbound data volume per app/user using time-series anomaly detection. ALERT on significant anomalies identified by the model."
  - question: "Has a sideloaded application been installed that requests the 'SYSTEM_ALERT_WINDOW' (overlay) permission?"
    context: "This question identifies a high-risk combination of behaviors. Sideloading bypasses app store security checks, and the overlay permission can be used to create fake login screens or lock the user out of their device. The combination warrants immediate investigation."
    answer_sources:
      - "Mobile Application Vetting Scans"
      - "MDM Application Installation Logs"
      - "NAI: Application sandboxing environments; Corporate-managed mobile devices; Enterprise app stores and repositories; Mobile Endpoint Detection and Response (EDR) platform"
    range: "last 90 days"
    queries:
      - "pseudocode: JOIN app vetting data with MDM logs. ALERT if app is installed from 'unknown source' AND requests 'SYSTEM_ALERT_WINDOW' permission."
  - question: "Is an application with overlay permissions running in the foreground for an anomalously long time without any user interaction?"
    context: "This is a key indicator of a screen-locking attack. A legitimate application typically requires user input. An overlay that runs for an extended period without any taps or swipes is likely trying to prevent the user from accessing their device."
    answer_sources:
      - "Mobile EDR Process and Activity Logs"
      - "Android Logcat"
      - "NAI: Corporate-managed mobile devices; Mobile Endpoint Detection and Response (EDR) platform"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR apps with overlay permission, CALCULATE baseline session durations. ALERT if current session duration > 98th percentile AND has zero user input events."
  - question: "Can a machine learning model detect anomalous application sessions that may indicate an overlay attack, based on features like session duration, resource usage, and lack of user input?"
    context: "This question uses a sophisticated, multi-variate approach to detect overlay attacks. By considering multiple features simultaneously (CPU, memory, network, user input, duration), a model can identify complex anomalies that might be missed by single-metric rules."
    answer_sources:
      - "Mobile EDR Process and Activity Logs"
      - "NAI: Corporate-managed mobile devices; Mobile Endpoint Detection and Response (EDR) platform"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY Isolation Forest model to app sessions. FEATURES include duration, CPU, memory, network, user input count. FLAG sessions with anomaly score in top 1%."