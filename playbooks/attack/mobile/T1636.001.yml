name: "T1636.001: Calendar Entries"
id: "a6c5d4b3-e2f1-4a09-8b7c-6d5e4f3a2b1c"
description: |
  This playbook helps investigate whether an adversary is collecting calendar entries from managed mobile devices. It focuses on identifying suspicious activities such as applications with calendar access making network connections to malicious destinations or exfiltrating anomalously large volumes of data. It also looks for newly installed, non-allowlisted applications with calendar permissions that exhibit risk factors like low installation prevalence or belonging to an unusual category. Finally, it addresses high-risk scenarios on jailbroken or rooted devices where a process directly accesses the calendar database file and immediately initiates an outbound network connection.
type: "technique"
related:
  - "TA0035: Collection"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a mobile device with a calendar-accessing application communicating with a known malicious domain or IP address?"
    context: |
      This question aims to detect direct data exfiltration or command-and-control (C2) communication. By correlating application permissions from an MDM with network logs and threat intelligence, analysts can identify high-confidence indicators of compromise where a seemingly legitimate application is being used for malicious purposes.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Mobile Device Management (MDM) Application Inventory"
      - "Threat Intelligence Feeds"
      - "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each mobile_device_ip | GET installed_apps with calendar_permission from MDM | FILTER network_logs for connections from mobile_device_ip | JOIN destination_ip/fqdn with threat_intel_feed | IF match THEN ALERT."
  - question: "Is an application with calendar permissions exfiltrating an unusually large amount of data or communicating with a domain showing signs of algorithmic generation (DGA)?"
    context: |
      This question helps detect covert data exfiltration that avoids known malicious indicators. Adversaries may use legitimate-looking domains or their own infrastructure. By baselining normal data transfer volumes and analyzing domain name randomness (Shannon entropy), analysts can spot statistical outliers that suggest data theft or C2 communication via Domain Generation Algorithms (DGA).
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Mobile Device Management (MDM) Application Inventory"
      - "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each app_with_calendar_permission | BUILD 30-day baseline of outbound_data_volume | IF new_session_volume > 99.5th_percentile THEN ALERT | CONCURRENTLY: CALCULATE shannon_entropy of fqdn | IF entropy > 3.5 AND volume_anomaly THEN ELEVATE_ALERT."
  - question: "Does a mobile device's outbound network traffic volume show a significant deviation from its established historical pattern, as identified by a time-series anomaly detection model?"
    context: |
      This question leverages machine learning to identify subtle or complex anomalies in network traffic that simple thresholding might miss. A time-series model (like an LSTM autoencoder) learns the 'normal' rhythm of a device's network activity. A high reconstruction error indicates the current traffic pattern is highly unexpected, which could signal an exfiltration event by an application with calendar access.
    answer_sources:
      - "Zeek conn.log"
      - "Mobile Device Management (MDM) Application Inventory"
      - "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations."
    range: "last 90 days"
    queries:
      - "pseudocode: AGGREGATE outbound_data_volume per device in 1-hour windows | INPUT data into pre-trained LSTM_autoencoder_model | IF model_reconstruction_error > (mean_error + 3 * std_dev_error) THEN ALERT."
  - question: "Has a newly installed mobile application with calendar permissions been identified that is not on the corporate allowlist or is on a known malicious denylist?"
    context: |
      This question focuses on early detection of potentially malicious applications at the time of installation. By checking every new app with sensitive permissions (like calendar access) against curated allowlists and denylists, security teams can quickly flag unauthorized or known-bad software before it can cause harm.
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory"
      - "Mobile Threat Defense (MTD) Scan Results"
      - "Public App Store Metadata"
      - "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store)."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each new_app_install_event | IF app has 'READ_CALENDAR' or 'WRITE_CALENDAR' permissions | CHECK app_bundle_id against corporate_allowlist and malicious_denylist | IF not on allowlist THEN MEDIUM_ALERT | IF on denylist THEN HIGH_ALERT."
  - question: "Is there a non-allowlisted application with calendar access that exhibits high-risk characteristics, such as low installation prevalence or belonging to an app category that shouldn't require calendar access?"
    context: |
      This question helps prioritize investigation for unknown applications that aren't on a denylist. Malicious apps often have low prevalence within a specific enterprise. By combining this with other risk factors, like an app's category (e.g., a 'Game' needing calendar access), analysts can use a heuristic risk score to surface the most suspicious applications for manual review.
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory"
      - "Mobile Threat Defense (MTD) Scan Results"
      - "Public App Store Metadata"
      - "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store)."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each app_with_calendar_permission not on allowlist | CALCULATE installation_prevalence | CALCULATE risk_score (e.g., low_prevalence_pts + high_risk_category_pts) | IF risk_score > threshold THEN FLAG for manual_review."
  - question: "Which applications with calendar access are ranked as most likely to be malicious by a machine learning classification model?"
    context: |
      This question uses a predictive model to automate the risk assessment of applications. By training a classifier on various features (permission count, developer reputation, user ratings, etc.), a 'malice probability score' can be generated. This allows security analysts to work from a prioritized queue, focusing their limited time on the applications that pose the greatest threat.
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory"
      - "Mobile Threat Defense (MTD) Scan Results"
      - "Public App Store Metadata"
      - "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store)."
    range: "last 90 days"
    queries:
      - "pseudocode: EXTRACT features for each app_with_calendar_access (permissions, dev_rep, category, etc.) | INPUT features into pre-trained classification_model (e.g., Random Forest) | GET malice_probability_score | RANK apps by score to create investigation_queue."
  - question: "Has a process on a jailbroken or rooted device accessed the local calendar database file?"
    context: |
      This question identifies a highly suspicious event on a compromised device. Jailbreaking or rooting removes OS-level security controls, allowing direct file system access. Correlating a 'rooted' device status from an MDM with a file integrity monitoring (FIM) alert for the calendar database provides a strong indicator that an attacker is attempting to directly steal calendar data.
    answer_sources:
      - "Mobile Device Management (MDM) Device Status"
      - "Mobile Threat Defense (MTD) File Integrity Monitoring Logs"
      - "Zeek conn.log"
      - "MDM/MTD platforms, Endpoint file systems on high-risk mobile devices, Corporate network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode: JOIN mdm_device_status with mtd_file_access_alerts | IF device_status is 'rooted'/'jailbroken' AND file_path is '*/Calendar.sqlitedb' THEN CRITICAL_ALERT."
  - question: "On a rooted or jailbroken device, is a process repeatedly making a network connection almost immediately after accessing the calendar database?"
    context: |
      This question looks for a specific pattern of 'smash and grab' data theft on a compromised device. An adversary might script a process to read the calendar database and instantly exfiltrate it. By correlating file access events with subsequent network connections and measuring the time delta, analysts can detect this automated behavior, which is a strong signal of malicious activity.
    answer_sources:
      - "Mobile Device Management (MDM) Device Status"
      - "Mobile Threat Defense (MTD) File Integrity Monitoring Logs"
      - "Zeek conn.log"
      - "MDM/MTD platforms, Endpoint file systems on high-risk mobile devices, Corporate network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each rooted/jailbroken_device | CORRELATE calendar_db_access_events with network_connection_events | CALCULATE time_delta between access and connection | IF median_delta < 5_seconds over 24h THEN ALERT."
  - question: "Has a sequence analysis model detected a high-probability chain of events on a rooted device, such as a non-system process accessing the calendar database and then connecting to a new external IP?"
    context: |
      This question applies advanced sequence analysis to detect a logical attack chain. A model (like a Hidden Markov Model) can be trained to distinguish between normal and malicious sequences of system events. Detecting the specific sequence of a non-standard process accessing the calendar file and then making a new external connection provides a very high-confidence alert that an attack is in progress.
    answer_sources:
      - "Mobile Device Management (MDM) Device Status"
      - "Mobile Threat Defense (MTD) File Integrity Monitoring Logs"
      - "Zeek conn.log"
      - "MDM/MTD platforms, Endpoint file systems on high-risk mobile devices, Corporate network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode: ON rooted/jailbroken_devices | INPUT event_sequences [process, file_path, dest_ip] into sequence_analysis_model | IF model identifies sequence ['non-system_process', '*/Calendar.sqlitedb', 'new_external_ip'] with high_probability THEN HIGH_CONFIDENCE_ALERT."