name: T1474.002: Compromise Hardware Supply Chain
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary has gained initial access
  to the mobile device fleet through a compromised hardware supply chain. This involves
  detecting indicators such as unauthorized bootloader or attestation failures, identifying
  devices with hardware or firmware identifiers that deviate from a 'golden manifest'
  or are statistical outliers within their procurement batch, and spotting anomalous
  network connections to unapproved destinations immediately following device enrollment.
type: technique
related:
- TA0027: Initial Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Are we detecting real-time device attestation failures for devices not
    undergoing authorized changes?
  context: This question aims to immediately identify signs of device tampering, such
    as an unlocked bootloader or a failed secure boot integrity check. By correlating
    these attestation failures with change management and developer device records,
    we can filter out authorized activities and focus on failures that are strong
    indicators of a potential compromise at the hardware or firmware level.
  answer_sources:
  - MDM device attestation logs
  - Change management database records
  - Developer device registration list
  - Asset Management Database
  - MDM platform servers, Asset Management Database, Change Management System, and
    endpoint mobile devices.
  range: last 90 days
  queries:
  - technology: SIEM
    query: |-
      JOIN real-time 'attestation_logs' with 'authorized_device_watchlist'
      ON 'device_id'
      WHERE ('attestation_status' = 'failed' OR 'bootloader_status' = 'unlocked')
      AND 'device_id' NOT IN 'authorized_device_watchlist'
      ALERT
- question: Is there a statistically significant increase in attestation failures
    for any specific device cohort?
  context: This question moves beyond individual alerts to detect broader, more subtle
    attacks that might target a specific device model or OS version. By establishing
    a baseline of normal failure rates and using Z-score analysis, we can identify
    a collective increase in failures that is statistically anomalous and points to
    a potential fleet-wide issue.
  answer_sources:
  - MDM device attestation logs
  - Change management database records
  - Developer device registration list
  - Asset Management Database
  - MDM platform servers, Asset Management Database, Change Management System, and
    endpoint mobile devices.
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      FOR each 'device_cohort' (model, os_version):
        CALCULATE rolling_30_day_mean_and_std_dev('failure_count')
        CALCULATE today_failure_count
        CALCULATE z_score = (today_failure_count - mean) / std_dev
        IF z_score > 3
        ALERT
- question: Can we use machine learning to predict whether a new attestation failure
    is malicious?
  context: This question leverages a predictive approach to improve detection accuracy.
    A supervised machine learning model, trained on the characteristics of historical
    benign and malicious failures, can score new failures in real time. This allows
    for the automated identification of high-probability threats with greater precision
    than static rules, reducing analyst fatigue from false positives.
  answer_sources:
  - MDM device attestation logs
  - Change management database records
  - Developer device registration list
  - Asset Management Database
  - MDM platform servers, Asset Management Database, Change Management System, and
    endpoint mobile devices.
  range: last 90 days
  queries:
  - technology: ML Platform
    query: |-
      INPUT new 'attestation_failure_event'
      EXTRACT features (device_model, os_version, user_role, etc.)
      APPLY trained_classifier_model(features)
      GET prediction_probability
      IF prediction_probability > 0.90
      ALERT
- question: Do any newly procured devices have hardware or firmware identifiers that
    deviate from the approved 'golden manifest' for their batch?
  context: This question provides a crucial, proactive check to validate hardware
    and firmware integrity at the point of entry into the organization. By comparing
    each new device's identifiers against a pre-approved 'golden manifest' for its specific
    procurement batch, we can immediately catch supply chain alterations before a
    compromised device is ever deployed to a user.
  answer_sources:
  - MDM device hardware inventory
  - Procurement records
  - Golden manifest files
  - MDM platform, Asset Management Database, and procurement department records.
  range: last 90 days
  queries:
  - technology: Scripting
    query: |-
      GET 'new_devices' from MDM where 'batch_id' = 'current_batch'
      LOAD 'golden_manifest' for 'current_batch'
      FOR each 'device' in 'new_devices':
        COMPARE 'device.identifiers' with 'golden_manifest.identifiers'
        IF mismatch_found
        FLAG device for quarantine and inspection
- question: Are there any rare or unique hardware/firmware identifiers within a single
    procurement batch that could indicate an outlier device?
  context: This question provides a method for detecting anomalies within a procurement
    batch without relying on a pre-existing manifest. It operates on the assumption
    that devices within a batch should be homogenous. An identifier (like a baseband
    version) that appears in only a tiny fraction of devices is a statistical outlier
    and highly suspicious, warranting an investigation for unauthorized modification.
  answer_sources:
  - MDM device hardware inventory
  - Procurement records
  - Golden manifest files
  - MDM platform, Asset Management Database, and procurement department records.
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      GET all 'devices' for a 'procurement_batch_id'
      FOR each 'identifier_field' (e.g., baseband_version):
        CALCULATE frequency_distribution of values
        FOR each 'value' in distribution:
          IF prevalence < 0.01
          ALERT on 'value' and associated devices
- question: Can we use unsupervised machine learning to automatically identify outlier
    devices within a new procurement batch based on their hardware and firmware profiles?
  context: This question applies advanced machine learning to find anomalous devices
    that might be missed by simpler checks. A clustering algorithm like DBSCAN can
    analyze a device's entire hardware/firmware profile as a single data point. Devices
    that don't cluster with the main group are identified as 'noise' or outliers,
    effectively spotting sophisticated modifications across multiple components simultaneously.
  answer_sources:
  - MDM device hardware inventory
  - Procurement records
  - Golden manifest files
  - MDM platform, Asset Management Database, and procurement department records.
  range: last 90 days
  queries:
  - technology: ML Platform
    query: |-
      FOR a 'procurement_batch':
        VECTORIZE hardware/firmware identifiers for each device
        APPLY DBSCAN clustering algorithm to all device vectors
        IDENTIFY devices classified as 'noise' (outliers)
        ALERT and quarantine outlier devices
- question: Are newly enrolled devices communicating with unauthorized network destinations
    within the first hour of activation?
  context: The first 60 minutes after a new device enrolls are a critical window.
    All network traffic should be predictable and restricted to known provisioning
    and update servers. This question aims to detect any communication to an unapproved
    destination, which is a very strong signal that the device was compromised before
    enrollment and may contain pre-installed malware calling home.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - MDM enrollment logs
  - Firewall logs
  - Provisioning network allow-list
  - VPN logs
  - Proxy logs
  - Network egress points, DNS resolvers, Firewall appliances, MDM platform server,
    VPN concentrators, and forward proxy servers.
  range: last 90 days
  queries:
  - technology: SIEM
    query: |-
      ON 'MDM_Enrollment_Success' event for 'device_ip':
        MONITOR network logs for 'device_ip' for 60 minutes
        GET destination_ip and destination_domain
        IF destination NOT IN 'provisioning_allow_list'
        ALERT
- question: Are newly enrolled devices making DNS queries to domains that appear
    to be algorithmically generated?
  context: This question looks for a specific malware behavior known as Domain Generation
    Algorithms (DGA), which are used to create constantly changing command-and-control
    domains. By calculating the Shannon entropy (a measure of randomness) of domains
    queried by a new device, we can spot the non-human, random patterns typical of
    DGA and flag the device for potential C2 activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - MDM enrollment logs
  - Firewall logs
  - Provisioning network allow-list
  - VPN logs
  - Proxy logs
  - Network egress points, DNS resolvers, Firewall appliances, MDM platform server,
    VPN concentrators, and forward proxy servers.
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      GET DNS queries from new device in first 60 minutes
      FOR each 'query_domain':
        CALCULATE shannon_entropy of domain string
        IF entropy > baseline_95th_percentile
        ALERT for potential DGA activity
- question: Does the sequence of network connections from a newly enrolled device
    deviate significantly from the normal behavior learned from known-good provisioning
    sessions?
  context: This question employs a sophisticated time-series autoencoder model to
    learn the "rhythm" of a normal device setup—what protocols, ports, and data volumes
    are expected and in what order. When a new device's network activity doesn't match
    this learned pattern, the model produces a high reconstruction error, signaling
    a behavioral anomaly that could indicate a compromise, even if no specific rule
    is broken.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - MDM enrollment logs
  - Firewall logs
  - Provisioning network allow-list
  - VPN logs
  - Proxy logs
  - Network egress points, DNS resolvers, Firewall appliances, MDM platform server,
    VPN concentrators, and forward proxy servers.
  range: last 90 days
  queries:
  - technology: ML Platform
    query: |-
      CAPTURE sequence of network connection metadata from new device
      FEED sequence into trained LSTM autoencoder model
      CALCULATE reconstruction_error
      IF reconstruction_error > anomaly_threshold
      ALERT on anomalous network behavior