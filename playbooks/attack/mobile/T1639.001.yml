name: T1639.001: Exfiltration Over Unencrypted Non-C2 Protocol
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps answer the question - Is an adversary exfiltrating data from our mobile devices over unencrypted, non-C2 protocols? It provides investigative questions and queries to detect data exfiltration using DNS tunneling (via high-frequency, high-entropy, or suspicious TXT/NULL queries), anomalous HTTP/S POST/PUT requests (via large payloads, high entropy, or unusual user agents), and any use of the FTP protocol, which is considered highly suspicious on mobile devices.
type: technique
related:
- TA0036: Exfiltration
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a mobile device making DNS queries using suspicious record types (NULL, TXT) or to known DNS tunneling domains?
  context: This question aims to detect the most straightforward indicators of DNS tunneling. Unauthorized NULL or TXT queries are a classic sign of data being encoded in DNS requests. Similarly, matching against a threat intelligence list provides a high-confidence signal of malicious activity.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows DNS Server Analytic logs
  - MDM/UEM Network Flow Logs
  - Network egress points
  - DNS resolver logs
  - VPN concentrators
  - corporate Wi-Fi access point logs
  - Mobile Device Management (MDM) platforms
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT source_ip, query_name, query_type
      FROM dns_logs
      WHERE source_ip IN mobile_device_ip_range
        AND (
          (query_type IN ('NULL', 'TXT') AND query_name NOT IN authorized_services_list)
          OR
          (parent_domain(query_name) IN known_tunneling_domains_threat_feed)
        )
- question: Is a mobile device exhibiting anomalous DNS query behavior, such as unusually long or high-entropy queries, or a sudden spike in query frequency to a single domain?
  context: This question seeks to identify DNS tunneling through behavioral analysis. Adversaries often encode data into long, random-looking subdomains, which increases query length and Shannon entropy. Exfiltrating a large file requires sending many queries in a short period, leading to a high query rate. Correlating these anomalies provides a strong signal of data exfiltration.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows DNS Server Analytic logs
  - MDM/UEM Network Flow Logs
  - Network egress points
  - DNS resolver logs
  - VPN concentrators
  - corporate Wi-Fi access point logs
  - Mobile Device Management (MDM) platforms
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Step 1: Baseline Calculation (offline)
      FOR each device in mobile_device_ip_range:
        CALCULATE 99th_percentile_query_length over 30 days
        CALCULATE mean_query_rate_per_domain and std_dev over 30 days

      // Step 2: Real-time Alerting
      ON each dns_query:
        IF source_ip IN mobile_device_ip_range:
          length = length(query.subdomain)
          entropy = shannon_entropy(query.subdomain)
          query_rate = count(queries) from source_ip to parent_domain(query.name) in last 1 minute
          is_long_or_high_entropy = (length > device.99th_percentile_length) OR (entropy > 4.5)
          is_high_frequency = (query_rate > device.mean_query_rate + 3 * device.std_dev)
          IF is_long_or_high_entropy AND is_high_frequency for same domain within 5 minutes:
            ALERT HighSeverity "Potential DNS Tunneling"
- question: Can a machine learning model identify malicious DNS queries based on a combination of statistical features and historical data?
  context: This question leverages machine learning to detect complex patterns that are difficult to define with simple rules. A Random Forest model can learn the non-linear relationships between features like query length, entropy, character ratios, and domain rarity to score a query's likelihood of being malicious. A supplementary time-series model can detect unusual spikes in specific query types (like TXT), adding another layer of anomaly detection.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows DNS Server Analytic logs
  - MDM/UEM Network Flow Logs
  - Network egress points
  - DNS resolver logs
  - VPN concentrators
  - corporate Wi-Fi access point logs
  - Mobile Device Management (MDM) platforms
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Step 1: Model Prediction
      ON each dns_query:
        features = [length, shannon_entropy, numeric_ratio, query_type, domain_rarity, source_ip_qtype_entropy]
        prediction_score = random_forest_model.predict(features)
        IF prediction_score > 0.9:
          FLAG for investigation

      // Step 2: Time-series Anomaly Detection
      ON each time_interval:
        observed_txt_volume = count(TXT queries) from device
        forecast, confidence_interval = sarima_model.forecast()
        IF observed_txt_volume > confidence_interval.upper_bound:
          FLAG for investigation
- question: Is a mobile device sending HTTP POST/PUT requests to known malicious domains, newly registered domains, or using non-standard user agents indicative of command-line tools?
  context: This question focuses on high-confidence indicators of malicious HTTP-based exfiltration. Connections to known bad domains are a clear red flag. Adversaries often use newly registered domains for their infrastructure. The presence of user agents like 'curl' or 'wget' from a mobile device is highly anomalous and suggests a command-line tool is being used for data transfer, rather than a standard mobile app.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek files.log
  - MDM/UEM Network Flow Logs
  - Network egress points
  - API Gateways
  - web proxy logs
  - MDM/UEM logs with network activity
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT source_ip, destination_host, user_agent, destination_domain_age
      FROM http_logs
      WHERE source_ip IN mobile_device_ip_range
        AND http_method IN ('POST', 'PUT')
        AND (
          destination_host IN malicious_threat_feed
          OR destination_domain_age < 30
          OR user_agent CONTAINS ('curl', 'wget', 'python-requests')
        )
- question: Is a mobile device exhibiting anomalous HTTP traffic, such as unusually large POST/PUT requests, high-entropy request bodies, or a skewed POST-to-GET ratio?
  context: This question aims to detect HTTP exfiltration through behavioral anomalies. Exfiltrating data often involves sending large amounts of it, resulting in abnormally large POST or PUT requests. Encrypted or compressed data can have high Shannon entropy. A high ratio of POST (sending data) to GET (receiving data) requests to a specific domain can also indicate one-way data transfer, which is characteristic of exfiltration.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek files.log
  - MDM/UEM Network Flow Logs
  - Network egress points
  - API Gateways
  - web proxy logs
  - MDM/UEM logs with network activity
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Step 1: Baseline Calculation (offline)
      FOR each device in mobile_device_ip_range:
        CALCULATE 99th_percentile_post_body_size over 30 days
        CALCULATE mean_post_to_get_ratio and std_dev over 30 days

      // Step 2: Real-time Alerting
      ON each http_post_or_put_request:
        IF request_body_size > device.99th_percentile_size OR request_body_size > 5MB:
          ALERT MediumSeverity "Anomalous HTTP Request Size"
          IF shannon_entropy(request_body) > 4.2:
            ESCALATE_ALERT "High Entropy Body"
- question: Can machine learning models, like Isolation Forest or an LSTM autoencoder, detect anomalous HTTP requests or unusual data transfer volumes from mobile devices?
  context: This question applies machine learning for advanced anomaly detection. An Isolation Forest model is effective at identifying outliers in multi-dimensional data, making it suitable for finding anomalous HTTP requests based on features like size, entropy, and header rarity. An LSTM autoencoder learns a user's normal time-series pattern of outbound data volume; a significant deviation (high reconstruction error) can signal a sudden, large-scale exfiltration event.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek files.log
  - MDM/Uem Network Flow Logs
  - Network egress points
  - API Gateways
  - web proxy logs
  - MDM/UEM logs with network activity
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Step 1: Isolation Forest Anomaly Detection
      ON each http_request:
        features = [body_len, dest_ip_rarity, body_entropy, user_agent_rarity, content_type_rarity, post_get_ratio]
        is_outlier = isolation_forest_model.predict(features)
        IF is_outlier:
          FLAG for investigation

      // Step 2: LSTM Time-series Anomaly Detection
      ON each time_interval:
        reconstruction_error = lstm_autoencoder_model.evaluate(user_outbound_volume_series)
        IF reconstruction_error > threshold:
          FLAG for investigation
- question: Is a mobile device initiating an FTP connection, especially one involving file uploads (STOR, APPE) or originating from a device without an authorized FTP client?
  context: This question targets a highly suspicious activity. FTP is an outdated, unencrypted protocol that has no legitimate use case on modern, managed mobile devices. Any FTP connection from a mobile device is a critical red flag. An upload command ('STOR', 'APPE') or the absence of an approved FTP app on the device elevates the event to a confirmed malicious incident, likely for data exfiltration.
  answer_sources:
  - Zeek ftp.log
  - Zeek conn.log
  - MDM/UEM Network Flow Logs
  - MDM/UEM Application Inventory
  - Network egress points
  - network firewalls
  - VPN concentrators
  - corporate Wi-Fi access points
  - DMZ network segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT source_ip, ftp_command, has_authorized_app
      FROM network_logs LEFT JOIN mdm_inventory ON network_logs.source_ip = mdm_inventory.ip
      WHERE source_ip IN mobile_device_ip_range AND destination_port = 21
      IF ftp_command IN ('STOR', 'APPE') OR has_authorized_app = FALSE:
        ALERT Critical "Confirmed Malicious FTP Activity"
      ELSE:
        ALERT Critical "Suspicious FTP Connection from Mobile Device"
- question: For a detected FTP session from a mobile device, is the data volume unusually large, or is this the first time the device has ever used FTP?
  context: This question provides methods for prioritizing an already critical FTP alert. A large data transfer (>10MB) strongly suggests bulk data exfiltration. Comparing the session size to the device's historical network behavior can also highlight significant anomalies. Furthermore, the very first instance of FTP usage from a device is a powerful indicator that its security posture has changed, warranting immediate investigation.
  answer_sources:
  - Zeek ftp.log
  - Zeek conn.log
  - MDM/UEM Network Flow Logs
  - MDM/UEM Application Inventory
  - Network egress points
  - network firewalls
  - VPN concentrators
  - corporate Wi-Fi access points
  - DMZ network segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // This logic runs after an initial FTP alert is triggered
      ON ftp_alert:
        session_volume = alert.orig_bytes + alert.resp_bytes
        device_99_9_percentile_volume = get_99_9_percentile_session_volume(alert.source_ip, last_30_days)
        is_first_ftp_use = check_if_first_ftp_use(alert.source_ip)
        IF session_volume > 10MB OR session_volume > device_99_9_percentile_volume OR is_first_ftp_use:
          ESCALATE_ALERT_PRIORITY to Highest
- question: Can a behavioral peer group analysis using K-Means clustering identify mobile devices that are outliers due to their use of FTP or other anomalous network protocols?
  context: This question uses unsupervised machine learning to find 'the odd one out'. By clustering devices based on their network behavior (protocols used, data volumes, etc.), we can automatically group similar devices. A device that ends up in a very small cluster, or a cluster defined by rare behavior like FTP usage, is a behavioral outlier compared to its peers. This is a strong, data-driven signal of a potential compromise or misuse.
  answer_sources:
  - Zeek ftp.log
  - Zeek conn.log
  - MDM/UEM Network Flow Logs
  - MDM/UEM Application Inventory
  - Network egress points
  - network firewalls
  - VPN concentrators
  - corporate Wi-Fi access points
  - DMZ network segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // This is an offline analysis process
      FOR each device in mobile_device_ip_range:
        feature_vector = [ftp_used_flag, distinct_protocols, dest_port_entropy, avg_outbound_bytes, total_sessions]
      clusters = kmeans.fit_predict(all_feature_vectors)
      FOR each cluster:
        IF cluster.size is very small OR cluster.centroid has ftp_usage_flag = 1:
          FLAG all devices in cluster as "Behavioral Anomaly"