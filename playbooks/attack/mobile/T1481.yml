name: T1481: Web Service
id: d9a1b2c3-4e5f-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps identify adversarial use of legitimate external web services (e.g., GitHub, Pastebin, Telegram) for command and control (C2) on mobile devices. It focuses on detecting anomalies in network traffic patterns that distinguish automated malware behavior from normal human activity. Key indicators include periodic C2 beaconing with low-variance timing and small, uniform payload sizes; the use of non-browser, script-based user agents; repetitive URI access patterns; and a high ratio of DNS queries to subsequent network connections, which can indicate 'canary' check-in mechanisms.
type: technique
related:
  - TA0037: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a mobile device exhibiting potential C2 beaconing behavior by making an unusually high number of connections with small payloads to known abusable web services?
    context: This question aims to identify basic command and control beaconing. Adversaries often use automated scripts that contact C2 servers at regular intervals. High-frequency connections (e.g., >50 per hour) combined with consistently small response payloads (<1KB) are strong indicators of this automated activity, as human interaction typically involves more varied timing and larger data transfers. This query specifically targets services like Telegram, Pastebin, and GitHub, which are frequently misused for C2.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Corporate Wi-Fi network segments for mobile devices
      - VPN Concentrators
      - Mobile Device Management (MDM) platform logs
      - Cloud Access Security Broker (CASB) traffic logs
      - Secure Access Service Edge (SASE) platforms
    range: last 90 days
    queries:
      - pseudocode: FOR each mobile device, COUNT connections to watchlist_domains in 1_hour_window. IF connection_count > 50 AND average_response_payload < 1KB, THEN alert.
  - question: Are connections from a mobile device to a specific web service showing highly regular timing and uniform response sizes, suggesting automated C2 communication?
    context: This question moves beyond simple counts to analyze the statistical properties of the connection traffic. C2 implants often communicate with a fixed frequency, resulting in a very low standard deviation in the time between connections (inter-arrival time). Similarly, the C2 server's responses (e.g., 'no task available') are often identical or very similar in size, leading to low Shannon entropy. By identifying traffic with both low time deviation and low size entropy, we can distinguish machine-generated C2 traffic from variable, human-driven browsing.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Corporate Wi-Fi network segments for mobile devices
      - VPN Concentrators
      - Mobile Device Management (MDM) platform logs
      - Cloud Access Security Broker (CASB) traffic logs
      - Secure Access Service Edge (SASE) platforms
    range: last 90 days
    queries:
      - pseudocode: FOR each source_ip-destination_service pair, CALCULATE std_dev of inter_arrival_times and shannon_entropy of response_bytes over 24h. IF std_dev < 2s AND entropy is in bottom 5th percentile, THEN alert.
  - question: Can we use unsupervised machine learning to find clusters of anomalous mobile device connections that fit the profile of coordinated C2 activity?
    context: This question uses a data-driven approach to find outliers without pre-defined thresholds. By creating features like the standard deviation of inter-arrival times and the entropy of response sizes, we can use clustering algorithms (like DBSCAN) to group all connections. Anomalous clusters, especially those with a small number of devices exhibiting highly regular timing and size characteristics, are strong candidates for C2 channels that might not be caught by static rules.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Corporate Wi-Fi network segments for mobile devices
      - VPN Concentrators
      - Mobile Device Management (MDM) platform logs
      - Cloud Access Security Broker (CASB) traffic logs
      - Secure Access Service Edge (SASE) platforms
    range: last 90 days
    queries:
      - pseudocode: FROM connection logs, CREATE features (std_dev_inter_arrival, entropy_resp_bytes, etc.) per source-dest pair. APPLY DBSCAN algorithm. INVESTIGATE anomalous clusters with low time variance and low size entropy.
  - question: Is a mobile device using a non-browser, script-based client to communicate with web services, which could indicate C2 activity?
    context: Legitimate user traffic from mobile devices almost always originates from a standard mobile web browser (e.g., Chrome, Safari) or a dedicated application. The presence of a User-Agent string associated with scripting tools or libraries (like 'curl', 'python-requests', or 'Wget') is highly anomalous and suggests automated, non-interactive communication, a hallmark of malware C2.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles)
      - Web Application Firewall (WAF) logs
      - Cloud Access Security Broker (CASB) logs
    range: last 90 days
    queries:
      - pseudocode: SEARCH http logs for user_agents matching deny-list (e.g., '^curl/', '^python-requests'). FILTER for traffic from mobile NAIs to non-developer domains. ALERT on matches.
  - question: Is a mobile device repeatedly accessing the same or a very limited set of URIs on a web service, suggesting automated, non-interactive data retrieval?
    context: Human browsing involves navigating to many different and often unique URIs. In contrast, an automated script used for C2 might repeatedly poll a single API endpoint or a raw file path. This repetitive behavior results in very low Shannon entropy for the set of URIs accessed by that device. Identifying devices with abnormally low URI entropy compared to other users of the same service can uncover this type of automated access.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles)
      - Web Application Firewall (WAF) logs
      - Cloud Access Security Broker (CASB) logs
    range: last 90 days
    queries:
      - pseudocode: FOR each destination_host, GROUP requests by source_ip. CALCULATE shannon_entropy of URIs for each source. FLAG sources with URI entropy in the bottom 10th percentile relative to others.
  - question: Can a machine learning model be used to proactively identify and score potentially malicious HTTP/S requests from mobile devices in real-time?
    context: This question proposes a sophisticated, proactive detection method. By training a classification model on features like User-Agent and URI entropy, TLS JA3 hashes, and HTTP method distribution, we can create a system that learns the characteristics of both benign and malicious traffic. This model can then score new, unseen requests, allowing for the real-time identification of C2 communications that might use novel techniques not covered by static rules or simpler statistical methods.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles)
      - Web Application Firewall (WAF) logs
      - Cloud Access Security Broker (CASB) logs
    range: last 90 days
    queries:
      - pseudocode: EXTRACT features (user_agent_entropy, uri_entropy, ja3_hash_rarity, etc.) from http/ssl logs. TRAIN binary classification model (e.g., XGBoost). DEPLOY model to score new requests from mobile NAIs in real-time. ALERT on high-confidence malicious predictions.
  - question: Is any mobile device attempting to resolve a domain name known to be associated with command and control infrastructure?
    context: This is a fundamental and high-fidelity investigative question. Using up-to-date threat intelligence feeds provides a direct way to identify known threats. If a mobile device in the environment makes a DNS query for a domain that is on a high-confidence list of C2 servers, it is a strong indicator of a compromise and requires immediate investigation.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Protective DNS (PDNS) logs
      - MDM-enforced DNS services
      - Firewall logs that capture both DNS requests and connection attempts
    range: last 90 days
    queries:
      - pseudocode: MONITOR dns logs for queries from mobile NAI. COMPARE queried domains against a threat intelligence feed of known C2 domains. GENERATE high-priority alert on any match.
  - question: Is a mobile device performing an unusually high number of DNS lookups for a domain without establishing a corresponding network connection, possibly indicating a 'canary' C2 check-in mechanism?
    context: Some malware uses DNS queries as a lightweight C2 channel. It may resolve a domain to check for a specific IP address that signals a new task, but it will not establish a full TCP/UDP connection unless instructed. This results in a high ratio of DNS queries to actual connections. By baselining normal behavior for popular services and alerting on significant deviations, we can detect this stealthy C2 technique.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Protective DNS (PDNS) logs
      - MDM-enforced DNS services
      - Firewall logs that capture both DNS requests and connection attempts
    range: last 90 days
    queries:
      - pseudocode: JOIN dns and connection logs by source_ip. CALCULATE ratio of unique_dns_queries to unique_connections per domain. ESTABLISH baseline ratio for each service. ALERT if a device's ratio exceeds the 99th percentile of the baseline.
  - question: Can a regression model identify anomalous discrepancies between the number of DNS queries and the number of network connections for a mobile device?
    context: This question advances the previous ratio-based approach by using a machine learning model to predict the expected number of connections based on DNS activity and other factors (like time of day, domain popularity). A large positive residual—where the actual number of DNS queries is far greater than what's needed to support the observed connections—is a statistically significant anomaly. This method is more robust than a simple ratio as it can account for multiple contextual variables, reducing false positives.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Protective DNS (PDNS) logs
      - MDM-enforced DNS services
      - Firewall logs that capture both DNS requests and connection attempts
    range: last 90 days
    queries:
      - pseudocode: TRAIN regression model to predict connection_count from features (dns_query_count, time_of_day, domain_popularity). APPLY model to live data. INVESTIGATE devices with the highest positive residuals (actual DNS queries >> predicted).