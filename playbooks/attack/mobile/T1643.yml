name: "T1643: Generate Traffic from Victim"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook addresses the potential for adversaries to use managed mobile devices to generate fraudulent or malicious outbound traffic. This includes detecting anomalous SMS activity, such as messages sent to known fraudulent/premium-rate numbers or excessive SMS volumes from non-standard messaging apps. It also covers identifying patterns of automated network activity indicative of ad fraud, click fraud, or app-ranking manipulation. This is characterized by unusual spikes in DNS/HTTP requests, low randomness in DNS queries, and a high ratio of network connections to data transferred."
type: "technique"
related: 
  - "TA0034: Impact"
contributors: 
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a managed mobile device sending SMS messages to a known fraudulent or premium-rate number?"
    context: "This question aims to detect Toll Fraud, where malware sends SMS messages to premium-rate numbers, incurring costs for the organization. The action is to create a rule that cross-references the destination number of every outbound SMS message from carrier logs with a threat intelligence feed of known fraudulent and premium-rate numbers. A match would trigger a high-severity alert, providing crucial details like the source device, user, destination, and the specific application that sent the message, allowing for immediate response."
    answer_sources:
      - "Carrier billing records"
      - "Mobile Device Management (MDM) application inventory logs"
      - "Mobile Device Management (MDM) application permission logs"
      - "Managed mobile device fleet, MDM servers, and Telecommunications provider billing systems"
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          FOR each outbound_sms IN carrier_logs
            IF outbound_sms.destination_number IN fraudulent_number_feed
              FETCH device_info, user_info, app_name FROM mdm_logs WHERE device_id = outbound_sms.device_id
              TRIGGER high_severity_alert WITH (device_info, user_info, app_name, outbound_sms.destination_number)
  - question: "Is a non-messaging application on an Android device sending an anomalously high volume of SMS messages?"
    context: "This question helps identify malware that has gained SMS permissions to send messages for fraudulent purposes, bypassing standard user-facing messaging apps. The approach involves identifying Android applications with `SEND_SMS` permission that are not classified as 'Messaging' apps. For these apps, a historical baseline (99th percentile) of daily SMS volume is established. An alert is triggered if the daily count exceeds this baseline, indicating a potential compromise or misuse of permissions."
    answer_sources:
      - "Carrier billing records"
      - "Mobile Device Management (MDM) application inventory logs"
      - "Mobile Device Management (MDM) application permission logs"
      - "Managed mobile device fleet, MDM servers, and Telecommunications provider billing systems"
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          FOR each android_device IN mdm_fleet
            FIND apps_with_sms_permission WHERE app.category != 'Messaging'
            FOR each app in apps_with_sms_permission
              CALCULATE daily_sms_baseline (99th percentile over 30 days) FROM carrier_logs
              GET current_daily_sms_count
              IF current_daily_sms_count > daily_sms_baseline
                TRIGGER medium_severity_alert WITH (device, app, current_count, baseline)
  - question: "Can machine learning be used to classify outbound SMS events as fraudulent?"
    context: "This question explores a more advanced, proactive approach to detecting SMS fraud by using a supervised machine learning model. The goal is to automatically score every outbound SMS event based on a variety of features (e.g., sending app category, time of day, destination country, historical frequency). By training a model like a Random Forest on labeled historical data, the system can identify fraudulent activity with high confidence. Events classified as 'fraudulent' with a confidence score above 0.95 would automatically trigger a high-severity alert and a device quarantine action via MDM, providing a rapid and automated response to a high-confidence threat."
    answer_sources:
      - "Carrier billing records"
      - "Mobile Device Management (MDM) application inventory logs"
      - "Mobile Device Management (MDM) application permission logs"
      - "Managed mobile device fleet, MDM servers, and Telecommunications provider billing systems"
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          FOR each new_sms_event
            EXTRACT features (app_category, time_of_day, dest_country, etc.)
            SCORE event using trained_ml_model
            IF score.class == 'fraudulent' AND score.confidence > 0.95
              TRIGGER high_severity_alert
              INITIATE mdm_quarantine_policy FOR device
  - question: "Is a managed mobile device communicating with network destinations associated with ad fraud, click fraud, or app-ranking manipulation?"
    context: "This question aims to detect if a mobile device is being used for fraudulent online activities by checking its network communications against known malicious infrastructure. The action is to create a real-time rule that inspects DNS queries and HTTP/S requests from mobile devices. If a destination FQDN or URL matches an entry in a threat intelligence feed for ad/click fraud, a medium-severity alert is triggered. This provides early warning that a device may be compromised or running a malicious app, even if the traffic volume itself is not yet anomalous."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Corporate Wi-Fi network gateways, DNS resolvers, and Internet web proxies"
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          FOR each network_event (dns_log, http_log) FROM mobile_ip_range
            IF network_event.destination IN fraud_threat_feed
              TRIGGER medium_severity_alert WITH (source_ip, destination, user_agent, matched_feed)
  - question: "Is a mobile device exhibiting a pattern of automated network activity indicative of fraud, based on volume, randomness, and connection-to-data ratio?"
    context: "This question seeks to identify automated, non-human traffic patterns by analyzing multiple network metrics simultaneously. It looks for a combination of three indicators: 1) an unusually high volume of connections, 2) unusually low randomness (entropy) in DNS queries, suggesting repetitive lookups, and 3) a high ratio of connections to data transferred, typical of check-in or simple click traffic. An alert is triggered only when a device exceeds its own historical baseline for connection volume/ratio AND falls below its baseline for DNS entropy, creating a high-fidelity signal for automated fraudulent behavior."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Corporate Wi-Fi network gateways, DNS resolvers, and Internet web proxies"
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          FOR each mobile_ip, HOURLY
            CALCULATE current_conn_count, current_dns_entropy, current_conn_byte_ratio FROM last_hour_zeek_logs
            FETCH historical_baselines (95th percentile for count/ratio, 5th for entropy) for this hour-of-day
            IF (current_conn_count > baseline_count OR current_conn_byte_ratio > baseline_ratio) AND (current_dns_entropy < baseline_entropy)
              TRIGGER medium_severity_alert
  - question: "Can an unsupervised machine learning model detect anomalous network behavior from mobile devices in near real-time?"
    context: "This question proposes using an unsupervised anomaly detection model, like an Isolation Forest, to identify novel or evolving fraudulent traffic patterns that may not be caught by signature-based rules or simple baselines. By training a model on a wide range of features from Zeek logs (connection counts, DNS entropy, port distribution, etc.), it learns the 'normal' network behavior for each device. The model can then score new activity in near real-time, flagging significant deviations from this learned norm as potential threats without prior knowledge of the specific attack, enabling detection of zero-day or sophisticated fraud techniques."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Corporate Wi-Fi network gateways, DNS resolvers, and Internet web proxies"
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          FOR each 5_minute_window for each device_ip
            EXTRACT features (conn_count, dns_entropy, port_dist, etc.) from Zeek logs
            SCORE window using trained_isolation_forest_model
            IF anomaly_score > threshold
              TRIGGER alert WITH (device_ip, score, anomalous_features)