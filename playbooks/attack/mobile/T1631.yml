name: "T1631: Process Injection"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook is designed to detect adversarial process injection on mobile devices for the purposes of privilege escalation and defense evasion. It focuses on identifying evidence such as a mobile OS process loading an unsigned or non-allowlisted dynamic library, calling specific debugging and memory manipulation APIs (e.g., `ptrace`, `mach_vm_write`), or a trusted, allowlisted application exhibiting anomalous resource usage (CPU/memory) and anomalous network behavior (connections to new or suspicious FQDNs/IPs) without a corresponding legitimate change like an update. The goal is to answer the primary investigative requirements: 'Is an adversary attempting to elevate privileges on mobile devices via process injection?' and 'Is an adversary using process injection to hide malicious code within legitimate mobile application processes?'"
type: "technique"
related:
  - "TA0029: Privilege Escalation"
  - "TA0030: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "How can we detect sensitive API calls on mobile devices that might indicate process injection and correlate them with known malicious network infrastructure?"
    context: "This question aims to identify the initial, overt signs of process injection, such as the use of debugging or memory manipulation APIs (`ptrace`, `dlopen`, `mach_vm_write`) by non-standard processes. Correlating this on-device activity with network logs provides crucial context, helping to validate the threat by linking it to known command-and-control (C2) servers or malicious domains. Answering this helps catch attackers in the early stages of privilege escalation."
    answer_sources:
      - "MDM/EDR Process Activity Logs"
      - "Android logcat"
      - "iOS Unified Logs"
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Threat Intelligence Feeds"
      - "Managed mobile devices with EDR/MDM agents, network gateways monitoring corporate Wi-Fi and VPN traffic, and centralized log aggregation platforms such as a SIEM or Data Lake."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH EDR logs for process events WHERE (api_call IN ['ptrace', 'mach_vm_write'] OR (api_call = 'dlopen' AND library_path NOT IN '/system/lib/')) AND process_signature NOT IN [allowlisted_developer_certs] AND process_name NOT IN [allowlisted_debug_tools]. FOR each result, SEARCH network logs (dns.log, conn.log) WHERE source_ip = event.device_ip AND timestamp WITHIN 1 minute of event.timestamp. IF destination_ip OR destination_domain IN [threat_intel_feed], THEN ALERT."
  - question: "Are any mobile applications loading rare or unusual dynamic libraries, and does this activity coincide with DNS requests for high-entropy domains, suggesting DGA activity?"
    context: "This question focuses on a more subtle detection method. Attackers may inject a custom, malicious library into a legitimate process, which would be rare across the device fleet. High-entropy domain requests, calculated using the Shannon entropy formula $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$, are a common indicator of Domain Generation Algorithms (DGAs) used for C2 communication. Combining these two weak signals—a rare library load and a suspicious DNS query—creates a high-fidelity alert for advanced process injection attacks."
    answer_sources:
      - "MDM/EDR Process Activity Logs"
      - "Zeek dns.log"
      - "Managed mobile devices with EDR/MDM agents, network gateways monitoring corporate Wi-Fi and VPN traffic, and centralized log aggregation platforms such as a SIEM or Data Lake."
    range: "last 90 days"
    queries:
      - "Pseudocode: DEFINE rare_library_events AS (SEARCH EDR library_load logs GROUP BY library, application | WHERE prevalence < 0.01). DEFINE high_entropy_dns AS (SEARCH dns.log | CALCULATE shannon_entropy(domain_name) | WHERE entropy_score > 99th_percentile_baseline). JOIN rare_library_events and high_entropy_dns ON device_id WHERE event_timestamps are within 2 minutes. IF match, THEN ALERT."
  - question: "Are high-risk mobile applications exhibiting anomalous system call sequences, and does this behavior correlate with network connections to new, unseen IP addresses?"
    context: "This question addresses the need to detect in-memory threats that don't drop new files. By modeling the normal sequence of system calls for an application with an LSTM autoencoder, we can identify when a process deviates from its expected behavior, which could be caused by injected code. Correlating this behavioral anomaly with a connection to a 'newly observed' IP address (one not seen in the last 30 days) strengthens the signal, as this is a common pattern for malware establishing a C2 channel."
    answer_sources:
      - "MDM/EDR Process Activity Logs"
      - "Zeek conn.log"
      - "Managed mobile devices with EDR/MDM agents, network gateways monitoring corporate Wi-Fi and VPN traffic, and centralized log aggregation platforms such as a SIEM or Data Lake."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH LSTM model_output for events WHERE reconstruction_error > 99.9th_percentile_threshold. FOR each anomaly, GET device_id and timestamp. SEARCH conn.log for connections WHERE source_ip = anomaly.device_ip AND timestamp is within 5 minutes of anomaly.timestamp. IF destination_ip was not seen for that device_id in the last 30 days, THEN ALERT."
  - question: "Are trusted mobile applications making network connections that are inconsistent with their known behavior or are associated with known malicious indicators?"
    context: "This question targets defense evasion, where an attacker hides within a legitimate process (e.g., a web browser). While the process itself is trusted, its network traffic may betray malicious activity. This involves checking for connections to blocklisted IPs/domains, matching TLS fingerprints (JA3/JA3S) against known malicious ones, and verifying that the User-Agent string is correct for the application. A mismatch can indicate that malicious code within the process is making its own outbound C2 requests."
    answer_sources:
      - "MDM/EDR Process Activity Logs"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Threat Intelligence Feeds"
      - "Managed mobile devices with EDR/MDM agents, network gateways monitoring corporate Wi-Fi and VPN traffic, and centralized log aggregation platforms such as a SIEM or Data Lake."
    range: "last 90 days"
    queries:
      - "Pseudocode: JOIN process logs and network logs (conn, dns, http, ssl) on device_ip. FOR each event WHERE process_name IN [trusted_apps_list], CHECK IF (destination_ip OR domain IN [threat_intel_feed]) OR (ja3_hash IN [malicious_ja3_list]) OR (user_agent NOT MATCHES established_user_agent_pattern for process_name). IF any condition is true, THEN ALERT."
  - question: "Are any mobile applications exhibiting both anomalous resource consumption (CPU/memory) and an unusually high ratio of outgoing to incoming network traffic, suggesting data exfiltration?"
    context: "This question seeks to identify signs of malicious code execution by its side effects. Injected code can cause an application to use more CPU and memory than normal. If this high resource usage coincides with a network traffic pattern where the device is sending significantly more data than it is receiving ($$ orig_bytes / resp_bytes $$), it is a strong indicator of data exfiltration. This is a powerful heuristic for detecting the impact of a compromise."
    answer_sources:
      - "MDM Performance Logs (CPU/Memory)"
      - "Zeek conn.log"
      - "Managed mobile devices with EDR/MDM agents, network gateways monitoring corporate Wi-Fi and VPN traffic, and centralized log aggregation platforms such as a SIEM or Data Lake."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH MDM performance logs WHERE (cpu_usage > 95th_percentile_baseline AND memory_usage > 95th_percentile_baseline) for 5 continuous minutes. FOR each event, SEARCH conn.log WHERE source_ip = event.device_ip AND timestamp is concurrent. CALCULATE byte_ratio = $$ orig_bytes / resp_bytes $$. IF byte_ratio > 99th_percentile_baseline for that device, THEN ALERT."
  - question: "Can we detect anomalous network connections from mobile devices that, when combined with high resource usage, point to a potential compromise?"
    context: "This question uses unsupervised machine learning (DBSCAN) to define 'normal' network behavior for a device based on features like port, protocol, duration, and ASN. Any connection that doesn't fit into a known cluster is flagged as an outlier. This is a powerful way to detect novel C2 channels. When such a network outlier occurs at the same time as a resource consumption anomaly (high CPU/memory), it provides a strong, correlated signal that the device is compromised."
    answer_sources:
      - "Zeek conn.log"
      - "MDM Performance Logs (CPU/Memory)"
      - "Managed mobile devices with EDR/MDM agents, network gateways monitoring corporate Wi-Fi and VPN traffic, and centralized log aggregation platforms such as a SIEM or Data Lake."
    range: "last 90 days"
    queries:
      - "Pseudocode: DEFINE network_outliers AS (SEARCH DBSCAN model_output for events WHERE cluster_label = 'noise'). DEFINE resource_anomalies AS (SEARCH MDM performance logs WHERE cpu_usage > 95th_percentile OR memory_usage > 95th_percentile). JOIN network_outliers and resource_anomalies ON device_id WHERE timestamps are concurrent. IF match, THEN ALERT."