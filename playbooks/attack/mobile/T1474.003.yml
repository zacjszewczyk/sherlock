name: "T1474.003: Compromise Software Supply Chain"
id: "f9e0b51a-5f8c-4f8a-9a9c-2b2b1a9c1e1e"
description: "This playbook helps answer the question: 'Has an adversary compromised our mobile software supply chain to gain initial access?'. It focuses on detecting anomalies following a mobile application update. Key indicators include mismatches between the application's digital signature and the official vendor hash, coupled with the introduction of new, high-risk permissions. It also investigates post-update network behavior, looking for outbound connections to known malicious infrastructure, DNS requests indicative of domain generation algorithms (DGA), anomalous TLS fingerprints, unusual data egress volumes, and communication over non-standard ports."
type: "technique"
related:
  - "TA0027: Initial Access"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Following a mobile application update, does the new package's signature hash match a known-malicious hash or fail verification against the official vendor hash?"
    context: "This question aims to identify tampered or trojanized application updates at the earliest stage. A mismatch in the digital signature is a strong indicator that the application package has been modified since it was signed by the legitimate developer. Comparing the hash against both a deny-list of known malicious signatures and an allow-list of official vendor signatures provides a robust method for detecting a potential supply chain compromise."
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory Logs"
      - "Mobile Threat Defense (MTD) Signature Analysis Reports"
      - "Vendor-Published Application Hashes"
      - "Internal Application Hash Baseline"
      - "Application Manifest Files (from MDM/MTD)"
      - "MDM/UEM servers, corporate-owned mobile endpoints, and internal/external application repositories used by the organization."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each app_update IN mdm_logs | EXTRACT signature_hash | IF signature_hash IN malicious_hash_list THEN ALERT (High) | ELSE IF signature_hash NOT IN vendor_hash_list THEN ALERT (High)"
  - question: "Did a recent mobile application update introduce a significant number of new, high-risk permissions compared to its previous version?"
    context: "Adversaries often modify legitimate applications to include additional permissions that facilitate malicious activities like data theft, surveillance, or persistence. This question uses two statistical methods to detect such changes. The Jaccard similarity measures the churn in the overall permission set, while the risk score highlights the introduction of specifically dangerous permissions. A significant change in either metric, especially for a minor update, warrants investigation."
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory Logs"
      - "Mobile Threat Defense (MTD) Signature Analysis Reports"
      - "Vendor-Published Application Hashes"
      - "Internal Application Hash Baseline"
      - "Application Manifest Files (from MDM/MTD)"
      - "MDM/UEM servers, corporate-owned mobile endpoints, and internal/external application repositories used by the organization."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each app_update IN mdm_logs | CALCULATE jaccard_similarity(old_permissions, new_permissions) | CALCULATE risk_score_increase(old_permissions, new_permissions) | IF jaccard_similarity < threshold OR risk_score_increase > percentile_99 THEN ALERT"
  - question: "Based on a combination of signature status, permission changes, and risk scores, does a machine learning model classify a recent application update as likely compromised?"
    context: "This question leverages a machine learning model to provide a holistic assessment of an application update's risk. By combining multiple weak signals (signature status, permission changes) into a single predictive model, it can identify complex patterns of compromise that might be missed by individual checks. A high probability score from the model serves as a strong, aggregated alert that synthesizes multiple pieces of evidence, justifying an immediate investigation."
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory Logs"
      - "Mobile Threat Defense (MTD) Signature Analysis Reports"
      - "Vendor-Published Application Hashes"
      - "Internal Application Hash Baseline"
      - "Application Manifest Files (from MDM/MTD)"
      - "MDM/UEM servers, corporate-owned mobile endpoints, and internal/external application repositories used by the organization."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each app_update IN mdm_logs | GATHER features (signature_status, jaccard_score, risk_delta, etc.) | PREDICT compromise_probability = ml_model(features) | IF compromise_probability > threshold THEN ALERT"
  - question: "Following a mobile app update, is the device communicating with known malicious infrastructure or using non-standard ports for common protocols?"
    context: "A compromised application will often 'call home' to an adversary's command and control (C2) server. This question seeks to detect that initial communication. By correlating app updates with subsequent network traffic and checking destinations (IPs, domains) and transport characteristics (TLS fingerprints, non-standard ports) against threat intelligence and protocol standards, analysts can identify tell-tale signs of malicious C2 activity."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Mobile Device Management (MDM) Application Update Logs"
      - "Threat Intelligence Feeds"
      - "Network egress points (firewalls, proxies), corporate DNS resolvers, VPN concentrators, and WiFi access points servicing managed mobile devices."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "JOIN mdm_update_logs ON device_ip WITH network_logs ON source_ip | FOR each connection POST_UPDATE | IF dest_ip OR dest_domain OR ja3_hash IN threat_intel_feeds THEN ALERT | IF protocol_is_standard AND dest_port_is_non_standard THEN ALERT"
  - question: "After a mobile app update, does the device exhibit anomalous network behavior such as unusual data exfiltration volumes, DNS requests for algorithmically generated domains (DGA), or communication to new, rare ports?"
    context: "This question looks for statistical anomalies in network behavior that indicate a compromise. A sudden spike in data egress can signal data theft. High-entropy DNS queries are a hallmark of Domain Generation Algorithms (DGAs) used by malware to locate C2 servers. Communication to a new, low-prevalence port can indicate a custom C2 channel. Detecting these deviations from a device's established baseline can uncover malicious activity even when the destination is not yet on a threat intelligence list."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Mobile Device Management (MDM) Application Update Logs"
      - "Threat Intelligence Feeds"
      - "Network egress points (firewalls, proxies), corporate DNS resolvers, VPN concentrators, and WiFi access points servicing managed mobile devices."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each device POST_UPDATE | IF daily_data_out > baseline_99th_percentile THEN ALERT | FOR each new_dns_query | IF shannon_entropy(domain) > 3.5 THEN ALERT | FOR each new_dest_port | IF is_new_and_rare(port) THEN ALERT"
  - question: "Does a time-series analysis of post-update network traffic patterns reveal anomalies consistent with C2 beaconing or data exfiltration?"
    context: "This question applies advanced machine learning to detect subtle, time-based patterns in network traffic that are characteristic of malware behavior. C2 beaconing often occurs at regular intervals, and data exfiltration can cause sustained, unusual traffic volumes. A time-series model can learn a device's normal 'rhythm' of communication and flag significant deviations that would be invisible to simple threshold-based checks, providing a powerful method for detecting sophisticated threats."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Mobile Device Management (MDM) Application Update Logs"
      - "Threat Intelligence Feeds"
      - "Network egress points (firewalls, proxies), corporate DNS resolvers, VPN concentrators, and WiFi access points servicing managed mobile devices."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each device POST_UPDATE | GATHER hourly_traffic_features (volume, unique_ips, egress_ratio) | PREDICT expected_traffic = time_series_model(features) | IF actual_traffic DEVIATES_SIGNIFICANTLY from expected_traffic THEN ALERT"