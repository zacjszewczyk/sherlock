name: T1638: Adversary-in-the-Middle
id: 5a81e3a4-8b9f-4c1d-9d0e-1f2a3b4c5d6e
description: This playbook focuses on detecting Adversary-in-the-Middle (AitM) attacks targeting corporate mobile devices. An adversary may perform an AitM attack to intercept, view, or manipulate network traffic to and from a user's device. Detections are based on identifying network anomalies such as TLS sessions with invalid certificates, connections to unauthorized VPNs, suspicious DNS and HTTP patterns indicative of C2 channels, network activity following the sideloading of untrusted applications, and connections to spoofed Wi-Fi access points.
type: technique
related:
- TA0035: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a mobile device establishing a TLS session with a non-trusted certificate, suggesting a potential interception attempt?
  context: This question aims to detect active TLS interception by identifying connections from mobile devices that fail certificate validation. An alert is triggered if the TLS session status is not 'ok', indicating issues like a self-signed or untrusted certificate authority. Enriching the alert with certificate details (issuer, subject) and checking against trusted lists helps an analyst quickly validate if the interception is malicious.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Corporate Wi-Fi network segments, network egress points, DNS resolvers, network sensor collectors (e.g., Zeek cluster), and Certificate Authority infrastructure.
  range: last 90 days
  queries:
  - pseudocode: SEARCH Zeek logs WHERE (source_ip IN mobile_ip_range AND ssl.validation_status != 'ok') | JOIN x509.log on uid | EXTRACT certificate.issuer, certificate.subject | CHECK issuer against trusted_ca_list | CHECK serial against ct_logs
- question: Has a specific mobile device or the entire mobile subnet shown a statistical anomaly in the rate of TLS connection errors?
  context: This question uses statistical baselining to detect subtle or slow interception campaigns. It establishes a normal "error rate" for TLS connections for each device-server pair and for the mobile network as a whole. An alert is triggered if the current error rate significantly deviates from its historical baseline (e.g., exceeds the 99th percentile or 3 standard deviations), which could indicate a new or escalating AiTM attack that might otherwise be lost in the noise.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Corporate Wi-Fi network segments, network egress points, DNS resolvers, network sensor collectors (e.g., Zeek cluster), and Certificate Authority infrastructure.
  range: last 90 days
  queries:
  - pseudocode: FOR each (device_ip, sni) in mobile_traffic | CALCULATE rolling 30-day baseline of (error_tls_connections / total_tls_connections) | ALERT if current ratio > 99th_percentile_of_baseline | SEPARATELY, CALCULATE hourly baseline of non_ok_statuses for mobile_subnet | ALERT if current_count > (mean + 3 * std_dev)
- question: Can a machine learning model detect an anomalous spike in certificate validation errors that indicates widespread Adversary-in-the-Middle activity?
  context: This question leverages a more advanced, time-series machine learning model to detect sophisticated AiTM attacks. By training on multiple features like SNI, error type, issuer, and geo-data, the model learns the normal patterns of certificate errors. An alert is generated when the observed error volume or type deviates significantly from the model's prediction, allowing for the detection of coordinated attacks that simple statistical thresholds might miss.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Corporate Wi-Fi network segments, network egress points, DNS resolvers, network sensor collectors (e.g., Zeek cluster), and Certificate Authority infrastructure.
  range: last 90 days
  queries:
  - pseudocode: TRAIN time-series model (Prophet/LSTM) on features (sni, validation_status, issuer, etc.) | PREDICT expected error volume and type | ALERT if observed_errors deviate significantly from model's confidence_interval
- question: Is a managed mobile device connecting to an unapproved external VPN gateway?
  context: This question seeks to identify unauthorized VPN usage, which could be a method for an adversary to exfiltrate data or bypass security controls. By maintaining a list of sanctioned corporate VPN gateways, any connection from a mobile device to a non-listed IP on common VPN ports is flagged. Enriching this with DNS, WHOIS, and MDM data helps determine if the connection is malicious or simply unsanctioned employee activity.
  answer_sources:
  - Zeek conn.log
  - MDM/UEM logs
  - Network egress points, VPN concentrators, corporate firewalls, and MDM/UEM servers.
  range: last 90 days
  queries:
  - pseudocode: DEFINE sanctioned_vpn_list | SEARCH Zeek conn.log WHERE (source_ip IN mobile_ip_range AND dest_port IN vpn_ports AND dest_ip NOT IN sanctioned_vpn_list) | ENRICH with passive_dns, whois, geoip | CORRELATE with mdm_logs for vpn_profile_installs
- question: Does a connection from a mobile device to a non-sanctioned destination exhibit beaconing behavior or unusually large data transfers?
  context: This question looks for behavioral indicators of malicious C2 traffic masquerading as a VPN. It analyzes the timing and volume of connections. A highly regular connection interval (low variance in inter-arrival time) can indicate automated beaconing, while unusually large or long-duration connections can suggest data exfiltration. This helps distinguish automated malware from legitimate, albeit unsanctioned, user activity.
  answer_sources:
  - Zeek conn.log
  - MDM/UEM logs
  - Network egress points, VPN concentrators, corporate firewalls, and MDM/UEM servers.
  range: last 90 days
  queries:
  - pseudocode: FOR each (source_ip, dest_ip, dest_port) | CALCULATE inter-arrival_time_variance, duration, total_bytes | ALERT if (dest is non-sanctioned_vpn_like AND inter-arrival_variance < 5th_percentile) OR (duration > 95th_percentile) OR (total_bytes > 95th_percentile)
- question: Can an unsupervised machine learning model identify anomalous network sessions from mobile devices that may represent rogue VPN tunnels?
  context: This question applies an unsupervised model like Isolation Forest to find outliers in network traffic data. By considering a wide range of features (port, duration, data volume, destination rarity, etc.), the model can identify sessions that do not conform to normal patterns, even if they don't match a specific, predefined rule. This is effective for discovering novel or evasive tunneling techniques.
  answer_sources:
  - Zeek conn.log
  - MDM/UEM logs
  - Network egress points, VPN concentrators, corporate firewalls, and MDM/UEM servers.
  range: last 90 days
  queries:
  - pseudocode: TRAIN Isolation Forest model on features (dest_port, duration, total_bytes, dest_asn_rarity, etc.) | SCORE all mobile device network sessions | FLAG sessions identified as anomalies for investigation
- question: Did a mobile device query a suspicious domain (e.g., newly registered, on a threat feed) and subsequently upload a large amount of data to it?
  context: This question aims to detect C2 communication channels established after a malicious DNS lookup. It chains together several suspicious events: a DNS query for a high-risk domain (newly created or known-bad), followed by an outbound connection with a large data upload. This sequence is a strong indicator of a compromised device exfiltrating data via an adversary-controlled domain.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek conn.log
  - Corporate DNS resolvers, web proxies/egress points, network traffic sensors (e.g., Zeek cluster), and threat intelligence platform feeds.
  range: last 90 days
  queries:
  - pseudocode: SEARCH dns.log WHERE (source_ip IN mobile_ip_range AND (domain IN threat_intel_feed OR domain_age < 30_days)) | CORRELATE with http.log and conn.log within 60s | ALERT if (http_method is POST) OR (conn.orig_bytes > 95th_percentile_of_device_history)
- question: Is a mobile device making DNS queries for domains that are algorithmically generated or exceptionally rare within the organization?
  context: This question focuses on identifying domains used for C2 that are designed to evade simple blocklists. It looks for two key characteristics: high entropy (random-looking names, typical of DGAs) and rarity (domains requested by very few devices). Either of these, especially when combined with a high ratio of DNS lookups to actual connections, can indicate that a device is attempting to find an active C2 server.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek conn.log
  - Corporate DNS resolvers, web proxies/egress points, network traffic sensors (e.g., Zeek cluster), and threat intelligence platform feeds.
  range: last 90 days
  queries:
  - pseudocode: FOR each domain in dns.log | CALCULATE shannon_entropy and request_rarity_score | ALERT if (entropy > 98th_percentile) OR (request_rarity_score < 3_devices_in_30_days) | TRACK ratio of (dns_queries / tcp_connections) per user and ALERT on high ratios
- question: Can a sequence-based machine learning model identify a session of user events (DNS, HTTP, etc.) as an anomalous C2 channel?
  context: This question uses a sophisticated ML model (like an LSTM) that understands the sequence of events in a user session. It's trained on what normal user browsing looks like. It can then identify and flag sequences that deviate from this norm, such as the specific 'rare DNS query -> HTTP connection -> large upload' pattern, which is a classic signature of C2 activity facilitated by an AiTM attack.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek conn.log
  - Corporate DNS resolvers, web proxies/egress points, network traffic sensors (e.g., Zeek cluster), and threat intelligence platform feeds.
  range: last 90 days
  queries:
  - pseudocode: TRAIN sequence model (LSTM/GRU) on legitimate user session event sequences (dns_entropy, domain_age, http_method, etc.) | CLASSIFY new event sequences | FLAG anomalous sequences, especially 'rare_dns -> http -> large_upload' patterns
- question: Has a managed Android device downloaded an application package (APK) from an unsanctioned web source?
  context: This question targets the initial vector of a malicious mobile application: sideloading from an untrusted source. It monitors network traffic for APK file downloads and checks if the download source is on an approved list (like the official Google Play Store or a corporate app store). Any download from an unapproved source is an immediate high-risk event, triggering an alert and automatic analysis of the file.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek conn.log
  - MDM/UEM logs
  - Managed mobile devices, MDM/UEM servers, network egress points, corporate application store, and network file analysis systems.
  range: last 90 days
  queries:
  - pseudocode: SEARCH files.log for mime-type 'application/vnd.android.package-archive' | EXTRACT download_host from http.log | ALERT if host NOT IN approved_store_list | SUBMIT file_hash to sandbox/TI
- question: Following the installation of a non-sanctioned APK, did the device exhibit anomalous network behavior like a spike in data uploads or connections to new destinations?
  context: This question looks for the malicious activity that occurs after a sideloaded app is installed. It establishes a baseline for each device's normal data upload volume and the diversity of destinations it contacts. A significant deviation from this baseline (e.g., a huge upload spike or a sudden increase in new IP addresses contacted) within 24 hours of a sideloading event strongly suggests the new app is malicious.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek conn.log
  - MDM/UEM logs
  - Managed mobile devices, MDM/UEM servers, network egress points, corporate application store, and network file analysis systems.
  range: last 90 days
  queries:
  - pseudocode: FOR each device | BASELINE daily_upload_volume and destination_ip_entropy | IF non-sanctioned_apk_install_event occurs | MONITOR for next 24 hours | ALERT if (daily_upload > (mean + 3 * std_dev)) OR (destination_ip_entropy spikes)
- question: Can a machine learning classifier generate a risk score for network connections that occur after a sideloaded app installation to determine if the device should be quarantined?
  context: This question proposes a comprehensive risk assessment model to automate a response. Instead of relying on a single indicator, a classifier (like a Random Forest) evaluates multiple features related to the APK and the subsequent network traffic (source reputation, file hash malice score, destination rarity, data volume, etc.). A high cumulative risk score provides a confident, automated trigger to quarantine the device, preventing further damage.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek conn.log
  - MDM/UEM logs
  - Managed mobile devices, MDM/UEM servers, network egress points, corporate application store, and network file analysis systems.
  range: last 90 days
  queries:
  - pseudocode: TRAIN classifier (Random Forest) on features (apk_source_rep, apk_hash_malicious, time_since_install, dest_ip_rarity, total_bytes, etc.) | SCORE connections post-sideload | IF cumulative_risk_score > threshold, TRIGGER device quarantine
- question: Is a managed mobile device connected to a rogue Wi-Fi access point that is spoofing a corporate network name (SSID)?
  context: This question aims to detect 'Evil Twin' attacks, where an adversary sets up a rogue access point with the same name as a legitimate corporate Wi-Fi network. By maintaining an allow-list of approved MAC addresses (BSSIDs) for corporate access points, any connection to a BSSID not on the list is immediately flagged as a potential connection to a malicious network. A change in the default gateway MAC address for a known network is another strong indicator of such an attack.
  answer_sources:
  - MDM/UEM logs
  - Network Access Control (NAC) logs
  - Managed mobile devices, MDM/UEM servers, corporate wireless LAN controllers, and NAC systems.
  range: last 90 days
  queries:
  - pseudocode: DEFINE approved_bssid_list | SEARCH mdm/nac_logs WHERE (ssid IN corporate_ssids AND bssid NOT IN approved_bssid_list) | ALERT | ADDITIONALLY, ALERT if gateway_mac_address changes for a known network
- question: Has a new, anomalous BSSID appeared on the network that is associated with a corporate SSID, particularly one from a consumer-grade manufacturer?
  context: This question uses historical data to spot rogue access points. It profiles the BSSIDs and their manufacturer details (OUI) that are normally seen in the environment. The sudden appearance of a new BSSID broadcasting a corporate SSID is suspicious. It becomes highly suspicious if the manufacturer is a consumer brand (e.g., TP-Link, Netgear) in an environment that exclusively uses enterprise-grade hardware (e.g., Cisco, Aruba), as this is a common tactic for attackers setting up a low-cost rogue AP.
  answer_sources:
  - MDM/UEM logs
  - Network Access Control (NAC) logs
  - Managed mobile devices, MDM/UEM servers, corporate wireless LAN controllers, and NAC systems.
  range: last 90 days
  queries:
  - pseudocode: BUILD historical distribution of (bssid, oui_manufacturer) for each corporate_ssid | ALERT on any new BSSID seen with a corporate SSID | ESCALATE if oui_manufacturer is consumer-grade in an enterprise environment
- question: Can an unsupervised machine learning model identify mobile device Wi-Fi connections that are outliers and may represent connections to rogue access points?
  context: This question applies clustering algorithms (like DBSCAN) to group Wi-Fi connections based on their technical properties (BSSID, signal strength, channel, security type, etc.). Legitimate connections to corporate APs will form dense, stable clusters. A device connecting to a rogue AP will likely have different properties and will therefore not fit into any existing cluster, being flagged as a noise point or outlier, which warrants investigation.
  answer_sources:
  - MDM/UEM logs
  - Network Access Control (NAC) logs
  - Managed mobile devices, MDM/UEM servers, corporate wireless LAN controllers, and NAC systems.
  range: last 90 days
  queries:
  - pseudocode: TRAIN clustering model (DBSCAN) on features (bssid, manufacturer, signal_strength, channel, security_type) | IDENTIFY legitimate connection clusters | FLAG connections identified as noise/outliers as potential rogue AP connections