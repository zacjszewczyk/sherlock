name: T1456: Drive-By Compromise
id: 3c1a9f8b-5e4d-4f2a-8b1c-9d0e1f2a3b4c
description: Has a user's mobile device, connected to the corporate network, been compromised via a watering hole or drive-by compromise? This is investigated by looking for mobile HTTP sessions to suspicious domains immediately following visits to high-reputation sites, analyzing JavaScript files for anomalous characteristics like obfuscation or unusual size, detecting rapid redirect chains from ad networks to newly registered domains, and matching URI paths against known mobile exploit kit signatures.
type: technique
related: TA0027: Initial Access
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any mobile devices on the network connected to a known malicious domain after being referred from a trusted site?
  context: This question aims to detect classic watering hole attacks where a user on a trusted site is redirected to a malicious one. By joining network traffic logs with threat intelligence, we can identify high-confidence indicators of compromise. An alert is triggered specifically for mobile devices to narrow the focus to the scenario described in the playbook.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Threat Intelligence Feed
  - WHOIS Data
  - Corporate Wi-Fi network gateways, VPN concentrators, Cloud Access Security Broker (CASB) egress points, and central DNS resolvers used by mobile devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT http.uid, http.source_ip, http.host, http.referer
      FROM zeek_http_logs
      JOIN threat_intel_domains ON zeek_http_logs.host = threat_intel_domains.domain
      WHERE zeek_http_logs.user_agent CONTAINS ('iOS' OR 'Android')
      AND zeek_http_logs.referer IN (trusted_site_list)
- question: Are mobile devices visiting unusually new domains that are not on the established allowlist?
  context: Attackers frequently use newly registered domains (NRDs) for malicious campaigns. This question helps identify suspicious activity by flagging mobile device connections to domains with a registration age that is anomalously low compared to other recently observed new domains. This is a strong indicator of a potential drive-by compromise, especially when the traffic is referred from a legitimate site.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Threat Intelligence Feed
  - WHOIS Data
  - Corporate Wi-Fi network gateways, VPN concentrators, Cloud Access Security Broker (CASB) egress points, and central DNS resolvers used by mobile devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE threshold_age = PERCENTILE(registration_age, 5) FOR new_domains in last 7 days

      SELECT http.source_ip, http.host, http.referer, whois.registration_age
      FROM zeek_http_logs
      JOIN whois_data ON zeek_http_logs.host = whois_data.domain
      WHERE zeek_http_logs.user_agent CONTAINS ('iOS' OR 'Android')
      AND whois_data.registration_age < threshold_age
      AND http.host NOT IN (allowlist)
- question: Can we use a machine learning model to predict the probability that a web request from a mobile device is malicious based on multiple features?
  context: This question moves beyond single indicators to a more holistic, probabilistic approach. By training a model on various features like domain age, entropy, TLD mismatches, and ASN reputation, we can identify suspicious requests that might not trigger simpler, rule-based alerts. A high probability score from the model provides a strong signal for an analyst to investigate a potential drive-by compromise.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Threat Intelligence Feed
  - WHOIS Data
  - Corporate Wi-Fi network gateways, VPN concentrators, Cloud Access Security Broker (CASB) egress points, and central DNS resolvers used by mobile devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT request_id, source_ip, host, referer, malicious_probability_score
      FROM mobile_web_requests_scored_by_ml_model
      WHERE malicious_probability_score > 0.85
- question: Have any JavaScript files downloaded to mobile devices matched YARA rules for known mobile exploit frameworks or obfuscation techniques?
  context: This question focuses on inspecting the content of files delivered to mobile devices. Malicious JavaScript is a primary vector for drive-by compromises. By extracting these files and scanning them with YARA rules, we can detect specific, known threats and common obfuscation patterns used to hide malicious code, providing a high-fidelity alert for an active exploitation attempt.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek weird.log
  - Zeek signatures.log
  - Network egress points with Zeek sensors performing file extraction; Web Application Firewalls (WAFs) with file inspection capabilities; Mobile devices with MDM agents capable of network inspection.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT file_uid, source_ip, yara_rule_match, http_host
      FROM yara_scan_results
      JOIN zeek_files_log ON yara_scan_results.file_uid = zeek_files_log.fuid
      WHERE yara_scan_results.match = true
      AND zeek_files_log.mime_type CONTAINS 'javascript'
- question: Are mobile devices downloading JavaScript files that are anomalously large or have unusually high entropy compared to the baseline for the source domain?
  context: This question seeks to identify malicious JavaScript through behavioral anomaly detection. Legitimate websites tend to serve JS files with consistent characteristics. A file that is significantly larger or more complex (higher entropy, indicating obfuscation) than what is typical for a given domain is suspicious. Correlating this with other Zeek notices for the same session increases the confidence that this is part of an attack.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek weird.log
  - Zeek signatures.log
  - Network egress points with Zeek sensors performing file extraction; Web Application Firewalls (WAFs) with file inspection capabilities; Mobile devices with MDM agents capable of network inspection.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE baseline = AVG(file_size), STDDEV(file_size), AVG(entropy), STDDEV(entropy)
      GROUP BY host FOR JS files in last 30 days

      SELECT file.fuid, http.host, file.size, file.entropy
      FROM zeek_files_log AS file
      JOIN zeek_http_log AS http ON file.session_uid = http.uid
      WHERE file.size > (baseline.avg_size + 2 * baseline.stddev_size)
      AND file.entropy > (baseline.avg_entropy + 2 * baseline.stddev_entropy)
- question: Can we identify highly anomalous JavaScript files by finding outliers in a multi-dimensional feature space using a clustering algorithm?
  context: This question applies unsupervised machine learning to find the 'unknown unknowns'. Instead of looking for deviations on single metrics, a clustering algorithm like DBSCAN can find files that are outliers across multiple dimensions simultaneously (size, entropy, function calls, string length). These statistical 'oddballs' are often malicious and warrant manual investigation, as they don't fit any normal cluster of activity.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek weird.log
  - Zeek signatures.log
  - Network egress points with Zeek sensors performing file extraction; Web Application Firewalls (WAFs) with file inspection capabilities; Mobile devices with MDM agents capable of network inspection.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT file_id, source_host, cluster_id
      FROM dbscan_js_file_analysis_results
      WHERE cluster_id = 'noise'
- question: Are mobile devices experiencing rapid, multi-hop redirect chains originating from ad networks and landing on malicious or mismatched domains?
  context: This question targets 'malvertising', a common vector for drive-by compromises. Attackers abuse ad networks to initiate a series of fast redirects that ultimately lead the user to an exploit page. Detecting these long, rapid chains, especially when they land on a known-bad domain or exhibit SSL certificate mismatches, is a strong indicator of a malvertising attack in progress.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxy Logs
  - Zeek ssl.log
  - Network egress points instrumented with Zeek sensors, forward proxies, DNS resolvers, and upstream web proxies.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      GROUP http_logs by session_uid
      FOR EACH session:
        IF (session.user_agent CONTAINS 'mobile') AND
           (session.initial_referer IN ad_network_list) AND
           (COUNT(hops) >= 3 WITHIN 5 seconds) AND
           ((session.final_host IN threat_intel) OR (session.ssl_servername != session.final_host))
        THEN ALERT
- question: Has any mobile user experienced a redirect chain that is anomalously long compared to their own normal browsing behavior?
  context: This question personalizes anomaly detection. Instead of a global threshold, it compares a user's current activity to their own past behavior. A sudden, unusually long redirect chain for a specific user is a significant deviation that could signal a targeted attack or compromise. The traversal of multiple ASNs adds weight, as it often indicates an attempt to obfuscate the traffic's origin and destination.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxy Logs
  - Zeek ssl.log
  - Network egress points instrumented with Zeek sensors, forward proxies, DNS resolvers, and upstream web proxies.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE user_baseline = AVG(redirect_length), STDDEV(redirect_length)
      GROUP BY user FOR last 14 days

      FOR EACH new_redirect_chain:
        IF (chain.length > (user_baseline.avg + 3 * user_baseline.stddev)) OR
           (chain.length > 5)
        THEN ALERT
        PRIORITIZE IF COUNT(unique chain.asns) > 2
- question: Can a deep learning model (Seq2Seq autoencoder) detect anomalous redirect chains that do not conform to normal browsing patterns?
  context: This question proposes a sophisticated, state-of-the-art detection method. A Seq2Seq autoencoder learns the 'normal' structure and timing of redirect chains. When it encounters a malicious chain (e.g., one with unusual timing, strange TLD sequences, or abnormal ASN hops), it will fail to reconstruct it accurately, resulting in a high 'reconstruction error'. This error is a powerful signal of a highly anomalous and potentially malicious event.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxy Logs
  - Zeek ssl.log
  - Network egress points instrumented with Zeek sensors, forward proxies, DNS resolvers, and upstream web proxies.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT session_id, redirect_chain, reconstruction_error_score
      FROM seq2seq_redirect_analysis_results
      WHERE reconstruction_error_score > anomaly_threshold
- question: Have any mobile devices requested a URL whose path or query string matches a known signature for a mobile exploit kit?
  context: This is a direct, signature-based detection question. Exploit kits often use specific, recognizable patterns in the URLs that deliver the payload. By matching network traffic against a regularly updated list of these patterns (regexes), we can detect known attacks with high confidence. The absence of a 'Referer' header is a classic indicator of direct, non-standard access, increasing the likelihood of malicious activity.
  answer_sources:
  - Zeek http.log
  - Zeek signatures.log
  - Threat Intelligence Feed
  - Network egress points with Zeek sensors; web proxies; and MDM/UEM management gateways.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT http.source_ip, http.host, http.uri, http.referer
      FROM zeek_http_logs
      WHERE http.uri MATCHES (exploit_kit_regex_list)
      AND http.user_agent CONTAINS ('iOS' OR 'Android')
      PRIORITIZE IF http.referer IS NULL
- question: Are mobile devices making requests to URLs that are structurally anomalous for the destination domain?
  context: This question seeks to find malicious URLs by baselining the normal structure of URLs for each domain. A request with an unusually deep path, an abnormal number of parameters, or a high-entropy query string deviates from the established norm and is therefore suspicious. This technique can catch novel or obfuscated exploit kit URLs that may not match existing signatures, especially on newly observed domains.
  answer_sources:
  - Zeek http.log
  - Zeek signatures.log
  - Threat Intelligence Feed
  - Network egress points with Zeek sensors; web proxies; and MDM/UEM management gateways.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE domain_baseline = AVG(path_depth), AVG(param_count), AVG(query_entropy)
      GROUP BY domain for last 30 days

      FOR EACH new_request:
        CALCULATE anomaly_score = SUM(STDDEVs from baseline)
        IF anomaly_score > 5.0 THEN ALERT
- question: Can a supervised machine learning model (Random Forest) identify malicious URLs requested by mobile devices based on their structural and lexical features?
  context: This question leverages supervised machine learning for high-accuracy detection. By training a Random Forest model on a large dataset of known good and bad URLs, the model learns the complex interplay of features that indicate maliciousness. This approach is more robust than single-indicator rules and can generalize to detect new, previously unseen malicious URLs that share characteristics with those in the training data.
  answer_sources:
  - Zeek http.log
  - Zeek signatures.log
  - Threat Intelligence Feed
  - Network egress points with Zeek sensors; web proxies; and MDM/UEM management gateways.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT request_id, source_ip, url, malicious_url_score
      FROM url_classifier_results
      WHERE malicious_url_score > 0.90
      AND user_agent CONTAINS ('mobile')