name: "T1437.001: Web Protocols"
id: "b4c2d1e0-f3a9-4b8d-9c6a-7e5f1d0b9c8a"
description: >
  This playbook helps investigate whether an adversary is using web protocols for command and control on corporate mobile devices. It focuses on identifying anomalous web traffic and malicious TLS fingerprints. Anomalous traffic may include periodic 'heartbeat' connections, requests to low-reputation domains, rare User-Agent strings, high-entropy URIs, asymmetric data transfer ratios, or unusual connection durations. Malicious TLS fingerprints can be identified by matching JA3/JA3S hashes against threat intelligence, detecting statistically rare fingerprints, or observing connections to servers with suspicious certificates (e.g., self-signed or newly issued).
type: "technique"
related: 
  - "TA0037: Command And Control"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are mobile devices communicating with known command and control servers over web protocols?"
    context: >
      This question aims to detect the most direct evidence of C2 activity by cross-referencing network traffic destinations (both domain names and IP addresses) from mobile devices against a curated list of known malicious infrastructure. A positive match provides a high-confidence indicator of compromise, allowing for immediate incident response.
    answer_sources:
      - "Zeek conn.log, Zeek http.log, Zeek dns.log, Zeek ssl.log from Corporate Wi-Fi network egress points, VPN concentrators, Mobile Device Management (MDM) gateways, forward/reverse proxies, and central DNS resolvers that process traffic from managed mobile device subnets or enrolled devices."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH dns.log, http.log WHERE source_ip IN mobile_device_subnets | JOIN destination_ip, destination_fqdn WITH threat_intelligence_feed ON ip, fqdn | IF match FOUND, ALERT"
  - question: "Is any mobile device exhibiting statistical anomalies in its web traffic, such as beaconing, asymmetric data transfer, or high-entropy requests?"
    context: >
      This question seeks to identify covert C2 channels that don't rely on known malicious domains. Adversaries often use techniques that create subtle statistical deviations from normal traffic. This includes periodic 'heartbeat' connections (beaconing), sending small commands and receiving large payloads (or vice versa), and obfuscating data in URI paths. Detecting multiple such anomalies in a single session strengthens the likelihood of malicious activity.
    answer_sources:
      - "Zeek conn.log, Zeek http.log, Zeek dns.log, Zeek ssl.log from Corporate Wi-Fi network egress points, VPN concentrators, Mobile Device Management (MDM) gateways, forward/reverse proxies, and central DNS resolvers that process traffic from managed mobile device subnets or enrolled devices."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH conn.log, http.log OVER 24h_window FOR_EACH source_ip | CALCULATE stddev(inter_arrival_time) per destination, data_ratio(sent/received), shannon_entropy(uri) | IF stddev < 1.5 OR data_ratio > 10.0 OR data_ratio < 0.1 OR entropy > 98th_percentile, FLAG | IF multiple flags for a session, ALERT"
  - question: "Can an unsupervised machine learning model identify previously unseen or novel C2 patterns in mobile device network traffic?"
    context: >
      This question leverages machine learning to move beyond predefined rules and thresholds. An unsupervised model like an Isolation Forest can learn the characteristics of 'normal' traffic and flag any session that deviates significantly, without prior knowledge of the attack. This is powerful for detecting zero-day exploits or custom C2 frameworks. Supplementing this with time-series forecasting on data volume adds another dimension for detecting anomalous data exfiltration or C2 communication.
    answer_sources:
      - "Zeek conn.log, Zeek http.log, Zeek dns.log, Zeek ssl.log from Corporate Wi-Fi network egress points, VPN concentrators, Mobile Device Management (MDM) gateways, forward/reverse proxies, and central DNS resolvers that process traffic from managed mobile device subnets or enrolled devices."
    range: "last 90 days"
    queries:
      - "Pseudocode: TRAIN IsolationForest model ON baseline_traffic_features(duration, bytes, ratio, uri_length, etc.) | APPLY model to new_sessions to get anomaly_score | TRAIN ARIMA model on outbound_data_volume per device | IF anomaly_score > threshold OR observed_volume > predicted_confidence_interval, ALERT"
  - question: "Are any mobile devices establishing TLS sessions that use fingerprints (JA3/JA3S) associated with known malware or malicious tools?"
    context: >
      This question uses TLS/SSL client and server fingerprints (JA3 and JA3S) as high-fidelity indicators of compromise. Specific malware families or hacking tools often have unique, hardcoded TLS implementations, resulting in a consistent fingerprint. Matching these fingerprints against a threat intelligence feed provides a very reliable way to detect the presence of specific malicious tools on the network, even if the destination IP or domain is unknown.
    answer_sources:
      - "Zeek ssl.log, Zeek conn.log, Zeek x509.log from Network sensors at key chokepoints with visibility into traffic from managed mobile devices, including corporate Wi-Fi egress points, VPN concentrators, Mobile Device Management (MDM) gateways, and forward proxies capable of inspecting TLS handshakes to generate Zeek log data."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH ssl.log | JOIN ja3, ja3s WITH threat_intel_feed ON fingerprint | IF match FOUND, ALERT"
  - question: "Are mobile devices using rare or uncommon TLS client fingerprints (JA3) to connect to servers with suspicious certificates?"
    context: >
      This question aims to find unknown or custom malicious clients by focusing on statistical rarity. While legitimate applications have common JA3 hashes, custom malware will appear as a rare hash. This method flags these rare connections for further scrutiny. The suspicion is increased if the server at the other end is using a self-signed or very new certificate, as these are common tactics for adversary-controlled C2 infrastructure.
    answer_sources:
      - "Zeek ssl.log, Zeek conn.log, Zeek x509.log from Network sensors at key chokepoints with visibility into traffic from managed mobile devices, including corporate Wi-Fi egress points, VPN concentrators, Mobile Device Management (MDM) gateways, and forward proxies capable of inspecting TLS handshakes to generate Zeek log data."
    range: "last 90 days"
    queries:
      - "Pseudocode: CALCULATE frequency of all ja3 hashes over 30d | FOR new_session FROM mobile_device | IF session.ja3_frequency < 1st_percentile AND session.ja3 NOT IN allowlist | GET certificate_info for session.uid from x509.log | IF certificate is self_signed OR cert_age < 30d, ALERT"
  - question: "Can a supervised machine learning model be trained to proactively classify TLS sessions from mobile devices as malicious or benign?"
    context: >
      This question proposes a proactive, predictive approach to threat detection. By training a classifier on the granular details of the TLS handshake (like cipher suites and extensions), the model can learn the subtle differences between legitimate application traffic and malicious C2 communications. Once deployed, it can score new, unclassified sessions in real-time, enabling the detection of novel threats that share characteristics with known malware, even without an exact fingerprint match.
    answer_sources:
      - "Zeek ssl.log, Zeek conn.log, Zeek x509.log from Network sensors at key chokepoints with visibility into traffic from managed mobile devices, including corporate Wi-Fi egress points, VPN concentrators, Mobile Device Management (MDM) gateways, and forward proxies capable of inspecting TLS handshakes to generate Zeek log data."
    range: "last 90 days"
    queries:
      - "Pseudocode: TRAIN RandomForest model ON labeled_dataset(features from TLS Client Hello) | DEPLOY model | FOR new_unclassified_session FROM mobile_device | CALCULATE malicious_probability_score | IF score > 0.90, ALERT"