name: T1471: Data Encrypted for Impact
id: 6e9b8b32-3a45-4b1c-9c7f-9d3f5e1a0b8c
description: Investigates whether an adversary is encrypting data on corporate mobile devices for impact. This is detected by monitoring for unusually high rates of file write or rename operations, the creation of files matching ransom note patterns, associated network connections to known malicious infrastructure, and whether the encrypting application is unmanaged, sideloaded, or has rare permissions.
type: technique
related:
- TA0034: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a single process on a mobile device rapidly renamed a large number of user files to a new, uniform extension?
  context: This question aims to detect the classic ransomware behavior of systematically encrypting and renaming files. A high volume of rename events from one process in a short time, especially when changing common file types to a single new, often suspicious, extension, is a strong indicator of an encryption-for-impact attack.
  answer_sources:
  - MobileEDR.FileEvents
  - MobileEDR.ProcessEvents
  - MDM.ApplicationLogs
  - User data directories on managed mobile devices, including Android standard directories (e.g., /storage/emulated/0/DCIM, /storage/emulated/0/Documents) and iOS App Sandbox container directories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH MobileEDR.FileEvents
      WHERE event_type = "File Rename"
      GROUP BY device_id, process_id, new_file_extension
      AGGREGATE count(event) over 60 seconds
      WHERE count(event) > 20
      AND original_file_extension IN ('.jpg', '.pdf', '.mov', ...)
- question: Is a mobile application generating a statistically unusual number of file write events compared to its own history or its peer group?
  context: This question looks for anomalous file I/O activity that deviates from established norms. Ransomware, by its nature, generates a burst of file write activity as it encrypts data. Comparing this activity against the application's own historical baseline and the baseline of similar applications helps identify significant outliers that could indicate malicious encryption.
  answer_sources:
  - MobileEDR.FileEvents
  - MobileEDR.ProcessEvents
  - MDM.ApplicationLogs
  - User data directories on managed mobile devices, including Android standard directories (e.g., /storage/emulated/0/DCIM, /storage/emulated/0/Documents) and iOS App Sandbox container directories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Historical Baseline Calculation
      CALCULATE 30-day rolling average of file_writes_per_minute for each application.
      CALCULATE 99th percentile threshold for each application.

      // Real-time Check
      SEARCH MobileEDR.FileEvents
      WHERE event_type = "File Write"
      GROUP BY application_name
      AGGREGATE count(event) over 1 minute
      WHERE count(event) > 99th_percentile_threshold
- question: Is an application exhibiting a sustained rate of file write/rename operations that a time-series model considers anomalous?
  context: This question uses a more sophisticated machine learning approach to detect abnormal file activity. A time-series model can learn the normal 'rhythm' or seasonality of an application's file operations. A sustained deviation from this predicted rhythm, exceeding the model's confidence bounds, strongly suggests an unusual and potentially malicious process like data encryption is underway.
  answer_sources:
  - MobileEDR.FileEvents
  - MobileEDR.ProcessEvents
  - MDM.ApplicationLogs
  - User data directories on managed mobile devices, including Android standard directories (e.g., /storage/emulated/0/DCIM, /storage/emulated/0/Documents) and iOS App Sandbox container directories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training
      TRAIN time-series model on historical MobileEDR.FileEvents (writes/renames) for each app.

      // Real-time Prediction & Alerting
      FOR each application:
        PREDICT expected_io_rate and upper_confidence_bound for current minute.
        GET actual_io_rate from MobileEDR.FileEvents.
        IF actual_io_rate > upper_confidence_bound for 3 consecutive minutes:
          ALERT "Anomalous sustained I/O activity detected."
- question: Has a process created a new text or HTML file with a name commonly associated with ransom notes?
  context: This is a high-confidence indicator. Adversaries deploying ransomware typically leave behind 'ransom notes' to inform the victim of the attack and provide payment instructions. This question hunts for the creation of files with names like 'readme.txt' or 'decrypt_files.html', which are classic signs of a ransomware attack.
  answer_sources:
  - MobileEDR.FileEvents
  - DLP.FileScanContent
  - Root of user-accessible storage on mobile devices (e.g., /sdcard/, /storage/emulated/0/), directories containing recently modified user data, and application-specific data directories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH MobileEDR.FileEvents
      WHERE event_type = "File Creation"
      AND file_name MATCHES REGEX `/(readme|recover|decrypt|help|restore).*\\.(txt|html)$/i`
      ALERT "Potential ransom note created."
- question: After detecting a potential ransom note file, did the same process create multiple copies of it in different directories?
  context: This question helps confirm the malicious nature of a suspected ransom note. Ransomware often drops a copy of the note in every directory it encrypts to ensure the victim finds it. Observing a single process 'fanning out' and creating the same note file in multiple locations increases the confidence that a widespread encryption event has occurred.
  answer_sources:
  - MobileEDR.FileEvents
  - DLP.FileScanContent
  - Root of user-accessible storage on mobile devices (e.g., /sdcard/, /storage/emulated/0/), directories containing recently modified user data, and application-specific data directories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON ALERT from "Potential ransom note created":
        GET process_id, file_name, device_id from alert.
        SEARCH MobileEDR.FileEvents within last 5 minutes
        WHERE process_id = alert.process_id
        AND file_name = alert.file_name
        COUNT unique(directory_path)
        IF unique_count > 3:
          ESCALATE alert priority to "Critical".
- question: Does the content of a newly created text or HTML file contain language and keywords characteristic of a ransom note?
  context: This question moves beyond filenames to analyze the actual content of suspicious files. By using a text classification model trained on known ransom notes, it can identify demands for cryptocurrency, threats, and instructions for data recovery with high accuracy. A positive classification provides extremely strong evidence of an attack and can justify immediate, automated defensive actions like device quarantine.
  answer_sources:
  - MobileEDR.FileEvents
  - DLP.FileScanContent
  - Root of user-accessible storage on mobile devices (e.g., /sdcard/, /storage/emulated/0/), directories containing recently modified user data, and application-specific data directories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON event_type = "File Creation" AND file_extension IN ('.txt', '.html'):
        GET file_content from DLP.FileScanContent.
        PASS file_content to text_classification_model.
        IF model_prediction = "Ransomware Note" AND confidence > 0.95:
          TRIGGER automated_response("quarantine_device", device_id).
- question: Shortly after suspected file encryption activity, did the device connect to a known ransomware command-and-control (C2) server?
  context: This question correlates file system indicators with network indicators. After encrypting files, ransomware often 'calls home' to a C2 server to exfiltrate encryption keys, report a successful infection, or await further commands. Correlating a high I/O alert with a connection to an IP or domain on a ransomware threat feed provides a powerful link confirming the attack.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - MobileEDR.NetworkEvents
  - Corporate Wi-Fi access points, VPN concentrators, and cloud-based secure web gateways (SWG) that inspect mobile device traffic.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON "File I/O Alert":
        GET device_id from alert.
        SEARCH (Zeek conn.log OR MobileEDR.NetworkEvents) within 5 minutes of alert
        WHERE source_device_id = alert.device_id
        AND destination_ip IN (Ransomware_C2_Threat_Feed)
        ALERT "Post-encryption C2 communication detected."
- question: Following a file encryption alert, did the device make DNS queries for algorithmically generated (DGA) or newly registered domains (NRD)?
  context: Adversaries use DGA and NRDs to create disposable, hard-to-block C2 infrastructure. This question looks for these patterns in DNS traffic immediately following a file encryption event. High-entropy (random-looking) domain names are a hallmark of DGA, while NRDs are frequently used in short-lived attack campaigns. Detecting either of these strengthens the case that the file activity was malicious.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - MobileEDR.NetworkEvents
  - Corporate Wi-Fi access points, VPN concentrators, and cloud-based secure web gateways (SWG) that inspect mobile device traffic.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON "File I/O Alert":
        GET device_id from alert.
        SEARCH Zeek dns.log within 5 minutes of alert
        WHERE source_device_id = alert.device_id
        FOR each queried_domain:
          CALCULATE entropy(queried_domain).
          GET registration_date(queried_domain).
          IF entropy > 3.5 OR registration_date < 30 days ago:
            INCREMENT device_risk_score.
            ALERT "Suspicious DNS query post-encryption."
- question: Did the device make any network connections that are anomalous compared to a baseline of normal mobile traffic, following a file encryption alert?
  context: This question uses machine learning to find unusual network behavior that might not be caught by signature-based rules. By training a model on what 'normal' mobile traffic looks like (e.g., typical protocols, ports, data volumes, JA3 hashes), it can flag any connection that deviates from this baseline. When an anomalous connection occurs right after a file encryption alert, it provides strong contextual evidence to escalate the incident.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - MobileEDR.NetworkEvents
  - Corporate Wi-Fi access points, VPN concentrators, and cloud-based secure web gateways (SWG) that inspect mobile device traffic.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training
      TRAIN anomaly detection model on benign Zeek conn.log/ssl.log features.

      // Real-time Analysis
      ON "File I/O Alert":
        GET device_id from alert.
        MONITOR network connections from device_id.
        FOR each connection:
          SCORE connection with anomaly model.
          IF score is "anomaly":
            ESCALATE "File I/O Alert".
- question: Was the application responsible for the file encryption activity sideloaded, unmanaged by MDM, or from an unofficial source?
  context: This question enriches a file encryption alert with crucial application context from the MDM. Sideloaded or unmanaged apps bypass the security vetting of official app stores and corporate policies, making them a common vector for malware. Identifying the source process as unmanaged or sideloaded significantly increases the likelihood that the activity is malicious and warrants immediate escalation.
  answer_sources:
  - MDM.AppInventoryLogs
  - MDM.AppPermissionLogs
  - MDM.ComplianceStatusLogs
  - Mobile Device Management (MDM) platform's application inventory database and policy compliance logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON "File Encryption Alert":
        GET device_id, process_name from alert.
        QUERY MDM.AppInventoryLogs for process_name on device_id.
        IF InstallationSource = 'Sideloaded' OR IsManaged = 'false':
          ESCALATE alert severity.
- question: Does the application responsible for file encryption have a statistically rare combination of permissions compared to all other applications in the fleet?
  context: This question hunts for outliers in application permissions. Malware often requests an unusual or powerful combination of permissions to carry out its objectives. By baselining the permission sets across the entire mobile fleet, we can identify apps that are statistical rarities. If an app causing a file encryption alert also has a permission set seen on less than 1% of devices, it is highly suspicious.
  answer_sources:
  - MDM.AppInventoryLogs
  - MDM.AppPermissionLogs
  - MDM.ComplianceStatusLogs
  - Mobile Device Management (MDM) platform's application inventory database and policy compliance logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Periodic Calculation
      CALCULATE prevalence of each permission_set combination from MDM.AppPermissionLogs.
      STORE prevalence data.

      // Alert Enrichment
      ON "File Encryption Alert":
        GET application from alert.
        LOOKUP permission_set for application.
        LOOKUP prevalence of permission_set.
        IF prevalence < 1st_percentile:
          ENRICH alert with "Statistically rare permissions found".
- question: Does the application responsible for file encryption belong to a cluster of applications with anomalous metadata (permissions, source, developer)?
  context: This question uses unsupervised machine learning to group applications based on their MDM metadata. This can automatically surface 'anomalous application groups'—small clusters of apps that don't fit in with the larger, more common groupings. These clusters might represent different families of malware or PUPs. If an app triggering a file encryption alert is found within one of these anomalous clusters, it provides strong, data-driven evidence to escalate the incident.
  answer_sources:
  - MDM.AppInventoryLogs
  - MDM.AppPermissionLogs
  - MDM.ComplianceStatusLogs
  - Mobile Device Management (MDM) platform's application inventory database and policy compliance logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training
      TRAIN clustering model on MDM application metadata.
      IDENTIFY small clusters as "anomalous".

      // Real-time Check
      ON "File Encryption Alert":
        GET application from alert.
        DETERMINE which cluster the application belongs to.
        IF cluster is "anomalous":
          ESCALATE alert.