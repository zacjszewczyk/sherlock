name: "T1616: Call Control"
id: "f8b8d2a0-6c1f-4e3a-8b9d-5a6c7d8e9f0a"
description: "This playbook helps investigate whether an adversary is leveraging call control capabilities on mobile devices for malicious purposes. This includes disrupting communications by blocking or redirecting calls, performing audio surveillance by programmatically answering or hiding calls, or using automated calling patterns as a command and control (C2) channel. The investigation focuses on analyzing application permissions, real-time call events in system logs, and correlating carrier-level call detail records (CDRs) with on-device logs and network traffic to detect anomalies and signs of compromise."
type: "technique"
related:
  - "TA0034: Impact"
  - "TA0035: Collection"
  - "TA0037: Command And Control"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are any installed applications, not on our approved allowlist, possessing high-risk call control permissions like `PROCESS_OUTGOING_CALLS` or `ANSWER_PHONE_CALLS`?"
    context: "This question aims to proactively identify potentially malicious applications that have been granted permissions to intercept or manage phone calls. By comparing installed applications against a curated allowlist of known-good communication apps, we can quickly surface unauthorized software capable of disrupting telephony services, such as blocking or redirecting calls."
    answer_sources:
      - "UEM application inventory logs"
      - "Android application manifest file"
      - "Unified Endpoint Management (UEM) platform"
      - "Mobile Application Management (MAM) server"
      - "Application vetting and sandboxing environment."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "GET all_apps from UEM; DEFINE allowlist; FOR app in all_apps: IF app.package_name NOT IN allowlist AND ('PROCESS_OUTGOING_CALLS' IN app.permissions OR 'ANSWER_PHONE_CALLS' IN app.permissions): ALERT on app;"
  - question: "Are any applications exhibiting an anomalously high permission risk score for their category, specifically related to call control permissions?"
    context: "This question helps to identify outlier applications whose permission sets are unusual compared to their peers. By assigning weights to high-risk permissions and establishing a baseline risk profile for different app categories (e.g., 'Games', 'Productivity'), we can detect applications that request a dangerous combination or number of permissions, which may indicate malicious intent beyond their stated purpose."
    answer_sources:
      - "UEM application inventory logs"
      - "Android application manifest file"
      - "Unified Endpoint Management (UEM) platform"
      - "Mobile Application Management (MAM) server"
      - "Application vetting and sandboxing environment."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "DEFINE weights for permissions; FOR each app_category: CALCULATE 98th percentile score_threshold; FOR each app: CALCULATE app_score; IF app_score > score_threshold for app.category: FLAG for review;"
  - question: "Has our machine learning model classified any newly installed applications as potentially malicious based on their manifest features, including call-related permissions?"
    context: "This question leverages a predictive model to automate the detection of malicious applications. The model is trained to recognize patterns in application manifests (permissions, services, receivers) that are characteristic of malware. This provides a scalable way to flag suspicious new installations that might use call control for malicious purposes, even if they are not caught by signature-based methods."
    answer_sources:
      - "UEM application inventory logs"
      - "Android application manifest file"
      - "Unified Endpoint Management (UEM) platform"
      - "Mobile Application Management (MAM) server"
      - "Application vetting and sandboxing environment."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each new_app: EXTRACT features (permissions, services, etc.); PREDICT class with ML_model; IF prediction is 'malicious' AND confidence > 0.85: FLAG for review;"
  - question: "Are we observing correlation events where a non-system, third-party application is programmatically blocking an outgoing call immediately after it is initiated?"
    context: "This question targets the direct observation of call blocking in real-time. An `abortBroadcast()` call immediately following a `NEW_OUTGOING_CALL` intent is a strong indicator that an application is intercepting and preventing a user's outgoing call. Correlating these events in a SIEM helps detect active, in-progress call disruption."
    answer_sources:
      - "Android Logcat"
      - "Centralized log aggregator (SIEM) collecting real-time Logcat streams from managed devices"
      - "Endpoint Detection and Response (EDR) for Mobile platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "WHEN event 'ACTION_NEW_OUTGOING_CALL' from device_id FOLLOWED WITHIN 1s by event 'abortBroadcast' from same device_id: IF source_package of abort NOT IN allowlist: ALERT;"
  - question: "Do any devices show a statistically significant increase in the ratio of blocked outgoing calls compared to their own historical baseline or the fleet-wide average?"
    context: "This question moves from single-event detection to behavioral anomaly detection. By tracking the ratio of blocked calls to initiated calls over time, we can identify devices that begin to exhibit an abnormal pattern of call interference. This is useful for detecting low-and-slow attacks or compromised devices that might not trigger a single high-severity alert."
    answer_sources:
      - "Android Logcat"
      - "Centralized log aggregator (SIEM) collecting real-time Logcat streams from managed devices"
      - "Endpoint Detection and Response (EDR) for Mobile platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each device: CALCULATE daily_ratio = aborts / new_calls; CALCULATE 30-day avg and std_dev of ratio; IF daily_ratio > (avg + 3*std_dev): ALERT;"
  - question: "Has a time-series model detected a fleet-wide, statistically significant spike in call-blocking events that deviates from normal daily and weekly patterns?"
    context: "This question provides a macro-level view to detect coordinated or widespread campaigns. A sudden, anomalous increase in `abortBroadcast()` events across the entire organization, as identified by a seasonality-aware model, could signal a large-scale attack or the deployment of a malicious application to many devices simultaneously."
    answer_sources:
      - "Android Logcat"
      - "Centralized log aggregator (SIEM) collecting real-time Logcat streams from managed devices"
      - "Endpoint Detection and Response (EDR) for Mobile platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "APPLY S-H-ESD model to fleet-wide 'abortBroadcast' event count per minute; IF anomaly detected: ALERT and identify top contributing devices/packages;"
  - question: "Have any newly installed applications, not on our exception list, been detected with a high-risk combination of permissions indicative of spyware (e.g., call, record audio, and access call logs)?"
    context: "This question focuses on identifying potential spyware at the point of installation. The specific combination of permissions to make/answer calls, record audio, and read/write call logs is highly indicative of an application designed for audio surveillance. Alerting on this combination allows for immediate response before the application can be used."
    answer_sources:
      - "UEM application inventory logs"
      - "Android application manifest file"
      - "Unified Endpoint Management (UEM) platform"
      - "Mobile Application Management (MAM) server"
      - "Data warehouse containing application metadata and allowlists."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "ON app_install: IF app NOT IN exception_list AND app.permissions contain (('CALL_PHONE' or 'ANSWER_PHONE_CALLS') and 'RECORD_AUDIO' and ('WRITE_CALL_LOG' or 'READ_CALL_LOG')): TRIGGER high-priority alert;"
  - question: "Are any applications flagged for having an unusually high 'Spyware Potential Score' based on a weighted sum of risky permissions?"
    context: "This question provides a quantitative method for risk-ranking applications based on their potential for surveillance. By scoring and thresholding, we can surface applications that accumulate a dangerous set of permissions, even if they don't match one specific rule. This helps prioritize review efforts on the most suspicious applications."
    answer_sources:
      - "UEM application inventory logs"
      - "Android application manifest file"
      - "Unified Endpoint Management (UEM) platform"
      - "Mobile Application Management (MAM) server"
      - "Data warehouse containing application metadata and allowlists."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "DEFINE weights for spyware permissions; FOR each app: CALCULATE spyware_score; IF spyware_score > 20 OR spyware_score > 99th_percentile for app.category: ALERT;"
  - question: "Has a clustering algorithm identified any small, unusual groups of applications that share a rare and potentially malicious combination of surveillance-related permissions?"
    context: "This question uses unsupervised machine learning to find novel threats. By clustering applications based on their permission sets, we can discover new or unknown spyware that shares a unique 'permission fingerprint' with a few other malicious apps, separating them from the large clusters of common, benign applications."
    answer_sources:
      - "UEM application inventory logs"
      - "Android application manifest file"
      - "Unified Endpoint Management (UEM) platform"
      - "Mobile Application Management (MAM) server"
      - "Data warehouse containing application metadata and allowlists."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "VECTORIZE app permissions; APPLY DBSCAN algorithm; INVESTIGATE small, dense clusters not associated with known app types;"
  - question: "Are there any discrepancies where a call record exists in the carrier's logs but is missing from the corresponding on-device call log?"
    context: "This question aims to detect if an adversary is hiding their tracks by deleting specific entries from the device's call log. A mismatch between the official carrier record (ground truth) and the local device log is a strong indicator of evidence tampering, likely to conceal malicious call activity like surveillance or C2."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "UEM-retrieved device call logs"
      - "Data warehouse or SIEM containing both ingested telecom provider CDR feeds and UEM-polled device call logs"
      - "Telecom Expense Management (TEM) platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "JOIN CDR_logs with Device_logs on device, timestamp, number; ALERT on any CDR_log entry with no matching Device_log entry;"
  - question: "Does any device exhibit a low Jaccard similarity score between its carrier call records and its on-device logs, indicating a significant mismatch in call history?"
    context: "This question quantifies the degree of mismatch between the two call log sources. The Jaccard similarity provides a single metric to gauge how similar the two sets of records are. A sudden drop in this score for a device indicates that a significant number of calls are being hidden or deleted, warranting an investigation."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "UEM-retrieved device call logs"
      - "Data warehouse or SIEM containing both ingested telecom provider CDR feeds and UEM-polled device call logs"
      - "Telecom Expense Management (TEM) platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each device: CREATE setA from CDRs, setB from device_logs; CALCULATE jaccard_score = |A intersect B| / |A union B|; IF jaccard_score < 0.95 OR jaccard_score < fleet_baseline: ALERT;"
  - question: "Has a regression model predicted a statistically significant and anomalous deficit in the number of on-device call log entries for any user compared to their expected count based on carrier records?"
    context: "This question uses predictive analytics to find subtle log deletion. A regression model can learn a user's normal calling behavior and predict how many device log entries *should* exist based on their carrier activity. When the actual number is significantly lower, it provides a statistically-backed alert that log manipulation is likely occurring."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "UEM-retrieved device call logs"
      - "Data warehouse or SIEM containing both ingested telecom provider CDR feeds and UEM-polled device call logs"
      - "Telecom Expense Management (TEM) platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "TRAIN regression model to predict device_log_count from CDR_count, user_dept, etc.; FOR each user: PREDICT expected_log_count; IF actual_log_count is anomalously low compared to prediction: ALERT;"
  - question: "Is any device making an excessive number of very short-duration calls to the same number within a short time frame, indicative of C2 beaconing?"
    context: "This question looks for a classic C2 beaconing pattern adapted for telephony. Repeated, brief, automated calls to a single destination are not typical user behavior and can be used by malware to signal its presence, check for tasks, or exfiltrate small amounts of data."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "Telecom provider data feeds ingested into a central SIEM or data lake"
      - "Telecom Expense Management (TEM) platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "WHEN device makes > 5 calls to same_number within 1 hour AND call_duration < 5s AND same_number NOT IN allowlist: ALERT;"
  - question: "Are any devices exhibiting both a high volume of short-duration calls and a low entropy of destination numbers, suggesting repetitive, non-random calling patterns?"
    context: "This question combines two metrics to find beaconing behavior with higher confidence. A high number of short calls alone could be noise, but when combined with low Shannon entropy (meaning the calls are directed at very few unique numbers), it strongly suggests an automated, programmatic process like a C2 beacon."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "Telecom provider data feeds ingested into a central SIEM or data lake"
      - "Telecom Expense Management (TEM) platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each device: CALCULATE count of short_calls; CALCULATE shannon_entropy of destination_numbers for short_calls; IF count in top 5% AND entropy in bottom 5%: ALERT;"
  - question: "Has clustering analysis of inter-arrival times for short calls revealed any devices with highly periodic, machine-like calling behavior?"
    context: "This question focuses on the timing *between* calls to detect automation. Human calling patterns are typically random, whereas C2 beacons are often periodic (e.g., a call every 5 minutes). By analyzing the time intervals between calls, a clustering algorithm can identify devices with a very low variance in their call timing, which is a strong signal of C2 activity."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "Telecom provider data feeds ingested into a central SIEM or data lake"
      - "Telecom Expense Management (TEM) platform."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each device: EXTRACT time_between_short_calls to same number; CLUSTER on mean and variance of these times; INVESTIGATE clusters with low variance;"
  - question: "Are we observing events where a short-duration phone call is immediately followed by a network connection to a known malicious domain or IP address?"
    context: "This question seeks to identify a specific C2 pattern where a call acts as a trigger for a network-based callback. The malware might make a brief call to 'wake up' the C2 server, which then expects a network connection. Correlating a short call with a subsequent connection to a destination on a threat intelligence feed provides a very high-confidence indicator of compromise."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "SIEM or data lake with correlation capabilities, ingesting logs from telecom providers (CDRs) and network infrastructure (Zeek sensors on Wi-Fi controllers, VPN concentrators, and internet gateways)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "WHEN CDR_event with duration < 5s OCCURS: SEARCH for Zeek_log from same device_ip within 10s; IF Zeek_log.destination IN threat_intel_feed: HIGH SEVERITY ALERT;"
  - question: "Has cross-correlation analysis revealed any devices with a statistically significant pattern of network connections consistently occurring shortly after short-duration calls?"
    context: "This question provides a statistical method to prove the relationship between calls and network traffic, even without threat intelligence. By calculating the cross-correlation between the time series of short calls and the time series of network connections, we can mathematically identify devices where one event type reliably predicts the other, pointing to a cause-and-effect relationship indicative of C2."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "SIEM or data lake with correlation capabilities, ingesting logs from telecom providers (CDRs) and network infrastructure (Zeek sensors on Wi-Fi controllers, VPN concentrators, and internet gateways)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each device: CREATE time_series_A for short_calls, time_series_B for network_connections; CALCULATE cross-correlation of A and B; IF significant peak at lag 1-10s: ALERT;"
  - question: "Has sequential pattern mining discovered a recurring event sequence of a short call followed by a DNS query for a rare domain and then a TCP connection?"
    context: "This question uses advanced pattern analysis to discover the specific, multi-step playbook of a C2 channel. By looking for the entire sequence (`short call -> DNS query -> connection`) as a frequent pattern, we can identify this C2 methodology with high precision and understand the attacker's TTPs more deeply. This is especially effective at finding C2 domains that are not yet on threat intelligence feeds."
    answer_sources:
      - "Carrier Call Detail Records (CDRs)"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "SIEM or data lake with correlation capabilities, ingesting logs from telecom providers (CDRs) and network infrastructure (Zeek sensors on Wi-Fi controllers, VPN concentrators, and internet gateways)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "FOR each device event stream: USE PrefixSpan to find frequent patterns; SEARCH for pattern '(short_call_end) -> (dns_query_rare_domain) -> (tcp_connection)'; RANK and ALERT on high-support patterns;"