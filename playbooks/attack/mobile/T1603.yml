name: 'T1603: Scheduled Task-Job'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: This playbook helps investigate if an adversary is using scheduled tasks on mobile devices for persistence or execution. This can manifest as repetitive, uniform network connections (C2 beaconing), statistically anomalous traffic profiles compared to peers (e.g., non-standard ports, DNS tunneling), periodic downloads of mobile executables from low-reputation sources, or regular DNS queries for algorithmically generated domains (DGA).
type: technique
related:
  - 'TA0028: Persistence'
  - 'TA0041: Execution'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: Are mobile devices connecting to known malicious C2 infrastructure?
    context: This question aims to identify direct connections from mobile devices to known adversary command and control (C2) servers. By correlating network connection logs with DNS and SSL data, and comparing destination indicators (IPs, domains, JA3/JA3S hashes) against threat intelligence feeds, we can detect high-confidence signs of compromise. A match indicates a potential backdoor or malware beaconing from the device.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek intel.log
      - Corporate Wi-Fi access points
      - VPN gateways
      - Network egress points
      - Cloud Access Security Brokers (CASB)
      - Mobile Device Management (MDM) platforms
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each connection in conn.log from mobile_IP_range
            GET destination_IP
            GET associated_domain from dns.log
            GET server_name from ssl.log
            GET JA3/JA3S hashes
            CHECK destination_IP, associated_domain, server_name, JA3/JA3S against threat_intelligence_feeds
            IF match found in intel.log
              ALERT on connection
  - question: Are any mobile devices exhibiting highly uniform, automated network traffic patterns indicative of C2 beaconing?
    context: This question looks for the subtle, machine-like regularity of automated malware communications. Unlike human-generated traffic, C2 beacons from a scheduled task often occur at precise intervals (low jitter) and involve similar amounts of data (low Gini coefficient). Identifying devices with this highly uniform traffic profile helps uncover covert C2 channels that might not use known malicious infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek intel.log
      - Corporate Wi-Fi access points
      - VPN gateways
      - Network egress points
      - Cloud Access Security Brokers (CASB)
      - Mobile Device Management (MDM) platforms
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each mobile_source_IP
            GROUP connections by destination_IP over 24_hours
            CALCULATE jitter (stddev of inter-arrival_times)
            CALCULATE gini_coefficient for connection_duration
            CALCULATE gini_coefficient for total_bytes
            IF jitter < 5_seconds AND both gini_coefficients < 0.2
              FLAG device for investigation
  - question: Can we confirm the periodicity of suspicious, uniform network traffic to identify the exact interval of a scheduled task?
    context: After identifying statistically uniform traffic, this question seeks to confirm its automated nature by mathematically determining its period. Using a Fast Fourier Transform (FFT) on the connection timestamps can reveal a repeating pattern (e.g., every 60 minutes, every 24 hours), which is a hallmark of a scheduled task. Combining this strong periodic signal with a low-reputation destination provides a high-fidelity alert for C2 beaconing.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek intel.log
      - Corporate Wi-Fi access points
      - VPN gateways
      - Network egress points
      - Cloud Access Security Brokers (CASB)
      - Mobile Device Management (MDM) platforms
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each flagged_connection_pattern
            CREATE time_series of connection_start_times
            APPLY Fast Fourier Transform (FFT) to time_series
            IDENTIFY dominant_frequencies to find period
            IF strong_periodic_signal exists
              CORRELATE with destination_reputation
              IF destination_reputation is low
                ALERT as high-fidelity scheduled beacon
  - question: Are mobile devices communicating over non-standard ports or exhibiting other anomalous network protocol behavior?
    context: Adversaries often use non-standard ports to evade simple firewall rules and blend in. This question aims to detect such activity by comparing destination ports against an allowlist of approved business application ports. Additionally, monitoring for protocol anomalies in `Zeek weird.log`, such as malformed DNS replies or unexpected data transfers, can uncover covert channels used by malware.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek weird.log
      - Corporate Wi-Fi access points
      - VPN gateways
      - Network egress points
      - Internal DNS resolvers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          DEFINE approved_ports_allowlist
          FOR each connection in conn.log from mobile_IP
            IF destination_port NOT IN approved_ports_allowlist
              ALERT on connection
          FOR each event in weird.log from mobile_IP
            IF event_notice is 'dns_unmatched_reply' OR 'data_after_close'
              ALERT on event
  - question: Are any mobile devices behaving as statistical outliers compared to their peer group in terms of port usage or DNS query characteristics?
    context: This question uses peer group analysis to find anomalous devices. A device's behavior may not be inherently malicious on its own, but it can be highly suspicious when it deviates significantly from similar devices (e.g., same OS, same department). By flagging devices with an unusually high ratio of traffic on non-standard ports or abnormally large DNS queries compared to their peers, we can identify potential instances of DNS tunneling or other covert communication methods.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek weird.log
      - Corporate Wi-Fi access points
      - VPN gateways
      - Network egress points
      - Internal DNS resolvers
      - MDM data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          DEFINE peer_groups using MDM_data (OS, department)
          FOR each device
            CALCULATE ratio_of_non-standard_port_traffic
            CALCULATE avg_size_of_DNS_TXT/NULL_queries
            COMPARE metrics to peer_group_baseline
            IF metrics > 98th_percentile OR > 2_std_dev from baseline
              FLAG device as outlier for investigation
  - question: Can we use machine learning to identify mobile devices with anomalous network behavior profiles?
    context: This question leverages unsupervised machine learning to perform a multi-dimensional analysis of a device's network footprint. By creating a detailed feature vector for each device (capturing protocol usage, port entropy, connection stats, DNS patterns, etc.) and applying a clustering algorithm like DBSCAN, we can automatically identify devices that do not conform to any normal group. These "noise points" or outliers are strong candidates for investigation, as their unique behavior may be caused by a malicious scheduled task.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek weird.log
      - Corporate Wi-Fi access points
      - VPN gateways
      - Network egress points
      - Internal DNS resolvers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each mobile_device
            CREATE feature_vector (protocol_dist, port_entropy, avg_conn_duration, etc.)
          APPLY DBSCAN clustering algorithm to all feature_vectors
          IDENTIFY devices classified as 'noise' or outliers
          FLAG outlier devices for investigation
  - question: Are mobile devices downloading known malicious files or contacting known malicious infrastructure?
    context: This question focuses on detecting the direct download of malware or connections to infrastructure associated with malware distribution. By hashing downloaded files and checking them against malware databases, and by comparing hostnames, URIs, user agents, and SSL certificate issuers against threat intelligence, we can identify high-confidence indicators of a malicious payload being delivered to a device.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Zeek conn.log
      - Zeek intel.log
      - Zeek x509.log
      - Network egress points
      - Corporate Wi-Fi access points
      - Web Proxies
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each file in files.log
            CALCULATE hash (MD5/SHA1)
            CHECK hash against malware_databases
            IF match, ALERT
          FOR each request in http.log
            CHECK host, uri, user_agent against threat_intel
            IF match, ALERT
          FOR each cert in x509.log
            CHECK issuer against non-standard_CA_list
            IF match, ALERT
  - question: Are mobile devices periodically downloading mobile executable files or using rare User-Agent strings?
    context: This question aims to detect scheduled malware downloads. An adversary might configure a task to periodically fetch updated payloads or tools. By filtering for mobile executable file types and using an autocorrelation function (ACF) on the download timestamps, we can mathematically prove periodicity. Additionally, malware often uses custom or rare User-Agent strings, so flagging low-prevalence agents can help identify the specific process making the malicious requests.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Zeek conn.log
      - Zeek intel.log
      - Zeek x509.log
      - Network egress points
      - Corporate Wi-Fi access points
      - Web Proxies
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FILTER files.log for mobile_MIME_types
          FOR each source_device
            CREATE time_series of download_events
            APPLY Autocorrelation Function (ACF) to time_series
            IF significant_spike at non-zero lag, FLAG for periodicity
          FOR each user_agent in http.log
            CALCULATE prevalence across enterprise
            IF prevalence < 1% OR matches malicious_pattern
              FLAG user_agent
  - question: Can we use machine learning to score the likelihood that a file download is malicious?
    context: This question seeks to create a sophisticated detection model that can score the risk of any given file download. By training a classifier (like XGBoost) on a wide range of features—such as domain reputation, filename randomness (entropy), User-Agent rarity, and SSL certificate age—we can move beyond simple signature-based detection. A download that receives a high malicious score, particularly if it's part of a periodic pattern, is a strong indicator of a threat.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Zeek conn.log
      - Zeek intel.log
      - Zeek x509.log
      - Network egress points
      - Corporate Wi-Fi access points
      - Web Proxies
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          DEFINE feature_set (domain_age, filename_entropy, UA_prevalence, etc.)
          TRAIN gradient_boosting_classifier on labeled_data
          FOR each new_download
            CALCULATE feature_set
            PREDICT 'malicious_download_score' using model
            IF score > threshold
              CORRELATE with periodic_behavior
              ALERT if high score and periodic
  - question: Are mobile devices querying for known malicious domains or using unauthorized DNS servers?
    context: This question aims to catch malware C2 communications at the DNS level. By checking every domain query from mobile devices against threat intelligence for C2 and Domain Generation Algorithms (DGAs), as well as lists of suspicious Newly Registered Domains (NRDs), we can identify attempts to resolve malicious hostnames. Detecting the use of non-corporate DNS servers is also critical, as this is a common technique for bypassing security controls.
    answer_sources:
      - Zeek dns.log
      - Zeek intel.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Network egress points
      - DNS firewalls
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each DNS_query in dns.log from mobile_subnet
            CHECK domain against threat_intel (C2, DGA, NRDs)
            IF match, ALERT
            IF DNS_resolver is NOT a corporate_server
              ALERT
  - question: Are mobile devices periodically querying for domains that appear to be algorithmically generated?
    context: This question focuses on identifying Domain Generation Algorithms (DGAs), which malware uses to create a large number of potential C2 domains. These domains often look random and have high lexical entropy. This analytic first identifies suspicious-looking domains based on their linguistic properties (entropy, length, n-gram score) and then checks if they are being queried periodically by a device. The combination of a random-looking domain and periodic queries is a strong signal of DGA-based C2.
    answer_sources:
      - Zeek dns.log
      - Zeek intel.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Network egress points
      - DNS firewalls
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each domain NOT IN allowlist
            CALCULATE lexical_features (entropy, length, n-gram_score)
            CALCULATE composite_anomaly_score
            IF score > 99th_percentile
              GROUP queries by source_device and domain
              CALCULATE stddev of inter-query_times
              IF stddev < 10s, FLAG as periodic DGA polling
  - question: Can we use a machine learning model to detect DGA domains and confirm if they are being used for active C2 communications?
    context: This question applies advanced machine learning (e.g., an LSTM model) to classify domains as likely DGA or not. This is more robust than simple lexical analysis. For domains that the model flags with high confidence, the analytic then checks for two crucial follow-up behaviors: 1) Are the queries periodic, indicating a scheduled task? and 2) Is the device actually connecting to the resolved IP, confirming the C2 channel is active? A positive finding for all three elements constitutes a very high-fidelity alert.
    answer_sources:
      - Zeek dns.log
      - Zeek intel.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Network egress points
      - DNS firewalls
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each domain NOT IN allowlist
            PREDICT DGA_probability using LSTM_model
            IF probability > 0.90
              CHECK if query_timestamps are periodic
              CHECK conn.log for outbound connection to resolved_IP
              IF periodic AND connection_exists
                ALERT as active DGA C2 channel