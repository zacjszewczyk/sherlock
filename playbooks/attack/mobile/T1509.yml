name: T1509: Non-Standard Port
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook addresses the threat of an adversary establishing command and control (C2) with a mobile device using a non-standard port. It provides investigative steps to detect this activity by identifying several key indicators. These include: network connections from mobile devices where the observed service (e.g., SSL) does not match the IANA-standard port for that service; patterns of automated, periodic outbound connections (beaconing) characteristic of malware; and SSL/TLS connections that exhibit anomalous properties, such as using self-signed or short-lived certificates, or rare TLS fingerprints (JA3/JA3S) associated with malicious tools.
type: technique
related:
  - TA0037: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can I detect and alert on network connections from mobile devices that use non-standard ports for known services?
    context: This question aims to identify potential C2 channels that masquerade as legitimate services (like SSL or HTTP) but run on unusual ports to evade simple port-based firewall rules. By comparing the observed service identified by deep packet inspection with the IANA-standard port for that service, we can flag suspicious connections originating from mobile devices. Enriching these findings with threat intelligence on the destination IP helps prioritize potentially malicious C2 servers.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Corporate and guest Wi-Fi network segments, VPN termination points, Unified Endpoint Management (UEM) traffic inspection points, and Internet gateway proxies where mobile device traffic is visible.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek:notice.log
          FILTER notice_type == "Known_Services::Non_Standard_Port"
          AND source_ip IN mobile_ip_ranges
          ENRICH destination_ip with threat_intel_feed
          ALERT
  - question: How can I identify statistically rare service-and-port combinations used by mobile devices that might indicate C2 activity?
    context: This question focuses on a statistical approach to anomaly detection. Adversaries may use unique or rarely seen port combinations for their C2 channels. By baselining normal network behavior over 30 days, we can establish what constitutes a common service-port pair. Any new connection from a mobile device using a pair that falls into a low percentile (e.g., the bottom 5%) is flagged as an outlier worthy of investigation, as it deviates significantly from established patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Corporate and guest Wi-Fi network segments, VPN termination points, Unified Endpoint Management (UEM) traffic inspection points, and Internet gateway proxies where mobile device traffic is visible.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Baselining (run over 30 days)
          SEARCH Zeek:conn.log over last 30 days
          AGGREGATE count by service, destination_port
          CREATE lookup service_port_frequency

          // Real-time detection
          SEARCH Zeek:conn.log
          FILTER source_ip IN mobile_ip_ranges
          LOOKUP service, destination_port in service_port_frequency
          WHERE frequency_percentile < 5
          ALERT
  - question: Can a machine learning model be used to predict and score the likelihood of a mobile device connection on a non-standard port being malicious C2 traffic?
    context: This question explores the use of supervised machine learning to proactively identify malicious connections. By training a model like Random Forest on a rich set of connection features (port, duration, bytes, etc.) from a known dataset of good and bad traffic, we can create a predictive tool. This model can then score new, live connections from mobile devices in real-time, automatically flagging those that have a high probability of being malicious C2 communication.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Corporate and guest Wi-Fi network segments, VPN termination points, Unified Endpoint Management (UEM) traffic inspection points, and Internet gateway proxies where mobile device traffic is visible.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Model Training (Offline)
          FEATURE_ENGINEER from historical Zeek:conn.log
          FEATURES = [port, protocol, duration, bytes, service, is_mobile, is_non_standard]
          TRAIN classification_model on labeled_data

          // Real-time Scoring
          FOR each new connection in Zeek:conn.log:
            IF source_ip IN mobile_ip_ranges:
              EXTRACT features
              SCORE connection with classification_model
              IF score > 0.85:
                ALERT
  - question: How can I detect if a mobile device is using a Domain Generation Algorithm (DGA) to connect to a C2 server on a non-standard port?
    context: This question addresses the detection of DGA, a technique used by malware to periodically generate a large number of domain names that can be used as rendezvous points with their C2 servers. By identifying DNS queries for domains with high entropy (a measure of randomness common in DGA), and then correlating those queries with subsequent network connections to the resolved IP on a non-standard port, we can uncover this evasive C2 mechanism.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress points for all corporate and guest networks, specifically monitoring subnets allocated to mobile devices via DHCP for Wi-Fi or VPN pools, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek:dns.log
          FILTER source_ip IN mobile_ip_ranges
          AND shannon_entropy(query) > 3.5
          CORRELATE source_ip, timestamp with Zeek:conn.log
          WHERE conn.log.timestamp < (dns.log.timestamp + 60s)
          AND conn.log.destination_ip == dns.log.resolved_ip
          AND conn.log.destination_port IS non_standard
          ALERT
  - question: Can I identify automated C2 beaconing from mobile devices by analyzing the timing and duration consistency of their outbound connections?
    context: This question focuses on identifying the 'heartbeat' of malware C2 communications. Unlike human-generated traffic which is often sporadic, automated beaconing is typically very regular in its timing and connection length. By analyzing connections from mobile devices to a single destination over a 60-minute window, we can calculate the statistical variance of their timing and duration. A very low standard deviation in both metrics for a series of connections to a non-standard port is a strong signal of non-human, robotic activity characteristic of C2 beaconing.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress points for all corporate and guest networks, specifically monitoring subnets allocated to mobile devices via DHCP for Wi-Fi or VPN pools, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek:conn.log in last 60 minutes
          FILTER source_ip IN mobile_ip_ranges
          AND destination_port IS non_standard
          GROUP BY source_ip, destination_ip, destination_port
          CALCULATE count, stdev(inter_arrival_time), stdev(duration)
          WHERE count > 10
          AND stdev(inter_arrival_time) < 2
          AND stdev(duration) < 1
          ALERT
  - question: How can a time series anomaly detection model be used to find periodic, machine-like C2 traffic from mobile devices using non-standard ports?
    context: This question proposes using advanced time series analysis to detect C2 traffic. Human network activity is typically bursty and irregular. In contrast, C2 beaconing is often highly periodic. By creating a time series of connection counts and data volume for each mobile device communication channel, we can apply an anomaly detection model to learn a baseline of normal behavior and flag any new patterns that exhibit machine-like regularity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress points for all corporate and guest networks, specifically monitoring subnets allocated to mobile devices via DHCP for Wi-Fi or VPN pools, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Baselining and Training (Offline)
          FOR each (source, dest, port) tuple:
            CREATE time_series of (conn_count_per_min, bytes_per_min) from historical data
            TRAIN anomaly_detection_model on normal time_series patterns

          // Real-time Detection
          FOR each new (source, dest, port) tuple with mobile source and non-standard port:
            GENERATE time_series
            SCORE time_series with anomaly_detection_model
            IF score is anomalous (e.g., highly periodic):
              ALERT
  - question: How can I detect suspicious SSL/TLS connections from mobile devices based on invalid or short-lived server certificates?
    context: This question targets C2 channels that use SSL/TLS for encryption but employ weak or suspicious certificates. Legitimate services typically use valid, trusted certificates with a reasonable lifespan. Adversaries often use self-signed or short-lived certificates. By inspecting SSL/TLS handshakes for connections to non-standard ports, we can alert on indicators like a non-'ok' validation status or a validity period under 90 days, which are strong signs of a potentially malicious server.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek x509.log
      - Network sensors with Deep Packet Inspection (DPI) at Internet gateways, SSL/TLS decryption zones, VPN concentrators, and forward proxies. UEM solutions with traffic inspection capabilities are also a key NAI.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek:conn.log
          JOIN on 'uid' with Zeek:ssl.log
          JOIN on 'uid' with Zeek:x509.log
          FILTER source_ip IN mobile_ip_ranges
          AND destination_port IS non_standard
          WHERE ssl.validation_status != 'ok'
          OR x509.certificate.validity_length < 90_days
          ENRICH with certificate issuer/subject deny-list
          ALERT
  - question: How can I use the rarity of TLS fingerprints (JA3/JA3S) to identify potential malware on mobile devices?
    context: This question leverages TLS fingerprinting to identify malicious clients and servers. A JA3 hash represents how a client initiates a TLS session. Malware often has a unique fingerprint that is rare in an environment. By baselining common JA3 and JA3S hashes, we can flag new connections from mobile devices that use statistically rare fingerprints (e.g., bottom 1st percentile). This is a powerful method for detecting specific malware families without relying on signatures.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek x509.log
      - Network sensors with Deep Packet Inspection (DPI) at Internet gateways, SSL/TLS decryption zones, VPN concentrators, and forward proxies. UEM solutions with traffic inspection capabilities are also a key NAI.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Baselining (run over 30 days)
          SEARCH Zeek:ssl.log over last 30 days
          AGGREGATE count by ja3, ja3s
          CREATE lookup tls_fingerprint_frequency

          // Real-time detection
          SEARCH Zeek:ssl.log
          JOIN on 'uid' with Zeek:conn.log
          FILTER conn.source_ip IN mobile_ip_ranges
          AND conn.destination_port IS non_standard
          LOOKUP ja3, ja3s in tls_fingerprint_frequency
          WHERE ja3_frequency_percentile < 1 OR ja3s_frequency_percentile < 1
          ALERT
  - question: Can an unsupervised machine learning model group suspicious SSL/TLS connections from mobile devices into distinct clusters for investigation?
    context: This question explores using unsupervised learning (like DBSCAN) to find "needles in a haystack." By converting SSL/TLS and connection properties into a numerical feature vector, a clustering algorithm can group similar connections. Connections that don't fit into any large, normal cluster ('noise' points) or that form small, tight clusters of their own are highly suspicious. These small groups often represent a single malicious tool or campaign, allowing an analyst to investigate a group of related malicious activity at once.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek x509.log
      - Network sensors with Deep Packet Inspection (DPI) at Internet gateways, SSL/TLS decryption zones, VPN concentrators, and forward proxies. UEM solutions with traffic inspection capabilities are also a key NAI.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Model Application
          FOR each new SSL/TLS connection from a mobile device:
            CREATE feature_vector = [validation_status, cert_validity, is_non_standard, ja3_hash, duration]
            APPLY DBSCAN clustering model to feature_vector
            IF connection is classified as 'noise' OR belongs to a small, distinct cluster:
              ALERT for analyst review