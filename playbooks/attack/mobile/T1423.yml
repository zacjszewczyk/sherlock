name: T1423: Network Service Scanning
id: 5b1d9a0e-7c8f-4f8b-9e6a-2d3c4b5d6e7f
description: This playbook helps investigate whether a compromised mobile device is being used for network service discovery on the internal network. This can manifest as a single mobile device connecting to a large number of unique internal IPs (horizontal scan) or ports (vertical scan) in a short time. It can also be identified by a high ratio of failed or rejected TCP connections, indicating scans against non-listening ports or firewalled hosts. Additionally, traffic may contain artifacts specific to known scanning tools (e.g., Nmap, masscan) or trigger specific Zeek notices for scanning activity.
type: technique
related:
- TA0032: Discovery
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
- question: Has any mobile device attempted to connect to a designated network canary?
  context: This question aims to identify overt scanning activity by monitoring for connections to 'canary' assets. These are decoy IPs or ports that have no legitimate business purpose. Any connection attempt to a canary is highly suspicious and is a strong indicator of reconnaissance, as a legitimate user or service would have no reason to interact with it. This provides a high-fidelity, low-noise signal for potential scanning.
  answer_sources:
  - Zeek conn.log
  - DHCP Server Logs
  - VPN Server Logs
  - Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools)
  - Core network switches
  - VPN concentrators
  - DHCP servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH network_logs
      WHERE destination_ip IN [canary_ips] OR destination_port IN [canary_ports]
      AND source_ip IN [mobile_device_subnets]
      ALERT if count > 0
- question: Is any mobile device connecting to an anomalously high number of unique destination IPs or ports compared to its own baseline and its peers?
  context: This question seeks to detect both horizontal (many hosts) and vertical (many ports on one host) scanning by establishing a behavioral baseline. By comparing a device's current activity to its own history and to the activity of other mobile devices, we can identify statistical outliers. An activity level that is both unusual for the specific device and for the general population of similar devices strongly suggests automated scanning rather than normal user behavior.
  answer_sources:
  - Zeek conn.log
  - DHCP Server Logs
  - VPN Server Logs
  - Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools)
  - Core network switches
  - VPN concentrators
  - DHCP servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each mobile_source_ip:
        current_unique_dests = COUNT_UNIQUE(destination_ip) in last 5 mins
        current_unique_ports = COUNT_UNIQUE(destination_port) in last 5 mins
        device_baseline = CALCULATE_BASELINE(mobile_source_ip, last 30 days)
        peer_baseline = CALCULATE_PEER_BASELINE(all_mobile_ips, last 5 mins)
        ALERT if (current_unique_dests > 3_std_dev(device_baseline.dests) AND current_unique_dests > 99th_percentile(peer_baseline.dests))
        OR (current_unique_ports > 3_std_dev(device_baseline.ports) AND current_unique_ports > 99th_percentile(peer_baseline.ports))
- question: Are there any mobile devices exhibiting network behavior that is fundamentally different from the majority of other mobile devices?
  context: This question uses unsupervised machine learning to find anomalous devices without relying on pre-defined thresholds. By creating a multi-dimensional profile (feature vector) for each device based on its network traffic patterns (e.g., connection counts, success/failure ratios, port entropy), a clustering algorithm like DBSCAN can group similar devices together. Devices that do not fit into any of the main clusters are flagged as outliers, representing potentially malicious or compromised systems engaged in activities like scanning.
  answer_sources:
  - Zeek conn.log
  - DHCP Server Logs
  - VPN Server Logs
  - Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools)
  - Core network switches
  - VPN concentrators
  - DHCP servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each mobile_device in last 24 hours:
        vector = [
          unique_dest_ips,
          unique_dest_ports,
          ratio_successful_to_failed_connections,
          destination_port_entropy
        ]
      clusters = DBSCAN(all_device_vectors)
      ALERT on devices marked as outliers/noise
- question: Is any mobile device receiving an unusually high number of connection rejections from a single host in a short time frame?
  context: This question looks for a specific pattern of scanning where a scanner probes a host that is protected by a host-based firewall. The firewall actively rejects the connection attempts, resulting in a large number of 'REJ' (rejected) or 'RSTO' (reset by originator) connection states. A high volume of these rejections from a single target within a minute is a strong indicator of an active scan against a live but firewalled host.
  answer_sources:
  - Zeek conn.log
  - Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools)
  - Core network switches
  - Network firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH network_logs in last 1 min
      WHERE source_ip IN [mobile_device_subnets]
      AND connection_state IN ['REJ', 'RSTO']
      GROUP BY source_ip, destination_ip
      ALERT if count > 20
- question: Does any mobile device have an abnormally high ratio of failed-to-successful network connections?
  context: This question aims to identify scanning by looking at the outcome of connection attempts. Scanners often probe IPs and ports that are not open, leading to a high proportion of failed connections ('S0', 'REJ', etc.) compared to successful ones ('SF'). A legitimate device's traffic is typically dominated by successful connections. By calculating this ratio and comparing it to a peer group baseline (98th percentile) or a hard threshold (80% failure), we can spot devices whose traffic profile is indicative of scanning.
  answer_sources:
  - Zeek conn.log
  - Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools)
  - Core network switches
  - Network firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each mobile_source_ip in last 5 mins:
        failed = COUNT where connection_state IN ['S0', 'REJ', 'RSTO', 'RSTR', 'RSTOS0']
        successful = COUNT where connection_state == 'SF'
        ratio = failed / (successful + failed)
        peer_threshold = 98th_percentile_ratio(all_mobile_ips)
        ALERT if ratio > 0.8 OR ratio > peer_threshold
- question: Has there been a statistically significant spike in the rate of failed connections for any individual mobile device?
  context: This question uses time-series analysis to detect anomalies in a device's own behavior over time. Normal device activity may include a low, predictable level of connection failures. A time-series model (like Prophet or ESD) learns this normal pattern, including seasonality (e.g., time of day). It can then automatically flag any sudden, sharp increase in failed connections that deviates significantly from the learned forecast, indicating a potential state change such as the initiation of a network scan.
  answer_sources:
  - Zeek conn.log
  - Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools)
  - Core network switches
  - Network firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each mobile_source_ip:
        timeseries_data = GET per-minute count of failed_connections for last 30+ days
        model = TRAIN_TSAD_MODEL(timeseries_data)
        current_count = GET per-minute count of failed_connections for current minute
        is_anomaly = model.PREDICT(current_count)
        ALERT if is_anomaly
- question: Is there any direct evidence of scanning tools being used by a mobile device, either through IDS alerts or tool-specific artifacts?
  context: This question focuses on finding 'smoking gun' evidence of scanning. It leverages the built-in detection capabilities of security tools like Zeek, which can generate specific notices ('Scan::Port_Scan') when they observe scanning behavior. It also involves searching for explicit indicators of common scanning tools, such as their unique User-Agent strings (e.g., 'Nmap Scripting Engine') in HTTP traffic or other signatures, providing high-confidence alerts.
  answer_sources:
  - Zeek notice.log
  - Zeek conn.log
  - Zeek http.log
  - Zeek signatures.log
  - Network tap or span port monitoring the ingress/egress of mobile device network segments (Wi-Fi, VPN).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH zeek_notice_log
      WHERE notice_type IN ['Scan::Port_Scan', 'Scan::Address_Scan']
      AND source_ip IN [mobile_device_subnets]
      ---
      SEARCH zeek_http_log OR zeek_signatures_log
      WHERE user_agent MATCHES ['Nmap*', 'masscan', 'ZGrab'] OR signature MATCHES [tool_signatures]
      AND source_ip IN [mobile_device_subnets]
- question: Is any mobile device sending traffic with unusually high payload entropy, potentially indicating obfuscated or randomized probe data?
  context: This question attempts to identify sophisticated scanning techniques that may not use standard protocols. When Zeek cannot identify a protocol, it labels it as 'OTH'. Attackers may use custom or randomized data in their scan probes to evade signature-based detection. Calculating the Shannon entropy of the payload measures its randomness. A high entropy value compared to peers can indicate that the device is not using a standard application protocol and may be sending obfuscated data as part of a scan.
  answer_sources:
  - Zeek notice.log
  - Zeek conn.log
  - Zeek http.log
  - Zeek signatures.log
  - Network tap or span port monitoring the ingress/egress of mobile device network segments (Wi-Fi, VPN).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each mobile_source_ip in last 5 mins:
        payloads = GET first 64 bytes of payload where protocol == 'OTH'
        avg_entropy = CALCULATE_AVG_ENTROPY(payloads)
        peer_threshold = 98th_percentile_entropy(all_mobile_ips)
        ALERT if avg_entropy > peer_threshold
- question: Can a machine learning model, trained on known benign and malicious traffic, classify new network flows from mobile devices as potential scanning?
  context: This question proposes a sophisticated, proactive detection method using supervised machine learning. By training a model (e.g., Random Forest) on a dataset of network flows that have been manually labeled as 'benign' or 'scanning', the model learns the complex, multi-faceted characteristics of each traffic type. It can then be used to classify new, unlabeled traffic from mobile devices in near-real-time, providing a predictive capability to identify scanning behavior that might evade simpler, threshold-based rules.
  answer_sources:
  - Zeek notice.log
  - Zeek conn.log
  - Zeek http.log
  - Zeek signatures.log
  - Network tap or span port monitoring the ingress/egress of mobile device network segments (Wi-Fi, VPN).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Training (offline)
      labeled_data = GET historical flows with 'scanning' or 'benign' labels
      features = EXTRACT_FEATURES(labeled_data) # duration, proto, bytes, state, etc.
      model = TRAIN_CLASSIFIER(features, labels)

      # Prediction (real-time)
      new_flow = GET new flow from mobile subnet
      new_features = EXTRACT_FEATURES(new_flow)
      prediction = model.PREDICT(new_features)
      ALERT if prediction == 'scanning'