name: T1481.001: Dead Drop Resolver
id: 2C7D1E8F-9B6A-4C3D-8E5A-1F2B3C4D5E6F
description: This playbook addresses the threat of adversaries establishing Command and Control (C2) channels on mobile devices using dead drop resolvers. It focuses on detecting patterns where a mobile device first connects to a legitimate public web service (like Pastebin, GitHub, or social media) and then, based on information retrieved, initiates a second, anomalous connection. Detections are based on several indicators: 1) A two-step connection pattern where the second destination is on a threat intelligence list, has a low popularity rank, or a high-risk ASN. 2) The extraction of an IP or FQDN from the content of a legitimate web service response, followed by a connection to that extracted destination. 3) The use of rare TLS fingerprints (JA3 hashes) in initial connections, followed by connections to destinations with self-signed or newly issued certificates.
type: technique
related:
  - TA0037: Command And Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a mobile device connected to a potential dead drop resolver and then immediately connected to a known malicious C2 destination?
    context: This question aims to identify the classic dead drop resolver pattern. An adversary's malware on a mobile device may first connect to a legitimate public service (e.g., a specific Pastebin URL or a GitHub Gist) to retrieve the real C2 server address. It then immediately connects to that malicious address. Detecting this two-step sequence, where the second destination is a known threat, is a high-confidence indicator of C2 activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Threat intelligence feed
      - Corporate Wi-Fi egress points
      - VPN concentrators handling mobile device traffic
      - MDM-managed device network segments
      - Network segments dedicated to guest or BYOD mobile devices
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each connection in conn.log from mobile_IP_range to dead_drop_watchlist: SEARCH conn.log for second connection from same source_IP within 60s. GET destination_IP/domain of second connection from dns.log. CHECK if destination is in threat_intel_feed. IF match, ALERT.
  - question: Has a mobile device connected to a potential dead drop resolver and then to an unusually unpopular domain while exfiltrating a large amount of data?
    context: This question looks for the same two-step connection pattern but focuses on statistical anomalies instead of known malicious indicators. Adversary C2 infrastructure is often newly created and not widely visited. A connection to a very rare domain, especially when coupled with an unusually large data upload (outbound bytes), is highly suspicious and can indicate C2 communication or data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi egress points
      - VPN concentrators handling mobile device traffic
      - MDM-managed device network segments
      - Network segments dedicated to guest or BYOD mobile devices
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each two-step connection pattern: GET destination_domain of second connection. CALCULATE domain popularity over 30 days. GET outbound_bytes of second connection. IF domain_popularity is in bottom 5th percentile AND outbound_bytes is in top 95th percentile, ALERT.
  - question: Can a machine learning model identify high-probability dead drop connection patterns based on a combination of network and TLS features?
    context: This question leverages machine learning to combine multiple weak signals into a strong indicator. By training a model on features like the time between connections, data volume, domain popularity, ASN reputation, and TLS metadata (SNI), it's possible to detect complex, non-obvious dead drop C2 patterns with high fidelity, reducing false positives from simpler rule-based alerts.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Corporate Wi-Fi egress points
      - VPN concentrators handling mobile device traffic
      - MDM-managed device network segments
      - Network segments dedicated to guest or BYOD mobile devices
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each two-step connection pattern: CREATE feature vector (time_delta, bytes_transferred, domain_popularity, ASN, SNI). APPLY pre-trained ML model. IF prediction_score > 0.85, ALERT.
  - question: Has a mobile device received an IP or domain from a web service and then immediately connected to it, where that IP or domain is known to be malicious?
    context: This question focuses on detecting C2 instructions hidden in plain sight within the content of legitimate web traffic. An adversary might hide the next C2 destination (an IP address or domain name) in the body of a forum post, a comment, or a file. This analytic scans for these indicators in unencrypted traffic, checks them against threat intelligence, and looks for a subsequent connection, confirming the C2 instruction was received and acted upon.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Threat intelligence feed
      - Network egress points with L7 visibility
      - DNS resolvers
      - Web proxies serving mobile device traffic
      - Mobile Device Management (MDM) platforms
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each response in http.log/files.log from mobile_device: PARSE body for IP/FQDNs. CHECK extracted indicators against threat_intel_feed. IF match, SEARCH conn.log for connection from same source_IP to matched indicator within 2 minutes. IF found, ALERT.
  - question: Did a mobile device receive and then connect to a domain that appears to be randomly generated (DGA) and is rarely visited by anyone in the organization?
    context: Adversaries use Domain Generation Algorithms (DGAs) to create a large number of potential C2 domains, making them difficult to block. These domains often appear random (high entropy) and are accessed infrequently. This question identifies when a mobile device retrieves a potential C2 domain from web content and then connects to it, where the domain exhibits both high randomness and extreme rarity within the organization, a strong sign of DGA-based C2.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Network egress points with L7 visibility
      - DNS resolvers
      - Web proxies serving mobile device traffic
      - Mobile Device Management (MDM) platforms
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each FQDN extracted from content and subsequently contacted: CALCULATE Shannon entropy of hostname. CALCULATE 30-day domain popularity. IF entropy > 3.5 AND popularity is in bottom 1st percentile, ALERT.
  - question: Is there an anomalous spike in traffic from mobile devices to known dead-drop resolver services, suggesting a coordinated campaign?
    context: Instead of looking at individual devices, this question analyzes aggregate traffic patterns. A widespread malware campaign might cause many infected devices to contact a dead drop service (like Pastebin or GitHub) around the same time. By using a time-series model (SARIMA) to predict normal traffic levels, we can detect significant, sustained deviations from the baseline, which could indicate a large-scale, coordinated C2 effort.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - Network egress points with L7 visibility
      - DNS resolvers
      - Web proxies serving mobile device traffic
      - Mobile Device Management (MDM) platforms
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: AGGREGATE hourly requests from mobile_IPs to dead_drop_domains. APPLY SARIMA model to forecast expected volume. IF observed_volume > (forecasted_mean + 3 * std_dev) for sustained period, ALERT.
  - question: Did a mobile device connect to a dead drop resolver and then immediately make a TLS connection to a server using a self-signed or invalid certificate?
    context: Legitimate web services typically use valid, trusted TLS certificates. Adversary C2 servers, however, often use self-signed or otherwise invalid certificates to save cost and effort. This question looks for the two-step dead drop pattern where the second connection is a TLS session to a server with a suspicious certificate, which is a strong indicator that the destination is not a legitimate service and may be C2 infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points with deep packet inspection capabilities
      - TLS-terminating proxies
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each connection from mobile_IP with invalid_cert_status in ssl.log: SEARCH for prior connection from same source_IP to dead_drop_resolver within 60 seconds. IF match, ALERT.
  - question: Is a mobile device making a TLS connection using a rare client fingerprint (JA3 hash) to a server with a brand-new certificate?
    context: The JA3 hash fingerprints a TLS client's handshake, and malware often uses non-standard libraries, resulting in rare JA3 hashes. Adversaries also frequently rotate their C2 infrastructure, which involves issuing new TLS certificates. This question combines these two facts, looking for connections that are anomalous on both the client side (rare JA3) and the server side (newly issued certificate). This combination is highly indicative of malicious activity.
    answer_sources:
      - Zeek ssl.log
      - Network egress points with deep packet inspection capabilities
      - TLS-terminating proxies
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: BASELINE JA3 hash popularity over 30 days. FOR each new TLS connection from mobile_IP: IF JA3_hash is in bottom 1% of popularity AND server_cert_age < 7 days, ALERT.
  - question: Can we use clustering to identify anomalous TLS sessions from mobile devices that do not conform to normal traffic patterns?
    context: This question uses unsupervised machine learning to find outliers in TLS traffic. By grouping similar TLS sessions based on features like JA3/JA3S hashes, cipher suites, and certificate details, we can define what "normal" traffic looks like. Sessions that do not fit into any of the large, dense clusters of legitimate traffic are flagged as anomalies. These outliers are prime candidates for investigation as they may represent unique C2 channels.
    answer_sources:
      - Zeek ssl.log
      - Network egress points with deep packet inspection capabilities
      - TLS-terminating proxies
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CREATE feature vector for each mobile TLS session (JA3, JA3S, cipher, version, cert_validity). APPLY DBSCAN clustering algorithm. FOR each session marked as an outlier or in a small cluster, ALERT.