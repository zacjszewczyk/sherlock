name: T1670: Virtualization Solution
id: 5a8a1b2c-3d4e-4f5a-6b7c-8d9e0f1a2b3c
description: This playbook helps determine if an adversary is using virtualization or application cloning on managed mobile devices to evade defenses or conceal malicious activity. It focuses on identifying known virtualization apps via package names, detecting anomalous network traffic that doesn't match the reported foreground application, and spotting network connections to malicious infrastructure (IPs, domains, TLS fingerprints) known to be used by malware that leverages virtualization.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any installed applications on managed devices that match a known virtualization tool watchlist and are not on the corporate allowlist?
    context: This question aims to directly identify the presence of known malicious or unauthorized virtualization/cloning applications. By comparing installed application package names against a threat intelligence-sourced watchlist and cross-referencing with a corporate allowlist, analysts can quickly find high-confidence indicators of policy violation and potential defense evasion.
    answer_sources:
      - MDM Application Inventory Log
      - Android Logcat
      - Threat Intelligence Feed
      - Managed Android mobile device fleet
      - Mobile Device Management (MDM) servers
      - SIEM
      - Threat Intelligence Platform (TIP)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each app IN mdm_inventory_logs:
            IF app.package_name IN virtualization_watchlist AND app.package_name NOT IN corporate_allowlist:
              ALERT(high_severity, "Known virtualization tool found", device=app.device_id, package=app.package_name)
  - question: Are there any rare, unlisted applications installed across the mobile fleet that could be suspicious virtualization tools?
    context: Adversaries may use custom or uncommon virtualization tools to avoid detection by standard watchlists. This question helps uncover such tools by focusing on statistical rarity. Applications with a very low installation count (prevalence) that are not on the corporate allowlist are inherently suspicious and warrant investigation to determine if they are legitimate or malicious.
    answer_sources:
      - MDM Application Inventory Log
      - Android Logcat
      - Threat Intelligence Feed
      - Managed Android mobile device fleet
      - Mobile Device Management (MDM) servers
      - SIEM
      - Threat Intelligence Platform (TIP)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          unlisted_apps = GET apps from mdm_inventory_logs WHERE app.package_name NOT IN corporate_allowlist
          app_counts = COUNT unlisted_apps by package_name
          fleet_size = COUNT unique devices in mdm_inventory_logs
          FOR app, count IN app_counts:
            IF count < (0.01 * fleet_size) OR count < 5:
              ALERT(medium_severity, "Rare unlisted application found", package=app, install_count=count)
  - question: Can we use machine learning to predict if an unlisted application is likely a virtualization tool based on its characteristics?
    context: This question leverages a predictive approach to identify potential virtualization tools that are not on any known watchlist. By training a machine learning model on application metadata (e.g., permissions, package name entropy), analysts can flag suspicious unlisted apps that exhibit characteristics similar to known virtualization frameworks, providing a proactive detection capability.
    answer_sources:
      - MDM Application Inventory Log
      - Android Logcat
      - Threat Intelligence Feed
      - Managed Android mobile device fleet
      - Mobile Device Management (MDM) servers
      - SIEM
      - Threat Intelligence Platform (TIP)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          model = LOAD virtualization_classifier_model
          FOR each app IN mdm_inventory_logs WHERE app.package_name NOT IN corporate_allowlist:
            features = EXTRACT_FEATURES(app.manifest)
            prediction = model.PREDICT_PROBABILITY(features)
            IF prediction > 0.85:
              ALERT(medium_severity, "ML model predicted virtualization tool", package=app.package_name, probability=prediction)
  - question: Is a mobile device communicating with known C2 infrastructure while a trusted application is reported to be in the foreground?
    context: This question seeks to identify a classic indicator of compromise: communication with a known malicious server. The key context is correlating this network activity with MDM data. If a device communicates with a C2 server while a seemingly benign application (e.g., a standard browser or productivity app) is active, it strongly suggests a malicious process is running in the background, possibly within a virtualized environment, and masquerading its traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - MDM Application Usage Log
      - Corporate Wi-Fi and VPN gateways
      - Enterprise DNS resolvers
      - MDM servers
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each connection IN zeek_conn_logs:
            IF connection.destination_ip IN c2_watchlist:
              foreground_app = GET foreground_app from mdm_usage_logs WHERE device=connection.source_ip AND timestamp=connection.timestamp
              IF foreground_app IS TRUSTED:
                ALERT(high_severity, "C2 communication from device with trusted foreground app", device=connection.source_ip, c2_ip=connection.destination_ip, app=foreground_app)
  - question: Is the network behavior of a foreground application on a mobile device statistically anomalous compared to its own historical baseline?
    context: This question helps detect when an application's network traffic patterns change dramatically, which could indicate it is being hijacked or that a malicious process is operating under its guise. By baselining normal activity (e.g., data volume, connection counts) for each app on each device and alerting on significant deviations, analysts can spot subtle signs of compromise that don't involve known malicious indicators.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - MDM Application Usage Log
      - Corporate Wi-Fi and VPN gateways
      - Enterprise DNS resolvers
      - MDM servers
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Baselining phase (run periodically)
          CALCULATE baseline (mean, std_dev) for metrics (bytes, connections, dns_entropy) per device-app pair from historical zeek_logs
          // Detection phase (run in real-time)
          FOR each 15_min_window:
            active_app = GET foreground_app from mdm_usage_logs
            current_metrics = CALCULATE metrics for active_app in current_window
            anomalies = 0
            FOR metric in current_metrics:
              IF metric > (baseline[metric].mean + 3 * baseline[metric].std_dev):
                anomalies += 1
            IF anomalies >= 2:
              ALERT(medium_severity, "Anomalous network behavior for foreground app", device=device_id, app=active_app)
  - question: Does a machine learning model detect anomalous network patterns from a device, and does this anomaly coincide with a trusted application being active?
    context: This question employs a more advanced, model-driven approach to anomaly detection. A time-series model like an LSTM autoencoder can learn complex, non-linear patterns in a device's overall network traffic. When a new pattern emerges that the model cannot 'reconstruct' accurately, it signals an anomaly. Correlating this anomaly with the active application provides crucial context: an anomaly during the use of a trusted app is highly suspicious and could point to hidden malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - MDM Application Usage Log
      - Corporate Wi-Fi and VPN gateways
      - Enterprise DNS resolvers
      - MDM servers
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          model = LOAD network_anomaly_model
          FOR each 5_min_window of network_traffic for a device:
            features = AGGREGATE_FEATURES(traffic_window)
            reconstruction_error = model.CALCULATE_ERROR(features)
            IF reconstruction_error > anomaly_threshold:
              foreground_app = GET foreground_app from mdm_usage_logs at anomaly_timestamp
              IF foreground_app IS TRUSTED:
                ALERT(medium_severity, "ML model detected network anomaly during trusted app usage", device=device_id, app=foreground_app, error=reconstruction_error)
  - question: Are any mobile devices communicating with network indicators (IPs, domains, TLS fingerprints) known to be associated with malware that uses virtualization?
    context: This is a high-confidence detection question that directly matches network traffic against specific, curated threat intelligence. By focusing on Indicators of Compromise (IOCs) explicitly linked to malware known for using virtualization techniques, a positive match provides a strong signal of a relevant, active threat, justifying an immediate high-severity alert.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat Intelligence Feed
      - Corporate network egress points
      - Web proxies
      - DNS resolvers
      - Threat Intelligence Platform (TIP)
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each event IN (zeek_conn, zeek_dns, zeek_ssl):
            IF event.indicator IN virtualization_malware_ioc_feed:
              ALERT(high_severity, "Connection to IOC for virtualization-related malware", device=event.source, indicator=event.indicator)
  - question: Are any mobile devices connecting to rare domains that have a malicious or suspicious reputation?
    context: This question helps uncover threats that use new or obscure domains to evade domain-based blocklists. Malware C2 domains are often not widely visited. By identifying domains that are rarely accessed across the entire mobile fleet and then checking their reputation, analysts can find potential C2 channels that would otherwise be missed. A combination of rarity and poor reputation is a strong indicator of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat Intelligence Feed
      - Corporate network egress points
      - Web proxies
      - DNS resolvers
      - Threat Intelligence Platform (TIP)
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          domain_counts = COUNT dns_queries by domain over last 30 days
          rare_domains = GET domains in bottom 1st percentile from domain_counts
          FOR each dns_query in zeek_dns_logs:
            IF dns_query.domain IN rare_domains:
              reputation = ENRICH(dns_query.domain)
              IF reputation IS MALICIOUS or reputation IS SUSPICIOUS:
                ALERT(medium_severity, "Connection to rare and malicious/suspicious domain", device=dns_query.source, domain=dns_query.domain, reputation=reputation)
  - question: Are any mobile devices attempting to resolve domains that appear to be algorithmically generated (DGA)?
    context: This question targets a common malware technique for C2 communication where the malware generates a large number of potential domain names to connect to, making blocklisting difficult. By using a machine learning model to analyze the linguistic and structural properties of domain names, analysts can identify and flag domains that are likely machine-generated, indicating a probable C2 channel, even if the domain has never been seen before.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat Intelligence Feed
      - Corporate network egress points
      - Web proxies
      - DNS resolvers
      - Threat Intelligence Platform (TIP)
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          model = LOAD dga_detection_model
          FOR each dns_query in zeek_dns_logs:
            dga_score = model.SCORE(dns_query.domain)
            IF dga_score > 0.90:
              ALERT(medium_severity, "Suspected DGA domain detected", device=dns_query.source, domain=dns_query.domain, score=dga_score)