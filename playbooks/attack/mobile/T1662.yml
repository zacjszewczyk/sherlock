name: T1662: Data Destruction
id: f8d9e0c1-b2a3-4f5e-8d9c-0a1b2c3d4e5f
description: This playbook helps determine if an adversary is attempting to disrupt mobile device operations by destroying data. It focuses on identifying indicators such as a high volume of file deletion or application uninstallation commands executed in a short time window, particularly from non-standard user processes. It also investigates correlated network activity, such as a sudden cessation of traffic or bursts of unusual connections to rare domains, which may occur immediately following a data destruction event on the host. The playbook leverages logs from MDM/EDR agents, network sensors, and aggregated SIEM data to detect these malicious activities.
type: technique
related:
  - TA0034: Impact
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Are there exact string matches for `pm uninstall` or `rm -rf` in command-line logs, particularly from suspicious parent processes?
    context: This question seeks to find high-confidence indicators of malicious data destruction. The commands `pm uninstall` (on Android) and `rm -rf` are explicit and powerful tools for removing data and applications. Searching for their exact usage, especially when initiated by a non-interactive application or a user with recently escalated privileges, can help an analyst quickly identify a deliberate attempt to wipe a device.
    answer_sources:
      - MDM/EDR agent logs detailing command-line arguments
      - Android Logcat process execution events
      - iOS Endpoint Security Framework process events
      - Managed mobile devices (corporate-owned or BYOD)
      - Mobile Device Management (MDM) servers
      - SIEM systems where logs are aggregated
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH command_line_logs
          WHERE command_string CONTAINS "pm uninstall" OR command_string CONTAINS "rm -rf"
          AND parent_process IS NOT "interactive_shell"
          GROUP BY device_id, parent_process, user

  - question: Has any mobile device shown an anomalous spike in the frequency of `pm uninstall` or `rm` commands compared to its baseline?
    context: This question uses a statistical approach to find suspicious behavior that might not be captured by exact-match rules. By establishing a normal baseline of deletion-related command usage for each device, analysts can detect significant deviations. An alert triggered when command frequency exceeds the 99th percentile of its normal behavior points to an abnormal, potentially malicious, burst of activity aimed at data destruction.
    answer_sources:
      - MDM/EDR agent logs detailing command-line arguments
      - Android Logcat process execution events
      - iOS Endpoint Security Framework process events
      - Managed mobile devices (corporate-owned or BYOD)
      - Mobile Device Management (MDM) servers
      - SIEM systems where logs are aggregated
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Establish baseline
          DEFINE baseline AS (
            SEARCH command_line_logs FOR last 30 days
            WHERE command_string CONTAINS "pm uninstall" OR command_string CONTAINS "rm"
            AGGREGATE count by hour per device
          )
          // Step 2: Detect anomalies
          SEARCH command_line_logs FOR last 24 hours
          AGGREGATE count by hour per device
          ALERT WHERE hourly_count > 99th_percentile(baseline)

  - question: Can machine learning models identify anomalous sequences of command-line activity indicative of data destruction?
    context: This question leverages advanced machine learning to detect subtle or complex patterns of malicious behavior. An Isolation Forest or one-class SVM model can be trained on features like command name entropy, argument length, and frequency of specific commands to learn a device's normal behavioral profile. This allows the model to flag sequences of activity that deviate from the norm, such as a rapid succession of deletion commands at an unusual time, which may be missed by simpler rule-based or statistical methods.
    answer_sources:
      - MDM/EDR agent logs detailing command-line arguments
      - Android Logcat process execution events
      - iOS Endpoint Security Framework process events
      - Managed mobile devices (corporate-owned or BYOD)
      - Mobile Device Management (MDM) servers
      - SIEM systems where logs are aggregated
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Apply pre-trained model to new data
          INPUT command_log_stream
          EXTRACT features (command_entropy, arg_length, time_of_day, etc.)
          APPLY anomaly_detection_model(features)
          ALERT IF prediction is "anomaly"

  - question: Following a host-based data destruction alert, did the affected device communicate with any known malicious C2 servers?
    context: This question is critical for correlating a data destruction event with command and control (C2) activity. Adversaries often communicate with a C2 server immediately before or after an attack to receive final instructions or confirm the action. By querying network logs (like Zeek) for connections from the affected device within a tight time window (e.g., 5 minutes) around the host alert and comparing destinations against a threat intelligence feed, an analyst can confirm a link to a known malicious infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points monitoring mobile device traffic (e.g., corporate Wi-Fi, VPN gateway)
      - DNS resolvers
      - Network sensor grids
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON host_destruction_alert(device_ip, timestamp):
            SEARCH network_logs
            WHERE source_ip = device_ip
            AND log_timestamp is within 5 minutes of alert_timestamp
            AND destination_ip IN known_c2_threat_feed
            ALERT on match

  - question: Has any mobile device exhibited a sudden spike in DNS query entropy, potentially indicating DGA activity for C2 communications?
    context: This question aims to proactively detect C2 channels that use Domain Generation Algorithms (DGAs). DGA-enabled malware generates a large number of pseudo-random domain names to find its C2 server, which causes a measurable spike in the Shannon entropy of its DNS queries. Monitoring for a significant deviation (e.g., 3 standard deviations) from a device's normal DNS entropy baseline can serve as an early warning of a compromise, potentially before any destructive payload is executed.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points monitoring mobile device traffic (e.g., corporate Wi-Fi, VPN gateway)
      - DNS resolvers
      - Network sensor grids
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each device:
            CALCULATE moving average of DNS query Shannon entropy over 1-hour windows from last 30 days (baseline).
            CALCULATE current 1-hour entropy.
            ALERT IF current_entropy > 3 * stdev(baseline_entropy).

  - question: Did any device's network traffic suddenly drop to zero and remain there, deviating significantly from its predicted 'heartbeat'?
    context: This question focuses on identifying the aftermath of a successful data destruction attack that renders a device inoperable. By using a time-series model (like ARIMA) to predict a device's expected network traffic 'heartbeat', analysts can detect a sudden and sustained drop to near-zero activity. This deviation from the forecast is a strong indicator that the device has been wiped or bricked, especially if it follows a host-based alert for destructive commands.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points monitoring mobile device traffic (e.g., corporate Wi-Fi, VPN gateway)
      - DNS resolvers
      - Network sensor grids
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Apply pre-trained time-series model
          INPUT network_traffic_volume_stream per device
          PREDICT expected_traffic_volume using model
          ALERT IF actual_traffic_volume is near-zero AND significantly deviates from predicted_volume for a sustained period.