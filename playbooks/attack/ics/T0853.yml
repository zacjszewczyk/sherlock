name: T0853: Scripting
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps identify when an adversary is executing unauthorized scripts for execution or collection on critical ICS assets. Malicious scripting can manifest as PowerShell processes with high-risk arguments (e.g., -EncodedCommand, -ExecutionPolicy Bypass), anomalous parent processes (e.g., winword.exe), or outbound network connections to threat-listed destinations. It can also involve Python interpreters (python.exe) running from non-standard paths, executing recently created files, or making rare DNS requests. Similarly, wscript.exe or cscript.exe executing scripts from temporary directories, spawned by office applications, or with unusually long command lines are key indicators. For collection, scripting may involve reading multiple sensitive ICS project or configuration files (.ACD, .L5K, etc.), often combined with data compression, encoding, and exfiltration functions, and executed by an anomalous parent process.
type: technique
related:
  - TA0104: Execution
  - TA0100: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any PowerShell processes been created with high-risk arguments, from an anomalous parent process, or initiated outbound connections to known malicious destinations?
    context: This question looks for direct signs of malicious PowerShell usage. Arguments like '-enc' (encoded command), '-ep bypass' (execution policy bypass), and 'IEX' (Invoke-Expression, often for download cradles) are classic indicators of obfuscation and remote code execution. An unusual parent process, like Microsoft Word, suggests execution via a malicious macro. Correlating this with network connections to destinations on threat intelligence feeds provides strong evidence of a compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Servers
      - Jump Servers
      - Domain Controllers
      - OT DMZ
      - Remote Access Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH powershell.exe process creation WHERE (command_line contains '-enc' OR '-ep bypass' OR 'IEX(' OR '-w hidden') OR (parent_process NOT IN [allowlist]). CORRELATE with network logs on host and time. ALERT if destination matches threat intelligence.
  - question: Have any PowerShell scripts or commands been executed that are statistically anomalous in terms of entropy or length compared to their historical baselines?
    context: This question aims to detect obfuscated or unusually complex commands that deviate from normal administrative activity. High Shannon entropy in a script block often indicates packed or encrypted code, a common technique for malware to hide its payload. Similarly, a command line that is significantly longer than the historical average for a specific user on a specific host can be a sign of a complex, one-off malicious command, rather than routine activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Servers
      - Jump Servers
      - Domain Controllers
      - OT DMZ
      - Remote Access Servers
    range: last 90 days
    queries:
      - pseudocode: FOR each host, CALCULATE 30-day baseline of script block entropy. ALERT if new script entropy > 98th percentile. FOR each user-host pair, CALCULATE 30-day baseline of command-line length. ALERT if new command length > 3 standard deviations from mean.
  - question: Can machine learning models identify any PowerShell script content or execution events as malicious or anomalous?
    context: This question leverages machine learning to find threats that may not be caught by simple signature-based rules. A text classification model can analyze the content of a script for patterns indicative of malicious behavior (e.g., specific API calls, obfuscation techniques). Anomaly detection models like Isolation Forest can analyze the context of a process's execution (parent process, user, time of day) to spot behaviors that are outliers compared to established patterns of normalcy.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Servers
      - Jump Servers
      - Domain Controllers
      - OT DMZ
      - Remote Access Servers
    range: last 90 days
    queries:
      - pseudocode: CLASSIFY script block content using a pre-trained text model. ALERT if malicious probability > 0.85. ANALYZE process event features (parent, user, time) with an anomaly detection model. ALERT if event is flagged as an anomaly.
  - question: Are there any Python processes running from an unapproved path, executing a recently created script, or connecting to a known-bad IP address?
    context: This question seeks to identify unauthorized use of Python. Execution from a path not on an organization's approved software inventory suggests a rogue interpreter was installed. Correlating a Python process with a file (.py, .pyc) that was written to disk just moments before execution is a strong indicator of a dropped and executed payload. Network connections from the Python process to IPs on a threat feed confirm malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek files.log
      - Zeek http.log
      - Zeek smb.log
      - Zeek dns.log
      - Zeek conn.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Process Control Servers
      - Data Historians
      - OT Network Segments
      - Jump Servers
      - OT DMZ
    range: last 90 days
    queries:
      - pseudocode: SEARCH python.exe process creation WHERE (process_path NOT IN [approved_inventory]). CORRELATE file creation events for .py/.pyc files with process execution of the same file within 15 minutes. ALERT if correlation found. CORRELATE python.exe process with network logs and ALERT if destination IP is in threat intelligence.
  - question: Has a Python process executed a script from a never-before-seen path on a host or made a DNS request for an extremely rare domain?
    context: This question uses 'first seen' and rarity analysis to detect novelty, which often correlates with malicious activity. A Python script running from a new, previously unobserved file path on a given host breaks the established pattern of behavior for that machine. Similarly, a DNS query for a domain that is statistically rare across the entire network segment suggests a connection to a non-standard, and possibly malicious, C2 server.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek files.log
      - Zeek http.log
      - Zeek smb.log
      - Zeek dns.log
      - Zeek conn.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Process Control Servers
      - Data Historians
      - OT Network Segments
      - Jump Servers
      - OT DMZ
    range: last 90 days
    queries:
      - pseudocode: FOR each host, MAINTAIN a set of historical python script paths. ALERT if a script is executed from a new path. CALCULATE 30-day Inverse Domain Frequency (IDF) for all domains. ALERT if a python.exe process requests a domain with an IDF score in the top 1%.
  - question: Have any Python execution events or newly created Python files been flagged as anomalous or malicious by machine learning models?
    context: This question applies machine learning to detect outlier Python activity. A One-Class SVM can model normal Python execution patterns based on features like parent process, user, and network behavior, flagging any deviations as potential threats. A separate classifier, trained on file content, can analyze newly written .py files for malicious characteristics, such as the use of dangerous libraries ('socket', 'subprocess') or functions ('eval', 'exec'), providing a defense-in-depth approach.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek files.log
      - Zeek http.log
      - Zeek smb.log
      - Zeek dns.log
      - Zeek conn.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Process Control Servers
      - Data Historians
      - OT Network Segments
      - Jump Servers
      - OT DMZ
    range: last 90 days
    queries:
      - pseudocode: SCORE all python.exe executions using a trained One-Class SVM model. ALERT on any outlier event. CLASSIFY content of new .py files using a Gradient Boosting model. ALERT if file is classified as malicious with confidence > 0.90.
  - question: Have the Windows Script Host engines (wscript.exe, cscript.exe) been launched by an unusual parent process or used to execute a script from a temporary location?
    context: This question targets common misuse of the Windows Script Host, often associated with phishing and lateral movement. It's highly suspicious for applications like Office programs, browsers, or PDF readers to spawn a script engine, as this often indicates a user opened a malicious document or link. Similarly, scripts executing from temporary user directories are a red flag, as attackers frequently write their payloads to these locations before execution.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Servers
      - Jump Servers
      - OT DMZ
    range: last 90 days
    queries:
      - pseudocode: SEARCH for wscript.exe or cscript.exe process creation WHERE parent process is IN [office_apps, browsers, pdf_readers]. CORRELATE file creation of .js/.vbs/.wsf in temp dirs with execution of the same file within 5 minutes. ALERT if destination IP matches threat intelligence.
  - question: Have any Windows Script Host executions involved an abnormally long command line or a rarely used script file extension?
    context: This question uses statistical baselining and frequency analysis to spot anomalous script executions. An unusually long command line for wscript.exe or cscript.exe can indicate an attempt to pass a large, obfuscated payload directly on the command line. Separately, observing the execution of a rare script extension (e.g., .jse, .vbe) that hasn't been seen in months deviates from normal operational behavior and could signify an attacker's attempt to evade defenses that only monitor for common .js or .vbs files.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Servers
      - Jump Servers
      - OT DMZ
    range: last 90 days
    queries:
      - pseudocode: FOR each host, ESTABLISH 90-day baseline of wscript/cscript command-line lengths. ALERT if new execution exceeds 99th percentile. ACROSS all assets, MAINTAIN frequency map of script file extensions. ALERT if a rare or unseen extension is executed.
  - question: Can clustering algorithms identify any Windows Script Host executions as anomalous 'noise' points that do not fit established patterns of behavior?
    context: This question uses unsupervised machine learning to find novel execution patterns. A clustering model like DBSCAN can group together 'normal' script executions based on features like the parent process, command-line arguments, and user context. Any execution that does not fit into a known cluster is labeled as 'noise' or an anomaly. This is a powerful technique for detecting new or previously unseen attack methods that would not match any predefined rule or signature.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Servers
      - Jump Servers
      - OT DMZ
    range: last 90 days
    queries:
      - pseudocode: APPLY DBSCAN clustering model to wscript/cscript process event data. Features should include parent process, command-line tokens, user, and hour of day. ALERT on any execution classified as a 'noise' point.
  - question: Is there evidence of a script being used to access sensitive ICS files and simultaneously prepare for data exfiltration?
    context: This question seeks to find direct evidence of scripted data collection and staging. It correlates the execution of a script interpreter with the script's actual content. A high-severity alert is warranted if the script text reveals an attempt to both read a sensitive file type (like a PLC project file) and use cmdlets or keywords associated with data staging (Compress-Archive, ToBase64String) or exfiltration (Invoke-WebRequest). This combination strongly indicates intent to steal data.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 4103
      - Zeek conn.log
      - Zeek files.log
      - Zeek smb_mapping.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Historian Servers
      - Data Historians
      - Asset Management Servers
      - Process Control Servers
      - Configuration Management Servers
      - File Servers/Shares
    range: last 90 days
    queries:
      - pseudocode: CORRELATE process creation (e.g., powershell.exe) with script block log within 5 seconds. ALERT if script content contains both a file access command for ICS files AND a keyword for staging/exfiltration (e.g., 'Compress-Archive', 'Invoke-WebRequest').
  - question: Have any scripts shown unusually high entropy, or has any user demonstrated an anomalous amount of script-based file access?
    context: This question uses statistical methods to find outliers in script content and user behavior. High character entropy in a script is a strong indicator of obfuscation or encryption, used by attackers to hide malicious code. Separately, baselining a user's normal daily count of sensitive file access via scripts and alerting on significant deviations can detect an account that may be compromised and is being used to collect far more data than usual.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 4103
      - Zeek conn.log
      - Zeek files.log
      - Zeek smb_mapping.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Historian Servers
      - Data Historians
      - Asset Management Servers
      - Process Control Servers
      - Configuration Management Servers
      - File Servers/Shares
    range: last 90 days
    queries:
      - pseudocode: CALCULATE entropy for all script block text. ALERT if entropy exceeds 99.5th percentile of 30-day baseline. FOR each user, PROFILE daily count of sensitive file access cmdlets. ALERT if daily count exceeds 3 standard deviations from user's 30-day average.
  - question: Can machine learning models classify script executions as malicious or identify anomalous relationships between users, scripts, files, and network destinations?
    context: This question applies advanced analytics to detect sophisticated collection activities. A supervised classification model can score script executions in real-time based on a rich set of features (entropy, keywords, parent process) to identify malicious behavior. Furthermore, graph analysis can uncover complex attack paths by modeling relationships between entities. An anomalous path, such as a low-reputation user running a new script that reads many sensitive files and connects to a new IP, is a powerful indicator of a targeted attack.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 4103
      - Zeek conn.log
      - Zeek files.log
      - Zeek smb_mapping.log
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Historian Servers
      - Data Historians
      - Asset Management Servers
      - Process Control Servers
      - Configuration Management Servers
      - File Servers/Shares
    range: last 90 days
    queries:
      - pseudocode: SCORE new script executions with a trained Random Forest model using features from event logs. BUILD a graph of users, processes, files, and IPs. USE graph algorithms to find anomalous paths, such as a user executing a new script that accesses many files and connects to a new IP.