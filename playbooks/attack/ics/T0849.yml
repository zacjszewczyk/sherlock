name: 'T0849: Masquerading'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: 'This playbook helps identify adversary attempts to evade detection by masquerading malicious files or processes as legitimate Industrial Control System (ICS) software. This involves detecting known ICS applications executing from unusual file paths, identifying files in critical directories with suspicious characteristics (like double extensions or rare file types), and spotting core Windows system processes on ICS assets making anomalous outbound network connections.'
type: 'technique'
related:
  - 'TA0103: Evasion'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: 'Is a known ICS process executing from a command line path that is not on the established application whitelist?'
    context: 'This question aims to detect masquerading attempts where an attacker places a malicious executable with the same name as a legitimate ICS application (e.g., "RSLinx.exe") in an unauthorized directory. Legitimate applications should only run from their designated installation paths. Executing from a different location, especially a temporary or user-writable directory, is a strong indicator of compromise.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), ICS Application Servers, Data Historians, Jump Servers within the ICS network.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          SEARCH process_creation_events (e.g., EventID 4688)
          WHERE process_name IN (ics_application_whitelist)
          AND command_line_path NOT IN (approved_paths_for_process_name)
  - question: 'Is a known ICS process executing from a statistically rare or anomalous command line path based on historical data?'
    context: 'This question uses statistical analysis to find outliers without a pre-defined whitelist. By baselining normal execution paths for every ICS application over a long period, we can identify when a process is launched from a location that is highly unusual. This can uncover masquerading even if the path is not on a known-bad list, as it deviates from established norms.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), ICS Application Servers, Data Historians, Jump Servers within the ICS network.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          FOR each new process_creation_event:
            process = event.process_name
            path = event.command_line_path
            historical_path_frequency = GET_HISTORICAL_FREQUENCY(process, path, last_90_days)
            IF historical_path_frequency < 5th_percentile_threshold:
              ALERT("Statistically rare execution path detected")
  - question: 'Does a machine learning model classify the execution path of a known ICS process as an anomaly?'
    context: 'This question leverages machine learning for more sophisticated anomaly detection. A model, like an Isolation Forest, is trained on the characteristics of legitimate execution paths. It can then score new process creation events in real-time. Events that the model flags as outliers (anomalies) are highly suspicious, as they do not conform to the learned pattern of normal behavior, indicating a potential masquerade.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), ICS Application Servers, Data Historians, Jump Servers within the ICS network.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          FOR each new process_creation_event:
            features = EXTRACT_FEATURES(event.command_line_path)
            anomaly_score = ANOMALY_DETECTION_MODEL.predict(features)
            IF anomaly_score IS "outlier":
              ALERT("ML model detected anomalous execution path")
  - question: 'Has a file with a suspicious name, such as one with a double extension or a blacklisted extension, been created in a critical ICS directory?'
    context: 'This question targets a common attacker technique of hiding executables by giving them misleading names, like "project.plc.exe". By monitoring file creation events in critical directories (e.g., project folders) and using regular expressions to find filenames with double extensions or extensions associated with scripts and executables (.vbs, .scr), we can catch attempts to place malicious payloads in trusted locations.'
    answer_sources:
      - 'Windows Event ID 4663'
      - 'Engineering Workstations (EWS) local drives, Shared Network Drives (e.g., for project files, backups), ICS Application Servers, Data Historians.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          SEARCH file_write_events (e.g., EventID 4663)
          WHERE target_directory IN (critical_ics_directories)
          AND (filename MATCHES_REGEX ''.*\\..{2,5}\\..{2,5}$'' OR file_extension IN (extension_blacklist))
  - question: 'Has a file with a statistically rare extension or an unusually random filename (high entropy) been created in a critical ICS directory?'
    context: 'This question aims to find abnormal files by looking at their properties relative to what is normal for a specific directory. A file with an extension that has almost never been seen before in a project directory is suspicious. Similarly, a filename with high entropy (randomness) might indicate an auto-generated payload from an attacker''s tool, contrasting with human-readable project filenames.'
    answer_sources:
      - 'Windows Event ID 4663'
      - 'Engineering Workstations (EWS) local drives, Shared Network Drives (e.g., for project files, backups), ICS Application Servers, Data Historians.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          FOR each new file_creation_event:
            directory = event.directory
            filename = event.filename
            extension = event.extension
            historical_ext_frequency = GET_HISTORICAL_FREQUENCY(directory, extension)
            filename_entropy = CALCULATE_ENTROPY(filename)
            IF historical_ext_frequency < 1% OR filename_entropy > 95th_percentile_entropy(directory):
              ALERT("Anomalous file extension or filename entropy detected")
  - question: 'Does a machine learning model classify a newly created filename in a critical ICS directory as ''suspicious''?'
    context: 'This question uses a supervised learning approach, where a model is explicitly trained to distinguish between "benign" and "suspicious" filenames based on historical examples. By analyzing features like character patterns, length, and extension, the model can make an intelligent prediction on new files, providing a more robust detection method than simple rules or statistical thresholds.'
    answer_sources:
      - 'Windows Event ID 4663'
      - 'Engineering Workstations (EWS) local drives, Shared Network Drives (e.g., for project files, backups), ICS Application Servers, Data Historians.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          FOR each new file_creation_event:
            features = EXTRACT_FEATURES(event.filename)
            prediction = FILENAME_CLASSIFICATION_MODEL.predict(features)
            IF prediction IS "suspicious":
              ALERT("ML model classified filename as suspicious")
  - question: 'Did a core Windows system process initiate an outbound network connection to an unapproved IP address, domain, or port?'
    context: 'This question seeks to identify process injection or other masquerading techniques where an attacker hijacks a legitimate system process (e.g., "svchost.exe") to establish a command-and-control channel. These core processes typically have predictable network behavior. A connection to an external destination that is not on a pre-defined whitelist of known-good locations is a strong indicator of malicious activity.'
    answer_sources:
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'ICS Network Segments (Control/Process LAN, DMZ), Corporate-to-ICS DMZ, Internet Gateway (for outbound connections from ICS assets), Firewalls logging connection attempts.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          SEARCH network_connection_events (e.g., EventID 5156 correlated with Zeek conn.log)
          WHERE process_name IN (core_system_processes)
          AND (destination_ip NOT IN (ip_whitelist) OR destination_domain NOT IN (domain_whitelist))
  - question: 'Did a core Windows system process initiate a network connection that is statistically anomalous compared to its historical behavior on that host?'
    context: 'This question uses baselining to detect deviations from normal network activity for trusted processes. By tracking metrics like unique destination IPs, ports, and data volume for each core process on each host, we can spot outliers. A connection to a brand-new IP or a sudden spike in data transfer for a process like "lsass.exe" is highly anomalous and warrants investigation for masquerading or process compromise.'
    answer_sources:
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'ICS Network Segments (Control/Process LAN, DMZ), Corporate-to-ICS DMZ, Internet Gateway (for outbound connections from ICS assets), Firewalls logging connection attempts.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          FOR each new network_connection_event:
            process = event.process_name
            host = event.source_ip
            destination = event.destination_ip
            baseline = GET_BEHAVIORAL_BASELINE(process, host, last_30_days)
            IF destination NOT IN baseline.known_destinations OR event.data_volume > baseline.98th_percentile_volume:
              ALERT("Anomalous network behavior detected for core system process")
  - question: 'Does a multivariate machine learning model classify a network connection from a core system process as an anomaly?'
    context: 'This question employs an advanced machine learning model (e.g., an Autoencoder) to learn the complex, multi-faceted profile of normal network communications for critical processes. The model considers process name, destination, port, protocol, and data volume simultaneously. Any connection that deviates significantly from this learned normal profile (resulting in a high anomaly score) is flagged, allowing for the detection of subtle and complex masquerading attempts that might evade simpler methods.'
    answer_sources:
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'ICS Network Segments (Control/Process LAN, DMZ), Corporate-to-ICS DMZ, Internet Gateway (for outbound connections from ICS assets), Firewalls logging connection attempts.'
    range: 'last 90 days'
    queries:
      - 'pseudocode': |
          FOR each new network_connection_event:
            features = EXTRACT_FEATURES(process_name, dest_ip, port, protocol, bytes, duration)
            anomaly_score = ANOMALY_DETECTION_MODEL.predict(features)
            IF anomaly_score > high_threshold:
              ALERT("ML model detected anomalous network connection")