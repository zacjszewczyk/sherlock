name: "T0846: Remote System Discovery"
id: "8c5d2e0a-1b4f-4e9b-9a8c-7f6d3e1a0b9c"
description: "This playbook helps to determine if an adversary is attempting to discover systems on the ICS network. This involves detecting hosts that generate a high volume of connection attempts to many distinct destinations, the execution of known network discovery utilities (like nmap or ping) with scanning arguments, the use of ICS-specific discovery requests (like Modbus 'Read Device Identification'), or processes generating a large number of failed network connection attempts, all of which are indicative of network reconnaissance and asset discovery."
type: "technique"
related:
  - "TA0102: Discovery"
contributors:
  - "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is an unauthorized host attempting to scan the network by connecting to a high number of distinct destinations or ports?"
    context: |
      This question helps detect classic network scanning behavior. By maintaining a watchlist of 'Authorized ICS Management Hosts' and monitoring for hosts not on this list that exhibit broad connection patterns (e.g., connecting to over 50 unique IPs or 100 unique ports in 5 minutes), analysts can quickly identify potential reconnaissance activities. The check is prioritized for common ICS ports (502, 102, 44818, 20000) as this indicates a targeted effort against operational technology.
    answer_sources:
      - "Zeek conn.log"
      - "ICS Network Segments (e.g., Control Network, Safety Instrumented System Network)"
      - "OT/IT DMZ"
      - "Engineering Subnet"
      - "Process Control Network (PCN)"
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log WHERE source_ip NOT IN 'Authorized ICS Management Hosts' | TIMESLICE 5m | COUNT_DISTINCT(destination_ip) by source_ip | COUNT_DISTINCT(destination_port) by source_ip | WHERE distinct_destination_ips > 50 OR distinct_destination_ports > 100"
  - question: "Is a host's network connection behavior deviating significantly from its own established baseline?"
    context: |
      This question focuses on detecting anomalous behavior on a per-host basis. Instead of using static thresholds, it establishes a dynamic baseline (e.g., a 7-day rolling average) for each host's typical connection metrics. An alert is triggered if a host's current activity (e.g., unique destinations, total connections) exceeds the 99th percentile of its own history. This method is effective at spotting compromised hosts that begin acting out of character.
    answer_sources:
      - "Zeek conn.log"
      - "ICS Network Segments (e.g., Control Network, Safety Instrumented System Network)"
      - "OT/IT DMZ"
      - "Engineering Subnet"
      - "Process Control Network (PCN)"
    range: "last 90 days"
    queries:
      - "FOR EACH source_ip in Zeek conn.log | CALCULATE 7-day baseline (99th percentile) for unique_dest_ips, unique_dest_ports, total_connections in 5m windows | COMPARE current 5m window metrics to baseline | ALERT if current > baseline_99th_percentile"
  - question: "Can an unsupervised machine learning model identify hosts with anomalous network communication patterns?"
    context: |
      This question leverages machine learning to find subtle or complex deviations that rule-based methods might miss. By training an unsupervised model like Isolation Forest on historical network connection data, the system learns what 'normal' communication looks like for each host. The model can then score new activity and flag hosts exhibiting high anomaly scores, indicating a significant change in their communication patterns.
    answer_sources:
      - "Zeek conn.log"
      - "ICS Network Segments (e.g., Control Network, Safety Instrumented System Network)"
      - "OT/IT DMZ"
      - "Engineering Subnet"
      - "Process Control Network (PCN)"
    range: "last 90 days"
    queries:
      - "TRAIN IsolationForest model on historical Zeek conn.log data (features: count_dest_ip, dcount_dest_ip, dcount_dest_port per 5m) | APPLY model to new data | ALERT on hosts with high anomaly_score"
  - question: "Is a known network discovery utility being executed with scanning-related arguments from an unusual parent process or by a non-administrative user?"
    context: |
      This question aims to detect the active use of reconnaissance tools on an endpoint. It queries for process creation events (Windows Event ID 4688) involving specific utilities like 'ping.exe' or 'nmap.exe'. The detection is refined by looking for command-line arguments that suggest subnet scanning and by checking the context of the execution. An execution is highly suspicious if it's launched by an unexpected parent process (like a web browser instead of a command shell) or by a standard user account.
    answer_sources:
      - "Windows Event ID 4688"
      - "Engineering Workstations"
      - "HMIs"
      - "Data Historians"
      - "Jump Servers within the OT network"
    range: "last 90 days"
    queries:
      - "SEARCH Windows Event ID 4688 WHERE process_name IN (discovery_tool_watchlist) AND command_line MATCHES (scan_regex) | ALERT if parent_process NOT IN (admin_tool_whitelist) OR user NOT IN (admin_user_list)"
  - question: "Has the frequency or context of discovery tool execution on a host deviated from its historical baseline?"
    context: |
      This question uses baselining to spot abnormal usage of legitimate tools. It establishes a 30-day baseline for how often a specific host-user combination runs discovery utilities. An alert is triggered if the execution count in a 24-hour window spikes above the 99th percentile. It also analyzes the parent processes launching these tools; a sudden drop in the diversity (Shannon entropy) of parent processes could signal a single malicious script repeatedly calling a discovery tool.
    answer_sources:
      - "Windows Event ID 4688"
      - "Engineering Workstations"
      - "HMIs"
      - "Data Historians"
      - "Jump Servers within the OT network"
    range: "last 90 days"
    queries:
      - "FOR EACH host-user | CALCULATE 30-day baseline (99th percentile) for discovery tool execution frequency | ALERT if current 24-hour count > baseline_99th_percentile | ALSO, calculate entropy of parent_process_name for discovery tools on host; ALERT on significant drop or new parent"
  - question: "Can a graph-based model detect anomalous process execution chains leading to the use of a discovery tool?"
    context: |
      This question models process lineage as a graph to identify suspicious execution flows. By learning the normal parent-child process relationships on a system over a 30-day period, a graph-based anomaly detection algorithm can flag the creation of new or rare relationships. This is particularly powerful for detecting cases where a compromised application (e.g., 'winword.exe') spawns a command shell which in turn runs a discovery tool.
    answer_sources:
      - "Windows Event ID 4688"
      - "Engineering Workstations"
      - "HMIs"
      - "Data Historians"
      - "Jump Servers within the OT network"
    range: "last 90 days"
    queries:
      - "MODEL process executions (Event ID 4688) as a parent->child graph over 30 days | APPLY model to new data | ALERT on creation of rare or new edges, especially where child_node is a discovery_tool and parent_node is unusual (e.g., winword.exe)"
  - question: "Is an unauthorized host sending a high frequency or wide variety of ICS-specific discovery requests?"
    context: |
      This question targets reconnaissance specific to Industrial Control Systems. It monitors ICS protocol logs (e.g., Modbus, S7comm, EtherNet/IP) for discovery-related function calls originating from hosts not on an authorized watchlist. An alert is triggered if a single source sends a high volume of these requests (>10) or targets a wide range of devices (>5) in a short time frame (1 minute), suggesting an adversary is actively mapping OT assets.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek s7comm.log"
      - "Zeek enip.log"
      - "Zeek modbus.log"
      - "Zeek dnp3.log"
      - "Control System LAN"
      - "connections to PLCs and RTUs"
      - "SCADA Server Network"
      - "Field Device Network"
    range: "last 90 days"
    queries:
      - "SEARCH ICS protocol logs (s7comm, enip, modbus, dnp3) for discovery function codes WHERE source_ip NOT IN 'Authorized ICS Management Hosts' | TIMESLICE 1m | AGGREGATE by source_ip | ALERT if distinct_destination_count > 5 OR total_request_count > 10"
  - question: "Is a host's usage of ICS discovery protocols deviating from its established baseline?"
    context: |
      This question applies behavioral baselining to ICS protocol communications. It establishes a 30-day profile for each host's normal rate and variety of ICS requests. An alert is raised if a host, particularly one not on an authorized list, suddenly starts using discovery-related function codes it has never used before or if the ratio of discovery requests to total requests deviates significantly from its historical average.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek s7comm.log"
      - "Zeek enip.log"
      - "Zeek modbus.log"
      - "Zeek dnp3.log"
      - "Control System LAN"
      - "connections to PLCs and RTUs"
      - "SCADA Server Network"
      - "Field Device Network"
    range: "last 90 days"
    queries:
      - "FOR EACH source_ip | CALCULATE 30-day baseline for rate and variety of ICS function codes | ALERT if host uses new discovery function codes OR if (discovery_requests / total_requests) > 3_std_dev_from_mean"
  - question: "Can an unsupervised clustering model identify hosts exhibiting anomalous ICS protocol communication patterns?"
    context: |
      This question uses machine learning to find outliers in ICS network traffic. By clustering hosts based on features like the protocols and function codes they use, the model can group 'normal' behaviors together. Any host that doesn't fit into a normal cluster is flagged as an anomaly. This is effective for detecting novel reconnaissance techniques that don't match pre-defined rules, especially when the anomalous host is not on a pre-approved watchlist.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek s7comm.log"
      - "Zeek enip.log"
      - "Zeek modbus.log"
      - "Zeek dnp3.log"
      - "Control System LAN"
      - "connections to PLCs and RTUs"
      - "SCADA Server Network"
      - "Field Device Network"
    range: "last 90 days"
    queries:
      - "TRAIN DBSCAN model on historical ICS log data (features: protocol, function_code, dcount_dest_ip per 1m) | APPLY model to new data | ALERT on hosts classified as noise/outliers"
  - question: "Is a process on a critical host generating a large number of failed network connections to many different destinations?"
    context: |
      This question aims to detect network sweeps by identifying a high volume of failed connections. The query first looks for network-level evidence in Zeek logs (TCP resets, ICMP unreachables). If a host exceeds a threshold (e.g., >50 failures to >20 destinations in 60 seconds), the investigation pivots to that host's logs (Windows Events 4688/5156) to identify the specific process responsible. An alert is triggered if this process is not a known, legitimate scanner.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Zeek conn.log"
      - "Zeek icmp.log"
      - "Engineering Workstations"
      - "HMIs"
      - "ICS Network Segments"
      - "Servers within the OT network"
    range: "last 90 days"
    queries:
      - "SEARCH Zeek logs for failed connections (REJ, RSTO, ICMP Unreachable) | TIMESLICE 60s | GROUP BY source_ip | IF failed_count > 50 AND distinct_dest_count > 20 | PIVOT to host logs (Event ID 4688/5156) for that source_ip at that time | IDENTIFY responsible process | ALERT if process NOT IN 'Known Good Scanners' watchlist"
  - question: "Is a process exhibiting an abnormally low connection success ratio compared to its historical baseline?"
    context: |
      This question focuses on the behavior of individual processes to detect scanning. For each process, it calculates a 'Connection Success Ratio'. A 30-day baseline is established for this ratio for common processes. A significant drop in this ratio, especially when coupled with a high absolute number of failed connections, strongly suggests the process is performing a network sweep.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Zeek conn.log"
      - "Zeek icmp.log"
      - "Engineering Workstations"
      - "HMIs"
      - "ICS Network Segments"
      - "Servers within the OT network"
    range: "last 90 days"
    queries:
      - "FOR EACH process on critical hosts | CORRELATE process events (4688) with network logs (Zeek) | CALCULATE Connection_Success_Ratio | ESTABLISH 30-day baseline for ratio | ALERT if ratio drops > 3_std_dev_from_mean AND failed_connection_count > 50"
  - question: "Can a time-series anomaly detection model identify hosts with an unusual spike in failed network connections?"
    context: |
      This question uses time-series forecasting to detect anomalies in network behavior at the host level. It creates a model (e.g., Prophet, LSTM) based on the historical count of failed connections per minute for a specific host. An alert is triggered when the actual number of failures significantly exceeds the model's prediction. This method is effective at catching sudden bursts of scanning activity that deviate from the host's normal operational noise.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Zeek conn.log"
      - "Zeek icmp.log"
      - "Engineering Workstations"
      - "HMIs"
      - "ICS Network Segments"
      - "Servers within the OT network"
    range: "last 90 days"
    queries:
      - "FOR EACH critical host | CREATE time-series of failed_connections_per_minute from Zeek logs | TRAIN forecasting model (e.g., Prophet) on historical data | ALERT when actual count > forecasted_upper_bound | ON ALERT, query host logs (4688, 5156) to find causative process"