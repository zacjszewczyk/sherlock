name: T0846: Remote System Discovery
id: 5a7b1c3d-9f8e-4a6b-8c7d-1e3f5a9b0c2d
description: This playbook helps investigate whether an adversary is attempting to discover systems on the ICS network. This involves detecting high volumes of connection attempts from unauthorized hosts, the execution of known network discovery utilities with suspicious arguments, high frequencies of ICS-specific discovery requests, and processes generating a large number of failed network connection attempts, which could indicate a network sweep.
type: technique
related:
  - TA0102: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an unauthorized host performing a network scan by connecting to an unusually high number of distinct destinations or ports?
    context: This question aims to identify broad, horizontal scanning activity. It uses a straightforward, threshold-based method to detect when a single host, not on an approved list of scanners, attempts to connect to a large number of unique IPs or ports in a short time frame. This is a common first step for an adversary trying to map out a network. The detection's priority is increased if the target ports are associated with common ICS/OT protocols.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (e.g., Control Network, Safety Instrumented System Network), OT/IT DMZ, Engineering Subnet, Process Control Network (PCN)
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH Zeek conn.log
          WHERE source_ip IS NOT IN 'Authorized ICS Management Hosts' watchlist
          AGGREGATE by source_ip over 5-minute windows
          ALERT if distinct_destination_ips > 50 OR distinct_destination_ports > 100
          INCREASE severity if destination_port is in [502, 102, 44818, 20000]
  - question: Is a specific host exhibiting network scanning behavior that deviates significantly from its own established baseline?
    context: This question moves beyond static thresholds to a behavioral analysis approach. It establishes a historical baseline of normal network activity for each host and then flags significant deviations. This method is more effective at reducing false positives that might be generated by legitimate, but 'chatty', hosts, as it judges a host's behavior against its own normal patterns rather than a generic network-wide rule.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (e.g., Control Network, Safety Instrumented System Network), OT/IT DMZ, Engineering Subnet, Process Control Network (PCN)
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each source_ip:
            CALCULATE 7-day rolling baseline (99th percentile) for unique_destination_ips, unique_destination_ports, total_connections per 5-minute window
          SEARCH Zeek conn.log
          COMPARE current 5-minute metrics against the host's baseline
          ALERT if current metric > 99th percentile of baseline, especially if host is not authorized
  - question: Can machine learning models identify hosts with anomalous network communication patterns indicative of scanning?
    context: This question explores a more advanced detection method using unsupervised machine learning. By training a model like an Isolation Forest on multiple features of network connections (e.g., destination counts, port counts), it can learn complex patterns of normal behavior. This allows it to flag hosts exhibiting anomalous communication that might not be caught by simple threshold or baseline rules, providing a more robust defense against novel or subtle scanning techniques.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (e.g., Control Network, Safety Instrumented System Network), OT/IT DMZ, Engineering Subnet, Process Control Network (PCN)
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN Isolation Forest model on historical Zeek conn.log data aggregated by source_ip (features: count(dest_ip), dcount(dest_ip), dcount(dest_port))
          APPLY trained model to new, incoming data
          ALERT on any source_ip with a high anomaly score
  - question: Has a known network discovery tool been executed with scanning-related command-line arguments from an unusual parent process or by an unauthorized user?
    context: This question focuses on detecting discovery activity through host-based evidence. It looks for the execution of specific utilities (like ping, net, nmap) with command-line arguments that indicate network-wide enumeration. The key to determining malicious intent is the context: if the tool is launched by an unexpected parent process (e.g., a Word document) or by a non-administrative user, it is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Engineering Workstations, HMIs, Data Historians, Jump Servers within the OT network
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH Windows Event ID 4688
          WHERE NewProcessName is in [ping.exe, net.exe, nmap.exe, etc.] AND CommandLine contains scanning patterns (e.g., CIDR, -sP, /a)
          ALERT if ParentProcessName is not in [explorer.exe, cmd.exe, etc.] OR SubjectUserName is not an authorized admin
  - question: Is a user on a specific host running discovery utilities more frequently than their established baseline, or is the parent process context changing unexpectedly?
    context: This question applies behavioral baselining to process execution data. It detects anomalies by identifying when a user on a specific host runs discovery tools far more often than they normally do. Additionally, it uses Shannon entropy to analyze the parent processes of these tools; a sudden drop in entropy can indicate scripted, automated activity from a single parent, which is highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Engineering Workstations, HMIs, Data Historians, Jump Servers within the OT network
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE 30-day baseline of discovery tool execution frequency per host-user pair
          ALERT if current 24-hour count exceeds the 99th percentile of the baseline
          ADDITIONALLY, calculate Shannon entropy of ParentProcessName for discovery tools on a host; ALERT on a significant drop in entropy
  - question: Can graph-based analysis detect anomalous process execution chains where a discovery utility is spawned by an unexpected parent process?
    context: This question proposes using an advanced graph-based anomaly detection technique. It involves modeling all parent-child process relationships on a system to learn what is 'normal'. The system then alerts on the creation of new or statistically rare relationships (edges in the graph), such as 'winword.exe' spawning 'nmap.exe'. This is a powerful method for detecting lateral movement and execution phases of an attack.
    answer_sources:
      - Windows Event ID 4688
      - Engineering Workstations, HMIs, Data Historians, Jump Servers within the OT network
    range: last 90 days
    queries:
      - pseudocode: |
          MODEL process execution chains from Windows Event ID 4688 as a directed graph (Parent -> Child)
          LEARN the normal graph structure over a 30-day period
          ALERT on the creation of new or rare edges where the child is a discovery utility and the parent is an unusual process
  - question: Is an unauthorized host sending a high volume or wide variety of ICS protocol discovery requests?
    context: This question is highly specific to OT environments and focuses on detecting network discovery conducted via native ICS protocols (e.g., Modbus, S7comm, EtherNet/IP). It identifies hosts not on an authorized list that are sending a large number of discovery-related function codes to many different ICS devices. This behavior is a strong indicator that an adversary is attempting to enumerate and identify critical control system assets.
    answer_sources:
      - Zeek conn.log
      - Zeek s7comm.log
      - Zeek enip.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Control System LAN, connections to PLCs and RTUs, SCADA Server Network, Field Device Network
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH ICS protocol logs (s7comm, enip, modbus, dnp3)
          WHERE source_ip is NOT in 'Authorized ICS Management Hosts' AND function is a discovery type
          AGGREGATE by source_ip over a 1-minute window
          ALERT if unique destination devices > 5 OR total discovery requests > 10
  - question: Is a host's usage of ICS discovery function codes deviating from its own established baseline?
    context: This question applies behavioral analysis to ICS protocol traffic. It establishes a baseline for each host, tracking the rate and variety of ICS function codes it typically uses. An alert is triggered if a host, particularly an unauthorized one, suddenly starts using discovery-related functions it has never used before, or if the proportion of its discovery traffic to normal operational traffic spikes. This helps detect reconnaissance activity that might be missed by static rules.
    answer_sources:
      - Zeek conn.log
      - Zeek s7comm.log
      - Zeek enip.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Control System LAN, connections to PLCs and RTUs, SCADA Server Network, Field Device Network
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each source_ip:
            CALCULATE 30-day baseline of ICS function code usage and discovery-to-total request ratio
          ALERT if a host uses new discovery function codes not seen in its baseline
          ALERT if the ratio of discovery requests to total requests exceeds 3 standard deviations above its mean
  - question: Can machine learning clustering identify hosts exhibiting anomalous ICS protocol communication patterns?
    context: This question leverages unsupervised machine learning for OT network monitoring. By using a clustering algorithm like DBSCAN on features extracted from ICS protocol logs (e.g., protocol type, function code, destination count), the system can group normal communications into clusters. Any activity that falls outside of these defined clusters is treated as an anomaly or outlier, providing a powerful way to detect novel or unusual reconnaissance activity without pre-existing signatures.
    answer_sources:
      - Zeek conn.log
      - Zeek s7comm.log
      - Zeek enip.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Control System LAN, connections to PLCs and RTUs, SCADA Server Network, Field Device Network
    range: last 90 days
    queries:
      - pseudocode: |
          EXTRACT features (protocol, function_code, unique destination count) from ICS logs per source host
          TRAIN a DBSCAN clustering model on at least 30 days of data to define normal clusters
          APPLY model to new data and ALERT on any data points classified as noise/outliers
  - question: Is a process on a host generating a high number of failed network connections to many different destinations, and is that process an unauthorized scanning tool?
    context: This question aims to identify network sweeps by detecting their primary symptom: a large number of failed connection attempts. The analytic first detects a high rate of failures (TCP Resets, ICMP Unreachables) at the network level from a single source. It then pivots to the source host's logs to correlate the network activity with the specific process that caused it, and checks if that process is a known, legitimate tool or something potentially malicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek icmp.log
      - Engineering Workstations, HMIs, ICS Network Segments, Servers within the OT network
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH Zeek conn.log for failed connections ('REJ', 'RSTO') and icmp.log for 'Destination Unreachable'
          GROUP by source_ip in 60-second windows
          IF failed attempts > 50 AND unique destinations > 20:
            PIVOT to host logs (Event ID 4688/5156) for that source_ip and timestamp
            IDENTIFY responsible process
            ALERT if process is NOT on 'Known Good Scanners' watchlist
  - question: Does a specific process exhibit an anomalously low connection success ratio compared to its historical baseline?
    context: This question provides a host-centric method for detecting scanning behavior. Instead of just counting failed connections, it calculates a 'Connection Success Ratio' for each running process. It establishes a baseline for what a normal ratio looks like for common processes. A significant drop below this baseline, especially when coupled with a high absolute number of failures, strongly suggests the process is performing a network sweep.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek icmp.log
      - Engineering Workstations, HMIs, ICS Network Segments, Servers within the OT network
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each process on a host, correlate with network logs to calculate Connection Success Ratio (Successful/Total)
          ESTABLISH a 30-day baseline for this ratio for common processes
          ALERT if a process's current ratio drops more than 3 standard deviations below its mean, especially if total failed connections > 50
  - question: Can a time-series anomaly detection model identify unusual spikes in failed network connections originating from a critical host?
    context: This question applies time-series forecasting to network security. By creating a model (like Prophet or LSTM) based on a host's historical rate of failed connections, the system can predict the expected number of failures for any given time. An alert is triggered when the actual number of failures significantly exceeds the model's prediction, indicating a sudden burst of activity consistent with a network scan. This provides a dynamic and sensitive method for detecting sweeps.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek icmp.log
      - Engineering Workstations, HMIs, ICS Network Segments, Servers within the OT network
    range: last 90 days
    queries:
      - pseudocode: |
          CREATE a time-series of failed connection counts per minute for a critical host
          TRAIN a forecasting model (e.g., Prophet) on historical data
          ALERT when the actual count of failures significantly exceeds the forecasted upper confidence bound
          Upon alert, CORRELATE with host process logs to find the cause