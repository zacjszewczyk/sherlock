name: T0817: Drive-by Compromise
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: "Addresses the question: Has an adversary compromised a host in our ICS environment via a drive-by attack? (PIR). This playbook focuses on detecting drive-by compromises by identifying several key indicators of attack. These include web browsers spawning anomalous child processes (like command shells or script interpreters), network traffic directed to malicious or unusual domains, downloads of executable or suspicious files, and the use of anomalous User-Agent strings in outbound web requests. The playbook provides investigative questions and queries to analyze endpoint and network data for these activities."
type: technique
related:
  - TA0108: Initial Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a web browser process spawning a suspicious child process like a command shell or script interpreter?
    context: This question aims to detect the initial execution payload following a browser exploit. A common pattern in drive-by attacks is for the compromised browser process to launch a command shell (cmd.exe, powershell.exe) or a script interpreter (wscript.exe, cscript.exe) to run malicious code. This is a high-fidelity, signature-based check for known-bad process relationships originating from a browser.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek conn.log
      - Endpoint hosts including Engineering Workstations, Human-Machine Interface (HMI) terminals, operator consoles, and data historians within the Supervisory Control (Purdue Level 2) and Site Operations (Purdue Level 3) networks where process creation logs are collected.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events
          WHERE parent_process_name IN ('chrome.exe', 'iexplore.exe', 'msedge.exe', 'firefox.exe')
          AND child_process_name IN ('cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'mshta.exe')
          OR command_line CONTAINS ('mshta.exe http://', 'rundll32.exe javascript:')
  - question: Has a web browser spawned a statistically rare child process or a child process with an unusually complex command line?
    context: This question seeks to find novel or obfuscated execution patterns that signature-based rules might miss. By establishing a baseline of normal parent-child process relationships for specific asset groups (e.g., HMIs), analysts can hunt for statistical outliers. A browser spawning a process that is very rare for that group of assets, or a process launched with a highly complex (high-entropy) command line, can indicate an adversary trying to evade detection.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek conn.log
      - Endpoint hosts including Engineering Workstations, Human-Machine Interface (HMI) terminals, operator consoles, and data historians within the Supervisory Control (Purdue Level 2) and Site Operations (Purdue Level 3) networks where process creation logs are collected.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Baseline parent-child relationships for each asset group over 30 days.
          // Step 2: In new data, search for process creation events
          SEARCH process_creation_events
          WHERE parent_process_name IS a web browser
          AND frequency of (parent_process_name, child_process_name) for asset_group < 1st percentile
          OR entropy of command_line > (mean_entropy for pair + 3 * stdev_entropy for pair)
  - question: Does a process creation event involving a web browser have characteristics indicative of malicious activity according to a machine learning model?
    context: This question applies a machine learning model to score the potential maliciousness of a browser-spawned process. This approach is more robust against novel attack techniques than static rules or simple statistics. By training a model on features like process names, paths, command-line properties, and parent integrity, the system can identify complex patterns of maliciousness and generate high-confidence alerts, especially on critical ICS assets.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek conn.log
      - Endpoint hosts including Engineering Workstations, Human-Machine Interface (HMI) terminals, operator consoles, and data historians within the Supervisory Control (Purdue Level 2) and Site Operations (Purdue Level 3) networks where process creation logs are collected.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Apply a pre-trained Random Forest model to real-time process creation events
          // where the parent is a web browser.
          SCORE process_creation_events with ML_model
          ALERT where score > 0.85 AND asset_is_critical
  - question: Is a host communicating with a known-malicious domain, a newly registered domain, or using a suspicious TLS certificate?
    context: This question focuses on identifying network connections to adversary infrastructure. After a compromise, malware often needs to call back to a command and control (C2) server. This query checks for connections to domains on threat intelligence lists, domains created very recently (a common tactic for attackers), or connections using weak or fraudulent TLS certificates, all of which are strong indicators of malicious activity.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek x509.log
      - Network traffic sensors at egress points, internal DNS resolvers, ICS network gateways, and the DMZ between IT and OT networks (Purdue Level 3.5) where Zeek or equivalent network security monitoring logs are generated.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH zeek_logs
          JOIN dns.log, conn.log, x509.log on UID
          WHERE dns.query IN threat_intel_domains
          OR domain_registration_date < 30 days ago
          OR x509.certificate.self_signed = true
          OR x509.certificate.key_alg = 'rsa' AND x509.certificate.key_length < 2048
  - question: Is there evidence of Domain Generation Algorithm (DGA) activity or non-standard TLS clients/servers in the network traffic?
    context: This question aims to detect more advanced C2 communication methods. Some malware families use Domain Generation Algorithms (DGAs) to create a large number of random-looking domain names to contact their C2 server. Calculating the entropy of DNS queries can detect this. Additionally, malware may use custom TLS libraries, resulting in unique TLS fingerprints (JA3/JA3S). Alerting on rare or new fingerprints can uncover these non-standard tools.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek x509.log
      - Network traffic sensors at egress points, internal DNS resolvers, ICS network gateways, and the DMZ between IT and OT networks (Purdue Level 3.5) where Zeek or equivalent network security monitoring logs are generated.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH zeek_logs
          WHERE shannon_entropy(dns.query) > 98th percentile
          OR ja3_hash NOT IN baseline_ja3_hashes
          OR frequency of ja3s_hash < 1st percentile
  - question: Are multiple internal assets communicating with the same set of rare external domains, suggesting a coordinated watering hole attack?
    context: This question uses graph analysis to identify targeted attacks. A watering hole attack involves compromising a website likely to be visited by a specific group of targets. If multiple critical assets (like several HMIs) are all observed communicating with the same rare or suspicious external domain, it strongly suggests they were victims of a coordinated attack and should be investigated as a group.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek x509.log
      - Network traffic sensors at egress points, internal DNS resolvers, ICS network gateways, and the DMZ between IT and OT networks (Purdue Level 3.5) where Zeek or equivalent network security monitoring logs are generated.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Build a bipartite graph of (internal_host -> external_domain).
          // Step 2: Apply a community detection algorithm (e.g., Louvain).
          // Step 3: ALERT on communities containing multiple critical assets
          // and rare external domains.
  - question: Did a host download a file with a known executable type or a file hash with a bad reputation?
    context: This question seeks to detect the delivery of a malicious payload file. Drive-by attacks often culminate in the browser downloading and executing a file. This query looks for files transferred over the network with obviously dangerous types (like executables or scripts) and cross-references the file's hash with threat reputation services to see if it's known-malicious.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 11 (Sysmon)
      - Network egress points, internet gateway proxy servers, ICS network gateways, and local download folders (e.g., `%USERPROFILE%\\Downloads`) on engineering workstations and HMIs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH zeek_files_log
          WHERE mime_type = 'application/x-dosexec' OR file_extension IN ('.ps1', '.vbs')
          AND query_reputation(file_hash) shows > 1 detection
          THEN correlate file_hash with sysmon_event_11 on endpoint
  - question: Did a host download a file from a domain that does not typically serve that file type, or is the file's content unusually random or packed?
    context: This question looks for anomalies in file downloads that suggest malicious intent. An adversary might compromise a legitimate website to serve malware. This query detects when a domain that usually serves harmless content (like images) suddenly serves an executable. It also analyzes the file's byte content for high entropy, which is a common sign of packing or encryption used to obfuscate malware.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 11 (Sysmon)
      - Network egress points, internet gateway proxy servers, ICS network gateways, and local download folders (e.g., `%USERPROFILE%\\Downloads`) on engineering workstations and HMIs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Baseline MIME types per source domain.
          // Step 2: Search for new downloads.
          SEARCH zeek_http_log
          WHERE downloaded_mime_type is anomalous for source_domain
          OR byte_entropy(downloaded_file) > (mean_entropy for mime_type + 3 * stdev_entropy)
  - question: Does a file download event have characteristics indicative of malicious activity according to a machine learning model?
    context: This question leverages a machine learning model to provide a holistic assessment of a file download. The model can analyze a combination of factors—such as the reputation of the source domain, properties of the URL, the file's size and type, and its content entropy—to produce a single maliciousness score. This allows for the detection of suspicious downloads that may not trigger any single rule but are suspect when viewed in combination.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 11 (Sysmon)
      - Network egress points, internet gateway proxy servers, ICS network gateways, and local download folders (e.g., `%USERPROFILE%\\Downloads`) on engineering workstations and HMIs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Apply a pre-trained Gradient Boosting model to real-time file download events.
          SCORE file_download_events with ML_model
          ALERT where score > 0.80
  - question: Is a host using a User-Agent string known to be associated with malware, or is the User-Agent inconsistent with the process generating the traffic?
    context: This question looks for deception in the User-Agent (UA) string of an HTTP request. Adversaries may use specific UA strings associated with their tools, which can be detected with a watchlist. More powerfully, they may try to masquerade their tool's traffic (e.g., from powershell.exe) with a legitimate browser UA. By correlating network logs with endpoint process logs, this query can spot that inconsistency, which is a strong signal of a malicious process.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 3 (Sysmon)
      - Endpoint hosts such as Engineering workstations and HMIs where Sysmon logs are collected, and network gateways (corporate internet gateway, ICS network gateways) where Zeek logs are generated.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH zeek_http_log
          WHERE user_agent IN malicious_ua_watchlist
          THEN correlate conn_tuple with sysmon_event_3 on endpoint
          ALERT IF sysmon.process_name is not a browser
  - question: Is a host using a User-Agent string that is statistically rare for its asset group or has an unusual length?
    context: This question hunts for anomalous User-Agent (UA) strings without relying on known-bad signatures. An adversary's custom C2 tool might use a unique or malformed UA. By baselining all UAs in the environment, analysts can flag any that are exceptionally rare or have an abnormal length. This statistical approach is effective for detecting novel tools or beaconing behavior from specific groups of assets.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 3 (Sysmon)
      - Endpoint hosts such as Engineering workstations and HMIs where Sysmon logs are collected, and network gateways (corporate internet gateway, ICS network gateways) where Zeek logs are generated.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Baseline UA frequency and length over 30 days.
          // Step 2: Search new http logs.
          SEARCH zeek_http_log
          WHERE frequency of user_agent for asset_group < 5th percentile
          OR length of user_agent is statistical outlier (<1st or >99th percentile)
  - question: Is a host using a User-Agent string that is structurally different from all normal User-Agents seen in the environment, as determined by a machine learning model?
    context: This question uses an advanced machine learning technique (an autoencoder) to detect novel and malformed User-Agent (UA) strings. The model learns the structure of all normal UAs in the environment. When it is fed a new UA, it attempts to reconstruct it. A high "reconstruction error" means the new UA does not conform to the learned normal structures, indicating it is a high-fidelity anomaly that could be a sign of a new malicious tool.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 3 (Sysmon)
      - Endpoint hosts such as Engineering workstations and HMIs where Sysmon logs are collected, and network gateways (corporate internet gateway, ICS network gateways) where Zeek logs are generated.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Apply a trained autoencoder model to new User-Agent strings.
          CALCULATE reconstruction_error for each user_agent
          ALERT where reconstruction_error > 99th percentile of training errors