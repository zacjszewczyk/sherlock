name: T0839: Module Firmware
id: 5a8a65e4-2399-4c2d-9b57-619f5a04c10c
description: This playbook helps to determine if an adversary is establishing persistence on control system devices via unauthorized firmware modifications or attempting to impair process control by manipulating module firmware on critical PLCs or RTUs. This is achieved by monitoring for unauthorized firmware transfers, analyzing file characteristics for anomalies, detecting post-transfer device failures, and identifying the unauthorized use of firmware update utilities or subsequent malicious network behavior.
type: technique
related:
- TA0110: Persistence
- TA0106: Impair Process Control
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Is an unauthorized host attempting to transfer firmware to a critical ICS asset, or is a transfer happening outside a scheduled maintenance window?
  context: This question aims to detect the initial stage of an unauthorized firmware modification by monitoring network traffic for file transfers that violate established policies. Detecting transfers from non-whitelisted sources (not an Engineering Workstation) or at unusual times (outside maintenance windows) provides an early warning of potential compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Zeek ftp.log
  - Zeek ssh.log
  - Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH Zeek conn.log AND files.log
      WHERE (conn.service IN ('tftp', 'ftp', 'ssh') AND conn.destination_ip IN [critical_ics_assets])
      AND (conn.source_ip NOT IN [ews_whitelist] OR conn.timestamp NOT IN [maintenance_windows])
      AND (files.extension IN ('.bin', '.fw', '.hex') OR files.mime_type = 'application/octet-stream')
      CORRELATE conn.uid with files.conn_uid
- question: Is a detected firmware file transfer anomalously large or small compared to legitimate updates for that device model, or is a device receiving an unusually high frequency of updates?
  context: This question focuses on identifying malicious firmware by analyzing its size. Adversarial firmware may be padded or stripped of features, resulting in a file size that deviates significantly from the norm. A sudden increase in the frequency of updates to a single device is also a strong indicator of compromise or repeated malicious attempts.
  answer_sources:
  - Zeek files.log
  - Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).
  range: last 90 days
  queries:
  - pseudocode: |
      // Baseline and Alert on anomalous file size
      BASELINE mean and stddev of 'total_bytes' from historical legitimate firmware updates per device model.
      ALERT on new firmware transfers where Z-score of 'total_bytes' > 3.0.
      // Baseline and Alert on anomalous frequency
      BASELINE 99th percentile of 7-day rolling count of transfers per device.
      ALERT if daily count exceeds baseline.
- question: Does the overall network activity related to firmware transfers deviate from established normal patterns, suggesting a coordinated or novel attack?
  context: This question uses machine learning to establish a sophisticated baseline of normal network behavior related to firmware updates. It can detect subtle or complex anomalies that rule-based methods might miss, such as changes in connection frequency, data volume, and source IP diversity, which could indicate a widespread or stealthy attack campaign.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).
  range: last 90 days
  queries:
  - pseudocode: |
      // Train model on 90+ days of normal data
      TRAIN LSTM autoencoder model on features like hourly connection counts, total bytes transferred, and unique source IPs on firmware-related ports (21, 22, 69).
      // Detect anomalies in real-time
      CALCULATE reconstruction error for live traffic.
      ALERT if error exceeds 99th percentile of training errors.
- question: Has a critical ICS device stopped its normal periodic network communication shortly after a suspected unauthorized firmware transfer?
  context: This question tries to confirm the impact of a malicious firmware update. A device going silent (e.g., stopping its heartbeat poll) within minutes of a firmware transfer is a strong indicator that the new firmware has caused the device to crash, hang, or "brick," effectively causing a denial of service.
  answer_sources:
  - Zeek conn.log
  - Zeek dnp3.log
  - Zeek modbus.log
  - Zeek cip.log
  - Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).
  range: last 90 days
  queries:
  - pseudocode: |
      // Detect device timeout
      DEFINE expected heartbeat interval for each critical asset.
      TRIGGER timeout_event if no traffic is seen from the asset for > 3x the interval.
      // Correlate with firmware alert
      SEARCH for a firmware-related alert for the same asset IP within the last 15 minutes.
      ESCALATE to high-severity if both conditions are met.
- question: Is a critical ICS device exhibiting a sudden drop in overall network traffic or an unusually long connection duration, potentially indicating a post-firmware update failure or unstable state?
  context: This question looks for secondary indicators of a device failure. A significant, sudden drop in traffic volume can signal a non-functional device. Conversely, an abnormally long-lasting connection might indicate a process has hung after an update, leaving a network session open indefinitely.
  answer_sources:
  - Zeek conn.log
  - Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).
  range: last 90 days
  queries:
  - pseudocode: |
      // Traffic drop detection
      BASELINE mean and stddev of total network bytes per 1-minute interval for each device.
      ALERT if current 1-minute total drops more than 3 stddev below the mean.
      // Long duration connection detection
      BASELINE 95th percentile of connection duration for each device.
      ALERT if a new connection's duration exceeds this baseline.
- question: Can machine learning models predict that a device is in a 'failed' or 'rebooting' state based on its network traffic patterns immediately following a firmware transfer?
  context: This question applies advanced analytics to formally classify a device's operational state. By training a model on features indicative of instability (e.g., connection states, duration, byte counts), it can automatically detect transitions to a failed or rebooting state, providing a more confident assessment of a firmware update's negative impact.
  answer_sources:
  - Zeek conn.log
  - Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).
  range: last 90 days
  queries:
  - pseudocode: |
      // Train model using historical data
      TRAIN a classification (e.g., Random Forest) or state-based (e.g., HMM) model on labeled or unlabeled Zeek conn.log data.
      // Detect state change
      APPLY model to real-time traffic following a firmware transfer event.
      ALERT when the model's predicted state for the device transitions to 'failed' or 'rebooting'.
- question: Is a known firmware update utility being executed on an unauthorized host, or is it targeting an unauthorized device?
  context: This question shifts focus from the network to the host, looking for the malicious initiation of a firmware update. Running a flashing utility on a machine that isn't a designated Engineering Workstation (EWS) is highly suspicious. Similarly, an authorized EWS targeting a device outside its management scope could indicate misuse of legitimate tools.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH Windows Event Logs (ID 4688)
      WHERE NewProcessName IN [firmware_utility_list]
      AND ((Computer NOT IN [ews_hostname_whitelist]) OR (CommandLine_target_ip NOT IN [managed_devices_for_that_ews]))
      ALERT
- question: Is a firmware utility being run by an unauthorized user, or with unusually structured command-line arguments that might indicate obfuscation?
  context: This question looks for behavioral anomalies in the use of legitimate tools. An administrator who never uses a firmware tool suddenly running it is suspicious. Likewise, command-line arguments that are unusually complex or random (high entropy) compared to the normal, simple syntax could be a sign of an attacker trying to hide their actions.
  answer_sources:
  - Windows Event ID 4688
  - Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.
  range: last 90 days
  queries:
  - pseudocode: |
      // User Anomaly Detection
      BASELINE historical execution count of each firmware utility per user.
      ALERT if a utility is run by a user with a zero historical count.
      // Command-Line Anomaly Detection
      BASELINE Shannon entropy of the CommandLine string for each utility.
      ALERT if a new execution's entropy deviates > 2 stddev from the mean.
- question: Does the execution of a firmware utility represent a significant behavioral anomaly when compared to all historical legitimate executions?
  context: This question uses an unsupervised machine learning model (Isolation Forest) to detect outlier process executions. The model learns the multi-dimensional profile of "normal" executions (user, parent process, command line, etc.) and can flag any new execution that is highly dissimilar, catching novel or complex attack variations.
  answer_sources:
  - Windows Event ID 4688
  - Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.
  range: last 90 days
  queries:
  - pseudocode: |
      // Train model on historical process data
      TRAIN Isolation Forest model on features from historical Event ID 4688 logs (ProcessName, ParentProcessName, SubjectUserName, Computer, tokenized CommandLine).
      // Detect anomalies in real-time
      SCORE real-time executions of firmware utilities.
      ALERT if an execution receives an anomaly score in the top 1%.
- question: Following a firmware update, is the ICS device initiating or receiving connections that violate its established 90-day communication baseline?
  context: This question seeks to identify new, unauthorized functionality embedded in the firmware, such as a C2 channel or a lateral movement tool. ICS devices typically have very predictable communication patterns. Any new connection (a new IP, port, or protocol) after a firmware update is a strong indicator of malicious code execution.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Zeek x509.log
  - PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).
  range: last 90 days
  queries:
  - pseudocode: |
      // Generate and maintain baseline
      FOR each critical ICS asset, CREATE a whitelist of unique 5-tuples (src_ip, dst_ip, dst_port, proto, service) from the last 90 days of Zeek conn.log data.
      // Detect violations
      ALERT on any new connection to/from the asset where the 5-tuple is not in the whitelist.
- question: Is an ICS device suddenly attempting to communicate on many new ports, or is its ratio of failed-to-successful connections spiking, potentially indicating scanning or C2 activity?
  context: This question looks for behaviors symptomatic of malicious post-compromise activity. A sudden increase in the number of unique ports a device tries to connect to can indicate network scanning. A spike in connection failures (like TCP resets) can suggest attempts to connect to non-existent C2 servers or failed lateral movement.
  answer_sources:
  - Zeek conn.log
  - PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).
  range: last 90 days
  queries:
  - pseudocode: |
      // New port scan detection
      BASELINE the 99th percentile of 'new' unique destination ports per hour for each asset.
      ALERT if the current hourly count exceeds the baseline.
      // Connection failure ratio detection
      BASELINE mean and stddev of failed-to-successful connection state ratio.
      ALERT if the ratio spikes more than 3 stddev above its baseline.
- question: Does a new connection from an ICS device fundamentally alter its position or role within the overall network communication graph, as identified by a graph-based neural network?
  context: This is a highly advanced method that models the entire network as a graph to understand relationships between devices. A malicious firmware update could cause a device to behave so differently (e.g., a PLC starts acting like a management server) that its mathematical representation (embedding) in the graph changes significantly, which can be flagged as a major anomaly.
  answer_sources:
  - Zeek conn.log
  - PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).
  range: last 90 days
  queries:
  - pseudocode: |
      // Train Graph Neural Network
      TRAIN a graph-based model (e.g., GraphSAGE) on historical Zeek conn.log data to learn node embeddings representing normal communication patterns.
      // Detect anomalous connections
      SCORE new connections based on how they alter the graph structure or node embeddings.
      ALERT if a new connection from a PLC receives an anomaly score above a predefined threshold.