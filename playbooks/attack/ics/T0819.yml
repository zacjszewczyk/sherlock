name: T0819: Exploit Public-Facing Application
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: >
  This playbook helps determine if an adversary is attempting to exploit public-facing ICS applications for initial access. It focuses on identifying suspicious network traffic patterns, unauthorized process execution, anomalous outbound connections indicating lateral movement, and evidence of web shell or tool implantation. Key indicators include statistically significant increases in connection attempts, connections from malicious IPs, brute-force patterns, use of uncommon ICS function codes, spawning of unauthorized child processes like shells or reconnaissance tools, outbound connections to internal ICS segments that violate firewall rules, and the creation of anomalous files in web-accessible directories.
type: technique
related: "TA0108: Initial Access"
contributors: "Zachary Szewczyk, Ask Sage"
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have we observed network traffic or login patterns indicative of a known exploit, reconnaissance, or brute-force attempt against our public-facing ICS applications?
    context: >
      This question aims to detect initial attack attempts by searching for specific, known malicious patterns. It involves looking for web exploit signatures (like SQLi) in HTTP traffic, checking source IPs against threat intelligence, monitoring for unauthorized ICS protocol commands, and identifying successful logins that immediately follow a series of failed attempts from the same source. A positive finding is a strong indicator of a targeted attack.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek notice.log
      - Zeek weird.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications (e.g., Historians, Web HMIs, Remote Access Gateways, OPC UA Servers, SCADA Servers, ICS API Gateways)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          SEARCH http.log FOR URI or request_body MATCHING (SQLi_regex OR command_injection_regex);
          SEARCH conn.log WHERE source_ip IN threat_intel_list;
          SEARCH modbus.log WHERE function_code NOT IN approved_list;
          CORRELATE failed_logins (EventID 4625) with successful_login (EventID 4624) FROM same_ip WITHIN 5_minutes;
  - question: Is there a statistical anomaly in inbound connection patterns, such as an unusual volume of connections, high-entropy URIs, or rapid-fire connection attempts, suggesting automated scanning or exploit tooling?
    context: >
      This question focuses on detecting automated or programmatic attacks that may not use a known signature but deviate from normal user behavior. By baselining normal connection counts, URI complexity (entropy), and connection timing, we can spot outliers that indicate activities like scanning, enumeration, or fuzzing. A low inter-arrival time, for instance, is a classic sign of a script rather than a human.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek notice.log
      - Zeek weird.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications (e.g., Historians, Web HMIs, Remote Access Gateways, OPC UA Servers, SCADA Servers, ICS API Gateways)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          FOR each_port, BASELINE inbound_connections_per_IP over 30_days;
          ALERT IF connections_from_IP > (mean + 3*std_dev) in 15_min_window;
          FOR each_IP, BASELINE http_uri_entropy;
          ALERT IF entropy > (mean + 2*std_dev);
          FOR each_IP, ANALYZE conn.log inter-arrival_time;
          ALERT IF mean_inter-arrival_time < 1_sec FOR > 60_seconds;
  - question: Can machine learning models detect anomalous inbound network traffic or connections that deviate from established normal behavior, even if they don't match specific rules?
    context: >
      This question leverages machine learning to find novel or unknown threats. Time-series models can detect unusual spikes or dips in connection volume and data transfer, while classification models can learn the multi-dimensional characteristics of 'normal' connections (e.g., duration, packet counts, state) and flag any that differ significantly, potentially catching a sophisticated, low-and-slow attack.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek notice.log
      - Zeek weird.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications (e.g., Historians, Web HMIs, Remote Access Gateways, OPC UA Servers, SCADA Servers, ICS API Gateways)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          APPLY time-series_model (ARIMA) to connection_counts and bytes_transferred per_port;
          ALERT IF observed_value > confidence_interval;
          APPLY anomaly_detection_model (IsolationForest) to conn.log features (bytes, duration, pkts);
          ALERT IF connection_anomaly_score is high;
  - question: Has a public-facing ICS application spawned an unauthorized or suspicious child process, such as a command shell or a tool with malicious command-line arguments?
    context: >
      This question seeks to identify post-exploitation activity where an attacker, having compromised an application, attempts to execute code on the server. Spawning a shell (cmd.exe, powershell.exe) from a web server process is a classic indicator of compromise. This check relies on a strict whitelist of known-good behavior and looks for suspicious command-line arguments (like base64 encoding or invoke-expression) that are often used to obfuscate malicious payloads.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek http.log
      - Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ) located in the Purdue Level 3.5 DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          SEARCH process_creation_events (Sysmon_ID_1 OR WinEvent_4688);
          ALERT IF (ParentProcess, ChildProcess) NOT IN whitelist;
          ALERT IF ChildProcess IN (powershell.exe, cmd.exe, bitsadmin.exe);
          ALERT IF CommandLine CONTAINS ('-enc', 'invoke-expression', 'download');
          CORRELATE alert with suspicious_inbound_network_connection WITHIN 5_minutes;
  - question: Have there been any statistically rare process creation events or command-line executions that deviate from historical norms?
    context: >
      This question aims to find unusual behavior by focusing on rarity. An action that has never or rarely been seen before, such as a specific service account suddenly launching a specific executable, is highly suspicious. Similarly, a sudden spike in the complexity (entropy) of command-line arguments can indicate the use of obfuscated or randomized commands, a common attacker technique.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek http.log
      - Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ) located in the Purdue Level 3.5 DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          FOR each_process_creation_event, CALCULATE frequency of (Parent, Child, User) tuple;
          ALERT IF frequency is in bottom 1st_percentile;
          CALCULATE rolling_entropy of CommandLine values;
          ALERT IF entropy > (mean + 2*std_dev);
  - question: Can a machine learning model identify anomalous process creation events based on a combination of features like parent/child process names, user context, and command-line characteristics?
    context: >
      This question uses a machine learning approach to detect suspicious process activity that might be missed by simple rule-based methods. By training a model on multiple features simultaneously (e.g., which user ran what process from where, with what kind of command), it can identify subtle combinations of factors that indicate a deviation from baseline behavior, providing a more robust detection capability for post-exploitation actions.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek http.log
      - Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ) located in the Purdue Level 3.5 DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          APPLY anomaly_detection_model (IsolationForest) to process_creation_event features (Parent, Child, User, cmd_line_length, etc.);
          ALERT IF event_anomaly_score is high, especially if user is service_account;
  - question: Has a public-facing DMZ server initiated an outbound connection to the internal ICS network that violates the established security policy or whitelist?
    context: >
      This question is critical for detecting lateral movement from a compromised DMZ asset into the more sensitive control systems network. A strict, "default-deny" policy should be in place. Any connection attempt that is not on the explicit whitelist—whether it's to an unapproved IP, port, or using an unapproved protocol—is a high-fidelity indicator of a breach and must be investigated immediately. This includes monitoring for unauthorized use of ICS-specific write/stop commands.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          SEARCH outbound_connections (Zeek_conn.log OR WinEvent_5156) FROM DMZ_server TO internal_ICS_network;
          ALERT IF (SourceIP, DestIP, DestPort, Protocol) NOT IN whitelist;
          SEARCH outbound_ICS_traffic (modbus.log) FROM DMZ_server;
          ALERT IF command is write/stop AND NOT IN operational_whitelist;
  - question: Have there been statistical anomalies in outbound connection patterns from DMZ servers, such as connections to new destinations or connections with unusually long durations?
    context: >
      This question provides a secondary check for lateral movement by baselining normal communication patterns. Even if an attacker uses an allowed port, they might connect to a new, unauthorized host. The Jaccard index helps quantify this "newness" by comparing the set of recent connections to the historical baseline. Similarly, an unusually long connection duration could indicate an interactive session or large data transfer, which deviates from typical, short-lived operational communication.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          BASELINE set of unique (DestIP, Port, Protocol) for each_DMZ_server;
          CALCULATE Jaccard_similarity between recent_connections and baseline;
          ALERT IF similarity_score < 0.7;
          BASELINE connection_duration for approved_paths;
          ALERT IF new_connection_duration > 99th_percentile;
  - question: Does graph analysis reveal anomalous communication patterns, such as a DMZ server establishing new, persistent connections to a community of critical ICS assets it doesn't normally interact with?
    context: >
      This question uses advanced graph analytics to visualize and detect changes in network-wide communication flows. By algorithmically grouping hosts into "communities" based on their normal traffic, we can immediately spot when a host from one community (like the DMZ) starts talking to a different, sensitive community (like PLCs). This is a powerful way to visualize and alert on potential lateral movement pathways that might be missed by single-connection analysis.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          BUILD communication_graph from network_logs;
          RUN community_detection_algorithm (Louvain) to establish baseline_communities;
          MONITOR for new, persistent edges between DMZ_server_node and critical_asset_community (e.g., 'PLC_community');
          ALERT on anomalous community shifts;
  - question: Has a potential web shell or malicious tool been written to a web-accessible directory, especially if the file creation is temporally correlated with an HTTP POST request?
    context: >
      This question aims to detect the implantation of a web shell, which is a common outcome of exploiting a public-facing web application. The logic is to look for file creation events (especially for scriptable files like .aspx, .php) in web directories and correlate them with recent file uploads (HTTP POSTs) from external sources. A match between these two events is a very strong signal that a web shell has been successfully planted.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Zeek http.log
      - Zeek files.log
      - Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          MONITOR file_creation_events (Sysmon_ID_11) in web_directories;
          SCAN new files with YARA_rules for web_shells;
          CORRELATE file_creation with preceding HTTP_POST (from http.log) to same_host WITHIN 120_seconds;
          RAISE critical_alert IF file_extension is scriptable AND HTTP_POST contains file_upload;
  - question: Have any newly created files in web directories exhibited anomalous characteristics, such as an unusually small file size or high entropy content?
    context: >
      This question looks for statistical indicators of malicious files. A very small web shell file might fall outside the normal size distribution for legitimate files in a directory. More importantly, high Shannon entropy in a file's content is a strong indicator that the file is either encrypted or packed, a common technique used by attackers to obfuscate their tools and evade signature-based antivirus.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Zeek http.log
      - Zeek files.log
      - Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          BASELINE file_sizes for scriptable_extensions in web_directories;
          ALERT IF new_file_size < 5th_percentile;
          USING Zeek files.log, CALCULATE entropy for new_file_contents;
          ALERT IF entropy > 98th_percentile for that mime_type;
  - question: Can a machine learning model, trained on file and network event features, automatically classify newly created files as potentially malicious?
    context: >
      This question applies machine learning to automate the detection of malicious file drops. By training a model on various features—such as the file's path, its extension, the process that created it, and whether it was preceded by a network event like an HTTP POST—it can learn to distinguish between benign and malicious file creation events with a higher degree of accuracy and automation than manual rule-setting alone.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Zeek http.log
      - Zeek files.log
      - Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >
          APPLY classification_model (GradientBoosting) to file_creation_events;
          FEATURES: file_path_depth, extension, creating_process, filename_entropy, preceded_by_HTTP_POST_flag;
          ALERT IF file is classified as malicious with high_probability;