name: T0814: Denial of Service
id: 3a17e0c8-8a8e-4f0e-9b2a-6c8d7f1e9c0b
description: |
  Investigates whether an adversary is attempting to disrupt Industrial Control System (ICS) device functionality through a Denial of Service (DoS) attack. This can manifest as a sustained, anomalous increase in network traffic volume or connection rates directed at critical devices, correlated with a spike in ICS protocol-specific errors. It can also be observed as an unusual rate of connection rejections from a critical device, originating from a small number of source IPs. Additionally, this playbook looks for unexpected crashes or service terminations on critical Windows-based ICS hosts that occur shortly after a significant surge in network traffic to that host.
type: technique
related:
  - TA0107: Inhibit Response Function
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a critical ICS device experiencing a high volume of connections and a burst of protocol-specific errors simultaneously?
    context: |
      This question aims to detect a common DoS pattern where an attacker floods a device with connection requests, causing it to generate errors as it becomes overwhelmed. Correlating a high connection rate (e.g., >1000 connections/minute) on known ICS ports (502, 20000, 44818, 102) with a simultaneous spike in protocol errors (like Modbus exception codes) from the same device provides a strong indicator of a targeted DoS attack rather than a simple network misconfiguration or benign traffic spike.
    answer_sources:
      - Zeek conn.log
      - Zeek modbus.log
      - Zeek ether_ip.log
      - Zeek dnp3.log
      - Zeek s7comm.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ALERT on (COUNT(connections) > 1000 in 1_min to critical_ICS_IP on ICS_ports) AND (COUNT(protocol_errors) > threshold in 1_min from same critical_ICS_IP)
  - question: Are network traffic metrics for a critical ICS device exceeding historical baselines while the variety of source IPs simultaneously decreases?
    context: |
      This question seeks to identify a targeted flood attack by analyzing traffic volume against a historical baseline. A deviation from the norm (exceeding the 99th percentile for three consecutive minutes) indicates an anomaly. By also calculating the Shannon entropy of source IPs, we can distinguish a distributed, potentially benign event from a targeted attack. A sharp drop in entropy suggests that the traffic surge is originating from a very small number of sources, which is characteristic of a DoS flood.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical_ICS_device:
            CALCULATE 30d_baseline (bytes, packets, connections) per minute.
            ALERT if (current_bytes > 99p_baseline for 3_mins) OR (current_packets > 99p_baseline for 3_mins) OR (current_connections > 99p_baseline for 3_mins).
            IF alert, CALCULATE shannon_entropy(source_ips).
            IF entropy < 1.0, ESCALATE alert.
  - question: Can a machine learning model detect anomalous network traffic patterns directed at critical ICS assets that indicate a DoS attack?
    context: |
      This question leverages advanced anomaly detection to identify sophisticated or low-and-slow DoS attacks that might not trigger simple threshold-based alerts. A multivariate time-series model (like a Variational Autoencoder) learns the complex relationships between various network features (bytes, packets, connections, source IPs, error rates) during normal operation. An alert is triggered when the model's reconstruction error for live traffic surpasses a dynamic threshold, indicating a significant deviation from learned normalcy that is characteristic of an attack.
    answer_sources:
      - Zeek conn.log
      - Zeek modbus.log
      - Zeek ether_ip.log
      - Zeek dnp3.log
      - Zeek s7comm.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL = train_VAE_model(historical_network_features).
          FOR each 1-min interval:
            current_features = aggregate(bytes, packets, conns, unique_ips, error_rate).
            reconstruction_error = MODEL.get_error(current_features).
            ALERT if reconstruction_error > dynamic_threshold.
  - question: Is a critical ICS device rejecting an abnormally high number of connections from a small set of source IPs?
    context: |
      This question helps identify a resource exhaustion attack where an attacker sends connection requests that the target device actively rejects. By setting a static threshold for rejection states (REJ, RSTO, RSTR) and filtering for events where the number of unique source IPs is very low (e.g., <5), analysts can quickly pinpoint a likely DoS attempt. This method is effective for detecting simple, brute-force connection floods.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ALERT if (COUNT(connections with state in [REJ,RSTO,RSTR,RSTRH]) > 100 in 60s for a single critical_ICS_IP) AND (COUNT(unique source_ips) < 5 in same window).
  - question: Is the rate of connection rejections for a critical ICS device exceeding its historical baseline, and is the traffic dominated by a single source?
    context: |
      This question enhances the previous one by using a dynamic, baseline-driven approach instead of a static threshold. By establishing a historical norm for connection rejections (99th percentile of a 30-day baseline), this method adapts to the specific behavior of each device and reduces false positives. If an alert is triggered, automatically checking if a single source IP is responsible for the majority (>80%) of the rejections provides strong confirmation of a targeted attack.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE 30d_baseline for 1-min count of rejected_connections per device.
          ALERT if current_rejected_count > 99p_baseline.
          IF alert, CALCULATE source_ip_distribution for that interval.
          ESCALATE if one_source_ip > 80% of total attempts.
  - question: Can unsupervised machine learning identify clusters of network activity that represent a DoS attack pattern?
    context: |
      This question applies unsupervised clustering (like DBSCAN) to discover hidden DoS attack patterns without pre-defined rules or baselines. The algorithm groups connection logs based on features like destination IP, duration, bytes sent, and connection state. It can automatically identify high-density clusters of events that share characteristics of a DoS attack: all targeting a single critical device, having short durations, low/zero data transfer, and a rejection state. This is useful for finding novel or stealthy attack variations.
    answer_sources:
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          RUN DBSCAN on 5-min windows of conn_log data with features (dest_ip, duration, orig_bytes, conn_state).
          ALERT on clusters with properties: (dest_ip = critical_ICS_IP, duration is low, orig_bytes is low, conn_state is rejection).
  - question: Did a critical Windows-based ICS host crash or experience a service failure immediately following an anomalous influx of connections from a single source?
    context: |
      This question seeks to directly link a network event to a host-based impact, providing strong evidence of a successful DoS attack. By correlating a critical process termination event on a Windows host (e.g., HMI, EWS) with a preceding high-volume connection flood from a single IP address in network logs, analysts can confirm that the network anomaly was the likely cause of the system failure. The temporal link (within 60 seconds) is key to establishing causality.
    answer_sources:
      - Windows Event ID 1000
      - Windows Event ID 1002
      - Windows Event ID 7031
      - Windows Event ID 7034
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON Windows Event (1000, 1002, 7031, 7034) for critical_host:
            CHECK network logs for preceding 60s.
            ALERT if (COUNT(connections to critical_host) > 500) AND (COUNT(unique source_ips) = 1).
  - question: Following a critical host crash, did the network traffic metrics for that host deviate significantly from its historical norm?
    context: |
      This question provides a retrospective, evidence-based method to determine if a DoS attack caused a host failure. Upon detecting a crash event, this approach automatically analyzes the network traffic leading up to it. By comparing the recent traffic metrics (connection count, bytes) against a detailed historical distribution (accounting for time-of-day and day-of-week), it can statistically validate whether the traffic was anomalous. Exceeding the 99th percentile of this baseline strongly suggests a network-induced DoS.
    answer_sources:
      - Windows Event ID 1000
      - Windows Event ID 1002
      - Windows Event ID 7031
      - Windows Event ID 7034
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON critical crash event (1000, 1002, 7031, 7034):
            QUERY network traffic (conn_count, total_bytes) for affected_host over preceding 5 mins.
            COMPARE metrics to 30d_historical_baseline for same time/day.
            FLAG as potential_DoS if metrics > 99p_baseline.
  - question: Can a predictive model forecast a critical host crash based on real-time network traffic patterns?
    context: |
      This question shifts from detection to prediction, aiming to prevent a DoS-induced failure. By training a sequence-aware model (like an RNN or LSTM) on historical data, it learns the specific sequences of network traffic patterns that typically precede a host crash. When the model is deployed in real-time, it can analyze incoming traffic and issue an alert if it detects a pattern with a high probability of leading to a crash, giving analysts a chance to intervene before the system fails.
    answer_sources:
      - Windows Event ID 1000
      - Zeek conn.log
      - ICS Network Segments (Purdue Levels 1-3), Control System DMZ, and network interfaces of critical devices (PLCs, RTUs, IEDs, HMIs, EWS, Historians).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL = train_LSTM_model(historical_traffic_sequences, crash_events).
          IN REAL-TIME, feed current traffic sequence to MODEL.
          ALERT if MODEL.predict_crash_probability() > high_threshold.