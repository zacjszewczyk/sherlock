name: T0866: Exploitation of Remote Services
id: c1b9e8a0-54a8-4f7b-9a2c-3d4e5f6a7b8d
description: >
  This playbook helps determine if an adversary is exploiting remote services to gain initial access into or move laterally within an ICS environment. Evidence includes inbound network connections from untrusted IT networks to critical OT assets on service ports that violate whitelists or exhibit protocol anomalies; application crashes on OT assets immediately following inbound connections from IT; an OT host initiating outbound connections to an anomalous number of other OT hosts; and a critical OT application spawning an anomalous child process (like a command shell) after receiving a network connection.
type: technique
related:
  - TA0108: Initial Access
  - TA0109: Lateral Movement
contributors: Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is there an inbound network connection from an untrusted IT network to a critical OT asset on a remote service port that violates a pre-defined communication whitelist?
    context: >
      This question aims to detect unauthorized communication attempts from the less secure IT environment to the highly sensitive OT environment. Such connections could be the first step in an exploit attempt against a remote service. The query specifically looks for connections to known service ports that are not part of an approved whitelist and correlates them with specific exploit signatures from network sensors to increase confidence.
    answer_sources: >
      Data Sources: Zeek conn.log, Zeek notice.log, Zeek smb.log, Zeek rdp.log, Zeek dnp3.log, Zeek modbus.log, Windows Event ID 5156.
      Assets/Locations: Industrial Demilitarized Zone (IDMZ) network segments, firewalls at the IT/OT boundary, remote access gateways for OT, historian servers with external interfaces, and network switches/routers connecting IT and OT zones.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Search Zeek conn.log for source_ip in IT_range and dest_ip in OT_range and dest_port in [445, 3389, 5900, 502, 20000]. Filter out connections on whitelist. Correlate with Zeek notice.log for exploit signatures within 5 minutes.
  - question: Are there anomalous statistical properties (e.g., payload entropy, connection count, byte volume) in approved IT-to-OT communication channels that could indicate an exploit?
    context: >
      Even legitimate communication channels can be used for malicious purposes. This question focuses on detecting subtle signs of an exploit by baselining normal behavior. An attacker might use an allowed connection to pass an exploit payload, which could be detected by a spike in payload entropy (a measure of randomness) or an unusual volume of data transfer, deviating significantly from the historical norm.
    answer_sources: >
      Data Sources: Zeek conn.log.
      Assets/Locations: Industrial Demilitarized Zone (IDMZ) network segments, firewalls at the IT/OT boundary, remote access gateways for OT, historian servers with external interfaces, and network switches/routers connecting IT and OT zones.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each approved IT-to-OT channel, calculate 30-day baseline for entropy, count, and volume. Alert if new connection entropy > 95th percentile OR 1-hour volume/count > 3 standard deviations from baseline.
  - question: Are there anomalies in aggregated IT-to-OT network flow statistics that suggest a coordinated scan or widespread exploit attempt?
    context: >
      This question takes a broader view, looking for large-scale patterns that might be missed when examining individual connections. By applying a time-series anomaly detection model to aggregated metrics like connection volume and protocol distribution, analysts can identify statistically significant deviations that could represent a reconnaissance phase (scanning) or a coordinated attack across multiple systems, which might precede a widespread exploit.
    answer_sources: >
      Data Sources: Zeek conn.log.
      Assets/Locations: Industrial Demilitarized Zone (IDMZ) network segments, firewalls at the IT/OT boundary, remote access gateways for OT, historian servers with external interfaces, and network switches/routers connecting IT and OT zones.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Aggregate IT-to-OT flow data (volume, pairs, protocols, entropy) in 5-min intervals. Apply a trained time-series model (e.g., Isolation Forest). Alert on intervals flagged as anomalous.
  - question: Did a critical OT service crash or terminate unexpectedly immediately after receiving a network connection from an IT network?
    context: >
      This question directly links a potential cause (inbound network connection) with a potential effect (service crash), which is a strong indicator of a successful or attempted exploit. A failed exploit attempt often results in the target application crashing. Correlating a crash event with a preceding network connection from an untrusted source provides high-confidence evidence of malicious activity.
    answer_sources: >
      Data Sources: Windows Event ID 1000, Windows Event ID 7034, Windows Event ID 7031, Zeek conn.log, Windows Event ID 5156.
      Assets/Locations: Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and critical Windows-based control system assets in the Process Control Network (PCN) or Supervisory Control Network (SCN).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Search for Event IDs 1000, 7034, 7031 on critical OT assets. If found, check for a network connection (Zeek or Event ID 5156) from an IT IP to the asset within the previous 60 seconds on the service's port.
  - question: Is there a statistically significant spike in crash events for a specific critical service on an OT asset?
    context: >
      Rather than looking at a single crash, this question seeks to identify anomalous trends in service stability. A sudden increase in the frequency of crashes for a particular service, especially when compared to its historical baseline, could indicate an adversary repeatedly attempting to exploit a vulnerability. Escalating the alert when this spike correlates with increased IT-to-OT network traffic further strengthens the hypothesis of an ongoing attack.
    answer_sources: >
      Data Sources: Windows Event ID 1000, Windows Event ID 7034, Windows Event ID 7031, Zeek conn.log.
      Assets/Locations: Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and critical Windows-based control system assets in the Process Control Network (PCN) or Supervisory Control Network (SCN).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each critical OT service, baseline hourly crash event counts (1000, 7034, 7031). Alert if the hourly count exceeds the 99th percentile or > 3 standard deviations from the mean.
  - question: Can a service crash on an OT asset be classified as likely exploit-induced based on host and network features?
    context: >
      This question leverages machine learning to automate the triage of crash events, distinguishing between benign software failures and those caused by malicious activity. By training a model on features from both the crash event itself (e.g., faulting module, exception code) and the preceding network connection, the system can provide a probabilistic score, helping analysts prioritize the most suspicious crashes.
    answer_sources: >
      Data Sources: Windows Event ID 1000, Zeek conn.log.
      Assets/Locations: Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and critical Windows-based control system assets in the Process Control Network (PCN) or Supervisory Control Network (SCN).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each crash event (Event ID 1000), extract features (FaultingModuleName, ExceptionCode) and corresponding network features. Apply trained classification model to predict if crash is malicious.
  - question: Is an OT host exhibiting 'fan-out' behavior by connecting to an unusually high number of other OT hosts on remote service ports?
    context: >
      This question aims to detect a common lateral movement pattern where a compromised host scans or attempts to connect to many other hosts within the same network segment. By setting a hard threshold for the number of unique destinations contacted within a short time frame, this query can quickly identify potential scanning activity. The inclusion of a honey-host tripwire provides a high-fidelity signal of malicious exploration.
    answer_sources: >
      Data Sources: Zeek conn.log, Zeek smb.log, Zeek rdp.log, Zeek dce_rpc.log, Windows Event ID 4624.
      Assets/Locations: Supervisory Control Network (SCN), Process Control Network (PCN), individual device networks (e.g., for PLCs, RTUs, IEDs), internal OT firewalls, and network switches/routers within the OT environment.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: From Zeek conn.log, count unique destination OT hosts per source OT host in a 5-min window on ports [445, 3389, 5900, 502, 20000]. Alert if count > 10 or if a connection is made to a designated honey-host.
  - question: Is an OT host contacting a number of unique peers that is anomalous compared to its own historical behavior?
    context: >
      This question improves upon the fixed-threshold approach by creating a personalized baseline for each host. Some OT assets are expected to communicate with many other devices, while others may only talk to one or two. By comparing a host's current activity to its own past behavior, this method can detect anomalous fan-out activity that might be normal for a different host, thus reducing false positives.
    answer_sources: >
      Data Sources: Zeek conn.log.
      Assets/Locations: Supervisory Control Network (SCN), Process Control Network (PCN), individual device networks (e.g., for PLCs, RTUs, IEDs), internal OT firewalls, and network switches/routers within the OT environment.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each OT host, establish a 30-day baseline of the 99th percentile of unique destinations contacted per 10-min interval. Alert if a host's current 10-min count exceeds its personal baseline.
  - question: Are there structural changes in the intra-OT communication graph, such as a host suddenly becoming a communication hub or bridging previously separate network clusters?
    context: >
      This question uses graph analytics to detect sophisticated lateral movement. A compromised host used as a pivot point will suddenly increase in importance within the network communication graph, which can be measured by a spike in its PageRank score. Similarly, an attacker moving between isolated security zones will create new communication links between previously disconnected clusters of hosts.
    answer_sources: >
      Data Sources: Zeek conn.log.
      Assets/Locations: Supervisory Control Network (SCN), Process Control Network (PCN), individual device networks (e.g., for PLCs, RTUs, IEDs), internal OT firewalls, and network switches/routers within the OT environment.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Build a host communication graph from Zeek conn.log. Periodically calculate PageRank and run community detection. Alert if a host's PageRank score spikes or if it begins communicating with a new community/cluster.
  - question: Did a critical OT application spawn an unexpected or unauthorized child process (e.g., a command shell) shortly after receiving a network connection from another OT host?
    context: >
      This question targets a common post-exploitation technique where an attacker, having exploited a service, uses that compromised process to spawn a shell or other tool for further actions. By whitelisting legitimate child processes for critical applications, this query can detect anomalous process creation. Correlating this with a recent inbound network connection to the parent process provides strong evidence of remote code execution.
    answer_sources: >
      Data Sources: Windows Event ID 4688, Sysmon Event ID 1, Zeek conn.log.
      Assets/Locations: Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and other critical Windows-based control system assets within the Process Control Network (PCN) or Supervisory Control Network (SCN).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Search for Sysmon Event ID 1 where parent is a critical OT process and child is not on its whitelist. Escalate alert if parent process received an intra-OT network connection within the preceding 120 seconds.
  - question: Are the command-line arguments used in a process creation event statistically anomalous, potentially indicating obfuscation or code injection?
    context: >
      Attackers often use long, complex, or encoded command-line arguments to hide their actions (e.g., a Base64-encoded PowerShell script). This question aims to detect such activity by baselining the typical length and entropy (randomness) of command lines for normal parent-child process relationships. A significant deviation from this baseline can flag a suspicious command even if the parent and child processes themselves are legitimate.
    answer_sources: >
      Data Sources: Sysmon Event ID 1.
      Assets/Locations: Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and other critical Windows-based control system assets within the Process Control Network (PCN) or Supervisory Control Network (SCN).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each known parent-child process pair, baseline command-line length and entropy. Alert if a new event's command line deviates by > 3 standard deviations. Specifically search for high entropy.
  - question: Is there an anomalous sequence of process creation events on a critical OT asset that deviates from learned normal behavior?
    context: >
      This question moves beyond individual process events to analyze the entire chain of execution. Normal operations often involve predictable sequences of processes. A sequence model can learn these patterns and flag any deviation, such as an HMI runtime spawning PowerShell, which then spawns a tool to perform network reconnaissance. This approach can detect novel or complex attack chains that might otherwise be missed.
    answer_sources: >
      Data Sources: Sysmon Event ID 1.
      Assets/Locations: Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and other critical Windows-based control system assets within the Process Control Network (PCN) or Supervisory Control Network (SCN).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Feed streams of Sysmon Event ID 1 data into a trained LSTM autoencoder. Alert on any process execution sequence that results in a high reconstruction error, indicating a deviation from normal process chains.