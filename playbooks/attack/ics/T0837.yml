name: 'T0837: Loss of Protection'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: 'This playbook addresses the threat of an adversary disabling or degrading critical protective functions within an industrial environment. It focuses on identifying anomalous safety-critical commands sent to Safety Instrumented Systems (SIS), such as "Stop CPU" or logic downloads from unauthorized sources. It also covers the malicious modification of critical alarm parameters like setpoints or deadbands, which could be used to hide illicit activity or create unsafe conditions. Furthermore, the playbook includes methods to detect when critical protective devices, like safety PLCs or protective relays, cease sending expected network traffic, indicating they may be offline or compromised.'
type: 'technique'
related:
  - 'TA0105: Impact'
contributors: 'Zachary Szewczyk, Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Has a safety-impacting command been sent to a critical SIS controller from an unauthorized source IP or user account?'
    context: 'This question aims to detect direct, unauthorized attempts to manipulate Safety Instrumented Systems (SIS). Commands like "Stop CPU" or "Program/Logic Download" can have immediate and severe consequences on physical processes. Identifying if these commands originate from an unapproved Engineering Workstation (EWS) IP address or are executed by a user not in the authorized SIS engineering group is a critical indicator of a potential attack or serious misconfiguration.'
    answer_sources:
      - 'Zeek s7comm.log'
      - 'Zeek modbus.log'
      - 'Zeek enip.log'
      - 'Zeek dnp3.log'
      - 'Zeek bacnet.log'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'SIS network segments (Level 0/1)'
      - 'Engineering Workstation (EWS) network segment (Level 2/3)'
      - 'Process Control Network (PCN) segments where EWS communicate with SIS devices'
      - 'Active Directory Domain Controllers'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          SEARCH industrial protocol logs (s7comm, modbus) FOR safety_commands ("Stop CPU", "Program/Logic Download")
          WHERE destination_ip IN sis_watchlist AND source_ip NOT IN ews_whitelist
          CORRELATE source_ip and timestamp with Windows logon events (4624)
          IF user NOT IN authorized_sis_ad_group, ALERT.
  - question: 'Have there been anomalous logic downloads to an SIS controller, indicated by unusual frequency, size, or changes outside a maintenance window?'
    context: 'Adversaries may attempt to install malicious or modified logic onto SIS controllers. This question uses statistical baselining to detect deviations from normal logic download activities. A sudden increase in the frequency of downloads, a significantly larger file size than normal, or any change to the logic''s file hash outside of a planned maintenance window could signal an attempt to compromise the safety system''s integrity.'
    answer_sources:
      - 'Zeek s7comm.log'
      - 'Zeek modbus.log'
      - 'Zeek enip.log'
      - 'Zeek dnp3.log'
      - 'Zeek bacnet.log'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'SIS network segments (Level 0/1)'
      - 'Engineering Workstation (EWS) network segment (Level 2/3)'
      - 'Process Control Network (PCN) segments where EWS communicate with SIS devices'
      - 'Active Directory Domain Controllers'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each SIS controller:
            CALCULATE baseline (mean, std_dev) for download_frequency_per_hour and download_size over 60 days.
            MONITOR new download events.
            IF download_size > (mean_size + 3 * std_dev_size), ALERT.
            IF hourly_download_count > (mean_freq + 3 * std_dev_freq), ALERT.
            IF file_hash changes AND current_time is NOT IN maintenance_window, ALERT.
  - question: 'Is there anomalous communication behavior with an SIS controller that deviates from its historically normal operational profile?'
    context: 'This question seeks to identify subtle or complex attack patterns that might not be caught by simple signature-based rules. By using an unsupervised machine learning model, we can analyze multiple features of the communication traffic to an SIS controller (e.g., command counts, command types, source IP diversity) to build a comprehensive profile of "normal". A significant deviation from this learned profile, indicated by a high anomaly score, suggests potentially malicious or unexpected activity that warrants investigation.'
    answer_sources:
      - 'Zeek s7comm.log'
      - 'Zeek modbus.log'
      - 'Zeek enip.log'
      - 'Zeek dnp3.log'
      - 'Zeek bacnet.log'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'SIS network segments (Level 0/1)'
      - 'Engineering Workstation (EWS) network segment (Level 2/3)'
      - 'Process Control Network (PCN) segments where EWS communicate with SIS devices'
      - 'Active Directory Domain Controllers'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          TRAIN anomaly detection model (e.g., Isolation Forest) on 90-day historical data with features: command_count, distinct_command_types, safety_command_ratio, source_ip_entropy per 5-min window.
          IN PRODUCTION:
            FOR each new 5-minute window:
              CALCULATE features and score with model.
              IF anomaly_score > 99th_percentile_of_training_scores, ALERT.
  - question: 'Has a critical alarm parameter been modified by an unauthorized source or changed to an unsafe value?'
    context: 'This question focuses on preventing "alarm blinding," where an adversary manipulates alarm settings to hide their activities or create a hazardous condition. By monitoring specific critical alarm tags (e.g., pressure setpoints, inhibitor flags) and comparing modifications against a list of authorized users/IPs and predefined safe value ranges, we can immediately detect unauthorized or unsafe changes that could compromise process safety.'
    answer_sources:
      - 'Zeek opc-ua.log'
      - 'Zeek modbus.log'
      - 'Zeek s7comm.log'
      - 'Zeek dnp3.log'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'HMI application audit logs'
      - 'HMI network segment (Level 2)'
      - 'EWS network segment (Level 2/3)'
      - 'Process Control Network (PCN) segments (Level 1/2)'
      - 'Data Historian servers'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          MONITOR industrial protocol logs and HMI audit logs for write commands.
          IF written_tag IN critical_alarm_tag_list:
            IF source_ip OR user NOT IN authorized_list, ALERT.
            IF new_value NOT IN safe_operating_range for written_tag, ALERT.
  - question: 'Is a user or HMI exhibiting an unusually high rate of alarm management activity?'
    context: 'An adversary attempting to manipulate the process might generate a flurry of alarm modifications or acknowledgements to suppress warnings. This question aims to detect such behavior by baselining the normal rate of alarm-related actions for each user and HMI. A rate that significantly exceeds the statistical norm ($$ \mu + 3\sigma $$), especially involving multiple critical setpoints in a short time, is a strong indicator of suspicious activity that could be part of a larger attack.'
    answer_sources:
      - 'Zeek opc-ua.log'
      - 'Zeek modbus.log'
      - 'Zeek s7comm.log'
      - 'Zeek dnp3.log'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'HMI application audit logs'
      - 'HMI network segment (Level 2)'
      - 'EWS network segment (Level 2/3)'
      - 'Process Control Network (PCN) segments (Level 1/2)'
      - 'Data Historian servers'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each user and HMI:
            CALCULATE baseline (mean, std_dev) for hourly_alarm_actions over 30 days.
            MONITOR new alarm management actions.
            IF current_hourly_rate > (mean_rate + 3 * std_dev_rate), ALERT.
            IF count(distinct critical_setpoint_modifications) > 1 by same user in 5 minutes, ESCALATE ALERT.
  - question: 'Can a new alarm modification event be classified as "malicious" or "unsafe" based on learned historical patterns?'
    context: 'This question leverages a supervised machine learning model to provide a more sophisticated and context-aware assessment of alarm modifications. By training on a dataset of previously labeled benign and malicious events, the model can learn the complex relationships between features like the user, time of day, specific tag modified, and the nature of the value change. This allows for the proactive identification of potentially harmful modifications that might appear benign to simpler rule-based systems.'
    answer_sources:
      - 'Zeek opc-ua.log'
      - 'Zeek modbus.log'
      - 'Zeek s7comm.log'
      - 'Zeek dnp3.log'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'HMI application audit logs'
      - 'HMI network segment (Level 2)'
      - 'EWS network segment (Level 2/3)'
      - 'Process Control Network (PCN) segments (Level 1/2)'
      - 'Data Historian servers'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          TRAIN classification model (e.g., Random Forest) on labeled dataset of alarm modifications.
          IN PRODUCTION:
            FOR each new alarm modification event:
              EXTRACT features (source_ip, user, tag, old_value, new_value, time_of_day).
              CLASSIFY event with model.
              IF classification is "malicious/unsafe", ALERT with feature importance scores.
  - question: 'Has a critical protective device stopped communicating on the network for longer than its expected interval?'
    context: 'Critical protective devices like safety PLCs or relays are the last line of defense in an industrial process. If they go offline, safety functions are lost. This question provides a direct and simple check to ensure these devices are still active. By monitoring for their expected heartbeat or polling traffic, we can quickly generate a critical alert if a device goes silent for a period that exceeds a defined tolerance (e.g., twice its normal communication interval), indicating a potential device failure, network issue, or deliberate attack.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dnp3.log'
      - 'Zeek modbus.log'
      - 'Zeek s7comm.log'
      - 'ICMP logs'
      - 'Level 0/1 field device network segments'
      - 'Level 2 SCADA/DCS network segments'
      - 'Substation network segments'
      - 'Process Control Network (PCN) segments'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each device in critical_device_watchlist:
            DEFINE interval = device.heartbeat_interval * 2.
            SEARCH network logs for traffic from/to device.ip in last 'interval'.
            IF no results, ALERT "Device Unresponsive".
  - question: 'Has the communication volume or frequency from a critical protective device dropped to an anomalously low level?'
    context: 'A device that is failing, misconfigured, or under attack might not go completely silent but could exhibit a significant degradation in its communication. This question uses statistical baselining to define a minimum expected threshold for data volume and connection frequency. If a device''s communication drops below this floor (the 5th percentile), it indicates a potential health issue or partial disruption that requires investigation before a complete failure occurs.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dnp3.log'
      - 'Zeek modbus.log'
      - 'Zeek s7comm.log'
      - 'ICMP logs'
      - 'Level 0/1 field device network segments'
      - 'Level 2 SCADA/DCS network segments'
      - 'Substation network segments'
      - 'Process Control Network (PCN) segments'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each critical device:
            CALCULATE 5th percentile for bytes_per_minute and connections_per_minute from 30-day history.
            MONITOR current traffic.
            IF (bytes_per_minute < 5th_percentile_bytes) OR (connections_per_minute < 5th_percentile_conns) for 3 consecutive minutes, ALERT.
  - question: 'Has the communication pattern of a critical device deviated significantly from its forecasted normal behavior?'
    context: 'This question employs a more advanced time-series forecasting model to detect anomalies in device communication. Unlike simple thresholding, a model like SARIMA or Prophet can account for complex patterns such as time-of-day or day-of-week seasonality. It predicts an expected range of communication activity. If the actual observed activity falls below this predicted range, it signals a statistically significant anomaly that is less likely to be a false positive and more likely to indicate a real problem with the device or network.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dnp3.log'
      - 'Zeek modbus.log'
      - 'Zeek s7comm.log'
      - 'ICMP logs'
      - 'Level 0/1 field device network segments'
      - 'Level 2 SCADA/DCS network segments'
      - 'Substation network segments'
      - 'Process Control Network (PCN) segments'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          TRAIN time-series model (e.g., Prophet) on 90+ days of connection_counts_per_minute for each critical device.
          IN PRODUCTION:
            FOR each 5-minute interval:
              FORECAST expected_connection_count and 95% confidence_interval.
              IF actual_connection_count < lower_bound_of_confidence_interval for 2 consecutive intervals, ALERT.