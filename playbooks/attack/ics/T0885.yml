name: T0885: Commonly Used Port
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  Investigates whether an adversary is using a commonly used Industrial Control System (ICS) or Information Technology (IT) port for Command and Control (C2) communications. This playbook focuses on identifying several indicators of this technique, such as protocol masquerading where network traffic on a standard port (e.g., TCP/502 for Modbus) does not match the expected protocol. It also looks for unauthorized outbound connections from critical ICS assets like PLCs and HMIs to external IP addresses. Additionally, the playbook helps detect behavioral anomalies in network connections, including unusually long durations, high data volumes, or other protocol irregularities. Finally, it aims to uncover potential C2 beaconing activity from non-browser processes on ICS endpoints that make periodic, low-volume connections to external servers over common web ports.
type: technique
related:
  - TA0101: Command And Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there network connections on common ICS/IT ports where the observed application protocol does not match the expected protocol for that port?
    context: |
      This question aims to detect protocol masquerading, a common evasion technique where adversaries tunnel malicious traffic over a port typically used by a different, legitimate protocol. For example, C2 traffic might be sent over TCP port 502, but it is not legitimate Modbus traffic. Identifying these mismatches between the port and the actual application protocol (as identified by deep packet inspection tools like Zeek) is a strong indicator of anomalous or malicious activity.
    answer_sources:
      - Zeek conn.log
      - Network sensors monitoring the IT/OT boundary, ICS DMZ, and internal ICS network segments (Purdue Model Levels 1-3).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Zeek conn.log
          WHERE (destination_port IN [502, 443, 53, ...common_ports]
          AND (
            (destination_port = 502 AND service != 'modbus') OR
            (destination_port = 443 AND service != 'ssl') OR
            (destination_port = 53 AND service != 'dns')
          ))
          TRIAGE matches.
  - question: Is any single source IP address exhibiting a statistically significant increase in the daily number of protocol mismatch events compared to its historical baseline?
    context: |
      While a single protocol mismatch might be a false positive, a sudden increase in these events from a specific host is a much stronger signal of a potential compromise or misconfiguration. This question focuses on establishing a normal behavioral baseline for each host and alerting only when a statistically significant deviation occurs, reducing alert fatigue and highlighting more credible threats.
    answer_sources:
      - Zeek conn.log
      - Network sensors monitoring the IT/OT boundary, ICS DMZ, and internal ICS network segments (Purdue Model Levels 1-3).
    range: last 30 days for baseline
    queries:
      - technology: Pseudocode
        query: |
          FOR EACH source_ip:
            CALCULATE mismatch_events_per_day over last 30 days.
            CALCULATE 95th_percentile of daily counts.
            ALERT IF today_mismatch_count > 95th_percentile.
  - question: Can a machine learning model identify connections that are likely malicious based on features indicative of protocol mismatch?
    context: |
      This question explores a more advanced, automated approach to detection. By training a supervised machine learning model (like a Random Forest) on labeled network data, the system can learn the complex patterns that differentiate between benign and malicious connections exhibiting protocol mismatches. This allows for automated classification of new connections, with high-confidence alerts being prioritized for analyst review.
    answer_sources:
      - Zeek conn.log
      - Network sensors monitoring the IT/OT boundary, ICS DMZ, and internal ICS network segments (Purdue Model Levels 1-3).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model Training (offline)
          TRAIN Random Forest classifier on historical labeled conn.log data.
          FEATURES: proto, id.resp_p, service, duration, orig_bytes, resp_bytes, conn_state, port_service_match.
          // Model Inference (real-time)
          FOR each new connection:
            PREDICT 'benign' or 'malicious_protocol_mismatch'.
            ALERT on high-confidence malicious predictions.
  - question: Has a critical ICS asset initiated an outbound network connection to an unapproved external IP address, and what process was responsible?
    context: |
      Critical ICS assets (like EWS or PLCs) should have highly predictable and restricted network communication patterns. An outbound connection from such an asset to an unknown, external IP address is a major red flag. This question aims to detect these connections and correlate them with host-level process data to identify the specific application responsible, which is crucial for incident response.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Critical ICS assets including Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), and controllers on ICS network Levels 1 (Basic Control) and 2 (Supervisory Control).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Zeek conn.log
          WHERE source_ip IN [critical_asset_watchlist]
          AND destination_ip IS (NOT private AND NOT whitelisted)
          AND destination_port IN [common_ports].
          FOR each match:
            PIVOT to host logs (WinEvent 5156) using timestamp and IP.
            IDENTIFY initiating process.
            ALERT if process is not on application whitelist.
  - question: Is a critical ICS asset exhibiting a statistically significant anomaly in its daily outbound connection count or data volume?
    context: |
      This question uses statistical baselining to detect deviations from an asset's normal communication behavior. By monitoring the daily number of connections and the volume of data sent to external destinations, we can identify when an asset's activity exceeds its typical operational patterns. An alert based on a deviation of three standard deviations from the moving average indicates a strong statistical anomaly worthy of investigation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Critical ICS assets including Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), and controllers on ICS network Levels 1 (Basic Control) and 2 (Supervisory Control).
    range: last 14 days for rolling baseline
    queries:
      - technology: Pseudocode
        query: |
          FOR EACH critical_asset:
            CALCULATE 14-day rolling moving_average and standard_deviation of daily_connection_count and daily_data_volume.
            ALERT IF today_count > (moving_average + 3*standard_deviation).
            ALERT IF today_volume > (moving_average + 3*standard_deviation).
  - question: Can unsupervised machine learning identify anomalous outbound connections from critical ICS assets that deviate from normal operational clusters?
    context: |
      This question applies clustering algorithms like HDBSCAN to model the 'normal' communication behavior of critical assets. Legitimate, repetitive operational traffic will form dense clusters based on features like destination IP, port, and connection duration. Any connection that does not fit into these clusters is flagged as noise or an outlier. This is a powerful way to automatically surface novel or unusual activity without pre-existing rules.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Critical ICS assets including Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), and controllers on ICS network Levels 1 (Basic Control) and 2 (Supervisory Control).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model Application
          APPLY HDBSCAN clustering to connection data from critical assets.
          FEATURES: destination_ip, destination_port, duration, orig_bytes.
          // Analysis
          INVESTIGATE all connections classified as 'noise' or 'outliers'.
  - question: Is there evidence of protocol abuse, such as DNS tunneling or the use of anomalous SSL/TLS certificates, on common IT/OT ports?
    context: |
      Adversaries often abuse legitimate protocols for C2. This question focuses on finding specific artifacts of such abuse. For DNS, this includes looking for unusually long query names or an abnormal number of TXT record queries, which can be used to exfiltrate data. For HTTPS, this involves hunting for connections that use self-signed certificates or have rare JA3/JA3S hashes, which are often associated with malware rather than legitimate clients and servers.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Zeek ssl.log
      - Network sensors at the ICS DMZ, core network switches, and DNS servers within the Purdue Model Levels 2 and 3.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // DNS Abuse
          SEARCH Zeek dns.log WHERE query_length > 255 OR (qtype_name = 'TXT' AND query contains encoded_data_indicators).
          // SSL Abuse
          SEARCH Zeek ssl.log WHERE source_ip IN [ics_assets] AND (certificate is self-signed OR ja3/ja3s_hash is not in known_good_baseline).
  - question: Are there any specific network communication flows that are exhibiting statistically anomalous behavior in terms of duration, data volume, or payload entropy?
    context: |
      This question moves beyond simple port-based analysis to baseline the behavior of every unique 5-tuple communication flow (source IP/port, destination IP/port, protocol). By establishing what is normal for a specific, recurring flow, we can detect subtle deviations. An alert is triggered if a new connection in that flow has a duration, data volume, or payload entropy that is a statistical outlier, pointing to a potential change in its use, possibly for malicious purposes.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Zeek ssl.log
      - Network sensors at the ICS DMZ, core network switches, and DNS servers within the Purdue Model Levels 2 and 3.
    range: last 30 days for baseline
    queries:
      - technology: Pseudocode
        query: |
          FOR EACH unique 5-tuple_flow:
            CALCULATE 30-day baseline mean and standard_deviation for duration, orig_bytes, and payload_entropy.
            FOR each new connection in flow:
              ALERT IF metric > (mean + 3*standard_deviation).
  - question: Can a time-series anomaly detection model identify abnormal patterns in the overall traffic volume and connection rates for critical OT ports?
    context: |
      This question uses an advanced time-series model like an LSTM Autoencoder to learn the normal "rhythm" of network activity on critical OT ports. The model processes aggregated metrics (e.g., bytes per minute) and learns the expected patterns of a normal operational day. It can then flag time periods where the actual traffic deviates significantly from the learned pattern (high reconstruction error), indicating a large-scale anomaly that might be missed by per-connection analysis.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Zeek ssl.log
      - Network sensors at the ICS DMZ, core network switches, and DNS servers within the Purdue Model Levels 2 and 3.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model Training (offline)
          TRAIN LSTM Autoencoder on time-binned metrics (bytes/min, connections/min) for critical OT ports.
          // Model Inference (real-time)
          FOR each new time window:
            CALCULATE reconstruction_error.
            ALERT IF reconstruction_error is high.
  - question: Is a non-whitelisted process on an ICS endpoint making external network connections over common web ports?
    context: |
      This question aims to identify potentially malicious software masquerading as legitimate web traffic. The query starts by finding any new process on an ICS endpoint that is not on an approved application whitelist. It then checks if that process is making network connections to external IP addresses on ports 80 or 443. Correlating host-based process data with network logs provides high-fidelity evidence of unauthorized software "phoning home."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Windows-based endpoints in the ICS environment, including Engineering Workstations (EWS), HMIs, and data historians located at Purdue Model Levels 2 and 3.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH WinEvent 4688 for new_process_name NOT IN [application_whitelist].
          FOR each suspicious process_id:
            FIND corresponding network connection in WinEvent 5156.
            IF connection is to external_ip on port 80/443:
              CONFIRM connection in Zeek conn.log and check IP against threat intel.
  - question: Is there evidence of periodic, "heartbeat-like" network traffic from an ICS asset that could indicate C2 beaconing?
    context: |
      C2 beaconing is characterized by regular, periodic connections from a compromised host to a C2 server. This question seeks to identify this pattern by analyzing connection logs. It groups connections by source/destination and looks for groups with a low standard deviation in the time between connections (indicating periodicity) and consistently small connection sizes. This "low and slow" pattern is a classic indicator of malware beaconing.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Windows-based endpoints in the ICS environment, including Engineering Workstations (EWS), HMIs, and data historians located at Purdue Model Levels 2 and 3.
    range: last 24 hours
    queries:
      - technology: Pseudocode
        query: |
          GROUP conn.log by (source_ip, dest_ip, dest_port, proto) over 24 hours.
          FOR each group:
            CALCULATE time_deltas between connections.
            ALERT IF (connection_count >= 5
              AND stdev(time_deltas) < 5_seconds
              AND average_connection_size < 2048_bytes).
  - question: Can a supervised machine learning model be used to automatically classify network sessions as C2 beaconing or normal web browsing?
    context: |
      This question proposes an advanced method to automate the detection of beaconing. By training a classification model (like Gradient Boosting) on features engineered from network sessions, the system can learn to distinguish the subtle statistical patterns of beaconing from the more random patterns of human-driven web browsing. Features like the regularity of connection timing, packet size variance, and data transfer ratios are key differentiators.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Windows-based endpoints in the ICS environment, including Engineering Workstations (EWS), HMIs, and data historians located at Purdue Model Levels 2 and 3.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model Training (offline)
          TRAIN Gradient Boosting classifier on labeled session data.
          FEATURES: stdev(inter_arrival_times), mean(packet_sizes), var(packet_sizes), outbound_inbound_byte_ratio.
          // Model Inference (real-time)
          SCORE new sessions from ICS endpoints.
          ALERT on high-probability beaconing sessions.