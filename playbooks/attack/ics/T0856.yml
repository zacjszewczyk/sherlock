name: T0856: Spoof Reporting Message
id: 9c5f8f8b-3e9a-4b0d-9c8a-7e6f0a1b3c2d
description: An adversary may be spoofing reporting messages to hide their activities, evade detection, or mislead operators into taking incorrect actions that impair the industrial process. This playbook helps detect such activity by identifying protocol-level anomalies (e.g., sequence number or timing deviations), physically implausible telemetry values, messages from unauthorized sources, false critical alarms intended to trigger unnecessary shutdowns, floods of non-critical alarms to create operator fatigue, and the suppression of legitimate alarms to bypass safety systems.
type: technique
related:
  - TA0103: Evasion
  - TA0106: Impair Process Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there duplicate or non-monotonic sequence numbers in DNP3 or Modbus traffic that could indicate message spoofing?
    context: This question aims to detect low-level protocol manipulation. Duplicate sequence numbers within a short time or sequence numbers that decrease without a proper device restart command are strong indicators of message injection or replay attacks. Adversaries use these methods to insert false data into the communication stream, masquerading as a legitimate device.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek conn.log
      - Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), the Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dnp3.log, modbus.log
          GROUPBY source_ip
          DETECT duplicate sequence_number or transaction_id WITHIN 5 seconds
          ALERT
      - technology: pseudocode
        query: |
          SEARCH dnp3.log, modbus.log
          GROUPBY source_ip
          DETECT decreasing sequence_number or transaction_id
          WHERE NOT EXISTS (restart_command_to_ip IN last 60 seconds)
          ALERT
  - question: Does the timing or randomness of message sequences from an ICS device deviate from its established baseline, suggesting a replay attack?
    context: Legitimate ICS devices report data at consistent, configured intervals. A significant change in the inter-arrival time (IAT) between messages can indicate that a malicious actor is either suppressing messages or injecting their own. Furthermore, a sudden drop in the randomness (entropy) of sequence number increments suggests a pre-recorded, repeating sequence, which is a hallmark of a replay attack.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek conn.log
      - Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), the Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
          CALCULATE inter-arrival time (IAT) between messages
          COMPARE current_IAT to 30-day baseline (5th-95th percentile)
          ALERT if current_IAT is outside baseline_range
      - technology: pseudocode
        query: |
          FOR each source_ip
          CALCULATE Shannon entropy of sequence_number_increments over 1-hour window
          ALERT if entropy drops below historical threshold
  - question: Is a multivariate anomaly detection model detecting deviations in the communication patterns of critical devices?
    context: Sophisticated attackers may subtly manipulate multiple communication parameters at once to evade simple, single-variable detection rules. A multivariate model (like an LSTM Autoencoder) learns the complex relationships between sequence numbers, message timing, and payload size. An alert from such a model indicates a deviation from normal behavior that is difficult to spot manually and could represent a stealthy spoofing attempt.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek conn.log
      - Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), the Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT live data stream (sequence_number, IAT, payload_size) into pre-trained LSTM Autoencoder model
          CALCULATE reconstruction_error
          ALERT if reconstruction_error > dynamic_threshold
  - question: Is there a contradiction between a physics-based alarm from a Process Historian and the raw sensor data from network logs?
    context: This question seeks to find logical inconsistencies between different data sources. If a high-level system like a Process Historian logs an alarm based on its process logic (e.g., 'Tank pressure high'), but the network traffic from the sensor itself shows a normal value, it strongly implies that the message reaching the Historian has been spoofed or manipulated somewhere along the data path.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek iec61850.log
      - Windows Application Event Logs
      - SCADA servers, Process Historian servers, HMI workstations, Engineering Workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE Windows Application Event Logs and Zeek logs
          TRIGGER on physics_alarm in Event Log
          CHECK if associated sensor_value in Zeek log is within normal_range in same 30-second window
          ALERT if contradiction exists
  - question: Have physically linked process variables (e.g., pump speed and flow rate) lost their expected correlation?
    context: In a physical process, certain measurements are inherently linked (e.g., increasing pump speed should increase flow rate). If the statistical correlation between these two data streams breaks down, it suggests one of the sensors is no longer reporting reality. An adversary might be spoofing one value (e.g., keeping flow rate static) while manipulating the other.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek iec61850.log
      - Windows Application Event Logs
      - SCADA servers, Process Historian servers, HMI workstations, Engineering Workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR linked process variables (var_A, var_B) from Zeek logs
          CALCULATE real-time cross-correlation coefficient over a 5-minute sliding window
          COMPARE to baseline correlation coefficient
          ALERT if real-time_coefficient drops below critical_threshold
  - question: Is a machine learning model flagging real-time telemetry data as divergent from trusted secondary sources?
    context: This moves beyond simple correlation to a predictive model. By training a model on historical data that includes both primary sensor readings and values from a trusted source, the system can learn the acceptable boundaries of divergence. When the model predicts a 'divergent' state with high confidence, it indicates a discrepancy that exceeds normal operational noise and is likely malicious.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek iec61850.log
      - Windows Application Event Logs
      - SCADA servers, Process Historian servers, HMI workstations, Engineering Workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT real-time features (primary_value, secondary_value, difference, mode) into pre-trained XGBoost model
          PREDICT state ('normal' or 'divergent')
          ALERT if prediction is 'divergent' with confidence > 0.9
  - question: Is ICS protocol traffic originating from an IP or MAC address that does not match the authoritative asset inventory?
    context: Every device on the OT network should have a known, documented IP and MAC address. A message appearing from an unlisted address is a major red flag, indicating either an unauthorized device has been added to the network or, more likely, an attacker is spoofing the identity of a legitimate device from a compromised host.
    answer_sources:
      - Zeek conn.log
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek iec61850.log
      - Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network gateways between IT and OT environments.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          LOAD OT asset inventory (IP, MAC) into watchlist
          FOR each ICS protocol log entry
          CHECK if source_IP or source_MAC is in watchlist
          ALERT if not found
  - question: Is the ratio of sent-to-received bytes for an ICS device connection deviating significantly from its baseline?
    context: Legitimate ICS communications are typically predictable and repetitive. The ratio of data sent by the client (e.g., a PLC) to data sent by the server (e.g., SCADA) should be relatively stable. A significant deviation can indicate an anomaly like a malformed packet (sent by an attacker) that elicits an unusual error response, or a one-way data injection that doesn't receive a valid response.
    answer_sources:
      - Zeek conn.log
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek iec61850.log
      - Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network gateways between IT and OT environments.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
          CALCULATE ratio of sent_bytes / received_bytes
          COMPARE current_ratio to 60-day mean and standard deviation
          ALERT if current_ratio deviates > 3 standard deviations from mean
  - question: Is an unsupervised anomaly detection model flagging network flows from an ICS device as abnormal?
    context: This question uses machine learning to create a holistic profile of a device's network behavior, including data volume, connection duration, and destination ports. An Isolation Forest model can identify data points that are 'different' from the norm across these multiple dimensions. A high anomaly score suggests the device is communicating in a way it has never before, a potential sign of compromise and spoofing activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek iec61850.log
      - Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network gateways between IT and OT environments.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT network flow metadata (bytes_sent, bytes_received, duration, port_entropy) into pre-trained Isolation Forest model
          CALCULATE anomaly_score
          ALERT if anomaly_score > 0.75
  - question: Is a critical alarm value being reported without any corresponding operator action or corroborating sensor data?
    context: This question attempts to identify a spoofed critical alarm intended to cause an unnecessary shutdown or disruptive operator response. A real critical event is often preceded by operator commands or accompanied by changes in related physical systems. An isolated critical alarm with no other context is highly suspicious and could be an adversary's attempt to directly impair process control.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Windows Application Event Logs
      - Windows Security Event ID 4624
      - HMI workstations, Engineering Workstations, SCADA servers, and the Level 2 Supervisory Control network where operator actions and alarms are logged.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRIGGER on critical_alarm_value in Zeek logs
          CHECK for recent_operator_logon (Event ID 4624) or command on HMI in last 5 minutes
          CHECK for normal_state in correlated_sensor_data
          ALERT if no operator action AND correlated data is normal
  - question: Is the rate of change for a critical sensor value physically impossible?
    context: Physical processes have inertia; values like temperature and pressure cannot jump from one extreme to another instantaneously. A spoofed message, however, can contain any value the attacker chooses. By monitoring the rate of change and flagging any value that exceeds the maximum possible physical change, we can detect these impossible 'step function' jumps that are characteristic of spoofing.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Windows Application Event Logs
      - Windows Security Event ID 4624
      - HMI workstations, Engineering Workstations, SCADA servers, and the Level 2 Supervisory Control network where operator actions and alarms are logged.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical_sensor
          CALCULATE rate_of_change between consecutive measurements
          COMPARE to historical_maximum_rate_of_change baseline
          ALERT if current_rate_of_change > 3 standard deviations above baseline
  - question: Is a machine learning model classifying a real-time critical alert as 'likely spoofed'?
    context: This approach uses a supervised model trained by process engineers to distinguish between authentic alarms and false ones. The model considers not just the value itself, but also its rate of change, data from correlated sensors, and recent operator activity. This provides a sophisticated, context-aware method for filtering out spoofed alarms designed to impair operations.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Windows Application Event Logs
      - Windows Security Event ID 4624
      - HMI workstations, Engineering Workstations, SCADA servers, and the Level 2 Supervisory Control network where operator actions and alarms are logged.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT real-time alert data (value, rate_of_change, correlated_values, HMI_activity) into pre-trained Random Forest model
          PREDICT classification ('likely spoofed' or 'likely authentic')
          ALERT if 'likely spoofed'
  - question: Is there an 'alarm flood' condition occurring, where a high number of distinct alarms are triggered in a short window?
    context: An 'alarm flood' is a classic tactic to overwhelm human operators. By generating a burst of numerous, often low-priority, alarms, an attacker can create confusion and fatigue. This may serve as a distraction to hide a more significant, simultaneous attack, or simply to degrade the operators' ability to properly manage the process.
    answer_sources:
      - Windows Application Event Logs
      - Zeek conn.log
      - Zeek dnp3.log
      - Central Alarm Servers, Process Historian, HMI workstations, and the Level 2 Supervisory Control Network.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          COUNT distinct alarm_events in Windows Application Log
          GROUPBY 5-minute window
          ALERT if count > threshold (e.g., 20)
  - question: Is there a sudden spike in the entropy of alarm sources, indicating alarms are coming from an unusually diverse set of devices?
    context: During normal operations, alarms typically come from a predictable subset of devices. A sudden increase in the variety (entropy) of alarm sources suggests a widespread, coordinated, and unnatural event. This could be an attacker triggering alarms across multiple systems simultaneously as part of an alarm flood or distraction campaign.
    answer_sources:
      - Windows Application Event Logs
      - Zeek conn.log
      - Zeek dnp3.log
      - Central Alarm Servers, Process Historian, HMI workstations, and the Level 2 Supervisory Control Network.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE Shannon entropy of alarm source_IPs over 10-minute sliding window
          COMPARE to historical baseline
          ALERT if entropy > 98th percentile of baseline
  - question: Is a clustering algorithm detecting an anomalous group of low-priority alarms from disparate devices?
    context: This question uses unsupervised machine learning to find patterns in alarm data. A clustering algorithm like DBSCAN can identify a group of events that are densely packed in time but are otherwise unrelated (e.g., from different physical areas, low priority). Such a cluster is unnatural and points to a coordinated, artificial event like an alarm flood.
    answer_sources:
      - Windows Application Event Logs
      - Zeek conn.log
      - Zeek dnp3.log
      - Central Alarm Servers, Process Historian, HMI workstations, and the Level 2 Supervisory Control Network.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT alarm events (timestamp, device_ID, priority) into DBSCAN clustering model
          IDENTIFY clusters
          ALERT on clusters with high density, low priority, and diverse device_IDs
  - question: Has a safety sensor failed to change state as expected after a primary process device was commanded into a high-risk state?
    context: This is a critical check for safety system bypass. Safety Instrumented Systems (SIS) are designed to react to dangerous conditions. If a primary system (e.g., a boiler) is put into a state that should trigger a safety response (e.g., high temperature), but the safety sensor (e.g., flame detector) continues to report a normal state, it's a strong indication that the safety sensor's reporting is being spoofed to prevent a shutdown.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek conn.log
      - Network segments monitoring Safety Instrumented Systems (SIS), network taps between PLCs and SIS controllers, and the Process Historian.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          IF control_command_to_high_risk_state is observed
          AND associated_safety_sensor_state does NOT change within expected_time_window
          THEN GENERATE CRITICAL ALERT
  - question: Is the timing jitter of a safety system's heartbeat message abnormally low?
    context: Network communications, even "heartbeats," have natural, tiny variations in timing (jitter). A replay attack, however, sends pre-recorded packets with perfect, computer-generated timing. If the jitter of a safety system's heartbeat message drops to near-zero, it is highly suspicious and suggests the 'healthy' signal is not coming from the real device but from a perfectly timed replay.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek conn.log
      - Network segments monitoring Safety Instrumented Systems (SIS), network taps between PLCs and SIS controllers, and the Process Historian.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR heartbeat messages from SIS devices
          CALCULATE jitter (stddev of inter-arrival times) over 1-hour window
          COMPARE to historical baseline
          ALERT if jitter is below 1st percentile of baseline
  - question: Is a time-series forecasting model predicting a significant divergence between a process variable and its associated (potentially spoofed) safety sensor?
    context: This method uses physics to detect lies. By modeling a related but difficult-to-manipulate variable (e.g., fuel flow), we can forecast what a dependent safety sensor's value *should* be (e.g., temperature). If the actual reported value from the safety sensor deviates significantly from the physics-based forecast, it implies the sensor's value is being spoofed.
    answer_sources:
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek conn.log
      - Network segments monitoring Safety Instrumented Systems (SIS), network taps between PLCs and SIS controllers, and the Process Historian.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FORECAST expected_safety_sensor_value using ARIMA model on related process variable
          CALCULATE prediction_error = |actual_value - forecasted_value|
          ALERT if prediction_error > dynamic_threshold for > 60 seconds