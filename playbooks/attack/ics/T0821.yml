name: "T0821: Modify Controller Tasking"
id: "5c83b8b6-960c-4e8c-843c-389f4b5952f4"
description: "This playbook helps investigate whether an adversary has modified the tasking of an Industrial Control System (ICS) controller to execute unauthorized code. This can be detected by observing network connections containing controller logic or configuration modification commands from unauthorized sources or outside maintenance windows; spotting the execution of ICS engineering software by unauthorized users or from suspicious parent processes on Engineering Workstations (EWS); or by identifying discrepancies between a controller's running configuration and its authoritative baseline, either through hash comparison or by detecting an anomalous volume or sequence of configuration write commands."
type: "technique"
related:
- "TA0104: Execution"
contributors:
- "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
- question: "Can we detect real-time ICS modification commands from unauthorized sources or outside of approved maintenance windows?"
  context: "This question aims to identify immediate, policy-violating controller modifications. By creating a SIEM rule that triggers on specific ICS function codes (like S7comm 'Download block' or Modbus 'Write Multiple Registers') and cross-references the source IP against an allowlist of Engineering Workstations (EWS) and the timestamp against maintenance schedules, we can catch blatant attempts to tamper with controller logic. An alert from this rule is a high-fidelity indicator of a potential attack or serious misconfiguration."
  answer_sources:
  - "Zeek conn.log"
  - "Zeek s7comm.log"
  - "Zeek modbus.log"
  - "Zeek enip.log"
  - "Zeek dnp3.log"
  - "Network segments within the Process Control Network (PCN) where Engineering Workstations (EWS) communicate with controllers; network taps at the PCN/DMZ boundary; SPAN ports on core switches; Virtual LANs (VLANs) dedicated to Safety Instrumented Systems (SIS) and Basic Process Control Systems (BPCS)."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      SELECT * FROM (Zeek s7comm.log, modbus.log, enip.log, dnp3.log)
      WHERE (function_code IN [ICS_Modification_Codes])
      AND (source_ip NOT IN [EWS_Allowlist] OR event_time NOT IN [Maintenance_Windows])
- question: "Is there a statistically unusual amount of programming activity between a specific source and an ICS controller?"
  context: "This question focuses on detecting anomalous volumes of activity that might evade simple rule-based detection. Adversaries may use legitimate tools from a compromised EWS. By establishing a historical baseline (mean and standard deviation) of modification commands for each source-destination pair, we can flag statistically significant spikes (e.g., > 3 standard deviations above the mean). This helps identify brute-force programming attempts or unusual data staging."
  answer_sources:
  - "Zeek conn.log"
  - "Zeek s7comm.log"
  - "Zeek modbus.log"
  - "Zeek enip.log"
  - "Zeek dnp3.log"
  - "Network segments within the Process Control Network (PCN) where Engineering Workstations (EWS) communicate with controllers; network taps at the PCN/DMZ boundary; SPAN ports on core switches; Virtual LANs (VLANs) dedicated to Safety Instrumented Systems (SIS) and Basic Process Control Systems (BPCS)."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      FOR each (source_ip, destination_ip) pair:
        baseline = CALCULATE_HOURLY_MEAN_AND_STDDEV(modification_commands, last 90 days)
        current_hour_count = COUNT(modification_commands) in last hour
        IF current_hour_count > (baseline.mean + 3 * baseline.std_dev) AND current_hour_count > 5
        THEN ALERT
- question: "Does the overall pattern of controller modification activity across the network deviate from the established operational rhythm?"
  context: "This question takes a network-wide view to identify subtle, coordinated, or low-and-slow attacks. A sophisticated time-series model (like Prophet or LSTM) can learn the complex patterns of normal operations, including seasonality (day of week, time of day) and the impact of scheduled maintenance. It can then flag periods of activity that are inconsistent with these learned rhythms, even if the activity volume isn't high enough to trigger statistical alerts."
  answer_sources:
  - "Zeek conn.log"
  - "Zeek s7comm.log"
  - "Zeek modbus.log"
  - "Zeek enip.log"
  - "Zeek dnp3.log"
  - "Network segments within the Process Control Network (PCN) where Engineering Workstations (EWS) communicate with controllers; network taps at the PCN/DMZ boundary; SPAN ports on core switches; Virtual LANs (VLANs) dedicated to Safety Instrumented Systems (SIS) and Basic Process Control Systems (BPCS)."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      MODEL = TRAIN_TIMESERIES_MODEL on (aggregated_modification_counts, day_of_week, hour_of_day, is_maintenance_window)
      PREDICT anomaly_score for current 15-min interval
      IF anomaly_score > 0.99
      THEN ALERT
- question: "Has ICS engineering software been executed by an unauthorized user, spawned by a suspicious parent process, and immediately followed by a network connection to a controller?"
  context: "This question seeks to detect the malicious use of legitimate ICS software. An adversary who has gained access to an EWS might use scripting tools like PowerShell to launch engineering applications to avoid direct interaction. This rule correlates process creation events (EID 4688) with network connection events (EID 5156) to link the unauthorized or suspicious software launch directly to an attempt to communicate with a controller, providing a strong indicator of compromise."
  answer_sources:
  - "Windows Event ID 4688"
  - "Windows Event ID 4624"
  - "Windows Event ID 4672"
  - "Windows Event ID 5156"
  - "Zeek conn.log"
  - "Dedicated Engineering Workstations (EWS); Active Directory Domain Controllers authenticating PCN users; Endpoint Detection and Response (EDR) platforms deployed on EWS hosts."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      JOIN (Windows EID 4688) AS p ON (Windows EID 5156) AS c
      WHERE p.NewProcessName IN [ICS_Software_List]
      AND (p.SubjectUserSid NOT IN [Authorized_Engineers] OR p.ParentProcessName IN [Suspicious_Parents])
      AND p.ProcessId = c.ProcessId
      AND c.DestinationAddress IN [Controller_IP_Range]
      AND TIMEDIFF(c.timestamp, p.timestamp) < 60s
- question: "Is an authorized user running ICS software from an unusual workstation or at an abnormal time?"
  context: "This question addresses the insider threat or compromised account scenario where credentials are valid. By profiling the normal behavior of each authorized engineer—which workstations they use and when they typically work—we can identify rare or unprecedented activity. An alert on a low-probability combination of (user, workstation, time) could indicate that the user's account has been compromised and is being used by an adversary."
  answer_sources:
  - "Windows Event ID 4688"
  - "Windows Event ID 4624"
  - "Windows Event ID 4672"
  - "Windows Event ID 5156"
  - "Zeek conn.log"
  - "Dedicated Engineering Workstations (EWS); Active Directory Domain Controllers authenticating PCN users; Endpoint Detection and Response (EDR) platforms deployed on EWS hosts."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      FOR each user:
        baseline = CALCULATE_PROBABILITY(user, workstation, hour_of_day) from 90 days of EID 4688 events
      ON new EID 4688 event:
        current_prob = GET_PROBABILITY(event.user, event.workstation, event.hour)
        IF current_prob < 5th_percentile
        THEN ALERT
- question: "Is a user's overall session activity on an Engineering Workstation anomalous, considering factors like login time, commands run, and network connections?"
  context: "This question provides a holistic view of user behavior to detect sophisticated threats that might not trigger individual rules. A UBA model can synthesize multiple weak signals—such as an unusual login time, the use of command-line tools, privilege escalation, and connections to many controllers—into a single high-confidence anomaly score. This is effective at detecting attackers who are trying to blend in by using legitimate credentials and tools in a subtly abnormal way."
  answer_sources:
  - "Windows Event ID 4688"
  - "Windows Event ID 4624"
  - "Windows Event ID 4672"
  - "Windows Event ID 5156"
  - "Zeek conn.log"
  - "Dedicated Engineering Workstations (EWS); Active Directory Domain Controllers authenticating PCN users; Endpoint Detection and Response (EDR) platforms deployed on EWS hosts."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      FOR each user_session:
        feature_vector = [login_time, cmd_entropy, parent_child_relations, privilege_level, net_connections_count]
        anomaly_score = UBA_MODEL.predict(feature_vector)
        IF anomaly_score > 99.5th_percentile
        THEN ALERT
- question: "Does the running configuration on a critical controller match its approved, known-good baseline?"
  context: "This question is about direct integrity verification. Unauthorized modifications can be detected by periodically polling controllers, retrieving their current tasking logic, and comparing a hash of that logic against a securely stored 'golden image' hash. A mismatch is a definitive sign of an unauthorized change and requires immediate investigation. This method can detect changes that were made through out-of-band means not visible on the network."
  answer_sources:
  - "Zeek s7comm.log"
  - "Zeek modbus.log"
  - "Zeek enip.log"
  - "Controller configuration backups / 'golden image' repository"
  - "Controller internal logs"
  - "Directly on Programmable Logic Controllers (PLCs) and Distributed Control Systems (DCS); Secure baseline repository or Configuration Management Database (CMDB) storing controller golden images; Network segments carrying configuration traffic between EWS and controllers."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      SCHEDULED_JOB (every 4 hours):
        current_config = POLL_CONTROLLER(controller_ip)
        current_hash = HASH(current_config)
        baseline_hash = GET_GOLDEN_IMAGE_HASH(controller_ip)
        IF current_hash != baseline_hash
        THEN ALERT (expected: baseline_hash, actual: current_hash)
- question: "Is there an unusually high rate or variety of configuration write commands being sent to a specific controller?"
  context: "This question aims to detect abnormal modification behavior by analyzing the characteristics of the write commands themselves. An adversary attempting to find a working exploit or making multiple small changes might generate a higher volume (count) or a greater variety (entropy) of write commands than a typical engineer during a planned update. Baselining these metrics and alerting on deviations can catch suspicious programming activity."
  answer_sources:
  - "Zeek s7comm.log"
  - "Zeek modbus.log"
  - "Zeek enip.log"
  - "Controller configuration backups / 'golden image' repository"
  - "Controller internal logs"
  - "Directly on Programmable Logic Controllers (PLCs) and Distributed Control Systems (DCS); Secure baseline repository or Configuration Management Database (CMDB) storing controller golden images; Network segments carrying configuration traffic between EWS and controllers."
  range: "last 30 days"
  queries:
  - technology: "Pseudocode"
    query: |
      FOR each controller:
        threshold_count = 98th_PERCENTILE(hourly_write_count, last 30 days)
        threshold_entropy = 98th_PERCENTILE(hourly_write_entropy, last 30 days)
      ON current hour:
        current_count = COUNT(write_commands)
        current_entropy = ENTROPY(write_commands)
        IF current_count > threshold_count OR current_entropy > threshold_entropy
        THEN ALERT
- question: "Can we use machine learning to automatically classify a configuration change as benign or potentially malicious in real-time?"
  context: "This question leverages supervised machine learning to build a sophisticated classification engine. By training a model like a Random Forest on labeled historical data, it can learn the complex, non-linear relationships between features of a change (source IP, user, command type, time of day, presence of a change ticket) and its classification ('Benign' or 'Malicious'). This allows for automated, real-time assessment of new changes, reducing analyst fatigue and enabling faster response to likely threats."
  answer_sources:
  - "Zeek s7comm.log"
  - "Zeek modbus.log"
  - "Zeek enip.log"
  - "Controller configuration backups / 'golden image' repository"
  - "Controller internal logs"
  - "Directly on Programmable Logic Controllers (PLCs) and Distributed Control Systems (DCS); Secure baseline repository or Configuration Management Database (CMDB) storing controller golden images; Network segments carrying configuration traffic between EWS and controllers."
  range: "last 90 days"
  queries:
  - technology: "Pseudocode"
    query: |
      MODEL = TRAIN_RANDOM_FOREST on labeled historical data with features [source_ip, user, command_type, data_size, time_of_day, has_change_ticket]
      ON new configuration_change event:
        prediction = MODEL.classify(event)
        IF prediction == 'Malicious'
        THEN ALERT