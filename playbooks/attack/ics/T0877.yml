name: T0877: I-O Image
id: 9c7d4e2f-1a8b-4b5c-8f6a-3e2d1c0b9a8d
description: This playbook helps to identify if an adversary is collecting Programmable
  Logic Controller (PLC) I/O image data to understand or prepare to manipulate an
  industrial process. Detection is based on several indicators, including unauthorized
  IP addresses sending ICS read commands, statistically significant volumes of read
  requests from authorized but potentially compromised sources, the use of non-whitelisted
  ICS protocol function codes, and the temporal correlation between network read anomalies
  and suspicious host-based events on source systems like Engineering Workstations
  (EWS) or Human-Machine Interfaces (HMI).
type: technique
related:
- TA0100: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Are ICS read commands to a PLC's I/O memory space originating from an
    IP address that is not on the authorized whitelist for that PLC?
  context: This question is crucial for identifying blatant unauthorized access attempts.
    By maintaining a strict whitelist of approved devices (like HMIs and Engineering
    Workstations) allowed to communicate with specific PLCs, any deviation immediately
    signals a potential reconnaissance or collection attempt by an unauthorized device
    on the network. Answering this helps enforce network segmentation and provides
    a high-fidelity alert for initial investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Process Control Network (PCN) segments, specifically network traffic between
    Level 2 (Supervisory) and Level 1 (Control) zones, captured via SPAN ports or
    network taps on switches connected to PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each ICS read event from protocol logs
      // Check if event.source_ip is in the pre-defined whitelist for event.destination_plc_ip
      // If the source_ip is not in the whitelist, generate a high-severity alert.
- question: Has a 'first-seen' source IP, one never before observed communicating
    with a specific PLC, initiated an ICS read command?
  context: This question helps detect new or un-inventoried devices attempting to
    gather data. While not as definitive as a whitelist violation, a 'first-seen'
    event is a strong indicator of change in the environment that warrants investigation.
    It could be a newly (and legitimately) commissioned device, but it could also
    be an adversary's first step in profiling the control system after gaining initial
    network access.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Process Control Network (PCN) segments, specifically network traffic between
    Level 2 (Supervisory) and Level 1 (Control) zones, captured via SPAN ports or
    network taps on switches connected to PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each destination PLC, maintain a historical list of source IPs observed over the last 30 days.
      // For each new ICS read event, check if the source_ip is in the historical list for that destination_plc_ip.
      // If not, generate a medium-severity 'first-seen' alert and add the IP to the historical list.
- question: Can a machine learning model, trained on historical network data and asset
    information, classify a new ICS read request as 'unauthorized' with high confidence?
  context: This question moves beyond simple rules to a more nuanced, context-aware
    detection method. A supervised model can learn the subtle relationships between
    various features (device types, protocols, function codes) that define 'normal'
    communication. This allows it to identify unauthorized activity that might not
    violate a simple rule but deviates from established, complex patterns, thus reducing
    false positives and detecting more sophisticated attacks.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Process Control Network (PCN) segments, specifically network traffic between
    Level 2 (Supervisory) and Level 1 (Control) zones, captured via SPAN ports or
    network taps on switches connected to PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each new ICS read event, extract features (e.g., source IP, dest PLC IP, protocol, function code, source device type).
      // Input the feature vector into the trained supervised classification model.
      // If the model's prediction is 'unauthorized' and the confidence score > 0.95, generate an alert.
- question: Has an authorized source-destination PLC pair exceeded a pre-defined
    hard threshold for the number of read requests within a one-minute window?
  context: This question helps detect potential 'smash and grab' data collection
    from a compromised but otherwise authorized host (e.g., an HMI). By setting a
    hard limit based on known operational maximums, any significant spike that surpasses
    this threshold is a strong indicator of abnormal, possibly malicious, bulk data
    exfiltration or reconnaissance activity that requires immediate attention.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Network tap points or SPAN ports on managed switches within PCN segments, monitoring
    traffic flows between Level 3 devices and Level 2 devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each defined source-destination PLC pair, count read requests over a 60-second sliding window.
      // If the count exceeds the pre-defined hard threshold (e.g., 500 requests/min), generate a high-severity alert.
- question: Is the volume of read requests between an authorized source and a PLC
    statistically significant when compared to its historical baseline for that specific
    time of day?
  context: This question aims to identify anomalous behavior that might not breach
    a hard threshold but is unusual for normal operations. Legitimate traffic often
    has patterns. A statistical approach using standard deviations or percentiles
    can detect when a compromised host is being used to subtly collect data at a rate
    that is abnormal for that specific communication pair and time, providing a more
    sensitive trigger than a fixed limit.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Network tap points or SPAN ports on managed switches within PCN segments, monitoring
    traffic flows between Level 3 devices and Level 2 devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each source-destination PLC pair, calculate a rolling 30-day baseline of read counts/minute (e.g., average, stddev, 99th percentile).
      // In a 1-minute window, count the current read requests.
      // If the current count > (average + 3 * stddev) OR current count > 99th percentile, generate a medium-severity alert.
- question: Does the current pattern of read request frequency between a high-consequence
    source-destination PLC pair deviate significantly from the normal cyclical patterns
    learned by a time-series anomaly detection model?
  context: This is an advanced technique for protecting critical assets. Time-series
    models (like LSTM autoencoders) can learn the complex, time-dependent 'rhythm'
    of communication. This question helps detect sophisticated adversaries who might
    try to blend in by using low-and-slow collection techniques. If the current traffic
    pattern doesn't match the learned normal rhythm, the model flags it as an anomaly.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Network tap points or SPAN ports on managed switches within PCN segments, monitoring
    traffic flows between Level 3 devices and Level 2 devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each high-consequence source-destination pair, feed a time-series of read request frequencies into a trained model (e.g., LSTM Autoencoder).
      // Calculate the model's reconstruction error for the current time window.
      // If the reconstruction error exceeds a dynamically tuned threshold, generate an alert.
- question: Is an authorized source using an ICS protocol function code that is not
    on the explicit whitelist for that specific source-destination PLC communication
    path?
  context: This question targets unusual command usage. Normal operations typically
    use a limited and predictable set of function codes. An adversary exploring a
    PLC's capabilities might use diagnostic or other non-standard codes. Alerting
    on non-whitelisted codes provides a high-fidelity signal that someone is deviating
    from expected operational behavior.
  answer_sources:
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Deep Packet Inspection (DPI) points on network taps or SPAN ports within PCN
    segments where Level 3 devices communicate with Level 2 devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each authorized source-destination PLC pair, maintain a whitelist of allowed ICS function codes.
      // For each read request, check if the function code is on the whitelist for that specific path.
      // If not, generate a high-severity alert.
- question: Has the variety (entropy) of ICS function codes used by a source IP increased
    significantly compared to its historical baseline?
  context: This question seeks to identify behavioral changes in command usage. A
    sudden increase in the variety of function codes (higher entropy) suggests that
    a device is performing a wider range of actions than usual, such as an adversary
    experimenting with different commands after compromising a host. This indicates
    a shift away from normal, repetitive operational patterns.
  answer_sources:
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Deep Packet Inspection (DPI) points on network taps or SPAN ports within PCN
    segments where Level 3 devices communicate with Level 2 devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each source IP, calculate the Shannon entropy of the function codes used in a rolling 60-minute window.
      // Compare the current entropy score to a historical baseline (e.g., 95th percentile) for that source.
      // If the current score exceeds the historical threshold, generate a medium-severity alert.
- question: Does the distribution of ICS function codes used by an authorized source
    over a fixed time window classify as an outlier according to an unsupervised anomaly
    detection model?
  context: This question uses machine learning to automatically identify abnormal
    command usage without pre-defined rules. An unsupervised model (e.g., Isolation
    Forest) can learn the 'shape' of normal function code frequency and spot when
    a device's activity falls outside this shape. This is powerful for detecting novel
    or unexpected combinations of command usage that might indicate an adversary's
    presence.
  answer_sources:
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Deep Packet Inspection (DPI) points on network taps or SPAN ports within PCN
    segments where Level 3 devices communicate with Level 2 devices.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each authorized source, create a feature vector from the frequency distribution of ICS function codes in a 1-hour window.
      // Input this vector into a trained unsupervised model (e.g., Isolation Forest).
      // If the model classifies the vector as an anomaly or outlier, generate an alert.
- question: When a network-based PLC read anomaly is detected, is there a correlated
    process execution on the source host (EWS/HMI) involving a known hacking tool
    or suspicious command-line arguments within a +/- 10 minute window?
  context: This question is vital for contextualizing a network alert and confirming
    a host compromise. A network anomaly alone could be a false positive, but correlating
    it with the execution of a tool like `ncat.exe` on the source machine provides
    strong evidence that the host is compromised and being used to attack the control
    system. This correlation drastically increases confidence and justifies an immediate
    incident response.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows Event ID 4663
  - Endpoint devices (EWS/HMI) and network taps monitoring traffic to PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // ON network_read_anomaly_alert(source_ip, timestamp):
      // QUERY host logs (Event ID 4688) from source_ip for +/- 10 minutes around the timestamp.
      // IF a process name is on a hacking tool blacklist OR its command line contains suspicious patterns (e.g., '-enc').
      // THEN escalate the initial network alert to a critical incident.
- question: Following a network PLC read anomaly, does the source host exhibit rare
    or 'first-seen' process activity, such as an unusual process being executed or
    a common process being spawned by an unexpected parent?
  context: This question helps uncover stealthier host-based indicators of compromise.
    Adversaries often try to live off the land, using legitimate tools in unusual
    ways (e.g., `powershell.exe` spawned by a PDF reader). By baselining normal process
    relationships, we can detect these deviations that, when correlated with network
    anomalies, point strongly toward a compromised host.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows Event ID 4663
  - Endpoint devices (EWS/HMI) and network taps monitoring traffic to PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // ON network_read_anomaly_alert(source_ip, timestamp):
      // ANALYZE process logs (Event ID 4688) from source_ip around the timestamp.
      // IF a process name is 'first-seen' on that host OR a parent-child process relationship is statistically rare.
      // THEN flag this activity as correlated evidence for the alert.
- question: Can a sequence-based model, trained on combined network and host event
    data, identify the current real-time sequence of events as being characteristic
    of a known malicious attack path?
  context: This question represents a holistic approach, looking at the 'story' of
    an attack rather than isolated events. An attack is a sequence of actions (e.g.,
    logon -> process execution -> PLC read). A sequence model can learn these malicious
    chains of events, allowing it to detect an attack in progress by recognizing the
    pattern, even if individual events are not highly anomalous on their own.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek modbus.log
  - Zeek enip.log
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows Event ID 4663
  - Endpoint devices (EWS/HMI) and network taps monitoring traffic to PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Continuously stream a time-ordered sequence of event types (e.g., PLC_Read, Process_Exec, New_Login) into a trained sequence model (e.g., LSTM).
      // The model analyzes the sequence of events over time.
      // IF the current sequence is classified as strongly matching a learned malicious pattern, generate a high-confidence alert.