name: 'T0827: Loss of Control'
id: 3a1b9d4e-7f6c-4e8a-9a1b-2c3d4e5f6a7b
description: |
  This playbook helps investigate whether an adversary has caused a sustained loss of control over a critical industrial process. It focuses on detecting anomalies such as HMI application errors correlated with a lack of successful Modbus 'Write' commands or a spike in Modbus exceptions; critical process variables deviating beyond normal operational limits without corresponding authorized control commands; and Safety Instrumented System (SIS) trips that occur without a valid preceding cause, like a process variable exceeding a safety limit or an authorized manual trip command.
type: technique
related:
  - 'TA0105: Impact'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Are HMI communication failure events correlated with a lack of successful 'Write' commands to the PLC?"
    context: |
      This question is crucial for identifying a potential denial of control attack. If an HMI reports it cannot communicate with a PLC, but network logs show a simultaneous absence of legitimate control commands ('Write' operations), it could indicate that an adversary is blocking or manipulating control traffic, preventing operators from controlling the process. This is a direct indicator of a loss of control.
    answer_sources:
      - Windows Event ID 1000
      - Zeek modbus.log
      - HMI hosts in the control room, PCN network taps monitoring traffic to critical PLCs (e.g., Boiler Control PLC, Turbine Governor PLC), Engineering Workstation subnets.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. TRIGGER on Windows Event ID 1000 from HMI with 'communication error' message.
          // 2. EXTRACT HMI IP address.
          // 3. SEARCH Zeek modbus.log for HMI IP in the last 1 minute.
          // 4. COUNT successful Modbus 'Write' commands (func_codes: 05, 06, 0F, 10).
          // 5. ALERT if count is 0.
  - question: "Has there been a statistically significant increase in Modbus exception responses from a PLC to an HMI?"
    context: |
      A sudden spike in exception responses (like 'Illegal Function' or 'Illegal Data Address') from a PLC suggests that it is receiving invalid or malformed commands. This could be an adversary attempting to probe the PLC's memory, find vulnerabilities, or disrupt its operation by sending commands it cannot process. Baselining normal error rates and alerting on deviations helps detect this anomalous and potentially malicious activity.
    answer_sources:
      - Windows Event ID 1000
      - Zeek modbus.log
      - HMI hosts in the control room, PCN network taps monitoring traffic to critical PLCs (e.g., Boiler Control PLC, Turbine Governor PLC), Engineering Workstation subnets.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. For each HMI-PLC pair, CALCULATE 30-day baseline of Modbus exception counts per 5-min interval.
          // 2. DETERMINE 99th percentile threshold from baseline.
          // 3. MONITOR real-time exception counts in a 5-min sliding window.
          // 4. ALERT if current count > threshold.
  - question: "Is an HMI exhibiting a combination of anomalous behaviors, such as communication errors, exception responses, and a lack of 'Write' commands, that deviates from its normal operational profile?"
    context: |
      This question uses machine learning to move beyond simple thresholding. By combining multiple indicators (communication errors, exception responses, lack of writes) into a single model, it can detect subtle, coordinated attacks that might not trigger individual rules. An anomaly score exceeding the threshold indicates that the HMI's overall communication pattern is highly unusual and warrants investigation for a potential loss-of-control scenario.
    answer_sources:
      - Windows Event ID 1000
      - Zeek modbus.log
      - HMI hosts in the control room, PCN network taps monitoring traffic to critical PLCs (e.g., Boiler Control PLC, Turbine Governor PLC), Engineering Workstation subnets.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. TRAIN unsupervised anomaly detection model on historical data (30+ days) with features: comm errors, exception counts, absence of 'Write' commands.
          // 2. APPLY trained model to real-time data streams.
          // 3. ALERT when anomaly score exceeds a pre-tuned threshold.
  - question: "Is an unauthorized device attempting to issue 'Write' commands to a critical PLC?"
    context: |
      This question addresses the fundamental security principle of least privilege. In a properly configured control system, only specific, authorized workstations should be able to modify PLC logic or setpoints. Detecting a 'Write' command from an unknown IP address or an attempt by an authorized IP to write to a forbidden register is a strong indicator of a compromised device or an insider threat attempting to manipulate the process.
    answer_sources:
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek conn.log
      - Process Historian Data
      - Windows Event ID 4624
      - Process Historian database servers, Network taps capturing traffic between Level 1 (PLCs/RTUs) and Level 2 (Supervisory Control), specific PLCs controlling critical physical processes.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. DEFINE a whitelist of {Source IP: [Allowed_Register/Object]}.
          // 2. MONITOR network logs (modbus, dnp3) for all 'Write' commands.
          // 3. For each 'Write', CHECK if Source IP and Target Register/Object are in the whitelist.
          // 4. ALERT if not in whitelist.
  - question: "Has a critical process variable moved outside its normal operating range without a legitimate, corresponding control command?"
    context: |
      This question aims to differentiate between normal process fluctuations and adversary-induced changes. A process variable exceeding its historical boundaries is anomalous, but it could be due to a legitimate operator action. By correlating the deviation with the absence of an authorized 'Write' command, we can infer that the change is unauthorized and potentially malicious. The secondary check on command entropy helps detect repetitive, targeted commands designed to force a variable to a specific state.
    answer_sources:
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek conn.log
      - Process Historian Data
      - Windows Event ID 4624
      - Process Historian database servers, Network taps capturing traffic between Level 1 (PLCs/RTUs) and Level 2 (Supervisory Control), specific PLCs controlling critical physical processes.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. For a critical Process Variable, MONITOR if its value is outside the 1st-99th percentile for 5 mins.
          // 2. If true, CHECK for a corresponding authorized 'Write' command in network logs within the same window.
          // 3. ALERT if no authorized 'Write' command is found.
  - question: "Is the physical process behaving in a way that cannot be explained by the legitimate control inputs it is receiving?"
    context: |
      This advanced question seeks to detect manipulation by modeling the expected physical behavior of the system. Industrial processes have inherent physical relationships (e.g., increasing fuel flow should increase temperature). A multi-variate model learns these relationships. If a process variable deviates from what the model predicts based on legitimate control inputs, it strongly suggests an external, unlogged, and malicious influence is acting on the system.
    answer_sources:
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek conn.log
      - Process Historian Data
      - Windows Event ID 4624
      - Process Historian database servers, Network taps capturing traffic between Level 1 (PLCs/RTUs) and Level 2 (Supervisory Control), specific PLCs controlling critical physical processes.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. TRAIN a multi-variate model (e.g., VAR) on historical process variables and control commands.
          // 2. USE the model to forecast future process variable values with a prediction interval.
          // 3. MONITOR if the actual process variable value falls outside its predicted interval for > 3 minutes.
          // 4. ALERT if a sustained deviation occurs.
  - question: "Did a Safety Instrumented System (SIS) trip occur without a valid physical cause or an authorized manual command?"
    context: |
      This question is of the highest criticality. The SIS is the last line of defense against a catastrophic failure. An 'uncommanded' or 'spurious' trip is a major red flag. By automatically verifying that a trip was not caused by a real process upset (PV exceeding a safety limit) or a deliberate operator action, we can quickly identify a potential direct attack on the safety system itself, which could be a precursor to causing physical damage.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek s7comm.log
      - Zeek enip.log
      - SIS System Logs
      - Process Historian Data
      - SIS Logic Solver hardware, SIS Engineering Workstations, Network segments dedicated to the Safety Instrumented Network (SIN), Firewalls or Data Diodes separating the SIN from the PCN.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. TRIGGER on an SIS trip alarm from SIS logs.
          // 2. LOOKBACK 5 minutes in Process Historian data for any PV exceeding its safety limit.
          // 3. LOOKBACK 5 minutes in SIS command logs / Win Event 4624 for an authorized manual trip command.
          // 4. ALERT if neither condition is met.
  - question: "Was an SIS trip correlated with statistically rare or anomalous network activity on the SIS network?"
    context: |
      SIS networks are typically static and highly predictable. Any deviation from the established communication baseline is suspicious. This question attempts to link a safety system trip to unusual network behavior. The presence of a new device, a non-standard protocol, or unusual data flows communicating with the SIS controller right before a trip provides strong circumstantial evidence that the trip was induced by malicious network activity.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek s7comm.log
      - Zeek enip.log
      - SIS System Logs
      - Process Historian Data
      - SIS Logic Solver hardware, SIS Engineering Workstations, Network segments dedicated to the Safety Instrumented Network (SIN), Firewalls or Data Diodes separating the SIN from the PCN.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. ESTABLISH a baseline of normal network traffic on the SIS network (IPs, ports, protocols).
          // 2. On an SIS trip, ANALYZE network traffic from the preceding 30 minutes.
          // 3. CALCULATE statistical rarity (e.g., z-score) of observed connections against the baseline.
          // 4. ALERT if trip correlates with statistically rare network activity.
  - question: "Can a machine learning model classify a recent SIS trip as anomalous based on historical data and associated features?"
    context: |
      This question operationalizes the investigation of SIS trips using machine learning. By training a model on labeled historical data, we can automate the classification of new trips. The model considers multiple factors simultaneously (process state, manual commands, network activity, user logins) to make a holistic judgment. An 'Anomalous' classification with high confidence provides a rapid, data-driven assessment that the trip was likely malicious in nature.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek s7comm.log
      - Zeek enip.log
      - SIS System Logs
      - Process Historian Data
      - SIS Logic Solver hardware, SIS Engineering Workstations, Network segments dedicated to the Safety Instrumented Network (SIN), Firewalls or Data Diodes separating the SIN from the PCN.
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          // 1. TRAIN a supervised classification model on labeled historical SIS trips ('Legitimate' vs 'Anomalous').
          // 2. ENGINEER features: PV excursion flag, manual command flag, network rarity score, etc.
          // 3. DEPLOY model to classify new SIS trips in real-time.
          // 4. ALERT if a trip is classified as 'Anomalous' with high confidence (>0.90).