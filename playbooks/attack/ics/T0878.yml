name: T0878: Alarm Suppression
id: 1f8e4a9e-8b1c-4f7e-9d0a-2c6f1b3e7a5d
description: |
  Investigates whether an adversary is attempting to inhibit an organization's ability to respond to a process disruption or failure by suppressing alarms. This can be achieved by modifying alarm configuration files, sending network commands to alter alarm states on control devices, creating a mismatch between process conditions and logged alarms, or by terminating the software services responsible for alarm management. The goal is to detect these varied suppression methods across file systems, network traffic, and application behavior.
type: technique
related:
- TA0107: Inhibit Response Function
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has an unauthorized user or process modified, deleted, or renamed a critical alarm configuration file?
  context: |
    This question seeks to identify direct tampering with alarm configuration files or executables. By monitoring for write or delete access to these critical files by any user or process not on an explicit whitelist, security teams can detect a common and direct method an adversary might use to disable or manipulate alarms. An alert here is a high-fidelity indicator of malicious intent.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4656
  - Windows Event ID 4660
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations (EWS)
  - SCADA Servers
  - Historian Servers
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH for file system access events (EID 4663)
      WHERE file path is in critical_alarm_files_list
      AND access type is 'WriteData' or 'DELETE'
      AND (user is NOT in authorized_users_list OR process is NOT in authorized_processes_list)
- question: Is there a statistically unusual volume or pattern of modifications to critical
    alarm files on a specific host?
  context: |
    This question moves beyond simple allow/deny lists to detect abnormal behavior, even by authorized accounts that may be compromised. It establishes a baseline for normal file modification activity and command-line argument complexity. A sudden spike in modifications or a significant change in command-line entropy can reveal a compromised account or process being used to manipulate alarm files in an atypical manner.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4656
  - Windows Event ID 4660
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations (EWS)
  - SCADA Servers
  - Historian Servers
  range: last 90 days
  queries:
  - pseudocode: |
      COUNT hourly file modification events (EID 4663) on critical alarm files per host.
      ALERT if count > 99th_percentile_baseline.
      CALCULATE Shannon entropy of command-line arguments (from EID 4688) for processes interacting with these files.
      ALERT if entropy deviates > 2 standard deviations from baseline.
- question: Is there a network-wide, coordinated pattern of alarm file modifications
    that deviates from historical norms?
  context: |
    This question aims to identify large-scale, potentially stealthy campaigns across multiple ICS hosts. By aggregating file modification data and applying a time-series anomaly detection model, analysts can detect subtle, coordinated changes that might be missed when looking at individual hosts. This is particularly effective for identifying low-and-slow attacks or activity timed to blend in with normal maintenance windows.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4656
  - Windows Event ID 4660
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations (EWS)
  - SCADA Servers
  - Historian Servers
  range: last 90 days
  queries:
  - pseudocode: |
      AGGREGATE hourly count of critical alarm file modification events (EID 4663) across all monitored hosts.
      APPLY time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the aggregated count.
      ALERT on sustained deviations from the predicted normal range.
- question: Has an unauthorized device sent a network command to modify a critical
    alarm state on a PLC or RTU?
  context: |
    This question focuses on detecting network-based attacks that bypass host-level defenses. An adversary may directly command a PLC or other field device to change an alarm's setpoint, disable it, or alter its suppression flag. This query verifies that all such write commands originate from an authorized source (e.g., a specific HMI or EWS) and targets a known device, preventing unauthorized network entities from manipulating alarms.
  answer_sources:
  - Zeek modbus.log
  - Zeek s7comm.log
  - Zeek conn.log
  - OT network segments between Level 2 (Supervisory Control) and Level 1 (Basic
    Control)
  - DMZ for remote access to OT
  - Safety Instrumented System (SIS) network zones
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH network logs (Zeek modbus, s7comm) for write commands (e.g., Modbus func_code 6, 16).
      ALERT if source_IP is NOT in the authorized_IP_list for the target PLC and its critical alarm register.
- question: Is there a statistically anomalous frequency or pattern of write commands
    targeting alarm-related registers?
  context: |
    This question seeks to identify behavioral anomalies in OT network traffic. Rather than relying solely on whitelists, it detects unusual patterns such as a sudden spike in the frequency of write commands to a specific device or a suspicious focus (low entropy) on a small set of alarm registers from one source. This can indicate an adversary attempting to brute-force, test, or manipulate alarm settings.
  answer_sources:
  - Zeek modbus.log
  - Zeek s7comm.log
  - Zeek conn.log
  - OT network segments between Level 2 (Supervisory Control) and Level 1 (Basic
    Control)
  - DMZ for remote access to OT
  - Safety Instrumented System (SIS) network zones
  range: last 90 days
  queries:
  - pseudocode: |
      BASELINE hourly frequency of write operations per source-destination-function tuple.
      ALERT if current frequency > 99th_percentile_baseline.
      CALCULATE Shannon entropy of register addresses per source IP over a 30-minute window.
      ALERT if entropy drops below the 10th percentile baseline.
- question: Are there network write commands related to alarms that are statistically
    rare and differ from established normal behavior?
  context: |
    This question uses unsupervised machine learning to find "unknown unknowns" in network traffic. By training a model on what constitutes normal write traffic (combinations of source, destination, function, address, value), it can flag novel commands that don't match any pre-defined rule or simple statistical threshold. This is effective for detecting new attack vectors or highly unusual parameter manipulations.
  answer_sources:
  - Zeek modbus.log
  - Zeek s7comm.log
  - Zeek conn.log
  - OT network segments between Level 2 (Supervisory Control) and Level 1 (Basic
    Control)
  - DMZ for remote access to OT
  - Safety Instrumented System (SIS) network zones
  range: last 90 days
  queries:
  - pseudocode: |
      EXTRACT features (source/dest IP, function, register, value) from network write commands.
      APPLY unsupervised anomaly detection model (e.g., Isolation Forest) to the feature set.
      ALERT if a new command's anomaly score exceeds the established threshold.
- question: Did a critical process variable exceed its alarm threshold without a corresponding
    alarm being logged?
  context: |
    This question provides a critical integrity check for the entire alarm system. It correlates real-world process data (e.g., temperature, pressure readings from network traffic) with alarm server logs. If a process variable is observed to be in an alarm state for a sustained period, but no corresponding alarm is logged by the alarm server, it strongly indicates that the alarm reporting chain has been broken or suppressed.
  answer_sources:
  - Zeek modbus.log
  - Zeek s7comm.log
  - Windows Event Log (Application)
  - Custom Application Logs
  - Process Historian Servers
  - Alarm & Event Servers
  - SCADA Servers
  - OT Network segments monitoring Level 1 (Basic Control) process data
  range: last 90 days
  queries:
  - pseudocode: |
      CORRELATE process variable data (from Zeek logs) with alarm server logs (from Windows Event Log).
      IF process_variable > threshold for >30 seconds
      AND corresponding alarm_event is NOT found in logs within a 60-second grace period
      THEN ALERT.
- question: Is there an abnormal delay between a process variable exceeding its threshold
    and the alarm being logged, or are process variables 'flat-lining' just below
    a threshold?
  context: |
    This question looks for subtle forms of manipulation. A significant and unusual delay between a physical event and its corresponding alarm log could indicate system interference or performance degradation caused by an adversary. Additionally, it checks for "flat-lining," a known technique where an adversary holds a process value just below the alarm limit to hide a dangerous condition from operators.
  answer_sources:
  - Zeek modbus.log
  - Zeek s7comm.log
  - Windows Event Log (Application)
  - Custom Application Logs
  - Process Historian Servers
  - Alarm & Event Servers
  - SCADA Servers
  - OT Network segments monitoring Level 1 (Basic Control) process data
  range: last 90 days
  queries:
  - pseudocode: |
      CALCULATE time delta between process threshold breach (Zeek) and alarm log event.
      ALERT if delta > 3 standard deviations from the mean baseline.
      APPLY Statistical Process Control (SPC) chart to critical process variable values.
      ALERT on abnormally static readings just below an alarm threshold.
- question: Based on historical data, did a situation occur that should have triggered
    an alarm, but no alarm was generated?
  context: |
    This question uses a predictive model to ask, "Given the current state of process variables, what is the probability that an alarm *should* be active?" A supervised model is trained on historical process data and its corresponding alarm outcomes. If the live model predicts an alarm with high confidence but none is observed in the logs, it provides a strong signal of suppression that might be missed by simple rule-based logic.
  answer_sources:
  - Zeek modbus.log
  - Zeek s7comm.log
  - Windows Event Log (Application)
  - Custom Application Logs
  - Process Historian Servers
  - Alarm & Event Servers
  - SCADA Servers
  - OT Network segments monitoring Level 1 (Basic Control) process data
  range: last 90 days
  queries:
  - pseudocode: |
      INPUT recent process variable statistics (e.g., 5-minute avg, min, max) into a trained classification model.
      IF model predicts alarm_probability > 0.95
      AND no corresponding alarm event is logged within a set timeframe
      THEN ALERT 'Predicted Alarm Missed'.
- question: Has a critical alarm management service or process been stopped, terminated,
    or disabled?
  context: |
    This question performs a direct health check on the software components responsible for alarm processing and display. If a critical alarm service is stopped, no alarms can be generated or logged. This query looks for explicit events indicating that a service has been stopped (e.g., via 'net stop' or 'taskkill') or disabled, which is a clear and direct method of alarm suppression.
  answer_sources:
  - Windows Event ID 7036
  - Windows Event ID 4688
  - Windows Event ID 7034
  - Windows Event ID 4697
  - Windows Event ID 4700
  - Windows Event ID 4701
  - Alarm & Event Servers
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations (EWS)
  - SCADA Servers
  - Domain Controllers (for Group Policy changes affecting services)
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH for service stop/crash events (EID 7036, 7034, 4701) where ServiceName is in critical_alarm_services_list.
      OR SEARCH for command line events (EID 4688) containing 'taskkill', 'net stop', or 'sc stop' targeting a whitelisted service.
- question: Is the downtime duration or frequency for a critical alarm service statistically
    abnormal?
  context: |
    This question helps distinguish between legitimate operational downtime (e.g., for maintenance) and malicious interference. By baselining the normal frequency and duration of service stop/crash events, it can flag any outage that lasts significantly longer than usual or occurs more frequently than the established norm, suggesting the service is being repeatedly targeted or is unable to restart properly.
  answer_sources:
  - Windows Event ID 7036
  - Windows Event ID 4688
  - Windows Event ID 7034
  - Windows Event ID 4697
  - Windows Event ID 4700
  - Windows Event ID 4701
  - Alarm & Event Servers
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations (EWS)
  - SCADA Servers
  - Domain Controllers (for Group Policy changes affecting services)
  range: last 90 days
  queries:
  - pseudocode: |
      BASELINE normal downtime duration and stop/crash frequency for each critical service over 60 days.
      ALERT if a service's current stopped duration > 99th_percentile_duration.
      ALERT if the hourly frequency of stop/crash events > 99th_percentile_frequency.
- question: Has a critical alarm service entered an unexpected state (e.g., 'stopped')
    that deviates from its normal operational lifecycle?
  context: |
    This question uses a more sophisticated model to understand the normal sequence and timing of a service's states (e.g., running, stopped). A Hidden Markov Model (HMM) or similar time-series model can learn the normal lifecycle, including maintenance windows. It can then detect anomalies like a service stopping at an unusual time of day or remaining stopped for a duration that is inconsistent with its learned behavior, providing a nuanced way to detect tampering.
  answer_sources:
  - Windows Event ID 7036
  - Windows Event ID 4688
  - Windows Event ID 7034
  - Windows Event ID 4697
  - Windows Event ID 4700
  - Windows Event ID 4701
  - Alarm & Event Servers
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations (EWS)
  - SCADA Servers
  - Domain Controllers (for Group Policy changes affecting services)
  range: last 90 days
  queries:
  - pseudocode: |
      MODEL service state transitions (running, stopped) from Event ID 7036 using a time-series model (e.g., HMM).
      APPLY the trained model to real-time service state events.
      ALERT on anomalous state transitions or state durations that deviate from the learned pattern.