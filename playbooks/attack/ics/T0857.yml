name: 'T0857: System Firmware'
id: 'f4b5c6d7-e8f9-4a0b-8c1d-2e3f4a5b6c7d'
description: 'This playbook helps analysts investigate whether an adversary is attempting to modify system firmware on critical Industrial Control Systems (ICS) devices. The goal of such an attack could be to inhibit response functions or to establish persistence. The playbook focuses on identifying anomalous firmware transfers by analyzing network traffic for violations of established allowlists, deviations from file size and transfer time baselines, or uncharacteristic transfer features. It also covers detecting anomalous execution of firmware update utilities on Engineering Workstations (EWS) by checking process hashes, user permissions, parent processes, and command-line arguments. Furthermore, it guides the investigation of post-update behavior changes, such as new network connections or protocol usage, and the validation of firmware file integrity by comparing hashes against curated allowlists and threat intelligence feeds.'
type: 'technique'
related:
  - 'TA0107: Inhibit Response Function'
  - 'TA0110: Persistence'
contributors: 'Zachary Szewczyk, Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: 'Was a firmware transfer to a critical ICS device initiated from an unauthorized source IP or using a non-standard protocol?'
    context: 'Legitimate firmware updates are typically performed from specific Engineering Workstations or vendor servers using designated protocols. A transfer originating from an unknown IP address or using an unexpected protocol (like HTTP instead of FTP) is a strong indicator of a potential attack, as adversaries may use compromised systems or alternative channels to deliver malicious firmware.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek ftp.log'
      - 'Zeek tftp.log'
      - 'Zeek smb_files.log'
      - 'Network Address Information: Process Control Network (PCN) segments hosting PLCs/RTUs, Network segments containing Engineering Workstations (EWS), Industrial Demilitarized Zone (IDMZ) for vendor remote access, Enterprise/ICS network boundary points.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          SEARCH files.log for firmware file types (e.g., application/octet-stream, *.bin, *.fw) sent to critical ICS device IPs.
          CORRELATE with conn.log using the connection UID.
          FILTER for connections where the source IP or protocol/port is NOT on the pre-approved allowlist for that specific device.
          ALERT on any matches.
  - question: 'Did a recent firmware transfer exhibit anomalous characteristics regarding its file size, time of transfer, or source IP compared to historical baselines?'
    context: 'Adversaries may deliver firmware that is significantly different in size (e.g., padded or packed) or perform the update outside of normal maintenance windows to avoid detection. By baselining normal update characteristics (file size, time, source), analysts can calculate a risk score for new transfers to flag activity that deviates from established patterns.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek ftp.log'
      - 'Zeek tftp.log'
      - 'Zeek smb_files.log'
      - 'Network Address Information: Process Control Network (PCN) segments hosting PLCs/RTUs, Network segments containing Engineering Workstations (EWS), Industrial Demilitarized Zone (IDMZ) for vendor remote access, Enterprise/ICS network boundary points.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each new firmware transfer detected:
          CALCULATE Z-score for file size against the 90-day baseline for the device model.
          CHECK if transfer timestamp is outside the 95th percentile of normal maintenance windows.
          CHECK if source IP has not been seen updating this device class in the last 90 days.
          AGGREGATE a risk score based on these deviations and ALERT if a threshold is exceeded.
  - question: 'Was a firmware transfer identified as an outlier by a machine learning model trained on legitimate update characteristics?'
    context: 'This question moves beyond simple rule-based checks to identify sophisticated attacks. An anomaly detection model can learn the complex, multi-dimensional relationships between features of legitimate updates (e.g., file size, duration, protocol, source). A new transfer that is flagged as an outlier indicates its combination of characteristics is highly uncharacteristic and warrants investigation.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek ftp.log'
      - 'Zeek tftp.log'
      - 'Zeek smb_files.log'
      - 'Network Address Information: Process Control Network (PCN) segments hosting PLCs/RTUs, Network segments containing Engineering Workstations (EWS), Industrial Demilitarized Zone (IDMZ) for vendor remote access, Enterprise/ICS network boundary points.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each new firmware transfer event:
          CREATE a feature vector (e.g., file_size, transfer_duration, protocol_used, is_source_known, is_maintenance_window).
          APPLY the pre-trained anomaly detection model (e.g., Isolation Forest) to the feature vector.
          ALERT if the resulting anomaly score is in the top percentile, indicating an outlier.
  - question: 'Was an ICS firmware update utility executed with a mismatched hash, by an unauthorized user, or with invalid command-line arguments?'
    context: 'Adversaries may replace legitimate firmware update tools with malicious versions, or a compromised user may attempt an unauthorized update. This question verifies the integrity of the tool itself (via hash), the authorization of the user (via group membership), and the validity of the target device (via asset inventory), providing multiple layers of defense against illicit firmware modification.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4672'
      - 'Active Directory security logs'
      - 'Network Address Information: Engineering Workstations (EWS) in the Process Control Network, Human-Machine Interfaces (HMIs) in the control room, Active Directory domain controllers for the ICS environment, Identity and Access Management (IAM) systems.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          MONITOR EWS/HMIs for process creation (Event ID 4688) of known firmware utilities.
          ON execution, check if the process hash matches the allowlist of approved versions.
          VALIDATE the executing user is in the authorized 'ICS Firmware Admins' AD group.
          PARSE command line arguments to extract target IP and check if it exists in the asset inventory.
          ALERT on any validation failure.
  - question: 'Was a firmware update utility executed at an unusual time or with an abnormal frequency or parent process?'
    context: 'Beyond checking static permissions, analyzing the behavioral context of an execution can reveal attacks. A legitimate tool run at 3 AM by an engineer who normally works 9-to-5, or a tool being spawned by Microsoft Outlook instead of Windows Explorer, is highly suspicious. Baselining normal execution patterns helps detect such behavioral anomalies that might indicate a compromised account or remote execution via a phishing attack.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4672'
      - 'Active Directory security logs'
      - 'Network Address Information: Engineering Workstations (EWS) in the Process Control Network, Human-Machine Interfaces (HMIs) in the control room, Active Directory domain controllers for the ICS environment, Identity and Access Management (IAM) systems.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each firmware utility execution event on an EWS:
          COMPARE execution time against the user's 95th percentile baseline.
          CALCULATE Z-score for the daily execution count against the user/host baseline.
          CHECK if the parent process is rare (e.g., bottom 5% of historical parents).
          CALCULATE a cumulative score and ALERT if a threshold is passed.
  - question: 'Did a User and Entity Behavior Analytics (UEBA) model classify a session involving a firmware utility execution as anomalous?'
    context: 'This question aims to detect sophisticated attackers who may have compromised valid credentials. A UEBA model builds a comprehensive profile of a user or host, considering many variables simultaneously (logon type, source, processes, command-line patterns). An alert from the model indicates that the entire session, including the firmware update, deviates significantly from the entityâ€™s established "normal," suggesting a potential compromise.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4672'
      - 'Active Directory security logs'
      - 'Network Address Information: Engineering Workstations (EWS) in the Process Control Network, Human-Machine Interfaces (HMIs) in the control room, Active Directory domain controllers for the ICS environment, Identity and Access Management (IAM) systems.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each session involving a firmware utility execution:
          CREATE a feature vector from session data (process, parent, CLI patterns, logon type, time of day).
          APPLY the pre-trained UEBA/one-class SVM model to the session's feature vector.
          ALERT if the model classifies the session as a high-scoring anomaly.
  - question: 'Following a suspicious firmware update, did the ICS device attempt to communicate with known malicious destinations or use unauthorized control functions?'
    context: 'This question seeks to confirm whether a suspicious firmware update was indeed malicious by observing its immediate post-reboot behavior. Malicious firmware often needs to establish a command-and-control (C2) channel or manipulate the industrial process. Monitoring for connections to threat-listed IPs or the use of unexpected 'write' or 'stop' commands within the first hour after an update is a critical step in identifying a successful compromise.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - 'Zeek modbus.log'
      - 'Zeek dnp3.log'
      - 'Network Address Information: Network segments containing critical controllers (PLCs/RTUs), Network egress points from the Process Control Network (PCN), Industrial Demilitarized Zone (IDMZ) gateways, Network connections to corporate/enterprise DNS and proxy servers.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          TRIGGER on suspicious firmware update alert for a device IP.
          FOR the next 60 minutes, monitor all traffic from that IP.
          QUERY conn.log and dns.log for any connections to IPs on a C2 threat intelligence feed.
          QUERY ICS protocol logs (e.g., modbus.log) for 'write' or 'stop' function codes.
          ALERT on any matches.
  - question: 'After a firmware update, did the device exhibit network behavior that deviates from its established 90-day communication baseline?'
    context: 'A compromised device will likely behave differently on the network than a healthy one. This question focuses on detecting these changes by comparing post-update traffic against a historical baseline. The appearance of new destination IPs, new protocols, or a statistically significant spike in connection count or data volume are strong indicators that the new firmware has altered the deviceâ€™s function in a potentially malicious way.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - 'Zeek modbus.log'
      - 'Zeek dnp3.log'
      - 'Network Address Information: Network segments containing critical controllers (PLCs/RTUs), Network egress points from the Process Control Network (PCN), Industrial Demilitarized Zone (IDMZ) gateways, Network connections to corporate/enterprise DNS and proxy servers.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR 1 hour following a firmware update to a device:
          COMPARE destination IPs and ports against the device's 90-day baseline; ALERT on new entries.
          CALCULATE Z-score for connection count and data volume against the hourly baseline.
          ALERT if Z-score > 3.
  - question: 'Did a time-series anomaly detection model detect a significant change in the deviceâ€™s network traffic pattern after a firmware update?'
    context: 'This question uses advanced modeling to detect subtle changes in behavior that baselining individual metrics might miss. A time-series model like an LSTM Autoencoder learns the normal rhythm and interplay of a device's traffic (e.g., how bytes per second relates to connections per second). A spike in the model's reconstruction error after an update means the new traffic pattern is fundamentally different from anything seen before, strongly suggesting a functional change caused by the new firmware.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - 'Zeek modbus.log'
      - 'Zeek dnp3.log'
      - 'Network Address Information: Network segments containing critical controllers (PLCs/RTUs), Network egress points from the Process Control Network (PCN), Industrial Demilitarized Zone (IDMZ) gateways, Network connections to corporate/enterprise DNS and proxy servers.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          CONTINUOUSLY feed device network metrics (bytes/sec, conns/sec) into a trained LSTM autoencoder model.
          MONITOR the model's reconstruction error.
          FOLLOWING a firmware update, check if the reconstruction error exceeds the 99th percentile of its historical baseline.
          ALERT on a significant spike.
  - question: 'Was a firmware file found on the network or a host that does not match the approved hash for the target device or matches a known-malicious hash?'
    context: 'This is a fundamental integrity check. Organizations should maintain a "gold standard" repository of approved firmware, with known-good hashes. This question checks if any firmware file observed in the environment is either not on this allowlist or, worse, is on a blacklist of known malware from threat intelligence. A hash mismatch is a high-fidelity indicator of an unauthorized or malicious firmware.'
    answer_sources:
      - 'Zeek files.log'
      - 'Zeek conn.log'
      - 'Windows Event ID 4688'
      - 'File integrity monitoring logs'
      - 'Network Address Information: Process Control Network (PCN) segments, Engineering Workstations (EWS), Centralized firmware management servers and repositories, Network File Shares in the PCN or IDMZ, Systems running file integrity monitoring (FIM) agents.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR every file identified as firmware:
          COMPUTE its SHA256 hash.
          IDENTIFY the intended target device model.
          QUERY the malicious hash threat feed for the computed hash; ALERT on match.
          QUERY the internal allowlist for the device model and check if the hash is approved; ALERT if not found.
  - question: 'For a firmware file with an unknown hash, is its file size or entropy statistically different from known-good firmware versions?'
    context: 'When a firmware file is not on an allowlist or denylist, it is an unknown. This question helps an analyst triage these unknowns. Malicious firmware is often packed or encrypted, which increases its entropy, or it may be larger or smaller than legitimate versions due to added/removed code. Comparing the size and entropy of an unknown file to the statistical profile of known-good files can quickly flag it for deeper analysis if it is a significant outlier.'
    answer_sources:
      - 'Zeek files.log'
      - 'Zeek conn.log'
      - 'Windows Event ID 4688'
      - 'File integrity monitoring logs'
      - 'Network Address Information: Process Control Network (PCN) segments, Engineering Workstations (EWS), Centralized firmware management servers and repositories, Network File Shares in the PCN or IDMZ, Systems running file integrity monitoring (FIM) agents.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR a firmware file with an unknown hash:
          CALCULATE its file size and byte-level entropy.
          RETRIEVE the mean and standard deviation for size and entropy from the baseline of known-good firmware for that model.
          CALCULATE the Z-score for the unknown file's size and entropy.
          ESCALATE for review if either Z-score is > 3.
  - question: 'Did a machine learning model classify an unknown firmware file as suspicious based on its metadata and transfer characteristics?'
    context: 'This question addresses the challenge of polymorphic or novel malware where the hash is always new. By training a model on a wide range of features (not just the hash), such as file size, entropy, digital signature status, and network transfer context, it can learn to identify the traits of malicious firmware. This allows for the detection of previously unseen malicious firmware based on its intrinsic and contextual properties, providing a proactive defense against zero-day threats.'
    answer_sources:
      - 'Zeek files.log'
      - 'Zeek conn.log'
      - 'Windows Event ID 4688'
      - 'File integrity monitoring logs'
      - 'Network Address Information: Process Control Network (PCN) segments, Engineering Workstations (EWS), Centralized firmware management servers and repositories, Network File Shares in the PCN or IDMZ, Systems running file integrity monitoring (FIM) agents.'
    range: 'last 90 days'
    queries:
      - technology: 'Pseudocode'
        query: |
          FOR each unknown firmware file:
          EXTRACT a feature vector (file_size, entropy, has_signature, transfer_protocol, source_reputation, etc.).
          APPLY the pre-trained binary classification model (e.g., Gradient Boosting).
          ALERT if the model returns a high 'suspicious' probability score (e.g., > 0.9).