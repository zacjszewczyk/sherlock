name: T0890: Exploitation for Privilege Escalation
id: 9d8f8c7e-6b5a-4d3c-2b1a-9f8e7d6c5b4a
description: This playbook helps investigate whether an adversary is exploiting vulnerabilities to escalate privileges on critical Industrial Control System (ICS) assets such as Engineering Workstations or Human-Machine Interfaces (HMIs). It focuses on detecting anomalous child processes spawned by legitimate high-privilege ICS applications, the installation of suspicious new services configured to run with high privileges from non-standard locations, and the temporal correlation of network events (like exploit delivery) with host-based indicators of privilege escalation on the same asset.
type: technique
related:
  - TA0111: Privilege Escalation
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a legitimate, high-privilege ICS application spawned a suspicious child process like a command shell or hacking tool?
    context: This question aims to detect a common privilege escalation pattern where an attacker exploits a vulnerability in a trusted ICS application. By forcing the trusted application to run malicious commands or tools, the attacker inherits the application's high privileges (e.g., SYSTEM). This allows them to bypass security controls and execute further actions on the compromised host. Identifying such unexpected parent-child process relationships is a critical indicator of exploitation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Historian Servers
      - OPC Servers within the Process Control Network (PCN) and Manufacturing Zone (MZ)
    range: last 90 days
    queries:
      - SIEM Query: SEARCH process_creation_logs WHERE (parent_process IN ics_app_allowlist AND child_process IN suspicious_utility_watchlist) AND (privilege_level == 'High' OR privilege_level == 'System')
  - question: Has a novel or rare parent-child process relationship appeared on an ICS asset?
    context: This question focuses on anomaly detection by baselining normal process activity. ICS environments are typically stable, so any new, never-before-seen process creation event is inherently suspicious. This approach can detect unknown or zero-day exploitation techniques that might not involve known suspicious utilities. By identifying parent-child process pairs that deviate from the historical norm for a specific host and are globally rare across the entire ICS environment, analysts can uncover subtle signs of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Historian Servers
      - OPC Servers within the Process Control Network (PCN) and Manufacturing Zone (MZ)
    range: last 90 days
    queries:
      - Baseline Comparison: FOREACH new_process_event: CHECK if (parent_process, child_process, command_line) exists in host_baseline. IF NOT, CALCULATE global_rarity. ALERT if new_and_rare.
  - question: Does a machine learning model flag a new process creation event as anomalous based on its features?
    context: This question leverages machine learning to automate the detection of anomalous process behavior. By training a model on features such as process names, command line characteristics, and user context from a known-good baseline, the system can score new events in real-time and flag outliers that may represent malicious activity, even if the specific processes are not on a predefined watchlist.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Historian Servers
      - OPC Servers within the Process Control Network (PCN) and Manufacturing Zone (MZ)
    range: last 90 days
    queries:
      - ML Model Scoring: SCORE new_process_event using trained_model. ALERT if anomaly_score > threshold (e.g., 99th percentile).
  - question: Has a new service been installed that runs with high privileges from an unusual directory or with a suspicious name?
    context: This question seeks to identify adversaries establishing persistence or escalating privileges by installing a malicious service. Attackers often configure services to run as 'LocalSystem' to gain maximum control and place the service executable in a non-standard, user-writable directory to bypass protections. This rule-based approach provides a fast, effective method for catching common variations of this technique.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 7045
      - Sysmon Event ID 13
      - Engineering Workstations (EWS)
      - HMIs
      - Historian Servers
      - OPC Servers
      - other critical Windows-based ICS infrastructure components within the PCN/MZ
    range: last 90 days
    queries:
      - SIEM Query: SEARCH service_creation_logs WHERE (account == 'LocalSystem') AND (path IN suspicious_locations OR service_name matches random_pattern OR service_executable NOT IN allowlist).
  - question: Does a newly installed service have a name or executable filename that appears to be randomly generated?
    context: This question uses statistical analysis to detect adversary attempts to evade detection. Malware authors frequently use randomly generated strings for service names and filenames. By calculating the Shannon entropy (a measure of randomness) of these names and comparing it to a baseline of normal services, analysts can identify high-entropy outliers that are likely malicious.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 7045
      - Sysmon Event ID 13
      - Engineering Workstations (EWS)
      - HMIs
      - Historian Servers
      - OPC Servers
      - other critical Windows-based ICS infrastructure components within the PCN/MZ
    range: last 90 days
    queries:
      - Entropy Analysis: FOREACH new_service_event: CALCULATE entropy(service_name), entropy(executable_filename). ALERT if entropy > baseline_95th_percentile.
  - question: Does a machine learning model classify a new service installation as malicious?
    context: This question applies a supervised machine learning approach for high-fidelity detection of malicious services. By training a classifier on features from both benign and malicious service installations, the model can learn complex patterns to distinguish them, scoring new service creations and generating a high-confidence alert when a service is predicted to be malicious.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 7045
      - Sysmon Event ID 13
      - Engineering Workstations (EWS)
      - HMIs
      - Historian Servers
      - OPC Servers
      - other critical Windows-based ICS infrastructure components within the PCN/MZ
    range: last 90 days
    queries:
      - ML Model Prediction: SCORE new_service_event using trained_classifier. ALERT if prediction_probability(malicious) > threshold (e.g., 0.90).
  - question: Did a host-based privilege escalation event occur shortly after suspicious network activity involving the same host?
    context: This question aims to link the exploit delivery phase with subsequent on-host execution. By correlating suspicious network activity (like a file download or connection to a rare IP) with a host-based privilege escalation alert within a short time window, analysts can confirm a multi-stage attack and escalate the incident with higher confidence and richer context.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek smb_files.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 4697
      - Windows Event ID 7045
      - Sysmon Event ID 1
      - Network segments connecting EWS, HMIs, and servers within the PCN/MZ
      - Industrial demilitarized zones (IDMZ)
    range: last 90 days
    queries:
      - Correlation Rule: JOIN network_logs, host_alerts ON host_ip WHERE time_diff(host_alert, network_event) < 120s. ALERT on match.
  - question: Did a rare network event (e.g., connection to a new IP or domain) precede a host-based anomaly on an ICS asset?
    context: This question operationalizes temporal correlation using anomaly detection on network data. By baselining normal network communications, the system can flag any deviation. This "rare network event" acts as a trigger, placing the source host under heightened scrutiny for a brief period. If a host-based anomaly is then detected, the two events are automatically linked.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek smb_files.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 4697
      - Windows Event ID 7045
      - Sysmon Event ID 1
      - Network segments connecting EWS, HMIs, and servers within the PCN/MZ
      - Industrial demilitarized zones (IDMZ)
    range: last 90 days
    queries:
      - Triggered Monitoring: FOREACH network_event: IF is_rare(event): MONITOR host for 2 minutes. IF host_alert occurs in window: CORRELATE and ESCALATE.
  - question: Has an ICS asset accumulated a high-risk score from multiple, potentially related, low-confidence alerts?
    context: This question addresses alert fatigue by moving to a risk-based aggregation model. Instead of numerous individual alerts, this approach assigns a risk score to each anomalous event. Scores for a single entity are aggregated over time. Only when the cumulative risk crosses a critical threshold is a single, high-fidelity composite alert generated, allowing analysts to focus on the most at-risk assets.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek smb_files.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 4697
      - Windows Event ID 7045
      - Sysmon Event ID 1
      - Network segments connecting EWS, HMIs, and servers within the PCN/MZ
      - Industrial demilitarized zones (IDMZ)
    range: last 90 days
    queries:
      - Risk-Based Alerting: FOREACH new_alert for host: host.risk_score += alert.score. IF host.risk_score > threshold: GENERATE composite_alert with all related events.