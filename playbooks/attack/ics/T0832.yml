name: T0832: Manipulation of Control
id: 2d9c49c2-5e48-4e3a-9c7b-7b10c8d4a1b5
description: This playbook helps investigate whether an adversary has successfully executed an action resulting in, or intended to cause, physical damage to operational technology property. It focuses on the 'Manipulation of Control' technique, specifically looking for ICS write commands targeting critical control registers with values outside safety limits. These commands may be intended to induce physical stress (mechanical fatigue, thermal shock) and often originate from unauthorized IP addresses, lacking correlation with approved change management activities.
type: technique
related:
  - TA0105: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any unauthorized write commands targeted critical PLC registers with values outside of their defined safe operating ranges or attempted to write to a read-only register?
    context: This question is crucial for detecting direct attempts to manipulate physical processes into an unsafe state. By comparing observed 'write' commands against a pre-defined inventory of critical registers and their safety parameters (safe value ranges, read/write status), analysts can identify blatant violations of operational policy. An alert for this activity could indicate a deliberate attempt to cause equipment damage or process disruption. The focus is on commands from unapproved sources (not on the HMI/EWS allowlist) to filter out most legitimate operations.
    answer_sources:
      - Network protocol logs (Zeek modbus.log, dnp3.log, enip.log, s7comm.log)
      - Network connection logs (Zeek conn.log)
      - Process creation logs (Windows Event ID 4688)
      - Logon logs (Windows Event ID 4624)
      - Data from assets like Process Control Network (PCN) segments, Safety Instrumented System (SIS) network segments, PLC/RTU network interfaces, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA Servers, and Data Historian servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH network_protocol_logs WHERE (protocol is modbus AND function_code in [6, 16]) AND source_ip NOT IN hmi_ews_allowlist AND ((target_register IN critical_registers AND value NOT IN safe_range) OR (target_register IN read_only_registers))
  - question: Are there any critical process parameters exhibiting anomalous behavior that deviates significantly from their established normal operating baselines?
    context: This question aims to detect the effects of control manipulation, even if the manipulation command itself was missed. By monitoring the actual process values (e.g., temperature, pressure) and comparing them to a statistical baseline (e.g., 1st/99th percentiles), analysts can spot when a system enters an unusual state. This is effective for catching subtle manipulations or the cumulative effect of several small changes. Using multivariate analysis like Mahalanobis distance for interdependent systems (e.g., motor speed and current) can detect anomalies that would be missed by looking at each parameter in isolation.
    answer_sources:
      - Network protocol logs (Zeek modbus.log, dnp3.log, enip.log, s7comm.log)
      - Network connection logs (Zeek conn.log)
      - Process creation logs (Windows Event ID 4688)
      - Logon logs (Windows Event ID 4624)
      - Data from assets like Process Control Network (PCN) segments, Safety Instrumented System (SIS) network segments, PLC/RTU network interfaces, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA Servers, and Data Historian servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_value_logs | BASELINE normal distribution for each critical_parameter over last 30 days | COMPARE current_value to baseline_percentiles | ALERT if current_value is outside range for >3 cycles. For multivariate systems, CALCULATE Mahalanobis distance for current_state_vector | ALERT if distance > 99.9th percentile of historical distances.
  - question: Have machine learning models detected anomalous control commands or unusual patterns of command activity that deviate from learned normal behavior?
    context: This question leverages machine learning to identify novel or sophisticated manipulation attempts that may not violate hard-coded rules. A One-Class SVM can learn the complex patterns of 'normal' write commands (who is writing what value to what register) and flag any command that doesn't fit this pattern. A time-series anomaly model can detect behavioral shifts, such as a sudden increase in write frequency or a change in the variety of registers being targeted, which could indicate an adversary is exploring or manipulating the system. These methods are powerful for detecting previously unseen attack patterns.
    answer_sources:
      - Network protocol logs (Zeek modbus.log, dnp3.log, enip.log, s7comm.log)
      - Network connection logs (Zeek conn.log)
      - Process creation logs (Windows Event ID 4688)
      - Logon logs (Windows Event ID 4624)
      - Data from assets like Process Control Network (PCN) segments, Safety Instrumented System (SIS) network segments, PLC/RTU network interfaces, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA Servers, and Data Historian servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: 1. INPUT live_write_command [src_ip, register, value] into OCSVM model | ALERT if model_prediction is -1 (outlier). 2. AGGREGATE command logs into 1-minute windows (write_frequency, register_entropy, write_read_ratio) | INPUT aggregated_features into Isolation Forest model | ALERT on significant changepoints or anomalies.