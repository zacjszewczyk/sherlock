name: T0826: Loss of Availability
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate if an adversary has caused a loss of availability in a critical Industrial Control System (ICS) component. This is achieved by looking for three main indicators: 1) A complete cessation of network communication from a critical host (e.g., HMI, Historian), especially when correlated with unexpected process terminations or system shutdowns. 2) A sudden and sustained surge of file modification events (writes, renames, deletes) on critical data directories, which is characteristic of ransomware attacks. 3) An abrupt increase in network traffic volume or connection rates targeting critical field devices (e.g., PLCs, RTUs) from unauthorized sources, which is indicative of a denial-of-service attack.
type: technique
related:
- TA0105: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a critical ICS host experienced a network silence that correlates with an unexpected process termination or system shutdown?
  context: Adversaries can cause a denial of service by crashing critical applications or the operating system itself on essential ICS assets like HMIs or Historians. This question aims to directly link a sudden halt in network activity from a host (a 'network silence') with host-level events that indicate a crash or shutdown. Finding a temporal correlation between the network silence and events like an application error (Event ID 1000), service stop (7036), or system shutdown (1074) provides strong evidence of a targeted availability attack.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 1000
  - Windows Event ID 1002
  - Windows Event ID 7036
  - Windows Event ID 4608
  - Windows Event ID 4609
  - Windows Event ID 1074
  - Windows Event ID 4689
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations
  - Operator Stations
  - Historian Servers
  - Data Gateways
  - Domain Controllers located on the Process Control Network (PCN) or ICS Demilitarized Zone (DMZ)
  range: Last 90 days, focusing on events within a 5-minute window of each other.
  queries:
  - technology: pseudocode
    query: |
      FOR each network_silence_alert ON a critical_host:
        SEARCH for host_events (e.g., AppError, AppHang, ServiceStop, ProcessExit, Shutdown)
        ON the same critical_host
        WHERE event_time is within 5 minutes of the silence_alert_time
        IF a host_event is found AND its process_name is in a predefined list of critical ICS applications:
          FLAG as a high-priority incident for investigation.
- question: Has any critical ICS host stopped communicating on the network for an anomalously long duration?
  context: This question seeks to proactively detect a loss of availability by establishing a statistical baseline of normal communication patterns for each critical host. Many ICS components communicate with a regular 'heartbeat'. A significant deviation from this pattern, such as a complete stop in network traffic for a period that exceeds a dynamic threshold (e.g., 3 standard deviations above the average communication gap) or a static one (e.g., 60 seconds), strongly indicates the host is offline. This could be due to a crash, network isolation, or a deliberate shutdown by an attacker.
  answer_sources:
  - Zeek conn.log
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations
  - Operator Stations
  - Historian Servers
  - Data Gateways
  - Domain Controllers located on the Process Control Network (PCN) or ICS Demilitarized Zone (DMZ)
  range: Last 90 days, using a rolling 7-day window to calculate the baseline.
  queries:
  - technology: pseudocode
    query: |
      FOR each critical_host:
        CALCULATE a rolling 7-day baseline (average, standard deviation) of the time between its network communications (e.g., Zeek conn.log entries).
        CONTINUOUSLY MONITOR the time since the host's last observed communication.
        IF time_since_last_communication > (baseline_average + 3 * baseline_stddev) OR > 60 seconds:
          GENERATE a network_silence_alert.
- question: Can a machine learning model detect an anomalous drop in network communication frequency from a critical ICS host?
  context: This question proposes using a more sophisticated, machine learning-based approach to detect network silence. By training a time-series model (like an LSTM autoencoder) on the normal frequency of network connections per minute, the system can learn the typical communication 'rhythm' of a host. The model can then identify significant deviations from this learned behavior, such as a sustained period of zero communication, and flag it as a high-scoring anomaly. This method can be more resilient to noise and adapt to changing patterns better than fixed statistical thresholds.
  answer_sources:
  - Zeek conn.log
  - Human-Machine Interfaces (HMIs)
  - Engineering Workstations
  - Operator Stations
  - Historian Servers
  - Data Gateways
  - Domain Controllers located on the Process Control Network (PCN) or ICS Demilitarized Zone (DMZ)
  range: Last 90 days, with the model being retrained weekly on new baseline data.
  queries:
  - technology: pseudocode
    query: |
      FOR each critical_host:
        AGGREGATE network connection logs per minute to create a time-series dataset.
        INPUT the latest data into a trained time-series anomaly detection model.
        IF the model's anomaly_score for a period of no communication exceeds a high threshold (e.g., 0.7):
          GENERATE an ML-based anomaly alert.
- question: Is there evidence of a ransomware-like attack, indicated by mass file modifications initiated by a suspicious process?
  context: This question focuses on detecting a common availability attack: ransomware. The goal is to connect a high volume of file modification events (Event IDs 4663, 4656) with the process that initiated them (Event ID 4688). An analyst should investigate the process name and command line for known malicious indicators, such as commands to delete volume shadow copies ('vssadmin.exe delete shadows'). The investigation should also look for the mass renaming of files to known ransomware extensions (e.g., '.locked', '.crypt') in the file access logs.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4656
  - Windows Event ID 4659
  - Historian Servers
  - Engineering Workstations
  - File Servers hosting ICS project files
  - Backup Servers within the PCN or ICS DMZ
  range: Last 90 days.
  queries:
  - technology: pseudocode
    query: |
      LISTEN for alerts indicating a high rate of file modifications.
      FOR each alert, CORRELATE file modification events (4663) with process creation events (4688) by Process ID.
      INSPECT the NewProcessName and CommandLine from the 4688 event for suspicious patterns or known ransomware names.
      SEARCH the ObjectName field in the 4663 events for known ransomware file extensions.
      IF indicators are found, FLAG as a potential ransomware incident.
- question: Has any process on a critical ICS host begun modifying files at a rate that is statistically anomalous compared to its normal behavior?
  context: This question employs a behavioral detection strategy to spot ransomware. It works by creating a baseline of normal file modification activity (Event ID 4663) for every process on a critical system. An alert is triggered if a process suddenly begins modifying files at a rate that dramatically exceeds its historical norm (e.g., surpasses the 99th percentile for several minutes). A complementary technique is to calculate the entropy of file extensions being modified; a sudden drop in entropy indicates mass renaming to a single extension, which is a classic ransomware tactic.
  answer_sources:
  - Windows Event ID 4663
  - Historian Servers
  - Engineering Workstations
  - File Servers hosting ICS project files
  - Backup Servers within the PCN or ICS DMZ
  range: Last 90 days, using a rolling 7-day window for the baseline.
  queries:
  - technology: pseudocode
    query: |
      FOR each process ON each critical_host:
        CALCULATE a 7-day rolling baseline of its file modification rate (4663 events/minute).
        IF the current rate exceeds the 99th percentile of the baseline for 3+ consecutive minutes:
          GENERATE a rate_anomaly_alert.
        ADDITIONALLY, calculate the Shannon entropy of file extensions modified by the process in a 5-minute window.
        IF entropy drops below a threshold (e.g., 0.5):
          GENERATE a file_renaming_alert.
- question: Can machine learning identify anomalous clusters of file modification activity that deviate from benign patterns?
  context: This question leverages unsupervised machine learning to find unusual patterns of file manipulation. By using a clustering algorithm (like DBSCAN) on file modification events, the system can group activity based on features like the initiating process, target directory, and time. Over time, it learns what 'normal' clusters of activity look like. An alert is generated when a new cluster appears that is significantly different from any known benign cluster, indicating a coordinated and potentially malicious event like a ransomware encryption routine.
  answer_sources:
  - Windows Event ID 4663
  - Historian Servers
  - Engineering Workstations
  - File Servers hosting ICS project files
  - Backup Servers within the PCN or ICS DMZ
  range: Last 90 days.
  queries:
  - technology: pseudocode
    query: |
      IN 5-minute windows, gather all file modification events (4663).
      INPUT events as data points with features (ProcessName, Directory, Timestamp) into a clustering model (e.g., DBSCAN).
      IF the model identifies a new cluster that does not match the profile of learned benign activity:
        GENERATE an ML_cluster_anomaly_alert.
- question: Is a critical ICS field device receiving traffic from an unauthorized source IP address?
  context: Secure ICS networks should follow a strict 'allow-list' model, where only pre-approved devices can communicate with critical field controllers like PLCs and RTUs. This question checks for violations of that policy. Any connection to a critical device from an IP address not on the established allow-list is inherently suspicious. This activity could represent an initial probe, a network scan, or a direct attack. Correlating these unauthorized connections with other alerts, like DoS or scan notices from the same source, can escalate the priority of the event.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek modbus.log
  - Zeek dnp3.log
  - Zeek profinet.log
  - Zeek ethernetip.log
  - The Process Control Network (PCN) segments, specifically traffic to PLCs, RTUs, and IEDs.
  range: Last 90 days.
  queries:
  - technology: pseudocode
    query: |
      FOR each connection in conn.log targeting a critical_device_ip on a known ICS_port:
        IF the connection's source_ip is NOT in the network_allow_list:
          GENERATE an unauthorized_connection_alert.
          SEARCH notice.log for DDoS or Scan notices from the same source_ip within a 1-minute window to correlate.
- question: Is a critical ICS field device experiencing a statistically significant surge in network traffic volume or connection rate?
  context: This question aims to detect a network-based denial-of-service attack against field devices. An adversary might try to overwhelm a PLC or RTU by flooding it with an abnormally high volume of data or connection requests. This analytic establishes a baseline for normal traffic patterns (connection rate and data volume) to each device. An alert is triggered if these metrics, from a single source, dramatically exceed the historical norm (e.g., 99th percentile) for a sustained period, indicating a potential flood attack.
  answer_sources:
  - Zeek conn.log
  - The Process Control Network (PCN) segments, specifically traffic to PLCs, RTUs, and IEDs.
  range: Last 90 days, using a rolling 7-day window for the baseline.
  queries:
  - technology: pseudocode
    query: |
      FOR each critical_field_device:
        CALCULATE a 7-day rolling baseline for inbound connection_rate and bytes_transferred per minute.
        MONITOR current metrics originating from any single source IP.
        IF a metric exceeds the 99th percentile of its baseline OR 4 standard deviations above its 30-minute moving average for at least 30 seconds:
          GENERATE a traffic_surge_alert.
- question: Can a machine learning model identify anomalous network flows directed at critical ICS devices?
  context: This question proposes using an unsupervised machine learning model for a more advanced and holistic detection of anomalous network traffic. Instead of tracking single metrics like volume or rate, a model like an Isolation Forest can analyze multiple dimensions of a network flow at once (e.g., source/destination IP, port, protocol, byte count, packet count, duration). This allows it to identify subtle or complex deviations from normal traffic patterns that might be missed by simpler thresholding methods, thereby providing a more robust defense against novel network attacks.
  answer_sources:
  - Zeek conn.log
  - The Process Control Network (PCN) segments, specifically traffic to PLCs, RTUs, and IEDs.
  range: Last 90 days.
  queries:
  - technology: pseudocode
    query: |
      FOR each network flow to a critical_field_device:
        EXTRACT a feature set (e.g., source IP, port, protocol, bytes, duration).
        INPUT the feature set into a trained anomaly detection model (e.g., Isolation Forest).
        IF the model returns a high anomaly score (e.g., > 0.7):
          GENERATE an ML_flow_anomaly_alert.