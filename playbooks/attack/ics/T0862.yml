name: T0862: Supply Chain Compromise
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary has compromised the OT environment through a trusted supply chain relationship. It focuses on detecting anomalies following software updates, firmware downloads, or project file installations. Key indicators include: 1) Post-update outbound network connections from OT assets to malicious, rare, or high-volume destinations. 2) Execution of masquerading processes that violate allow-lists, run from non-standard paths, have unusual parent processes, or possess invalid digital signatures. 3) Anomalous industrial protocol usage or network patterns from embedded controllers after a firmware update, such as unauthorized commands, use of non-industrial protocols, or communication with new IP addresses.
type: technique
related:
  - TA0108: Initial Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Following a recent software installation on an OT asset, has the asset communicated with any known malicious destinations?
    context: This question is crucial for detecting the most immediate and high-confidence indicator of a supply chain compromise. After a software update, a compromised asset may 'call home' to a command-and-control (C2) server. By comparing outbound connection destinations against threat intelligence feeds within a 72-hour window post-installation, analysts can quickly identify known-bad activity that strongly suggests the new software was trojanized.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4697
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Vendor engineering station logs
      - Network egress points from OT segments (e.g., OT DMZ firewalls), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian servers, and IT/OT boundary firewalls.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each software install event (Win Event 4697/4688) on an asset:
             MONITOR outbound connections (Zeek conn.log) from asset IP for 72 hours.
             JOIN with DNS logs (Zeek dns.log) to get domain names.
             IF destination IP or domain in threat_intel_feed:
                 ALERT as high-severity.
  - question: After a software update, is an OT asset exhibiting statistically unusual outbound network behavior, such as communicating with new destinations or sending unusually large amounts of data?
    context: Adversaries often use infrastructure that is not yet flagged by threat intelligence. This question helps detect such activity by focusing on behavioral anomalies. An OT asset suddenly communicating with a new Autonomous System Number (ASN) or country, or exfiltrating a volume of data far exceeding its normal behavior, is a strong deviation from its baseline. These statistical outliers can serve as early warnings of a compromise, even when the destination is not known to be malicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4697
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Vendor engineering station logs
      - Network egress points from OT segments (e.g., OT DMZ firewalls), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian servers, and IT/OT boundary firewalls.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each asset, create 90-day baseline of destination IPs, ASNs, countries, and outbound byte stats.
          AFTER software update event:
             FOR each new outbound connection in the next 72 hours:
                 IF destination ASN or country is not in baseline:
                     ALERT as medium-severity.
                 IF outbound_bytes > 99th_percentile_of_baseline:
                     ALERT as medium-severity.
  - question: Using a machine learning model, does an OT asset's network traffic pattern show a significant behavioral deviation from its established norm following a software update?
    context: This question leverages advanced anomaly detection to identify subtle, complex changes in an asset's communication patterns that simpler statistical methods might miss. A time-series model learns the 'rhythm' of an asset's network activity (e.g., protocols, ports, connection states, timing). A high reconstruction error after a software update indicates the new activity does not conform to this learned normal behavior, suggesting a potential compromise that has fundamentally altered the asset's network fingerprint.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4697
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Vendor engineering station logs
      - Network egress points from OT segments (e.g., OT DMZ firewalls), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian servers, and IT/OT boundary firewalls.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN time-series anomaly model (e.g., LSTM) on historical connection features (port, protocol, duration, bytes, state, time) for critical assets.
          AFTER software update:
             FEED real-time connection data into model.
             IF model_reconstruction_error > 99th_percentile_threshold:
                 ALERT as high-severity.
  - question: Is a process masquerading as a legitimate ICS application by violating a pre-defined allow-list of file hashes, file paths, or parent processes?
    context: This is a high-fidelity detection method for process masquerading. Adversaries may replace a legitimate binary with a malicious one or place it in an unusual location to gain execution. By creating and enforcing a strict allow-list that defines what a legitimate process looks like (correct hash), where it should run from (correct path), and what should start it (correct parent), any deviation becomes an immediate, high-confidence signal of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - File hash repository
      - Endpoint devices within the Process Control Network (PCN) and Manufacturing Zone, specifically Engineering Workstations, HMIs, application servers, and other Windows-based OT assets.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MAINTAIN allow-list DB (process_name -> {hash, path, parent_process}).
          ON process creation event (Sysmon 1, Win 4688):
             GET process name, hash, path, parent.
             IF process name in DB AND (hash OR path OR parent not in allow-list):
                 ALERT as high-severity.
  - question: Is a newly created process using an unusually random or complex file path or command line, based on historical entropy baselines?
    context: This question helps detect malware that uses randomization to evade simple signature-based or path-based detections. Malware authors often use randomized directory names or obfuscated command-line arguments. By calculating the entropy (a measure of randomness), we can establish a baseline for what 'normal' paths and arguments look like for a given process on a specific host. A sudden spike in entropy is a strong indicator of obfuscation techniques.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - File hash repository
      - Endpoint devices within the Process Control Network (PCN) and Manufacturing Zone, specifically Engineering Workstations, HMIs, application servers, and other Windows-based OT assets.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host/process, create 30-day baseline of file_path_entropy and command_line_entropy.
          ON process creation event:
             CALCULATE entropy for new process's path and command line.
             IF path_entropy > 95th_percentile_of_baseline OR cmd_entropy > 95th_percentile_of_baseline:
                 ALERT as medium-severity.
  - question: Based on a trained machine learning model, does a new process creation event exhibit a combination of features that classify it as malicious with high confidence?
    context: This question aims to identify malicious process execution by analyzing a multitude of features simultaneously. While a single anomalous feature might be a weak indicator, a supervised model can learn the complex interplay of features (e.g., spawned by outlook.exe, in a user-writable path, with high entropy, and an invalid signature) that collectively point to malicious activity. This provides a more robust and context-aware detection capability than rule-based alerts on single indicators.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - File hash repository
      - Endpoint devices within the Process Control Network (PCN) and Manufacturing Zone, specifically Engineering Workstations, HMIs, application servers, and other Windows-based OT assets.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN ML classifier (e.g., Random Forest) on labeled Sysmon Event 1 data.
          FEATURES: parent_process, path_depth, path_entropy, cmd_length, cmd_entropy, is_writable_path, signature_status.
          ON new process creation event:
             CLASSIFY event using trained model.
             IF classification is 'malicious' AND confidence_score > 0.9:
                 ALERT as high-severity.
  - question: Has an unauthorized device attempted to issue a critical, state-changing command to an embedded controller, or has any communication violated a strict protocol allow-list?
    context: This question addresses the highest-risk scenario in an OT environment: an unauthorized command that could disrupt or damage physical processes. By implementing a micro-segmentation policy at the protocol level (defining exactly who can say what to whom), any deviation is a critical security event. This moves beyond simple network connectivity rules to control the specific industrial commands allowed, providing a powerful defense against unauthorized manipulation of controllers.
    answer_sources:
      - Zeek conn.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek enip.log
      - Zeek s7comm.log
      - Industrial Firewall logs
      - Network segments at Level 1 (Basic Control) and Level 2 (Area Supervisory Control) of the Purdue Model, particularly network taps and span ports monitoring traffic to/from PLCs, RTUs, and IEDs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE strict allow-list of (Src_IP, Dst_IP, Protocol, Function_Code) for critical controllers.
          MONITOR industrial protocol logs (Zeek modbus, s7comm, etc.).
          IF packet violates allow-list:
             ALERT as critical.
  - question: Is an embedded controller exhibiting anomalous network or protocol behavior compared to its 90-day baseline, such as communicating with new peers, using unusual function codes, or showing significant data volume changes?
    context: OT controllers typically have very predictable communication patterns. This question aims to detect deviations from this stable behavior. A controller that suddenly talks to a new device, uses a protocol command it has never used before, or has a spike in traffic volume is behaving anomalously. These behavioral shifts, while not as definitive as an allow-list violation, are strong indicators that the device's function or state has been altered, possibly due to a compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek enip.log
      - Zeek s7comm.log
      - Industrial Firewall logs
      - Network segments at Level 1 (Basic Control) and Level 2 (Area Supervisory Control) of the Purdue Model, particularly network taps and span ports monitoring traffic to/from PLCs, RTUs, and IEDs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each controller, create 90-day baseline of peer_IPs, function_codes, and data_volume_stats.
          PERIODICALLY CHECK current traffic against baseline:
             IF new peer_IP is seen:
                 ALERT as medium-severity.
             IF new function_code is used:
                 ALERT as medium-severity.
             IF hourly_data_volume > (baseline_mean + 3 * baseline_std_dev):
                 ALERT as medium-severity.
  - question: According to an unsupervised machine learning model, is a critical controller's network traffic fingerprint showing a significant deviation from its learned normal behavior?
    context: This question applies advanced anomaly detection to the unique traffic of embedded controllers. An unsupervised model can learn the intricate 'normal' fingerprint of a controller's communications, including protocol-specific details. A high anomaly score indicates that current traffic does not fit this learned pattern, flagging a potential compromise that has subtly or significantly altered the device's behavior in a way that might evade simpler baseline checks.
    answer_sources:
      - Zeek conn.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek enip.log
      - Zeek s7comm.log
      - Industrial Firewall logs
      - Network segments at Level 1 (Basic Control) and Level 2 (Area Supervisory Control) of the Purdue Model, particularly network taps and span ports monitoring traffic to/from PLCs, RTUs, and IEDs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN unsupervised anomaly model (e.g., Isolation Forest) on historical controller traffic features (IPs, ports, protocol, duration, bytes, function codes).
          FEED live traffic into model.
          IF flow has high anomaly_score:
             ALERT as high-severity.