name: "T0830: Adversary-in-the-Middle"
id: "8c3d7b2a-9f1e-4a6c-8e4d-5b1a9c8d7e6f"
description: |
  This playbook helps determine if an adversary has established an Adversary-in-the-Middle (AiTM) position to intercept or manipulate ICS network communications. This is investigated by looking for evidence of anomalous ARP activity, such as spoofed replies, MAC flapping, or static ARP cache modifications on workstations. It also checks for signs of rerouted network traffic where communication between critical assets is passed through an unauthorized intermediary device. Finally, it looks for anomalies in TLS/SSL certificates used in encrypted sessions, including the use of self-signed, expired, or previously unseen certificates that do not match an established baseline.
type: "technique"
related:
  - "TA0100: Collection"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is an adversary attempting to poison the ARP cache by associating a critical ICS asset's IP with an unauthorized MAC address or by manually modifying the ARP cache on a workstation?"
    context: |
      This question aims to detect classic ARP poisoning. Attackers can send spoofed ARP messages to link their MAC address with the IP address of a legitimate device, redirecting traffic to the attacker. This analytic checks for two methods: 1) Network-level detection of ARP replies that violate a known IP-to-MAC allowlist, and 2) Host-level detection of commands (e.g., `arp.exe -s`) used to statically manipulate the ARP table on an engineering workstation.
    answer_sources:
      - "Zeek arp.log"
      - "Windows Event ID 4688"
      - "Windows Security Event ID 4703"
      - "Process Control Network (PCN) switches, managed industrial switches, network taps/sensors within the PCN, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Domain Controllers."
    range: "last 90 days"
    queries:
      - tech: "zeek"
        query: |
          SEARCH Zeek arp.log WHERE op == 'reply' AND sender_ip IN critical_ips AND sender_mac NOT IN allowlist
      - tech: "windows_events"
        query: |
          SEARCH EventID 4688 WHERE process_name == 'arp.exe' AND command_line CONTAINS '-s' OR process_name == 'netsh.exe' AND command_line CONTAINS 'add neighbors'
  - question: "Is there evidence of MAC address flapping, where a critical ICS asset's IP address is rapidly being claimed by multiple different MAC addresses?"
    context: |
      This question looks for MAC flapping, a strong indicator of an ARP storm or a conflict caused by an attacker trying to claim an IP address. By monitoring the number of unique MAC addresses associated with a single critical IP over a short time (e.g., 5 minutes), we can detect this instability, which is highly abnormal in a stable ICS environment and may point to an active ARP poisoning campaign.
    answer_sources:
      - "Zeek arp.log"
      - "Process Control Network (PCN) switches, managed industrial switches, network taps/sensors within the PCN, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Domain Controllers."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          SEARCH Zeek arp.log | TIMESERIES count(distinct sender_mac) by sender_ip over 5m | WHERE sender_ip IN critical_ips AND count > 3
  - question: "Has there been an anomalous, network-wide spike in gratuitous ARP packets, suggesting a large-scale ARP poisoning attempt?"
    context: |
      This question uses a time-series anomaly detection model to establish a baseline of normal gratuitous ARP traffic. A sudden, significant deviation from this baseline can indicate an attacker is broadcasting a large number of unsolicited ARP packets to poison the caches of many devices simultaneously, a common precursor to a widespread AiTM attack.
    answer_sources:
      - "Zeek arp.log"
      - "Process Control Network (PCN) switches, managed industrial switches, network taps/sensors within the PCN, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Domain Controllers."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          INPUT Zeek arp.log WHERE is_gratuitous == true | AGGREGATE count by time_bucket(1m) | APPLY anomaly_detection_model | ALERT where anomaly_score > threshold
  - question: "Is network traffic from a critical ICS asset being rerouted through an unauthorized intermediary device instead of its legitimate destination?"
    context: |
      This question seeks to identify the classic AiTM pattern where an attacker's machine inserts itself into an existing communication flow. By defining legitimate communication paths and approved gateways, we can detect when a connection from a critical asset (A) is unexpectedly intercepted by an unknown device (B), which then forwards the traffic to the intended destination (C). This is a direct observation of an AiTM attack in progress.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Network backbone switches within the PCN, firewalls/routers at PCN-DMZ/Enterprise boundaries, SCADA servers, Historian servers, network taps/sensors deployed at critical communication choke points."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          JOIN conn.log as A_to_B with conn.log as B_to_C on A_to_B.dest_ip == B_to_C.orig_ip WHERE A_to_B.orig_ip IN critical_assets AND B_to_C.dest_ip IS_KNOWN_PARTNER_OF(A_to_B.orig_ip) AND A_to_B.dest_ip NOT IN approved_gateways AND time_diff(B_to_C.ts, A_to_B.ts) < 1s
  - question: "Are there anomalous changes in network performance metrics, such as round-trip time or data volume, for critical communication paths?"
    context: |
      An AiTM device that inspects, modifies, or even just forwards traffic will introduce latency (affecting Round-Trip Time) and may alter the size of data packets. This question aims to detect these subtle side effects. By baselining normal performance characteristics for critical connections, we can identify statistically significant deviations that could indicate the presence of an unseen intermediary.
    answer_sources:
      - "Zeek conn.log"
      - "Network backbone switches within the PCN, firewalls/routers at PCN-DMZ/Enterprise boundaries, SCADA servers, Historian servers, network taps/sensors deployed at critical communication choke points."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          INPUT Zeek conn.log | FOR_EACH critical_path | CALCULATE RTT, orig_bytes, resp_bytes | COMPARE to historical_baseline | ALERT if RTT_zscore > 3 OR byte_distribution_p_value < 0.05
  - question: "Has the fundamental structure of the network graph changed in a way that suggests a new, unauthorized device has been inserted into a critical communication path?"
    context: |
      This question applies graph theory to network security. The normal communication patterns in an ICS network form a stable graph. An AiTM attack fundamentally alters this graph by inserting a new node (the attacker) and two new edges into a previously direct path. Graph-based anomaly detection models can learn the normal topology and flag these structural changes as malicious.
    answer_sources:
      - "Zeek conn.log"
      - "Network backbone switches within the PCN, firewalls/routers at PCN-DMZ/Enterprise boundaries, SCADA servers, Historian servers, network taps/sensors deployed at critical communication choke points."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          BUILD graph from Zeek conn.log | APPLY GraphSAGE model | ALERT on new_node_insertion_anomaly between known_critical_nodes
  - question: "Is a critical ICS service presenting an invalid, self-signed, or unknown TLS/SSL certificate where a known, valid certificate is expected?"
    context: |
      In an AiTM attack on encrypted traffic, the adversary must present their own certificate to the client. This question checks for common red flags associated with malicious certificates. By maintaining a strict baseline of expected certificate fingerprints and properties for critical services, any deviation—such as a mismatched fingerprint, a validation error, or an unexpected self-signed certificate—is a strong indicator of interception.
    answer_sources:
      - "Zeek ssl.log"
      - "Zeek x509.log"
      - "Network taps/sensors at the perimeter of the PCN, network gateways, SCADA servers, Historian servers, remote access VPN concentrators, Engineering Workstations (EWS) that establish encrypted sessions."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          SEARCH Zeek ssl.log JOIN x509.log on cert_chain_fuids | WHERE server_ip IN critical_services AND (sha1 NOT IN baseline_fingerprints OR validation_status != 'ok' OR (self_signed == true AND service NOT IN self_signed_allowlist))
  - question: "Are we observing newly seen certificates with suspicious characteristics, such as high-entropy subject names, or is there an unusual increase in TLS connection errors for a critical asset?"
    context: |
      Attackers often use tools that algorithmically generate fake certificates, resulting in subject or issuer names that are random-looking strings with high entropy. This question aims to detect these algorithmically generated certificates. Additionally, a spike in TLS errors can occur if clients start rejecting an attacker's invalid certificate, providing another signal of a potential AiTM attempt.
    answer_sources:
      - "Zeek ssl.log"
      - "Zeek x509.log"
      - "Network taps/sensors at the perimeter of the PCN, network gateways, SCADA servers, Historian servers, remote access VPN concentrators, Engineering Workstations (EWS) that establish encrypted sessions."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          SEARCH Zeek x509.log WHERE is_new_cert | CALCULATE entropy(subject), entropy(issuer) | ALERT if entropy > threshold
      - tech: "pseudocode"
        query: |
          SEARCH Zeek ssl.log | TIMESERIES count by server_ip where validation_status != 'ok' | ALERT if rate > 3_std_dev_from_baseline
  - question: "Does a newly observed certificate for a critical service deviate significantly from the profile of known-good certificates, as determined by a machine learning model?"
    context: |
      This question uses a machine learning approach to generalize the concept of a 'good' certificate. Instead of just checking specific fields, a model (like a One-Class SVM or an autoencoder) learns the multi-dimensional profile of normal certificates based on features like key length, validity period, and signature algorithm. Any new certificate that doesn't fit this learned profile is flagged as an outlier.
    answer_sources:
      - "Zeek x509.log"
      - "Network taps/sensors at the perimeter of the PCN, network gateways, SCADA servers, Historian servers, remote access VPN concentrators, Engineering Workstations (EWS) that establish encrypted sessions."
    range: "last 90 days"
    queries:
      - tech: "pseudocode"
        query: |
          EXTRACT features from new certs in x509.log | APPLY one-class_SVM_cert_model | ALERT on outlier_classification