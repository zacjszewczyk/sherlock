name: T0822: External Remote Services
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary is attempting to gain initial access to an ICS network via external remote services. It focuses on detecting three main types of indicators: 1) Anomalous successful logins characterized by new source locations, unusual login times, or novel user-agent strings. 2) Credential-based attacks such as brute-force (many password attempts for one user) and password spraying (one password attempt for many users). 3) Anomalous post-access behavior following a successful remote login, such as accessing unusual hosts, using restricted protocols, or transferring abnormal amounts of data.
type: technique
related:
  - TA0108: Initial Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a successful remote login to a critical ICS asset potentially malicious based on threat intelligence or policy violations?
    context: This question seeks to identify high-confidence malicious activity by correlating successful remote logins with external threat intelligence and internal access policies. An immediate alert is warranted if the source IP is on a known-bad list. Similarly, any login that violates a pre-defined access policy (e.g., an engineer for Plant A should not be logging in from an IP geolocated to a different continent) should be flagged. For privileged accounts, which are high-value targets, any login from a previously unseen country or Autonomous System Number (ASN) is considered suspicious enough for an alert.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - GeoIP database
      - Malicious IP threat intelligence lists
      - ICS Network Demarcation Zone (DMZ)
      - VPN Concentrators
      - Remote Access Gateways
      - Jump Boxes
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Authentication Servers within the ICS DMZ
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each successful login (WinEvent 4624, Logon Type 3 or 10) to a critical asset:
            ENRICH Source_Network_Address with GeoIP and ASN data.
            IF Source_Network_Address in malicious_ip_list THEN
              GENERATE CRITICAL_ALERT.
            END IF
            IF user_role has access_policy AND login violates policy THEN
              GENERATE ALERT.
            END IF
            IF user is privileged AND source_country OR source_asn is new in last 90 days THEN
              GENERATE ALERT.
            END IF
  - question: Does a successful remote login deviate significantly from the user's established historical baseline of activity?
    context: This question aims to detect more subtle attacks by identifying logins that are anomalous for a specific user, even if not tied to known malicious infrastructure. By maintaining a 90-day rolling baseline of normal activity for each user (e.g., typical source countries/ASNs, login times, and client user-agents), a risk score can be calculated for new logins. A login that deviates in multiple ways (e.g., from a new country, at an unusual time, with a new user-agent) will accumulate a high risk score, triggering an alert that a single anomaly might not. This method is effective at catching attackers who are using clean infrastructure but behaving abnormally.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek http.log
      - GeoIP database
      - User activity baseline database
      - ICS Network Demarcation Zone (DMZ)
      - VPN Concentrators
      - Remote Access Gateways
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each new remote login:
            SET risk_score = 0.
            FETCH user's 90-day baseline (countries, ASNs, login_times, user_agents).
            IF source_country is not in baseline.countries THEN risk_score += 20.
            IF source_ASN is not in baseline.ASNs THEN risk_score += 15.
            IF login_time is outside 5th-95th percentile THEN risk_score += 10.
            IF user_agent is not in baseline.user_agents THEN risk_score += 5.
            IF risk_score > 25 THEN
              GENERATE HIGH_ALERT.
            END IF
  - question: Can a machine learning model identify a successful remote login as likely malicious?
    context: This question leverages a supervised machine learning model to automate the detection of malicious logins by learning from historical data. By engineering features that capture the context of a login (e.g., time of day, day of week, source location risk, whether the source IP or user-agent is new for that user), a model like a Random Forest can be trained to distinguish between legitimate and malicious activity. The model provides a probability score, allowing analysts to prioritize their investigations by focusing on logins with the highest probability of being malicious (e.g., > 90%).
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek http.log
      - GeoIP database
      - Labeled historical login data
      - ICS Network Demarcation Zone (DMZ)
      - VPN Concentrators
      - Remote Access Gateways
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FUNCTION featurize_login(login_event):
            features.hour_sin = sin(login_event.hour / 24 * 2 * PI).
            features.hour_cos = cos(login_event.hour / 24 * 2 * PI).
            features.source_country_ohe = one_hot_encode(login_event.country).
            features.is_new_ip = check_if_ip_is_new_for_user(login_event.user, login_event.ip).
            RETURN features.
          
          FOR each new remote login:
            login_features = featurize_login(login).
            malicious_probability = ml_model.predict_proba(login_features).
            IF malicious_probability > 0.9 THEN
              FLAG for analyst review.
            END IF
  - question: Is a single source IP performing a brute-force or password-spraying attack against an ICS remote access service?
    context: This question seeks to detect two common credential attack techniques by monitoring failed login events (Windows Event ID 4625). A SIEM rule can be configured to watch for these patterns. A "brute-force" attack is identified when a single source IP generates a high number of failed logins for one user account in a short time. A "password-spraying" attack is identified when a single source IP generates failed logins for a large number of different user accounts. Alerting on these patterns can stop an attack before the adversary gains access.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Authentication Servers (e.g., Active Directory Domain Controllers, RADIUS)
      - VPN Concentrators
      - Remote Access Gateways
      - ICS/OT Firewalls
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          AGGREGATE WinEvent 4625 by Source_Network_Address over 10-minute window.
          FOR each Source_Network_Address:
            // Brute Force Check
            IF count(events) for any single Target_User_Name in 60s > 10 THEN
              GENERATE HIGH_ALERT (Brute Force).
            END IF
            // Password Spray Check
            IF distinct_count(Target_User_Name) in 10min > 15 THEN
              GENERATE HIGH_ALERT (Password Spray).
            END IF
  - question: Is the rate or pattern of failed logins statistically anomalous compared to historical norms?
    context: This question uses statistical methods to find unusual failed login activity that may not trigger simple threshold-based rules. First, it establishes a baseline for the normal rate of failed logins and alerts if the current rate exceeds a high percentile (e.g., 99th), which could indicate a large-scale or slow-and-low attack. Second, it uses Shannon entropy to analyze the variety of usernames being targeted by a single source IP. A high entropy value suggests the IP is trying many different usernames, a strong indicator of password spraying, and an alert is triggered if this value is a statistical outlier.
    answer_sources:
      - Windows Event ID 4625
      - Authentication Servers
      - VPN Concentrators
      - Remote Access Gateways
    range: last 30-day baseline
    queries:
      - technology: Pseudocode
        query: |
          // Rate-based detection
          CALCULATE 30-day baseline of failed_logins_per_minute.
          IF current_failed_logins_per_minute > baseline.99th_percentile THEN
            GENERATE ALERT.
          END IF
          
          // Entropy-based detection
          FOR each 10-minute window:
            CALCULATE mean and std_dev of Shannon entropy of Target_User_Names per Source_IP.
            FOR each Source_IP:
              IF Source_IP.entropy > (mean_entropy + 3 * std_dev_entropy) THEN
                GENERATE ALERT (Potential Password Spray).
              END IF
  - question: Can unsupervised machine learning automatically cluster and identify brute-force or password-spraying activity?
    context: This question applies unsupervised machine learning to automatically group and label different types of credential attacks. By creating a feature set for each source IP based on its failed login activity (e.g., total failures, number of unique targets, ratio of failure types), a clustering algorithm like DBSCAN can group related attack sources together. These clusters can then be automatically classified; for example, a cluster with a high count of unique target users is likely a password-spraying campaign, while a cluster with a low unique user count but high total failures is likely a brute-force attack.
    answer_sources:
      - Windows Event ID 4625
      - Authentication Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each 1-hour period:
            FOR each Source_Network_Address with failed logins:
              CREATE feature_vector (log10(failures), unique_users, failure_type_ratio, ...).
            END FOR
            clusters = DBSCAN(all_feature_vectors).
            FOR each cluster in clusters:
              IF cluster.unique_users is high AND cluster.total_failures is moderate THEN
                LABEL cluster as "Password Spraying".
              ELSE IF cluster.unique_users is low AND cluster.total_failures is high THEN
                LABEL cluster as "Brute Force".
              END IF
            END FOR
  - question: Is a user exhibiting high-risk post-access behavior after a successful remote login?
    context: A successful login is only the first step for an attacker. This question focuses on detecting malicious activity immediately following a successful login by correlating the session with subsequent network and host events. A critical alert should be generated if the user's session involves any clear-cut indicators of compromise, such as connecting to a highly sensitive, off-limits asset (like a Safety Instrumented System), using dangerous ICS protocol functions (like a PLC stop command), executing known hacking tools, or accessing confidential engineering files that are irrelevant to their job role.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5145
      - Zeek conn.log
      - Zeek modbus.log
      - Zeek dnp3.log
      - Zeek files.log
      - Internal ICS Network Segments
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Programmable Logic Controllers (PLCs)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each successful login (WinEvent 4624):
            MONITOR subsequent activity from user/source_ip.
            IF connection to critical_asset not in user's ACL THEN GENERATE CRITICAL_ALERT.
            IF zeek_log shows restricted_function_code (e.g., Modbus > 16) THEN GENERATE CRITICAL_ALERT.
            IF process_creation (WinEvent 4688) for known_hacking_tool THEN GENERATE CRITICAL_ALERT.
            IF file_access (WinEvent 5145) to sensitive_files by unauthorized_user THEN GENERATE CRITICAL_ALERT.
            END IF
  - question: Does a user's post-login session activity deviate from the established baseline for their role?
    context: This question aims to detect anomalous post-login behavior that may not be overtly malicious but is unusual for a user's specific job function. By establishing a 30-day baseline profile for different user roles (e.g., operator, engineer), we can define what "normal" looks like for metrics such as the number of hosts contacted, total data transferred, or files accessed in a session. An alert is generated if a user's current session exceeds multiple of these established 99th percentile thresholds, indicating a significant deviation from their typical behavior and that of their peers.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5145
      - User role-based behavioral profiles
      - Internal ICS Network Segments
      - Engineering Workstations (EWS)
      - SCADA Servers
      - Data Historians
    range: last 30-day baseline
    queries:
      - technology: Pseudocode
        query: |
          FOR each user session (1-hour window post-login):
            FETCH baseline profile for user's role (99th percentiles for hosts_contacted, data_volume, file_accesses).
            SET anomaly_count = 0.
            IF session.unique_hosts > baseline.hosts_contacted THEN anomaly_count++.
            IF session.data_volume > baseline.data_volume THEN anomaly_count++.
            IF session.file_accesses > baseline.file_accesses THEN anomaly_count++.
            IF anomaly_count >= 2 THEN
              GENERATE HIGH_ALERT.
            END IF
  - question: Can an unsupervised anomaly detection model identify abnormal user session activity after a remote login?
    context: This question leverages an advanced unsupervised model, like an Autoencoder, to detect novel or complex anomalous sessions. The model is trained exclusively on sessions representing normal, everyday operational activity. It learns to "reconstruct" this normal data accurately. When a new session is fed into the model—especially one from an attacker performing unusual reconnaissance or lateral movement—the model will struggle to reconstruct it, resulting in a high "reconstruction error." This error serves as a powerful, model-driven anomaly score, flagging the session for immediate analyst investigation without relying on pre-defined rules or signatures.
    answer_sources:
      - Zeek conn.log
      - Zeek various protocol logs
      - Windows Event ID 4688
      - Windows Event ID 5145
      - Internal ICS Network Segments
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FUNCTION featurize_session(session_data):
            // Create a vector from total data, unique IPs, port entropy, event counts, etc.
            RETURN feature_vector.
          
          // Model is pre-trained on known-good session data
          autoencoder_model = load_model().
          
          FOR each new user session (4-hour window):
            session_features = featurize_session(session).
            reconstruction = autoencoder_model.predict(session_features).
            reconstruction_error = calculate_error(session_features, reconstruction).
            IF reconstruction_error > anomaly_threshold THEN
              FLAG session as high-priority anomaly.
            END IF