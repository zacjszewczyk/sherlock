name: T0822: External Remote Services
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps answer the question: Is an adversary attempting to gain initial access to the ICS network via external remote services? It focuses on detecting this technique by identifying three main classes of indicators: 1) Successful but anomalous remote logins, characterized by new source locations, unusual times, or novel user-agent strings. 2) High-volume failed login attempts indicative of brute force or password spraying attacks against ICS remote access services. 3) Anomalous post-access behavior following a successful login, such as connecting to an unusual number of hosts, using restricted ICS protocol functions, or executing suspicious processes.
type: technique
related:
- TA0108: Initial Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: For a successful remote login to a critical ICS asset, is the source IP known to be malicious, does it violate access policies, or does it originate from a new geographic location for a privileged user?
  context: |
    This question aims to quickly identify high-confidence indicators of compromise immediately following a successful remote login. By checking against threat intelligence, pre-defined access policies, and geographic baselines for privileged accounts, an analyst can rapidly determine if a seemingly normal login is actually a malicious actor's first foothold.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - GeoIP database
  - Malicious IP threat intelligence list
  - Role-based access control lists
  - ICS Network Demarcation Zone (DMZ)
  - VPN Concentrators
  - Remote Access Gateways
  - Jump Boxes
  - Engineering Workstations (EWS)
  - Human-Machine Interfaces (HMIs)
  - Authentication Servers within the ICS DMZ
  - Network traffic flows between Purdue Model Level 4 (Corporate) and Level 3 (Site Operations)
  range: Last 90 days
  queries:
  - pseudocode: |
      FOR each successful_login (EventID 4624, LogonType 3 or 10) to critical_asset
        GET source_ip
        ENRICH source_ip with GeoIP and ASN data
        IF source_ip IN malicious_ip_list:
          ALERT CRITICAL
        IF login_violates_policy(user, source_ip, asset):
          ALERT
        IF user_is_privileged AND source_geo is new_for_user(90d):
          ALERT
- question: For a new remote login, does it deviate significantly from the user's established 90-day baseline of activity, such as originating from a new country/ASN, occurring at an unusual time, or using a new user-agent?
  context: |
    This question seeks to identify suspicious logins by scoring multiple, simultaneous low-confidence anomalies. A single anomaly might be benign, but a combination of several (e.g., a user logging in from a new country, at an unusual time, with a new device) strongly suggests a compromised account. This risk-scoring approach helps surface sophisticated attacks that avoid single, high-confidence triggers.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek http.log
  - GeoIP database
  - User activity baselines
  - ICS Network Demarcation Zone (DMZ)
  - VPN Concentrators
  - Remote Access Gateways
  - Jump Boxes
  - Engineering Workstations (EWS)
  - Human-Machine Interfaces (HMIs)
  - Authentication Servers within the ICS DMZ
  - Network traffic flows between Purdue Model Level 4 (Corporate) and Level 3 (Site Operations)
  range: Last 90 days
  queries:
  - pseudocode: |
      FOR each new_login
        SET risk_score = 0
        IF source_country is new_for_user(90d):
          risk_score += 20
        IF source_asn is new_for_user(90d):
          risk_score += 15
        IF login_time is anomalous_for_user(90d):
          risk_score += 10
        IF user_agent is new_for_user(90d):
          risk_score += 5
        IF risk_score > 25:
          ALERT HIGH
- question: Can a machine learning model, trained on historical login data, identify a recent remote login as likely malicious based on a combination of features like time, location, and user role?
  context: |
    This question explores the use of advanced analytics to automate the detection of malicious logins. By training a supervised model on features engineered from past data, the system can learn complex, non-linear patterns that distinguish legitimate access from adversarial behavior, providing a probabilistic risk score for each new login to prioritize analyst review.
  answer_sources:
  - Windows Event ID 4624
  - Historical login data
  - User role/privilege information
  - ICS Network Demarcation Zone (DMZ)
  - VPN Concentrators
  - Remote Access Gateways
  - Jump Boxes
  - Engineering Workstations (EWS)
  - Human-Machine Interfaces (HMIs)
  - Authentication Servers within the ICS DMZ
  - Network traffic flows between Purdue Model Level 4 (Corporate) and Level 3 (Site Operations)
  range: Last 90 days
  queries:
  - pseudocode: |
      FOR each new_login
        EXTRACT features (time, country, asn, user_role, etc.)
        PREDICT probability = model.predict(features)
        IF probability > 0.9:
          FLAG for review
- question: Is a single source IP address conducting a brute force or password spraying attack against an ICS remote access service?
  context: |
    This question aims to detect two common credential access techniques by using simple, rule-based logic. By counting failed logins (Windows Event ID 4625) from a single source against one user (brute force) or many users (password spray) within short time windows, analysts can quickly identify and block automated attacks before they succeed.
  answer_sources:
  - Windows Event ID 4625
  - Zeek conn.log
  - Authentication Servers (e.g., Active Directory Domain Controllers, RADIUS)
  - VPN Concentrators
  - Remote Access Gateways
  - ICS/OT Firewalls logging traffic at the boundary between the Enterprise network (Purdue Level 4) and the ICS DMZ (Purdue Level 3.5)
  range: Last 90 days
  queries:
  - pseudocode: |
      AGGREGATE failed_logins (EventID 4625) by source_ip over 10min
      FOR each source_ip:
        IF count(logins) for one_user > 10 in 60s:
          ALERT HIGH (Brute Force)
        IF count(distinct users) > 15 in 10min:
          ALERT HIGH (Password Spray)
- question: Is the current rate of failed logins anomalous compared to a historical baseline, or does the pattern of failed logins from a single source IP suggest a password spraying attack (high entropy)?
  context: |
    This question uses statistical methods to detect more subtle attacks that might not trigger simple threshold rules. By baselining the normal rate of failed logins, it can spot unusual spikes. Furthermore, calculating the Shannon entropy of usernames targeted by a single IP provides a mathematical way to identify the "one-to-many" pattern of password spraying, even at a low and slow rate.
  answer_sources:
  - Windows Event ID 4625
  - Failed login baselines
  - Authentication Servers (e.g., Active Directory Domain Controllers, RADIUS)
  - VPN Concentrators
  - Remote Access Gateways
  - ICS/OT Firewalls logging traffic at the boundary between the Enterprise network (Purdue Level 4) and the ICS DMZ (Purdue Level 3.5)
  range: Last 90 days
  queries:
  - pseudocode: |
      CALCULATE current_failed_login_rate
      IF current_rate > 99th_percentile(30d_baseline):
          ALERT
      FOR each source_ip in 10min_window:
        CALCULATE username_entropy
        IF entropy > (mean_entropy + 3 * std_dev):
          ALERT
- question: Can failed login events be automatically grouped using a clustering algorithm to identify distinct brute force and password spraying campaigns?
  context: |
    This question leverages machine learning to automatically discover and classify attack patterns from raw failed login data. A clustering algorithm like DBSCAN can group related events based on features like login frequency, number of target users, and failure types, effectively separating noisy, individual failed logins from coordinated, malicious campaigns without pre-defined rules.
  answer_sources:
  - Windows Event ID 4625
  - Authentication Servers (e.g., Active Directory Domain Controllers, RADIUS)
  - VPN Concentrators
  - Remote Access Gateways
  - ICS/OT Firewalls logging traffic at the boundary between the Enterprise network (Purdue Level 4) and the ICS DMZ (Purdue Level 3.5)
  range: Last 90 days
  queries:
  - pseudocode: |
      AGGREGATE failed_logins over 1hr
      FOR each source_ip:
        CREATE feature_vector (total_fails, unique_users, etc.)
      RUN DBSCAN on all feature_vectors
      ANALYZE clusters to identify campaigns
- question: Following a successful remote login, did the user session exhibit high-confidence malicious behavior, such as accessing unauthorized critical assets, using dangerous ICS protocol functions, running hacking tools, or accessing sensitive files outside their role?
  context: |
    This question focuses on identifying immediate, unambiguous signs of post-compromise activity. These are 'smoking gun' indicators that an authenticated session is being controlled by an adversary. Detecting any of these behaviors warrants a critical alert and immediate incident response, as they strongly suggest an active intrusion into the ICS network.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 5145
  - Zeek conn.log
  - Zeek modbus.log
  - Zeek dnp3.log
  - Role-based access control lists
  - Internal ICS Network Segments
  - Engineering Workstations (EWS)
  - Human-Machine Interfaces (HMIs)
  - SCADA Servers
  - Data Historians
  - Programmable Logic Controllers (PLCs)
  - Safety Instrumented System (SIS) interfaces
  - Internal DNS servers
  - ICS Application Servers
  range: Last 90 days
  queries:
  - pseudocode: |
      FOR each session after successful_login:
        IF connection_to_unauthorized_critical_asset:
          ALERT CRITICAL
        IF use_of_restricted_ics_function_code:
          ALERT CRITICAL
        IF execution_of_known_hacking_tool:
          ALERT CRITICAL
        IF access_to_sensitive_files_by_unauthorized_user:
          ALERT CRITICAL
- question: Does a user's post-login activity significantly deviate from their role's typical behavior across multiple metrics, such as the number of hosts contacted, data volume transferred, or protocols used?
  context: |
    This question aims to detect anomalous post-access behavior by comparing a user's current session against a statistical baseline established for their specific job role. An adversary, even with a valid credential, is unlikely to perfectly mimic the normal network footprint of the compromised user. By flagging sessions that exceed multiple statistical thresholds (e.g., 99th percentile), this method can catch intruders exploring the network or exfiltrating data.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 5145
  - Zeek conn.log
  - User role activity baselines
  - Internal ICS Network Segments
  - Engineering Workstations (EWS)
  - Human-Machine Interfaces (HMIs)
  - SCADA Servers
  - Data Historians
  - Programmable Logic Controllers (PLCs)
  - Safety Instrumented System (SIS) interfaces
  - Internal DNS servers
  - ICS Application Servers
  range: Last 90 days
  queries:
  - pseudocode: |
      FOR each live_session:
        CALCULATE metrics (unique_hosts, data_volume, file_access_count)
        COMPARE metrics to user_role_baseline(30d)
        SET anomaly_count = 0
        IF unique_hosts > 99th_percentile: anomaly_count++
        IF data_volume > 99th_percentile: anomaly_count++
        IF file_access > 99th_percentile: anomaly_count++
        IF anomaly_count >= 2:
          ALERT HIGH
- question: Can an unsupervised machine learning model (e.g., Autoencoder) identify a user's post-login session as anomalous based on a holistic view of their network and host activities?
  context: |
    This question proposes using an advanced, unsupervised machine learning approach to detect novel or complex post-compromise behavior. An Autoencoder is trained to 'reconstruct' normal session activity. When presented with an anomalous session (e.g., an attacker's), its inability to reconstruct it accurately (resulting in a high 'reconstruction error') serves as a powerful indicator of deviation from normalcy, flagging it for investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Zeek files.log
  - Zeek modbus.log
  - Zeek dnp3.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 5145
  - Internal ICS Network Segments
  - Engineering Workstations (EWS)
  - Human-Machine Interfaces (HMIs)
  - SCADA Servers
  - Data Historians
  - Programmable Logic Controllers (PLCs)
  - Safety Instrumented System (SIS) interfaces
  - Internal DNS servers
  - ICS Application Servers
  range: Last 90 days
  queries:
  - pseudocode: |
      FOR each completed_session:
        CREATE feature_vector (data_volume, unique_ips, port_entropy, etc.)
        CALCULATE reconstruction_error = autoencoder_model.evaluate(feature_vector)
        IF reconstruction_error > anomaly_threshold:
          FLAG for review