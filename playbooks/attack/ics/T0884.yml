name: T0884: Connection Proxy
id: 5979c3f8-f41e-42c2-8418-356a1b244795
description: This playbook investigates whether an adversary is using a compromised Industrial Control System (ICS) host as a proxy for Command and Control (C2) communications. This can manifest in several ways, including a compromised host exhibiting a "fan-out" pattern to numerous internal assets after an external connection, an intermediary host like a jump server relaying traffic from an external source to internal assets using native ICS protocols, or a host showing signs of C2 protocol tunneling (e.g., via DNS or HTTP) before pivoting to internal ICS devices. The goal is to identify these anomalous communication patterns that indicate a host has been repurposed to bridge external C2 channels with the internal OT network.
type: technique
related:
  - TA0101: Command And Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
  - none
questions:
  - question: Is an ICS host exhibiting a 'fan-out' pattern by receiving an external connection and then initiating multiple new connections to internal assets?
    context: This question aims to detect when a compromised ICS host is used as a pivot point. An adversary gaining access to one host (e.g., an EWS) may use it to scan or connect to many other internal devices. A sudden "fan-out" of connections, especially to devices the host doesn't normally talk to, is a strong indicator of this malicious proxying behavior, particularly when it follows a connection from an untrusted external source.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Asset Inventory DB
      - Network perimeters between IT and OT zones (e.g., IT/OT firewalls), ICS DMZ hosts, jump servers, and critical ICS assets such as Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, and SCADA servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each inbound connection in conn.log to an ICS_HOST from an EXTERNAL_IP
          WITHIN 5 minutes of the inbound connection time
            COUNT unique new internal destination IPs from ICS_HOST
            (WHERE 'new' means no connection between ICS_HOST and destination in last 30 days)
          IF count >= 5
            TRIGGER_ALERT (enrich with process info from Event ID 4688 and asset data)
  - question: Has an ICS host's daily count of unique internal destinations deviated significantly from its established baseline?
    context: This question uses statistical analysis to find anomalous communication patterns. In a stable ICS environment, hosts typically communicate with a predictable set of peers. A sudden, statistically significant increase in the number of unique devices a host connects to can indicate scanning or lateral movement activity initiated by an adversary using the host as a proxy. This method can detect suspicious behavior without relying on a specific external trigger.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Asset Inventory DB
      - Network perimeters between IT and OT zones (e.g., IT/OT firewalls), ICS DMZ hosts, jump servers, and critical ICS assets such as Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, and SCADA servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each ICS_HOST
            CALCULATE 30-day baseline (mean, std_dev) of daily unique internal destination IPs from conn.log
            GET current day's count of unique internal destinations
          IF current_day_count > (mean + 3 * std_dev)
            TRIGGER_ALERT (enrich with source IP reputation and asset criticality)
  - question: Can a graph-based anomaly detection model identify an ICS host that is suddenly increasing its network centrality after an external connection?
    context: This question applies graph theory to model network communications. Hosts are nodes and connections are edges. A host's "centrality" reflects its importance or role in the network graph. If a host, particularly after an external connection, suddenly connects to many previously unrelated assets, its centrality score will spike. This change indicates a significant shift in its communication role, which could be due to its use as an adversary's proxy.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Asset Inventory DB
      - Network perimeters between IT and OT zones (e.g., IT/OT firewalls), ICS DMZ hosts, jump servers, and critical ICS assets such as Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, and SCADA servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN GraphSAGE model on 90 days of conn.log data to learn normal graph structures.
          DEPLOY model for real-time analysis.
          FOR each new connection
            UPDATE graph and calculate centrality scores for involved hosts.
          IF centrality score for an ICS_HOST spikes above a learned threshold, especially after an inbound external connection
            TRIGGER_ALERT
  - question: Is an intermediary host (like a jump server) relaying connections from an external source to internal ICS assets using native industrial protocols?
    context: This question focuses on detecting the misuse of designated intermediary hosts. These hosts (e.g., Jump Servers) are legitimate gateways to the OT network. An adversary can compromise them to proxy malicious commands. Detecting a tight temporal correlation (e.g., within 30 seconds) between an inbound connection from an unknown external source and an outbound connection using a sensitive ICS protocol (like Modbus or DNP3) is a critical finding that points to unauthorized access.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Asset Inventory DB
      - Threat Intelligence Feeds
      - Change Management Logs
      - Hosts within the OT DMZ, designated jump servers, SCADA servers, and the network segments containing field devices such as PLCs and RTUs.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each inbound connection to a JUMP_SERVER from an EXTERNAL_IP
          WITHIN 30 seconds
            SEARCH for an outbound connection from JUMP_SERVER to an INTERNAL_ICS_IP on a known ICS_PORT (502, 20000, 102, 44818)
          IF sequence is found
            CHECK EXTERNAL_IP against threat intel feeds
            CHECK timestamp against change management logs
            IF IP is malicious OR activity is unscheduled
              TRIGGER_ALERT (enrich with user info from Event ID 4624)
  - question: Has the daily count of unique relay patterns (external IP, internal IP, protocol, user) for an intermediary host exceeded its historical baseline?
    context: This question provides a statistical method to detect the misuse of intermediary hosts by focusing on the variety of relay activities. It establishes a baseline of normal, expected relay "tuples" (the combination of who is connecting from where to what). A significant increase in the number of new, unique tuples suggests that the host is being used for novel or exploratory activities, which could be an adversary mapping the network or accessing new devices.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Asset Inventory DB
      - Threat Intelligence Feeds
      - Change Management Logs
      - Hosts within the OT DMZ, designated jump servers, SCADA servers, and the network segments containing field devices such as PLCs and RTUs.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each JUMP_SERVER and USER
            CALCULATE 14-day baseline (mean, std_dev, 99.9th percentile) of the daily count of unique (external_IP, internal_ICS_IP, protocol, user) tuples.
            GET current day's count of unique tuples.
          IF current_day_count > (mean + 3 * std_dev) OR current_day_count > 99.9th_percentile
            TRIGGER_ALERT
  - question: Can a sequence analysis model detect anomalous connection patterns on an intermediary host that deviate from normal operational behavior?
    context: This question seeks to identify C2 activity by modeling the *behavior* of connections rather than just their occurrence. Legitimate maintenance involves predictable sequences (e.g., RDP in, perform actions, log out). A C2 channel might manifest as an unusual sequence, such as a long-lived, low-bandwidth connection that doesn't fit any known operational or maintenance pattern. Sequence analysis models can learn the "grammar" of normal operations and flag these syntactically incorrect, and therefore suspicious, activities.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Asset Inventory DB
      - Threat Intelligence Feeds
      - Change Management Logs
      - Hosts within the OT DMZ, designated jump servers, SCADA servers, and the network segments containing field devices such as PLCs and RTUs.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN an LSTM or HMM model on historical connection sequences (protocol, duration, bytes) for intermediary hosts.
          DEPLOY model to score live connection sequences in near-real-time.
          IF a sequence has a low probability (high anomaly score)
            TRIGGER_ALERT (e.g., for a long-lived, low-bandwidth connection)
  - question: Is a host exhibiting signs of C2 protocol tunneling and then immediately connecting to internal ICS assets?
    context: This question aims to find adversaries who are hiding their C2 traffic within legitimate protocols (like DNS, HTTP, or ICMP) to evade firewalls and simple detection rules. The key to this analytic is a two-step approach: first, identify the suspicious tunneling activity itself (e.g., abnormally long DNS queries, high-entropy URLs), and second, correlate that activity with the same host immediately initiating new connections to sensitive internal ICS assets. This correlation is a strong signal of a compromised host being used as a proxy.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek icmp.log
      - Windows Event ID 4688
      - Internal DNS servers, any OT host with direct or proxied internet access (e.g., Historians, Engineering Workstations), perimeter firewalls and web proxies, and network segments where ICMP is permitted.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          MONITOR for tunneling indicators:
            - DNS query length > 64 OR entropy > 4.0
            - Suspicious HTTP User-Agent OR anomalous JA3/JA3S hash
            - Large ICMP payloads
          IF an indicator is detected from a SOURCE_HOST
            WITHIN 60 seconds, check for new connections from SOURCE_HOST to internal ICS assets.
          IF correlation is found
            TRIGGER_ALERT
  - question: Have key tunneling metrics for a specific host (e.g., DNS entropy, HTTP URI entropy) significantly deviated from their established 30-day baselines?
    context: This question provides a more robust, statistical method for detecting C2 tunneling. Instead of using fixed thresholds, it establishes a behavioral baseline for each host's network traffic characteristics. An alert is triggered when a host's behavior deviates significantly from its own normal past behavior. This can detect more subtle or novel tunneling techniques and is less prone to false positives from benign but unusual traffic. Combining multiple deviations into a composite risk score helps prioritize the most suspicious events.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek icmp.log
      - Windows Event ID 4688
      - Internal DNS servers, any OT host with direct or proxied internet access (e.g., Historians, Engineering Workstations), perimeter firewalls and web proxies, and network segments where ICMP is permitted.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each HOST
            CALCULATE 30-day rolling baselines (mean, std_dev) for metrics like DNS query entropy, HTTP URI entropy, ICMP packet size, etc.
            COMPARE current metrics against the baseline.
          IF a metric > (mean + 3 * std_dev)
            INCREASE host's risk score.
          IF composite risk score exceeds a threshold
            TRIGGER_ALERT
  - question: Can a machine learning classifier identify traffic as C2 tunneling, and does the source host then pivot to internal ICS assets?
    context: This question leverages machine learning for advanced threat detection. By training a model (like a Random Forest or Isolation Forest) on a rich set of features from network logs, it becomes possible to classify traffic as "tunneling" or "benign" with high accuracy. This is more powerful than rule-based or simple statistical methods. The critical second step is to use a high-confidence prediction of tunneling as a trigger to investigate the source host's subsequent behavior, specifically looking for connections to internal ICS assets that would confirm its use as a malicious proxy.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek icmp.log
      - Windows Event ID 4688
      - Internal DNS servers, any OT host with direct or proxied internet access (e.g., Historians, Engineering Workstations), perimeter firewalls and web proxies, and network segments where ICMP is permitted.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN a Random Forest or Isolation Forest model on features from Zeek logs.
          DEPLOY model to score live traffic.
          IF model predicts "tunneling" with high confidence (e.g., score > 0.95) for traffic from a SOURCE_HOST
            QUERY for any new connections from SOURCE_HOST to internal ICS assets.
          IF subsequent connection is found
            TRIGGER_ALERT