name: T0843: Program Download
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps investigate whether an adversary is attempting to modify controller logic via a program download. This can be indicated by several suspicious activities: program downloads or writes from unauthorized IP addresses or outside maintenance windows; remote logons or new process creations on Engineering Workstations immediately followed by a connection to a PLC; a PLC's operating mode being stopped before a program download from an unauthorized source; or an online program modification (hot patch) without a preceding stop command, originating from an unauthorized source or targeting rarely modified logic.
type: technique
related:
- TA0109: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any program download or write operations originating from unauthorized IP addresses or occurring outside of scheduled maintenance windows?
  context: |
    This question seeks to identify direct attempts to modify PLC logic. A program download or write operation is a fundamental way to change a controller's behavior. By checking the source IP against an allow-list of authorized Engineering Workstations (EWS) and verifying if the activity occurs during a planned maintenance window, we can distinguish legitimate engineering activity from potentially malicious actions. An unauthorized source or an unexpected time for such a critical operation is a strong indicator of compromise.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Network traffic from IT/OT DMZ and PCN choke points
  - Engineering Workstation subnet traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Zeek s7.log WHERE function IN ('Download Block', 'Write Var')
      JOIN conn.log ON UID
      IF source_ip NOT IN allow_list THEN ALERT (high)
      IF timestamp NOT IN maintenance_window THEN ALERT (medium)
- question: Is there a statistically significant spike in the number of program downloads to a specific PLC outside of a maintenance window?
  context: |
    This question uses a statistical approach to detect anomalous behavior. Adversaries may attempt to blend in by performing actions that are legitimate in other contexts. By baselining the normal frequency of program downloads for each PLC, we can identify unusual spikes in activity. An hourly download count that exceeds three standard deviations from the mean ($$ \mu + 3\sigma $$) for non-maintenance periods is a strong statistical outlier, suggesting a potential brute-force attempt, repeated failed attempts, or an automated script-based attack.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Network traffic from IT/OT DMZ and PCN choke points
  - Engineering Workstation subnet traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each PLC:
        BASELINE hourly download counts over 90 days, excluding maintenance windows
        CALCULATE mean (μ) and standard_dev (σ)
      SEARCH current hour downloads
      IF current_count > (μ + 3σ) THEN ALERT
- question: Are there any program download events that are anomalous when compared to historical activity based on multiple network features?
  context: |
    This question leverages machine learning (Isolation Forest) to perform multi-dimensional anomaly detection. Simple rule-based checks might miss sophisticated attackers who manipulate one or two parameters to appear normal. This model considers a combination of features (e.g., source/destination IPs, function, time, connection duration, data volume) to build a comprehensive profile of 'normal' engineering activity. Events that receive a high anomaly score are significantly different from the established norm across these dimensions and warrant investigation as they may represent novel or evasive attack techniques.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Network traffic from IT/OT DMZ and PCN choke points
  - Engineering Workstation subnet traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN Isolation Forest model on s7.log and conn.log features (src_ip, dst_ip, function, time, duration, bytes)
      FOR each new download event:
        CALCULATE anomaly_score
        IF anomaly_score > threshold THEN ALERT
- question: Did a connection to a PLC from an Engineering Workstation follow a recent remote logon or process creation by an unauthorized user or application?
  context: |
    This question aims to link initial access or execution on an Engineering Workstation (EWS) to subsequent lateral movement into the control network. An adversary who gains access to an EWS will likely use that trusted host to connect to PLCs. By correlating network connections to PLCs with preceding logon or process events on the EWS within a short time window (60 seconds), we can identify the specific user or process responsible. Checking this user/process against an allow-list helps to quickly flag unauthorized activity originating from a compromised EWS.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Zeek conn.log
  - Engineering Workstations (EWS)
  - Active Directory domain controllers
  - Centralized SIEM/log aggregation platform
  - Network sensors monitoring traffic between the EWS subnet and the PCN
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON conn.log event (src_is_EWS, dst_port_is_ICS):
        SEARCH for logon (4624) or process_create (4688) on src_host in last 60s
        IF user or process_name NOT IN allow_list THEN ALERT
- question: Has a rare or never-before-seen combination of User, Process, and Destination PLC been observed originating from an Engineering Workstation?
  context: |
    This question focuses on detecting novel or rare activity patterns on Engineering Workstations (EWS). Legitimate engineering tasks typically involve a predictable set of users running specific software to connect to certain PLCs. By baselining these (User, Process, Destination PLC) combinations, we can spot deviations. A brand new, never-before-seen tuple is highly suspicious. Similarly, the use of a very rare combination could indicate an adversary using a legitimate but seldom-used tool for a malicious purpose, or the execution of a newly introduced malicious tool.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Zeek conn.log
  - Engineering Workstations (EWS)
  - Active Directory domain controllers
  - Centralized SIEM/log aggregation platform
  - Network sensors monitoring traffic between the EWS subnet and the PCN
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      FOR each EWS:
        BASELINE frequency of (User, Process, Dst_PLC) tuples over 30 days
      ON new PLC connection:
        EXTRACT (User, Process, Dst_PLC) tuple
        IF tuple is new OR tuple_frequency < 5th_percentile THEN ALERT
- question: Is a process initiating a PLC connection classified as malicious by a machine learning model?
  context: |
    This question uses a supervised machine learning model (Random Forest) to proactively identify malicious processes on Engineering Workstations (EWS) before they can cause significant harm. By training the model on features that characterize process execution—such as the parent process, command-line arguments (including their complexity/entropy), and the user context—it can learn to distinguish between legitimate engineering applications and malicious tools. When a process that subsequently connects to a PLC is flagged as malicious with high confidence, it provides a strong, early warning of an attack in progress.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Zeek conn.log
  - Engineering Workstations (EWS)
  - Active Directory domain controllers
  - Centralized SIEM/log aggregation platform
  - Network sensors monitoring traffic between the EWS subnet and the PCN
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN Random Forest model on EWS process data (4688)
      ON new process that connects to PLC:
        CLASSIFY process
        IF classification is 'malicious' AND confidence > 0.90 THEN ALERT
- question: Has a PLC been stopped and then reprogrammed within a short time window by an unauthorized source or outside of a maintenance period?
  context: |
    This question identifies a common and highly suspicious sequence of events for reprogramming a PLC: stopping the controller, then downloading new logic. While this is normal during maintenance, it's a critical red flag if performed by an unauthorized entity or at an unexpected time. A stateful rule that specifically looks for this 'Stop -> Download' sequence within a 5-minute window and validates the source and time provides a high-fidelity alert for potentially malicious logic modification, which could have severe physical consequences.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Process Control Network (PCN) segments monitored by network sensors
  - Centralized log analysis platform capable of stateful sequence detection
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON S7 'Stop CPU' event:
        CACHE (src_ip, dst_ip, timestamp)
      IF 'Download Block' or 'Write Var' from same (src_ip, dst_ip) within 5 mins:
        CHECK if src_ip is unauthorized OR time is outside maintenance
        IF true THEN ALERT (high)
- question: Is the time duration between stopping a PLC and downloading new logic to it abnormal compared to historical maintenance activity?
  context: |
    This question looks for temporal anomalies in the PLC reprogramming sequence. Even authorized engineers follow procedures that result in a typical timeframe between stopping a PLC and downloading new code. An automated attack script might perform this sequence much faster than a human, while a remote adversary operating manually with high latency or caution might be much slower. By baselining the normal time delta ($$ \Delta t $$) for this sequence, we can flag operations that are suspiciously fast or slow, indicating a deviation from standard operating procedure.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Process Control Network (PCN) segments monitored by network sensors
  - Centralized log analysis platform capable of stateful sequence detection
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each PLC model:
        BASELINE time delta (Δt) between 'Stop CPU' and 'Download Block' from historical logs
        CALCULATE 5th and 95th percentiles for Δt
      ON new 'Stop -> Download' sequence:
        CALCULATE new_Δt
        IF new_Δt is outside (5th_percentile, 95th_percentile) range THEN ALERT
- question: Does a sequence of commands sent to a PLC deviate from the normal, learned sequence of operations?
  context: |
    This question uses a sophisticated state-based model (Hidden Markov Model) to understand the 'grammar' of legitimate PLC interactions. Normal operations, including maintenance, follow predictable sequences of commands (e.g., 'Stop' -> 'Download' -> 'Start'). The HMM learns these valid state transitions. An adversary might use a novel or incorrect sequence of commands. When a live sequence of commands receives a low probability score from the trained model, it means the sequence is highly uncharacteristic of normal operations and likely represents a malicious or malformed interaction attempt.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Process Control Network (PCN) segments monitored by network sensors
  - Centralized log analysis platform capable of stateful sequence detection
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each PLC model:
        TRAIN HMM on known-good S7 command sequences
      ON live S7 command stream:
        EVALUATE probability of observed sequence
        IF probability is below threshold THEN ALERT
- question: Is an online program modification (hot patch) being performed from an unauthorized source IP?
  context: |
    This question targets a specific type of logic modification known as an online edit or 'hot patch,' which alters the PLC's program while it is still running. This is a powerful but risky capability. An alert should be triggered if such an action originates from an IP not on the authorized EWS allow-list. The severity of this alert should be escalated if the activity occurs outside a maintenance window or if the target PLC controls a critical part of the process, as this could indicate an adversary attempting to make a stealthy but impactful change.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Network sensor taps monitoring traffic between the Engineering Zone and the Process Control Zone
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON S7 'Insert Block' event:
        CHECK if source_ip NOT IN allow_list
        IF true, ALERT
        ESCALATE alert if outside maintenance window OR target is critical PLC
- question: Is an online program modification targeting a logic block that is rarely or never changed?
  context: |
    This question aims to detect suspicious online edits by focusing on *what* is being changed, not just *who* is changing it. Within a PLC program, some logic blocks are stable and rarely modified, while others might be tweaked more frequently. By baselining the modification frequency for each block number, we can identify when a change is made to a historically stable part of the code. Such an edit is unusual and could represent an adversary attempting to alter core, sensitive logic that is not typically touched during routine operations.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Network sensor taps monitoring traffic between the Engineering Zone and the Process Control Zone
  range: last 180 days
  queries:
  - technology: pseudocode
    query: |
      FOR each PLC:
        BASELINE frequency of modified block numbers over 180 days
      ON new online edit:
        GET block number
        IF block_number_frequency < 5th_percentile THEN ALERT
- question: Does a recent online program modification fall outside of established clusters of normal editing activity?
  context: |
    This question uses an unsupervised clustering algorithm (DBSCAN) to identify anomalous online edits that don't fit any known pattern of legitimate activity. The model groups historical events into clusters based on multiple features (source, destination, function, block number, time). A new event that does not fit into any existing cluster is labeled as 'noise.' These noise points represent highly anomalous events that are dissimilar to all previously observed groups of normal activity and should be treated as high-confidence indicators of potential malicious behavior.
  answer_sources:
  - Zeek s7.log
  - Zeek conn.log
  - Network sensor taps monitoring traffic between the Engineering Zone and the Process Control Zone
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      RUN DBSCAN on historical online edit events using features (src_ip, dst_ip, function, block_num, hour)
      ON new online edit event:
        CLASSIFY event
        IF event is classified as noise THEN ALERT