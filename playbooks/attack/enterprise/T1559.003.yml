name: T1559.003: XPC Services
id: 5f9c4a1e-8d3b-4f5c-b1b3-2a6c8d7e0f9a
description: Is the adversary executing malicious code using XPC services? This involves monitoring for XPC service processes where attributes like file hash, path, or signing certificate match known-bad indicators. It also includes detecting anomalous behavior such as a process creating and immediately executing a file with a .xpc or .appex extension in a user-writable directory. Further investigation looks for inter-process communication (IPC) where script interpreters or network utilities connect to high-privilege system XPC services. The playbook also checks for XPC services executing from non-standard paths, with invalid signatures, or signed by untrusted/new certificates. Finally, it flags instances where a known system XPC service is launched by an unexpected parent process, deviating from its normal parent, 'launchd' (PID 1).
type: technique
related:
- TA0002: Execution
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is an executed XPC service process associated with a known-bad indicator?
  context: This question aims to identify the most straightforward signs of compromise by checking if a newly created XPC service process matches known malicious indicators. By comparing the process's file hash (SHA256), file path, and the thumbprint of its signing certificate against threat intelligence feeds, analysts can quickly detect the execution of known malware or tools that leverage XPC services for persistence or execution.
  answer_sources:
  - Endpoint: Process Creation Events
  - Endpoint: Code Signature Information
  - Threat Intelligence Feeds
  - Applies to: macOS endpoints, particularly developer workstations, critical servers, and systems running custom macOS applications.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events WHERE process_is_xpc_service
      JOIN code_signature_info ON process_id
      JOIN threat_intel_feed ON (process_hash, process_path, signer_thumbprint)
      RETURN process_details, threat_match_details
- question: Is an XPC service being executed from a file path with unusually high entropy?
  context: This question helps detect malware that uses randomization to evade path-based detection rules. Adversaries often place malicious XPC services in deeply nested or randomly named directories. By calculating the Shannon entropy of the file path and comparing it to a historical baseline, analysts can identify executions from paths that are suspiciously complex or random, which warrants further investigation.
  answer_sources:
  - Endpoint: Process Creation Events
  - Endpoint: Code Signature Information
  - Applies to: macOS endpoints, particularly developer workstations, critical servers, and systems running custom macOS applications.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new xpc_process_creation_event:
        path_entropy = CALCULATE_SHANNON_ENTROPY(event.process_path)
        baseline_95th_percentile = GET_BASELINE_ENTROPY(last 30 days)
        IF path_entropy > baseline_95th_percentile:
          ALERT "High entropy path detected for XPC service"
- question: Is there an anomalous spike in the volume of XPC service executions on an endpoint?
  context: This question seeks to identify unusual bursts of XPC service activity that could indicate a malware infection or an adversary's actions. Legitimate system behavior typically follows a predictable pattern. By using a time-series model to forecast the expected volume of XPC executions, analysts can be alerted to significant deviations from the norm, which could signify a malicious process spawning numerous XPC services for its operations.
  answer_sources:
  - Endpoint: Process Creation Events
  - Endpoint: Code Signature Information
  - Applies to: macOS endpoints, particularly developer workstations, critical servers, and systems running custom macOS applications.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each endpoint, each hour:
        actual_count = COUNT xpc_process_creation_events
        predicted_upper_bound = FORECAST_MODEL.predict(hour)
        IF actual_count > predicted_upper_bound:
          ALERT "Anomalous spike in XPC service executions"
- question: Did a process write an XPC or APPEX file to a user-writable directory and then immediately execute it?
  context: This question targets a common malware behavior known as "write-then-execute." Adversaries may drop a malicious XPC service bundle into a temporary or shared location and then immediately launch it. Correlating file creation events (for .xpc or .appex files) with subsequent process creation events by the same parent process within a short time window is a high-fidelity indicator of this suspicious activity.
  answer_sources:
  - Endpoint: File Creation Events
  - Endpoint: Process Creation Events
  - Applies to: User-writable directories on macOS endpoints, such as /tmp, /Users/Shared, ~/Library/Caches, and ~/Library/Application Support.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH file_creation_events WHERE file_path ENDS_WITH '.xpc' OR '.appex' AND directory IS user_writable
      CORRELATE WITH process_creation_events WHERE parent_process_id = file_event.process_id AND process_path = file_event.file_path AND time_delta < 60s
      RETURN correlated_events
- question: Is a specific process engaging in an unusually high number of 'write-then-execute' actions involving XPC bundles?
  context: This question builds on the 'write-then-execute' pattern by baselining the behavior for each process. While some legitimate installers might perform this action occasionally, a script interpreter like 'bash' or a network utility like 'curl' doing so repeatedly is highly suspicious. By tracking the daily frequency of this behavior per process and using statistical analysis (mean and standard deviation), analysts can detect when a process deviates significantly from its normal behavior, indicating potential misuse.
  answer_sources:
  - Endpoint: File Creation Events
  - Endpoint: Process Creation Events
  - Applies to: User-writable directories on macOS endpoints, such as /tmp, /Users/Shared, ~/Library/Caches, and ~/Library/Application Support.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process_name, each day:
        daily_count = COUNT 'write-then-execute' XPC events
        historical_mean, historical_stddev = GET_BASELINE(process_name, last 30 days)
        IF daily_count > (historical_mean + 3 * historical_stddev):
          ALERT "Anomalous write-then-execute frequency for process"
- question: Does a 'write-then-execute' sequence for an XPC service exhibit characteristics of malicious activity according to a machine learning model?
  context: This question uses a machine learning model to perform a more sophisticated risk assessment of 'write-then-execute' events. Instead of relying on a single rule, the model considers multiple features in concert—such as the parent process, path complexity, and code signature—to calculate a probability of maliciousness. This approach can identify novel or complex threats that might evade simpler rule-based detections and provides a confidence score to help prioritize alerts for analysts.
  answer_sources:
  - Endpoint: File Creation Events
  - Endpoint: Process Creation Events
  - Applies to: User-writable directories on macOS endpoints, such as /tmp, /Users/Shared, ~/Library/Caches, and ~/Library/Application Support.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each 'write-then-execute' event:
        features = EXTRACT_FEATURES(event)
        malicious_probability = ML_MODEL.predict_proba(features)
        IF malicious_probability > 0.9:
          ALERT "High probability malicious write-then-execute sequence detected"
- question: Is a suspicious process (like a script interpreter or network utility) communicating with a high-privilege system XPC service?
  context: This question aims to detect privilege escalation or defense evasion attempts. High-privilege XPC services perform sensitive system operations and should typically only be contacted by trusted system or application processes. An IPC connection from a script interpreter ('bash', 'python') or a network tool ('curl') to a sensitive service (e.g., com.apple.securityd) is highly anomalous and could indicate an adversary is attempting to misuse the service to execute code or manipulate system settings.
  answer_sources:
  - Endpoint: IPC Connection Events
  - Endpoint: Process Creation Events
  - Applies to: System-level XPC services on all macOS endpoints; IPC communication channels and process relationship graphs monitored by endpoint security tools.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH ipc_connection_events
      WHERE client_process_name IN (suspicious_client_watchlist)
      AND server_process_name IN (high_privilege_xpc_watchlist)
      ALERT "Suspicious client connected to high-privilege XPC service"
- question: Is an XPC service receiving a connection from a client process that rarely or never communicates with it?
  context: This question focuses on identifying anomalous IPC relationships by baselining normal communication patterns. Every XPC service has a set of legitimate client processes it regularly interacts with. By tracking the historical frequency of these client-server pairs, analysts can be alerted to a connection from a rare or novel client. This "rarity" is a strong indicator of suspicious activity, as it deviates from the established communication baseline for that service.
  answer_sources:
  - Endpoint: IPC Connection Events
  - Endpoint: Process Creation Events
  - Applies to: System-level XPC services on all macOS endpoints; IPC communication channels and process relationship graphs monitored by endpoint security tools.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new ipc_connection_event (client, server):
        client_frequency = GET_HISTORICAL_FREQUENCY(client, server)
        IF client_frequency < 5th_percentile_for_server:
          ALERT "Rare IPC client detected for XPC service"
- question: Does an XPC connection represent a structural outlier in the overall process communication graph?
  context: This question employs advanced graph analysis to find anomalous XPC connections in the context of the entire system's behavior. By modeling all process interactions as a graph, machine learning can learn the 'shape' of normal communication patterns. Outlier connections—those that don't fit into any cluster of normal behavior—are flagged for investigation. This method is powerful for detecting novel attack techniques that create previously unseen communication pathways between processes.
  answer_sources:
  - Endpoint: IPC Connection Events
  - Endpoint: Process Creation Events
  - Applies to: System-level XPC services on all macOS endpoints; IPC communication channels and process relationship graphs monitored by endpoint security tools.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BUILD process_communication_graph from ipc_events
      GENERATE vector_embeddings for all nodes/edges
      RUN clustering_algorithm on embeddings
      IDENTIFY outliers (connections not in a cluster)
      ALERT "Outlier XPC connection detected in communication graph"
- question: Is an XPC service being executed from a non-standard location, with an invalid signature, or signed by an untrusted authority?
  context: This question combines several high-confidence indicators of malicious XPC services into a single rule. Legitimate XPC services are almost always located in standard system or application directories, are properly signed by Apple or a trusted developer, and use a valid certificate. An XPC service that violates any of these conditions is highly suspect and likely malicious, warranting an immediate alert and investigation.
  answer_sources:
  - Endpoint: Process Creation Events
  - Endpoint: Code Signature Information
  - Applies to: File systems of macOS endpoints, particularly non-standard locations like /private/tmp/, /Users/Shared/, and user home directories; Enterprise certificate trust stores.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH xpc_process_creation_events
      JOIN code_signature_info
      WHERE (process_path NOT IN ('/System/*', '/Library/*', '/Applications/*'))
      OR (signature_status IN ('unsigned', 'invalid'))
      OR (certificate_issuer NOT IN (trusted_ca_list))
      ALERT "Suspicious XPC service execution detected"
- question: Is an XPC service signed by a new or suspiciously-named developer certificate?
  context: This question helps detect typosquatting or the use of illicitly created developer certificates. Adversaries may use certificates with names that are visually similar to legitimate ones (e.g., "Microsft" instead of "Microsoft"). By maintaining a baseline of known-good signer subjects and calculating the string distance (Levenshtein) for new ones, analysts can flag certificates that are completely new to the environment or are suspiciously close to, but not identical to, a trusted one.
  answer_sources:
  - Endpoint: Process Creation Events
  - Endpoint: Code Signature Information
  - Applies to: File systems of macOS endpoints, particularly non-standard locations like /private/tmp/, /Users/Shared/, and user home directories; Enterprise certificate trust stores.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new xpc_process_creation_event:
        signer_subject = event.signer_subject
        IF signer_subject IS NEW:
          ALERT "First-seen XPC signer subject"
        ELSE:
          min_distance = CALCULATE_LEVENSHTEIN_DISTANCE(signer_subject, known_subjects)
          IF min_distance > 95th_percentile_distance:
            ALERT "Anomalous signer subject name detected"
- question: Does a new XPC service execution deviate from the established profile of 'normal' XPC services?
  context: This question uses anomaly detection (One-Class SVM) to identify malicious XPC services without relying on specific signatures. The model is trained exclusively on the characteristics of known-good XPC services in the environment. Any new XPC execution that doesn't fit this learned profile—considering factors like its path, parent, and signature—is flagged as an outlier. This is effective for catching zero-day threats or custom malware that doesn't match any known bad indicator.
  answer_sources:
  - Endpoint: Process Creation Events
  - Endpoint: Code Signature Information
  - Applies to: File systems of macOS endpoints, particularly non-standard locations like /private/tmp/, /Users/Shared/, and user home directories; Enterprise certificate trust stores.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new xpc_process_creation_event:
        features = EXTRACT_FEATURES(event)
        is_outlier = ONE_CLASS_SVM_MODEL.predict(features)
        IF is_outlier:
          ALERT "Outlier XPC service execution detected by ML model"
- question: Was a system XPC service launched by an unexpected parent process?
  context: This question targets a common technique where an adversary's process launches a legitimate system XPC service to inherit its privileges or functionality. Most system XPC services are launched by 'launchd' (PID 1) or a specific application. By creating an allow-list of valid parent-child relationships, any deviation from this list (e.g., 'bash' launching 'com.apple.airportd') can be immediately flagged as a high-confidence malicious event.
  answer_sources:
  - Endpoint: Process Creation Events
  - Applies to: Process trees on all macOS endpoints, focusing on children of common user-facing applications like browsers, terminal emulators, and document editors.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events WHERE process_is_xpc_service
      IF parent_process NOT IN get_allowlisted_parents(process_name):
        ALERT "XPC service launched by unapproved parent"
- question: Is an XPC service being launched by a parent process that is statistically rare for it?
  context: This question provides a dynamic alternative to a static allow-list for parent-child relationships. Instead of manually defining all valid parents, this method automatically baselines the frequency of all observed parent processes for each XPC service. A launch by a very rare parent process (e.g., one that accounts for less than 0.1% of all launches for that service) is flagged as an anomaly. This can adapt to system updates and identify suspicious relationships without manual list maintenance.
  answer_sources:
  - Endpoint: Process Creation Events
  - Applies to: Process trees on all macOS endpoints, focusing on children of common user-facing applications like browsers, terminal emulators, and document editors.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new xpc_launch_event (parent, child):
        parent_frequency = GET_HISTORICAL_PARENT_FREQUENCY(parent, child, last 30 days)
        IF parent_frequency < 0.001:
          ALERT "Rare parent process detected for XPC service"
- question: Does a parent-child process relationship involving an XPC service appear illegitimate according to a machine learning model?
  context: This question leverages a supervised machine learning model to provide the most nuanced detection of illegitimate XPC service launches. By training on a rich set of features from both the parent and child processes (including command-line arguments and user context), the model can learn the subtle differences between legitimate and malicious launch events. This allows it to identify sophisticated attacks where an adversary might try to masquerade as a legitimate parent process.
  answer_sources:
  - Endpoint: Process Creation Events
  - Applies to: Process trees on all macOS endpoints, focusing on children of common user-facing applications like browsers, terminal emulators, and document editors.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new xpc_launch_event (parent, child):
        features = EXTRACT_FEATURES(parent, child)
        illegitimate_score = ML_MODEL.predict(features)
        IF illegitimate_score > 0.8:
          ALERT "High-confidence illegitimate XPC launch detected"