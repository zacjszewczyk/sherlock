name: T1562: Impair Defenses
id: 2a9b3f8e-1d9c-4a2b-9e8c-7d6f5a4b3c2d
description: Investigates whether an adversary is impairing defenses to evade detection. This involves looking for evidence such as the execution of known defense impairment tools, command-line arguments designed to disable security services or logging, the clearing of event logs, a sudden cessation of logs from a host, or correlated sequences of suspicious activity followed by defense impairment actions. This playbook focuses on identifying these activities across critical assets like Domain Controllers, critical servers, and user endpoints.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any processes been created that match the file hashes of known defense impairment tools or malware?
    context: This question aims to identify the execution of known malicious tools by comparing file hashes from process creation events against a trusted threat intelligence feed. A match provides a high-confidence indicator that an adversary is using a recognized tool (like PCHunter or GMER) to disable security controls.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, Critical Application Servers, User Endpoints, Security Infrastructure Servers (e.g., EDR/SIEM management consoles)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events (e.g., EventID 4688)
          JOIN with threat_intelligence_hash_feed
          WHERE process_hash == threat_intel_hash
          RETURN host, process_name, process_hash, user
  - question: Are there any executables with very low prevalence across the enterprise but high execution counts on a single host?
    context: This question looks for statistical outliers that threat intelligence might miss. A tool that is very rare in the environment but runs frequently on one machine could be a custom or targeted utility deployed by an attacker to impair defenses on a specific system. It helps find the "unknown unknowns."
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, Critical Application Servers, User Endpoints, Security Infrastructure Servers (e.g., EDR/SIEM management consoles)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE prevalence (unique host count / total host count) for each process_hash from process_creation_events
          CALCULATE execution count per host for each process_hash
          FILTER for process_hash where prevalence < 0.001 AND execution_count_per_host > threshold
          RETURN host, process_hash, prevalence, execution_count_per_host
  - question: Have any newly observed executables been classified as malicious by a machine learning model?
    context: This question leverages predictive analytics to identify potentially malicious executables that are not yet known to threat intelligence feeds. By analyzing static file features, a machine learning model can score new files, allowing analysts to proactively investigate executables that have a high probability of being defense impairment tools before they are widely recognized.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, Critical Application Servers, User Endpoints, Security Infrastructure Servers (e.g., EDR/SIEM management consoles)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new unique process_hash from process_creation_events:
            SCORE process_hash using ML_file_classifier
            IF score > malicious_threshold:
              ALERT and investigate host, process_name, user, score
  - question: Have any commands been executed with arguments known to disable security services, firewall rules, or logging policies?
    context: This question focuses on detecting direct attempts to weaken security controls via the command line. By searching for specific command patterns (e.g., using `sc.exe` to disable a service, `netsh.exe` to alter firewall rules, or `auditpol.exe` to clear audit policies), analysts can find explicit evidence of an adversary trying to impair defenses.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - Windows Event ID 7036
      - Domain Controllers, User Endpoints, Application Servers, Windows-based Firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events (e.g., EventID 4688)
          WHERE command_line MATCHES REGEX ('sc.exe config.*start= disabled', 'taskkill.exe /f /im', 'netsh.exe advfirewall set', 'auditpol.exe /clear')
          RETURN host, user, full_command_line
  - question: Has any user or host shown an abnormal frequency or complexity of commands related to system or security configuration?
    context: This question seeks to identify anomalous behavior that might indicate defense evasion, even if the specific commands aren't on a blocklist. A sudden spike in the use of tools like `sc.exe` or `netsh.exe` by a user, or command-line arguments with unusually high complexity (entropy), can signal that an attacker is using legitimate tools for malicious purposes or employing obfuscation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - Windows Event ID 7036
      - Domain Controllers, User Endpoints, Application Servers, Windows-based Firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE baseline frequency and entropy for command-line tools (sc.exe, netsh.exe, etc.) per user/host.
          MONITOR for executions where frequency > 3 standard deviations from baseline OR entropy is abnormally high.
          ALERT on outliers.
  - question: Have any executed command-line arguments been classified as suspicious or malicious by a sequence-aware machine learning model?
    context: This question uses a sophisticated ML approach to analyze the structure and syntax of command-line arguments, not just keywords. This allows for the detection of novel or obfuscated defense evasion techniques that might not be caught by simple regex matching. The model can identify command sequences that deviate from learned benign patterns.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - Windows Event ID 7036
      - Domain Controllers, User Endpoints, Application Servers, Windows-based Firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each command_line from process_creation_events:
            SCORE command_line using ML_sequence_classifier
            IF score > malicious_threshold:
              ALERT and investigate host, user, command_line, score
  - question: Have any Windows event logs been cleared?
    context: This question looks for the most direct evidence of an adversary trying to cover their tracks by destroying log data. This is a high-confidence indicator of malicious activity, as clearing event logs is a very uncommon action for legitimate administrators and is almost always done to evade detection. The query looks for the specific event ID for log clearing (1102) or the commands used to perform the action.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1102
      - Windows PowerShell Operational Event ID 4104
      - All Windows Hosts, especially Domain Controllers and critical servers where logs are paramount.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for EventID 1102
          OR SEARCH for process_creation_events WHERE process_name == 'wevtutil.exe' AND command_line CONTAINS 'cl'
          OR SEARCH for powershell_events (EventID 4104) WHERE script_block CONTAINS 'Clear-EventLog'
          ALERT on any match.
  - question: Has a log clearing action been performed by a user or on a host where this action is historically rare or has never occurred?
    context: This question adds context to a log clearing event to increase confidence. While any log clear is suspicious, one performed by a non-administrative user, or by an admin on a server where logs have never been cleared before, is exceptionally anomalous and likely malicious. It helps prioritize investigation by focusing on the most unusual occurrences.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1102
      - Windows PowerShell Operational Event ID 4104
      - All Windows Hosts, especially Domain Controllers and critical servers where logs are paramount.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each log_clearing_event:
            CALCULATE historical frequency of this action by this user and on this host.
            IF frequency is zero or extremely low:
              INCREASE severity and ALERT.
  - question: Did a log clearing event occur shortly after other suspicious activities on the same host?
    context: This question seeks to identify malicious "event chains." A log clearing event on its own is suspicious, but when it immediately follows other IOCs—like a suspicious file download or script execution—it strongly indicates that an adversary is actively trying to cover up a multi-stage intrusion. This contextualizes the log clear as the culmination of an attack sequence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1102
      - Windows PowerShell Operational Event ID 4104
      - All Windows Hosts, especially Domain Controllers and critical servers where logs are paramount.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE events on the same host within a 10-minute window.
          SEARCH for sequences like: [Suspicious Download -> Script Execution -> Log Clear Event]
          ASSIGN high risk score to sequences ending in a log clear.
          ALERT on high-risk sequences.
  - question: Have any critical hosts or log sources stopped sending logs for a defined period without scheduled maintenance?
    context: This question aims to detect "silent hosts" which may indicate that logging or the entire host has been disabled by an attacker. By setting up a simple heartbeat rule, the security team can be immediately alerted when a critical asset unexpectedly stops reporting, which could be a sign of service termination, network isolation, or host failure caused by an adversary.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 7036
      - Windows Event ID 4688
      - Log Aggregation/SIEM Infrastructure, Network Egress Points, All log-generating hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical_log_source:
            IF no logs received in last 15 minutes AND no active maintenance ticket:
              ALERT for 'silent host'.
  - question: Has the log volume from any source dropped to a statistically anomalous low level compared to its historical baseline?
    context: This question looks for a sudden, significant drop in the number of logs being sent from a source, which can indicate that a security service has been tampered with or disabled. Unlike a simple heartbeat, this method can detect partial impairment (e.g., disabling certain audit policies) and accounts for normal fluctuations in activity, making it more robust at finding subtle defense evasion.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 7036
      - Windows Event ID 4688
      - Log Aggregation/SIEM Infrastructure, Network Egress Points, All log-generating hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each log_source:
            CALCULATE time-series baseline of log volume.
            IF current_volume < 5th_percentile_of_baseline for a sustained period:
              ALERT for anomalous log volume drop.
  - question: Is any host predicted to be sending logs but is not, while still showing signs of network activity?
    context: This is a high-confidence question that combines log data forecasting with network data. A machine learning model predicts the expected log volume. If the actual volume is near zero but network flow logs show the host is still communicating, it strongly suggests that the host is compromised and its logging capabilities have been intentionally disabled by an adversary.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 7036
      - Windows Event ID 4688
      - Log Aggregation/SIEM Infrastructure, Network Egress Points, All log-generating hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each log_source:
            PREDICT expected_log_volume using time-series model.
            CALCULATE anomaly_score based on (predicted_volume - actual_volume).
            IF anomaly_score > threshold:
              CHECK network_flow_logs (e.g., Zeek) for recent activity from host.
              IF host is active on network:
                GENERATE high-priority alert for 'Active Silent Host'.
  - question: Has a suspicious process creation been immediately followed by an action that impairs defenses on the same host?
    context: This question seeks to connect the dots between the introduction of a suspicious tool and its immediate use to disable security. By creating a rule that looks for a specific sequence—a process starting from a risky location like `%TEMP%` and then a security service stopping or a log being cleared—analysts can catch an attack chain in progress with high confidence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 7036
      - Windows Event ID 1102
      - Windows Event ID 4657
      - User Endpoints, Servers, Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE events on the same host within a 5-minute window.
          ALERT if [ProcessCreate from %TEMP%] is followed by [ServiceStop (7036) OR LogClear (1102) OR SecurityRegMod (4657)].
  - question: Has the statistical likelihood of a defense impairment action increased significantly following a specific type of process creation?
    context: This question uses conditional probability to find emerging attack patterns. For example, if the probability of a log clear event (`EventID 1102`) suddenly spikes whenever `wscript.exe` is the parent process, it could indicate a new malicious script is circulating. This method can detect novel attack chains that aren't yet defined in static correlation rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 7036
      - Windows Event ID 1102
      - Windows Event ID 4657
      - User Endpoints, Servers, Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE global baseline probability P(ImpairmentEvent | ParentProcess).
          MONITOR for hosts or parent processes where the current probability significantly exceeds the baseline.
          ALERT on statistical spikes.
  - question: Has a sequence of system events occurred on a host that is considered highly improbable by a sequence analysis model?
    context: This question leverages a machine learning model trained to recognize "normal" sequences of events on a host. When an unusual chain of events occurs, such as a file download followed by execution from a temp directory and then a security service stopping, the model will flag it as a low-probability (and therefore highly suspicious) sequence, even if individual events are not malicious on their own.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 7036
      - Windows Event ID 1102
      - Windows Event ID 4657
      - User Endpoints, Servers, Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host's real-time event stream:
            CALCULATE the probability of the sequence using a trained HMM or similar model.
            IF probability is below a learned threshold:
              FLAG the sequence as a behavioral anomaly and alert.