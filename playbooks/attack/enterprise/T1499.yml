name: T1499: Endpoint Denial of Service
id: a1f9a2b1-c3d4-4e5f-8a6b-7c8d9e0f1a2b
description: This playbook helps investigate whether an adversary is attempting to degrade or block endpoint service availability. It provides questions and queries to detect various Endpoint Denial of Service (DoS) techniques, including high-volume attacks from known malicious infrastructure, execution of DoS tools, low-and-slow attacks, resource exhaustion through sustained CPU or memory consumption, and service failures indicated by application crashes or anomalous error rates. The goal is to identify and characterize DoS activity by analyzing network traffic, system performance metrics, and application logs.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are critical services receiving connections from IP addresses known to be associated with botnets or DDoS-for-hire services?
  context: This question is crucial for early warning. By correlating network connection logs with threat intelligence, we can proactively identify traffic from known malicious infrastructure. Answering this helps distinguish between a benign traffic spike and a targeted attack, allowing for faster response and blocking.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Perimeter firewalls
  - Public-facing web servers
  - External DNS servers
  - API Gateways
  - Load Balancers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log WHERE destination_port IN (80, 443, 53) | JOIN source_ip WITH threat_intelligence_feed WHERE category IN ('botnet', 'DDoS') | COUNT by source_ip, destination_ip
- question: Is a known malicious IP address connecting to a critical service at an anomalously high rate?
  context: Simply identifying a connection from a malicious IP isn't enough; understanding its behavior is key. This question helps prioritize alerts by focusing on IPs that are not only on a threat list but are also exhibiting aggressive behavior (high connection rates) that deviates significantly from normal patterns, indicating a more immediate and potent threat.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Perimeter firewalls
  - Public-facing web servers
  - External DNS servers
  - API Gateways
  - Load Balancers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log WHERE source_ip IN (known_malicious_ips) | CALCULATE connection_rate_per_minute | COMPARE rate WITH historical_baseline (95th_percentile) | ALERT if rate > baseline
- question: Can we predictively identify connections that are likely part of a DoS attack, even if they originate from unknown IP addresses?
  context: Attackers constantly cycle through new infrastructure. This question moves beyond reactive, signature-based detection to a proactive, predictive stance. By analyzing connection metadata (duration, bytes transferred, protocol), a machine learning model can identify the subtle characteristics of an attack, enabling the detection of novel threats that would otherwise evade threat intelligence feeds.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Perimeter firewalls
  - Public-facing web servers
  - External DNS servers
  - API Gateways
  - Load Balancers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FOR each_new_connection IN Zeek conn.log | EXTRACT features (duration, orig_bytes, etc.) | APPLY trained_classification_model | GENERATE DoS_likelihood_score | ALERT if score > threshold
- question: Is there evidence of known Denial of Service tools being executed on endpoints or their specific network traffic patterns being observed?
  context: This question seeks direct evidence of attacker tools. Detecting the execution of a tool like 'loic.exe' or a unique User-Agent string in HTTP traffic provides a high-confidence indicator of an ongoing or impending DoS attack. It allows for a rapid response targeted at the compromised endpoint or the specific malicious traffic flow.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek http.log
  - Web application servers
  - Critical internal servers
  - Domain Controllers
  - User workstations
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs (EventID 4688) WHERE process_name IN (known_dos_tools) OR SEARCH network_logs (Zeek http.log) WHERE user_agent MATCHES (known_dos_tool_signatures)
- question: Are web servers experiencing a high volume of incomplete connection attempts, indicative of a SYN flood attack?
  context: SYN floods are a classic DoS technique that exhausts server resources by leaving many connections half-open. This question focuses on identifying this specific attack pattern by analyzing the state of network connections. A low ratio of fully established connections to connection attempts is a strong statistical indicator of this type of resource exhaustion attack.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Web application servers
  - Critical internal servers
  - Domain Controllers
  - User workstations
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log GROUP BY source_ip, destination_ip | CALCULATE ratio = (count WHERE state='SF') / (total_count) | COMPARE ratio WITH historical_baseline (2_std_dev) | ALERT if ratio < baseline
- question: Are web servers exhibiting an anomalous number of long-duration connections with minimal data transfer, suggesting a low-and-slow attack?
  context: Unlike brute-force floods, low-and-slow attacks like Slowloris use very little bandwidth and can fly under the radar of traditional volume-based detection. This question targets these stealthy attacks by modeling normal connection behavior over time. A machine learning model can detect subtle but sustained deviations, such as an unusual number of connections being held open for long periods, which is a hallmark of this attack type.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Web application servers
  - Critical internal servers
  - Domain Controllers
  - User workstations
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FROM Zeek conn.log | CREATE time_series_of_connection_durations | APPLY anomaly_detection_model (e.g., LSTM) | ALERT on detected_anomalies (sustained_increase_in_long_duration_connections)
- question: Are critical servers experiencing sustained, high CPU utilization caused by a primary service process?
  context: This question provides a direct measure of impact on a server's health. Sustained high CPU usage by a core service (like a web or database server) is a strong indicator that the service is struggling to handle its workload, a common symptom of a DoS attack. Correlating this with the specific process helps confirm the issue is with the service itself and not a rogue background task.
  answer_sources:
  - Windows Performance Counters
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Critical application servers
  - Database servers
  - Authentication servers
  - Virtualization hosts
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH performance_logs WHERE counter='% Processor Time' AND value > 95 for 5_minutes | CORRELATE with process_logs (Sysmon EventID 1) to identify top_process | ALERT if top_process is 'web_service' or 'db_service'
- question: Are critical servers showing statistically significant deviations from their normal resource utilization baselines for CPU, memory, or network I/O?
  context: Every server has a unique "heartbeat" of resource usage. This question moves beyond simple thresholds to a more intelligent, baseline-driven approach. By understanding what's normal for a specific server, we can detect anomalous resource consumption that might indicate a DoS attack, even if the absolute values don't cross a generic high-water mark. Correlating this with network traffic spikes adds crucial context.
  answer_sources:
  - Windows Performance Counters
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Critical application servers
  - Database servers
  - Authentication servers
  - Virtualization hosts
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FOR each_critical_server | SEARCH performance_logs | CALCULATE current_metric_value | COMPARE value with historical_baseline (3_std_dev) | ALERT if value > baseline_threshold | CORRELATE with Zeek conn.log for traffic_spikes
- question: Is the current resource utilization on critical servers significantly different from what a predictive model expects, considering normal business cycles?
  context: This question represents a sophisticated approach to anomaly detection. Simple baselines can be fooled by normal, cyclical peaks in activity (e.g., start of the business day). A forecasting model learns these complex patterns. An alert from this model signifies a deviation that cannot be explained by normal operations, making it a high-fidelity indicator of a potential problem like a DoS attack.
  answer_sources:
  - Windows Performance Counters
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Critical application servers
  - Database servers
  - Authentication servers
  - Virtualization hosts
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FROM historical_performance_logs | TRAIN forecasting_model (e.g., VAR) | FOR current_performance_logs | PREDICT expected_usage_range | COMPARE actual_usage with predicted_range | ALERT on significant_deviation
- question: Have any critical business services crashed or terminated unexpectedly?
  context: This question focuses on the ultimate goal of many DoS attacks: service failure. A service crash (Event ID 7031/7034) is an unambiguous, high-severity indicator that availability has been lost. Alerting on this event for a critical service provides immediate, actionable intelligence that the service is down and requires urgent investigation.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 7031
  - Windows Event ID 7034
  - Application servers hosting custom or third-party software
  - Web servers (IIS, Apache)
  - Database servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH windows_event_logs WHERE EventID IN (7031, 7034) AND service_name IN (critical_service_list) | CREATE high_severity_alert
- question: Is there a statistically unusual spike in the number of application errors occurring on a critical server?
  context: Before a service crashes completely, it often generates a high volume of application errors as it struggles under load. This question aims to detect this precursor activity. By comparing the current error rate to a historical baseline (99th percentile), we can identify an abnormal situation that may precede a full outage, providing an opportunity for preemptive intervention.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 7031
  - Windows Event ID 7034
  - Application servers hosting custom or third-party software
  - Web servers (IIS, Apache)
  - Database servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH windows_event_logs WHERE EventID=1000 | GROUP BY server, hour | CALCULATE hourly_error_count | COMPARE count with historical_baseline (99th_percentile) | ALERT if count > baseline
- question: Can we automatically detect anomalous spikes in application error rates that are inconsistent with normal operational fluctuations?
  context: This question refines the previous one by using a more advanced model to reduce false positives. A time-series model can learn normal patterns, including regular reboots or patch cycles that might generate errors. This allows it to specifically flag spikes that are truly anomalous and not part of routine operations, providing a more reliable signal of a potential DoS-induced problem.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 7031
  - Windows Event ID 7034
  - Application servers hosting custom or third-party software
  - Web servers (IIS, Apache)
  - Database servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FROM windows_event_logs WHERE EventID=1000 | CREATE time_series_of_error_counts | APPLY anomaly_detection_model (e.g., Seasonal ESD) | ALERT on detected_anomalous_spikes
- question: Has the rate of connections to a critical service exceeded a predefined absolute maximum limit?
  context: This is a simple but effective first line of defense. For critical services with predictable capacity, a hard threshold can quickly catch a large-scale, brute-force flood attack. While less sophisticated than baselining, it provides a clear, unambiguous signal that the system is under an extreme load that warrants immediate attention.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Network load balancers
  - Public-facing web servers
  - API gateways
  - External-facing DNS servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log for critical_service | CALCULATE connections_per_minute | ALERT if rate > hard_threshold (e.g., 10000)
- question: Is a critical service experiencing a statistically significant increase in connection rate, and what is the diversity of the source IP addresses involved?
  context: This question combines rate-based anomaly detection with source analysis. Identifying a traffic spike that is far outside the normal range (4 standard deviations) is a strong indicator of an attack. Adding the source IP entropy provides crucial context: low entropy points to a single-source DoS, while high entropy indicates a distributed DoS (DDoS), guiding the subsequent response and mitigation strategy.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Network load balancers
  - Public-facing web servers
  - API gateways
  - External-facing DNS servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log for critical_service | CALCULATE connection_rate | COMPARE rate with rolling_baseline (4_std_dev) | IF rate > baseline, CALCULATE shannon_entropy of source_ips | ALERT with rate and entropy_score
- question: Are there distinct groups or clusters of incoming connections exhibiting similar, anomalous characteristics that differ from legitimate user traffic?
  context: This question seeks to identify coordinated attacks that might not be obvious from simple rate analysis. Unsupervised learning can group connections based on multiple features (IP subnet, user-agent, timing). This can uncover a botnet where all bots share a similar user-agent or attack pattern, even if their individual connection rates aren't high enough to trigger other alerts. It's a powerful way to find the "shape" of an attack in the data.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Network load balancers
  - Public-facing web servers
  - API gateways
  - External-facing DNS servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FROM Zeek conn.log | EXTRACT features (source_subnet, user_agent, etc.) | APPLY clustering_algorithm (DBSCAN) | IDENTIFY anomalous_clusters | ALERT on new_members_of_anomalous_clusters