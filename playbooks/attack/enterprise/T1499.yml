name: 'T1499: Endpoint Denial of Service'
id: '7098f861-c1f9-4638-a1e6-3454c5e3c7d6'
description: 'This playbook helps investigate whether an adversary is attempting to degrade or block endpoint service availability. This can be observed through high volumes of inbound connections from malicious IPs, execution of known DoS tools, low-and-slow attack patterns, sustained high resource consumption (CPU, memory), anomalous spikes in application errors or crashes, and abnormal volumes of network traffic with unusual source IP distributions.'
type: 'technique'
related:
  - 'TA0040: Impact'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Are inbound connections to critical services originating from IP addresses known to be associated with botnets or DDoS-for-hire services?'
    context: 'This question aims to identify the most straightforward denial-of-service attempts by cross-referencing incoming network traffic with threat intelligence. A match indicates that a known malicious actor is communicating with a critical asset, which is a high-fidelity indicator of a potential DoS attack. Early detection allows for proactive blocking of the malicious source IPs before service availability is significantly impacted.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Threat Intelligence Feed'
      - 'Perimeter firewalls'
      - 'Public-facing web servers'
      - 'External DNS servers'
      - 'API Gateways'
      - 'Load Balancers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          SEARCH Zeek conn.log WHERE destination_port IN (80, 443, 53)
          JOIN with Threat_Intelligence_Feed ON source_ip
          WHERE feed_category IN ('botnet', 'DDoS')
          ALERT on match
  - question: 'Is a known malicious IP, identified from threat intelligence, connecting to a critical service at a rate that is anomalously high compared to historical norms?'
    context: 'This question builds upon the initial threat intelligence match by adding a volumetric component. Not all traffic from a "bad" IP is part of a DoS attack. By comparing the connection rate to a historical baseline, analysts can distinguish between low-level scanning and a concentrated, high-volume attack. Exceeding the 95th percentile is a strong statistical indicator that the current activity is unusual and warrants immediate investigation and potential escalation.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Threat Intelligence Feed'
      - 'Perimeter firewalls'
      - 'Public-facing web servers'
      - 'External DNS servers'
      - 'API Gateways'
      - 'Load Balancers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          SEARCH Zeek conn.log WHERE source_ip IN (known_malicious_ips)
          CALCULATE connection_rate_per_minute
          COMPARE current_rate to historical_95th_percentile_rate for that service
          IF current_rate > 95th_percentile, ESCALATE alert
  - question: 'Can we proactively identify and score new inbound connections for their likelihood of being part of a DoS attack, even if they do not originate from a known malicious IP?'
    context: 'This question moves from reactive detection to proactive prediction. Threat intelligence feeds are inherently reactive. By training a machine learning model on the characteristics (features) of known DoS traffic, we can identify new attacks that exhibit similar patterns but originate from unknown sources. This allows for the detection of emerging threats and zero-day attacks that would otherwise be missed by signature-based or reputation-based methods.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Threat Intelligence Feed'
      - 'Perimeter firewalls'
      - 'Public-facing web servers'
      - 'External DNS servers'
      - 'API Gateways'
      - 'Load Balancers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          MODEL train Random Forest
          FEATURES: duration, orig_bytes, resp_bytes, service, proto FROM Zeek conn.log
          LABEL: threat_intel_match (True/False)
          APPLY model to new_connections in real-time
          SCORE connection_likelihood_of_DoS
          ALERT on high_score
  - question: 'Is a process associated with a known Denial of Service tool running on an endpoint, or is network traffic characteristic of such tools being observed?'
    context: 'This question seeks to identify the use of specific, off-the-shelf DoS tools by attackers. Detecting the execution of a tool like "loic.exe" via process monitoring (Event ID 4688) is a high-confidence indicator of malicious activity on the host. Complementing this with network signatures (e.g., unique User-Agents in http.log) allows for detection even if the tool''s execution on the source machine is not visible, providing a two-pronged approach to identifying tool-based attacks.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Web application servers'
      - 'Critical internal servers'
      - 'Domain Controllers'
      - 'User workstations'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          SEARCH Windows Event ID 4688 FOR process_name IN ('loic.exe', 'hping3', 'slowhttptest', ...)
          OR SEARCH Zeek http.log FOR user_agent OR request_structure MATCHING known_DoS_tool_signatures
          ALERT on match
  - question: 'Is a single source IP exhibiting behavior indicative of a SYN flood attack, such as a low ratio of successfully established connections to total connection attempts?'
    context: 'This question focuses on detecting a specific type of DoS attack: the SYN flood. In a SYN flood, the attacker sends many SYN packets but does not complete the three-way handshake, leaving half-open connections that exhaust server resources. A low ratio of "SF" (established) to total connections, especially with many "S1" or reset states, is a classic symptom. Comparing this ratio to a statistical baseline helps differentiate a targeted attack from normal network noise or misconfigurations.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Web application servers'
      - 'Critical internal servers'
      - 'Domain Controllers'
      - 'User workstations'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          FOR each source_ip targeting a web_server:
          CALCULATE ratio = (count of conn_state 'SF') / (total count of connections)
          CALCULATE baseline_ratio and std_dev for the service
          IF ratio < (baseline_ratio - 2 * std_dev), ALERT for potential SYN flood
  - question: 'Is there an anomalous, sustained increase in long-duration connections with minimal data transfer, characteristic of a low-and-slow attack like Slowloris?'
    context: 'This question aims to identify "low-and-slow" attacks, which are designed to evade simple volume-based detection. Attacks like Slowloris hold connections open for as long as possible by sending partial data, slowly consuming all available connections in the server''s pool. A time-series anomaly detection model can learn the normal patterns of connection duration and data volume and flag a sudden, sustained shift to long-duration, low-data connections as a probable Slowloris-style attack.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Web application servers'
      - 'Critical internal servers'
      - 'Domain Controllers'
      - 'User workstations'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          MODEL train LSTM on time-series of (connection_duration, data_transfer_volume)
          APPLY model to real-time Zeek conn.log data
          IF model flags a sustained anomaly of high-duration, low-data connections, ALERT for potential Slowloris attack
  - question: 'Is a critical server experiencing sustained, high CPU utilization caused by a primary service process like a web or database server?'
    context: 'This question directly investigates the impact of a potential DoS attack: resource exhaustion. Sustained CPU usage above 95% is a clear indicator of system stress. By correlating this high utilization with the specific process responsible (e.g., a web service), analysts can confirm that the service itself is under duress, likely due to an overwhelming number of requests, and not due to an unrelated system issue. This provides a direct link between performance degradation and the service being targeted.'
    answer_sources:
      - 'Windows Performance Counters'
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'Zeek conn.log'
      - 'Critical application servers'
      - 'Database servers'
      - 'Authentication servers'
      - 'Virtualization hosts'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          SEARCH Windows Performance Counters FOR '% Processor Time' > 95% for 5 minutes
          IF true, GET top_consuming_process from Event ID 4688/Sysmon Event ID 1
          IF top_consuming_process IS a web_service or database_service, ALERT on resource exhaustion
  - question: 'Are key performance metrics (CPU, Memory, Network I/O) on a critical server showing a statistically significant deviation from their normal baseline, and does this deviation correlate with a spike in network connections?'
    context: 'This question uses statistical baselining to detect anomalous resource consumption that might not hit a hard 95% threshold but is still highly unusual for the system''s normal operating patterns. An alert triggered by a 3-standard-deviation event indicates a statistically rare occurrence. Correlating this host-based performance anomaly with a simultaneous spike in network connections provides strong evidence that the resource exhaustion is being caused by external network traffic, a hallmark of a DoS attack.'
    answer_sources:
      - 'Windows Performance Counters'
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'Zeek conn.log'
      - 'Critical application servers'
      - 'Database servers'
      - 'Authentication servers'
      - 'Virtualization hosts'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          FOR each critical server:
          CALCULATE 30-day baseline (mean, std_dev) for CPU, Memory, Network I/O
          IF current_metric > (mean + 3 * std_dev) for 10 minutes, GENERATE preliminary_alert
          SEARCH Zeek conn.log for a connection_spike at the time of preliminary_alert
          IF correlation exists, ESCALATE alert
  - question: 'Is the current resource utilization on a critical server significantly deviating from the usage levels predicted by a model that understands normal business cycles (e.g., time of day, day of week)?'
    context: 'This question enhances anomaly detection by using a more sophisticated model that accounts for seasonality and cyclical patterns in resource usage. Simple baselines might trigger false positives during legitimate peak hours. A multivariate forecasting model can predict that CPU usage should be high on Monday morning but low on Sunday night. An alert is only triggered when the actual usage significantly and persistently breaks from this intelligent, context-aware prediction, resulting in higher-fidelity alerts that point to truly abnormal, non-cyclical events like a DoS attack.'
    answer_sources:
      - 'Windows Performance Counters'
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'Zeek conn.log'
      - 'Critical application servers'
      - 'Database servers'
      - 'Authentication servers'
      - 'Virtualization hosts'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          MODEL train VAR on historical time-series of CPU, Memory, Network I/O, incorporating time-of-day, day-of-week features
          FORECAST expected_resource_usage_range
          IF actual_usage persistently and significantly deviates from predicted_range, ALERT on unexplained resource anomaly
  - question: 'Has a critical business service crashed or terminated unexpectedly?'
    context: 'This question focuses on detecting the ultimate goal of many DoS attacks: a service failure. Events like a service crash (Event ID 7031) or unexpected termination (Event ID 7034) are unambiguous, high-severity indicators that a critical service is no longer available. While not all crashes are caused by attacks, any such event involving a critical service like a web server (W3SVC) or Key Distribution Center (KDC) requires immediate investigation to determine the root cause, with a DoS attack being a primary possibility.'
    answer_sources:
      - 'Windows Event ID 1000'
      - 'Windows Event ID 7031'
      - 'Windows Event ID 7034'
      - 'Application servers hosting custom or third-party software'
      - 'Web servers (IIS, Apache)'
      - 'Database servers'
      - 'Domain Controllers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          SEARCH for Windows Event ID 7031 OR 7034
          WHERE service_name IN ('W3SVC', 'MSExchangeIS', 'KDC', ...)
          CREATE high-severity ALERT on any match
  - question: 'Is a critical server experiencing a statistically anomalous number of application errors compared to its historical norms for this time of day?'
    context: 'This question seeks to identify service degradation that precedes a full crash. A flood of requests, malformed packets, or resource exhaustion can cause an application to generate numerous errors (Event ID 1000) before it fails completely. A simple alert on any error would be too noisy. By comparing the hourly error count to the 99th percentile of its historical distribution, we can identify a statistically significant spike in errors that strongly suggests the application is under severe stress and may be the target of a DoS attack.'
    answer_sources:
      - 'Windows Event ID 1000'
      - 'Windows Event ID 7031'
      - 'Windows Event ID 7034'
      - 'Application servers hosting custom or third-party software'
      - 'Web servers (IIS, Apache)'
      - 'Database servers'
      - 'Domain Controllers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          FOR each critical server:
          CALCULATE historical distribution (99th percentile) of hourly Event ID 1000 counts
          IF current_hourly_count > 99th_percentile_for_this_hour, ALERT on anomalous application error rate
  - question: 'Can we use a sophisticated time-series model to detect anomalous spikes in application errors while automatically accounting for normal seasonal fluctuations and system events?'
    context: 'This question aims to create a more robust and intelligent alerting system for application errors. Simple statistical thresholds can be brittle and may not account for normal business cycles or maintenance events (like reboots after patching) that cause temporary error spikes. A Seasonal Hybrid ESD model can learn these complex patterns and identify only those spikes that are truly anomalous and inconsistent with past behavior, reducing false positives and allowing analysts to focus on events that are more likely to be indicative of an attack.'
    answer_sources:
      - 'Windows Event ID 1000'
      - 'Windows Event ID 7031'
      - 'Windows Event ID 7034'
      - 'Application servers hosting custom or third-party software'
      - 'Web servers (IIS, Apache)'
      - 'Database servers'
      - 'Domain Controllers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          MODEL train Seasonal Hybrid ESD on time-series of Event ID 1000 frequency
          APPLY model to real-time event stream
          IF model flags a sudden, non-seasonal spike in errors, ALERT on anomalous error frequency
  - question: 'Has the rate of connections to a critical service breached a pre-defined "emergency" threshold?'
    context: 'This question provides a simple, high-water-mark detection mechanism as a safety net. While statistical and machine learning models are sophisticated, a hard threshold provides a clear, unambiguous tripwire for extreme traffic volumes. Breaching a threshold like 10,000 connections per minute indicates a significant event is underway, regardless of historical patterns. This serves as a straightforward, medium-severity alert that ensures massive, brute-force floods are never missed.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Zeek dns.log'
      - 'Network load balancers'
      - 'Public-facing web servers'
      - 'API gateways'
      - 'External-facing DNS servers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          CALCULATE connections_per_minute to critical_service
          IF connections_per_minute > 10000, CREATE medium-severity ALERT
  - question: 'Is a critical service experiencing a statistically extreme and sustained spike in connection volume, and what is the distribution of the source IP addresses involved?'
    context: 'This question combines statistical anomaly detection with source distribution analysis to provide deeper context. A 4-standard-deviation event is extremely rare and, when sustained, is a strong indicator of an attack. By also calculating the Shannon entropy of the source IPs, the alert can immediately provide a crucial piece of investigative information: low entropy (few unique IPs) points to a simple DoS from one or a few sources, while high entropy (many unique IPs) points to a distributed denial-of-service (DDoS) attack, which requires a different response strategy.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Zeek dns.log'
      - 'Network load balancers'
      - 'Public-facing web servers'
      - 'API gateways'
      - 'External-facing DNS servers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          CALCULATE 30-day baseline (mean, std_dev) of connections_per_minute for critical_service
          IF current_rate > (mean + 4 * std_dev) for 3 minutes, CALCULATE shannon_entropy of source_ips
          ALERT with rate, deviation, and source_ip_entropy
  - question: 'Can we identify coordinated groups of malicious connections that share similar characteristics, even if they are part of a larger, more diverse traffic flow?'
    context: 'This question seeks to uncover sophisticated, coordinated attacks that might be hidden within overall traffic. A botnet, for example, might use clients that share similar user-agents, originate from a common set of subnets, or exhibit similar connection patterns. An unsupervised clustering algorithm like DBSCAN can group connections by these features without prior knowledge. It can automatically isolate a "bad" cluster of thousands of connections that all use an outdated user-agent from the larger "good" cluster of legitimate traffic, effectively identifying the botnet''s footprint.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Zeek dns.log'
      - 'Network load balancers'
      - 'Public-facing web servers'
      - 'API gateways'
      - 'External-facing DNS servers'
    range: 'Last 90 days'
    queries:
      - technology: 'pseudocode'
        query: |
          MODEL train DBSCAN on incoming connections
          FEATURES: source_ip_subnet, user_agent, request_rate, connection_duration
          IDENTIFY clusters that are distinct from the main 'normal' traffic cluster
          ALERT on discovery of anomalous clusters, indicating a coordinated attack