name: T1048.003: Exfiltration Over Unencrypted Non-C2 Protocol
id: 5e9b8f1c-7d3a-4b2e-9c0a-1e8f3d6a7b5c
description: >-
  This playbook helps determine if an adversary is exfiltrating data from the network over unencrypted non-C2 protocols.
  It looks for several indicators of this activity, including: outbound connections over protocols like HTTP or FTP to known malicious destinations;
  the use of command-line utilities (certutil, bitsadmin, curl, powershell) with arguments for uploading data;
  significant, anomalous spikes in outbound data volume from a host compared to its baseline; files being transferred that have a mismatch
  between their file type and content entropy (e.g., a high-entropy text file suggesting encryption); a sequence of file archiving
  followed immediately by a network connection; and unusual DNS traffic patterns, like high query volumes or long, encoded subdomains,
  which are indicative of DNS tunneling.
type: technique
related:
  - 'TA0010: Exfiltration'
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts making outbound connections over unencrypted protocols (HTTP, FTP) to destinations listed on threat intelligence feeds, or using suspicious User-Agent strings?
    context: Adversaries often use known malicious or compromised servers for data exfiltration. Correlating outbound network connections on common unencrypted ports (e.g., 80, 21) against a feed of known command-and-control (C2) or exfiltration points is a high-fidelity way to detect this technique. Additionally, non-standard or known-malicious User-Agent strings can indicate the use of specific exfiltration tools rather than legitimate browser traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ftp.log
      - Egress points of the network (e.g., firewalls, web proxies), DNS resolvers, and Network Taps providing traffic to Zeek sensors.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Zeek conn.log WHERE dest_port IN (21, 80)
          JOIN destination_ip with threat_intel_feed
          SEARCH Zeek http.log FOR anomalous User-Agent strings
          RETURN source_ip, destination_ip, user_agent, timestamp ON match
  - question: Are internal hosts making DNS requests for rare or newly registered domains that could be used for data exfiltration?
    context: To evade detection based on known bad domains, adversaries often use newly registered domains (NRDs) or domains that are not commonly visited by others in the organization. Analyzing DNS logs to find domains with very low query prevalence or those created recently can uncover suspicious infrastructure potentially set up for data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ftp.log
      - Egress points of the network (e.g., firewalls, web proxies), DNS resolvers, and Network Taps providing traffic to Zeek sensors.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ANALYZE Zeek dns.log
          IDENTIFY domains queried by < 1% of hosts OR registered < 30 days ago
          CALCULATE risk score based on prevalence, age, and TLD
          ALERT on top 5% of risky domains
  - question: Can a machine learning model identify malicious destination domains based on features like domain name length, subdomain entropy, and User-Agent string rarity?
    context: Machine learning models can generalize beyond simple rules to identify suspicious network destinations. By training a model on features like domain characteristics (length, character randomness) and HTTP header information (User-Agent rarity), it's possible to predict whether a destination is malicious even if it has never been seen before.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ftp.log
      - Egress points of the network (e.g., firewalls, web proxies), DNS resolvers, and Network Taps providing traffic to Zeek sensors.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT features from Zeek dns.log and http.log (domain length, entropy, TLD, User-Agent)
          INPUT features into trained classification model
          ALERT if model predicts 'malicious' with high confidence
  - question: Are command-line utilities like certutil, bitsadmin, curl, or PowerShell being executed with arguments indicative of data upload over unencrypted protocols?
    context: Adversaries frequently abuse legitimate, built-in system tools (Living Off The Land Binaries, or LOLBAS) to perform malicious actions like data exfiltration. Searching for specific command-line patterns associated with data transfer functions in tools like `bitsadmin`, `certutil`, `curl`, and `PowerShell` can directly uncover exfiltration activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (e.g., domain controllers, database servers), user workstations, particularly those of privileged users, and servers in the DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process logs (EID 4688, EID 1)
          FOR command_line MATCHES REGEX 'bitsadmin /transfer|certutil -urlcache|WebClient.UploadFile|curl -T'
          ALERT on any match
  - question: Are there any processes being executed with abnormally long or high-entropy command-line arguments, suggesting obfuscation or embedded data?
    context: To hide their activity, adversaries may obfuscate scripts or embed data directly into command-line arguments. This often results in commands that are statistically unusualâ€”either much longer than normal for a given process or containing a high degree of character randomness (entropy). Baselining normal command-line characteristics and looking for outliers can reveal this type of obfuscation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (e.g., domain controllers, database servers), user workstations, particularly those of privileged users, and servers in the DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_name, CALCULATE baseline for command_line_length and command_line_entropy
          SEARCH process logs for executions where length or entropy > 3 standard deviations from mean
          ALERT on outliers
  - question: Are there anomalous parent-child process relationships, such as a non-networking tool spawning a networking utility to connect to an external destination?
    context: Legitimate software behavior typically follows predictable process execution chains. An anomaly, such as a file compression utility (`7z.exe`) spawning a command-line networking tool (`curl.exe`), can indicate a malicious workflow where data is first staged and then exfiltrated. A machine learning model can learn normal process relationships and flag these suspicious sequences.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (e.g., domain controllers, database servers), user workstations, particularly those of privileged users, and servers in the DMZ.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN sequence model on parent_process, child_process, and child_command_line features
          INPUT new process events into model
          ALERT when a non-networking process spawns a networking process with external destination
  - question: Has any user workstation initiated a single large file transfer (e.g., >100MB) over HTTP/FTP to a non-corporate IP address?
    context: While sophisticated attacks may use low-and-slow methods, some data exfiltration is blatant. A simple but effective detection method is to set a fixed threshold for outbound data transfers. A single, large connection from a standard user workstation to an unknown destination is highly suspicious and warrants investigation, especially if it bypasses known corporate file-sharing services.
    answer_sources:
      - Zeek conn.log
      - Network egress points, internal network segments containing sensitive data repositories, and Data Loss Prevention (DLP) systems at the network edge.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Zeek conn.log
          WHERE protocol IN ('http', 'ftp')
          AND source_ip is in 'user_workstation_range'
          AND destination_ip is NOT in 'corporate_ip_range'
          AND connection_bytes > 100MB
          ALERT on match
  - question: Has any host's daily outbound data volume significantly exceeded its own historical baseline or the baseline of its peer group?
    context: Every host and user group has a typical pattern of network behavior. A sudden, drastic increase in the amount of data a host sends out can be a strong indicator of exfiltration. By comparing a host's activity to its own 30-day history and to the average activity of similar hosts (its peer group), we can identify statistical outliers that represent anomalous and potentially malicious behavior.
    answer_sources:
      - Zeek conn.log
      - Network egress points, internal network segments containing sensitive data repositories, and Data Loss Prevention (DLP) systems at the network edge.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host, CALCULATE 30-day rolling baseline of outbound_bytes
          FOR each peer_group, CALCULATE baseline of outbound_bytes
          ALERT if host's daily_outbound_bytes > 99th percentile of its own baseline OR its peer group's baseline
  - question: Does a time series anomaly detection model forecast a significant deviation in a host's outbound data volume over unencrypted protocols?
    context: Time series forecasting models, such as Prophet or an LSTM autoencoder, can learn the normal rhythm of a host's network traffic, including daily and weekly patterns. These models can predict the expected range of outbound data volume for a future period. An alert is generated if the actual observed volume dramatically exceeds the model's prediction, indicating a spike that cannot be explained by normal historical patterns.
    answer_sources:
      - Zeek conn.log
      - Network egress points, internal network segments containing sensitive data repositories, and Data Loss Prevention (DLP) systems at the network edge.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host, TRAIN a time series model on historical outbound data volume
          FORECAST expected volume for the next 24 hours
          ALERT if actual_volume significantly exceeds forecasted_confidence_interval
  - question: Are files with mismatched MIME types and extensions, or HTTP POST requests containing archive file signatures, being transferred over unencrypted protocols?
    context: Adversaries may attempt to disguise exfiltrated data by giving it a benign extension (e.g., naming a ZIP file 'report.txt'). Deep packet inspection can identify these mismatches by comparing the file's actual content type (MIME type) to its extension. Similarly, scanning the content of HTTP POST requests for the magic bytes (file signatures) of archive formats can reveal hidden data uploads.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Network tap points capable of deep packet inspection (DPI), web proxies, and email gateways.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Zeek files.log WHERE mime_type is 'application/octet-stream' AND file_extension IN ('.txt', '.html')
          SEARCH Zeek http.log POST bodies for magic_bytes of ZIP, 7z, RAR
          ALERT on match
  - question: Are files being transferred with an unusually high entropy level for their declared file type (e.g., a high-entropy .txt file)?
    context: Data that is compressed or encrypted has a high degree of randomness, or entropy. A plain text file should have low entropy, while an encrypted file will have high entropy. If an adversary encrypts data and saves it with a `.txt` extension to evade detection, a statistical analysis of the file's entropy will reveal the anomaly. An entropy value greater than 7.5 for a text-based file is highly suspicious.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Network tap points capable of deep packet inspection (DPI), web proxies, and email gateways.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each file_extension, ESTABLISH baseline entropy range
          SEARCH Zeek files.log for files transferred
          ALERT if file's entropy is a significant outlier for its extension (e.g., entropy > 7.5 for a .txt file)
  - question: Can a machine learning model classify HTTP POST requests as potential exfiltration based on features of the POST body content, such as size, entropy, and character distribution?
    context: Instead of relying on specific signatures, a machine learning model can be trained to recognize the general characteristics of exfiltrated data within an HTTP POST request. By analyzing features like the size of the POST body, its entropy, and the distribution of characters (e.g., a pattern that looks like Base64 encoding), the model can classify requests as benign or suspicious with a higher degree of accuracy and adaptability.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Network tap points capable of deep packet inspection (DPI), web proxies, and email gateways.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT features from HTTP POST bodies (size, entropy, character ratios)
          INPUT features into a trained classification model
          ALERT if model classifies POST as 'potential exfiltration'
  - question: Is there a sequence of events on a host where a file archiving tool is run, immediately followed by a network connection from a non-browser process to an external IP?
    context: A common adversary pattern is to first collect and compress sensitive data into an archive (staging) and then transfer that archive to an external server. A SIEM correlation rule can detect this specific sequence by looking for a process creation event for an archiver (`7z.exe`, `rar.exe`) on a host, followed within a short time window (e.g., 10 minutes) by a network connection from an unusual process to an outside IP address.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Detection and Response (EDR) agents on hosts, Security Information and Event Management (SIEM) correlation engine, and central log aggregators for host and network data.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CREATE SIEM rule that triggers WHEN:
          (Event 1: process_create for '7z.exe' OR 'rar.exe' on host_X at time_T)
          IS FOLLOWED BY
          (Event 2: network_connect from non-browser process on host_X to external_IP within T+10min)
          ALERT on trigger
  - question: Have any rare three-event process chains (e.g., cmd.exe -> 7z.a.exe -> ftp.exe) been observed on an endpoint?
    context: While simple correlation rules are effective, adversaries may use more complex chains of execution to evade them. By profiling all sequences of events (e.g., parent process -> child process -> network connection) and calculating their frequency, we can identify statistically rare chains. A sequence that is almost never seen in normal operations is highly likely to be malicious and should be investigated.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Detection and Response (EDR) agents on hosts, Security Information and Event Management (SIEM) correlation engine, and central log aggregators for host and network data.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PROFILE frequency of all three-event sequences (Parent -> Child -> Grandchild/Network)
          CALCULATE a risk score based on the inverse frequency of each sequence
          ALERT when a sequence's risk score exceeds the 99.9th percentile
  - question: Can a graph-based anomaly detection model identify new, suspicious subgraphs representing a short path from a sensitive file to an external network destination via an archiving process?
    context: Modeling all system activity (processes, files, network connections) as a large graph allows for the discovery of complex, multi-step attack paths. A machine learning model can learn the structure of benign activity graphs. When an adversary acts, they create a new, anomalous subgraphâ€”for example, one showing a sensitive file being read by an archiving process which then connects to an external IP. Detecting these anomalous structures can reveal the entire exfiltration chain.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Detection and Response (EDR) agents on hosts, Security Information and Event Management (SIEM) correlation engine, and central log aggregators for host and network data.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL host activity as a graph (nodes=processes, files, IPs; edges=interactions)
          TRAIN model on benign graph structures
          ALERT on new subgraphs with a short path from 'sensitive_file_node' to 'external_ip_node'
  - question: Are there any DNS queries with unusually long subdomains or patterns that resemble encoded data (Base64, Hex), particularly for TXT records?
    context: Adversaries can exfiltrate data by hiding it within DNS queries, a technique known as DNS tunneling. Since DNS traffic is often permitted and less scrutinized than web traffic, it is an attractive channel. Data is encoded (e.g., in Base64) and placed in the subdomain portion of a DNS query. Searching for queries with abnormally long subdomains or content that matches encoding patterns is a direct way to detect this.
    answer_sources:
      - Zeek dns.log
      - Internal and external corporate DNS resolvers, network taps monitoring DNS traffic.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Zeek dns.log
          WHERE query_length > 100
          OR query_subdomain MATCHES REGEX for Base64/Hex
          ALERT on match, especially for TXT record types
  - question: Is any host exhibiting a statistically significant anomaly in its DNS traffic, such as an abnormally high query volume, an unusual ratio of TXT to A queries, or high-entropy subdomains?
    context: DNS tunneling often produces statistical anomalies in a host's DNS traffic. This can include a massive increase in the number of DNS queries per hour, a change in the typical ratio of query types (e.g., many more TXT queries than usual), or subdomains that appear random (high entropy). By baselining normal DNS behavior for each host, these statistical deviations can be flagged as potential tunneling.
    answer_sources:
      - Zeek dns.log
      - Internal and external corporate DNS resolvers, network taps monitoring DNS traffic.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host, CALCULATE baseline for dns_queries_per_hour, query_type_ratio, and subdomain_entropy
          ALERT if host exceeds 99th percentile for query volume
          OR if TXT:A ratio is a statistical outlier
          OR if subdomain entropy > 4.5
  - question: Can a machine learning classifier identify DNS tunneling based on features like query length, subdomain entropy, and historical query counts for the parent domain?
    context: A machine learning model can be specifically trained to distinguish between legitimate DNS traffic and DNS tunneling. By using a combination of featuresâ€”such as the length and entropy of the query, the number of numerical characters, the query type (A, TXT, etc.), and the historical popularity of the domain being queriedâ€”the model can learn to accurately classify suspicious queries, providing a more robust detection capability than rules or simple statistics alone.
    answer_sources:
      - Zeek dns.log
      - Internal and external corporate DNS resolvers, network taps monitoring DNS traffic.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT features from Zeek dns.log (query length, subdomain entropy, query type, etc.)
          INPUT features into a trained classification model
          ALERT if model classifies query as 'tunneling' with high confidence