name: T1546.013: PowerShell Profile
id: 5b1a6c4d-9e1f-4b7c-8d3a-2f9e1c7b0a5e
description: This playbook helps determine if an adversary is maintaining persistence or escalating privileges using PowerShell profiles. It focuses on identifying malicious content within profile scripts (via hashes, signatures, or obfuscation), recognizing structural patterns used for persistence (like download cradles or encoded commands), detecting anomalous creation or modification of profile files (by unusual processes or at an unusual frequency), and flagging suspicious network activity originating from PowerShell processes that have loaded a profile. Additionally, it looks for signs of privilege escalation, such as the use of known tools in high-privilege sessions, suspicious sequences of commands (e.g., reflective loading followed by LSASS access), unauthorized modification of privileged profiles by lower-privileged users, and the creation of new users or tasks immediately following a profile script execution.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Do any PowerShell profile scripts match known malicious file hashes or contain content matching malicious signatures?
  context: Adversaries often reuse malware or hacking tools. This question uses symbolic logic to check if a PowerShell profile script's hash is on a known-bad watchlist or if its content matches YARA rules designed to detect malicious functions, commands, or strings (e.g., 'Invoke-Mimikatz', 'DownloadString'). A positive match is a high-fidelity indicator of compromise.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - File systems on endpoints and servers, specifically standard PowerShell profile paths ($PsHome\Profile.ps1, $Home\Documents\PowerShell\Profile.ps1, etc.), and PowerShell script block logs from these systems.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: SEARCH file_creation_events (Sysmon 11) in profile_paths WHERE file_hash IN malicious_hash_list OR SEARCH powershell_script_block_logs (WEF 4104) WHERE script_content MATCHES yara_rule_for_malicious_content
- question: Are there any PowerShell profile scripts exhibiting high entropy indicative of obfuscation or encryption?
  context: To evade signature-based detection, adversaries often obfuscate or encrypt the payloads within PowerShell profile scripts. This question uses statistical analysis to calculate the Shannon entropy of script blocks. By establishing a baseline for normal scripts, it flags any profile script with an abnormally high entropy score, which suggests it may be packed, encrypted, or heavily obfuscated to hide its true purpose.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - File systems on endpoints and servers, specifically standard PowerShell profile paths ($PsHome\Profile.ps1, $Home\Documents\PowerShell\Profile.ps1, etc.), and PowerShell script block logs from these systems.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'CALCULATE shannon_entropy for each script_block (WEF 4104) from powershell_profile_process (WEF 4688). ALERT if entropy > baseline_mean + (3 * standard_deviation)'
- question: Has a machine learning model classified any PowerShell profile scripts as malicious?
  context: This question leverages a supervised machine learning model (e.g., Gradient Boosting) trained to distinguish between benign and malicious PowerShell scripts. The model analyzes features like character frequency, specific keyword presence ('IEX', 'FromBase64String'), and entropy. It provides a probabilistic score, allowing for the detection of novel or complex malicious scripts that might evade simpler detection methods.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - File systems on endpoints and servers, specifically standard PowerShell profile paths ($PsHome\Profile.ps1, $Home\Documents\PowerShell\Profile.ps1, etc.), and PowerShell script block logs from these systems.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each script_block (WEF 4104) from a profile: EXTRACT features (entropy, keywords, etc.). SCORE with trained_classification_model. ALERT if score > confidence_threshold'
- question: Do any PowerShell profile scripts contain common persistence patterns like download cradles or encoded commands?
  context: Adversaries use specific script structures to maintain persistence, such as code to download and execute payloads from the internet or Base64 encoded commands. This question uses symbolic logic with regular expressions to search PowerShell script logs for these known bad patterns (e.g., `Net.WebClient`, `[Convert]::FromBase64String`). It also correlates profile execution with the immediate creation of scheduled tasks or WMI events.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4698
  - Windows Event ID 5861
  - Windows Event ID 4688
  - PowerShell execution logs and Windows Security/System event logs on endpoints and servers, focusing on administrative and interactive user sessions.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: SEARCH powershell_script_block_logs (WEF 4104) WHERE content MATCHES regex_for_persistence_patterns. CORRELATE with task_creation (WEF 4698) or wmi_subscription (WEF 5861) by same_process_id
- question: Is there an anomalous frequency of sensitive cmdlets being used in PowerShell profile scripts?
  context: While some sensitive cmdlets (`IEX`, `Invoke-Expression`) can be used legitimately, their frequent appearance in profile scripts is suspicious. This question uses statistical analysis to baseline the normal frequency of such cmdlets for different user groups (e.g., admins vs. developers). An alert is triggered if a user's profile script suddenly uses these cmdlets far more often than their group's established baseline.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4698
  - Windows Event ID 5861
  - Windows Event ID 4688
  - PowerShell execution logs and Windows Security/System event logs on endpoints and servers, focusing on administrative and interactive user sessions.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each user_group: BASELINE frequency of sensitive_cmdlets in profile_scripts (WEF 4104). ALERT if latest_script_cmdlet_count > baseline_mean + (2 * standard_deviation)'
- question: Has an anomaly detection model identified any PowerShell profile scripts as structurally or semantically unusual?
  context: Adversaries may write persistence scripts that are functionally malicious but do not contain specific known-bad strings. This question applies a Natural Language Processing (NLP) approach, using a model like TF-IDF to vectorize script content and an anomaly detection model (e.g., One-Class SVM) to find scripts that are outliers compared to a corpus of known-good profiles. This helps find novel or unique malicious scripts.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4698
  - Windows Event ID 5861
  - Windows Event ID 4688
  - PowerShell execution logs and Windows Security/System event logs on endpoints and servers, focusing on administrative and interactive user sessions.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each new profile_script (WEF 4104): TOKENIZE and VECTORIZE script_content. SCORE with trained_anomaly_detection_model. ALERT if flagged as outlier'
- question: Has a PowerShell profile file been created or modified by an unauthorized parent process?
  context: PowerShell profiles should typically only be modified by a small set of expected applications (e.g., code editors, PowerShell itself). This question uses symbolic logic to define an allowlist of legitimate parent processes. It generates an alert if a profile file is written to by an unexpected process, such as `winword.exe` or `mshta.exe`, which could indicate a malicious document or script is establishing persistence.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - File system audit logs on domain controllers, servers, and endpoints where PowerShell profiles are stored, including roaming profile shares.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'SEARCH file_write_events (WEF 4663) to "profile.ps1". CORRELATE with parent_process_name (Sysmon 1). ALERT if parent_process_name NOT IN [powershell.exe, code.exe, ...]'
- question: Have any PowerShell profile files been modified with a frequency that deviates from the established baseline?
  context: Legitimate modifications to PowerShell profiles are typically infrequent. A sudden burst of changes could indicate an adversary attempting to establish or modify a persistence mechanism. This question uses statistical analysis to baseline the normal frequency of profile modifications for each user/host and alerts when the number of modifications in a short period significantly exceeds that baseline.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - File system audit logs on domain controllers, servers, and endpoints where PowerShell profiles are stored, including roaming profile shares.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each user/host: BASELINE modification_frequency of profile.ps1. ALERT if modification_count_in_24h > baseline_mean + (3 * standard_deviation)'
- question: Does a time-series model forecast an anomalous number of PowerShell profile modifications?
  context: This question uses a more advanced machine learning approach to detect unusual modification activity across the enterprise. A time-series model (e.g., ARIMA) is trained on historical data to forecast the expected number of profile modifications per day. An alert is triggered if the actual number of modifications significantly deviates from the forecasted range, indicating a widespread or coordinated event.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - File system audit logs on domain controllers, servers, and endpoints where PowerShell profiles are stored, including roaming profile shares.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'MODEL historical profile_modifications with time_series_model. FORECAST expected_modifications for today. ALERT if actual_modifications outside confidence_interval'
- question: Is a PowerShell process that loaded a profile making network connections to known malicious domains or IPs?
  context: A common action for a malicious profile script is to establish a command and control (C2) channel. This question uses symbolic logic to correlate PowerShell processes (that did not use the '-NoProfile' switch) with their outbound network connections. It then checks the destination IP or domain against threat intelligence feeds and alerts on any match to a known malicious entity.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Network traffic logs at the egress point (e.g., firewall, Zeek sensor), DNS server logs, and process/network logs on endpoints and servers.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'JOIN powershell.exe process_events (WEF 4688, command_line NOT LIKE "%-NoProfile%") with network_connections (Zeek conn.log) by source_ip. ALERT if destination_ip OR destination_domain IN threat_intel_list'
- question: Is a PowerShell process that loaded a profile making network connections to rare domains or transferring anomalous amounts of data?
  context: Malicious C2 traffic often stands out from normal network behavior. This question uses statistical analysis to baseline normal PowerShell network activity for each user, including common destination domains and typical data transfer sizes. It alerts when PowerShell connects to a domain that is rare across the enterprise or when a connection transfers an amount of data that is a significant outlier for that user.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Network traffic logs at the egress point (e.g., firewall, Zeek sensor), DNS server logs, and process/network logs on endpoints and servers.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR powershell_network_connections: ALERT if destination_domain_prevalence < 5 hosts OR data_transferred > user_baseline_99th_percentile'
- question: Has a machine learning model identified any PowerShell-initiated network connections as outliers?
  context: This question uses an unsupervised machine learning model (e.g., DBSCAN) to cluster normal PowerShell network connections based on features like destination port, protocol, and data volume. Any new connection that does not fit into an established cluster of normal behavior is flagged as an anomaly. This is effective for detecting novel C2 channels that don't rely on known malicious indicators.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Network traffic logs at the egress point (e.g., firewall, Zeek sensor), DNS server logs, and process/network logs on endpoints and servers.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'CLUSTER historical powershell_connections using DBSCAN. FOR new_connection: SCORE against clusters. ALERT if classified as noise/outlier'
- question: Do any PowerShell profile scripts running in high-privilege sessions contain signatures of known privilege escalation tools?
  context: Adversaries may use PowerShell profiles to execute privilege escalation tools like PowerSploit. This question uses symbolic logic to first identify PowerShell sessions running with high privilege (e.g., as Administrator or SYSTEM) and then scans the executed script blocks from those sessions with YARA rules designed to detect known privilege escalation toolkits or token manipulation functions.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Windows Event ID 4624
  - PowerShell and security logs on Domain Controllers, Administrative Servers, and Privileged Access Workstations, specifically targeting sessions with elevated tokens.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'IDENTIFY high_privilege_powershell_sessions (WEF 4688 + WEF 4624). SEARCH associated script_blocks (WEF 4104) WHERE content MATCHES yara_rule_for_privesc_tools'
- question: Are rare or sensitive commands appearing in high-privilege PowerShell profile scripts?
  context: Certain PowerShell commands are uncommon in typical administrative scripts but are frequently used in privilege escalation exploits. This question uses statistical analysis (TF-IDF) to identify commands that are rare across all profile scripts in the environment but appear in a specific high-privilege profile. A high score for a sensitive command (e.g., `Add-Type`) in this context is a strong indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Windows Event ID 4624
  - PowerShell and security logs on Domain Controllers, Administrative Servers, and Privileged Access Workstations, specifically targeting sessions with elevated tokens.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'CALCULATE TF-IDF scores for all cmdlets in high_privilege_profile_scripts. ALERT on scripts containing cmdlets with anomalously high TF-IDF scores'
- question: Has a machine learning model predicted a high probability of privilege escalation for a high-privilege profile script?
  context: This question uses a supervised machine learning model (logistic regression) to assess the likelihood that a script is attempting privilege escalation. The model is trained on features indicative of such attempts, like the use of reflection APIs or P/Invoke signatures. It provides a probability score, allowing for the detection of suspicious scripts even if they don't match exact signatures.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Windows Event ID 4624
  - PowerShell and security logs on Domain Controllers, Administrative Servers, and Privileged Access Workstations, specifically targeting sessions with elevated tokens.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each high_privilege_script_block: EXTRACT features (reflection_apis, p_invoke). SCORE with trained_privesc_model. ALERT if probability > 0.90'
- question: Is there a sequence of events indicating privilege escalation, such as reflective DLL loading followed by service creation or LSASS access from a profile script?
  context: Privilege escalation attacks often follow a specific sequence of actions. This question uses a symbolic correlation rule to detect this pattern: a high-privilege PowerShell process executes a script containing reflective loading, and this is immediately followed by the same process creating a new service or accessing the memory of the LSASS process. This chained behavior is a strong signal of an attack.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Sysmon Event ID 10
  - System, Security, and Sysmon event logs on Domain Controllers, Administrative Servers, and Privileged Access Workstations.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: ALERT if high_privilege_powershell_process (WEF 4688) executes script with reflection (WEF 4104) AND within 5 mins, same_process_id creates_service (WEF 7045) OR accesses_lsass (Sysmon 10)
- question: Has an unusual or low-probability sequence of commands been observed in a privileged PowerShell profile script?
  context: Benign administrative scripts tend to have predictable workflows and command sequences. This question uses statistical modeling (Markov chains) to learn the normal transition probabilities between commands in privileged scripts. It then flags any observed sequence of commands that has a very low probability of occurring based on the model, indicating a novel and potentially malicious workflow.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Sysmon Event ID 10
  - System, Security, and Sysmon event logs on Domain Controllers, Administrative Servers, and Privileged Access Workstations.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'MODEL benign_command_sequences with Markov_chain. FOR new_privileged_script: CALCULATE sequence_probability. ALERT if probability < low_threshold'
- question: Has a sequence-aware machine learning model classified a privileged profile script's command sequence as malicious?
  context: This question uses advanced machine learning models (like RNN or LSTM) that are specifically designed to understand sequences. The model is trained on sequences of commands from both benign and malicious scripts. It can recognize complex, multi-step attack patterns within a privileged profile script that might be missed by analyzing individual commands alone.
  answer_sources:
  - Windows Event ID 4104
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Sysmon Event ID 10
  - System, Security, and Sysmon event logs on Domain Controllers, Administrative Servers, and Privileged Access Workstations.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'TOKENIZE command_sequence from privileged_script (WEF 4104). CLASSIFY sequence with trained_RNN_model. ALERT if classified as malicious'
- question: Was the execution of a privileged PowerShell profile script immediately followed by the creation of a new user, modification of a privileged group, or creation of a SYSTEM-level scheduled task?
  context: A key goal of privilege escalation is to create a new access path. This question uses a time-based correlation rule to detect when the execution of a privileged profile script is immediately followed by a sensitive action like creating a new user, adding a user to a domain admin group, or creating a new scheduled task that runs as SYSTEM. This temporal link strongly suggests the profile script was responsible for the action.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Windows Event ID 4720
  - Windows Event ID 4732
  - Windows Event ID 4698
  - Security and System event logs on Domain Controllers and other administrative servers where user and group management occurs.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: ALERT if privileged_profile_execution (WEF 4688/4104) is followed within 60 seconds by user_creation (WEF 4720), privileged_group_modification (WEF 4732), or system_task_creation (WEF 4698) by same_user
- question: For a privileged account, does the distribution of actions following a profile script execution deviate from the norm?
  context: Privileged accounts often run automated scripts with predictable outcomes. This question uses statistical analysis (chi-squared test) to compare the observed set of follow-on actions (e.g., user creations, group modifications) after a profile script runs against the account's historical baseline. A significant statistical deviation suggests the script performed unexpected and potentially unauthorized actions.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Windows Event ID 4720
  - Windows Event ID 4732
  - Windows Event ID 4698
  - Security and System event logs on Domain Controllers and other administrative servers where user and group management occurs.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each privileged_account: BASELINE distribution of follow-on_actions. AFTER new_profile_execution: COMPARE observed_action_distribution to baseline with chi_squared_test. ALERT if p_value is significant'
- question: Has a machine learning model predicted that a profile script execution would be followed by a sensitive system change?
  context: This question uses a multi-label classification model to predict the likely outcomes of a profile script's execution based on its content (e.g., keywords, entropy). The model can predict if the script is likely to lead to a user creation, group modification, etc. An alert is generated if the model predicts a sensitive outcome that is not part of the user's normal, expected behavior.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Windows Event ID 4720
  - Windows Event ID 4732
  - Windows Event ID 4698
  - Security and System event logs on Domain Controllers and other administrative servers where user and group management occurs.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'FOR each profile_script: EXTRACT features. PREDICT follow-on_actions with multi_label_model. ALERT if predicted_actions include sensitive events'
- question: Was a privileged PowerShell profile modified by a low-privilege user and then subsequently executed by the privileged account?
  context: This is a classic privilege escalation technique where an attacker with low-level access modifies a script that they know will be run by a high-privilege account. This question uses a two-stage symbolic rule to detect this specific attack chain: it first flags when a privileged profile is written to by a non-privileged user, and then escalates the alert if that privileged account logs in and runs PowerShell within a set time window.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 11
  - File system audit logs on Domain Controllers, Administrative Servers, and File Servers hosting roaming profiles.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: STAGE 1: ALERT LOW on file_write (WEF 4663) to privileged_profile_path by non_privileged_user. STAGE 2: ESCALATE to HIGH if privileged_user logs on (WEF 4624) and runs powershell.exe (WEF 4688) within 24 hours
- question: Has a privileged PowerShell profile been modified by a rare or first-seen parent process?
  context: Modifications to critical, privileged profiles should only come from a very limited set of trusted processes. This question uses statistical analysis to baseline the legitimate parent processes that modify these files. It alerts if a modification is initiated by a parent process that is very infrequent or has never been seen before, as this is highly anomalous and suspicious.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 11
  - File system audit logs on Domain Controllers, Administrative Servers, and File Servers hosting roaming profiles.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'BASELINE parent_process frequency for privileged_profile modifications. ALERT if modifying parent_process is rare or first-seen'
- question: Has a graph-based machine learning model detected an anomalous attack chain involving the modification and execution of a privileged profile?
  context: This question models system activity as a graph of interconnected users, processes, and files. A graph-based anomaly detection model is trained on this data to learn normal patterns of interaction. An attack chain where a low-privilege user's process writes to a privileged profile, which is then executed by the high-privilege user, forms an anomalous structure (subgraph) that the model can identify and flag.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 11
  - File system audit logs on Domain Controllers, Administrative Servers, and File Servers hosting roaming profiles.
  range: last 90 days
  queries:
  - tech: pseudocode
    query: 'MODEL system_activity as a graph. FOR new_activity: CHECK for anomalous subgraphs matching the low-priv_write -> high-priv_exec pattern using a trained_graph_model'