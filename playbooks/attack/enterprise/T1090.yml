name: T1090: Proxy
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary is using proxy techniques for command and control (C2) communications. This involves detecting outbound connections to known proxy or C2 infrastructure, identifying the execution of proxy tools on endpoints, spotting network connections from unauthorized applications, finding protocol mismatches on standard ports, analyzing traffic for anomalous characteristics like C2 heartbeating, and uncovering domain fronting within TLS traffic.
type: technique
related:
  - TA0011: Command And Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there outbound network connections to IPs or domains categorized as proxies, Tor nodes, C2 servers, or unsanctioned VPNs based on threat intelligence?
    context: This question aims to identify direct connections to known malicious or high-risk infrastructure. Adversaries often use these services to obscure their true location and blend C2 traffic with legitimate internet traffic. Matching network logs against a curated threat intelligence feed is a high-fidelity method for detecting these C2 communication channels.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Internet Gateway
      - Corporate DNS Resolvers
      - Web Proxy Logs
    range: last 90 days
    queries:
      - symbolic: "SEARCH Zeek dns.log and conn.log | JOIN on UID | WHERE conn.log.destination_ip OR dns.log.query IN threat_intel_feed (category='Proxy', 'Tor', 'C2', 'VPN')"
  - question: Are internal hosts connecting to rare or unique external domains that are not on an established allowlist?
    context: Adversary C2 domains are often unique to a specific campaign or victim and are not widely visited by others in the organization. This statistical approach helps uncover these 'long tail' domains by identifying those with very low query frequency and a small number of internal clients. It's an effective way to find newly established C2 channels that are not yet present in threat intelligence feeds.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Internet Gateway
      - Corporate DNS Resolvers
      - Web Proxy Logs
    range: last 90 days
    queries:
      - statistical: "SEARCH Zeek dns.log | STATS query_count, distinct_client_count by domain over 30d | WHERE query_count < 5th_percentile AND distinct_client_count < 5th_percentile AND domain NOT IN allowlist"
  - question: Can we proactively identify malicious domains being resolved by internal hosts using a machine learning model?
    context: This question leverages machine learning to detect algorithmically generated domains (DGAs) or other malicious domains based on their structural and lexical features. By training a model on features like domain length, entropy, and TLD, it's possible to score and flag suspicious domains in real-time, even if they have never been seen before, providing a predictive capability against emerging threats.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Internet Gateway
      - Corporate DNS Resolvers
      - Web Proxy Logs
    range: last 90 days
    queries:
      - machine_learning: "INPUT Zeek dns.log | EXTRACT features (length, entropy, TLD, etc.) from new_domains | APPLY ML_model (domain_classifier) | ALERT where prediction_score > 0.9"
  - question: Are known proxy tools being executed, or are processes being run with command-line arguments indicative of proxying or tunneling?
    context: Adversaries deploy legitimate or custom proxy tools to create tunnels for C2 traffic. This question looks for the direct evidence of these tools being run by searching for specific process names (e.g., plink.exe, ngrok.exe) or common command-line flags used to establish tunnels (e.g., -R, -L, reverse), which is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Application Servers
      - Domain Controllers (for centralized logging)
    range: last 90 days
    queries:
      - symbolic: "SEARCH process_creation_events | WHERE process_name IN (proxy_tool_list) OR command_line MATCHES ('-R:', '-L:', 'tunnel')"
  - question: Are there any command lines being executed that are extremely rare across the enterprise and contain numeric arguments that could be ports or IPs?
    context: This question helps find custom or obfuscated proxy tools not caught by name-based searches. Adversary command-line usage is often unique and has a very low prevalence across an organization. By flagging rare commands, especially those containing numbers that could be IP addresses or port numbers, analysts can uncover novel or bespoke adversary tools.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Application Servers
      - Domain Controllers (for centralized logging)
    range: last 90 days
    queries:
      - statistical: "SEARCH process_creation_events | STATS prevalence by command_line | WHERE prevalence < 0.1% AND command_line CONTAINS numeric_arguments"
  - question: Are there any anomalous command-line executions detected by an unsupervised model that deviate from the established baseline of normal activity?
    context: Many legitimate administrative commands can appear suspicious. This question uses machine learning to build a baseline of normal command-line activity and then flags significant deviations. This helps to reduce false positives from statistical methods and can identify sophisticated adversaries who try to blend in by slightly modifying legitimate commands.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Application Servers
      - Domain Controllers (for centralized logging)
    range: last 90 days
    queries:
      - machine_learning: "INPUT process_creation_events | VECTORIZE command_line | APPLY ML_model (anomaly_detector) | ALERT on high anomaly_score"
  - question: Is an unauthorized process (one not on the network-access allowlist) making an outbound network connection?
    context: In a well-managed environment, only a predictable set of applications should be making outbound network connections. This question establishes an allowlist of approved network-aware applications and alerts when any other process, such as one dropped by an adversary, attempts to connect to the internet. This is a powerful policy-based detection method.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Detection and Response (EDR) Systems
      - Critical Servers
      - User Workstations
    range: last 90 days
    queries:
      - symbolic: "SEARCH network_connection_events | WHERE process_path NOT IN (network_app_allowlist) AND destination_ip is_external"
  - question: Is a process initiating a network connection from an unusual context (e.g., rare parent process, user, or path) compared to its historical baseline?
    context: Adversaries often execute legitimate system processes (like svchost.exe) from unusual locations or under different parent processes to masquerade their activity. This question establishes a baseline of normal execution context (parent, path, user) for each process and flags network connections from processes that deviate from this norm, indicating potential hijacking or masquerading.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Detection and Response (EDR) Systems
      - Critical Servers
      - User Workstations
    range: last 90 days
    queries:
      - statistical: "SEARCH network_connection_events | LOOKUP historical_process_context | CALCULATE rarity_score | ALERT where rarity_score > 99th_percentile"
  - question: Can a one-class SVM model detect anomalous process-network behavior based on a combination of features like process path, user context, and destination IP?
    context: This approach models the complex boundary of 'normal' behavior by combining multiple features of a network connection and its source process. A one-class SVM can learn this boundary and effectively identify novel outliers that represent suspicious activity, even if no single feature is obviously malicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Detection and Response (EDR) Systems
      - Critical Servers
      - User Workstations
    range: last 90 days
    queries:
      - machine_learning: "INPUT network_and_process_events | EXTRACT features (path_entropy, user, dest_ip_rep) | APPLY ML_model (one_class_svm) | ALERT on outliers"
  - question: Is there traffic on standard ports (53, 80, 443) that doesn't match the expected protocol, or are there Zeek 'weird' notices for protocol violations?
    context: Adversaries tunnel C2 traffic over common ports like 53 (DNS), 80 (HTTP), or 443 (HTTPS) to bypass firewall egress rules. This question uses protocol-aware sensors like Zeek to identify when the traffic on a port is not what it claims to be (e.g., SSH over port 53), which is a strong indicator of a C2 tunnel.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Taps/Spanning Ports feeding Zeek sensors
      - Internet Gateway
      - DMZ Network Segment
    range: last 90 days
    queries:
      - symbolic: "SEARCH Zeek logs | WHERE (port=53 AND service!='dns') OR (port=443 AND service!='ssl') OR (weird_log.name='non_dns_traffic_on_dns_port')"
  - question: Are there any connections on standard web or DNS ports with unusually high payload entropy, suggesting encrypted C2 traffic disguised as normal plaintext protocols?
    context: Protocols like DNS and HTTP are typically plaintext and have low entropy. Encrypted or packed C2 traffic, even when sent over these ports, will have high entropy. This question measures the entropy of traffic on these ports and flags connections that are statistical outliers, suggesting they are carrying unexpected encrypted data.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Taps/Spanning Ports feeding Zeek sensors
      - Internet Gateway
      - DMZ Network Segment
    range: last 90 days
    queries:
      - statistical: "SEARCH conn.log on ports (53, 80) | CALCULATE payload_entropy | COMPARE to historical_baseline_for_port | ALERT when entropy is > 3_std_dev from mean"
  - question: Can a machine learning classifier, trained on port-agnostic features, detect when the actual protocol of a connection does not match the protocol expected for its destination port?
    context: This question uses a machine learning model to identify a connection's protocol based on its characteristics (packet size, timing, etc.) irrespective of the port used. By comparing the model's prediction to the port's standard protocol, it can reliably detect tunneling even for protocols not explicitly covered by symbolic rules.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Taps/Spanning Ports feeding Zeek sensors
      - Internet Gateway
      - DMZ Network Segment
    range: last 90 days
    queries:
      - machine_learning: "INPUT conn.log | EXTRACT port-agnostic_features | APPLY ML_model (protocol_classifier) | ALERT where predicted_protocol != expected_protocol_for_port"
  - question: Are there any very long-duration TCP connections with low, periodic data transfers ('heartbeats') that are not associated with known-good services?
    context: C2 channels often manifest as long-lived connections where the compromised host sends small, regular 'beacons' or 'heartbeats' to the C2 server. This question specifically looks for this pattern (long duration, low traffic volume, keep-alive indicators) while excluding legitimate services, allowing analysts to pinpoint these C2 channels.
    answer_sources:
      - Zeek conn.log
      - Network Egress/Internet Gateway
      - Internal Network Core Switches
      - Server-to-Server Traffic Segments
    range: last 90 days
    queries:
      - symbolic: "SEARCH conn.log | WHERE duration > 12h AND total_bytes < 10MB AND history CONTAINS '^' AND destination NOT IN (known_good_services)"
  - question: Are there any connections from an internal host where the ratio of uploaded to downloaded data is a significant statistical outlier compared to that host's historical behavior?
    context: Normal user traffic (like web browsing) typically involves downloading more data than uploading. Adversary activity, such as data exfiltration, can reverse this pattern. This question baselines the upload/download ratio for each host and alerts on significant deviations, which can indicate C2 activity or data staging.
    answer_sources:
      - Zeek conn.log
      - Network Egress/Internet Gateway
      - Internal Network Core Switches
      - Server-to-Server Traffic Segments
    range: last 90 days
    queries:
      - statistical: "SEARCH conn.log | CALCULATE ratio = sent_bytes / received_bytes | COMPARE to 7-day_baseline for source_ip | ALERT when ratio is > 3_std_dev from mean"
  - question: Can a clustering algorithm like DBSCAN identify small, outlier clusters of network traffic with characteristics that are distinct from the large clusters of normal user activity?
    context: This question applies unsupervised machine learning to group all network connections by their characteristics (duration, byte counts, etc.). Normal traffic (web, email) will form large, dense clusters. C2 traffic, with its unique patterns, will often form small, distinct outlier clusters that can be flagged for an analyst to investigate.
    answer_sources:
      - Zeek conn.log
      - Network Egress/Internet Gateway
      - Internal Network Core Switches
      - Server-to-Server Traffic Segments
    range: last 90 days
    queries:
      - machine_learning: "INPUT conn.log | EXTRACT features (log(duration), log(bytes), ratio) | APPLY ML_model (DBSCAN) | INVESTIGATE small outlier clusters"
  - question: Are there any TLS connections where the unencrypted SNI (a CDN domain) differs from the encrypted HTTP Host header for the same connection?
    context: Domain fronting is a technique to hide the true destination of C2 traffic. An adversary establishes a connection to a legitimate, high-reputation domain (like a CDN) but includes a different, malicious domain in the encrypted portion of the request. This question directly looks for the mismatch between the unencrypted and encrypted destination, which is the primary indicator of domain fronting.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - Zeek dns.log
      - Web Proxies
      - Network Taps monitoring traffic to CDNs
      - Internet Gateway
    range: last 90 days
    queries:
      - symbolic: "SEARCH ssl.log and http.log | JOIN on UID | WHERE ssl.server_name != http.host AND ssl.server_name IN (cdn_domain_list)"
  - question: In connections identified as domain fronting, is the inner HTTP Host header a domain that is extremely rare or has never been seen before for that specific CDN?
    context: While some legitimate services might cause SNI/Host mismatches, adversary-controlled domains used inside a fronted connection are typically not seen in any other context. This question helps prioritize domain fronting alerts by flagging those where the hidden destination is statistically rare or has never been seen before, making it much more likely to be malicious.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - Zeek dns.log
      - Web Proxies
      - Network Taps monitoring traffic to CDNs
      - Internet Gateway
    range: last 90 days
    queries:
      - statistical: "SEARCH domain_fronting_events | LOOKUP prevalence of http.host for the given ssl.server_name | ALERT when prevalence < 1st_percentile or is_new"
  - question: For detected domain fronting events, does a machine learning model classify the inner, hidden HTTP Host domain as malicious with high confidence?
    context: This question provides a final, high-confidence verdict on a potential domain fronting event. Once a fronted connection is detected, the hidden inner domain is passed to a model trained to recognize malicious domain characteristics (like DGA patterns). A high-confidence alert from this model significantly increases the likelihood that the event is truly malicious C2 activity.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - Zeek dns.log
      - Web Proxies
      - Network Taps monitoring traffic to CDNs
      - Internet Gateway
    range: last 90 days
    queries:
      - machine_learning: "INPUT domain_fronting_events | EXTRACT inner_domain=http.host | APPLY ML_model (domain_classifier) | ELEVATE_ALERT where prediction_score > 0.9"