name: T1583.005: Botnet
id: 9c8b7a6d-5e4f-4d3c-2b1a-0987654321fe
description: This playbook helps determine if an adversary is leveraging botnet infrastructure. This involves detecting outbound connections to known botnet C2 infrastructure, identifying malicious artifacts like blacklisted User-Agents or rare JA3 hashes, spotting signs of DDoS attacks from anomalous inbound traffic, recognizing compromised internal bots through outbound scanning or DGA activity, and identifying automated C2 beaconing through periodic, low-jitter connections.
type: technique
related: TA0042: Resource Development
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts communicating with known botnet command and control (C2) infrastructure?
    context: This question seeks to identify direct connections or DNS lookups to IPs and domains that are on a high-confidence threat intelligence list of known botnet C2 servers. A match provides a strong indication of a compromised host attempting to communicate with its operator.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateways, DNS resolvers, web proxies, and perimeter firewalls.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN network_logs (conn, dns) WITH threat_intel_feed (botnet_c2). ALERT on match.
  - question: Are any internal hosts accumulating a high risk score by connecting to IPs with a low-confidence reputation for botnet activity?
    context: This question identifies hosts that may be communicating with emerging or less-known botnet infrastructure not yet present on high-confidence blocklists. By tracking a cumulative risk score based on lower-confidence intelligence and comparing it against a baseline of all hosts, we can spot outliers that warrant investigation before the threat is widely recognized.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateways, DNS resolvers, web proxies, and perimeter firewalls.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, CALCULATE risk_score from connections to low_rep_ips. IF host_score > 95th_percentile_of_all_hosts, ALERT.
  - question: Can we proactively predict if a connection is being made to a previously unseen botnet C2 server using machine learning?
    context: This question uses a machine learning classifier to assess the probability that a new IP or domain is malicious based on its characteristics (like ASN, country, domain age). This allows for the detection of novel botnet infrastructure by flagging outbound connections that have a high probability of being malicious, even without prior threat intelligence.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateways, DNS resolvers, web proxies, and perimeter firewalls.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new outbound_connection, PREDICT is_botnet_probability using ML_model. IF probability > 0.90, ALERT.
  - question: Are any outbound connections using network artifacts (User-Agent, JA3/JA3S, JARM) that are known indicators of specific botnet families?
    context: This question checks for the presence of specific, hard-coded indicators like User-Agent strings or TLS fingerprints (JA3/JA3S, JARM) that are unique to known botnet malware. A match provides a high-confidence signal that a specific botnet family (e.g., Qakbot, Emotet) is active on the network.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, web proxies, SSL/TLS inspection appliances.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH http_logs and ssl_logs FOR user_agent, ja3, jarm IN botnet_watchlist. ALERT on match.
  - question: Are any internal hosts using exceptionally rare User-Agents or JA3 TLS fingerprints in their outbound connections?
    context: This question identifies anomalous behavior by finding hosts that use client-side tooling (as represented by User-Agents and JA3 hashes) that is extremely uncommon across the enterprise. Malware often uses custom or non-standard clients, which would appear as rare artifacts. Flagging these outliers can uncover potentially malicious software.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, web proxies, SSL/TLS inspection appliances.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE prevalence of all user_agents and ja3_hashes over 30 days. IF connection_artifact_prevalence < 1%, ALERT.
  - question: Are there any outbound HTTP/TLS connections that are statistical outliers compared to baseline traffic patterns?
    context: This question applies unsupervised machine learning to detect anomalous connections based on a combination of features (e.g., JA3, JARM, certificate details, URI length). This approach can identify novel or evasive malware that does not match known signatures but deviates significantly from established normal behavior.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, web proxies, SSL/TLS inspection appliances.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features from http/ssl logs. USE anomaly_detection_model (Isolation Forest) to find outliers. FLAG outliers for review.
  - question: Is any internal service experiencing a high rate of failed or rejected connection attempts from a large number of distinct sources?
    context: This question aims to detect the initial signs of a SYN flood or other volumetric DDoS attack by monitoring for a massive spike in incomplete or rejected connections. Using a static threshold provides a simple, direct method for identifying a flood that exceeds a predefined 'unacceptable' level.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Perimeter firewalls, internet-facing application servers, public DNS servers, VPN concentrators.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: COUNT distinct source IPs with connection_state 'S0' or 'REJ' per minute. IF count > 10000, ALERT.
  - question: Has the diversity of source IPs connecting to an internal service suddenly and significantly increased beyond its normal baseline?
    context: This question seeks to identify a DDoS attack by measuring the randomness (entropy) of the source IP addresses. A legitimate traffic spike might come from a limited set of IPs, while a DDoS attack involves a vast, distributed set of sources, leading to a sharp increase in entropy. Comparing this to a historical baseline allows for adaptive detection of anomalous source diversity.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Perimeter firewalls, internet-facing application servers, public DNS servers, VPN concentrators.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE entropy of source_ips in 5-min windows. ESTABLISH rolling 24-hr baseline. IF current_entropy > (baseline_mean + 3 * baseline_stddev), ALERT.
  - question: Are the current inbound connection volume and unique source IP count for a critical service significantly higher than what a time-series model predicted?
    context: This question uses a forecasting model to predict what 'normal' traffic volume and source IP counts should look like at any given time. An alert is generated when the actual observed traffic massively exceeds the predicted range, indicating a volumetric anomaly that is characteristic of a DDoS attack. This method is effective at spotting attacks that might otherwise be lost in natural traffic fluctuations.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Perimeter firewalls, internet-facing application servers, public DNS servers, VPN concentrators.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FORECAST expected_connection_count and unique_source_ips using time-series_model. IF observed_values >> forecasted_range, ALERT.
  - question: Has any internal host initiated an excessive number of connections to unique external destinations, and can we identify the process responsible?
    context: This question attempts to detect outbound scanning activity, a common behavior for a compromised bot seeking other vulnerable hosts. By setting a high, static threshold for unique connections and correlating network data with endpoint process creation events (Windows Event IDs 5156 and 4688), an analyst can not only detect the scanning but also pinpoint the malicious executable on the host.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Endpoint devices (workstations and servers), internal DNS resolvers, and network egress points.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: IF host_connections_to_unique_ips_per_hour > 500, ALERT. CORRELATE timestamp with WinEvent 5156 and 4688 to find process.
  - question: Is any host exhibiting anomalous outbound scanning or Domain Generation Algorithm (DGA) behavior compared to its own historical baseline?
    context: This question uses the host's own past behavior as a baseline to detect two distinct bot-like activities. First, it looks for a spike in unique outbound connections, indicating scanning. Second, it measures the randomness (entropy) of DNS queries, as high entropy is a key indicator of DGA, where malware generates numerous random domains to find its C2 server. This per-host baseline approach is effective for identifying deviations from normal user or server activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Endpoint devices (workstations and servers), internal DNS resolvers, and network egress points.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, IF hourly_unique_dest_ips > 99th_percentile_of_baseline, ALERT. SEPARATELY, IF dns_query_entropy > host_baseline, ALERT for DGA.
  - question: Can we identify compromised bots by clustering hosts based on their network behavior and flagging those that don't belong to the 'normal' group?
    context: This question uses a clustering algorithm to group hosts with similar network profiles (e.g., connection counts, data volumes, destination diversity). The assumption is that the vast majority of hosts will form a large 'normal' cluster. Hosts that fall outside this cluster are, by definition, anomalous and could be compromised bots exhibiting different network patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Endpoint devices (workstations and servers), internal DNS resolvers, and network egress points.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER hosts by network_behavior_features. FLAG hosts not in the main 'normal' cluster as anomalies.
  - question: Are internal hosts making connections to known C2 servers, or are they using common protocols over non-standard ports?
    context: This question aims to detect C2 communication through two distinct symbolic checks. The first is a straightforward match against a threat intelligence list of C2 servers. The second looks for protocol-port mismatches (e.g., SSH traffic over port 443), a common evasion technique used by malware to blend in with normal encrypted traffic.
    answer_sources:
      - Zeek conn.log
      - Network egress points, endpoint devices (workstations, servers).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH outbound_connections for dest_ip IN c2_intel_list. ALSO, SEARCH for protocol-port mismatches (e.g., ssh on port 443). ALERT on match.
  - question: Is any internal host communicating with an external destination with a highly regular, machine-like periodicity?
    context: This question seeks to identify automated C2 beaconing by analyzing the timing between connections. Human-generated traffic is typically random, while automated malware beacons often communicate at fixed intervals. By calculating the standard deviation of the time between connections (jitter), a value close to zero indicates a highly regular, non-human pattern worthy of investigation.
    answer_sources:
      - Zeek conn.log
      - Network egress points, endpoint devices (workstations, servers).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each src-dst pair, CALCULATE stddev of time_between_connections. IF stddev is near zero over many connections, ALERT.
  - question: Can we detect periodic C2 beaconing, even with network jitter, by transforming connection timing data into the frequency domain?
    context: This question uses a signal processing technique, the Fast Fourier Transform (FFT), to identify periodic behavior that might be obscured by network latency or deliberate jitter. By converting the time series of connection events into a frequency spectrum, a strong, clear peak will emerge if there is an underlying regular beacon, providing a robust method for detecting automated C2 communication.
    answer_sources:
      - Zeek conn.log
      - Network egress points, endpoint devices (workstations, servers).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: APPLY FFT to time_series of connection events for each src-dst pair. IF strong peak in frequency_spectrum, ALERT.