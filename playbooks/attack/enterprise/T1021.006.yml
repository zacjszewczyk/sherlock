name: T1021.006: Windows Remote Management
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook is designed to detect adversarial use of Windows Remote Management (WinRM) for lateral movement. It focuses on identifying suspicious network connections on WinRM ports (5985, 5986) originating from known malicious IPs, analyzing child processes of the WinRM service host (WsmPrvSE.exe) for malicious command-line arguments or high entropy, monitoring for statistical deviations in WinRM network traffic patterns, and correlating successful remote logons with subsequent anomalous process activity.
type: technique
related: TA0008: Lateral Movement
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is there WinRM traffic originating from a known malicious or compromised internal IP address?
    context: This question aims to detect WinRM-based lateral movement from systems that have already been identified as compromised or are on a threat intelligence watchlist. Correlating this network activity with successful logon events on the destination host provides strong evidence of an active intrusion and helps prioritize the incident response.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Zeek notice.log
      - Core network switches
      - network traffic sensors at VLAN boundaries
      - authentication logs on member servers and domain controllers
      - threat intelligence platforms.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Zeek conn.log WHERE dest_port IN (5985, 5986)
          JOIN source_ip WITH threat_intel_watchlist
          IF match:
            SEARCH Windows Event ID 4624 WHERE LogonType = 3 AND SourceNetworkAddress = matched_source_ip
            ALERT with source_ip, dest_ip, user, logon_details
  - question: Has a user initiated a WinRM connection from a host that is statistically unusual for them?
    context: Adversaries may compromise a non-standard host (e.g., a user workstation) and use it to pivot to other systems via WinRM. This question helps identify such activity by baselining normal user-to-host WinRM patterns and flagging connections from rare or unprecedented source systems, which could indicate a compromised account being used from an unexpected location.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Zeek notice.log
      - Core network switches
      - network traffic sensors at VLAN boundaries
      - authentication logs on member servers and domain controllers
      - threat intelligence platforms.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE WinRM connections (source_ip, dest_ip, user) over 30 days
          CALCULATE frequency for each triplet
          FOR each new WinRM connection:
            CHECK frequency of (source_ip, dest_ip, user)
            IF frequency < 5th percentile:
              ALERT on anomalous source host for user
  - question: Is a new WinRM connection occurring between hosts that do not normally communicate?
    context: This question uses graph-based anomaly detection to model the entire network's WinRM communication structure. It is designed to catch novel lateral movement pathways that deviate from established patterns, such as workstation-to-workstation connections or cross-departmental access that has never been seen before. Such improbable connections are strong indicators of an adversary exploring the network.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Zeek notice.log
      - Core network switches
      - network traffic sensors at VLAN boundaries
      - authentication logs on member servers and domain controllers
      - threat intelligence platforms.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BUILD network graph with hosts as nodes and WinRM connections as edges
          TRAIN graph anomaly detection model on historical data
          FOR each new WinRM connection (new edge):
            SCORE anomalousness of the new edge
            IF score > threshold:
              ALERT on improbable communication path
  - question: Is the WinRM service host (WsmPrvSE.exe) spawning processes with command lines matching known malicious tools or techniques?
    context: Adversaries often use WinRM to execute malicious commands or download further tooling on a remote system. This question specifically looks for children of the WinRM provider host process (WsmPrvSE.exe) whose command lines contain signatures of common hacking tools (like mimikatz), PowerShell download cradles ('IEX', 'DownloadString'), or obfuscation methods ('-enc'). A match provides a strong signal of malicious execution via WinRM.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Process creation and command-line logs on all Windows endpoints and servers
      - PowerShell script block logging archives.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Windows Event ID 4688 WHERE ParentProcessName = 'WsmPrvSE.exe'
          APPLY regex for malicious patterns (e.g., 'IEX', 'mimikatz', '-enc') to CommandLine
          IF match:
            ALERT on malicious command execution via WinRM
  - question: Is the WinRM service spawning processes with unusually long or high-entropy command lines or script blocks?
    context: To evade signature-based detection, attackers often obfuscate their commands or embed large payloads directly into the command line (e.g., base64 encoding). This results in command lines or script blocks that are statistically anomalousâ€”either unusually long or having high Shannon entropy. This question aims to detect such obfuscated or embedded payloads executed via WinRM by baselining normal command characteristics and flagging outliers.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Process creation and command-line logs on all Windows endpoints and servers
      - PowerShell script block logging archives.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE entropy and length for commands/scripts from WsmPrvSE.exe
          FOR each new command/script from WsmPrvSE.exe:
            CALCULATE entropy and length
            IF entropy > 95th percentile OR length > 95th percentile:
              ALERT on anomalous command/script properties
  - question: Can machine learning classify a command or script executed via WinRM as malicious?
    context: This question leverages a supervised machine learning model to move beyond simple signatures or statistical outliers. By training on a large dataset of known-good and known-bad command lines and PowerShell scripts, the model can learn complex patterns indicative of malicious behavior. This allows for the detection of novel or sophisticated attacks that might otherwise be missed.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Process creation and command-line logs on all Windows endpoints and servers
      - PowerShell script block logging archives.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          TRAIN ML classifier on labeled command/script data
          FOR each new command/script from WsmPrvSE.exe:
            CLASSIFY using trained model
            IF classification is 'malicious' with high confidence:
              ALERT on ML-detected malicious activity
  - question: Is there WinRM traffic that violates established network segmentation policies?
    context: A strong security posture involves defining and enforcing network segmentation rules, such as preventing workstations from communicating directly with each other via administrative protocols. This question operationalizes that policy by actively monitoring for and alerting on any WinRM traffic that crosses these forbidden boundaries (e.g., workstation-to-workstation, non-admin-VLAN to server-VLAN). Such a violation is a high-fidelity indicator of policy breach or lateral movement.
    answer_sources:
      - Zeek conn.log
      - Network flow data collectors (e.g., Zeek sensors) at network segment boundaries
      - Core switch and router flow export data.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          DEFINE forbidden WinRM pathways (e.g., workstation_subnet -> workstation_subnet)
          SEARCH Zeek conn.log WHERE dest_port IN (5985, 5986)
          IF (source_subnet, dest_subnet) in forbidden_pathways:
            ALERT on network policy violation
  - question: Has there been a statistically significant spike in the overall volume of WinRM connections?
    context: Automated attack tools often conduct network-wide scans or brute-force attempts using WinRM, which manifests as a sudden, sharp increase in connection attempts. This question aims to detect such activity by establishing a baseline of normal WinRM traffic volume for different times of day and days of the week. An alert is triggered when the volume deviates significantly from this historical norm, pointing to potential widespread scanning or brute-force attacks.
    answer_sources:
      - Zeek conn.log
      - Network flow data collectors (e.g., Zeek sensors) at network segment boundaries
      - Core switch and router flow export data.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE hourly WinRM connection counts over 30 days (mean, stddev)
          FOR each hour:
            COUNT current WinRM connections
            IF current_count > (mean + 3 * stddev) for that hour:
              ALERT on volumetric anomaly (potential scan/brute-force)
  - question: Is the volume of WinRM traffic between critical network segments exceeding predicted levels based on a time-series forecast?
    context: This question enhances simple volumetric anomaly detection by using a more sophisticated time-series forecasting model. The model learns the complex seasonal patterns (e.g., daily, weekly) of WinRM traffic between important network zones. It then predicts the expected traffic volume along with a confidence interval. An alert is generated only when the actual traffic significantly breaches the upper bound of this prediction, resulting in a more accurate and lower-noise detection of anomalous surges.
    answer_sources:
      - Zeek conn.log
      - Network flow data collectors (e.g., Zeek sensors) at network segment boundaries
      - Core switch and router flow export data.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          TRAIN time-series model (e.g., Prophet, LSTM) on historical WinRM traffic between segments
          FOR each time interval:
            PREDICT expected traffic volume and confidence interval
            GET actual traffic volume
            IF actual_volume > upper_confidence_bound:
              ALERT on anomalous surge in traffic
  - question: Following a successful WinRM logon, was a high-risk system utility executed?
    context: After gaining access via WinRM, adversaries often use powerful, built-in Windows utilities to perform actions like credential dumping ('ntdsutil.exe'), volume shadow copy manipulation ('vssadmin.exe', 'diskshadow.exe'), or security policy changes ('secedit.exe'). These tools are rarely used in routine remote administration. This question correlates a WinRM logon with the immediate execution of these specific high-risk processes, providing a high-confidence alert for malicious activity.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Authentication, privilege assignment, and process creation logs on all critical servers and privileged administrative workstations.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH for successful network logon (Event ID 4624, Logon Type 3) from WinRM source
          EXTRACT LogonID
          SEARCH for process creation (Event ID 4688) with same LogonID
          IF ProcessName IN ('ntdsutil.exe', 'vssadmin.exe', 'diskshadow.exe', 'secedit.exe'):
            ALERT on high-risk process execution post-WinRM logon
  - question: Did a user's WinRM session contain an unusual sequence of commands or an abnormally high number of discovery commands?
    context: Legitimate administrators tend to have repeatable workflows, while attackers often engage in extensive reconnaissance. This question aims to detect two types of anomalous command-line behavior 1) sequences of commands (n-grams) that are rarely or never seen for a particular user on a specific host, and 2) an unusually high volume of discovery commands ('whoami', 'net user', etc.) within a single session. Both are strong indicators of hands-on-keyboard exploration by an adversary.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Authentication, privilege assignment, and process creation logs on all critical servers and privileged administrative workstations.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE command n-grams and discovery command counts per user/session
          FOR each new WinRM session:
            EXTRACT command n-grams and count discovery commands
            IF any n-gram frequency < 1% OR discovery_count > 99th percentile:
              ALERT on anomalous command sequence or discovery activity
  - question: Does a WinRM session exhibit a combination of characteristics that makes it an outlier compared to normal sessions?
    context: This question uses unsupervised machine learning (clustering) to identify anomalous WinRM sessions based on a holistic set of features. Instead of looking at a single metric, it considers multiple dimensions simultaneously (session length, number of processes, command complexity, types of commands used). Sessions that don't fit into any cluster of 'normal' behavior are flagged as noise or outliers, representing potentially malicious activity that doesn't conform to typical administrative patterns.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Authentication, privilege assignment, and process creation logs on all critical servers and privileged administrative workstations.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each logon session:
            CREATE feature vector (duration, process_count, avg_entropy, etc.)
          APPLY clustering algorithm (e.g., DBSCAN) to all session vectors
          IF session is classified as 'noise' or 'outlier':
            ALERT on anomalous session behavior