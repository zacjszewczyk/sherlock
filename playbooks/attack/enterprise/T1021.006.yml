name: T1021.006: Windows Remote Management
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps detect if an adversary is leveraging Windows Remote Management (WinRM) for lateral movement. Detection focuses on identifying WinRM network connections from known malicious IPs or anomalous sources, analyzing child processes of the WinRM service for malicious tools or unusual characteristics (high entropy/length), monitoring for statistical deviations in network traffic patterns (volumetric spikes, new pathways), and correlating successful WinRM logons with subsequent anomalous process execution sequences or the use of high-risk utilities.
type: technique
related:
  - TA0008: Lateral Movement
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious or compromised internal system initiating WinRM connections?
    context: This question aims to detect WinRM-based lateral movement originating from systems that have already been identified as malicious or compromised. By cross-referencing the source IP of WinRM connections (ports 5985/5986) with a dynamic threat intelligence watchlist, analysts can quickly identify and prioritize activity from known bad actors within the network. Correlating this with successful logon events (Type 3) on the destination host confirms the lateral movement attempt was successful.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Zeek notice.log
      - Core network switches
      - network traffic sensors at VLAN boundaries
      - authentication logs on member servers and domain controllers
      - threat intelligence platforms.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH network logs where destination_port is 5985 or 5986
          JOIN source_ip with internal compromised_ip_watchlist
          IF match, SEARCH authentication logs on destination_host for successful logon (Type 3) from source_ip
          ALERT if logon is found for matched network connection
  - question: Is a user initiating a WinRM connection from a historically unusual source host?
    context: Adversaries often compromise one system and use it as a staging point to move to others. This question helps detect such activity by baselining normal user behavior. It profiles the typical source hosts for each user's WinRM connections over a 30-day period. An alert is triggered if a user connects from a host that is statistically rare for them, indicating their credentials might be in use by an attacker on a compromised machine that is not their usual workstation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Zeek notice.log
      - Core network switches
      - network traffic sensors at VLAN boundaries
      - authentication logs on member servers and domain controllers
      - threat intelligence platforms.
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE frequency of (user, source_host, destination_host) triplets for WinRM connections over 30 days.
          FOR each new WinRM connection, calculate historical frequency of source_host for the user and destination.
          ALERT if frequency is in the bottom 5th percentile.
  - question: Does a new WinRM connection represent a topologically anomalous communication path in the network graph?
    context: This question models the network's communication structure to find unusual lateral movement paths. By representing hosts and WinRM connections as a graph, a machine learning model can learn the normal "shape" of remote administration traffic. An alert for a highly improbable connection (e.g., a finance workstation connecting to a developer machine for the first time) indicates a deviation from established patterns that could signify an adversary exploring the network.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Zeek notice.log
      - Core network switches
      - network traffic sensors at VLAN boundaries
      - authentication logs on member servers and domain controllers
      - threat intelligence platforms.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN a graph-based anomaly detection model on historical WinRM host-to-host connections.
          SCORE each new WinRM connection for anomalousness based on the trained graph model.
          ALERT if the anomaly score exceeds a predefined threshold.
  - question: Are known malicious tools or commands being executed via a WinRM session?
    context: This question focuses on detecting the execution of specific malicious commands and tools that are spawned by the WinRM service process (WsmPrvSE.exe). By searching for tell-tale strings, command-line arguments, and tool names (like 'mimikatz' or 'IEX') within the command line of child processes, analysts can directly identify known attack techniques being deployed through a remote management session.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Process creation and command-line logs on all Windows endpoints and servers
      - PowerShell script block logging archives.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH process creation logs (Event ID 4688) where parent_process is 'WsmPrvSE.exe'.
          APPLY regex list of known malicious tools/strings (e.g., 'IEX', '-enc', 'mimikatz') to the command_line.
          ALERT on any match.
  - question: Is a command or script executed via WinRM statistically anomalous in terms of its entropy or length?
    context: Adversaries often use obfuscation (increasing entropy) or embed large payloads/scripts (increasing length) in their commands. This question aims to detect these characteristics. By establishing a baseline for the normal entropy and length of commands and scripts run through WinRM, any significant deviation (e.g., exceeding the 95th percentile) can be flagged as suspicious, even if the specific payload is unknown.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Process creation and command-line logs on all Windows endpoints and servers
      - PowerShell script block logging archives.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE distribution of Shannon entropy and character length for command lines/scripts spawned by 'WsmPrvSE.exe'.
          FOR each new command/script, calculate its entropy and length.
          ALERT if entropy or length exceeds the 95th percentile of the baseline.
  - question: Does a command or script executed via WinRM get classified as malicious by a machine learning model?
    context: This question moves beyond simple heuristics to a more advanced, adaptive detection method. By training a machine learning model on a large dataset of known benign and malicious command lines and PowerShell scripts, the system can learn to identify complex patterns indicative of malicious activity. This allows for the detection of novel or heavily obfuscated threats that might evade signature-based or simple statistical methods.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Process creation and command-line logs on all Windows endpoints and servers
      - PowerShell script block logging archives.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN a classifier on a labeled dataset of benign/malicious PowerShell and command-line content.
          FOR each new script/command associated with WinRM, classify it using the model.
          ALERT if the classification is 'malicious' with high confidence.
  - question: Is WinRM traffic violating an established network security policy?
    context: This question enforces a "zero-trust" principle for specific network pathways. Certain WinRM communications, like those between standard workstations or from general user subnets to critical servers, are highly irregular and often indicative of lateral movement. By defining explicit rules to forbid these connections and alerting on any violation, security teams can proactively block and detect unauthorized traversal of the network.
    answer_sources:
      - Zeek conn.log
      - Network flow data collectors at network segment boundaries
      - Core switch and router flow export data.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          DEFINE a list of forbidden (source_subnet, destination_subnet) pairs for WinRM traffic.
          MONITOR network logs for connections on ports 5985/5986.
          ALERT if a connection's source/destination pair matches an entry in the forbidden list.
  - question: Has there been a statistically significant spike in the volume of WinRM connections?
    context: This question is designed to detect brute-force or scanning activity that uses WinRM. Adversaries may attempt to connect to many hosts in a short period. By baselining the normal hourly volume of WinRM connections, the system can detect when the current volume exceeds a statistical threshold (e.g., three standard deviations above the mean for that time of day/week). Such a spike is a strong indicator of automated attack activity.
    answer_sources:
      - Zeek conn.log
      - Network flow data collectors at network segment boundaries
      - Core switch and router flow export data.
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE the hourly mean and standard deviation of WinRM connection counts over a 30-day period.
          FOR each hour, count the number of new WinRM connections.
          ALERT if the count exceeds the mean plus three times the standard deviation for that hour.
  - question: Does the current volume of WinRM traffic between major network segments significantly deviate from forecasted levels?
    context: This question uses a more sophisticated time-series model to detect anomalous traffic volumes, accounting for complex seasonalities like time of day and day of week. By forecasting the expected range of WinRM traffic between critical network segments (e.g., admin to server VLANs), the system can flag any observed volume that falls outside the model's prediction. This can catch surges in activity that might be missed by simpler standard deviation-based methods.
    answer_sources:
      - Zeek conn.log
      - Network flow data collectors at network segment boundaries
      - Core switch and router flow export data.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          TRAIN a time-series forecasting model on historical WinRM traffic volume between key network segments.
          PREDICT the expected volume and confidence interval for the current time period.
          ALERT if the observed volume exceeds the predicted upper confidence bound.
  - question: Is a WinRM session being used to execute high-risk system utilities?
    context: After gaining remote access via WinRM, an adversary will often execute sensitive system utilities for credential theft, reconnaissance, or persistence. This question directly targets this post-exploitation behavior. It correlates a successful WinRM network logon with the processes spawned within that session and immediately alerts if any of those processes are on a watchlist of high-risk executables (e.g., 'ntdsutil.exe', 'vssadmin.exe') that are rarely used in legitimate day-to-day remote administration.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Authentication, privilege assignment, and process creation logs on all critical servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          CORRELATE successful network logons (Event 4624, Type 3) with subsequent process creation events (Event 4688) using the Logon ID.
          ALERT if a process created within the session matches a list of high-risk executables (e.g., 'ntdsutil.exe', 'vssadmin.exe').
  - question: Is a user executing an unusual sequence or volume of discovery commands within a WinRM session?
    context: This question seeks to identify adversary reconnaissance activity within a WinRM session by analyzing command patterns. It profiles the normal command sequences (n-grams) and the typical number of discovery commands ('whoami', 'net user', etc.) for each user. An alert is triggered for a session containing a command sequence that has rarely or never been seen before, or if the user runs an unusually high number of discovery commands, indicating they may be an attacker mapping out the system and network.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Authentication, privilege assignment, and process creation logs on all critical servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE typical command n-grams and discovery command counts per WinRM session for each user.
          FOR each new session, analyze its command sequences and count discovery commands.
          ALERT if a command sequence has a frequency below a 1% threshold or if the discovery command count exceeds the 99th percentile for that user.
  - question: Does the overall activity within a WinRM session (duration, process count, command entropy) mark it as a behavioral outlier?
    context: This question provides a holistic view of a WinRM session's behavior, looking for anomalous sessions that don't fit any normal pattern. By creating a multi-dimensional profile (feature vector) for each session—including metrics like duration, number of processes, and command complexity—a clustering algorithm can group sessions into clusters of "normal" behavior. Any session that doesn't fit into a cluster (a "noise" point) is flagged as a behavioral outlier, likely representing abnormal or malicious activity that warrants investigation.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Authentication, privilege assignment, and process creation logs on all critical servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each WinRM session, create a feature vector (e.g., duration, process_count, avg_entropy).
          USE a clustering algorithm (e.g., DBSCAN) to identify sessions that do not belong to any normal behavior cluster.
          ALERT on any session identified as an outlier or noise point.