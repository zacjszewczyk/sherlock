name: T1560.003: Archive via Custom Method
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook focuses on detecting adversaries who are collecting and staging data for exfiltration using custom archiving methods. It identifies malicious activity by looking for several key indicators: processes with high-entropy command lines suggesting obfuscation or scripting; unusual file access patterns, such as a single process reading hundreds of files and writing to one archive; high-entropy outbound network traffic over non-standard ports; rare or forbidden parent-child process relationships, like an office application spawning a command shell; the creation of unusually large files in staging directories followed by large network transfers; and anomalous network egress to low-reputation or newly observed destinations. [1]
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a process being created with command-line arguments matching known custom archivers or obfuscation patterns?
    context: This question seeks to identify adversaries using known malicious tools or common obfuscation techniques (like Base64 encoding in PowerShell) to hide their data collection activities. By checking process hashes against threat intelligence and command-line arguments for specific patterns, we can detect the use of custom archivers or scripts designed to evade basic detection.
    answer_sources:
      - Windows Event ID 4688
      - Workstation and server endpoints, especially developer workstations, administrator consoles, Domain Controllers, and file servers.
    range: last 90 days
    queries:
      - Search process creation logs (Event ID 4688). Compare process hash against threat intel feed of custom archivers. Use regex on command-line arguments to find patterns like 'powershell -e', '-enc', or long Base64 strings.
  - question: Is a process being executed with unusually complex or high-entropy command-line arguments compared to its normal behavior?
    context: This question aims to detect custom scripting or obfuscation by identifying statistical anomalies in command-line complexity. A high Shannon entropy value suggests randomness, which is characteristic of encrypted or compressed data often passed as arguments to scripts used for archiving. Comparing this to a historical baseline for the same process helps filter out legitimate, complex commands and focuses on true outliers.
    answer_sources:
      - Windows Event ID 4688
      - Workstation and server endpoints, especially developer workstations, administrator consoles, Domain Controllers, and file servers.
    range: last 90 days
    queries:
      - For each process creation event, calculate Shannon entropy of command-line arguments. Compare the value to a 30-day rolling 95th percentile baseline for that specific process name. Alert on outliers.
  - question: Can we use a machine learning model to predict if a process creation event is likely part of a custom archiving attempt?
    context: This question leverages a machine learning model to provide a more sophisticated, multi-faceted detection than single-indicator checks. By considering features like command-line entropy, argument length, and parent process, the model can learn complex patterns of malicious behavior and assign a risk score, allowing analysts to prioritize the most suspicious process creations for investigation.
    answer_sources:
      - Windows Event ID 4688
      - Workstation and server endpoints, especially developer workstations, administrator consoles, Domain Controllers, and file servers.
    range: last 90 days
    queries:
      - Feed process creation event features (entropy, argument length, parent process, etc.) into a pre-trained classification model. Alert on events that receive a score above a defined confidence threshold.
  - question: Is a non-standard process reading an unusually large number of files from sensitive locations and writing to a single file in a staging area?
    context: This question tries to identify the classic 'smash and grab' data collection pattern. An adversary's script will often read many files from target directories (user profiles, file shares) and consolidate them into a single archive file in a temporary or public location before exfiltration. This rule specifically looks for this behavior from processes not on an allowlist of legitimate backup tools.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - File servers, database servers, user profile directories (e.g., Documents, Desktop), and common staging directories (e.g., %TEMP%, %APPDATA%, C:\Users\Public) on endpoints and servers.
    range: last 90 days
    queries:
      - Correlate process creation (4688) with file access (4663). Alert if a process not on the backup allowlist reads >100 files from sensitive directories and writes to one file in a staging directory within 5 minutes.
  - question: Is a process exhibiting an anomalous ratio of file reads to file writes compared to its baseline?
    context: This question provides a statistical approach to finding data collection activity. Legitimate processes have a relatively stable ratio of file read/write operations. A process involved in creating an archive will have a very high read-to-write ratio (many files read, one file written). Flagging significant deviations from the norm for a given process can uncover this behavior without relying on static file counts or allowlists.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - File servers, database servers, user profile directories (e.g., Documents, Desktop), and common staging directories (e.g., %TEMP%, %APPDATA%, C:\Users\Public) on endpoints and servers.
    range: last 90 days
    queries:
      - Over a 10-min window, calculate the read/write ratio for each process. Compare this ratio to a baseline for that process. Alert if the ratio deviates by more than 3 standard deviations.
  - question: Can we identify anomalous clusters of file access activity that do not match known legitimate process behavior?
    context: This question uses unsupervised machine learning to find novel or unknown collection techniques. By clustering processes based on their file access patterns (read/write counts, directories accessed), we can group known-good behaviors together. Any process or group of processes that forms its own distinct cluster represents a significant anomaly that warrants investigation as it does not conform to any established pattern of activity in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - File servers, database servers, user profile directories (e.g., Documents, Desktop), and common staging directories (e.g., %TEMP%, %APPDATA%, C:\Users\Public) on endpoints and servers.
    range: last 90 days
    queries:
      - Use a clustering algorithm (e.g., DBSCAN) on aggregated process session features (file reads, writes, unique directories). Investigate clusters that are separate from known, legitimate process groups.
  - question: Is a host, recently flagged for anomalous process or file activity, sending a large amount of data over a non-standard port?
    context: This question connects suspicious host activity (potential data staging) with suspicious network activity (potential exfiltration). A large outbound transfer over an unusual port, shortly after a high-entropy process or mass file read alert, is a strong indicator that the staged data is now being sent out of the network.
    answer_sources:
      - Zeek conn.log
      - Zeek file_analysis
      - Network egress points, such as border firewalls and routers, where network sensors (e.g., Zeek) are deployed.
    range: last 90 days
    queries:
      - Correlate host-based alerts (anomalous file access, high-entropy process) with network logs. Alert if the flagged host initiates an outbound connection >10MB on a non-standard port within 10 minutes of the initial alert.
  - question: Is there an outbound network flow containing data with high entropy, suggesting non-standard encryption or compression?
    context: This question aims to detect exfiltration of data that has been archived or encrypted using custom methods. High entropy in network traffic payload indicates randomness, which is a hallmark of compression and encryption. By looking for high entropy on non-standard protocols, we can find adversaries trying to hide their exfiltration in plain sight, avoiding common protocols like TLS or SSH.
    answer_sources:
      - Zeek conn.log
      - Zeek file_analysis
      - Network egress points, such as border firewalls and routers, where network sensors (e.g., Zeek) are deployed.
    range: last 90 days
    queries:
      - Calculate byte entropy for connection payloads. Alert when entropy for a flow is above the 98th percentile for its destination port, excluding known encrypted protocols (TLS, SSH, etc.).
  - question: Is a host's network traffic pattern deviating significantly from its established normal behavior, especially when correlated with high payload entropy?
    context: This question uses a machine learning model to create a detailed profile of what constitutes 'normal' network behavior for each host. The model can then detect subtle deviations that might be missed by simple thresholding. A high reconstruction error from a time-series model indicates the current activity does not match the learned profile, which is a strong signal of an anomaly, such as an exfiltration attempt.
    answer_sources:
      - Zeek conn.log
      - Zeek file_analysis
      - Network egress points, such as border firewalls and routers, where network sensors (e.g., Zeek) are deployed.
    range: last 90 days
    queries:
      - Use a time-series anomaly detection model (e.g., LSTM Autoencoder) on per-host network flow features. Alert on high reconstruction error, indicating deviation from the host's normal network profile.
  - question: Has a common office or browser application spawned a command-line interpreter or scripting engine in a way that is explicitly forbidden by security policy?
    context: This question looks for clear, high-fidelity indicators of compromise. Legitimate use cases for applications like Microsoft Word or Outlook to spawn PowerShell or Command Prompt are extremely rare and often disallowed by policy. Detecting these specific, forbidden parent-child process relationships is a simple and effective way to catch initial stages of payload execution or data collection.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - All end-user workstations and servers running common business applications (e.g., Microsoft Office, Adobe Reader, web browsers).
    range: last 90 days
    queries:
      - Monitor process creation logs (Event ID 4688) for explicitly forbidden parent-child process pairs (e.g., WINWORD.EXE -> powershell.exe). Alert on any match.
  - question: Has a process spawned a child process that is statistically rare for that parent across the enterprise?
    context: This question moves beyond a static blocklist to find novel or unusual attacker techniques. By baselining all parent-child process relationships across the environment, we can identify what is normal. An event where a parent process spawns a child that it has rarely or never spawned before is a statistical anomaly. This can uncover abuse of legitimate applications for malicious purposes that are not covered by a static rule.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - All end-user workstations and servers running common business applications (e.g., Microsoft Office, Adobe Reader, web browsers).
    range: last 90 days
    queries:
      - Build a frequency table of all parent-child process pairs over 30 days. Alert when a new pair occurs that falls in the bottom 1st percentile of frequency for that specific parent process.
  - question: Is a new process chain bridging two distinct functional groups of processes, such as an office application launching a developer tool?
    context: This question models the enterprise's process activity as a graph, identifying 'communities' of related processes (e.g., office apps, developer tools, system admin tools). A malicious action often involves one community inappropriately interacting with another, such as a web browser spawning a system administration tool. Detecting these 'bridge' events that connect disparate communities can highlight lateral movement or privilege escalation attempts.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - All end-user workstations and servers running common business applications (e.g., Microsoft Office, Adobe Reader, web browsers).
    range: last 90 days
    queries:
      - Model process chains as a graph and use community detection. Flag new process chains that bridge two previously separate communities of processes.
  - question: Was a very large file created in a staging directory by a non-standard process, immediately followed by a large outbound network transfer from the same host?
    context: This question looks for a direct sequence of events that strongly indicates data staging and exfiltration. The creation of a large file (e.g., >50MB) in a temporary location by a process not associated with software installation or backup, followed closely by a large network egress, provides a clear, actionable signal for analysts to investigate a potential data theft incident.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Common staging directories (e.g., C:\Windows\Tasks, %TEMP%, C:\Perflogs, Recycle Bin) on endpoints/servers, and network egress points.
    range: last 90 days
    queries:
      - Alert if a file >50MB is created in a staging directory by a non-allowlisted process, followed within 5 minutes by an outbound network connection >50MB from the same host.
  - question: Did a host create a file and initiate an outbound network connection that were both statistically large compared to their respective baselines?
    context: This question uses statistical thresholds to detect staging and exfiltration without relying on fixed size limits. By identifying when both a created file's size and a subsequent network flow's volume are outliers (e.g., above the 95th percentile), this method adapts to different environments and user behaviors, reducing false positives from users who legitimately handle large files and making true anomalies more apparent.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Common staging directories (e.g., C:\Windows\Tasks, %TEMP%, C:\Perflogs, Recycle Bin) on endpoints/servers, and network egress points.
    range: last 90 days
    queries:
      - Alert when a file creation event in a staging directory exceeds the 95th percentile for size, and a subsequent network flow from the same host exceeds the 95th percentile for outbound volume within 10 minutes.
  - question: Has an improbable sequence of events, such as a large file write in a temp directory followed by a large data egress, occurred on a host?
    context: This question leverages sequence analysis to understand the order and probability of events on a host. A model like a Hidden Markov Model can learn normal sequences of activity. An alert is triggered when the model observes a sequence it deems highly improbable, such as a process creating a large temporary file and immediately sending a large amount of data to a new destination. This detects the logical flow of an attack rather than just individual anomalous events.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Common staging directories (e.g., C:\Windows\Tasks, %TEMP%, C:\Perflogs, Recycle Bin) on endpoints/servers, and network egress points.
    range: last 90 days
    queries:
      - Use a sequence analysis model (e.g., HMM) on host event streams. Flag improbable sequences like large file_create -> large network_connection to a new IP.
  - question: Is a host making an outbound connection to a known malicious or newly registered domain?
    context: This question focuses on the destination of potentially malicious traffic. Regardless of the data volume or the activity on the host, a connection to a destination with a bad reputation (on a threat intel blocklist) or a destination that has only existed for a short time (newly registered domain) is inherently suspicious and a strong indicator of a potential command-and-control channel or data exfiltration point.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, enterprise DNS servers, and threat intelligence feeds.
    range: last 90 days
    queries:
      - Correlate network connection logs with DNS logs and threat intel. Alert on connections to blocklisted IPs or domains registered within the last 30 days.
  - question: Has a host initiated an outbound connection with a data volume significantly larger than its normal behavior, especially to a rare destination?
    context: This question identifies anomalous data transfers by baselining each host's typical outbound traffic volume. A connection that is several standard deviations larger than the host's average is a significant anomaly. The suspicion is increased if the destination is an IP address the host rarely or never communicates with, suggesting a new channel for potential data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, enterprise DNS servers, and threat intelligence feeds.
    range: last 90 days
    queries:
      - For each host, alert if an outbound connection's byte size is >4 standard deviations above the 30-day mean. Increase risk score if the destination IP is statistically rare for that host.
  - question: Is a host's outbound network connection being classified as an outlier by a machine learning model trained on its normal behavior?
    context: This question uses a machine learning model (one-class SVM) to create a high-dimensional profile of a host's normal network activity. This is more robust than single-variable baselines. The model can detect when a new connection, based on a combination of its features (duration, bytes, protocol, port), does not fit this profile. This allows for the detection of sophisticated exfiltration attempts that may try to blend in by manipulating individual variables.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, enterprise DNS servers, and threat intelligence feeds.
    range: last 90 days
    queries:
      - Train a one-class SVM model on each host's normal network connection features. Alert on any new connection that the model classifies as an outlier.