name: T1552.002: Credentials in Registry
id: 9a87d6e5-4f3c-4b2a-9e8d-7f6a5b4c3d2e
description: This playbook focuses on detecting adversary attempts to harvest credentials stored in the Windows Registry. It identifies this activity by monitoring for known credential dumping tools, direct access to sensitive registry keys, command-line or PowerShell queries containing credential-related keywords, statistically rare access patterns (e.g., a process accessing a key for the first time), and the correlation of suspicious registry access with subsequent lateral movement or network activity. The goal is to provide comprehensive coverage against various methods used to extract credentials from the registry.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are known credential dumping utilities or unauthorized processes accessing sensitive registry keys?
  context: This question aims to detect credential harvesting by matching against known-bad indicators. It involves monitoring for the execution of credential dumping tools (like Mimikatz) by their file hashes and watching for access to specific registry keys where applications (like WinSCP) store credentials by processes that have no legitimate reason to do so. This is a high-fidelity, signature-based approach.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation WHERE file_hash IN (credential_dumper_hashes) OR SEARCH registry_access WHERE registry_key IN (credential_storage_keys) AND process_name NOT IN (authorized_processes_for_key)
- question: Is there an unusual frequency of access to credential-storing registry keys from any host or process?
  context: This question seeks to identify credential enumeration or dumping by detecting statistical anomalies. It establishes a baseline of normal access frequency for sensitive registry keys on a per-host and per-process basis. An alert is triggered if the daily access count for a specific key significantly exceeds its established historical threshold, suggesting a potential bulk harvesting attempt.
  answer_sources:
  - Windows Event ID 4663
  - Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH registry_access | GROUP BY host, registry_key, process | COMPARE daily_count TO 30_day_baseline_99th_percentile | WHERE daily_count > threshold
- question: Can machine learning models classify registry access events as benign or malicious in real-time?
  context: This question explores the use of predictive analytics to identify malicious activity. By training a supervised machine learning model on historical data (including features like process name, parent process, user, and target key), new registry access events can be automatically scored and classified. This approach can identify novel or complex attacks that evade simpler rule-based detections.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM registry_access, process_creation | EXTRACT features (process, parent_process, user, registry_key, etc.) | INVOKE ML_model (credential_access_classifier) | WHERE prediction == 'malicious'
- question: Are command-line or PowerShell scripts being used to query the registry for credentials?
  context: This question focuses on detecting the explicit tools and commands an adversary might use to search for credentials. It involves scanning command-line arguments and PowerShell script blocks for the co-occurrence of registry query tools (e.g., `reg.exe query`, `Get-ItemProperty`) and keywords associated with credentials (e.g., 'password', 'privatekey'), indicating a direct attempt to find and extract secrets.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (process_creation OR powershell_script_block) WHERE command_line MATCHES REGEX ('(reg.exe query|Get-ItemProperty).*(password|pwd|credentials|privatekey|api_key)')
- question: Are there any unusually complex or obfuscated registry query commands being executed?
  context: This question aims to uncover attempts to hide credential harvesting activity through obfuscation. By calculating the Shannon entropy of command strings, it's possible to identify commands that are statistically more random or complex than typical administrative commands. High entropy can be an indicator of encoded payloads or long, complex search strings used to evade simple keyword-based detection.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (process_creation OR powershell_script_block) WHERE process_name IN ('reg.exe', 'powershell.exe') | CALCULATE entropy(command_line) | COMPARE entropy TO baseline_mean_plus_3_std_dev | WHERE entropy > threshold
- question: Can a natural language processing (NLP) model identify novel or semantically suspicious registry query commands?
  context: This question leverages advanced text analysis to understand the intent behind a command, rather than relying on exact keyword matches. An NLP model, fine-tuned on security data, can classify command-line and PowerShell scripts as benign or suspicious. This allows for the detection of novel attack variations or commands that use synonyms and semantically related terms for credentials, which would be missed by regex-based rules.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM (process_creation OR powershell_script_block) | INVOKE NLP_model (command_line_classifier) | WHERE prediction == 'Suspicious Credential Query'
- question: Are unauthorized or unexpected processes accessing known credential-storing registry keys?
  context: This question enforces a principle of least privilege by identifying policy violations. It involves creating an allowlist of legitimate processes that are expected to access specific credential-storing registry keys (e.g., `putty.exe` accessing its session keys). Any access to these keys by a process not on the allowlist, such as `WINWORD.EXE` or `cscript.exe`, is flagged as highly suspicious.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Application Servers, User Workstations, Remote Access Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH registry_access WHERE registry_key IN (credential_storage_keys) AND (process_name, registry_key) NOT IN (known_good_pairs_allowlist)
- question: Have there been any first-seen or rare combinations of a user, process, and registry key access?
  context: This question is based on the premise that most legitimate activity is repetitive, while malicious activity is often novel. By building a frequency table of all observed (user, process, registry key) access combinations, this method flags any combination that is seen for the first time or has occurred very infrequently across the enterprise. Such rare events are inherently suspicious and warrant investigation.
  answer_sources:
  - Windows Event ID 4663
  - Application Servers, User Workstations, Remote Access Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH registry_access | GROUP BY user, process_name, registry_key | COMPARE count TO historical_frequency_table | WHERE is_first_seen OR count < low_frequency_threshold
- question: Can an unsupervised anomaly detection model identify registry access events that deviate from normal activity clusters?
  context: This question applies machine learning to automatically define and detect "abnormal" behavior without pre-existing labels. An unsupervised algorithm (like DBSCAN or Isolation Forest) learns clusters of normal registry access activity based on features like user, process, and key. Any event that does not fit into a known-good cluster is flagged as an outlier, providing a powerful method for discovering previously unknown attack patterns.
  answer_sources:
  - Windows Event ID 4663
  - Application Servers, User Workstations, Remote Access Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM registry_access | EXTRACT features (user, process, key) | INVOKE ML_model (unsupervised_anomaly_detector) | WHERE prediction == 'outlier'
- question: Is a suspicious registry query followed by lateral movement from the same host within a short time frame?
  context: This question aims to connect the act of credential theft with its subsequent use. It implements a correlation rule that triggers when a suspicious registry query is detected and then looks for follow-on activity, such as a remote logon (e.g., RDP, SMB) or a new network connection to another asset, originating from the same host within a short window (e.g., 15 minutes). This sequence of events provides strong evidence of a successful compromise.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Windows Event ID 4624
  - Zeek conn.log
  - All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE (suspicious_registry_query_alert) AS event1 WITH (remote_logon OR new_network_connection) AS event2 WHERE event1.host == event2.source_host AND event2.time - event1.time < 15_minutes
- question: After a suspicious registry query, does the source host exhibit an anomalous increase in outbound network connections or remote logons?
  context: This question looks for a behavioral shift on a host after a potential credential theft event. It compares the rate of outbound network connections or remote logons in the hour following a suspicious registry query alert to that host's own historical baseline. A significant spike in this activity suggests that the adversary is using the newly acquired credentials to move laterally through the network.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ON suspicious_registry_query_alert FOR host | MONITOR (outbound_connections, remote_logons) FROM host FOR 1_hour | COMPARE rate_of_activity TO host_baseline_99th_percentile | WHERE rate > threshold
- question: Can a sequence analysis model detect the transition from credential discovery to lateral movement as part of a malicious event chain?
  context: This question applies machine learning to model the entire attack lifecycle as a sequence of states (e.g., 'Benign', 'Credential Discovery', 'Lateral Movement'). By training a model like a Hidden Markov Model on known attack sequences, it can analyze a time-ordered stream of log events from a host and calculate the probability of transitioning between these states. An alert is generated when the model detects a high probability of a shift from credential discovery to lateral movement.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Windows Event ID 4624
  - Zeek conn.log
  - All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM logs_by_host | INVOKE ML_model (sequence_analyzer) | WHERE probability(state_transition from 'Credential Discovery' to 'Lateral Movement') > confidence_threshold