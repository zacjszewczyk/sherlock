name: T1021.005: VNC
id: e3a1b2f8-c4d5-4e6f-8a9b-0c1d2e3f4a5b
description: This playbook helps investigators determine if an adversary has used VNC for lateral movement. It provides methods to detect malicious VNC activity by analyzing network connections to known malicious IPs or using executables with malicious hashes. It also covers identifying VNC processes running from unusual locations, masquerading as legitimate processes, or using obfuscated command-line arguments. The playbook includes checks for anomalous connection patterns, such as new source-destination pairs, connections at unusual times, or by unauthorized users. Furthermore, it details how to detect brute-force or password spraying attacks by observing a high volume of failed connections followed by a success. Finally, it guides the investigation of post-exploitation activity, such as reconnaissance commands or credential access attempts, occurring after a successful VNC connection.
type: technique
related:
  - TA0008: Lateral Movement
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is there VNC network traffic involving known malicious IP addresses, or are VNC-related processes with known malicious hashes being executed?
    context: This question aims to detect straightforward indicators of compromise. Adversaries may use known malicious infrastructure or deploy malware with known signatures. Correlating network traffic on standard VNC ports with threat intelligence feeds, or matching executed file hashes against a known-bad list, provides a high-confidence signal of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Network traffic logs from internet gateways and internal network sensors
      - Endpoint process execution logs from all workstations and servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Query 1: Check network logs for VNC traffic to/from blacklisted IPs
          SEARCH Zeek conn.log
          WHERE destination_port IN (5800-5806, 5900-5906)
          AND (source_ip IN threat_intel_watchlist OR destination_ip IN threat_intel_watchlist)

          # Query 2: Check process logs for VNC processes with malicious hashes
          SEARCH Sysmon Event ID 1
          WHERE process_name IN ('vncviewer.exe', 'winvnc.exe', 'tightvnc.exe')
          AND file_hash IN threat_intel_hash_list
  - question: Are there any VNC sessions with an unusually high risk score, based on the risk profiles of the involved hosts?
    context: This question uses a statistical approach to identify suspicious VNC connections. Instead of relying on known-bad indicators, it leverages internal risk scoring. A VNC connection between two high-risk assets is more suspicious than routine administrative access. By analyzing the distribution of session risk scores, analysts can surface outliers that warrant investigation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Network traffic logs from internet gateways and internal network sensors
      - Endpoint process execution logs from all workstations and servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Calculate risk for each VNC session and flag outliers
          FOR each VNC connection in Zeek conn.log:
            session_risk = get_risk_score(source_ip) + get_risk_score(destination_ip)
          
          CALCULATE 95th_percentile of all session_risk scores over last 24 hours
          ALERT if current session_risk > 95th_percentile_threshold
  - question: Can a machine learning model identify VNC sessions that are likely to be malicious based on their network characteristics and context?
    context: This question leverages machine learning to predict malicious VNC activity. A supervised model is trained on a rich feature set including network traffic details (duration, bytes transferred) and contextual information (host risk, time of day). This allows the model to learn subtle, complex patterns that distinguish malicious lateral movement from benign remote access.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Network traffic logs from internet gateways and internal network sensors
      - Endpoint process execution logs from all workstations and servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Use a trained ML model to predict malicious probability
          FOR each VNC session in Zeek conn.log:
            features = extract_features(duration, bytes, history, ip_risk_scores, time_of_day)
            prediction_probability = ml_model.predict(features)
          
          ALERT if prediction_probability > 0.90
  - question: Is a VNC-related process running from a suspicious directory or being launched by a masquerading parent process?
    context: Adversaries often place their tools in non-standard locations like temporary directories or user profile folders to evade detection. This question looks for VNC processes executing from these suspicious paths. It also checks for process masquerading, where a common system process (like svchost.exe) unexpectedly spawns a VNC process to hide malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process and command-line execution logs from endpoint detection and response (EDR) agents on all workstations and servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Search for VNC processes in suspicious locations or with suspicious parents
          SEARCH Sysmon Event ID 1
          WHERE (process_image_path contains ('%TEMP%', '%APPDATA%', 'C:\Users\Public\'))
            AND (process_description contains 'VNC' OR original_filename contains 'VNC')
          OR (parent_process_name = 'svchost.exe' AND process_initiates_vnc_connection)
  - question: Are VNC processes being executed with unusually complex command lines or from very rare file paths?
    context: This question applies statistical analysis to find anomalous process executions. High Shannon entropy in a command line often indicates obfuscation or encoding. Similarly, a VNC tool running from a file path that is rarely seen across the organization is highly suspicious. These statistical outliers can uncover novel or customized attacker tools.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process and command-line execution logs from endpoint detection and response (EDR) agents on all workstations and servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Query 1: Check for high entropy in VNC command lines
          FOR each VNC process execution:
            entropy = calculate_shannon_entropy(command_line)
            baseline_entropy = get_baseline_entropy_for_process()
          ALERT if entropy > (baseline_entropy + 3 * standard_deviation)

          # Query 2: Check for VNC execution from rare file paths
          FOR each VNC process execution:
            path_rarity = calculate_path_rarity(image_path)
          ALERT if path_rarity < 5th_percentile
  - question: Can an anomaly detection model identify VNC process executions that deviate from established normal behavior?
    context: This question uses unsupervised machine learning to establish a baseline of "normal" VNC process execution. By training a model on features from legitimate VNC activity (e.g., file path, parent process, user), it can identify any new execution that falls outside this learned profile. This is effective for detecting previously unseen attack variations.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process and command-line execution logs from endpoint detection and response (EDR) agents on all workstations and servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Use an anomaly detection model to find outlier VNC process events
          FOR each VNC process event:
            features = extract_features(file_path_depth, cmd_length, parent_process, user_context)
            is_outlier = anomaly_model.predict(features)
          
          ALERT if is_outlier
  - question: Has a user account initiated a VNC connection to a host they are not authorized to access?
    context: This question enforces access control policies at the network and authentication level. By maintaining an explicit policy of which users can connect to which hosts via VNC, any deviation from this policy can be flagged as a high-confidence security event, potentially indicating a compromised account being used for lateral movement.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Authentication logs from Active Directory Domain Controllers
      - Network flow logs from data center and user access layer switches
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Correlate VNC network traffic with remote logons and check against an access policy
          FIND VNC connection in Zeek conn.log for source_ip, dest_ip
          FIND corresponding logon event (Event ID 4624, Type 10) for user and dest_host
          
          CHECK if (user, dest_host) is in authorized_vnc_access_policy
          ALERT if not authorized
  - question: Is a user initiating a VNC session that is anomalous compared to their own historical baseline activity?
    context: This question focuses on user behavior analytics to detect anomalies. Every user has a typical pattern of remote access. A VNC connection made at an unusual time, for an unusual duration, or to a brand new host can indicate that the user's account has been compromised and is being used by an attacker for lateral movement.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Authentication logs from Active Directory Domain Controllers
      - Network flow logs from data center and user access layer switches
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Compare current user VNC activity against their historical baseline
          FOR each new user VNC session:
            is_outside_normal_hours = check_time_anomaly(session_time, user_baseline)
            is_duration_outlier = check_duration_anomaly(session_duration, user_baseline)
            is_first_seen_destination = check_destination_is_new(destination_host, user_baseline)
          
          ALERT if is_outside_normal_hours OR is_duration_outlier OR is_first_seen_destination
  - question: Does the overall volume of VNC traffic across the network deviate significantly from the expected seasonal pattern?
    context: This question uses time-series analysis to monitor the network-wide VNC traffic volume. Most organizations have a predictable rhythm of VNC usage (e.g., higher during workdays, lower on weekends). A sudden, unexpected spike in VNC sessions that breaks this pattern could indicate a widespread, automated lateral movement campaign.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Authentication logs from Active Directory Domain Controllers
      - Network flow logs from data center and user access layer switches
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Use a time-series model to forecast expected VNC traffic and find anomalies
          AGGREGATE VNC sessions per hour
          FORECAST expected_count using SARIMA or Prophet model
          
          ALERT if observed_count significantly deviates from forecast
  - question: Has a brute-force or password spraying attack targeting VNC been followed by a successful logon?
    context: This question seeks to identify a classic attack pattern. Attackers often try many passwords or usernames against one or more systems (brute-force/spraying), generating many failed logons. A successful logon from the same source IP shortly after a storm of failures is a strong indicator that the attack succeeded and the adversary gained access.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Network sensors at key aggregation points
      - Security event logs from all servers, especially Domain Controllers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Detect a high number of failed logons followed by a success from the same source
          COUNT failed logons (Event ID 4625, Logon Type 10) from source_ip in a 5-minute window
          IF count > 20:
            LOOK FOR successful logon (Event ID 4624) from same source_ip to one of the targeted hosts
            ALERT if success is found
  - question: Is a source IP generating failed VNC logons for many different user accounts before a successful logon?
    context: This question specifically looks for password spraying, where an attacker tries a few common passwords against many different user accounts. By counting the number of distinct accounts targeted from a single source IP for failed logons, this activity can be distinguished from a single user mistyping their password, and a subsequent success can be flagged as a likely compromise.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Network sensors at key aggregation points
      - Security event logs from all servers, especially Domain Controllers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Detect password spraying by counting distinct accounts in failed logons
          IN a 10-minute window from a single source_ip:
            COUNT distinct user accounts in failed logons (Event ID 4625)
            IF distinct_account_count > 5:
              LOOK FOR a successful logon (Event ID 4624) from the same source_ip
              ALERT if success is found
  - question: Can a machine learning model identify the transition from a VNC brute-force attack to successful access?
    context: This question models the attacker's progression through stages of an attack. A Hidden Markov Model (HMM) can be trained to recognize the sequence of events (e.g., scanning, authentication failures, success) that constitute an attack. An alert is triggered when the model determines with high probability that an IP has transitioned from a 'Brute-Forcing' state to a 'Successful Access' state.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Network sensors at key aggregation points
      - Security event logs from all servers, especially Domain Controllers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Use an HMM to model the attack lifecycle
          FOR each source_ip, provide sequence of observations (e.g., TCP reset, failed logon, success) to HMM
          
          ALERT when model transitions source_ip state from 'Brute-Forcing' to 'Successful Access' with high probability
  - question: Following a successful VNC logon, is the user executing reconnaissance commands or credential dumping tools?
    context: This question looks for suspicious post-exploitation activity. After gaining access via VNC, an attacker's immediate next steps often involve running commands to understand the system (`whoami`, `ipconfig`) and escalate privileges. This rule correlates a remote logon with the immediate execution of these known malicious or reconnaissance-oriented commands.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint process, script block, and network connection logs
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Look for suspicious child processes after a remote logon via VNC
          IDENTIFY VNC session via remote logon (Event ID 4624, Type 10) and VNC port traffic
          WITHIN 30 minutes of logon on the target host:
            MONITOR child processes (Sysmon Event ID 1) for commands like 'whoami', 'net group', 'powershell.exe -enc'
            ALERT on any match
  - question: After a VNC session is established, does the user's activity on the host appear statistically rare or unusual?
    context: This question uses a statistical approach to find anomalous post-access behavior. Instead of looking for specific commands, it calculates a rarity score for every action (process execution, network connection) a user takes after logging in via VNC. A session with a high cumulative rarity score indicates the user is performing actions that are highly unusual for the organization, warranting investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint process, script block, and network connection logs
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Score post-VNC activity based on rarity
          AFTER a VNC session is identified:
            session_rarity_score = 0
            FOR each child process and network connection by the user:
              session_rarity_score += calculate_inverse_frequency(action, 30_day_baseline)
            
            ALERT if session_rarity_score > 98th_percentile_threshold
  - question: Can a machine learning model classify the graph of post-VNC activity as malicious?
    context: This question uses an advanced machine learning technique to analyze post-access behavior. It constructs a graph of all processes and their relationships within a window after a VNC logon. By converting these graphs into numerical vectors (embeddings), a classifier can be trained to distinguish between the complex activity patterns of a benign administrator and those of a malicious actor.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint process, script block, and network connection logs
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: |
          # Use graph-based ML to classify post-VNC activity
          FOR each VNC session:
            CONSTRUCT process execution graph for the next 1 hour
            CREATE vector embedding of the graph using Node2Vec
            CLASSIFY vector using trained Random Forest model
          
          ALERT if classification is 'malicious'