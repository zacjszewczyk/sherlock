name: T1021.005: VNC
id: 5a9b8c1d-2e3f-4a56-b789-c1d2e3f4a5b6
description: This playbook helps identify adversarial lateral movement using Virtual Network Computing (VNC). It focuses on detecting VNC activity by analyzing network connections on standard VNC ports (5800-5806, 5900-5906) and correlating them with threat intelligence, process execution anomalies, and behavioral deviations. Key indicators include VNC processes running from non-standard paths or masquerading as legitimate processes, unusual connection patterns that deviate from established baselines (e.g., anomalous times, new host pairings), brute-force or password spraying attempts characterized by a high volume of failed logons followed by a success, and suspicious follow-on activities like reconnaissance or credential dumping after a successful VNC connection.
type: technique
related:
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any VNC network connections involving known malicious IP addresses or processes?
  context: This question seeks to identify high-confidence threats by cross-referencing observed VNC activity with known indicators of compromise. By monitoring network traffic on VNC ports and process execution events, analysts can detect when a VNC connection involves an IP address from a threat watchlist or when a VNC-related process has a file hash matching a known-malicious signature. A positive match provides a strong signal of an intrusion.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Network traffic logs from internet gateways and internal network sensors
  - Endpoint process execution logs from all workstations and servers
  - Threat intelligence feeds for malicious IP addresses and file hashes
  range: last 90 days
  queries:
  - symbolic: SEARCH network logs (Zeek conn.log) WHERE destination_port IN (5800-5806, 5900-5906) AND (source_ip IN threat_list OR destination_ip IN threat_list).
  - symbolic: SEARCH process logs (Sysmon Event ID 1) WHERE process_name IN ('vncviewer.exe', 'winvnc.exe') AND file_hash IN malicious_hash_list.
- question: Can we statistically identify high-risk VNC sessions based on host risk scores?
  context: This question aims to uncover potentially malicious VNC activity that doesn't involve known bad indicators. It relies on a dynamic risk scoring system for internal assets. For every VNC connection, a session risk score is calculated by combining the risk scores of the source and destination hosts. By analyzing the distribution of these scores over a 24-hour period, sessions with unusually high scores (e.g., in the 95th percentile) can be flagged for review, indicating a connection between potentially compromised or vulnerable systems.
  answer_sources:
  - Zeek conn.log
  - Network traffic logs from internet gateways and internal network sensors
  - Endpoint process execution logs from all workstations and servers
  - Internal host risk score database
  range: last 90 days
  queries:
  - statistical: FOR each VNC connection in network logs, CALCULATE session_risk = risk_score(source_host) + risk_score(destination_host). ANALYZE distribution of session_risk over last 24 hours. ALERT if session_risk > 95th_percentile.
- question: Can a machine learning model predict if a VNC session is malicious based on its network characteristics and context?
  context: This question explores the use of predictive analytics to proactively identify malicious VNC sessions. A supervised machine learning model is trained on historical data, using features from network logs (e.g., duration, bytes transferred) and contextual information (e.g., host risk scores, time of day). The model learns the patterns of both benign and malicious VNC use and can then assign a probability of malice to new, unseen sessions, allowing for the detection of novel or evolving attack techniques.
  answer_sources:
  - Zeek conn.log
  - Network traffic logs from internet gateways and internal network sensors
  - Endpoint process execution logs from all workstations and servers
  - Internal host risk score database
  - Labeled historical data of benign and malicious sessions
  range: last 90 days
  queries:
  - ml: FOR each new VNC session, EXTRACT features (duration, orig_bytes, resp_bytes, history, source_risk, dest_risk, time_of_day). PREDICT probability_of_malice using trained classifier. ALERT if probability > 0.90.
- question: Is a VNC process being executed from a suspicious location or masquerading as a system process?
  context: This question focuses on identifying VNC usage that attempts to evade detection by hiding in unusual locations or mimicking legitimate software. Adversaries often place tools in common user directories like %TEMP% or %APPDATA% to avoid scrutiny. This query checks for VNC processes running from these non-standard paths or, more subtly, for legitimate system processes (like svchost.exe) acting as the parent of a process that initiates a VNC connection, which is highly anomalous behavior.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process and command-line execution logs from endpoint detection and response (EDR) agents on all workstations and servers.
  range: last 90 days
  queries:
  - symbolic: SEARCH process logs (Sysmon Event ID 1) WHERE (process_path CONTAINS '%TEMP%' OR process_path CONTAINS '%APPDATA%') AND (process_description CONTAINS 'VNC' OR original_filename CONTAINS 'VNC').
  - symbolic: SEARCH process logs WHERE parent_process_name IN ('svchost.exe', 'lsass.exe') AND child_process initiates network connection on VNC ports.
- question: Does a VNC process exhibit anomalous command-line entropy or originate from a rare file path?
  context: This question uses statistical analysis to find VNC executions that deviate from normal administrative use. High Shannon entropy in command-line arguments can indicate obfuscated or packed commands, a common adversarial technique. Additionally, a VNC executable running from a file path that is statistically rare compared to a historical baseline can signify that the tool was placed on the system by an unauthorized actor rather than installed through standard procedures.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process and command-line execution logs from endpoint detection and response (EDR) agents on all workstations and servers.
  range: last 90 days
  queries:
  - statistical: FOR each VNC process execution, CALCULATE shannon_entropy(command_line). ALERT if entropy > (baseline_mean + 3 * standard_deviation).
  - statistical: FOR each VNC process execution, CALCULATE frequency of process_path_directory over last 30 days. ALERT if frequency is in bottom 5th percentile.
- question: Can an outlier detection model identify anomalous VNC process executions?
  context: This question applies unsupervised machine learning to detect suspicious VNC process activity without prior knowledge of attack patterns. A model (like a One-Class SVM or Isolation Forest) is trained exclusively on features from legitimate VNC process executions, learning what "normal" looks like. Features can include file path characteristics, command-line length, and parent process details. Any new VNC process that deviates significantly from this learned norm is flagged as an outlier, warranting investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process and command-line execution logs from endpoint detection and response (EDR) agents on all workstations and servers.
  range: last 90 days
  queries:
  - ml: TRAIN outlier detection model on features from legitimate VNC process events (file_path_depth, command_line_length, parent_process_name, user_context). APPLY model to new VNC events. ALERT if event is classified as an outlier.
- question: Has a VNC connection occurred that violates a predefined access control policy?
  context: This question aims to detect unauthorized VNC access by enforcing a strict policy. It requires maintaining an explicit list of which users or groups are permitted to use VNC to access specific hosts or organizational units. By correlating network traffic on VNC ports with successful remote authentication events (Logon Type 10), any connection made by a user or to a host not on the approved list can be immediately flagged as a high-severity policy violation and potential security incident.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication logs from Active Directory Domain Controllers
  - Network flow logs from data center and user access layer switches
  - Predefined VNC access control policy
  range: last 90 days
  queries:
  - symbolic: JOIN successful remote logons (Event ID 4624, Logon Type 10) with VNC network traffic. ALERT if the (user, target_host) pair is NOT in the authorized VNC access policy.
- question: Is a user's VNC activity statistically anomalous compared to their own historical baseline?
  context: This question focuses on detecting unusual behavior at the user level. By establishing a 30-day baseline of normal VNC activity for each user—including their typical connection times, session durations, and hosts they access—the system can detect significant deviations. An alert would be triggered if a user connects at an unusual hour, has a session that is abnormally long or short, or connects to a host they have never accessed before, all of which could indicate an account compromise.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication logs from Active Directory Domain Controllers
  - Network flow logs from data center and user access layer switches
  range: last 90 days
  queries:
  - statistical: FOR each user, CREATE a 30-day baseline of VNC activity (login_hours, session_durations, accessed_hosts). FOR each new VNC session, ALERT if login_hour, duration, or destination_host is a statistical outlier compared to that user's baseline.
- question: Can a time-series model detect an anomalous spike in overall VNC network traffic?
  context: This question seeks to identify widespread, coordinated VNC activity, such as might occur during an automated lateral movement campaign. A time-series forecasting model is trained on the aggregate count of VNC sessions per hour across the network to learn the normal daily and weekly rhythms of VNC usage. An alert is generated if the observed traffic volume significantly exceeds the model's predicted forecast, indicating a potential surge in VNC activity that warrants investigation.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication logs from Active Directory Domain Controllers
  - Network flow logs from data center and user access layer switches
  range: last 90 days
  queries:
  - ml: MODEL the hourly count of VNC sessions using a time-series algorithm (e.g., SARIMA). GENERATE a forecast with confidence bands. ALERT if the observed session count exceeds the upper confidence band of the forecast.
- question: Has a brute-force VNC login attempt (many failures followed by one success) from a single source been observed?
  context: This question aims to detect a classic brute-force attack pattern against VNC services. The logic is stateful, looking for a specific sequence of events: a high number of failed login attempts (Windows Event ID 4625) originating from a single IP address within a short time frame, immediately followed by a successful login (Windows Event ID 4624) from that same IP. This sequence is a strong indicator that an attacker has successfully guessed or forced a password.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Network sensors at key aggregation points
  - Security event logs from all servers, especially authentication servers like Domain Controllers
  range: last 90 days
  queries:
  - symbolic: CREATE stateful rule. TRIGGER if a source_ip generates >20 failed logons (Event ID 4625, Logon Type 10) in a 5-minute window, AND this is followed by a successful logon (Event ID 4624) from the same source_ip.
- question: Is there statistical evidence of a password spraying attack against VNC services?
  context: This question is designed to detect password spraying, a low-and-slow attack where an adversary tries one or a few common passwords against many different user accounts. The query looks for a single source IP generating failed logon attempts for an unusually high number of distinct user accounts in a short window. If this activity is followed by a successful logon, it strongly suggests a password spray. A secondary check can be to alert on any source IP with an abnormally high ratio of failed-to-successful logons.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Network sensors at key aggregation points
  - Security event logs from all servers, especially authentication servers like Domain Controllers
  range: last 90 days
  queries:
  - statistical: IN a 10-minute window, COUNT distinct user accounts in failed logons (Event ID 4625) per source_ip. ALERT if count > 5 AND is followed by a successful logon (Event ID 4624) from the same source_ip.
- question: Can an HMM model detect the transition from a VNC brute-forcing state to a successful access state for a source IP?
  context: This question uses a more advanced machine learning technique to model the stages of an attack. A Hidden Markov Model (HMM) can be trained to recognize the typical sequence of an attack, with states like 'Scanning', 'Brute-Forcing', and 'Successful Access'. The model observes events from a source IP (like connection attempts, failed logons, successful logons). An alert is generated when the model determines that a source IP has transitioned from the 'Brute-Forcing' state to the 'Successful Access' state, indicating a successful compromise.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Network sensors at key aggregation points
  - Security event logs from all servers, especially authentication servers like Domain Controllers
  range: last 90 days
  queries:
  - ml: MODEL source IP activity with an HMM with states ('Scanning', 'Brute-Forcing', 'Successful Access'). OBSERVE event types (TCP reset, failed logon, successful logon). ALERT when a source IP transitions from 'Brute-Forcing' to 'Successful Access' state with high probability.
- question: Following a successful VNC connection, is the target host exhibiting known suspicious follow-on activity?
  context: This question looks for post-exploitation behavior immediately following a VNC connection. After identifying a successful remote logon via VNC, this query monitors the compromised host for the execution of common reconnaissance commands (e.g., `whoami`, `net group`), the use of credential dumping tools, or the execution of obfuscated PowerShell commands. Detecting such activity provides strong evidence that the remote access session is malicious.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Endpoint process, script block, and network connection logs from critical servers and high-value user workstations
  - Network DNS and flow logs from datacenter and user subnets
  range: last 90 days
  queries:
  - symbolic: IDENTIFY successful VNC logon. Within 30 minutes, MONITOR target host's child processes (Sysmon Event ID 1). ALERT if process name is in ('whoami', 'net.exe', 'ipconfig.exe', 'nltest.exe') OR command line contains ('-enc', 'mimikatz').
- question: Is the post-VNC session activity statistically rare compared to an organizational baseline?
  context: This question aims to identify malicious post-access behavior by flagging statistically unusual activity. After a VNC session is established, all subsequent child processes and network connections spawned by that user are analyzed. Each activity is given a rarity score based on its historical frequency across the organization. A high aggregate rarity score for the session indicates that the user is performing actions that are highly unusual, suggesting potential malicious intent.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Endpoint process, script block, and network connection logs from critical servers and high-value user workstations
  - Network DNS and flow logs from datacenter and user subnets
  range: last 90 days
  queries:
  - statistical: AFTER VNC logon, CALCULATE rarity score for each child process and network connection based on 30-day baseline. SUM scores for the session. ALERT if total session rarity score > 98th percentile.
- question: Can a machine learning model classify post-VNC activity graphs as malicious?
  context: This question applies graph-based machine learning to detect complex post-exploitation patterns. For each VNC session, a process execution graph is built to represent all activity within a one-hour window. This graph captures the relationships between processes. A model is trained on these graphs from known benign and malicious sessions. This allows the system to classify new, unseen activity graphs in near real-time, identifying sophisticated attacks that might be missed by rule-based or simple statistical methods.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Endpoint process, script block, and network connection logs from critical servers and high-value user workstations
  - Network DNS and flow logs from datacenter and user subnets
  range: last 90 days
  queries:
  - ml: FOR each VNC session, CONSTRUCT a process execution graph of all activity in a 1-hour window. USE a trained graph-based classifier to predict if the graph represents malicious activity. ALERT if classification is malicious.