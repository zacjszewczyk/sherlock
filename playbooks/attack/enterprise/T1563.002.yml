name: T1563.002: RDP Hijacking
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps analysts investigate potential lateral movement via RDP Session Hijacking (T1563.002). An adversary may take control of an existing RDP session to inherit the user's permissions and access, bypassing normal authentication. This playbook focuses on detecting this activity by identifying the use of specific hijacking tools like `tscon.exe`, analyzing suspicious sequences of processes like session enumeration followed by connection, monitoring for anomalous RDP session reconnects (e.g., from a new user or IP), and baselining user activity within RDP sessions to spot deviations indicative of post-hijack lateral movement.
type: technique
related:
  - TA0008: Lateral Movement
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation events that match known RDP hijacking tool signatures or commands?
    context: Adversaries utilize specific tools and commands like `tscon.exe` with destination arguments or `rundll32.exe` to call `tsclient.dll,Shadow` to take over active RDP sessions. This question aims to directly detect these known malicious command-line patterns.
    answer_sources:
      - Windows Event ID 4688, Sysmon Event ID 1 from critical infrastructure servers, bastion hosts, jump servers, and workstations of privileged users.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH process_creation_events WHERE command_line MATCHES ('tscon.exe [0-9]+ /dest:', 'rundll32.exe tsclient.dll,Shadow', <other_tool_signatures>)
  - question: Is `tscon.exe` being executed by an unusual parent process or by a non-administrative user?
    context: While `tscon.exe` is a legitimate administrative tool, its execution from an anomalous parent process (e.g., `winword.exe`, `powershell.exe`) or by a standard user can indicate that a compromised process is being used to hijack a session. This question seeks to identify these suspicious executions by baselining normal behavior.
    answer_sources:
      - Windows Event ID 4688, Sysmon Event ID 1 from critical infrastructure servers, bastion hosts, jump servers, and workstations of privileged users.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH process_events WHERE process_name == 'tscon.exe' | CALCULATE rarity of parent_process by user and host | ALERT on rare parent-child relationships or executions by non-admin users.
  - question: Can machine learning classify `tscon.exe` executions as benign or suspicious based on execution context?
    context: To differentiate between legitimate administrative use and malicious hijacking attempts, a classification model can be trained. This question leverages features like the parent process, command-line arguments, and user context to automatically classify `tscon.exe` executions, reducing analyst fatigue from reviewing benign events.
    answer_sources:
      - Windows Event ID 4688, Sysmon Event ID 1 from critical infrastructure servers, bastion hosts, jump servers, and workstations of privileged users.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRAIN classification_model ON labeled_process_events for 'tscon.exe' | PREDICT classification ('benign' or 'suspicious') for new 'tscon.exe' executions.
  - question: Is a user enumerating RDP sessions and immediately attempting to connect to one?
    context: A common adversary pattern is to first enumerate active sessions on a host using `quser.exe` or `query.exe session` and then use `tscon.exe` to hijack a desirable session. This question looks for this specific sequence of actions occurring within a short time frame from the same user and host.
    answer_sources:
      - Windows Event ID 4688, Sysmon Event ID 1 from critical infrastructure servers, bastion hosts, jump servers, and workstations of privileged users.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CORRELATE process_events WHERE (process_name == 'quser.exe' OR process_name == 'query.exe') is_followed_by (process_name == 'tscon.exe') WITHIN 5 minutes ON same_host by same_user.
  - question: Is any user executing the `quser`/`query` to `tscon` process sequence at an anomalously high frequency?
    context: While an administrator might occasionally perform this sequence, automated or scripted hijacking activity would result in a much higher frequency. This question aims to detect such outliers by baselining the frequency of this specific process sequence per user and flagging unusually high rates of execution.
    answer_sources:
      - Windows Event ID 4688, Sysmon Event ID 1 from critical infrastructure servers, bastion hosts, jump servers, and workstations of privileged users.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH process_events for 'quser.exe' -> 'tscon.exe' sequence by user | CALCULATE frequency of sequence per user | ALERT on users with frequency in top 99th percentile.
  - question: Does the sequence of user actions, including session enumeration and connection, deviate from learned normal administrative workflows?
    context: Normal administrative activity follows predictable patterns. By modeling these sequences of process executions, we can identify sessions that exhibit a low probability of being normal. This question specifically targets the `quser`/`query` -> `tscon` pattern as a potential indicator of anomalous behavior that deviates from a trained model of benign workflows.
    answer_sources:
      - Windows Event ID 4688, Sysmon Event ID 1 from critical infrastructure servers, bastion hosts, jump servers, and workstations of privileged users.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRAIN sequence_model (HMM) on user_process_sequences | SCORE new sequences for probability | ALERT on low_probability_sequences containing 'quser' -> 'tscon' pattern.
  - question: Has an active RDP session been reconnected by a different user or from a different source IP address?
    context: A legitimate RDP session reconnect should originate from the same user and typically the same IP. A change in user account or source IP for the same session ID upon reconnect is a strong indicator of hijacking. This question correlates logon, disconnect, and reconnect events to detect this specific anomaly.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4779, Windows Event ID 4634, Windows Event ID 4778, and Zeek conn.log from Domain Controllers, authentication servers, and remote access gateways.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRACK active RDP sessions by SessionName from logon_event (4624) | ON reconnect_event (4778), ALERT if AccountName or ClientAddress differs from original logon_event for same SessionName.
  - question: Has a single RDP session been associated with more than one source IP address during its lifetime?
    context: An RDP session is tied to a specific network connection and should not migrate between different source IPs. Observing multiple source IPs for the same logon ID suggests that the session may have been illegitimately transferred or hijacked.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4779, Windows Event ID 4634, Windows Event ID 4778, and Zeek conn.log from Domain Controllers, authentication servers, and remote access gateways.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each LogonId, track associated source_IPs from logon_events and network_logs | COUNT distinct source_IPs per LogonId | ALERT if count > 1.
  - question: Is the sequence and timing of RDP session events (logon, disconnect, reconnect) anomalous compared to historical patterns?
    context: Adversary-induced session events, like a disconnect immediately followed by a reconnect from a new IP, create a temporal pattern that differs from normal user behavior. This question uses a time-series model to learn normal RDP event patterns and flag sequences that are statistically unlikely.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4779, Windows Event ID 4634, Windows Event ID 4778, and Zeek conn.log from Domain Controllers, authentication servers, and remote access gateways.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRAIN time-series_model (LSTM) on RDP session event stream (logon, logoff, disconnect, reconnect) | SCORE new event sequences for anomalies | ALERT on anomalous sequences like disconnect -> immediate reconnect from new IP.
  - question: Is a user executing known lateral movement tools within an RDP session?
    context: Once an adversary hijacks a session, they will likely use it to move further into the network. This question focuses on detecting the execution of common lateral movement tools (like `psexec.exe`, `wmic.exe`, `schtasks.exe`, or encoded PowerShell commands) originating from a process associated with an RDP logon session.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4688, Sysmon Event ID 1, Sysmon Event ID 3, and Zeek conn.log from all endpoints and servers, particularly bastion hosts, jump servers, domain controllers, and privileged user workstations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: LINK process_events to RDP logon_session (Type 10) | MATCH process_name or command_line against lateral_movement_tool_watchlist | ALERT on match.
  - question: Is the activity within an RDP session (processes executed, network connections made) statistically unusual for that user?
    context: Every user has a typical pattern of behavior. A hijacked session will likely exhibit activity that deviates from the legitimate user's baseline, such as running rare processes or connecting to unusual network destinations. This question seeks to identify these deviations by comparing session activity against a statistical baseline for the user.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4688, Sysmon Event ID 1, Sysmon Event ID 3, and Zeek conn.log from all endpoints and servers, particularly bastion hosts, jump servers, domain controllers, and privileged user workstations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: BASELINE user RDP session activity (processes, cmdline_entropy, network_destinations) | SCORE new session activity against baseline | ALERT on activity exceeding 95th percentile threshold.
  - question: Can an RDP session be identified as an outlier when compared to all other sessions based on its activity profile?
    context: Instead of focusing on a single user, this question uses unsupervised machine learning to cluster all RDP sessions based on their activity characteristics. Sessions that do not fit into any cluster of normal behavior are flagged as outliers, providing a way to detect novel or sophisticated hijacking activity without pre-existing signatures or baselines.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4688, Sysmon Event ID 1, Sysmon Event ID 3, and Zeek conn.log from all endpoints and servers, particularly bastion hosts, jump servers, domain controllers, and privileged user workstations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FEATURIZE RDP session activity (process vectors, network properties) | CLUSTER sessions using unsupervised model (DBSCAN) | IDENTIFY and ALERT on sessions classified as outliers/noise.