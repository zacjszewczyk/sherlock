name: T1563.002: RDP Hijacking
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook is designed to detect lateral movement attempts where an adversary hijacks an active Remote Desktop Protocol (RDP) session. It focuses on identifying several key indicators of this technique. These include the direct execution of session hijacking tools like `tscon.exe` with suspicious command-line arguments or from anomalous parent processes; the reconnaissance-to-action pattern of enumerating sessions (`quser.exe`, `query.exe`) followed immediately by a `tscon.exe` execution; anomalies in RDP session lifecycle events, such as a session being reconnected by a different user or from a new IP address; and unusual post-hijack behavior originating from within an RDP session, such as the use of common lateral movement tools or activity that deviates from the user's established baseline.
type: technique
related:
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any process creation events that match known malicious signatures for RDP hijacking tools?
  context: This question aims to identify the direct use of RDP hijacking commands, such as `tscon.exe` with specific arguments or patterns from tools like Metasploit or Mimikatz. Detecting these explicit command-line strings is a high-fidelity indicator of a hijacking attempt, especially on critical infrastructure, bastion hosts, and privileged user workstations.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Critical infrastructure servers (e.g., Domain Controllers, database servers)
  - Bastion hosts or jump servers
  - Workstations of privileged users (e.g., system administrators, developers)
  range: last 90 days
  queries:
  - pseudocode: SEARCH process creation events WHERE (command_line CONTAINS "tscon.exe [0-9]+ /dest:" OR command_line CONTAINS "rundll32.exe tsclient.dll,Shadow" OR command_line MATCHES known_hijacking_tool_patterns) GROUP BY hostname, username, command_line
- question: Are there any executions of `tscon.exe` from rare or unusual parent processes for a given user or host?
  context: This question looks for anomalies in how `tscon.exe` is launched. Legitimate use is often from specific administrative consoles. An execution spawned by an unexpected process like a web browser, office application (`winword.exe`), or a generic script host (`powershell.exe`) could indicate that an attacker is using an existing compromised process to hijack a session.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Critical infrastructure servers (e.g., Domain Controllers, database servers)
  - Bastion hosts or jump servers
  - Workstations of privileged users (e.g., system administrators, developers)
  range: last 90 days
  queries:
  - pseudocode: FOR EACH user, host; BASELINE parent processes of tscon.exe. SEARCH process creation events WHERE process_name = "tscon.exe" AND parent_process IS RARE for that user/host. SCORE rarity and user privilege level. ALERT on high scores.
- question: Can machine learning classify `tscon.exe` executions as either benign administrative activity or a suspicious hijack attempt?
  context: This question proposes a more advanced, predictive approach. By training a model on features like parent process, command-line arguments, and user context, we can automate the detection of novel or obfuscated hijacking techniques that might not match simple string-based rules or rarity calculations.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Critical infrastructure servers (e.g., Domain Controllers, database servers)
  - Bastion hosts or jump servers
  - Workstations of privileged users (e.g., system administrators, developers)
  range: last 90 days
  queries:
  - pseudocode: TRAIN classification model on labeled tscon.exe events (features; parent_process, arg_count, has_dest_arg, cmdline_ngrams). PREDICT class ('benign' vs 'suspicious') for new tscon.exe executions. ALERT on 'suspicious'.
- question: Is a user enumerating active sessions with `quser.exe` or `query.exe` and then immediately attempting to hijack one with `tscon.exe`?
  context: This question targets a common attacker workflow; first, discover available sessions to hijack, then execute the hijack. Correlating these two events in a short time window (e.g., 5 minutes) on the same host by the same user is a strong indicator of intentional RDP hijacking.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Critical infrastructure servers (e.g., Domain Controllers, database servers)
  - Bastion hosts or jump servers
  - Workstations of privileged users (e.g., system administrators, developers)
  range: last 90 days
  queries:
  - pseudocode: CORRELATE process creation events; IF (process_name = "quser.exe" OR (process_name = "query.exe" AND command_line CONTAINS "session")) THEN LOOK FOR (process_name = "tscon.exe") by same user on same host within 5 minutes. ALERT on match.
- question: Are any users performing the `quser.exe` to `tscon.exe` action sequence at an unusually high frequency?
  context: While a single instance of this sequence is suspicious, a high frequency suggests automated or scripted activity, which is a hallmark of an adversary trying to find and take over a valuable session at scale. This question helps differentiate between a one-off manual action and a broader, more persistent attack by flagging users in the 99th percentile for this behavior.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Critical infrastructure servers (e.g., Domain Controllers, database servers)
  - Bastion hosts or jump servers
  - Workstations of privileged users (e.g., system administrators, developers)
  range: last 90 days
  queries:
  - pseudocode: FOR EACH user; COUNT sequence of (quser.exe -> tscon.exe) over time. CALCULATE frequency percentile across all users. ALERT if user's frequency is in top 99th percentile.
- question: Does a user's sequence of process executions, specifically containing the `quser`/`query` to `tscon` pattern, deviate from their normal modeled behavior?
  context: This question applies sequence analysis to detect anomalies in a user's entire workflow. A Hidden Markov Model (HMM) or similar algorithm can learn the "grammar" of a user's typical command-line activity. A sequence containing session enumeration followed by a hijack would likely be a low-probability, anomalous event for most users, triggering an alert.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Critical infrastructure servers (e.g., Domain Controllers, database servers)
  - Bastion hosts or jump servers
  - Workstations of privileged users (e.g., system administrators, developers)
  range: last 90 days
  queries:
  - pseudocode: TRAIN HMM on user process execution sequences. FOR new sequences; CALCULATE probability score. ALERT if score is low AND sequence contains (quser/query -> tscon) pattern.
- question: Has an active RDP session been reconnected by a different user account or from a different source IP address than the original logon?
  context: This question targets a key artifact of a successful hijack. A legitimate session reconnect should come from the same user and likely the same IP. A change in either of these properties for a given session name strongly implies that a different entity has taken control of the session.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4779
  - Windows Event ID 4778
  - Domain Controllers
  - Authentication servers
  - Remote access gateways (e.g., RDP gateways)
  range: last 90 days
  queries:
  - pseudocode: FOR each RDP logon (4624, Type 10), store SessionName, AccountName, ClientAddress. ON reconnect (4778) for same SessionName, CHECK if AccountName or ClientAddress is different. ALERT on mismatch.
- question: Has a single RDP session been associated with more than one source IP address during its lifetime?
  context: This is a variation of the previous question, focusing specifically on IP address changes using network and logon data. A legitimate RDP session is stateful and tied to a single TCP connection, so it should not "hop" between different source IPs. Observing this is a strong sign of session takeover or another network anomaly.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers
  - Authentication servers
  - Remote access gateways (e.g., RDP gateways)
  range: last 90 days
  queries:
  - pseudocode: FOR each LogonId, track source IPs from logon events (4624) and network logs (Zeek). COUNT distinct source IPs per LogonId. ALERT if count > 1.
- question: Are there anomalous sequences or timings of RDP session events (logon, disconnect, reconnect) for a given host?
  context: This question seeks to find unusual temporal patterns in RDP session management. An attacker hijacking a session might cause a rapid disconnect-reconnect sequence from a new IP, which deviates from the normal, slower-paced patterns of legitimate user activity. A time-series model can learn these normal patterns and flag outliers.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4779
  - Windows Event ID 4634
  - Windows Event ID 4778
  - Domain Controllers
  - Authentication servers
  - Remote access gateways (e.g., RDP gateways)
  range: last 90 days
  queries:
  - pseudocode: TRAIN LSTM autoencoder on time-series of RDP events per host (event type, time delta, user/IP changes). FOR new event sequences, CALCULATE reconstruction error. ALERT on high error, especially for (disconnect -> reconnect from new IP) patterns.
- question: Are known lateral movement tools being executed from within an RDP session?
  context: This question looks for post-compromise activity. Once an attacker hijacks a session, they will likely use it to move further into the network. Detecting the execution of tools like PsExec, WMIC for remote execution, or PowerShell encoding from within an RDP session is a critical finding.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - All endpoints and servers
  - Bastion hosts, jump servers, domain controllers
  - Workstations of privileged users
  range: last 90 days
  queries:
  - pseudocode: JOIN process creation events with logon sessions. FOR events within an RDP session (Logon Type 10), SEARCH command_line against a watchlist of lateral movement tools (psexec.exe, wmic.exe, powershell.exe -enc, etc.). ALERT on match.
- question: Does a user's activity within an RDP session (e.g., processes run, command-line entropy, network connections) deviate significantly from their established baseline?
  context: This question aims to identify when a hijacked session is being used in a way that is abnormal for the legitimate user. An attacker's goals and toolset will likely differ from the user's normal work, resulting in statistical anomalies like running rare processes, using unusually complex commands, or connecting to new network subnets.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - All endpoints and servers
  range: last 90 days
  queries:
  - pseudocode: FOR each user; BASELINE RDP session activity (unique processes, cmdline entropy, destination subnets). FOR new RDP sessions, CALCULATE metrics. ALERT if any metric exceeds 95th percentile of user's baseline.
- question: Can unsupervised machine learning identify RDP sessions with anomalous activity patterns compared to the general population of sessions?
  context: This question uses clustering to find outlier sessions without needing pre-defined rules or user-specific baselines. By vectorizing session activity (processes, network connections, etc.), a model like DBSCAN can group "normal" sessions together. Sessions that don't fit into any cluster are flagged as anomalous and warrant investigation, potentially indicating a hijack.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - All endpoints and servers
  range: last 90 days
  queries:
  - pseudocode: FEATURIZE RDP sessions (process vectors, network stats). RUN DBSCAN clustering on session features. IDENTIFY and ALERT on sessions classified as noise/outliers.