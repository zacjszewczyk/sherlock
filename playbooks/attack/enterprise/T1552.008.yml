name: T1552.008: Chat Messages
id: 5a3f2b1c-8d7e-4f6a-9b3c-1e0d9a4b8c7d
description: |
  This playbook helps determine if an adversary has leveraged enterprise chat services to search for and collect unsecured credentials. It provides investigative questions and queries to detect suspicious activity, such as the execution of known credential theft tools targeting chat applications, the use of scripting engines to search for passwords and tokens in chat data directories, unauthorized processes reading chat application files, and anomalous network traffic patterns to chat services that could indicate bulk data scraping or exfiltration.
type: technique
related:
  - TA0006: Credential Access
contributors: Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any running processes that match known credential theft tools targeting chat applications?
    context: |
      This question aims to identify direct evidence of compromise by checking for the execution of tools specifically designed to steal credentials from chat applications like Slack or Teams (e.g., Slack-Pirate, Teams-Stealer). A match against a threat intelligence watchlist is a high-confidence indicator of malicious activity.
    answer_sources: |
      Windows Event ID 4688, Sysmon Event ID 1. Endpoint file systems on user workstations and VDI instances where chat clients are installed. Monitored directories include temporary download folders and user profile directories.
    range: last 90 days
    queries:
      - Search process creation logs (Event ID 4688, Sysmon ID 1) for process names or file hashes matching a known chat credential theft tool watchlist.
  - question: Has any new process executed on an unusually small number of endpoints, suggesting it is non-standard or unauthorized tooling?
    context: |
      This question helps uncover potentially malicious tools that are not yet on a threat intelligence watchlist. Adversaries often introduce custom or rare tools that will have a very small footprint in the environment. Identifying such statistical rarities, where a process hash is seen on fewer than 5 hosts, can be an early indicator of an attack.
    answer_sources: |
      Windows Event ID 4688, Sysmon Event ID 1. Endpoint file systems on user workstations and VDI instances where chat clients are installed. Monitored directories include temporary download folders and user profile directories.
    range: last 90 days
    queries:
      - For each new process, count distinct hosts it has run on in the last 30 days. Flag processes with a low host count (e.g., < 5).
  - question: Does a machine learning model classify any new process executions as malicious based on their characteristics?
    context: |
      This question uses a machine learning approach to detect malicious processes that might evade signature or rarity-based detection. By analyzing features such as command-line length, process name entropy, parent process rarity, and executable signing status, the model can identify suspicious patterns indicative of malicious activity, even for unknown threats.
    answer_sources: |
      Windows Event ID 4688, Sysmon Event ID 1. Endpoint file systems on user workstations and VDI instances where chat clients are installed. Monitored directories include temporary download folders and user profile directories.
    range: last 90 days
    queries:
      - Score new process events using a trained ML model. Investigate processes with a high malicious confidence score (e.g., > 0.9).
  - question: Has a scripting engine (like PowerShell) been used to search for credential-related keywords within chat application data directories?
    context: |
      This question seeks to detect adversaries using scripts to automate the search for credentials. The combination of a scripting engine (e.g., powershell.exe), keywords like 'password' or 'token', and a path to chat application data (e.g., %APPDATA%\\Microsoft\\Teams) is a strong indicator of targeted credential harvesting.
    answer_sources: |
      Windows Event ID 4688, Sysmon Event ID 1, Windows PowerShell Event ID 4104. Endpoint command-line logs and PowerShell script block logs. Key locations for monitoring include user workstations and any servers where administrative scripts are run.
    range: last 90 days
    queries:
      - Search process and script logs for a scripting engine process where the command line/script content contains both credential keywords and a path to chat app data.
  - question: Are there any PowerShell script blocks with unusually high entropy, suggesting obfuscation?
    context: |
      This question helps identify malicious scripts that have been obfuscated to evade detection. High Shannon entropy is a common characteristic of packed or encoded scripts. By baselining normal script entropy and flagging outliers (e.g., scores in the 95th percentile or higher), analysts can uncover hidden malicious code.
    answer_sources: |
      Windows PowerShell Event ID 4104. Endpoint command-line logs and PowerShell script block logs. Key locations for monitoring include user workstations and any servers where administrative scripts are run.
    range: last 90 days
    queries:
      - Calculate entropy for all script block logs. Flag scripts with entropy scores in the top 5th percentile for review.
  - question: Does an NLP model classify the intent of any command-line arguments or script blocks as 'Credential Harvesting'?
    context: |
      This question applies advanced natural language processing to understand the semantic meaning of a script or command, rather than just relying on keyword matching. An NLP model can identify sophisticated credential harvesting attempts that may not use obvious keywords, providing a deeper level of analysis for high-fidelity alerts.
    answer_sources: |
      Windows Event ID 4688, Sysmon Event ID 1, Windows PowerShell Event ID 4104. Endpoint command-line logs and PowerShell script block logs. Key locations for monitoring include user workstations and any servers where administrative scripts are run.
    range: last 90 days
    queries:
      - Analyze command-line and script block text with a trained NLP model. Flag any content classified as 'Credential Harvesting' with high confidence.
  - question: Has any process not on the approved allow-list attempted to read files from chat application data directories?
    context: |
      This question focuses on unauthorized file access. By enabling SACLs on sensitive chat data directories and defining a strict allow-list of processes permitted to access them (e.g., teams.exe, slack.exe), any other process triggering a read-access event (Event ID 4663) can be flagged as highly suspicious.
    answer_sources: |
      Windows Event ID 4663, Sysmon Event ID 1. Endpoint file systems where chat client data is stored, such as '%APPDATA%\\Microsoft\\Teams', '%APPDATA%\\Slack', and '%LOCALAPPDATA%\\Microsoft\\Teams'.
    range: last 90 days
    queries:
      - Enable SACL logging on chat app directories. Alert on any read access (Event ID 4663) from a process not on the pre-defined allow-list.
  - question: Has a process accessed a chat data directory for the first time, deviating from the established baseline of normal activity?
    context: |
      This question helps detect anomalous behavior by identifying novel process interactions. After establishing a baseline of normal processes that access chat directories over a 30-day period, any new process performing this action is considered a deviation and warrants investigation, as it could be a newly introduced malicious tool.
    answer_sources: |
      Windows Event ID 4663, Sysmon Event ID 1. Endpoint file systems where chat client data is stored, such as '%APPDATA%\\Microsoft\\Teams', '%APPDATA%\\Slack', and '%LOCALAPPDATA%\\Microsoft\\Teams'.
    range: last 90 days
    queries:
      - Baseline normal process access to chat directories over 30 days. Alert when a new file access event (Event ID 4663) involves a process name not seen in the baseline.
  - question: Are there any file access events related to chat directories that a clustering model identifies as anomalous 'noise'?
    context: |
      This question uses unsupervised machine learning (e.g., DBSCAN) to find unusual access patterns that don't fit with normal behavior. The algorithm groups typical access events into clusters based on features like process name and user. Any event that doesn't fit into a cluster is flagged as an anomaly or 'noise', potentially representing a threat that doesn't follow established patterns.
    answer_sources: |
      Windows Event ID 4663, Sysmon Event ID 1. Endpoint file systems where chat client data is stored, such as '%APPDATA%\\Microsoft\\Teams', '%APPDATA%\\Slack', and '%LOCALAPPDATA%\\Microsoft\\Teams'.
    range: last 90 days
    queries:
      - Apply a DBSCAN clustering model to file access events. Flag any events classified as noise/outliers for investigation.
  - question: Have any endpoints connected to suspicious domains that mimic legitimate chat service names (typosquatting)?
    context: |
      This question aims to detect command and control (C2) communication or data exfiltration to adversary-controlled domains masquerading as legitimate services. By monitoring for DNS requests or TLS connections to domains that are similar to, but not on the allow-list of, approved chat services, analysts can identify potential phishing or malware activity.
    answer_sources: |
      Zeek conn.log, Zeek http.log, Zeek ssl.log, Zeek dns.log. Network sensor data from egress points, DNS server logs, web proxy logs, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - Search DNS and TLS logs for requests to domains that are typosquatted versions of approved chat services and are not on the allow-list.
  - question: Has any host exhibited a significant spike in the volume of data sent to approved chat services, exceeding its normal baseline?
    context: |
      This question looks for signs of bulk data collection or exfiltration. A sudden, large increase in the amount of data sent from a single host to a chat service, far exceeding its historical average (e.g., 3 standard deviations above the mean), could indicate that an adversary is scraping large amounts of chat history or using the service as an exfiltration channel.
    answer_sources: |
      Zeek conn.log. Network sensor data from egress points, DNS server logs, web proxy logs, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - For each host, baseline daily bytes sent to chat service IPs. Alert when daily volume exceeds the 30-day rolling average by more than 3 standard deviations.
  - question: Does a time-series model detect any statistically significant anomalies in a host's connection frequency or data volume to chat services?
    context: |
      This question employs a more sophisticated anomaly detection method (e.g., ARIMA, LSTM) to identify subtle deviations from normal network behavior. A time-series model can learn the typical rhythm of a user's interactions with a chat service and flag any activity that falls outside the predicted range (e.g., 99% prediction interval), indicating a statistically significant anomaly.
    answer_sources: |
      Zeek conn.log, Zeek http.log, Zeek ssl.log, Zeek dns.log. Network sensor data from egress points, DNS server logs, web proxy logs, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - Use a time-series model (e.g., ARIMA, LSTM) to monitor host-service connection metrics. Alert when observed activity falls outside the 99% prediction interval.