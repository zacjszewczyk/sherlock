name: T1218.009: Regsvcs-Regasm
id: 8b72506a-5431-4a1d-8f9f-0c4e1a7b8d9e
description: This playbook investigates whether an adversary is bypassing application controls or other defenses by proxying code execution through the legitimate Windows utilities Regsvcs.exe or Regasm.exe. Detections focus on identifying executions involving files with known malicious hashes, files located in unusual or user-writable directories, executions spawned by illegitimate parent processes (e.g., Office applications), subsequent suspicious network connections indicative of C2 activity, or a correlated sequence of these behaviors occurring in a short time frame.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is Regsvcs.exe or Regasm.exe being used to execute a file with a known malicious hash?
    context: This question aims to detect the use of Regsvcs.exe or Regasm.exe to run a payload that is already identified as malicious. The process involves monitoring for the execution of these utilities, extracting the target DLL or EXE from the command line, calculating its SHA256 hash, and cross-referencing it with threat intelligence feeds. A match provides a high-confidence indicator that a known threat is active on the system.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All managed Windows hosts (endpoints and servers); Threat Intelligence Platform (TIP) data feeds.
    range: last 90 days
    queries:
      - symbolic: |
          SEARCH process_creation_events (process_name='Regsvcs.exe' OR process_name='Regasm.exe')
          EXTRACT file_path from command_line
          CALCULATE sha256_hash of file_path
          LOOKUP sha256_hash in threat_intelligence_platform
          IF match_found, ALERT 'High-Severity: Known Malicious Payload via Regsvcs/Regasm'

  - question: Is Regsvcs.exe or Regasm.exe executing a library that is unusually rare across the enterprise?
    context: This question seeks to identify potentially targeted or novel malicious payloads by focusing on their rarity. The rationale is that legitimate libraries used by Regsvcs/Regasm are typically part of widespread software installations and will be common across many hosts. By calculating the prevalence of every library hash executed by these utilities, payloads seen on only a few machines (e.g., fewer than 5) can be flagged as anomalous and suspicious, warranting further investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All managed Windows hosts (endpoints and servers); Threat Intelligence Platform (TIP) data feeds.
    range: last 90 days
    queries:
      - statistical: |
          FOR EACH execution of 'Regsvcs.exe' or 'Regasm.exe'
          EXTRACT library_hash from command_line
          QUERY historical_data for count of hosts where library_hash was seen in last 90 days
          IF host_count < threshold (e.g., 5), FLAG for investigation

  - question: Can a machine learning model classify a library executed by Regsvcs.exe or Regasm.exe as malicious based on its binary features?
    context: This question applies machine learning to proactively identify malicious libraries, even if they are unknown to threat intelligence feeds. When Regsvcs.exe or Regasm.exe registers a new library, a pre-trained classification model analyzes static properties of the binary file itself—such as PE header information, imported functions, string entropy, and digital signature validity. Based on these features, the model assigns a probability score of being malicious, allowing for the escalation of high-risk files for deeper analysis.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All managed Windows hosts (endpoints and servers); Threat Intelligence Platform (TIP) data feeds.
    range: last 90 days
    queries:
      - machine_learning: |
          ON_EVENT 'Regsvcs.exe' or 'Regasm.exe' execution
          EXTRACT file_path from command_line
          EXTRACT binary_features (PE_header, imphash, entropy, signature) from file
          INPUT features into pre-trained_reputation_model
          IF model_score > malicious_threshold, ESCALATE for sandbox_analysis

  - question: Is Regsvcs.exe or Regasm.exe executing a file from a suspicious or non-standard directory?
    context: This question focuses on the location of the file being executed. Adversaries commonly place their payloads in user-writable directories like C:\Users\Public\, %APPDATA%, or %TEMP% to operate without elevated privileges and to evade detection. Legitimate uses of Regsvcs/Regasm typically involve standard program installation paths. Therefore, monitoring for executions where the target file resides in one of these unusual locations serves as a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File systems of all managed Windows hosts, specifically monitoring user-writable directories (e.g., C:\Users\), temporary locations, and other unusual paths for binary execution.
    range: last 90 days
    queries:
      - symbolic: |
          SEARCH process_creation_events (process_name='Regsvcs.exe' OR process_name='Regasm.exe')
          EXTRACT file_path from command_line
          IF file_path MATCHES regex for suspicious_locations ('/Users/Public/', '/AppData/', '/Temp/', etc.), ALERT 'Suspicious Location Execution'

  - question: Is Regsvcs.exe or Regasm.exe being invoked with a command-line path that is statistically rare compared to historical executions?
    context: This question aims to detect anomalous behavior by baselining the file paths used in Regsvcs/Regasm command lines. Over time, an organization develops a profile of "normal" directories from which these utilities are run (e.g., Program Files). An execution involving a path that has a very low frequency in the historical baseline is flagged as an anomaly. This statistical approach helps identify novel attacker techniques or payloads dropped in unconventional locations not covered by static lists.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File systems of all managed Windows hosts, specifically monitoring user-writable directories (e.g., C:\Users\), temporary locations, and other unusual paths for binary execution.
    range: last 90 days
    queries:
      - statistical: |
          FOR EACH execution of 'Regsvcs.exe' or 'Regasm.exe'
          EXTRACT parent_directory from command_line
          QUERY historical_data for frequency of parent_directory
          IF frequency is in bottom_percentile (e.g., 5%), FLAG as anomalous

  - question: Can a machine learning clustering model identify anomalous Regsvcs.exe or Regasm.exe invocations based on their command-line features?
    context: This question uses unsupervised machine learning to find outliers in how Regsvcs/Regasm are being used. By analyzing features of the command-line invocation—such as path tokens, argument count, and specific flags—a clustering algorithm like DBSCAN can group similar, legitimate invocations together. Any new execution that does not fit into an established cluster is identified as a "noise point" or outlier, making it a strong candidate for a malicious and previously unseen usage pattern.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File systems of all managed Windows hosts, specifically monitoring user-writable directories (e.g., C:\Users\), temporary locations, and other unusual paths for binary execution.
    range: last 90 days
    queries:
      - machine_learning: |
          ON_EVENT 'Regsvcs.exe' or 'Regasm.exe' execution
          EXTRACT command_line_features (path_tokens, arg_count, flags)
          INPUT features into clustering_model (e.g., DBSCAN)
          IF model classifies as outlier/noise, FLAG as potential threat

  - question: Is Regsvcs.exe or Regasm.exe being spawned by a suspicious parent process like an Office application or script interpreter?
    context: This question investigates the process lineage to find evidence of compromise. Legitimate executions of Regsvcs.exe and Regasm.exe are typically initiated by installers (e.g., setup.exe) or developer tools. If the parent process is an application like Microsoft Word (winword.exe), PowerShell, or a browser, it strongly suggests a malicious execution chain, such as a user opening a weaponized document or a script being run after a web-based exploit.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process ancestry data on all managed Windows hosts; focus correlation on endpoints running common productivity software (e.g., Microsoft Office, web browsers, PDF readers).
    range: last 90 days
    queries:
      - symbolic: |
          SEARCH process_creation_events (process_name='Regsvcs.exe' OR process_name='Regasm.exe')
          IF parent_process_name IN ('winword.exe', 'excel.exe', 'powershell.exe', 'wscript.exe', etc.), ALERT 'Suspicious Parent Process for Regsvcs/Regasm'

  - question: Is the observed parent-child process relationship for Regsvcs.exe/Regasm.exe statistically improbable on a given host?
    context: This question identifies anomalous process chains by creating a baseline of normal behavior on a per-host basis. For each machine, it calculates the historical probability of any given parent process spawning Regsvcs.exe or Regasm.exe. An alert is generated when a new execution occurs with a parent process that has never been seen spawning it before on that specific host, or if the observed pairing has a very low probability according to the baseline. This helps detect attacker activity that deviates from a machine's established patterns.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process ancestry data on all managed Windows hosts; focus correlation on endpoints running common productivity software (e.g., Microsoft Office, web browsers, PDF readers).
    range: last 90 days
    queries:
      - statistical: |
          FOR EACH execution of 'Regsvcs.exe' or 'Regasm.exe' on a host
          GET parent_process_name
          CALCULATE historical probability P(child | parent) on that host
          IF probability < threshold OR parent is new for that child, ALERT as anomalous relationship

  - question: Does the process execution chain leading to Regsvcs.exe or Regasm.exe deviate from normal behavior as identified by a sequence anomaly detection model?
    context: This question uses an advanced machine learning model to detect malicious process chains. All process activity (e.g., Grandparent -> Parent -> Child) is treated as a sequence. A model, such as an LSTM autoencoder, is trained on millions of benign sequences from across the enterprise to learn what "normal" looks like. When a new execution sequence involving Regsvcs/Regasm is observed, the model's ability to reconstruct it is measured. A high reconstruction error indicates the sequence is highly unusual and likely part of a malicious attack.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process ancestry data on all managed Windows hosts; focus correlation on endpoints running common productivity software (e.g., Microsoft Office, web browsers, PDF readers).
    range: last 90 days
    queries:
      - machine_learning: |
          ON_EVENT 'Regsvcs.exe' or 'Regasm.exe' execution
          CONSTRUCT process_chain (e.g., Grandparent -> Parent -> Child)
          INPUT sequence into LSTM_autoencoder_model
          IF reconstruction_error > anomaly_threshold, ALERT 'Anomalous Process Execution Sequence'

  - question: Following a Regsvcs.exe or Regasm.exe execution, does the host make a network connection to a known malicious IP or domain?
    context: This question seeks to confirm malicious activity by linking the code execution to command-and-control (C2) communication. It correlates a Regsvcs/Regasm process creation event with any subsequent network connections made from the same host within a short time window (e.g., 5 minutes). If the destination IP address or domain is found on a threat intelligence blocklist, it serves as strong evidence that the executed payload is malicious and is establishing a C2 channel.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, DNS resolvers, and individual host network stacks. Requires correlation within a SIEM or data lake.
    range: last 90 days
    queries:
      - symbolic: |
          SEARCH process_creation (process_name='Regsvcs.exe' OR 'Regasm.exe') as event_A
          SEARCH network_connection from same host within 5 minutes as event_B
          LOOKUP destination_ip/domain from event_B in threat_intelligence_platform
          IF match_found, ALERT 'C2 Activity Following Regsvcs/Regasm Execution'

  - question: Following a Regsvcs.exe or Regasm.exe execution, does the host initiate network connections to a statistically rare destination or involve high-entropy domains?
    context: This question aims to detect likely C2 activity without relying on known-bad indicators. After a Regsvcs/Regasm execution, it analyzes subsequent network connections for statistical anomalies. This includes checking if the destination IP, Autonomous System Number (ASN), or country is rare based on the organization's 90-day traffic baseline. It also checks for high-entropy domain names in preceding DNS queries, which is a hallmark of Domain Generation Algorithms (DGAs) used by malware. A combination of these factors indicates suspicious C2 behavior.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, DNS resolvers, and individual host network stacks. Requires correlation within a SIEM or data lake.
    range: last 90 days
    queries:
      - statistical: |
          AFTER 'Regsvcs.exe'/'Regasm.exe' execution on a host
          ANALYZE subsequent network connections
          CALCULATE rarity of destination_ip, destination_asn, destination_country
          CALCULATE entropy of queried_domain
          IF rarity is high AND entropy > 4.0, ALERT 'Statistical C2 Anomaly'

  - question: Does a time-series anomaly detection model detect abnormal network behavior on a host shortly after a Regsvcs.exe or Regasm.exe execution?
    context: This question uses machine learning to spot C2 activity by monitoring a host's network traffic patterns. A time-series model (like Prophet or SARIMA) is trained to understand the normal rhythm of a host's network metrics (e.g., bytes sent, connection counts). After a Regsvcs/Regasm execution is detected, the model actively monitors these metrics. A sudden, anomalous spike or deviation from the predicted pattern within a 10-minute window suggests that the executed code has initiated C2 communications or data exfiltration.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, DNS resolvers, and individual host network stacks. Requires correlation within a SIEM or data lake.
    range: last 90 days
    queries:
      - machine_learning: |
          AFTER 'Regsvcs.exe'/'Regasm.exe' execution on a host
          MONITOR time-series_network_metrics (bytes_sent, conn_count) for that host
          INPUT metrics into anomaly_detection_model
          IF model detects anomaly within 10 minutes, ALERT 'Network Behavior Anomaly Post-Execution'

  - question: Is there a correlated sequence of events: file creation in a user-writable directory, followed by its execution via Regsvcs.exe/Regasm.exe, and then an external network connection?
    context: This question provides a high-fidelity detection by combining multiple suspicious behaviors into a single, logical attack chain. It looks for three specific events linked by the same host and file path within a short time window (e.g., 10 minutes): 1) A new DLL/EXE file is created in a risky location, 2) That exact file is then executed using the Regsvcs/Regasm technique, and 3) The host then makes an external network connection. Finding this full sequence greatly reduces false positives and is a strong indicator of a successful compromise.
    answer_sources:
      - Sysmon Event ID 11
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Sysmon Event ID 3
      - SIEM/Data Lake containing correlated host telemetry (process, file system) and network telemetry (DNS, flow logs) from across the enterprise.
    range: last 90 days
    queries:
      - symbolic: |
          JOIN (FileCreate event in user_path), (ProcessCreate event for Regsvcs/Regasm with same file), (NetworkConnect event to external IP)
          BY hostname, file_path
          WITHIN 10 minutes
          IF all three events are present, ALERT 'Full Attack Chain Detected'

  - question: Does the cumulative risk score of a sequence of related events (file create, process execute, network connect) exceed a high-risk threshold?
    context: This question uses a risk-scoring model to quantify the threat level of an unfolding event chain. Instead of a simple binary match, each suspicious event is assigned a score (e.g., file creation in %TEMP% gets 5 points, Regsvcs execution gets 10). A system then sums the scores of related events that occur on a host within a rolling time window. If the cumulative score surpasses a pre-defined threshold, it triggers a high-fidelity alert, indicating that the combined weight of evidence points to a malicious attack.
    answer_sources:
      - Sysmon Event ID 11
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Sysmon Event ID 3
      - SIEM/Data Lake containing correlated host telemetry (process, file system) and network telemetry (DNS, flow logs) from across the enterprise.
    range: last 90 days
    queries:
      - statistical: |
          DEFINE risk_scores for events (e.g., FileCreate in %TEMP% = 5, Regsvcs exec = 10, external conn to rare ASN = 8)
          SUM scores for linked events on a host within a 10-minute window
          IF total_score > threshold, ALERT 'High Cumulative Risk Score Activity'

  - question: Can a graph-based anomaly detection model identify the specific behavioral chain of 'file create -> Regsvcs execute -> network connect' as a structurally rare or anomalous pattern?
    context: This question applies graph-based machine learning to discover complex attack patterns. All host and network activities are modeled as a graph, with entities like files, processes, and IPs as nodes, and events like 'created' or 'connected_to' as edges. The model learns the common structures and patterns within this graph. An entire subgraph that matches the specific malicious TTP—a file being created, executed by Regsvcs, which then connects to an IP—can be identified as a structural anomaly, even if the individual components are not inherently suspicious.
    answer_sources:
      - Sysmon Event ID 11
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Sysmon Event ID 3
      - SIEM/Data Lake containing correlated host telemetry (process, file system) and network telemetry (DNS, flow logs) from across the enterprise.
    range: last 90 days
    queries:
      - machine_learning: |
          MODEL host_activity as a graph (nodes=entities, edges=events)
          USE graph_anomaly_detection to learn normal patterns
          SEARCH for subgraphs matching the pattern 'File -> created_by -> Process -> executed -> Regsvcs -> connected_to -> IP'
          IF subgraph is structurally rare, ALERT 'Anomalous TTP Graph Pattern Detected'