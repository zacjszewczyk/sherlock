name: T1562.007: Disable or Modify Cloud Firewall
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has attempted to evade
  defenses by modifying cloud firewalls. This involves detecting firewall rule modifications
  that originate from IP addresses on threat intelligence feeds, contain signatures
  of offensive security tools, are overly permissive (e.g., '0.0.0.0/0'), or are
  attributed to anomalous user activity. It also correlates firewall changes with
  subsequent suspicious network traffic and host-based events like failed logon attempts.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Has a cloud firewall rule been modified to allow traffic from an IP address
    known to be malicious?
  context: This question aims to detect a common defense evasion technique where an
    adversary modifies a cloud firewall to allow access from an IP address they control.
    By comparing the source IP or CIDR range added to a firewall rule against a high-confidence
    threat intelligence feed, analysts can quickly identify and respond to unauthorized
    changes that could lead to further compromise. A match indicates a direct attempt
    to weaken the security posture using known malicious infrastructure.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)
  - Threat Intelligence Platform Logs
  - Zeek conn.log
  - Cloud IAM and Network Management APIs
  - Organizational Threat Intelligence Platform
  - Network Gateway/Egress Points
  range: last 90 days
  queries:
  - query: 'pseudocode: SEARCH Cloud Audit Logs for firewall modification events.
      FOR EACH event, EXTRACT source IP/CIDR. IF IP/CIDR in Threat_Intelligence_Feed,
      THEN alert.'
- question: Following a firewall rule change from a malicious IP, was there an unusually
    large amount of data transferred, suggesting data staging or exfiltration?
  context: This question seeks to identify post-compromise activity immediately following
    a malicious firewall modification. An adversary, having gained access, may attempt
    to stage or exfiltrate data. By comparing the volume of data transferred from
    the malicious IP against the historical baseline for the target host, analysts
    can detect anomalous data flows that are indicative of such activity. A significant
    spike in traffic volume is a strong indicator that the firewall change was a precursor
    to data movement.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)
  - Threat Intelligence Platform Logs
  - Zeek conn.log
  - Cloud IAM and Network Management APIs
  - Organizational Threat Intelligence Platform
  - Network Gateway/Egress Points
  range: last 90 days
  queries:
  - query: 'pseudocode: ON alert for malicious IP firewall change, SEARCH Zeek conn.log
      for connections from malicious_IP in next 60 mins. CALCULATE 95th percentile
      of orig_bytes for target host over last 30 days. IF connection_bytes > percentile,
      THEN alert.'
- question: Can a machine learning model predict if a firewall change is malicious
    based on contextual features like user role, time of day, and IP reputation?
  context: This question leverages machine learning to proactively identify malicious
    firewall modifications by analyzing a combination of contextual factors. A symbolic
    rule might miss a change from a novel malicious IP, but an ML model can flag it
    as suspicious based on other features like the change occurring outside business
    hours by a user who rarely performs such actions. This provides a more nuanced,
    behavior-based detection capability beyond simple blocklists.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)
  - Threat Intelligence Platform Logs
  - Zeek conn.log
  - Cloud IAM and Network Management APIs
  - Organizational Threat Intelligence Platform
  - Network Gateway/Egress Points
  range: last 90 days
  queries:
  - query: 'pseudocode: PREDICT with logistic regression model on firewall change
      event features (is_from_threat_feed, user_role, time_of_day, is_outside_business_hours,
      source_ip_reputation). IF prediction_score > 0.85, THEN alert.'
- question: Did a cloud firewall rule modification contain signatures of known offensive
    security tools or malicious terms in its name, description, or user-agent?
  context: Adversaries and red teamers often use automated tools (e.g., 'pacu', 'Prowler')
    that leave identifiable traces, such as unique user-agent strings, in audit logs.
    They may also use common malicious terms like 'pwn' or 'backdoor' in rule names
    or descriptions. This question focuses on finding these explicit signatures to
    quickly identify tool-based or unsophisticated attempts to modify firewall rules.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `userAgent` field, Azure Activity Logs
    `httpRequest` field, GCP Audit Logs `requestMetadata.callerSuppliedUserAgent`
    field)
  - Cloud IAM and Network Management APIs
  - Cloud Service Provider API Endpoints
  range: last 90 days
  queries:
  - query: 'pseudocode: SEARCH Cloud Audit Logs for firewall modification events.
      APPLY regex list of malicious terms to user-agent, rule name, and description
      fields. IF match found, THEN alert.'
- question: Does a newly created firewall rule have an unusual name or description
    entropy, suggesting machine generation or simple evasion?
  context: This question attempts to identify malicious activity by analyzing the
    complexity of text fields in a firewall rule. Automated attack tools may generate
    randomized rule names, leading to unusually high entropy. Conversely, an attacker
    manually creating rules for temporary access might use overly simplistic names
    like 'test', leading to low entropy. By flagging deviations from the normal entropy
    baseline, analysts can uncover rules that do not conform to standard naming conventions.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `userAgent` field, Azure Activity Logs
    `httpRequest` field, GCP Audit Logs `requestMetadata.callerSuppliedUserAgent`
    field)
  - Cloud IAM and Network Management APIs
  - Cloud Service Provider API Endpoints
  range: last 90 days
  queries:
  - query: 'pseudocode: FOR EACH new firewall rule, CALCULATE Shannon entropy of rule
      name and description. ESTABLISH baseline mean and standard deviation of entropy.
      IF new rule entropy is > 3 standard deviations from mean, THEN alert.'
- question: Can an NLP model classify a firewall rule's name and description as malicious?
  context: This question uses Natural Language Processing (NLP) to move beyond simple
    keyword matching and understand the likely intent of a firewall rule based on
    its name and description. By training a model on examples of benign (e.g., 'allow-web-traffic-prod')
    and malicious (e.g., 'pwn-ssh-temp') rule names, the system can learn to classify
    new rules in real-time, catching novel or cleverly disguised malicious rule names
    that regex-based methods might miss.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `userAgent` field, Azure Activity Logs
    `httpRequest` field, GCP Audit Logs `requestMetadata.callerSuppliedUserAgent`
    field)
  - Cloud IAM and Network Management APIs
  - Cloud Service Provider API Endpoints
  range: last 90 days
  queries:
  - query: 'pseudocode: ON new firewall rule creation, APPLY pre-trained NLP text
      classification model to rule name and description. IF classification is "malicious"
      with confidence > 0.90, THEN alert.'
- question: Was a firewall rule created that violates a strict policy by allowing
    open access from the internet ('0.0.0.0/0') to a high-risk port?
  context: This question is designed to enforce a fundamental security best practice.
    Opening high-risk management ports like RDP (3389) or SSH (22) to the entire
    internet ('0.0.0.0/0') is a critical misconfiguration that creates an enormous
    attack surface. This query provides a non-negotiable tripwire, generating an
    immediate, high-severity alert for any change that violates this static, 'never-allow'
    policy, enabling rapid remediation.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `ipPermissions.ipRanges`, Azure Activity
    Logs `properties.sourceAddressPrefix`)
  - Zeek conn.log
  - Cloud Security Group and Firewall Rule Configurations
  - Virtual Private Cloud (VPC) Firewall Rules
  - Network Gateway/Egress Points
  range: last 90 days
  queries:
  - query: 'pseudocode: SEARCH Cloud Audit Logs for firewall modifications. IF event
      contains source CIDR "0.0.0.0/0" AND destination port in [22, 3389, 445, ...],
      THEN generate high-severity alert.'
- question: Did a firewall modification expose a port to the internet that is rarely
    or never exposed, based on historical data?
  context: While some ports are commonly exposed to the internet (e.g., 80, 443),
    others are almost never exposed in a secure environment. This question identifies
    risky changes by focusing on rarity. By maintaining a historical frequency distribution
    of which ports are opened to '0.0.0.0/0', the system can flag a modification that
    exposes a statistically rare port (e.g., a database port like 1433) as a high-risk
    anomaly, even if it's not on a static 'never-allow' list.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `ipPermissions.ipRanges`, Azure Activity
    Logs `properties.sourceAddressPrefix`)
  - Zeek conn.log
  - Cloud Security Group and Firewall Rule Configurations
  - Virtual Private Cloud (VPC) Firewall Rules
  - Network Gateway/Egress Points
  range: last 90 days
  queries:
  - query: 'pseudocode: MAINTAIN historical frequency distribution of ports exposed
      to "0.0.0.0/0". ON new rule exposing a port, CALCULATE its rarity. IF port is
      in bottom 5th percentile of exposure frequency, THEN generate critical alert.'
- question: Can an anomaly detection model identify a new firewall rule as a significant
    outlier compared to the established baseline of approved rules?
  context: This question uses machine learning to detect misconfigurations without
    relying on pre-defined rules or signatures. An anomaly detection model, such as
    an Isolation Forest, learns the characteristics of all normal, approved firewall
    rules in the environment. It can then spot a new rule that is a significant outlier—for
    example, an unusual combination of port, protocol, and wide source range—and
    flag it for review, catching novel or complex misconfigurations that other methods
    might miss.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `ipPermissions.ipRanges`, Azure Activity
    Logs `properties.sourceAddressPrefix`)
  - Zeek conn.log
  - Cloud Security Group and Firewall Rule Configurations
  - Virtual Private Cloud (VPC) Firewall Rules
  - Network Gateway/Egress Points
  range: last 90 days
  queries:
  - query: 'pseudocode: TRAIN Isolation Forest model on baseline of approved firewall
      rules (Port, Protocol, Source_CIDR_is_Any). ON new rule creation, SCORE the
      rule with the model. IF score is below anomaly threshold, THEN alert.'
- question: Was a firewall modification performed by a user or service principal
    not on the explicit allow-list of authorized accounts?
  context: This question enforces a policy of least privilege for a highly sensitive
    action. Modifying firewall rules should be restricted to a very small, well-defined
    set of administrators or automated service principals. By maintaining an explicit
    allow-list and alerting on any modification made by an identity not on that list,
    security teams can immediately detect unauthorized changes, which could indicate
    a compromised account or insider threat.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `userIdentity`, `sourceIPAddress`, `eventTime`)
  - Windows Event ID 4624
  - Zeek conn.log
  - Cloud IAM and Network Management APIs
  - VPN/Zero Trust Network Access (ZTNA) Concentrators
  - Active Directory Domain Controllers
  range: last 90 days
  queries:
  - query: 'pseudocode: MAINTAIN allow-list of users/principals authorized for firewall
      changes. ON firewall modification event, CHECK if user/principal is in allow-list.
      IF NOT, THEN alert.'
- question: Did a firewall modification event have a high-risk score based on deviations
    from the user's normal behavior (e.g., time of day, source ASN)?
  context: This question seeks to identify suspicious firewall changes even when
    they are performed by an authorized user. A legitimate user's account could be
    compromised. By baselining normal activity for each authorized user (e.g., typical
    hours, source locations, frequency), a statistical model can score each new change
    for deviations. A change from a new country at 3 AM by someone who normally works
    9-5 would generate a high-risk score, triggering an alert for a potentially compromised
    account.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `userIdentity`, `sourceIPAddress`, `eventTime`)
  - Windows Event ID 4624
  - Zeek conn.log
  - Cloud IAM and Network Management APIs
  - VPN/Zero Trust Network Access (ZTNA) Concentrators
  - Active Directory Domain Controllers
  range: last 90 days
  queries:
  - query: 'pseudocode: FOR EACH authorized user, BASELINE normal activity (time,
      day, ASN, frequency). ON new change, SCORE deviations from baseline (e.g., new
      ASN: +10). IF cumulative score > 98th percentile, THEN alert.'
- question: Did a UEBA model flag a firewall modification as a high-confidence anomaly
    based on a user's pattern of life?
  context: This question applies advanced User and Entity Behavior Analytics (UEBA)
    to detect sophisticated threats. A UEBA model can perform multi-variate anomaly
    detection, considering many features simultaneously (user, source IP, location,
    time, type of change) to build a rich 'pattern of life' for each user. It can
    detect subtle but significant deviations from this pattern that simpler methods
    would miss, providing a powerful defense against compromised accounts and insider
    threats performing sensitive actions.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail `userIdentity`, `sourceIPAddress`, `eventTime`)
  - Windows Event ID 4624
  - Zeek conn.log
  - Cloud IAM and Network Management APIs
  - VPN/Zero Trust Network Access (ZTNA) Concentrators
  - Active Directory Domain Controllers
  range: last 90 days
  queries:
  - query: 'pseudocode: INPUT firewall modification event (user, source IP, ASN, time,
      etc.) into UEBA model. IF model flags event as high-confidence anomaly based
      on user''s pattern of life, THEN alert.'
- question: Following a firewall rule change, was there a network connection from
    the new source IP followed by a failed login attempt on the target host?
  context: This question correlates a sequence of events across different data sources
    to identify a likely attack pattern. An adversary opens a port, connects to it,
    and then attempts to log in. By creating a rule that looks for this specific
    chain of events—a firewall change, a subsequent network connection from the new
    source, and a failed login from that same source within minutes—analysts can
    detect an active intrusion attempt with high confidence.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)
  - Zeek conn.log
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Cloud Network Gateways
  - Targeted Virtual Machines or Container Hosts
  - Authentication Log Aggregators
  range: last 90 days
  queries:
  - query: 'pseudocode: ON firewall rule modification, LOOK FOR network connection
      from new IP/port within 15 mins. IF connection found, LOOK FOR failed login
      (Event 4625) from same IP within 5 mins. IF all three events occur, THEN alert.'
- question: After a firewall rule opened a new port, did the rate of failed logins
    on the target host significantly spike above its historical baseline?
  context: This question aims to detect brute-force or password spraying attacks
    that follow a firewall modification. After an adversary opens a port (e.g., RDP
    or SSH), they may launch an automated attack to guess credentials. By monitoring
    the rate of failed logins on the target host and comparing it to a historical
    baseline, a sudden, statistically significant spike in failures after the rule
    change strongly indicates an active brute-force attempt.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)
  - Zeek conn.log
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Cloud Network Gateways
  - Targeted Virtual Machines or Container Hosts
  - Authentication Log Aggregators
  range: last 90 days
  queries:
  - query: 'pseudocode: ON firewall rule change, MONITOR failed login rate (Event
      4625) on target host. CALCULATE historical baseline (e.g., 99th percentile)
      for hourly failed logins. IF rate in the hour after change > baseline, THEN
      alert.'
- question: Did time series analysis show that network traffic and login attempts
    after a firewall change significantly deviated from forecasted values?
  context: This question uses predictive analytics to identify anomalous activity
    following a firewall change. Time series models (like ARIMA) can forecast the
    expected volume of network traffic and login attempts for a host with a high
    degree of accuracy. By comparing the actual observed activity after a rule change
    to the forecasted values, a significant and sustained deviation outside the model's
    confidence interval can be automatically flagged as an anomaly, indicating a
    potential intrusion.
  answer_sources:
  - Cloud Audit Logs (e.g., AWS CloudTrail, Azure Activity Logs)
  - Zeek conn.log
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Cloud Network Gateways
  - Targeted Virtual Machines or Container Hosts
  - Authentication Log Aggregators
  range: last 90 days
  queries:
  - query: 'pseudocode: USE ARIMA model to forecast traffic volume and login counts
      for host. AFTER firewall change, COMPARE observed values to forecasted confidence
      intervals. IF observed values > upper bound of 99% confidence interval, THEN
      alert.'