name: T1137.005: Outlook Rules
id: 0c2b1d3e-4a5f-4b6c-8d9e-0f1a2b3c4d5e
description: This playbook helps investigate if an adversary is maintaining persistence by creating malicious Outlook Rules. This involves looking for evidence such as: child processes spawned by OUTLOOK.EXE that match known malicious indicators or connect to blocked network destinations; the use of MAPI manipulation tools (e.g., MFCMapi.exe, Ruler.exe) or PowerShell cmdlets to modify rules; OUTLOOK.EXE spawning command-line interpreters or scripting hosts; and child processes running from user-writable paths that connect to low-reputation or newly registered domains.
type: technique
related:
  - TA0003: Persistence
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is OUTLOOK.EXE spawning child processes that match known malicious indicators or connect to blocked network destinations?
    context: This action aims to detect known threats by matching file hashes of processes created by Outlook against a threat intelligence feed. It also checks for network connections from the host to known malicious command-and-control (C2) servers. A match provides a high-confidence signal of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Network egress points
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event ID 4688 WHERE ParentProcessName = 'OUTLOOK.EXE' | HASH(NewProcessName) | LOOKUP malicious_hashes | JOIN (SEARCH Zeek conn.log, dns.log WHERE src_ip = host_ip) | LOOKUP c2_blocklist
  - question: Are hosts with Outlook-spawned child processes making DNS queries to domains with unusually high entropy, potentially indicating DGA usage?
    context: This question focuses on detecting algorithmically generated domains (DGAs), a common technique for C2 communication. By calculating the Shannon entropy of domain names queried by hosts where Outlook has launched other processes, we can identify and flag those that are abnormally random compared to a baseline, suggesting automated, non-human generation.
    answer_sources:
      - Zeek dns.log
      - User workstations
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek dns.log WHERE host_ip IN (hosts with OUTLOOK.EXE child processes) | CALCULATE entropy(queried_domain) | ALERT WHERE entropy > enterprise_98th_percentile
  - question: Is network traffic from processes spawned by Outlook exhibiting beaconing behavior, such as highly regular, low-volume connections?
    context: This question seeks to identify C2 beaconing, which often manifests as a 'heartbeat' signal. A time-series model can learn the normal patterns of network traffic associated with Outlook-spawned processes. Deviations from this learned forecast, especially regular, periodic connections, can indicate malicious beaconing activity.
    answer_sources:
      - Zeek conn.log
      - User workstations
      - Network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL time_series_forecasting ON (Zeek conn.log data from Outlook child processes) | PREDICT future traffic | ALERT on significant deviation indicating regular, low-volume patterns
  - question: Are known MAPI manipulation tools being executed or are PowerShell scripts being used to modify Outlook/Exchange rules?
    context: This question looks for direct evidence of rule manipulation. It involves searching for the execution of specific tools known for this purpose (MFCMapi.exe, Ruler.exe) and for keywords within PowerShell script logs that correspond to cmdlets and APIs used to create or alter inbox rules. A match is a strong indicator of an adversary attempting to establish persistence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User workstations
      - Exchange Servers
      - Administrative jump boxes
      - Microsoft 365 / Exchange Online audit logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event ID 4688 WHERE NewProcessName IN ('MFCMapi.exe', 'Ruler.exe') OR SEARCH Windows Event ID 4104 WHERE ScriptBlockText CONTAINS ('New-InboxRule', 'Set-InboxRule', 'Ews.Service.dll')
  - question: Is 'powershell.exe' being spawned by 'OUTLOOK.EXE', and are PowerShell scripts containing unusually rare terms related to mail rule manipulation being executed?
    context: This question aims to find anomalies in process relationships and script content. Since it's highly unusual for Outlook to launch PowerShell, any instance is suspicious. Additionally, by using TF-IDF analysis on PowerShell scripts, we can surface scripts that contain rare but highly specific terms related to mail rule manipulation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User workstations
      - Exchange Servers
      - Administrative jump boxes
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event ID 4688 WHERE ParentProcessName = 'OUTLOOK.EXE' AND NewProcessName = 'powershell.exe' | ALERT. Also CALCULATE TF-IDF on Windows Event ID 4104 ScriptBlockText | ALERT on high scores for mail-rule-related terms
  - question: Can we classify PowerShell script executions as benign or malicious based on their characteristics to detect rule manipulation attempts?
    context: This question applies a machine learning classification model to proactively identify malicious PowerShell activity. By training a model on features like script length, obfuscation indicators, and the frequency of specific API calls, it can learn to distinguish between legitimate administrative scripts and malicious ones designed to manipulate mail rules.
    answer_sources:
      - Windows Event ID 4104
      - User workstations
      - Exchange Servers
      - Administrative jump boxes
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL classification ON labeled Windows Event ID 4104 data | DEPLOY model | CLASSIFY new script blocks | ALERT on 'malicious' classification
  - question: Is OUTLOOK.EXE spawning any command-line interpreters or scripting hosts?
    context: This question is based on the premise that Outlook should not, under normal circumstances, launch processes like cmd.exe, powershell.exe, wscript.exe, cscript.exe, or mshta.exe. Such an event is a high-fidelity indicator of a potential compromise, where an adversary is using an Outlook rule to execute a command or script.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event ID 4688 WHERE ParentProcessName = 'OUTLOOK.EXE' AND NewProcessName IN ('cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'mshta.exe') | ALERT
  - question: Has OUTLOOK.EXE spawned a child process that has never been seen for a specific user or for the entire organization before?
    context: This question uses a 'first-seen' model to detect novel and potentially malicious behavior. By establishing a baseline of normal child processes for Outlook for each user, the system can flag any new or previously unobserved parent-child relationship. The first time Outlook spawns a process like cmd.exe for any user is a significant anomaly that warrants immediate investigation.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BUILD baseline of (user, parent_process, child_process) from Windows Event ID 4688 | FOR each new event | IF (user, 'OUTLOOK.EXE', NewProcessName) is not in baseline | ALERT
  - question: Can unsupervised machine learning identify anomalous process creation events involving OUTLOOK.EXE as a parent process?
    context: This question leverages unsupervised learning to find outliers without pre-existing labels. By clustering process creation events based on features like parent/child names, user context, and command lines, the algorithm can group normal activities together. Any event that doesn't fit into a cluster (an outlier), especially one involving Outlook as the parent, is flagged as suspicious.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL clustering ON Windows Event ID 4688 data (features parent, child, user, cmdline) | IDENTIFY outliers | ALERT on outliers where parent = 'OUTLOOK.EXE'
  - question: Is a process spawned by OUTLOOK.EXE from a user-writable directory making network connections to known-bad destinations?
    context: This question correlates host and network events to identify a specific attack pattern. An adversary may drop a payload into a temporary or user-writable directory and use an Outlook rule to execute it. This question checks for that execution and correlates it with network traffic from the same host to IP addresses or domains found on threat intelligence feeds.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - User workstations
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event ID 4688 WHERE ParentProcessName = 'OUTLOOK.EXE' AND ProcessPath IN ('*\\AppData\\*', '*\\Temp\\*') | JOIN (SEARCH Zeek conn.log WHERE src_ip = host_ip) | LOOKUP destination_ip IN threat_feed | ALERT
  - question: Are processes spawned by Outlook connecting to newly registered domains or using non-standard network ports?
    context: This question uses statistical properties of network connections to find suspicious activity. Adversaries often use newly registered domains (NRDs) for C2 infrastructure. This check flags connections to domains registered within the last 30 days. Additionally, it identifies connections to unusual ports, which can indicate an attempt to bypass standard firewall rules.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek dns.log WHERE host IN (hosts with Outlook child processes) | ENRICH with WHOIS data | ALERT if domain_age < 30 days. Also SEARCH Zeek conn.log for same hosts | ALERT if destination_port is statistically rare for that host
  - question: Does a sequence of host and network events, starting with an Outlook-spawned process, match a known malicious attack pattern?
    context: This question uses a sequence analysis model to understand the narrative of an attack. It learns the typical order of events for both benign and malicious activities. By analyzing a new sequence of events in real-time, the model can predict the probability that the sequence is malicious, allowing for detection of complex, multi-stage attacks.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL RNN on labeled event sequences (host/network) | FOR new sequences originating from Outlook | PREDICT probability of maliciousness | ALERT if probability > threshold