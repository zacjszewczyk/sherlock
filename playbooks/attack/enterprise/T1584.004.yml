name: T1584.004: Server
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary is developing resources by compromising external servers for use in operations. It focuses on identifying outbound network connections from the internal network that may indicate communication with adversary-controlled infrastructure. This includes detecting connections to destinations matching threat intelligence feeds, identifying network artifacts (like JA3/JA3S hashes or URIs) characteristic of known C2 frameworks, spotting beaconing behavior through statistical analysis of connection timing and volume, analyzing SSL/TLS certificates for anomalous attributes (self-signed, short validity), and correlating network connections to new domains with suspicious follow-on process activity on the endpoint.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has an internal host made an outbound connection to an IP, domain, or server with a certificate that matches a known indicator of compromise from threat intelligence feeds?
    context: This question aims to detect direct communication with known adversary infrastructure. By correlating network logs (connections, DNS queries, certificate details) with high-confidence threat intelligence, we can quickly identify compromised systems or initial C2 communication channels. A match provides a strong signal that an internal asset is interacting with a malicious external entity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek x509.log
      - Network Egress Points (Firewalls/Proxies), Corporate DNS Resolvers, TLS-inspecting network sensors
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs, dns_logs, cert_logs WHERE destination_ip OR domain OR cert_serial IN threat_intel_database;
  - question: Are internal hosts connecting to non-allowlisted domains that exhibit risky characteristics, such as being newly registered or having a high-risk score based on enrichment data?
    context: This question focuses on identifying suspicious domains that are not yet on threat intelligence lists. Adversaries often use newly registered domains (NRDs) or domains with privacy-protected registration for their operations. By risk-scoring domains based on features like age, ASN reputation, and registration details, analysts can proactively uncover potential C2 infrastructure before it's widely known.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek x509.log
      - Network Egress Points (Firewalls/Proxies), Corporate DNS Resolvers, TLS-inspecting network sensors
    range: last 90 days
    queries:
      - pseudocode: SEARCH dns_logs WHERE domain NOT IN allowlist; ENRICH domain with age, reputation; SCORE domain; ALERT IF score > threshold OR age < 30_days;
  - question: Can machine learning models, trained on known malicious and benign traffic, predict if a new outbound connection is likely malicious based on its network features?
    context: This question leverages predictive analytics to detect malicious connections that may not match simple rules or signatures. A supervised model learns the subtle patterns and combinations of features (like destination port, protocol, connection duration, ASN details) that distinguish malicious traffic from benign traffic. This allows for the detection of novel threats and variations of existing ones by flagging connections that have a high probability of being malicious.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek x509.log
      - Network Egress Points (Firewalls/Proxies), Corporate DNS Resolvers, TLS-inspecting network sensors
    range: last 90 days
    queries:
      - pseudocode: FOR each new_connection; EXTRACT features (dest_ip, port, asn, duration, etc.); PREDICT probability with ML_model; ALERT if probability > 0.85;
  - question: Are any outbound connections using TLS fingerprints (JA3/JA3S), HTTP User-Agents, or URI patterns that are known indicators of specific command-and-control (C2) frameworks?
    context: C2 frameworks often have unique network artifacts that can be used as high-fidelity signatures. This question involves scanning network traffic for these specific indicators (e.g., the JA3 hash of a Cobalt Strike client, the default User-Agent of Metasploit). A match provides a strong indication that a specific malicious tool is being used within the network.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - TLS-inspecting network sensors, Network Egress Points (Firewalls/Proxies), Endpoints generating the traffic
    range: last 90 days
    queries:
      - pseudocode: SEARCH ssl_logs, http_logs WHERE ja3_hash OR user_agent OR uri IN c2_watchlist;
  - question: Are there any outbound HTTP requests with unusually high entropy in their URI path or query parameters, suggesting the use of encoded data for C2 communications?
    context: Adversaries often encode data within URI parameters to evade detection. This encoding increases the randomness, or Shannon entropy, of the string. By establishing a baseline for normal URI entropy across the organization, analysts can flag outliers that may represent covert C2 channels exfiltrating data or receiving commands.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - TLS-inspecting network sensors, Network Egress Points (Firewalls/Proxies), Endpoints generating the traffic
    range: last 90 days
    queries:
      - pseudocode: FOR each http_request; CALCULATE uri_entropy; ALERT if uri_entropy > baseline_95th_percentile;
  - question: Can a sequence-based machine learning model (like LSTM) identify malicious outbound HTTP requests by analyzing the structure and patterns of their URIs?
    context: This question applies deep learning to detect malicious URI patterns that might be missed by simple signature matching or entropy analysis. An LSTM model can learn the grammatical structure of legitimate URIs and identify requests that deviate from this learned structure, effectively spotting algorithmically generated C2 URIs or variations of known patterns.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - TLS-inspecting network sensors, Network Egress Points (Firewalls/Proxies), Endpoints generating the traffic
    range: last 90 days
    queries:
      - pseudocode: FOR each http_request; CLASSIFY uri_pattern with LSTM_model; ALERT if classification is 'malicious';
  - question: Is any internal host making an unusually high number of connections to a single external destination (that is not on an allowlist) while transferring a very small amount of data, indicative of C2 check-ins?
    context: This question aims to find beaconing activity that doesn't involve large data transfers. A high frequency of connections (e.g., >20 per hour) coupled with minimal data transfer is characteristic of a C2 agent checking in for commands, as opposed to legitimate, high-volume services.
    answer_sources:
      - Zeek conn.log
      - Network Egress Points (Firewalls/Proxies), Endpoint devices and servers
    range: last 90 days
    queries:
      - pseudocode: AGGREGATE connections by src_ip, dst_ip over 1_hour WHERE dst_ip NOT IN allowlist; ALERT if connection_count > 20 AND total_bytes < 1MB;
  - question: Are any internal hosts communicating with an external destination at highly regular, machine-like intervals, suggesting automated C2 beaconing?
    context: Unlike human-generated traffic, automated malware beacons often communicate at precise intervals with very little variation (jitter). By calculating the standard deviation of time intervals between connections for a given source-destination pair, we can identify this machine-like regularity and flag potential C2 channels.
    answer_sources:
      - Zeek conn.log
      - Network Egress Points (Firewalls/Proxies), Endpoint devices and servers
    range: last 90 days
    queries:
      - pseudocode: FOR each src_dst_pair over 24_hours; CALCULATE time_delta between connections; CALCULATE stdev of time_deltas; ALERT if stdev < 2.0_seconds;
  - question: Can time-series analysis of outbound connection timestamps reveal strong, uncommon periodic patterns that indicate C2 beaconing?
    context: This question uses advanced statistical methods to find hidden periodic signals in network traffic. A time-series decomposition model can separate a host's connection activity into trend, seasonal (periodic), and residual components. Detecting a strong periodic component with an unusual frequency (e.g., every 7 minutes) provides statistical evidence of automated beaconing.
    answer_sources:
      - Zeek conn.log
      - Network Egress Points (Firewalls/Proxies), Endpoint devices and servers
    range: last 90 days
    queries:
      - pseudocode: FOR each host; APPLY time_series_decomposition to outbound_connection_timestamps; ANALYZE periodic_component; ALERT if strong_uncommon_periodicity_detected;
  - question: Are any internal hosts establishing SSL/TLS connections using self-signed certificates to external destinations not on a pre-approved list?
    context: While self-signed certificates can be used for legitimate internal services, their use in connections to external, unknown IP addresses is highly suspicious. Adversaries frequently use self-signed certificates for their C2 infrastructure to encrypt traffic without the cost or traceability of a commercially-issued certificate.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Network Egress Points (Firewalls/Proxies), Public Certificate Transparency Logs
    range: last 90 days
    queries:
      - pseudocode: SEARCH cert_logs WHERE issuer == subject AND destination_ip NOT IN approved_list;
  - question: Are outbound connections using SSL/TLS certificates with unusually short validity periods or high-entropy subject names, which are common traits of adversary-generated certificates?
    context: To evade detection and minimize operational lifetime, adversaries often generate certificates with very short validity periods (e.g., less than 90 days). They may also use algorithmically generated, high-entropy subject names. By baselining these attributes and alerting on statistical outliers, analysts can identify potentially malicious certificates.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Network Egress Points (Firewalls/Proxies), Public Certificate Transparency Logs
    range: last 90 days
    queries:
      - pseudocode: FOR each certificate; CALCULATE validity_days and subject_entropy; ALERT if validity_days < 5th_percentile OR subject_entropy > 95th_percentile;
  - question: Can unsupervised machine learning (clustering) identify anomalous SSL/TLS certificates by grouping them based on their attributes and flagging outliers?
    context: This question seeks to find malicious certificates without pre-existing rules or labels. A clustering algorithm like DBSCAN can group the vast majority of legitimate certificates (from major CAs) into large, dense clusters. Certificates used by adversaries, having unusual combinations of attributes, will not fit into these clusters and will be flagged as noise or outliers, warranting investigation.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Network Egress Points (Firewalls/Proxies), Public Certificate Transparency Logs
    range: last 90 days
    queries:
      - pseudocode: CLUSTER all certificates using features (validity, key_length, entropy, etc.); ALERT on certificates classified as outliers/noise;
  - question: Has a host connected to a newly observed domain and then immediately executed a suspicious scripting engine like PowerShell with obfuscation-related command-line arguments?
    context: This question correlates network and endpoint events to detect a common attack chain a user is directed to a new malicious domain (e.g., via phishing), which then triggers a payload executed by a scripting engine. Correlating the new domain connection with the execution of PowerShell using arguments like '-enc' (encoded) or '-w hidden' provides high-confidence evidence of a successful initial compromise.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Endpoint devices, Domain Controllers, Corporate DNS Resolvers
    range: last 90 days
    queries:
      - pseudocode: CORRELATE dns_logs and process_creation_logs on host; ALERT if (domain is new) AND (process is 'powershell.exe' with suspicious args) within 5_minutes;
  - question: Is there a statistical anomaly where a host connects to a rarely seen domain and, within a short time, executes a process that is also rarely seen on that specific host?
    context: This question uses frequency analysis to find unusual behavior. Most user and system activity involves common domains and processes. A sequence of events involving both a rare domain and a rare process on a given host is a statistical outlier. This "least frequency of occurrence" method can uncover novel attack techniques that do not match known signatures.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Endpoint devices, Domain Controllers, Corporate DNS Resolvers
    range: last 90 days
    queries:
      - pseudocode: CALCULATE prevalence of all domains and processes per host; ALERT if connection to rare_domain is followed by execution of rare_process within 2_minutes;
  - question: Can a graph-based model, representing relationships between hosts, domains, and processes, detect anomalous sequences of activity indicative of compromise?
    context: This question models system activity as a graph to understand complex relationships that simple correlation rules might miss. A graph neural network (GNN) can learn what normal sequences of actions (e.g., outlook.exe -> resolves -> office.com) look like. It can then assign a high anomaly score to rare and suspicious paths, such as a host resolving a newly observed domain and then executing a scripting engine, providing a powerful way to detect sophisticated attacks.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Endpoint devices, Domain Controllers, Corporate DNS Resolvers
    range: last 90 days
    queries:
      - pseudocode: MODEL activity as a graph (nodes=host,domain,process; edges=events); USE GNN to score new event sequences; ALERT on high-scoring (anomalous) sequences;