name: 'T1584.006: Web Services'
id: '5d85a0c8-6902-45e3-982a-2f036329c4e0'
description: This playbook helps investigate whether an adversary is leveraging compromised or malicious third-party web services for resource development. It focuses on detecting connections to known malicious infrastructure, analyzing file downloads for suspicious properties like mismatched MIME types or high entropy, monitoring for anomalous data transfer volumes to cloud storage, and identifying non-standard connections to code repositories from unauthorized hosts.
type: technique
related:
  - 'TA0042: Resource Development'
contributors:
  - Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: Are any internal hosts connecting to web service infrastructure (IPs, domains) that is known to be malicious or associated with abused services?
    context: This question aims to detect direct communication with adversary-controlled infrastructure hosted on legitimate web services. By comparing outbound network traffic against a threat intelligence feed of known malicious indicators, we can identify compromised systems that may be beaconing to a Command and Control (C2) server, downloading malware, or staging data for exfiltration. A match provides a high-confidence signal of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek dns.log
      - Egress points of the network (e.g., firewalls, proxies), DNS resolvers, and web gateways.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: JOIN conn.log, http.log, ssl.log, dns.log ON uid. FOR each event, CHECK destination_ip, dns_query, http_host, ssl_sni AGAINST threat_intel_feed. IF match, ALERT.
  - question: Is any internal host connecting to common web services like GitHub or Pastebin with a frequency that is statistically unusual compared to its own baseline?
    context: Adversaries often use common, legitimate web services for C2 or data staging to blend in with normal traffic. While the destination itself may not be on a blocklist, a sudden and significant increase in the frequency of connections from a single host can indicate automated activity, such as a script repeatedly fetching commands or exfiltrating small chunks of data. This question helps find this anomalous behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek dns.log
      - Egress points of the network (e.g., firewalls, proxies), DNS resolvers, and web gateways.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_host, CALCULATE 30-day baseline of connection_count to common_web_services. CALCULATE 95th percentile threshold. IN a 24h window, IF current_connection_count > threshold, ALERT.
  - question: Can we use machine learning to identify network connections to web services that exhibit characteristics of malicious activity, even if the destination is not known to be bad?
    context: This question seeks to proactively identify suspicious connections by training a model to recognize subtle patterns associated with malicious behavior (e.g., C2 or staging). By analyzing features like connection duration, data volume, protocol, and time of day, the model can score the probability of a connection being malicious, allowing analysts to focus on the highest-risk activities that might otherwise be missed by symbolic or simple statistical checks.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek dns.log
      - Egress points of the network (e.g., firewalls, proxies), DNS resolvers, and web gateways.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN classification_model on labeled_connection_data. DEPLOY model to score new_connections. IF probability_score > high_threshold, INVESTIGATE.
  - question: Has a file been downloaded from a web service that matches a known malicious hash or contains suspicious PE file characteristics?
    context: This is a fundamental check to determine if a known malicious file has been introduced into the environment via a web service. By comparing file hashes against threat intelligence feeds, we can quickly identify malware. Additionally, inspecting the metadata of executable files (PEs) for anomalies like missing compile times can reveal attempts by adversaries to tamper with or obfuscate their tools.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Windows Event ID 4688
      - Zeek pe.log
      - Endpoints receiving file downloads, network egress points where file transfers can be monitored, and sandboxing environments.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each file in files.log, CHECK hash AGAINST threat_intel_feed. IF file is PE, CHECK pe.log for suspicious_attributes. IF match, ALERT.
  - question: Are files being downloaded from web services that have an unusually high entropy for their file type, potentially indicating they are packed or encrypted?
    context: Adversaries often pack or encrypt their payloads to evade signature-based detection. This process typically increases the randomness, or entropy, of the file's content. This question helps identify suspicious files by flagging those with an entropy level that is statistically abnormal for their supposed file type (e.g., a '.js' file with the entropy of a compressed archive). Correlating this with a subsequent process creation on the host strengthens the suspicion that a malicious payload was downloaded and executed.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Windows Event ID 4688
      - Zeek pe.log
      - Endpoints receiving file downloads, network egress points where file transfers can be monitored, and sandboxing environments.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CALCULATE baseline_entropy for common_MIME_types. FOR each new_file, CALCULATE entropy. IF entropy > (mean + 3*std_dev) for its MIME_type, FLAG. IF flagged_file_download is followed by process_creation on same_host within 5min, ALERT.
  - question: Is any host exhibiting an anomalous rate of file downloads from web services, suggesting automated fetching of tools or data?
    context: This question uses a time-series model to learn the normal rhythm and volume of file downloads for each host. A significant deviation from this learned pattern, such as a sudden burst of downloads or a sustained, unusually high rate, could indicate that a compromised machine is being used to automatically pull down an adversary's toolkit or stage data for exfiltration. This approach can detect malicious activity without knowing the specifics of the files being transferred.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Windows Event ID 4688
      - Zeek pe.log
      - Endpoints receiving file downloads, network egress points where file transfers can be monitored, and sandboxing environments.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN LSTM_autoencoder on historical_download_rate per host. MONITOR real-time download_rate. IF reconstruction_error > threshold, ALERT.
  - question: Are users or servers connecting to high-risk or uncommon file sharing services for which they have no legitimate business need?
    context: Adversaries may use less common or explicitly high-risk file sharing services for data exfiltration, hoping they are not monitored as closely as major cloud providers. This question identifies these connections by looking for traffic to specific domains (e.g., mega.nz, sendspace.com) originating from sources, like server subnets or user groups in departments like HR, that should not be using such services. This provides a clear policy-based signal for investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Security Event ID 4624
      - Network egress points, user endpoint devices, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: DEFINE high_risk_domains list. DEFINE unauthorized_source_groups. IF connection from unauthorized_source to high_risk_domain, ALERT.
  - question: Is any host uploading an unusually large volume of data to cloud storage services compared to its historical baseline?
    context: A common data exfiltration technique involves uploading large amounts of stolen data to a legitimate cloud storage service. This question aims to detect such activity by establishing a baseline of normal daily data upload volume for each host. An alert is triggered when a host's upload volume significantly exceeds its own normal behavior (e.g., surpasses the 99th percentile), which is a strong indicator of bulk data transfer.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Security Event ID 4624
      - Network egress points, user endpoint devices, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_host, CALCULATE 30-day baseline of daily_upload_volume to cloud_domains. CALCULATE 99th percentile threshold. IF current_daily_volume > threshold, ALERT.
  - question: Can we use clustering to distinguish normal cloud service usage from anomalous patterns indicative of C2 or data exfiltration?
    context: This question applies unsupervised machine learning to group cloud service connections based on their characteristics (duration, data volume, periodicity). The goal is to automatically identify clusters of activity that deviate from typical user behavior. For example, normal activity might form a cluster of small, infrequent syncs, while a C2 channel might appear as a separate cluster of small, highly periodic connections. Flagging connections that fall into these anomalous clusters allows for targeted investigation of suspicious behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Security Event ID 4624
      - Network egress points, user endpoint devices, and Cloud Access Security Broker (CASB) logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: APPLY DBSCAN clustering on cloud_connection_features (duration, bytes, ratio, periodicity). IDENTIFY and label anomalous_clusters. IF new_connection is classified into anomalous_cluster, ALERT.
  - question: Is a non-developer or non-administrator host using a command-line utility (like PowerShell, curl, or wget) to download content from a raw code repository like GitHub or Pastebin?
    context: This is a classic "living off the land" technique where adversaries download scripts or payloads directly into memory or onto a host using built-in tools. This question targets this behavior by creating a specific rule that looks for the combination of a raw content URL, a non-browser User-Agent (e.g., 'PowerShell'), and a source IP that does not belong to a developer or system administrator. This combination is highly indicative of malicious activity.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Non-developer user workstations, production server subnets, and network proxy logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: DEFINE raw_content_domains. DEFINE script_user_agents. DEFINE admin_workstations_allowlist. IF http.host in raw_content_domains AND http.user_agent in script_user_agents AND source_ip NOT in admin_workstations_allowlist, ALERT.
  - question: Is a user visiting a set of domains that is significantly different from the typical browsing behavior of their peer group, particularly if it includes a code repository?
    context: This question seeks to identify insider threats or compromised accounts by detecting behavioral drift. By establishing a profile of normal web browsing for different user roles (e.g., Sales, HR), we can spot when an individual account starts accessing unusual domains, such as a code repository that is irrelevant to their job function. A low similarity score between an individual's activity and their role's baseline is a strong indicator of anomalous behavior requiring investigation.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Non-developer user workstations, production server subnets, and network proxy logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: PROFILE typical_domain_set for each user_role. FOR each user, CALCULATE Jaccard_similarity between user's daily_domains and their role's typical_set. IF similarity_score is low AND user visited code_repo, ALERT.
  - question: Can we analyze the content of files downloaded from paste sites and code repositories to determine if they contain malicious code or scripts?
    context: Instead of just looking at metadata, this question focuses on the actual content of downloaded files. By applying Natural Language Processing (NLP) and topic modeling, we can train a system to recognize the linguistic and structural patterns of malicious code (e.g., obfuscated scripts, C2 logic, credential harvesters). This allows for the real-time classification of downloaded content, flagging potentially harmful files even if they are from a new or unknown malware family.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Non-developer user workstations, production server subnets, and network proxy logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN LDA model on labeled_scripts to identify malicious_topics. FOR each new_downloaded_file, CLASSIFY its content. IF content matches a malicious_topic, ALERT.