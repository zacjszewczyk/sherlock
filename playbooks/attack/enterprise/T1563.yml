name: 'T1563: Remote Service Session Hijacking'
id: 'a8f6b2e1-5c3a-4e9b-8d7f-0a1b2c3d4e5f'
description: 'This playbook focuses on detecting lateral movement via remote service session hijacking. This involves monitoring for the execution of known hijacking tools (like Mimikatz), unusual use of legitimate tools like tscon.exe, RDP session reconnects from anomalous IP addresses, deviations from a user''s normal activity baseline after a remote login, and significant changes in SSH traffic profiles. These indicators are observed through process creation events, RDP logon/reconnect events, and network traffic analysis.'
type: 'technique'
related:
  - 'TA0008: Lateral Movement'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: none
questions:
  - question: 'Has a known remote session hijacking tool been executed on any endpoint?'
    context: 'This question aims to detect the direct execution of tools specifically designed for session hijacking, such as Mimikatz or sessionGopher. Identifying these tools is a high-fidelity indicator of malicious activity, as they are rarely used for legitimate administrative purposes. An alert on a known tool or hash provides a strong starting point for an incident response investigation.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Domain Controllers'
      - 'Member Servers'
      - 'Privileged Access Workstations'
      - 'Multi-user systems like terminal servers'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'SEARCH process_creation_events (event_id=4688) WHERE process_name IN (hijacking_tool_watchlist) OR file_hash IN (malicious_hash_list)'
  - question: 'Has a statistically rare process been executed across the enterprise, potentially indicating an unknown or custom hijacking tool?'
    context: 'Adversaries may use custom or lesser-known tools to evade simple signature-based detection. This question focuses on anomaly detection by identifying processes that are not commonly seen across the organization. A process executed on a very small percentage of systems is suspicious and could be a malicious tool that warrants further investigation for session hijacking or other activities.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Domain Controllers'
      - 'Member Servers'
      - 'Privileged Access Workstations'
      - 'Multi-user systems like terminal servers'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'IDENTIFY rare processes by calculating execution frequency across all hosts. ALERT on execution of processes with frequency < 0.1%.'
  - question: 'Does a process execution event exhibit characteristics (like high command-line entropy or a rare parent process) that a machine learning model identifies as indicative of session hijacking?'
    context: 'This question leverages machine learning to move beyond simple signatures and heuristics. By analyzing a combination of features like command-line complexity, user context, and parent-child process relationships, a model can learn the subtle patterns of malicious tool execution. This approach helps detect novel or obfuscated hijacking tools that might otherwise be missed.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Domain Controllers'
      - 'Member Servers'
      - 'Privileged Access Workstations'
      - 'Multi-user systems like terminal servers'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'SCORE new process_creation_events using ML model. ALERT on events where probability_malicious > threshold.'
  - question: 'Has a user enumerated active sessions and then immediately attempted to connect to one using ''tscon.exe''?'
    context: 'The sequence of enumerating user sessions (`quser`, `qwinsta`) and then using `tscon.exe` to connect to a specific session is a classic workflow for session hijacking. While administrators might occasionally perform this action, its occurrence is infrequent. Alerting on this specific sequence of events provides strong contextual evidence of a potential hijacking attempt.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Multi-user servers (e.g., Terminal Servers, Citrix hosts)'
      - 'Domain Controllers'
      - 'Jump Boxes'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'CORRELATE process_creation_events where (process_name IN (''query.exe user'', ''quser.exe'', ''qwinsta.exe'')) is followed by (process_name=''tscon.exe'' AND command_line CONTAINS ''/dest:'') by same user on same host within 5 minutes.'
  - question: 'Is ''tscon.exe'' being used by a non-administrative user, or is an administrator using it with an unusually high frequency?'
    context: 'Usage of `tscon.exe` is typically a privileged administrative action. Its execution by a standard user is highly suspicious. Even for administrators, excessive or anomalous use can indicate a compromised account being used for lateral movement. This question aims to detect these deviations from expected user behavior.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Multi-user servers (e.g., Terminal Servers, Citrix hosts)'
      - 'Domain Controllers'
      - 'Jump Boxes'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'BASELINE ''tscon.exe'' usage by user. ALERT if process_name=''tscon.exe'' AND user NOT IN (admin_group) OR execution_count > 99th_percentile_for_user.'
  - question: 'Did a user execute a sequence of commands, such as session enumeration followed by ''tscon.exe'', that is highly improbable based on their own historical activity patterns?'
    context: 'This question uses a more sophisticated user-specific behavioral model to detect anomalies. Instead of a generic rule, it learns an individual''s typical command sequences. A low-probability sequence, like `qwinsta` followed by `tscon`, would be flagged as anomalous for a user who has never performed this action before, even if they are an administrator, providing a highly tailored detection.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Multi-user servers (e.g., Terminal Servers, Citrix hosts)'
      - 'Domain Controllers'
      - 'Jump Boxes'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'MODEL user command sequences. For each new command, calculate sequence probability. ALERT if sequence (''qwinsta'' -> ''tscon'') has probability < threshold for that user.'
  - question: 'Has an existing RDP session been reconnected from a different IP address than the one that initiated it?'
    context: 'A legitimate user''s RDP session is unlikely to change its source IP address mid-session. A reconnect from a new IP could indicate that an adversary has stolen the session token and is using it to take over the active session from their own machine. This stateful analysis provides a direct method for detecting this type of hijack.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4778'
      - 'Windows Event ID 4779'
      - 'Windows Event ID 4800'
      - 'Windows Event ID 4801'
      - 'Zeek conn.log'
      - 'VPN concentrators'
      - 'External-facing RDP gateways'
      - 'Authentication logs on Domain Controllers and Member Servers'
      - 'Network sensors at egress points'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'MAINTAIN state table of (session_id, user, source_ip) from logon events (4624). ON reconnect event (4779), ALERT if new_source_ip != stored_source_ip for the same session_id.'
  - question: 'Did an RDP session reconnect from a geographic location or network (ASN) that is unusual for that specific user?'
    context: 'Users typically connect from a predictable set of locations and networks (e.g., corporate VPN, home ISP). A session reconnect originating from a completely new country or an unfamiliar network provider (ASN) is a strong indicator of a compromised session. This question enriches IP data with geolocation to add a layer of behavioral anomaly detection.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4778'
      - 'Windows Event ID 4779'
      - 'Windows Event ID 4800'
      - 'Windows Event ID 4801'
      - 'Zeek conn.log'
      - 'VPN concentrators'
      - 'External-facing RDP gateways'
      - 'Authentication logs on Domain Controllers and Member Servers'
      - 'Network sensors at egress points'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'PROFILE user''s historical source IPs, ASNs, and countries from logon events (4624). ON reconnect event (4779), ALERT if source_asn OR source_country is anomalous for that user.'
  - question: 'Does an RDP reconnect event appear as a statistical outlier when compared to historical patterns of legitimate user session activity?'
    context: 'This question uses unsupervised machine learning to find "unknown unknowns." By clustering normal RDP activity based on multiple features (user, source, destination, time), the model can identify any reconnect that doesn''t fit a known pattern. This can detect sophisticated attacks that might not trigger simpler, single-feature rules.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4778'
      - 'Windows Event ID 4779'
      - 'Windows Event ID 4800'
      - 'Windows Event ID 4801'
      - 'Zeek conn.log'
      - 'VPN concentrators'
      - 'External-facing RDP gateways'
      - 'Authentication logs on Domain Controllers and Member Servers'
      - 'Network sensors at egress points'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'CLUSTER historical RDP reconnects using features (source_subnet, user, target, time). For new reconnect events (4779), ALERT if model classifies event as an outlier.'
  - question: 'Following a remote login, did a non-administrative user execute commands typically used for network discovery or credential access?'
    context: 'Once an adversary hijacks a session, they often perform reconnaissance to understand the environment or escalate privileges. This question looks for this post-exploitation behavior by flagging the use of common discovery and credential dumping commands when executed by users who have no legitimate reason to use them, especially within a remote session.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Host-based process and network monitoring agents'
      - 'Network TAPs at key egress/ingress points'
      - 'DNS resolvers'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'CORRELATE logon event (4624) with subsequent process events (4688) using Logon ID. ALERT if user NOT IN (admin_group) AND process_name IN (discovery_tool_list).'
  - question: 'Is a user''s activity within a remote session, such as the commands they run or the complexity of their arguments, deviating significantly from their own historical baseline?'
    context: 'Every user has a unique behavioral "fingerprint." An adversary who hijacks a session is unlikely to perfectly mimic the legitimate user''s behavior. This question aims to detect this mismatch by baselining normal process execution and command-line complexity for each user. A sudden change, like running a new tool or using highly complex/obfuscated commands, is a strong signal of a hijacked session.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Host-based process and network monitoring agents'
      - 'Network TAPs at key egress/ingress points'
      - 'DNS resolvers'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'BASELINE process executions and command-line entropy per user. In a live session, ALERT if executed process is not in user''s baseline OR command-line entropy > (mean + 3*stdev).'
  - question: 'Does a user''s overall remote session activity (processes, network, DNS) in a given time window appear anomalous when evaluated by a machine learning model trained on their normal behavior?'
    context: 'This question provides a holistic view of user behavior by combining multiple data streams (process, network, DNS) into a single model. An autoencoder, for example, can learn the complex, non-linear relationships in a user''s normal activity. Any significant deviation, which would result in a high reconstruction error, strongly suggests that the activity is not being performed by the legitimate user.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Host-based process and network monitoring agents'
      - 'Network TAPs at key egress/ingress points'
      - 'DNS resolvers'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'TRAIN autoencoder on user''s historical session features (process counts, network counts, etc.). In a live session, feed feature vectors to model. ALERT if reconstruction_error > threshold.'
  - question: 'Has a long-duration SSH session been established using a non-standard or unapproved SSH client/server software?'
    context: 'Adversaries may use custom or unauthorized SSH clients for malicious activities like tunneling. This question aims to identify such clients by checking their version strings against an allowlist. Correlating this with an unusually long session duration increases the likelihood that the session is being used for persistent C2 or data exfiltration, rather than normal interactive use.'
    answer_sources:
      - 'Zeek ssh.log'
      - 'Zeek conn.log'
      - 'Linux auth.log'
      - 'Network sensors monitoring traffic to and from Linux/Unix servers, SSH jump boxes, and critical infrastructure.'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'SEARCH successful SSH authentications (auth_success=true) where client_version_string NOT IN (approved_list). If found, CORRELATE with conn.log and ALERT if session_duration > 8 hours.'
  - question: 'Is an SSH session between two specific hosts lasting significantly longer or transferring significantly more data than is typical for that connection pair?'
    context: 'Normal SSH sessions between two servers (e.g., an admin''s workstation and a web server) tend to have predictable patterns of duration and data volume. A session that is an order of magnitude longer or involves gigabytes of data transfer when it normally involves megabytes is highly anomalous. This could indicate that a hijacked session is being used for large-scale data exfiltration.'
    answer_sources:
      - 'Zeek ssh.log'
      - 'Zeek conn.log'
      - 'Linux auth.log'
      - 'Network sensors monitoring traffic to and from Linux/Unix servers, SSH jump boxes, and critical infrastructure.'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'PROFILE historical SSH sessions (duration, bytes) per (source_ip, dest_ip) pair. For new sessions, ALERT if duration > 98th_percentile OR total_bytes > 98th_percentile for that pair.'
  - question: 'Has the network traffic pattern of an active SSH session suddenly changed from interactive (keystrokes) to something else (like bulk transfer)?'
    context: 'An interactive SSH session has a distinct traffic signature: small packets sent at irregular intervals corresponding to human typing. A file transfer or tunneled traffic looks very different (larger, more regular packets). This question uses a time-series model to detect a mid-session shift in this signature, which could mean an adversary has hijacked an interactive session and is now using it for another purpose, like exfiltrating data.'
    answer_sources:
      - 'Zeek ssh.log'
      - 'Zeek conn.log'
      - 'Linux auth.log'
      - 'Network sensors monitoring traffic to and from Linux/Unix servers, SSH jump boxes, and critical infrastructure.'
    range: 'last 90 days'
    queries:
      - tech: 'pseudocode'
        query: 'TRAIN LSTM model on normal interactive SSH traffic patterns (packet timing, sizes). In live sessions, feed traffic features to model. ALERT if reconstruction_error spikes, indicating a pattern shift.'