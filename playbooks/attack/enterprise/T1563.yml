name: T1563: Remote Service Session Hijacking
id: f8a1b2c3-d4e5-4f6a-b7c8-d9e0f1a2b3c4
description: This playbook helps investigate whether an adversary is moving laterally by hijacking remote service sessions. It focuses on detecting the use of known hijacking tools (like Mimikatz), the abuse of legitimate utilities like `tscon.exe` to take over active sessions, RDP session reconnects from unexpected IP addresses, anomalous process or network activity following a remote login, and significant changes in SSH traffic profiles that could indicate a session has been repurposed for malicious activity, such as data transfer.
type: technique
related:
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
- question: Have any known remote session hijacking tools been executed on endpoints?
  context: This question aims to identify the direct execution of tools specifically designed for session hijacking, such as Mimikatz or sessionGopher. Detecting these tools by their process name, original file name, or file hash provides a high-confidence indicator of malicious activity. A positive finding strongly suggests an adversary is attempting to escalate privileges or move laterally by stealing or reusing active user sessions.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers, Member Servers, Privileged Access Workstations, Multi-user systems like terminal servers
  range: last 90 days
  queries:
  - siem: SEARCH process_creation_events WHERE (process_name IN (hijacking_tool_watchlist) OR file_hash IN (malicious_hash_feed))
- question: Has any statistically rare or uncommon process been executed across the enterprise?
  context: Adversaries often introduce custom or less-common tools that are not part of a standard corporate software build. This question helps uncover such tools, which might include unknown or modified session hijacking utilities. By baselining normal process execution frequency across the enterprise and alerting on outliers, analysts can spot suspicious binaries that may otherwise go unnoticed by signature-based detection.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers, Member Servers, Privileged Access Workstations, Multi-user systems like terminal servers
  range: last 90 days
  queries:
  - siem: COMPARE process_creation_events AGAINST enterprise_process_frequency_baseline AND ALERT on processes with frequency < threshold
- question: Are there process execution events that a machine learning model classifies as indicative of session hijacking?
  context: This question leverages a machine learning model to detect subtle indicators of malicious process execution that may not be caught by simple rules. The model analyzes a combination of features like command-line complexity (entropy), the parent-child process relationship, and the user context. A high-risk score from the model suggests a process is behaving anomalously and warrants investigation for potential session hijacking activity, even if the tool is unknown.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers, Member Servers, Privileged Access Workstations, Multi-user systems like terminal servers
  range: last 90 days
  queries:
  - ml_model: SCORE process_creation_events using features (cmd_line_entropy, parent_process, user_context) AND ALERT on high_probability_malicious_score
- question: Is the 'tscon.exe' utility being used to connect to another user's session shortly after session enumeration commands are run?
  context: Adversaries often first enumerate active sessions on a multi-user system (using `quser`, `qwinsta`, etc.) to identify a target session and then use `tscon.exe` to hijack it. This question looks for this specific sequence of events—enumeration followed by connection—within a short time frame. A positive match is a strong indicator of a hands-on-keyboard attempt to hijack a specific user's session on a shared server.
  answer_sources:
  - Windows Event ID 4688
  - Multi-user servers (e.g., Terminal Servers, Citrix hosts), Domain Controllers, Jump Boxes
  range: last 90 days
  queries:
  - siem: CORRELATE process_creation_events WHERE (process_name IN ('query.exe', 'quser.exe', 'qwinsta.exe')) is followed by (process_name = 'tscon.exe' AND command_line CONTAINS '/dest:') by same_user on same_host within 5_minutes
- question: Is 'tscon.exe' being executed by unauthorized users or at an anomalous frequency by administrators?
  context: Legitimate use of `tscon.exe` is typically restricted to system administrators for specific support tasks. This question aims to detect two types of abuse: execution by non-administrative users, which is highly suspicious, and unusually frequent use by administrators, which could indicate a compromised administrative account being used for lateral movement across multiple sessions. It relies on baselining normal behavior by user role.
  answer_sources:
  - Windows Event ID 4688
  - Multi-user servers (e.g., Terminal Servers, Citrix hosts), Domain Controllers, Jump Boxes
  range: last 90 days
  queries:
  - siem: SEARCH process_creation_events WHERE process_name = 'tscon.exe' AND (user NOT IN admin_group OR execution_count > user_baseline_percentile)
- question: Has a user executed a sequence of commands, including 'tscon.exe', that deviates from their normal, learned behavior pattern?
  context: Every user develops a typical workflow and sequence of command execution. This question uses a machine learning model to learn these individual patterns. An alert is generated when a user executes a sequence of commands that is statistically improbable based on their own history, such as running a session enumeration command followed by `tscon.exe` when they have never done so before. This can detect session hijacking attempts even when performed by a seemingly legitimate (but possibly compromised) user account.
  answer_sources:
  - Windows Event ID 4688
  - Multi-user servers (e.g., Terminal Servers, Citrix hosts), Domain Controllers, Jump Boxes
  range: last 90 days
  queries:
  - ml_model: ANALYZE command_sequences from process_creation_events AGAINST user_sequence_model AND ALERT on low_probability_sequences (e.g., 'qwinsta' -> 'tscon')
- question: Has an existing RDP session been reconnected from a different IP address than its original source IP?
  context: When a user legitimately disconnects and reconnects to an RDP session, it is typically from the same IP address. An adversary who has stolen a session cookie or token may try to reconnect to that session from their own machine, resulting in a different source IP. This question directly checks for this discrepancy by correlating the initial logon IP (Event 4624) with the reconnect IP (Event 4779) for the same session ID.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4778
  - Windows Event ID 4779
  - Windows Event ID 4800
  - Windows Event ID 4801
  - Zeek conn.log
  - VPN concentrators, External-facing RDP gateways, Authentication logs on Domain Controllers and Member Servers, Network sensors at egress points
  range: last 90 days
  queries:
  - siem: MAINTAIN state_table of RDP_sessions (session_id, user, source_ip) from event_4624. ON event_4779, CHECK if new_source_ip != stored_source_ip for same_session_id. IF TRUE, ALERT.
- question: Has a user reconnected to an RDP session from a geographically or network-wise anomalous location (ASN/Country)?
  context: Users typically connect from a predictable set of geographic locations and network providers (ASNs). An adversary hijacking a session is likely to connect from a location that is unusual for the legitimate user. This question enriches the source IP of a reconnect event with GeoIP and ASN data and compares it against the user's historical profile. A reconnect from a new or rare country/ASN is a strong indicator of a compromised session.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4778
  - Windows Event ID 4779
  - Windows Event ID 4800
  - Windows Event ID 4801
  - Zeek conn.log
  - VPN concentrators, External-facing RDP gateways, Authentication logs on Domain Controllers and Member Servers, Network sensors at egress points
  range: last 90 days
  queries:
  - siem: ENRICH event_4779 source_ip with GeoIP/ASN data. COMPARE source_ASN/country against user's historical_connection_profile. ALERT if ASN/country is new or rare for that user.
- question: Does an RDP reconnect event appear as a statistical outlier when compared to clusters of normal user activity?
  context: This question uses unsupervised machine learning to model 'normal' RDP connection behavior by clustering sessions based on features like source subnet, user, and time of day. Legitimate reconnects will typically fall within these established clusters. A reconnect event that is flagged as an outlier (i.e., it doesn't fit any normal cluster) is highly suspicious and may represent a session hijacking attempt that deviates from established patterns.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4778
  - Windows Event ID 4779
  - Windows Event ID 4800
  - Windows Event ID 4801
  - Zeek conn.log
  - VPN concentrators, External-facing RDP gateways, Authentication logs on Domain Controllers and Member Servers, Network sensors at egress points
  range: last 90 days
  queries:
  - ml_model: APPLY clustering (DBSCAN) to historical RDP session data. SCORE new reconnect_event (event_4779) against clusters. ALERT if event is classified as an outlier/noise.
- question: Are non-administrative users executing sensitive discovery or credential access commands within a remote session?
  context: Once an adversary hijacks a session, they often perform reconnaissance or attempt to access credentials. This question looks for the execution of commands commonly used for these purposes (e.g., `nltest`, `net group`, `reg save`) within a remote session. If these commands are run by a standard user who has no administrative reason to use them, it strongly suggests their session has been compromised.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek dns.log
  - Host-based process and network monitoring agents, Network TAPs at key egress/ingress points, DNS resolvers
  range: last 90 days
  queries:
  - siem: CORRELATE process_creation_events (event_4688) with logon_session (event_4624). ALERT if process_name IN (discovery_tool_list) AND user NOT IN (admin_or_redteam_group).
- question: Is a user's activity within a remote session, such as processes executed or command-line complexity, deviating from their established baseline?
  context: This question aims to detect a hijacked session by identifying behavioral changes in the legitimate user's account. It establishes a baseline of normal activity for each user, including the specific programs they run and the typical complexity of their commands. An alert is triggered if the user suddenly runs a new, unexpected program or executes unusually complex or obfuscated commands (high entropy), which are common signs of an adversary operating within the compromised session.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek dns.log
  - Host-based process and network monitoring agents, Network TAPs at key egress/ingress points, DNS resolvers
  range: last 90 days
  queries:
  - siem: COMPARE process_creation_events (event_4688) within a logon_session against user's activity_baseline. ALERT if (process_name NOT IN user_baseline_process_set) OR (cmd_line_entropy > 3_std_dev_above_mean).
- question: Does a machine learning model identify a user's current remote session activity as anomalous compared to their historical profile?
  context: This question employs a more advanced anomaly detection model (like an autoencoder) to create a comprehensive profile of a user's normal remote session behavior, considering metrics like process counts, network connections, and DNS queries over time. The model learns to 'reconstruct' normal activity. If, during a live session, the model cannot accurately reconstruct the observed activity (resulting in a high reconstruction error), it flags the behavior as anomalous, suggesting a potential session hijack.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek dns.log
  - Host-based process and network monitoring agents, Network TAPs at key egress/ingress points, DNS resolvers
  range: last 90 days
  queries:
  - ml_model: FEED time-windowed session features (process_counts, net_conn_counts) into user's autoencoder_model. ALERT if reconstruction_error > threshold.
- question: Are there long-running SSH sessions initiated with non-standard or unapproved SSH client software?
  context: Adversaries may use custom or unusual SSH clients for their operations, which can be identified by their software version string. This question flags successful SSH connections that use unapproved client software. It adds a condition to check for unusually long session durations, as an adversary might maintain a persistent connection after hijacking or establishing a foothold, which is atypical for normal administrative tasks.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Linux auth.log
  - Network sensors monitoring traffic to and from Linux/Unix servers, SSH jump boxes, and critical infrastructure.
  range: last 90 days
  queries:
  - siem: SEARCH Zeek_ssh_logs WHERE (auth_success = true AND client_version NOT IN approved_list). CORRELATE with Zeek_conn_logs AND ALERT if session_duration > threshold (e.g., 8 hours).
- question: Has an SSH session between a specific source and destination exhibited an unusually long duration or transferred an abnormally large amount of data?
  context: Normal SSH sessions between two specific systems (e.g., an admin's workstation and a server) tend to have predictable characteristics. An adversary hijacking a session might use it for activities that deviate from this norm, such as exfiltrating large amounts of data or maintaining a long-lived command-and-control channel. This question baselines the typical duration and data volume for each SSH connection pair and alerts on significant deviations, pointing to potential misuse of the session.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Linux auth.log
  - Network sensors monitoring traffic to and from Linux/Unix servers, SSH jump boxes, and critical infrastructure.
  range: last 90 days
  queries:
  - siem: FOR each source-destination SSH pair, compare new session's duration/data_volume from Zeek_conn_logs against historical_profile. ALERT if metrics > 98th_percentile.
- question: Has the underlying traffic pattern of an active SSH session changed significantly, for instance from interactive typing to a bulk data transfer?
  context: This question uses a sophisticated time-series analysis to differentiate between different types of activity within an encrypted SSH tunnel. An interactive shell has a distinct traffic pattern (small packets, irregular timing) compared to a file transfer (large packets, regular timing). A machine learning model can learn the pattern of normal interactive use. A sudden shift in this pattern, detected as an anomaly by the model, strongly suggests the session has been repurposed by an adversary for a different task, like data exfiltration, which is a key sign of a hijack.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Linux auth.log
  - Network sensors monitoring traffic to and from Linux/Unix servers, SSH jump boxes, and critical infrastructure.
  range: last 90 days
  queries:
  - ml_model: ANALYZE time-series features (packet_inter-arrival_times, packet_sizes) from Zeek_conn_logs with LSTM_autoencoder. ALERT if reconstruction_error spikes, indicating a pattern shift.