name: T1617: Hooking
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is using hooking frameworks to evade defenses on corporate mobile devices. Indicators include the presence of known hooking/rooting framework files, packages, or processes (like Xposed, Magisk, Cydia Substrate), repeated mobile attestation check failures (like SafetyNet or Knox Attestation), or network connections to repositories for hooking modules or root exploits.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any mobile devices with known hooking/rooting frameworks installed, or are they connecting to repositories for these tools?
    context: This question aims to directly identify the presence of specific, known indicators of compromise (IOCs) related to mobile hooking and rooting. Detecting these frameworks (such as Xposed, Magisk, SuperSU) or connections to their distribution sites is a high-confidence signal that a device's security integrity has been subverted, likely to enable further malicious activity or defense evasion.
    answer_sources:
      - MDM Application Inventory Logs, Zeek http.log, Zeek conn.log, Zeek dns.log. Data is sourced from corporate-managed mobile devices (iOS, Android), network DNS resolvers, web proxies, and the Mobile Device Management (MDM) log aggregation platform.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE watchlist_packages = ['de.robv.android.xposed.installer', 'com.topjohnwu.magisk', 'eu.chainfire.supersu', 'io.va.exposed'];
          DEFINE watchlist_domains = ['repo.xposed.info', 'magisk.me', 'forum.xda-developers.com'];

          SEARCH MDM Application Inventory Logs
          WHERE package_name IN watchlist_packages
          GROUP BY device_id, package_name;

          SEARCH Zeek DNS/HTTP Logs
          WHERE query_domain IN watchlist_domains OR http_host IN watchlist_domains
          GROUP BY source_ip, query_domain, http_host;
  - question: Are any mobile devices exhibiting an abnormally high rate of failed integrity checks?
    context: Mobile device integrity checks (like Google's SafetyNet or Samsung's Knox Attestation) are designed to verify that a device's software and hardware environment has not been tampered with. A sudden or statistically significant increase in failures for a specific device, compared to the rest of the fleet, can indicate rooting, hooking, or other forms of compromise that these checks are designed to detect. This question focuses on identifying behavioral anomalies rather than specific IOCs.
    answer_sources:
      - MDM Device Integrity Scan Logs. Data is sourced from the Mobile Device Management (MDM) log aggregation platform, collecting data from corporate-managed mobile devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Calculate baseline percentiles over 30 days for the entire fleet
          DEFINE p95_threshold, p99_threshold =
          CALCULATE_PERCENTILES(
              source=MDM Device Integrity Scan Logs,
              field=failed_check_count_per_day,
              time_window='30 days',
              percentiles=[95, 99]
          );

          // Step 2: Identify outliers in the last 24 hours
          SEARCH MDM Device Integrity Scan Logs in last 24 hours
          AGGREGATE count(failed_checks) as daily_failures by device_id
          WHERE daily_failures > p95_threshold;
  - question: Do any mobile devices exhibit a combination of anomalous behaviors across device settings and network traffic that suggests compromise?
    context: This question uses a machine learning approach to identify devices that are outliers based on a multi-faceted behavioral profile. Instead of looking at a single indicator, it combines several weak signals—such as developer mode being enabled, installation of non-market apps, unusual network traffic patterns, and integrity check failures—to build a more comprehensive picture. A high anomaly score from this model suggests a device is behaving in a way that is fundamentally different from its peers and its own history, warranting a deeper investigation for potential hooking or other compromise.
    answer_sources:
      - MDM Application Inventory Logs, MDM Device Integrity Scan Logs, Zeek http.log, Zeek conn.log, Zeek dns.log. Data is sourced from corporate-managed mobile devices (iOS, Android), network DNS resolvers, web proxies, and the Mobile Device Management (MDM) log aggregation platform.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Step 1: Feature Engineering from multiple data sources for each device
          FOR each device:
            feature_vector = [
              is_developer_mode_enabled,
              count_non_market_apps,
              daily_integrity_failures,
              dns_query_entropy,
              outbound_inbound_byte_ratio,
              unique_destination_port_count
            ];

          // Step 2: Model Training (on a baseline of known-good device data)
          MODEL = train_anomaly_detection_model(
              algorithm='Isolation Forest',
              data=historical_feature_vectors
          );

          // Step 3: Scoring and Detection
          FOR each device:
            anomaly_score = MODEL.predict(current_feature_vector);
            IF anomaly_score is in top 1% of all scores:
              FLAG device for investigation;