name: 'T1190: Exploit Public-Facing Application'
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps investigate if an adversary has gained initial access to the network by exploiting a public-facing application. It focuses on detecting evidence of exploitation attempts, including traffic that matches known exploit signatures, connections from malicious IPs, anomalous HTTP requests (e.g., high entropy URIs, strange user agents, patterns matching SQLi or LFI), and signs of webshells. Additionally, it looks for post-exploitation behavior, such as a web server process spawning a command shell or making unusual outbound network connections, and monitors for statistical deviations in application behavior like a spike in server errors or a shift in HTTP method distributions.
type: technique
related:
  - 'TA0001: Initial Access'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are we observing network traffic targeting public-facing services that matches signatures for known exploits?
    context: |
      This question aims to detect direct exploitation attempts against remote access solutions by using an Intrusion Detection/Prevention System (IDS/IPS). Matching a known signature (e.g., for a specific CVE) provides a high-confidence indicator that an adversary is attempting to leverage a known vulnerability. A critical alert is necessary because a successful exploit could lead to immediate initial access.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - DMZ, Network Gateway, External-facing servers (VPN, Citrix, etc.)
    range: last 90 days
    queries:
      - symbolic: 'pseudocode: SEARCH IDS/IPS logs FOR signature_match=TRUE AND destination_ip IN [public_services_ip_list] | ALERT'
  - question: Is there anomalous character entropy in URIs for web-based remote services, possibly indicating scanning or fuzzing?
    context: |
      This question seeks to identify pre-exploitation activities like scanning or fuzzing. Attackers often use automated tools that generate random or complex URI paths and parameters to find vulnerabilities. A sudden spike in character entropy compared to a normal baseline can be an early warning sign of such reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - DMZ, Network Gateway, External-facing servers (VPN, Citrix, etc.)
    range: last 90 days
    queries:
      - statistical: 'pseudocode: FROM Zeek_http_logs | CALCULATE entropy(uri_path, uri_query) FOR web_services | WHERE entropy > 99th_percentile_baseline | ALERT'
  - question: Has the volume of connection attempts to our remote services significantly deviated from predicted levels?
    context: |
      This question uses time-series forecasting to detect unusual spikes in connection volumes. A significant increase beyond the predicted range could indicate a brute-force attack, a distributed denial-of-service (DDoS) attempt, or widespread scanning activity against a specific port or service as a precursor to exploitation.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - DMZ, Network Gateway, External-facing servers (VPN, Citrix, etc.)
    range: last 90 days
    queries:
      - machine_learning: 'pseudocode: MODEL connection_volume_per_port with SARIMA | PREDICT expected_volume | IF observed_volume > confidence_interval | ALERT'
  - question: Has a successful connection been made to a public-facing application from a known malicious IP address?
    context: |
      This question focuses on identifying successful connections from sources already identified as malicious by threat intelligence. By joining network connection logs with a threat intelligence feed, we can quickly spot high-risk interactions with our public-facing assets, indicating a potential compromise or targeted attack.
    answer_sources:
      - Zeek conn.log
      - Zeek signatures.log
      - Network perimeter firewalls, DMZ network segments, Cloud security group flow logs, Internet-facing web servers (e.g., IIS, Apache, Nginx), VPN concentrators, External-facing database servers
    range: last 90 days
    queries:
      - symbolic: "pseudocode: JOIN Zeek_conn_logs ON source_ip WITH threat_intel_ips | WHERE connection_state != 'REJ' AND destination_port IN [public_app_ports] | ALERT"
  - question: Is a single source IP triggering an unusually high rate of high-severity CVE-related signatures?
    context: |
      This question helps differentiate between random, opportunistic scanning and a targeted exploitation attempt from a single attacker. By calculating the rate of specific, high-severity signature triggers per source IP, we can identify actors who are persistently and aggressively trying to exploit a known vulnerability, rather than just passively scanning.
    answer_sources:
      - Zeek conn.log
      - Zeek signatures.log
      - Network perimeter firewalls, DMZ network segments, Cloud security group flow logs, Internet-facing web servers (e.g., IIS, Apache, Nginx), VPN concentrators, External-facing database servers
    range: last 90 days
    queries:
      - statistical: 'pseudocode: FROM Zeek_signature_logs | GROUPBY source_ip, signature_id | CALCULATE trigger_rate_per_hour | WHERE signature_id IS high_severity_CVE AND trigger_rate > 3_std_dev_from_mean | ALERT'
  - question: Can incoming network connections be classified as 'suspicious-exploit-attempt' based on their features?
    context: |
      This question leverages a pre-trained machine learning model to proactively classify incoming connections in real-time. By analyzing a combination of features (port, protocol, duration, etc.), the model can identify connections that resemble past, confirmed malicious activity, allowing for faster detection of novel or evasive exploit attempts that might not match a specific signature.
    answer_sources:
      - Zeek conn.log
      - Zeek signatures.log
      - Network perimeter firewalls, DMZ network segments, Cloud security group flow logs, Internet-facing web servers (e.g., IIS, Apache, Nginx), VPN concentrators, External-facing database servers
    range: last 90 days
    queries:
      - machine_learning: "pseudocode: FOR each new_connection | EXTRACT features (dest_port, protocol, duration, bytes) | PREDICT classification using RandomForest_model | IF classification == 'suspicious-exploit-attempt' | ALERT"
  - question: Does an HTTP request contain patterns matching common exploits, scanners, or webshell filenames?
    context: |
      This question uses regular expressions to scan HTTP traffic for tell-tale signs of an attack. This includes searching for common attack strings (like SQL injection or directory traversal), user-agent strings of known scanning tools, and filenames in file transfers that are indicative of webshells. A match provides a strong signal of malicious intent.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Web Application Firewalls (WAFs), Public-facing web servers, Reverse proxies, Load balancers
    range: last 90 days
    queries:
      - symbolic: "pseudocode: SEARCH Zeek_http_logs WHERE uri OR user_agent OR post_body MATCHES regex(sqlmap|nmap|nuclei|../|SELECT|<script>) | ALERT"
  - question: Is a source IP generating sustained, high-entropy URI query parameters, suggesting fuzzing or brute-forcing?
    context: |
      This question seeks to identify attackers attempting to discover vulnerabilities by sending a large number of requests with randomized or complex parameters. Monitoring the Shannon entropy of URI queries provides a mathematical way to detect this abnormal complexity. A sustained high-entropy score from a single IP is a strong indicator of a targeted fuzzing attempt.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Web Application Firewalls (WAFs), Public-facing web servers, Reverse proxies, Load balancers
    range: last 90 days
    queries:
      - statistical: 'pseudocode: FROM Zeek_http_logs | CALCULATE shannon_entropy(uri_query) per source_ip over 5min_window | WHERE entropy > 98th_percentile_baseline | ALERT'
  - question: Are there any HTTP sessions that are anomalous compared to normal user browsing behavior?
    context: |
      This question uses an unsupervised anomaly detection model (an autoencoder) to find sessions that deviate from established patterns of normal user interaction. Instead of looking for specific malicious patterns, this approach learns what 'normal' looks like and flags anything that doesn't fit, making it effective at detecting novel or unusual probing and exploitation techniques.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Web Application Firewalls (WAFs), Public-facing web servers, Reverse proxies, Load balancers
    range: last 90 days
    queries:
      - machine_learning: 'pseudocode: MODEL http_sessions with Autoencoder | FOR each new_session | CALCULATE reconstruction_error | IF error > threshold | ALERT'
  - question: Has a web server process spawned a command-line interpreter or an unexpected child process?
    context: |
      This is a critical post-exploitation question. A web server process (like w3wp.exe or httpd) should almost never spawn a shell (cmd.exe, bash) or reconnaissance tools (whoami, net). Such an event is a very high-fidelity indicator that an attacker has successfully exploited the web application and is now executing commands on the server.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Public-facing web servers, Application servers in the DMZ, Container hosts running public applications
    range: last 90 days
    queries:
      - symbolic: "pseudocode: SEARCH process_creation_logs WHERE parent_process IN [web_server_processes] AND child_process IN [cmd.exe, powershell.exe, bash, whoami.exe, etc.] | ALERT"
  - question: Has a new or extremely rare parent-child process relationship appeared on a public-facing server?
    context: |
      This question aims to detect anomalous post-exploitation activity by baselining normal process relationships. While an attacker might use a legitimate-looking process name, the relationship (e.g., httpd spawning `ftp.exe`) could be entirely new or statistically very rare for that server. This method can catch evasive techniques that avoid spawning obvious command shells.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Public-facing web servers, Application servers in the DMZ, Container hosts running public applications
    range: last 90 days
    queries:
      - statistical: 'pseudocode: BASELINE parent_child_process_pairs and frequencies | ON new_process_creation | IF pair is new OR frequency < 1st_percentile | ALERT'
  - question: Does the process ancestry tree originating from a web server deviate from the learned normal structure?
    context: |
      This question models the entire chain of process creation events as a graph. Normal operations create predictable process trees. An attacker's post-exploitation activity, even if it involves multiple steps with seemingly legitimate processes, will likely create a process chain that deviates from the learned graph structure. This provides a sophisticated way to detect complex adversary actions on the host.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Public-facing web servers, Application servers in the DMZ, Container hosts running public applications
    range: last 90 days
    queries:
      - machine_learning: 'pseudocode: MODEL process_ancestry_graphs from web_servers | ON new_process_creation | IF new_ancestry_path deviates from learned_graph | ALERT'
  - question: Is a public-facing server making an outbound connection after a suspicious DNS query?
    context: |
      This question correlates DNS activity with network connections to detect command-and-control (C2) behavior. Attackers often use dynamic DNS domains for their C2 servers. By detecting a DNS query to a known DDNS provider from a web server, and then seeing an immediate outbound connection from that same server, we can infer that a C2 channel is being established.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - DMZ network segments, Egress points of the network, DNS resolvers serving the DMZ, Host-based firewalls on public-facing servers
    range: last 90 days
    queries:
      - symbolic: 'pseudocode: SEARCH Zeek_dns_logs for queries to DDNS_domains from public_servers | CORRELATE with Zeek_conn_logs for outbound connection from same source_ip | ALERT'
  - question: Is a public-facing server initiating outbound connections to new or unusual destinations, or exfiltrating an anomalous amount of data?
    context: |
      This question looks for deviations in a server's normal outbound communication patterns. A compromised server might connect to a new country, use a non-standard port for C2, or send out an unusually large amount of data (data exfiltration). By baselining normal behavior, we can flag these suspicious deviations.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - DMZ network segments, Egress points of the network, DNS resolvers serving the DMZ, Host-based firewalls on public-facing servers
    range: last 90 days
    queries:
      - statistical: 'pseudocode: BASELINE outbound ports, countries, data_volume per server | IF new_connection has port/country not in baseline OR outbound_bytes > 99th_percentile | ALERT'
  - question: Has the volume of outbound data from a server, segmented by protocol, significantly exceeded forecasted levels?
    context: |
      This question uses multivariate time-series analysis to model the complex outbound traffic patterns of a server. A sudden, unexpected spike in outbound data on a specific protocol (e.g., DNS, ICMP, or even standard TCP/UDP) that exceeds the model's prediction can be a strong indicator of either C2 communication or active data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - DMZ network segments, Egress points of the network, DNS resolvers serving the DMZ, Host-based firewalls on public-facing servers
    range: last 90 days
    queries:
      - machine_learning: 'pseudocode: MODEL outbound_data_volume per protocol with VAR | PREDICT expected_volume | IF observed_volume > confidence_interval | ALERT'
  - question: Has a web server produced an excessive number of 5xx server-side errors in a short time frame?
    context: |
      This question uses a simple threshold to detect potential application crashes caused by an exploit attempt. While some server errors are normal, a sudden, high-volume burst of 500-level errors can indicate that a malformed request, part of an exploit, is causing an unhandled exception or crashing a component of the web application.
    answer_sources:
      - Zeek http.log
      - Application error logs (e.g., Apache error.log, IIS Failed Request Tracing)
      - Public-facing web servers, Web Application Firewalls (WAFs), Load balancers, Centralized log aggregation platforms
    range: last 90 days
    queries:
      - symbolic: 'pseudocode: COUNT http_5xx_errors per server in 1min_window | IF count > 50 | ALERT'
  - question: Has the distribution of HTTP request methods for an application significantly shifted from its normal baseline?
    context: |
      This question looks for changes in how users (or attackers) are interacting with an application. For example, a web application that normally receives 95% GET requests and 5% POST requests might suddenly see a spike in POST requests. A Chi-squared test can statistically validate if this shift is significant, which could indicate an attacker is trying to submit exploit payloads via POST.
    answer_sources:
      - Zeek http.log
      - Application error logs (e.g., Apache error.log, IIS Failed Request Tracing)
      - Public-facing web servers, Web Application Firewalls (WAFs), Load balancers, Centralized log aggregation platforms
    range: last 90 days
    queries:
      - statistical: 'pseudocode: BASELINE http_method_distribution | CALCULATE current_hour_distribution | COMPARE with baseline using Chi-squared test | IF p_value < 0.05 | ALERT'
  - question: Are we observing HTTP requests that are considered outliers or noise by a clustering algorithm?
    context: |
      This question uses DBSCAN, an unsupervised clustering algorithm, to group similar, benign HTTP requests together. Requests that do not fit into any cluster are labeled as outliers. These outliers represent anomalous activity that doesn't conform to any normal usage pattern and could be part of a probing or exploit attempt that other methods might miss.
    answer_sources:
      - Zeek http.log
      - Application error logs (e.g., Apache error.log, IIS Failed Request Tracing)
      - Public-facing web servers, Web Application Firewalls (WAFs), Load balancers, Centralized log aggregation platforms
    range: last 90 days
    queries:
      - machine_learning: "pseudocode: CLUSTER http_requests using DBSCAN on features (size, length, user_agent) | IF request is labeled as 'noise' | ALERT"