name: T1030: Data Transfer Size Limits
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook addresses the threat of data exfiltration where adversaries chunk data into fixed sizes to evade detection. It provides investigative steps to identify this activity by looking for several key indicators: outbound connections to known malicious destinations, traffic patterns matching specific exfiltration tools, network flows with abnormally low variance in packet size, periodic outbound connections transferring identical data volumes, and connections initiated by processes that typically do not perform network communication.
type: technique
related:
  - TA0010: Exfiltration
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a successful outbound network connection been made to a known malicious destination based on threat intelligence?
    context: This question seeks to identify direct communication with known command-and-control (C2) or data exfiltration servers. Matching outbound connections (destination IPs, requested domains, or HTTP host headers) against a high-confidence threat intelligence feed is a fundamental step in detecting exfiltration attempts. A successful connection to a blacklisted endpoint is a strong indicator of compromise and warrants immediate investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress network gateways
      - DNS resolvers
      - web proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for IOC Match
          SEARCH Zeek conn.log, http.log, dns.log
          WHERE conn_state = 'SF' OR http.host IS NOT NULL OR dns.query IS NOT NULL
          JOIN with threat_intelligence_feed
          ON (conn.log.id.resp_h = feed.ip OR http.log.host = feed.domain OR dns.log.query = feed.domain)
          RETURN timestamp, source_ip, destination_ip, destination_port, protocol, http_host, dns_query
  - question: For connections to known malicious destinations, is the amount of data being transferred unusually large compared to historical norms?
    context: While a connection to a malicious indicator is concerning, analyzing the volume of data transferred can help assess the severity and nature of the event. An unusually large data transfer (e.g., exceeding the 95th percentile of historical volume for that specific indicator) could signify active data exfiltration rather than a simple C2 check-in. This helps prioritize alerts and focus on the most significant data loss events.
    answer_sources:
      - Zeek conn.log
      - Egress network gateways
      - DNS resolvers
      - web proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Volume Analysis
          FOR each connection matching threat_intelligence
          CALCULATE historical_baseline_volume (95th percentile of orig_bytes) for that indicator
          SEARCH Zeek conn.log
          WHERE destination matches indicator
          AND current_session.orig_bytes > historical_baseline_volume
          RETURN alert
  - question: Are internal systems connecting to external destinations that have a high probability of being malicious based on a reputation scoring model?
    context: This question moves beyond known bad indicators to proactively identify potentially malicious destinations that are not yet on threat intelligence lists. By using a machine learning model that scores destinations based on features like domain age, ASN reputation, and geographic location, analysts can uncover novel threats. An alert on a connection to a destination with a high malicious probability score (e.g., > 0.85) can provide early warning of a new C2 or exfiltration point.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - WHOIS data
      - ASN reputation data
      - Egress network gateways
      - DNS resolvers
      - web proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Reputation Scoring
          FOR each new external destination
          GATHER features (domain age, ASN reputation, geo-prevalence, etc.)
          APPLY trained classification_model(features)
          IF predicted_probability_malicious > 0.85
          RETURN alert with destination_details, score, source_ip
  - question: Does outbound network traffic contain signatures or patterns matching known data exfiltration tools?
    context: Adversaries often use specific tools for exfiltration which have unique network signatures. This question aims to detect these tools by matching traffic against predefined rules. For example, looking for unusual User-Agents combined with octet-stream content types in HTTP traffic, or an abnormally high volume of DNS TXT record queries, can pinpoint the use of specific exfiltration techniques like DNS tunneling.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network IDS (e.g., Suricata)
      - Egress network gateways
      - web proxies
      - internal DNS servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Signature Match
          SEARCH Zeek http.log
          WHERE http.method == 'POST'
          AND http.user_agent is non-standard
          AND http.content_type == 'application/octet-stream'
          AND http.uri_file_extension IN ['.php', '.asp']
          RETURN alert
  - question: Are there DNS queries with unusually high entropy, suggesting the use of Domain Generation Algorithms (DGA) for data exfiltration?
    context: To exfiltrate data via DNS, adversaries often encode data chunks into subdomains, which results in random-looking, high-entropy strings. This question focuses on identifying such queries by calculating the Shannon entropy of requested subdomains. A query with an entropy score significantly higher than the network's baseline suggests it was algorithmically generated and may be part of a DNS tunneling channel.
    answer_sources:
      - Zeek dns.log
      - Egress network gateways
      - web proxies
      - internal DNS servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Entropy Analysis
          FOR each dns.query in Zeek dns.log
          CALCULATE shannon_entropy(subdomain)
          CALCULATE baseline_entropy_mean and std_dev
          IF shannon_entropy > (baseline_mean + 3 * baseline_std_dev)
          RETURN alert with query_details
  - question: Is there evidence of automated, periodic network communication (beaconing) with fixed timing between an internal host and an external destination?
    context: Automated malware and C2 frameworks often communicate on a fixed schedule (beaconing). This question aims to detect this behavior by modeling the time between connections for each source-destination pair. A time series model (like ARIMA or LSTM) can learn the normal 'rhythm' of traffic. When observed connection timings significantly deviate from the model's forecast, it indicates a rigid, automated pattern inconsistent with human activity, which is a strong sign of C2 communication.
    answer_sources:
      - Zeek conn.log
      - Egress network gateways
      - web proxies
      - internal DNS servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Time Series Forecasting
          FOR each source-destination pair
          MODEL time_delta between connections using ARIMA/LSTM
          FORECAST next expected time_delta
          IF observed_time_delta deviates significantly from forecast
          RETURN alert for beaconing
  - question: Is network traffic being tunneled over a non-standard port for a given service, potentially to exfiltrate data in fixed-size chunks?
    context: Adversaries may disguise their exfiltration traffic by tunneling it over a common port like TCP 80, but using a different protocol. This question seeks to identify protocol mismatches where Zeek's dynamic protocol detection identifies a service (e.g., 'dns') that does not match the well-known service for the destination port (e.g., 80 for 'http'). This is a strong indicator of tunneling, which is often used to bypass firewall rules and hide malicious activity.
    answer_sources:
      - Zeek conn.log
      - Egress network gateways
      - core network switches where full packet capture is available
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Protocol Mismatch
          SEARCH Zeek conn.log
          WHERE service != well_known_service_for(id.resp_p)
          AND orig_bytes > 10KB
          RETURN alert with flow_details
  - question: Are there any long-running network flows where the size of the outbound packets is artificially uniform?
    context: When an adversary programmatically splits a large file into smaller, equal-sized chunks for exfiltration, the resulting network packets will have a very low size variance. This question aims to detect this by calculating the standard deviation of originator packet sizes within a flow. A flow with a standard deviation in the bottom 1st percentile (e.g., under 10 bytes) is highly anomalous and strongly suggests data is being chunked to evade size-based detection thresholds.
    answer_sources:
      - Packet Capture (PCAP)
      - Custom Zeek script for per-packet stats
      - Egress network gateways
      - core network switches where full packet capture is available
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Packet Size Variance
          FOR each outbound flow > 30 seconds
          CALCULATE std_dev(originator_packet_sizes)
          ESTABLISH baseline for normal std_dev
          IF std_dev is in bottom 1st percentile
          RETURN alert with flow_details
  - question: Can network flows be grouped into clusters that are characteristic of chunked data exfiltration (i.e., low packet size variance but high total data volume)?
    context: This question uses unsupervised machine learning to find 'needles in a haystack'. By clustering network flows based on features like average packet size, packet size variance, and total bytes transferred, analysts can identify groups of anomalous flows without prior knowledge of what to look for. A cluster characterized by very low packet size variance combined with a high total data volume is highly indicative of the 'Data Transfer Size Limits' technique and should be investigated.
    answer_sources:
      - Zeek conn.log
      - Packet Capture (PCAP)
      - Egress network gateways
      - core network switches where full packet capture is available
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Clustering
          EXTRACT features (avg_packet_size, std_dev_packet_size, total_bytes) from flows
          APPLY clustering algorithm (e.g., DBSCAN)
          INVESTIGATE clusters with low std_dev_packet_size and high total_bytes
  - question: Is an internal host making a series of regularly timed connections to the same destination, with each connection transferring a nearly identical amount of data?
    context: This question targets a classic exfiltration pattern: automated beaconing with fixed-size data chunks. A simple rule can detect this by looking for a host that makes multiple connections to the same destination within an hour, where the time interval between connections is regular (allowing for minor jitter) and the data volume sent in each connection is almost the same (e.g., within a 5% difference). This combination of regular timing and consistent size is a high-fidelity indicator of automated exfiltration.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - servers hosting sensitive data
      - egress network gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Beaconing Rule
          GROUP connections by source_ip, dest_ip, dest_port over 1 hour
          IF count(connections) > 5
          AND time_interval is regular (+/- 10%)
          AND variance(orig_bytes) is low (< 5% difference)
          RETURN alert for beaconing
  - question: Does a statistical analysis of connection timestamps and data volumes for a single host reveal both periodic behavior and low data size variance?
    context: This is a more mathematically rigorous approach to detecting the pattern from the previous question. First, an autocorrelation function (ACF) is applied to the time series of connection timestamps for a given host-destination pair to statistically confirm periodic signaling (beaconing). Then, for any pair confirmed to be beaconing, the variance of the data volume ('orig_bytes') is calculated. A host exhibiting both a strong periodic signal and very low data volume variance is highly likely to be exfiltrating chunked data.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - servers hosting sensitive data
      - egress network gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Autocorrelation
          FOR each source-destination pair
          APPLY ACF to connection timestamps to detect periodicity
          IF periodicity is detected
          CALCULATE variance of orig_bytes for those connections
          IF variance is below threshold
          RETURN alert
  - question: Are any hosts exhibiting anomalous network behavior when compared to their own historical baseline, specifically in ways that suggest automated C2 activity?
    context: This question uses machine learning to establish a 'normal' profile of network activity for each host and then flags significant deviations. An anomaly detection model (like Isolation Forest) is trained on features such as connection counts, unique destinations, and data volume statistics. The model can identify a host that suddenly starts exhibiting behavior characteristic of chunked exfiltration (e.g., many connections with low variance in bytes sent), even if the pattern doesn't match a predefined rule. This is effective for detecting new or previously unseen malware.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - servers hosting sensitive data
      - egress network gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Anomaly Detection
          FOR each host, per hour
          EXTRACT features (connection_count, unique_destinations, avg_time_between, std_dev_bytes)
          TRAIN Isolation Forest model on historical feature data
          FLAG hosts identified as strong anomalies by the model
  - question: Has a process that does not normally access the network (e.g., notepad.exe, cscript.exe) initiated an outbound connection involving a significant data upload?
    context: This question aims to identify malicious activity by focusing on the source process of network connections. By correlating endpoint process data (Windows Event ID 4688 and 5156) with network flow data (Zeek), analysts can spot anomalies. An alert is generated when a process that is not on an established whitelist of network-aware applications (like web browsers or email clients) makes an outbound connection, especially if that connection involves a significant data upload (>100KB). This often indicates that a script or legitimate tool is being abused for exfiltration.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Endpoint devices
      - application servers
      - user workstations
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Process Whitelist
          CORRELATE network connections (WinEvent 5156) with process creation (WinEvent 4688)
          MAINTAIN whitelist of normal network-communicating processes
          IF process_name NOT IN whitelist AND connection is outbound
          CORRELATE with Zeek conn.log
          IF orig_bytes > 100KB
          RETURN alert
  - question: Is any process sending an abnormally high ratio of uploaded data to downloaded data, compared to its own historical behavior?
    context: Most legitimate applications have a typical ratio of data sent vs. data received. For example, a web browser usually downloads much more than it uploads. This question seeks to find processes that violate their normal behavior. By calculating a historical baseline for the upload/download ratio for each process name, an alert can be triggered when a new connection initiated by that process dramatically exceeds its 99th percentile ratio. This is a strong statistical indicator of data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - application servers
      - user workstations
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for Data Ratio Analysis
          FOR each process_name
          CALCULATE historical 99th percentile of (orig_bytes / resp_bytes) ratio
          SEARCH new connections
          IF (current.orig_bytes / current.resp_bytes) > historical_99th_percentile
          RETURN alert
  - question: Is a process initiating a TLS connection using a client fingerprint (JA3) that does not match the known fingerprints for that application?
    context: Legitimate applications that use TLS (like Chrome or Firefox) have a characteristic 'fingerprint' (JA3) based on how they construct the TLS client hello message. Malware often uses its own custom TLS libraries, resulting in a different fingerprint. This question aims to detect process masquerading or the use of malicious tools by correlating the initiating process name with the JA3 fingerprint of the TLS connection. A mismatch between the expected and observed fingerprint for a given process is a high-fidelity indicator of malicious code execution.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 5156
      - Endpoint devices
      - application servers
      - user workstations
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Pseudocode for JA3/JARM Fingerprinting
          GENERATE JA3 fingerprint for all TLS connections
          CORRELATE JA3 with initiating process_name (WinEvent 5156)
          TRAIN model or create list of legitimate (process_name, JA3_fingerprint) pairs
          IF observed (process_name, JA3_fingerprint) pair is not legitimate
          RETURN alert