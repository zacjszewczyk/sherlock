name: T1030: Data Transfer Size Limits
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps identify if an adversary is exfiltrating sensitive data by chunking it into fixed sizes to evade detection. This is achieved by investigating several facets of network and endpoint activity, including connections to known malicious endpoints, traffic patterns matching exfiltration tools, statistical anomalies in packet sizes, periodic beaconing with fixed data volumes, and network connections initiated by anomalous or masquerading processes.
type: technique
related:
  - TA0010: Exfiltration
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any outbound network connections to known malicious C2 or data exfiltration endpoints based on threat intelligence?
    context: This question seeks to identify direct connections to adversary infrastructure by comparing network logs against a high-confidence threat intelligence feed of malicious IPs, domains, and URLs. A successful connection to a matched indicator is a strong signal of compromise or malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress network gateways
      - DNS resolvers
      - web proxies
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: JOIN (Zeek conn.log IPs, Zeek http.log hosts, Zeek dns.log queries) WITH Threat_Intelligence_Feed ON (destination) WHERE connection_successful
  - question: For connections to known malicious indicators, is the volume of outbound data unusually large compared to historical norms?
    context: This question adds context to an IOC match. While a connection to a known malicious indicator is bad, an unusually large data transfer to that indicator suggests that active data exfiltration is in progress. This is determined by comparing the current session's data volume to a historical baseline for that specific indicator.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress network gateways
      - DNS resolvers
      - web proxies
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each IOC_match_connection, GET historical_outbound_volume_baseline. IF current_outbound_volume > 95th_percentile(historical_baseline), THEN ALERT.
  - question: Can we identify previously unknown malicious destinations by scoring the reputation of all external connections using machine learning?
    context: This question focuses on proactive threat hunting beyond known IOCs. By building a model that scores destinations based on features like domain age, ASN reputation, and geographic prevalence, an organization can uncover new or emergent C2 infrastructure that is not yet present in threat intelligence feeds.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - WHOIS data
      - Egress network gateways
      - DNS resolvers
      - web proxies
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each external_destination, CALCULATE reputation_score(domain_age, ASN_rep, geo_prevalence). IF score > 0.85, THEN ALERT.
  - question: Is there any outbound network traffic that matches the known signatures or patterns of specific data exfiltration tools?
    context: This question focuses on identifying the specific tools an adversary might be using. This is accomplished by searching for unique fingerprints in network traffic, such as non-standard HTTP User-Agents, specific content types, or unusual DNS query patterns (e.g., a high volume of TXT records), which are characteristic of known exfiltration tools.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress network gateways
      - web proxies
      - internal DNS servers
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: SCAN http.log FOR (non_standard_user_agent AND content_type='octet-stream') OR SCAN dns.log FOR (high_volume_TXT_queries_to_subdomain).
  - question: Are we observing DNS queries with unusually high entropy, suggesting the use of Domain Generation Algorithms (DGAs) or data encoding within subdomains?
    context: This question addresses DNS tunneling, where data is encoded into the subdomain of a DNS query. These algorithmically generated subdomains appear random and have high entropy compared to human-readable names. Detecting high-entropy queries can uncover these covert C2 channels.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress network gateways
      - web proxies
      - internal DNS servers
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each dns_query, CALCULATE shannon_entropy(subdomain). IF entropy > 3_std_dev_above_mean, THEN ALERT.
  - question: Is there evidence of automated, rhythmic beaconing activity between internal hosts and external destinations that deviates from normal communication patterns?
    context: This question aims to detect the 'heartbeat' of malware C2 communications. Automated tools often check in at fixed intervals, creating a periodic signal. A time-series model can learn the normal, irregular rhythm of a host's traffic and flag connections that are too periodic, indicating a potential automated C2 channel.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress network gateways
      - web proxies
      - internal DNS servers
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each src-dst_pair, MODEL time_deltas_between_connections. IF new_connection_time_delta is ANOMALOUS, THEN ALERT.
  - question: Are there network connections where the observed application protocol does not match the standard protocol for the destination port, indicating potential tunneling?
    context: This question seeks to uncover protocol tunneling, an evasion technique where traffic is sent over a non-standard port (e.g., SSH over port 80). Detecting a mismatch between the destination port and the actual protocol identified by deep packet inspection is a strong indicator of this behavior.
    answer_sources:
      - Zeek conn.log
      - Packet Capture (PCAP)
      - Egress network gateways and core network switches where full packet capture is available
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: IN conn.log, FIND connections WHERE service != well_known_port_service AND outbound_bytes > threshold.
  - question: Are there any outbound network flows where the individual packet sizes are abnormally uniform, suggesting data is being programmatically chunked?
    context: This question is central to the T1030 technique. Adversaries split large files into fixed-size chunks to avoid detection. This results in a network flow where many packets have very similar sizes, leading to an extremely low statistical variance in packet size, which can be detected.
    answer_sources:
      - Zeek conn.log
      - Packet Capture (PCAP)
      - Egress network gateways and core network switches where full packet capture is available
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each network_flow > 30s, CALCULATE std_dev(packet_sizes). IF std_dev is in bottom 1st percentile, THEN ALERT.
  - question: Can we use unsupervised machine learning to discover clusters of network flows that exhibit characteristics of chunked data exfiltration (e.g., low packet size variance and high total volume)?
    context: This question uses an exploratory, data-driven approach. A clustering algorithm can group network flows based on multiple features. The analyst can then investigate anomalous clusters, specifically those containing flows with very low packet size variance but high total data transfer volume, which strongly indicates chunked exfiltration.
    answer_sources:
      - Zeek conn.log
      - Packet Capture (PCAP)
      - Egress network gateways and core network switches where full packet capture is available
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: CLUSTER network_flows using features (avg_packet_size, std_dev_packet_size, total_bytes). INVESTIGATE clusters with (low std_dev AND high total_bytes).
  - question: Are any internal hosts making a series of periodic connections to an external destination where each connection transfers a nearly identical amount of data?
    context: This question combines two key indicators: periodic beaconing and fixed-size data transfers. Finding both in the same series of connections from a single host is a high-fidelity indicator of automated, chunked exfiltration, as it matches the behavior of a tool systematically sending out data pieces.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - servers hosting sensitive data
      - egress network gateways
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: PER source_ip, FIND connection_groups WHERE count > 5 AND interval is regular AND data_size is consistent.
  - question: Can we statistically confirm periodic beaconing from an internal host and correlate it with low variance in transferred data volume?
    context: This is a more mathematically rigorous approach to identifying beaconing with chunked data. An autocorrelation function (ACF) can formally identify periodicity in connection timestamps, providing strong evidence of automation. Combining this statistical proof of beaconing with a low variance in data size across those connections further strengthens the finding.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - servers hosting sensitive data
      - egress network gateways
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each source_ip, APPLY ACF to connection_timestamps. IF periodicity_detected, THEN CALCULATE variance(data_sizes). IF variance is low, THEN ALERT.
  - question: Can an anomaly detection model identify hosts whose overall network behavior (connection count, timing, data volumes) deviates from their own established baseline?
    context: This question takes a holistic, host-centric view. An anomaly detection model learns the 'normal' network behavior for each host. It can then flag a host when its behavior pattern changes significantly (e.g., it suddenly starts beaconing or sending fixed-size data), identifying novel C2 activity without relying on pre-defined signatures.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Endpoint devices
      - servers hosting sensitive data
      - egress network gateways
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: TRAIN anomaly_detection_model on per-host_features. FOR each_host, IF model_flags_as_anomaly, THEN ALERT.
  - question: Is a process that does not normally perform network communication (e.g., notepad.exe, powershell.exe) initiating an outbound connection with a significant data upload?
    context: This question pivots to the endpoint to find the origin of suspicious network traffic. By correlating network logs with process execution logs, we can identify when a non-standard process (or a "living-off-the-land" binary) makes a network connection to upload data, which is highly indicative of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Endpoint devices
      - application servers
      - user workstations
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: JOIN network_logs with process_logs. IF process_name NOT IN whitelist AND outbound_bytes > 100KB, THEN ALERT.
  - question: Is a legitimate process exhibiting abnormal network behavior, specifically sending out significantly more data than it receives, compared to its own historical baseline?
    context: This question helps detect when a legitimate process, like a browser, is hijacked for exfiltration. This approach baselines the normal upload-to-download data ratio for each process. An alert is triggered when a process starts sending out far more data than it usually does, suggesting it is being abused.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Endpoint devices
      - application servers
      - user workstations
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each process_name, CALCULATE baseline_upload_download_ratio. IF new_connection_ratio > 99th_percentile(baseline), THEN ALERT.
  - question: Is a process initiating an encrypted (TLS) connection using a cryptographic fingerprint that is inconsistent with that application's known fingerprints, suggesting process masquerading or a custom C2 implant?
    context: This is an advanced technique for unmasking malicious encrypted traffic. The way a client application initiates a TLS session creates a unique JA3 fingerprint. If a process named 'chrome.exe' uses a JA3 fingerprint that doesn't match known Chrome fingerprints, it is very likely a malicious implant masquerading as a browser to exfiltrate data.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Endpoint devices
      - application servers
      - user workstations
    range: Last 90 days
    queries:
      - search_type: pseudocode
        query: FOR each TLS_connection, GET JA3_fingerprint and process_name. IF JA3_fingerprint NOT IN known_fingerprints_for_process, THEN ALERT.