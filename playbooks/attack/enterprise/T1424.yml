name: "T1424: Process Discovery"
id: "f8a5e1b2-c3d4-4e5f-8a1b-2c3d4e5f6a7b"
description: "This playbook addresses the threat of an adversary attempting to discover running processes on managed mobile devices. Such discovery often requires elevated privileges (rooting/jailbreaking) or physical access via developer tools, as direct access to the process list is restricted [1]. Investigations should focus on detecting three primary patterns: 1) Network exfiltration of a process list, identifiable through anomalous HTTP POST requests (e.g., high entropy) or DNS tunneling. 2) The use of the Android Debug Bridge (adb.exe) on a connected host computer to spawn local process discovery utilities (e.g., 'tasklist.exe', 'ps.exe'). 3) Mobile Device Management (MDM) alerts for 'rooted' or 'jailbroken' devices, correlated with network traffic to known malicious domains associated with compromise tools."
type: "technique"
related:
  - "TA0032: Discovery"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are mobile devices making HTTP POST requests to known command-and-control (C2) infrastructure?"
    context: "This question aims to detect direct C2 communication for data exfiltration. An HTTP POST to a known malicious destination from a mobile device is a strong indicator of compromise, potentially involving the exfiltration of a discovered process list."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Zeek ssl.log"
      - "Corporate Wi-Fi access points, network egress points, DNS servers, VPN concentrators, web proxies, Cloud Access Security Broker (CASB) logs."
    range: "last 90 days"
    queries:
      - technology: "SIEM"
        query: "SEARCH Zeek logs (conn.log, http.log) WHERE source_ip IN mobile_ip_range AND http_method == 'POST' AND destination_ip OR destination_domain OR ja3 OR ja3s IN C2_threat_intel_list"
  - question: "Is there anomalous network activity from mobile devices, such as high-entropy data transfers or unusually long DNS queries, that could indicate covert data exfiltration?"
    context: "This question seeks to identify data exfiltration that evades simple signature-based detection. High entropy in POST bodies can indicate encryption, while long or high-entropy DNS queries can be a sign of DNS tunneling. Comparing these metrics against a baseline helps to surface statistically significant deviations that warrant investigation."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Zeek ssl.log"
      - "Corporate Wi-Fi access points, network egress points, DNS servers, VPN concentrators, web proxies, Cloud Access Security Broker (CASB) logs."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each device IN mobile_vlan: CALCULATE rolling_baseline(http.post_body_entropy, http.uri_length, dns.query_length, dns.query_entropy) FOR 30_days. ALERT IF current_value > 99.5th_percentile(baseline) AND destination_is_newly_observed_domain"
  - question: "Can we use machine learning models to proactively detect complex C2 exfiltration patterns that are missed by traditional rules and statistical baselines?"
    context: "This question focuses on applying advanced machine learning to detect sophisticated exfiltration techniques. A Random Forest classifier can learn from various network features to identify C2 traffic, while an LSTM autoencoder can spot anomalous spikes in traffic volume over time. This provides a more robust, multi-faceted detection capability."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Zeek ssl.log"
      - "Corporate Wi-Fi access points, network egress points, DNS servers, VPN concentrators, web proxies, Cloud Access Security Broker (CASB) logs."
    range: "last 90 days"
    queries:
      - technology: "Machine Learning Pseudocode"
        query: "MODEL 1 (Random Forest): PREDICT C2_exfiltration USING features(entropy, uri_length, duration, bytes_sent, etc.). MODEL 2 (LSTM Autoencoder): PREDICT traffic_volume_anomaly USING time_series(bytes_sent_per_hour). ALERT ON high_prediction_score OR high_anomaly_score"
  - question: "Is the Android Debug Bridge (adb.exe) being used on a host computer to execute process discovery commands?"
    context: "This question targets the scenario where an adversary uses a computer physically connected to a mobile device to perform discovery. 'adb.exe' is a legitimate developer tool, but its use to spawn process listing utilities like 'tasklist.exe' or 'Get-Process' on non-developer machines is highly suspicious and could indicate an attempt to enumerate running processes on the connected device."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Logging (Event ID 4104)"
      - "Employee workstations, developer machines, privileged user workstations, Jump servers, Virtual Desktop Infrastructure (VDI) instances."
    range: "last 90 days"
    queries:
      - technology: "SIEM"
        query: "SEARCH Windows Event Logs (ID 4688) WHERE parent_process == 'adb.exe' AND new_process IN ('tasklist.exe', 'ps.exe', 'wmic.exe', 'powershell.exe'). IF new_process == 'powershell.exe', CHECK command_line for 'Get-Process', 'gps', 'ps'"
  - question: "Are there rare or previously unseen parent-child process relationships involving 'adb.exe' occurring on workstations?"
    context: "This question focuses on identifying anomalous behavior by baselining normal activity. While a developer might legitimately use 'adb.exe' to spawn certain processes, the same action by a user in the sales department would be highly unusual. Alerting on low-prevalence process relationships helps to detect such outliers that may signify malicious use of legitimate tools."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Logging (Event ID 4104)"
      - "Employee workstations, developer machines, privileged user workstations, Jump servers, Virtual Desktop Infrastructure (VDI) instances."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each host: CALCULATE baseline of (parent_process, child_process, user_role) tuples. CALCULATE prevalence_score for each tuple. ALERT IF observed_tuple.prevalence_score < threshold OR tuple is new for user_role"
  - question: "Can a machine learning model identify anomalous process creation events involving 'adb.exe' based on context like user role and host type?"
    context: "This question proposes using an unsupervised anomaly detection model (Isolation Forest) to automatically flag suspicious process chains. By considering features like the processes involved, the user's department, and command line characteristics, the model can learn what constitutes normal activity and identify high-risk outliers, such as 'adb.exe' being used for discovery on a non-technical user's machine."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Logging (Event ID 4104)"
      - "Employee workstations, developer machines, privileged user workstations, Jump servers, Virtual Desktop Infrastructure (VDI) instances."
    range: "last 90 days"
    queries:
      - technology: "Machine Learning Pseudocode"
        query: "MODEL (Isolation Forest): PREDICT anomaly_score USING features(parent_process, new_process, user_role, host_group, cmd_line_entropy). ALERT ON high_anomaly_score"
  - question: "Have any mobile devices been reported as 'rooted' or 'jailbroken' by our MDM, or are they communicating with infrastructure known to be associated with mobile compromise tools?"
    context: "This is a two-pronged question. First, it checks for a direct indicator of compromise from the MDM platform (a 'rooted' or 'jailbroken' status). Second, it hunts for network-level evidence of the compromise process itself, such as connections to domains or IPs used by rooting/jailbreaking toolkits. A match on either is a high-confidence indicator."
    answer_sources:
      - "Mobile Device Management (MDM) logs"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Mobile Device Management (MDM) platforms, corporate network egress points, guest Wi-Fi networks, DNS resolvers, Cloud Access Security Broker (CASB) logs."
    range: "last 90 days"
    queries:
      - technology: "SIEM"
        query: "QUERY 1: SEARCH MDM logs for device_status IN ('rooted', 'jailbroken'). QUERY 2: SEARCH Zeek logs WHERE source_ip IN mobile_ip_range AND destination_ip OR destination_domain OR ja3 OR sni IN mobile_compromise_threat_intel"
  - question: "Can we create a composite risk score for mobile devices to identify those exhibiting multiple, subtle indicators of compromise?"
    context: "This question addresses the challenge that a single anomalous event may not be enough to trigger an alert. By creating a risk score that aggregates several weaker signals—like connecting to new domains, using non-standard ports, or encountering unusual TLS certificates—we can identify devices that are behaving suspiciously over time, even if no single action is definitively malicious."
    answer_sources:
      - "Mobile Device Management (MDM) logs"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Mobile Device Management (MDM) platforms, corporate network egress points, guest Wi--Fi networks, DNS resolvers, Cloud Access Security Broker (CASB) logs."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each mobile_device: CALCULATE risk_score. INCREMENT score IF dns_query_to_NOD > 95th_percentile. INCREMENT score IF non-standard_port_conn > 98th_percentile. INCREMENT score IF anomalous_tls_cert_seen. ALERT IF risk_score > threshold"
  - question: "Can we use machine learning to detect when a mobile device starts communicating with low-reputation domains, and correlate this with MDM alerts?"
    context: "This question proposes a sophisticated, multi-stage ML approach. First, a model scores the reputation of every domain a device contacts. Then, a second model tracks the average reputation score for each device over time. A significant drop in this average score indicates the device is starting to communicate with suspicious destinations. Correlating this with an MDM 'rooted' alert provides strong confirmation of a compromise."
    answer_sources:
      - "Mobile Device Management (MDM) logs"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Mobile Device Management (MDM) platforms, corporate network egress points, guest Wi-Fi networks, DNS resolvers, Cloud Access Security Broker (CASB) logs."
    range: "last 90 days"
    queries:
      - technology: "Machine Learning Pseudocode"
        query: "MODEL 1 (XGBoost): CALCULATE domain_reputation_score for all domains. MODEL 2 (SARIMA): FOR each device, track time_series(avg_reputation_score). ALERT IF score drops significantly. CORRELATE alert with MDM status."