name: T1578.001: Create Snapshot
id: f1a2b3c4-d5e6-4f78-9a0b-1c2d3e4f5a6b
description: This playbook helps investigate whether an adversary is creating cloud snapshots to evade defenses or prepare for data exfiltration. It focuses on identifying suspicious snapshot creation activities, such as API calls from threat-listed IPs or with rare User-Agents, command-line tool usage for snapshot management on endpoints, rapid sequences of snapshot creation followed by permission changes to make them public or share them externally, snapshot creation by users who have never performed the action before or from anomalous locations, and snapshot events that follow other precursor malicious activities like credential dumping or discovery.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a cloud snapshot creation API call originated from a known malicious IP address?
    context: This question aims to detect snapshot creation attempts originating from IP addresses associated with known threat actors or malicious infrastructure. By correlating cloud API logs with threat intelligence feeds, analysts can quickly identify high-fidelity indicators of compromise, suggesting an external attacker may have gained access to cloud credentials and is attempting to exfiltrate data or establish persistence.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Cloud Management Plane
      - Internet Gateway
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH cloud_api_logs OR network_connection_logs
          WHERE action = 'create_snapshot'
          JOIN source_ip with threat_intelligence_feed
          RETURN matching_events
  - question: Was a cloud snapshot created using a rare or anomalous User-Agent string?
    context: Adversaries often use custom scripts or non-standard tools which present unique User-Agent strings. This question helps identify such anomalies by baselining normal User-Agent frequencies for snapshot creation events. A User-Agent that is statistically rare (e.g., in the bottom 1st percentile) could indicate the use of a malicious tool rather than a standard SDK or console activity.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Cloud Management Plane
      - Internet Gateway
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase (run over last 30 days)
          SEARCH cloud_api_logs WHERE action = 'create_snapshot'
          CALCULATE frequency of each user_agent
          DETERMINE 1st_percentile_threshold

          // Detection Phase (run continuously)
          SEARCH cloud_api_logs WHERE action = 'create_snapshot'
          IF user_agent_frequency < 1st_percentile_threshold
          THEN ALERT
  - question: Does a snapshot creation event exhibit a combination of anomalous features (source ASN, geolocation, User-Agent, identity) when compared to historical norms?
    context: This question uses a machine learning model to perform multi-dimensional anomaly detection. While a single attribute like IP or User-Agent might not be suspicious in isolation, a combination of unusual features can be a strong indicator of malicious activity. A high deviation score from the model suggests that the context of the snapshot creation (who, what, where, how) is significantly different from established patterns of benign activity.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Cloud Management Plane
      - Internet Gateway
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Training Phase
          INPUT: historical_api_logs (features: source_asn, source_geo, user_agent, user_identity)
          TRAIN one-class_svm_model

          // Inference Phase
          INPUT: new_snapshot_creation_event
          EXTRACT features (source_asn, source_geo, user_agent, user_identity)
          SCORE event with trained_model
          IF score is anomalous
          THEN ALERT
  - question: Has a process been created on an endpoint using command-line arguments that indicate cloud snapshot creation, modification, or sharing?
    context: This question looks for direct evidence of an adversary using common cloud command-line interface (CLI) tools (like AWS CLI, Azure CLI, gcloud CLI) to manage snapshots. Detecting specific commands associated with snapshot creation or permission changes on the command line is a high-fidelity indicator that these actions are being performed, potentially as part of an automated script or by a hands-on-keyboard attacker.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Administrator Workstations
      - CI/CD Pipeline Servers
      - Developer Endpoints
      - Jump Boxes/Bastion Hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs (EID: 4688 or Sysmon EID: 1)
          WHERE command_line MATCHES REGEX ('aws ec2 create-snapshot', 'az snapshot create', 'gcloud compute snapshots create', etc.)
          RETURN matching_events
  - question: Did a cloud CLI process execution exhibit unusually high command-line argument entropy for a given user-host pair?
    context: Adversaries may use obfuscated or unusually long and complex command-line arguments to hide their actions or pass encoded data. This question aims to detect such anomalies by calculating the Shannon entropy (a measure of randomness) of command-line arguments. A significant deviation from the established baseline entropy for a specific user on a specific host suggests that the command is not typical and may be obfuscated or malicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Administrator Workstations
      - CI/CD Pipeline Servers
      - Developer Endpoints
      - Jump Boxes/Bastion Hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase (run over last 90 days)
          SEARCH process_creation_logs WHERE process_name IN ('aws.exe', 'az.cmd', 'gcloud.cmd')
          FOR each user_host_pair:
            CALCULATE baseline_entropy_mean and std_dev for command_line

          // Detection Phase
          SEARCH new_process_creation_event
          IF process_name IN ('aws.exe', 'az.cmd', 'gcloud.cmd'):
            CALCULATE current_entropy
            IF current_entropy > (baseline_entropy_mean + 3 * std_dev)
            THEN ALERT
  - question: Can the command-line string of a cloud CLI execution be classified as a suspicious snapshot-related command by an NLP model?
    context: This question leverages a Natural Language Processing (NLP) model to understand the intent behind a command-line string, beyond simple keyword matching. A pre-trained model can distinguish between benign administrative commands and those that are structured in a way that is more indicative of malicious activity (e.g., unusual parameter combinations, attempts to obscure actions). This provides a more nuanced detection capability than regex alone.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Administrator Workstations
      - CI/CD Pipeline Servers
      - Developer Endpoints
      - Jump Boxes/Bastion Hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Inference Phase
          INPUT: new_process_creation_event WHERE process_name IN ('aws.exe', 'az.cmd', 'gcloud.cmd')
          EXTRACT command_line_string
          CLASSIFY command_line_string with nlp_model
          IF classification is 'suspicious-snapshot-command' with high_confidence
          THEN ALERT
  - question: Was a newly created snapshot made public or shared with an unauthorized external account within a short time window (e.g., 15 minutes)?
    context: A common adversary pattern is to create a snapshot and then immediately modify its permissions to allow for data exfiltration. This question uses a stateful correlation rule to specifically detect this sequence of events a creation event followed closely by a modification event for the same resource that either makes it public or shares it with an account not on an approved allow-list. This rapid two-step process is highly indicative of malicious intent.
    answer_sources:
      - AWS CloudTrail (CreateSnapshot, ModifySnapshotAttribute)
      - Azure Activity Logs (Microsoft.Compute/snapshots/write, Microsoft.Compute/snapshots/beginGetAccess/action)
      - Google Cloud Audit Logs (compute.snapshots.insert, compute.snapshots.setIamPolicy)
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Cloud Management Plane
      - Cloud IAM Service
      - Cloud Storage Services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRIGGER on snapshot_creation_event (e.g., 'CreateSnapshot')
          WATCH for snapshot_permission_modification_event (e.g., 'ModifySnapshotAttribute')
          WHERE resource_id is the same
          AND time_delta < 15 minutes
          AND new_permission IS 'public' OR shared_account NOT IN allow_list
          IF all conditions met
          THEN ALERT
  - question: Did a user create and then share/copy a snapshot in an unusually short amount of time compared to their own historical behavior?
    context: This question focuses on behavioral anomaly detection by analyzing the timing of user actions. While administrators may legitimately create and share snapshots, malicious activity is often automated and therefore executed much faster than typical human-driven workflows. By baselining the time delta between creation and sharing events for each user, we can flag sequences that are executed with uncharacteristic speed, suggesting scripted or malicious activity.
    answer_sources:
      - AWS CloudTrail (CreateSnapshot, ModifySnapshotAttribute)
      - Azure Activity Logs (Microsoft.Compute/snapshots/write, Microsoft.Compute/snapshots/beginGetAccess/action)
      - Google Cloud Audit Logs (compute.snapshots.insert, compute.snapshots.setIamPolicy)
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Cloud Management Plane
      - Cloud IAM Service
      - Cloud Storage Services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase (run over last 90 days)
          FOR each user:
            CALCULATE distribution of time_deltas between 'create' and 'share' events
            DETERMINE 5th_percentile_threshold

          // Detection Phase
          WHEN new 'create' -> 'share' sequence occurs for a user:
            CALCULATE new_time_delta
            IF new_time_delta < user's 5th_percentile_threshold
            THEN ALERT
  - question: Does a sequence of cloud API calls involving snapshot creation deviate from established models of benign administrative workflows?
    context: This question models entire administrative sessions as sequences of API calls using a Hidden Markov Model (HMM). Benign workflows have predictable patterns (e.g., log in, perform task, log out). An HMM trained on these good workflows can identify new sequences that are improbable or out of order, such as a 'create-snapshot' followed immediately by 'share-publicly' without other intervening steps. A low probability score for a sequence indicates a significant deviation from normal behavior.
    answer_sources:
      - AWS CloudTrail (CreateSnapshot, ModifySnapshotAttribute)
      - Azure Activity Logs (Microsoft.Compute/snapshots/write, Microsoft.Compute/snapshots/beginGetAccess/action)
      - Google Cloud Audit Logs (compute.snapshots.insert, compute.snapshots.setIamPolicy)
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Cloud Management Plane
      - Cloud IAM Service
      - Cloud Storage Services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Training Phase
          INPUT: sequences of API calls from known-good admin sessions
          TRAIN Hidden Markov Model (HMM)

          // Inference Phase
          INPUT: new sequence of API calls
          SCORE sequence probability using trained HMM
          IF sequence contains 'create-snapshot' AND probability is low
          THEN ALERT
  - question: Was a snapshot created by a user or role not explicitly authorized to do so, or is this the first time this user has ever performed this action?
    context: This question uses two simple but effective symbolic checks. First, it enforces a policy of least privilege by alerting if any user or role not on a pre-defined 'snapshot creators' allow-list performs the action. Second, it uses a 'first seen' logic to flag the very first time any user creates a snapshot. While this may be a benign event for a new administrator, it is a critical event to verify, as it could also be the first action of a compromised account.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4624
      - Zeek conn.log
      - Cloud IAM Service
      - Cloud Management Plane
      - Authentication Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH snapshot_creation_events
          // Rule 1
          IF user NOT IN snapshot_creator_allow_list
          THEN ALERT
          // Rule 2
          IF this is the first snapshot_creation_event ever for this user
          THEN ALERT
  - question: Did a snapshot creation event originate from an ASN or occur at a time of day that is anomalous for that specific user?
    context: This question builds a behavioral baseline for each administrative user, profiling their typical source locations (ASNs) and hours of activity. An alert is triggered when a snapshot is created by a user from a network (ASN) they've never used before, especially when combined with an unusual time of day (e.g., 3 AM for a user who only works 9-to-5). This combination of anomalies is a strong signal that the user's credentials may be compromised and used by an attacker in a different geography or time zone.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4624
      - Zeek conn.log
      - Cloud IAM Service
      - Cloud Management Plane
      - Authentication Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase (run over last 90 days)
          FOR each user:
            PROFILE historical source_asns and activity_hour_buckets

          // Detection Phase
          SEARCH new_snapshot_creation_event for a user
          IF event_source_asn is new for user AND event_hour is in a zero-activity bucket for user
          THEN ALERT
  - question: Does a snapshot creation event register as a significant behavioral anomaly according to a multi-factor user profile model?
    context: This question employs an Isolation Forest model, an effective algorithm for anomaly detection, to create a holistic behavioral fingerprint for each user based on features like source IP, User-Agent, and time of day/week. Unlike statistical methods that might check one or two variables, this model considers all features simultaneously. An anomaly score indicates that the event is 'isolated' or different from the dense cluster of normal activity, pointing to a potential compromise or insider threat.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4624
      - Zeek conn.log
      - Cloud IAM Service
      - Cloud Management Plane
      - Authentication Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Training Phase
          FOR each user:
            INPUT: historical event features (Source IP, User Agent, Time of Day, etc.)
            TRAIN isolation_forest_model

          // Inference Phase
          INPUT: new_snapshot_creation_event for a user
          EXTRACT features from event
          SCORE event with user's trained_model
          IF score is 'anomalous'
          THEN ALERT
  - question: Did a snapshot creation event occur on a host shortly after high-confidence precursor malicious activity, such as credential dumping or malware download?
    context: This question connects the dots between different stages of an attack. Snapshot creation on its own can be benign, but when it immediately follows a clear indicator of compromise (like lsass.exe memory access or downloading a known malicious tool), it becomes highly suspicious. This multi-stage rule elevates the priority of the snapshot event, contextualizing it as a likely step in a larger attack chain, such as data exfiltration preparation after initial access and credential harvesting.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10 (ProcessAccess for credential dumping)
      - Zeek conn.log
      - Zeek files.log
      - Endpoint Devices (Workstations, Servers)
      - CI/CD Pipeline Servers
      - Internet Gateway
      - Internal Network Segments
    range: last 24 hours
    queries:
      - technology: pseudocode
        query: |
          TRIGGER on high-confidence precursor_alert (e.g., lsass access, malware download) on a host/user
          WATCH for snapshot_creation_command from same host/user
          WHERE time_delta < 24 hours
          IF conditions met
          THEN ALERT as high-priority incident
  - question: Did a snapshot creation event occur on a host that had accumulated a high risk score from various suspicious activities over the last 24 hours?
    context: This question uses a risk-scoring model to quantify the 'suspiciousness' of a host over time. Instead of relying on a single high-confidence alert, it aggregates risk from multiple lower-confidence events (e.g., running discovery commands, downloading new executables). When a snapshot is then created on a host that has surpassed a risk threshold, it suggests the action is part of a broader pattern of suspicious behavior, even if no single precursor event was a smoking gun.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10 (ProcessAccess for credential dumping)
      - Zeek conn.log
      - Zeek files.log
      - Endpoint Devices (Workstations, Servers)
      - CI/CD Pipeline Servers
      - Internet Gateway
      - Internal Network Segments
    range: last 24 hours
    queries:
      - technology: pseudocode
        query: |
          // Scoring Phase (continuous)
          FOR each host:
            MAINTAIN a rolling 24-hour risk_score
            ADD points for precursor events (e.g., 'net user' +1, 'mimikatz' +10)

          // Detection Phase
          WHEN snapshot_creation_event occurs on a host:
            IF host_risk_score > 95th_percentile_of_all_hosts
            THEN ALERT
  - question: Based on the sequence of host and network events in the preceding 24 hours, what is the probability that a snapshot creation event is malicious?
    context: This question uses a sophisticated supervised learning model (Gradient Boosting) to classify a sequence of events leading up to a snapshot creation as either benign or malicious. The model is trained on labeled data and learns complex, non-linear relationships between various precursor activities (discovery commands, file creations, network connections). It provides a probabilistic score, offering a more nuanced assessment than a simple rule or risk sum, enabling analysts to prioritize alerts based on the model's confidence.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10 (ProcessAccess for credential dumping)
      - Zeek conn.log
      - Zeek files.log
      - Endpoint Devices (Workstations, Servers)
      - CI/CD Pipeline Servers
      - Internet Gateway
      - Internal Network Segments
    range: last 24 hours
    queries:
      - technology: pseudocode
        query: |
          // Training Phase
          INPUT: labeled 24-hour event sequences preceding snapshot creations
          EXTRACT features (counts of commands, file hashes, etc.)
          TRAIN gradient_boosting_classifier

          // Inference Phase
          WHEN snapshot_creation_event occurs:
            GATHER events from preceding 24 hours on host
            EXTRACT features from event sequence
            PREDICT probability of malice with trained model
            IF probability > threshold
            THEN ALERT