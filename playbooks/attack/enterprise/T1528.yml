name: T1528: Steal Application Access Token
id: f8d4c9a0-1b2c-4e3d-8f4a-5b6c7d8e9f0a
description: This playbook helps determine if an adversary has stolen an application
  access token to gain unauthorized access to cloud, SaaS, or containerized resources.
  Detection focuses on identifying anomalous use of bearer tokens in HTTP requests,
  unauthorized processes accessing cloud metadata services or local credential files,
  suspicious OAuth consent grant activity, and application tokens being used in ways
  that deviate from established baselines, such as from impossible travel locations
  or for unusual API calls.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Is an inbound API request using a Bearer token originating from a known
    malicious IP address, TOR exit node, or anonymous proxy?
  context: This question aims to identify the simplest case of token abuse, where
    a stolen token is used from an IP address already associated with malicious activity.
    A match provides a high-confidence indicator that the token is compromised and
    is being used by an adversary.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Cloud Provider Flow Logs
  - 'NAI: Internet gateways, API Gateways, Cloud Access Security Brokers (CASB), Web
    Application Firewalls (WAF), Cloud Provider Control Planes'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http_logs WHERE authorization_header CONTAINS 'Bearer' | JOIN conn_logs
      ON session_id | LOOKUP source_ip in threat_intel_feed | WHERE threat_match
      IS NOT NULL
- question: Has an API request with a Bearer token been made from a geographic location
    or Autonomous System Number (ASN) that is statistically rare for that specific
    token's history?
  context: This question identifies potential token compromise by detecting deviations
    from established usage patterns. A token consistently used from one region suddenly
    being used from another, statistically improbable location can indicate it has
    been stolen and is being used by an actor in a different part of the world.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Cloud Provider Flow Logs
  - 'NAI: Internet gateways, API Gateways, Cloud Access Security Brokers (CASB), Web
    Application Firewalls (WAF), Cloud Provider Control Planes'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http_logs WHERE authorization_header CONTAINS 'Bearer' | BASELINE
      historical_geolocations, historical_asns by bearer_token_hash over 30d | COMPARE
      current_request_geolocation, current_request_asn against baseline | ALERT if
      current_request falls in bottom 5th percentile of frequency
- question: Does a machine learning model classify an inbound API request using a
    Bearer token as malicious based on its combined features?
  context: This question leverages a supervised machine learning model to detect
    complex, non-obvious patterns of malicious activity that simple rules might miss.
    By analyzing multiple features simultaneously (IP info, time, User-Agent, etc.),
    the model can identify subtle indicators of compromise associated with stolen
    token usage.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Cloud Provider Flow Logs
  - 'NAI: Internet gateways, API Gateways, Cloud Access Security Brokers (CASB), Web
    Application Firewalls (WAF), Cloud Provider Control Planes'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT http_requests with 'Bearer' token | EXTRACT features (source_ip_geo,
      asn, ip_rep_score, time_of_day, user_agent_rarity) | APPLY classification_model
      | ALERT if prediction is 'malicious' with high confidence
- question: Has a process executed a command to access a cloud instance metadata
    service (169.254.169.254) or read local credential files (e.g., .aws/credentials,
    .kube/config)?
  context: This question seeks to directly observe an adversary's attempt to steal
    credentials from a compromised host. Accessing the metadata service or known
    credential files are common, direct methods for attackers to obtain application
    access tokens for lateral movement or privilege escalation within a cloud environment.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Zeek conn.log
  - 'NAI: IaaS virtual machines (e.g., Azure VMs, EC2 instances), container hosts,
    CI/CD pipeline runners, developer workstations'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs WHERE command_line CONTAINS '169.254.169.254'
      OR command_line CONTAINS '.aws/credentials' OR command_line CONTAINS '.kube/config'
      | UNION | SEARCH network_logs WHERE destination_ip = '169.254.169.254' AND
      source_process NOT IN allowlist
- question: Has a statistically uncommon process initiated a connection to the cloud
    instance metadata service?
  context: Legitimate cloud tools and agents frequently access the metadata service.
    This question aims to distinguish that normal activity from abnormal access by
    an adversary's tool, script, or a living-off-the-land binary that does not typically
    perform this action.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Zeek conn.log
  - 'NAI: IaaS virtual machines (e.g., Azure VMs, EC2 instances), container hosts,
    CI/CD pipeline runners, developer workstations'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network_logs WHERE destination_ip = '169.254.169.254' | BASELINE
      process_access_frequency per host over 30d | COMPARE current_process against
      baseline | ALERT if current_process not in top 95% of frequent accessors
- question: Has a sequence of events occurred where a process accesses the metadata
    service, creates an archive, and then exfiltrates data to a suspicious domain?
  context: This question aims to identify a full attack chain rather than a single
    event. By detecting the specific sequence of credential theft (metadata access),
    data staging (archival), and exfiltration, it provides a high-fidelity alert
    that an adversary has successfully stolen credentials and is now using them to
    steal data.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Zeek conn.log
  - 'NAI: IaaS virtual machines (e.g., Azure VMs, EC2 instances), container hosts,
    CI/CD pipeline runners, developer workstations'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: DETECT sequence: [network_conn to 169.254.169.254] followed by [file_creation
      of archive type by same process] followed by [outbound_conn to suspicious_domain
      by same process] | ALERT if sequence detected with high probability
- question: Has a user granted consent to a new OAuth application that is requesting
    high-risk permissions?
  context: Adversaries often use consent phishing to trick users into granting malicious
    applications powerful permissions (e.g., read all email, write to directories).
    This question focuses on the initial grant of these dangerous permissions to
    a new application, which is a critical point for detection and intervention.
  answer_sources:
  - AzureAD AuditLogs
  - Microsoft 365 Unified Audit Log
  - Okta System Log
  - Zeek http.log
  - 'NAI: Identity and Access Management (IAM) systems (e.g., Azure AD, Okta), SaaS
    application administration portals, network egress points'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH oauth_consent_logs WHERE event_type = 'consent_grant' | LOOKUP
      application_permissions in high_risk_watchlist | ALERT if new_application AND
      permission_is_high_risk
- question: Is a new OAuth application receiving an unusually high rate of user consents,
    or does it have a suspicious publisher domain name?
  context: Consent phishing campaigns often involve a rapid, widespread series of
    grants as the attack unfolds. This question aims to detect this anomalous velocity.
    Additionally, attacker-controlled applications may use auto-generated, non-human-readable
    domain names, and checking the domain's entropy can help identify these suspicious
    publishers.
  answer_sources:
  - AzureAD AuditLogs
  - Microsoft 365 Unified Audit Log
  - Okta System Log
  - Zeek http.log
  - 'NAI: Identity and Access Management (IAM) systems (e.g., Azure AD, Okta), SaaS
    application administration portals, network egress points'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH oauth_consent_logs for new_app in last 24h | CALCULATE consents_per_hour,
      publisher_domain_entropy | ALERT if consents_per_hour > 99th_percentile OR
      domain_entropy is low
- question: Has the overall rate of OAuth consent grants across the organization
    significantly spiked above the forecasted baseline?
  context: This question provides a broad, organization-wide view to detect large-scale
    consent phishing attacks. Instead of focusing on a single application, it monitors
    the total volume of consent events, which can signal a widespread campaign affecting
    multiple users simultaneously, even across different malicious applications.
  answer_sources:
  - AzureAD AuditLogs
  - Microsoft 365 Unified Audit Log
  - Okta System Log
  - Zeek http.log
  - 'NAI: Identity and Access Management (IAM) systems (e.g., Azure AD, Okta), SaaS
    application administration portals, network egress points'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: AGGREGATE total_oauth_consents per hour | APPLY time_series_anomaly_detection_model
      | ALERT if observed_count significantly exceeds forecasted_count
- question: Has an application access token been used from two geographically distant
    locations in a time frame that would be physically impossible?
  context: This is a classic detection method for credential theft. If a token is
    used in one location and then, moments later, from another location thousands
    of miles away, it's a strong indicator that the token has been compromised and
    is being used by at least one unauthorized party.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - AWS CloudTrail
  - Azure Monitor Logs
  - 'NAI: API Gateways, Cloud Service Provider (CSP) control planes, SaaS application
    backends, web application firewalls (WAF)'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each new request with token | RETRIEVE last_seen_timestamp, last_seen_geolocation
      for that token | CALCULATE time_delta, distance | CALCULATE speed = distance
      / time_delta | ALERT if speed > impossible_travel_threshold (e.g., 600 mph)
- question: Is an application token being used to make a set of API calls that is
    significantly different from its established historical usage pattern?
  context: Service accounts and automated workflows often use tokens for a very specific,
    repetitive set of tasks. An adversary who steals such a token is likely to use
    it for different purposes, like enumeration or data access. This question aims
    to detect this behavioral shift by comparing the current API activity against
    the token's normal baseline.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - AWS CloudTrail
  - Azure Monitor Logs
  - 'NAI: API Gateways, Cloud Service Provider (CSP) control planes, SaaS application
    backends, web application firewalls (WAF)'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each new session with token | BASELINE historical_api_calls over 30d
      | CALCULATE Jaccard_similarity(current_session_api_calls, historical_api_calls)
      | ALERT if similarity_score < threshold (e.g., 0.5)
- question: Does the usage of an application token (based on source IP, User-Agent,
    API endpoint, and time) fall outside the normal clusters of activity?
  context: This question uses unsupervised machine learning to define "normal" behavior
    without pre-existing labels. The algorithm groups similar requests into clusters.
    Any request that doesn't fit well into any existing cluster is flagged as an anomaly
    or outlier, representing a potential token compromise that warrants investigation.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - AWS CloudTrail
  - Azure Monitor Logs
  - 'NAI: API Gateways, Cloud Service Provider (CSP) control planes, SaaS application
    backends, web application firewalls (WAF)'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT api_requests | EXTRACT features (source_subnet, user_agent, api_endpoint,
      hour) | APPLY DBSCAN clustering model | ALERT if request is flagged as noise/outlier
- question: Has a process that is not on an approved allowlist accessed the cloud
    metadata service and then immediately made an outbound connection to a public
    IP address?
  context: This question looks for a specific, high-confidence attack pattern: steal
    credentials, then immediately use them or exfiltrate them. By correlating the
    metadata access with a subsequent outbound connection from the same process within
    a short time window, this rule can effectively detect active credential theft
    and exfiltration attempts.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - 'NAI: Cloud virtual machines (IaaS), container runtime environments, network traffic
    logs at the virtual network (VNet/VPC) level'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: DETECT stateful sequence: [process_conn to 169.254.169.254 where process
      NOT in allowlist] followed by [outbound_conn to public_ip from same process_guid]
      within 60 seconds
- question: After accessing the metadata service, did a process make an outbound
    connection to a statistically uncommon destination port?
  context: Adversaries often use non-standard ports for command and control (C2)
    or data exfiltration to bypass simple firewall rules that only allow traffic
    on ports 80 and 443. This question establishes a baseline of normal outbound ports
    for processes that access the metadata service and alerts on deviations, which
    could indicate malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - 'NAI: Cloud virtual machines (IaaS), container runtime environments, network traffic
    logs at the virtual network (VNet/VPC) level'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH processes that connected to 169.254.169.254 | BASELINE outbound_destination_port_frequency
      for those processes | COMPARE current_outbound_port against baseline | ALERT
      if port is outside 95th percentile of common ports
- question: Does a machine learning model classify the sequence of a metadata service
    call followed by an external connection as a high-risk exfiltration event?
  context: This question uses a classifier to assign a risk score to the sequence
    of events. By considering multiple features (process name, time delta, IP reputation,
    data volume), the model can more accurately distinguish between benign administrative
    activity and a malicious sequence indicative of an adversary stealing credentials
    and exfiltrating them.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - 'NAI: Cloud virtual machines (IaaS), container runtime environments, network traffic
    logs at the virtual network (VNet/VPC) level'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT event_sequence (metadata_call, external_conn) | EXTRACT features
      (process_name, time_delta, external_ip_rep, data_volume) | APPLY classification_model
      | ALERT if risk_score is high