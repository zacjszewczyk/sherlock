name: "T1528: Steal Application Access Token"
id: "a3e8b4e0-7b9a-4f1e-8d2c-5b6a7c8d9e0f"
description: "This playbook helps investigate whether an adversary has stolen an application access token to gain unauthorized access to cloud, SaaS, or containerized resources. Detections focus on identifying anomalous use of bearer tokens in HTTP requests (e.g., from malicious IPs, impossible travel), unauthorized processes accessing cloud metadata services or local credential files, widespread or suspicious OAuth consent grants indicative of consent phishing, and service tokens being used in uncharacteristic ways (e.g., interactively, anomalous API calls). The goal is to detect the misuse of stolen tokens through behavioral, statistical, and signature-based analysis across network, host, and cloud audit data."
type: "technique"
related:
  - "TA0006: Credential Access"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Have any inbound HTTP requests with 'Authorization: Bearer' headers originated from known malicious IP addresses, TOR exit nodes, or anonymous proxies?"
    context: "This question aims to identify token usage from sources that are inherently suspicious. An adversary might use compromised infrastructure or anonymizing services to hide their true location when using a stolen token. A match provides a high-confidence indicator of unauthorized access."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Cloud Provider Flow Logs"
      - "Internet gateways"
      - "API Gateways"
      - "Cloud Access Security Brokers (CASB)"
      - "Web Application Firewalls (WAF)"
      - "Cloud Provider Control Planes"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each http_log with 'Authorization: Bearer' header, JOIN conn_log on UID, CHECK source_ip against threat_intel_feed. ALERT on match."
  - question: "Is a Bearer token being used from a geographic location or Autonomous System (AS) that is statistically unusual for that specific token?"
    context: "This question establishes a behavioral baseline for each access token. Legitimate usage by an application or user typically originates from a predictable set of locations and networks. A request from a rare or new location could indicate the token has been stolen and is being used by an adversary from a different part of the world."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Cloud Provider Flow Logs"
      - "Internet gateways"
      - "API Gateways"
      - "Cloud Access Security Brokers (CASB)"
      - "Web Application Firewalls (WAF)"
      - "Cloud Provider Control Planes"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each bearer_token, BASELINE source_ip_geolocations and ASNs over 30 days. CALCULATE frequency distribution. FOR new requests, CHECK if geolocation or ASN is in bottom 5th percentile. ALERT on anomaly."
  - question: "Can a machine learning model classify an API request using a Bearer token as malicious based on its contextual features?"
    context: "This question leverages supervised machine learning to perform advanced anomaly detection. By training a model on various features of a request (IP info, time, User-Agent), it can learn the subtle patterns of normal versus malicious activity, potentially catching sophisticated attacks that simpler rule-based methods might miss."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Cloud Provider Flow Logs"
      - "Internet gateways"
      - "API Gateways"
      - "Cloud Access Security Brokers (CASB)"
      - "Web Application Firewalls (WAF)"
      - "Cloud Provider Control Planes"
    range: "last 90 days"
    queries:
      - "pseudocode: TRAIN classification model on historical API requests. FEATURES: IP geo, ASN, reputation, time, User-Agent, URI. PREDICT if new request with 'Authorization: Bearer' is 'malicious'. ALERT on high-confidence prediction."
  - question: "Has any process attempted to access the cloud instance metadata service (169.254.169.254) or local credential files without being on an established allowlist?"
    context: "This question targets a common adversary technique for retrieving credentials from a compromised host. The metadata service and local credential files (like ~/.aws/credentials) contain sensitive access tokens. Access by unexpected processes (e.g., curl, powershell) is a strong indicator of credential theft activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Zeek conn.log"
      - "IaaS virtual machines (e.g., Azure VMs, EC2 instances)"
      - "container hosts"
      - "CI/CD pipeline runners"
      - "developer workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: MONITOR process events for command lines containing '169.254.169.254', '.aws/credentials', or '.kube/config'. MONITOR network logs for connections to 169.254.169.254 from non-allowlisted processes. ALERT on match."
  - question: "Has a statistically infrequent process accessed the cloud metadata service on a given host?"
    context: "This question aims to detect anomalous process behavior by baselining normal interactions with the metadata service. On a given host, only a specific set of management agents or services should be accessing this service. A rare or never-before-seen process making this connection is highly suspicious."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Zeek conn.log"
      - "IaaS virtual machines (e.g., Azure VMs, EC2 instances)"
      - "container hosts"
      - "CI/CD pipeline runners"
      - "developer workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each host, PROFILE processes accessing 169.254.169.254. CALCULATE access frequency. ALERT if a process not in top 95% of frequent accessors connects to the metadata service."
  - question: "Has a sequence of events occurred that indicates token theft followed by data exfiltration, such as a process accessing the metadata service, creating an archive, and then making an outbound connection?"
    context: "This question looks for a chain of suspicious activities. Adversaries often follow a pattern: get credentials, package data, and send it out. Detecting this specific sequence (e.g., PowerShell -> metadata service -> 7zip -> outbound to new domain) provides a much stronger and more contextualized alert than any single step would."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Zeek conn.log"
      - "IaaS virtual machines (e.g., Azure VMs, EC2 instances)"
      - "container hosts"
      - "CI/CD pipeline runners"
      - "developer workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: USE sequence analysis model. DETECT pattern: 1) Process connects to metadata service. 2) Process creates child process that archives files. 3) Process makes outbound connection to high-entropy/new domain. ALERT when sequence is detected."
  - question: "Has a user granted a new OAuth application consent to high-risk permissions?"
    context: "This question helps detect the initial stage of a consent phishing attack. Adversaries trick users into granting a malicious application powerful permissions (like reading all email or files). Monitoring for grants to new applications that request these specific high-risk permissions allows for early detection before the adversary can abuse the access."
    answer_sources:
      - "AzureAD AuditLogs"
      - "Microsoft 365 Unified Audit Log"
      - "Okta System Log"
      - "Zeek http.log"
      - "Identity and Access Management (IAM) systems (e.g., Azure AD, Okta)"
      - "SaaS application administration portals"
      - "network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode: MAINTAIN watchlist of high-risk OAuth permissions. ALERT when user grants consent to a NEW application requesting a permission from the watchlist."
  - question: "Is a new OAuth application showing an anomalously high rate of user consents or does it have a suspicious publisher domain name?"
    context: "This question aims to identify a widespread consent phishing campaign through statistical anomalies. A successful campaign will result in an unusually high number of users granting consent in a short period. Additionally, malicious apps often use auto-generated, non-human-readable domain names, which can be detected by measuring string entropy."
    answer_sources:
      - "AzureAD AuditLogs"
      - "Microsoft 365 Unified Audit Log"
      - "Okta System Log"
      - "Zeek http.log"
      - "Identity and Access Management (IAM) systems (e.g., Azure AD, Okta)"
      - "SaaS application administration portals"
      - "network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR new OAuth app, CHECK if consents/hour > 99th percentile of all new apps. CHECK if publisher domain has low Shannon entropy. ALERT on either condition."
  - question: "Has there been an unexpected spike in the overall number of OAuth consent grants across the organization?"
    context: "This question provides a broad, organization-wide view to detect large-scale attacks. By forecasting the normal 'background noise' of consent grants, a time-series model can flag any significant deviation from the norm. This is useful for catching campaigns that might not trigger per-app or per-user thresholds but are anomalous in aggregate."
    answer_sources:
      - "AzureAD AuditLogs"
      - "Microsoft 365 Unified Audit Log"
      - "Okta System Log"
      - "Zeek http.log"
      - "Identity and Access Management (IAM) systems (e.g., Azure AD, Okta)"
      - "SaaS application administration portals"
      - "network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode: USE time-series model (e.g., SARIMA) to forecast expected OAuth grants per hour. ALERT if observed grants significantly exceed forecast."
  - question: "Has an application access token been used from two geographically distant locations in a time frame that would be physically impossible?"
    context: "This is a classic 'impossible travel' detection. It's a simple but effective way to identify token sharing or theft. If a token is used in New York and then 10 minutes later in Moscow, it's a clear sign that two different entities are using it, one of whom is likely unauthorized."
    answer_sources:
      - "Zeek http.log"
      - "Zeek conn.log"
      - "AWS CloudTrail"
      - "Azure Monitor Logs"
      - "API Gateways"
      - "Cloud Service Provider (CSP) control planes"
      - "SaaS application backends"
      - "web application firewalls (WAF)"
    range: "last 90 days"
    queries:
      - "pseudocode: CACHE last_use_timestamp and last_use_location for each token. ON new request, CALCULATE travel speed from last use. ALERT if speed > threshold (e.g., 600 mph)."
  - question: "Is an application token being used to make API calls that are significantly different from its historical baseline?"
    context: "This question focuses on behavioral drift. A service account token, for example, might only ever call three specific API endpoints. If that token is suddenly used to enumerate users or download data, this represents a major deviation from its normal purpose and could indicate misuse by an adversary."
    answer_sources:
      - "Zeek http.log"
      - "Zeek conn.log"
      - "AWS CloudTrail"
      - "Azure Monitor Logs"
      - "API Gateways"
      - "Cloud Service Provider (CSP) control planes"
      - "SaaS application backends"
      - "web application firewalls (WAF)"
    range: "last 90 days"
    queries:
      - "pseudocode: BASELINE API calls, source subnets, and User-Agents for each token over 30 days. CALCULATE Jaccard similarity of new session's API calls against baseline. ALERT if similarity < threshold."
  - question: "Does an API request made with an application token appear as an outlier when clustered with other 'normal' requests?"
    context: "This question uses unsupervised machine learning to find 'unknown unknowns.' Instead of defining what is bad, a clustering algorithm like DBSCAN defines what is normal based on the data itself. Any request that doesn't fit into a normal cluster is flagged as an anomaly, which could represent a novel attack technique or misuse of a stolen token."
    answer_sources:
      - "Zeek http.log"
      - "Zeek conn.log"
      - "AWS CloudTrail"
      - "Azure Monitor Logs"
      - "API Gateways"
      - "Cloud Service Provider (CSP) control planes"
      - "SaaS application backends"
      - "web application firewalls (WAF)"
    range: "last 90 days"
    queries:
      - "pseudocode: USE clustering algorithm (e.g., DBSCAN) on API request features (IP, User-Agent, endpoint, time). FLAG requests identified as noise/outliers for investigation."
  - question: "Has a non-allowlisted process accessed the metadata service and then immediately made an outbound network connection to a public IP?"
    context: "This question creates a stateful rule to detect a common attack pattern: steal credentials and immediately exfiltrate them. By correlating the process that accessed the metadata service with a subsequent outbound connection from the same process, we can generate a high-fidelity alert that is less prone to false positives."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Cloud virtual machines (IaaS)"
      - "container runtime environments"
      - "network traffic logs at the virtual network (VNet/VPC) level"
    range: "last 90 days"
    queries:
      - "pseudocode: CREATE stateful rule. TRIGGER when: 1) Non-allowlisted process connects to 169.254.169.254. AND 2) Same ProcessGUID makes outbound connection to public IP within 60 seconds."
  - question: "After accessing the metadata service, did a process make an outbound connection over a statistically uncommon port?"
    context: "This question focuses on identifying command-and-control (C2) or exfiltration over non-standard channels. While some outbound traffic after a metadata call might be normal (e.g., over port 443), an adversary might use a high, random port to evade simple firewall rules. Baselining normal port usage helps to spot these deviations."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Cloud virtual machines (IaaS)"
      - "container runtime environments"
      - "network traffic logs at the virtual network (VNet/VPC) level"
    range: "last 90 days"
    queries:
      - "pseudocode: BASELINE destination ports for outbound connections from processes that access metadata service. ALERT if a new connection uses a port outside the 95th percentile of common ports."
  - question: "Can a machine learning model identify a high-risk sequence involving a metadata service call followed by an external connection, based on features like process name, IP reputation, and data volume?"
    context: "This aims to provide a sophisticated, risk-based assessment of an event sequence. By considering multiple features together (the process involved, the reputation of the destination, the amount of data sent), a classifier can provide a more nuanced risk score than a simple rule, helping analysts prioritize the most critical alerts."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Cloud virtual machines (IaaS)"
      - "container runtime environments"
      - "network traffic logs at the virtual network (VNet/VPC) level"
    range: "last 90 days"
    queries:
      - "pseudocode: TRAIN classifier on sequences. FEATURES: process name, time delta, external IP reputation, data volume. OUTPUT risk score. ALERT on high score."