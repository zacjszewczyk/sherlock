name: T1601.002: Downgrade System Image
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is evading defenses
  by downgrading system images on network devices. This can be identified by observing
  file transfers of known-vulnerable firmware hashes, explicit boot configuration
  commands pointing to non-standard images, devices rebooting with an older firmware
  version than the established baseline, firmware transfers with anomalous metadata
  (e.g., from an unknown source IP or at an unusual time), or a correlated sequence
  of a file transfer, a boot configuration change, and a system reboot all occurring
  in a short time frame.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any files been transferred across the network that match a watchlist
    of known-vulnerable or outdated network device firmware images?
  context: This question aims to detect the direct transfer of malicious or outdated
    firmware. By maintaining a watchlist of file hashes (SHA256/MD5) for vulnerable
    firmware versions, we can monitor file transfers in near-real time. A match indicates
    a potential attempt to stage a downgrade attack, allowing for a rapid response
    before the image is installed.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Network traffic at aggregation points
  - Network management servers
  - Firmware distribution points
  - Core routers and switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH Zeek files.log | HASH file | LOOKUP hash against firmware_hash_watchlist
      | WHERE match_found=true
- question: Are firmware files being transferred to network devices from unusual
    or non-standard source locations at a statistically significant rate?
  context: Legitimate firmware updates typically originate from a small, well-defined
    set of management servers. This question seeks to identify firmware transfers
    from sources that deviate from this established baseline. An alert on a statistically
    rare source IP suggests an unauthorized party is attempting to transfer a file,
    which could be a precursor to a system downgrade.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Network traffic at aggregation points
  - Network management servers
  - Firmware distribution points
  - Core routers and switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH Zeek files.log WHERE file_extension IN ['.bin', '.img'] | STATS
      count by source_ip, destination_device_type | COMPARE count to historical_baseline
      | WHERE count > 95th_percentile AND source_ip NOT IN approved_sources
- question: Can we identify potentially malicious firmware file transfers using a
    machine learning model trained on the characteristics of legitimate updates?
  context: This question leverages machine learning to build a more nuanced detection
    method than simple rule-based checks. By training a model on various features
    of historical file transfers (e.g., source, time, size), we can learn the subtle
    patterns of legitimate activity. The model can then classify new, unseen transfers,
    flagging those that appear malicious with high confidence, even if they don't
    trigger a specific rule.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Network traffic at aggregation points
  - Network management servers
  - Firmware distribution points
  - Core routers and switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: STREAM Zeek files.log, conn.log data | EXTRACT features (is_local, mime_type,
      size, etc.) | INPUT to ML_model | WHERE classification='malicious' AND confidence
      > 0.9
- question: Have any commands been executed on network devices to change the boot
    image to a non-approved version?
  context: This question looks for direct evidence of a boot configuration change
    via command line logs. An adversary must modify the boot parameters to make a
    downgraded image persistent. By monitoring syslog for specific boot commands
    and comparing the specified filename against an authoritative list of approved
    images (from a CMDB), we can catch the exact moment an unauthorized change is
    attempted.
  answer_sources:
  - Zeek syslog.log
  - Windows Event ID 4688
  - Windows Event ID 4648
  - Syslog servers
  - Network device command line interfaces (CLIs)
  - Windows-based network management workstations
  - SIEM/Log aggregation platform
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH Zeek syslog.log | REGEX for "boot system", "set system image", etc.
      | EXTRACT device_hostname, image_filename | LOOKUP image_filename against
      CMDB_approved_images FOR device_hostname | WHERE match_found=false
- question: Are administrators issuing boot configuration commands at unusual times
    or with unusual frequency?
  context: Legitimate administrative tasks, including boot configuration changes,
    often follow predictable patterns. This question aims to detect anomalous behavior
    by authorized users, which could indicate a compromised account. By baselining
    the timing and frequency of these sensitive commands per user, we can flag activity
    that is statistically improbable, such as a rare command being issued in the middle
    of the night.
  answer_sources:
  - Zeek syslog.log
  - Windows Event ID 4688
  - Windows Event ID 4648
  - Syslog servers
  - Network device command line interfaces (CLIs)
  - Windows-based network management workstations
  - SIEM/Log aggregation platform
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH Zeek syslog.log for boot_commands | STATS frequency, timing by user,
      device | COMPARE to user_behavioral_baseline | WHERE command_rarity > 3_std_dev
      OR execution_time IS outside_normal_window
- question: Did a sequence of commands executed on a network device deviate from
    the normal, learned pattern for administrative sessions?
  context: Adversaries may not follow the same procedural steps as a legitimate administrator.
    This question uses a sequence analysis model to learn the 'grammar' of a normal
    administrative session. By modeling the expected flow of commands, the system
    can identify and alert on sessions that contain anomalous sequences, such as a
    user immediately changing the boot image after login without performing any diagnostic
    steps, which has a low probability of being a legitimate action.
  answer_sources:
  - Zeek syslog.log
  - Windows Event ID 4688
  - Windows Event ID 4648
  - Syslog servers
  - Network device command line interfaces (CLIs)
  - Windows-based network management workstations
  - SIEM/Log aggregation platform
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: STREAM Zeek syslog.log command sessions | GROUP by session | INPUT command_sequence
      to sequence_analysis_model | WHERE session_probability < legitimate_threshold
- question: Has a network device rebooted with a firmware version that is older than
    the version recorded in our asset inventory?
  context: This question provides a definitive check to confirm if a downgrade has
    occurred. After a device reboots, it logs its current running version. By comparing
    this logged version against the authoritative version stored in a Configuration
    Management Database (CMDB), we can immediately detect a discrepancy. An alert
    is triggered if the device is running a version that is chronologically older
    than the approved one, confirming a successful downgrade.
  answer_sources:
  - Zeek syslog.log
  - Syslog servers
  - Configuration Management Database (CMDB)
  - Network devices themselves via polling
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH Zeek syslog.log for boot_messages | EXTRACT hostname, running_version
      | LOOKUP CMDB for expected_version for hostname | WHERE running_version !=
      expected_version AND running_version_date < expected_version_date
- question: Has the reported firmware version for any network device changed to an
    older version since the last time it was checked?
  context: This question focuses on detecting a downgrade by tracking the state of
    a device's firmware version over time. Instead of relying on a static CMDB, this
    method keeps a running history of the last seen version for each device. Any change
    to a chronologically older version is flagged. This is a simple yet effective
    way to detect a downgrade without the overhead of maintaining a complex CMDB,
    as it only needs to remember the last known state.
  answer_sources:
  - Zeek syslog.log
  - Syslog servers
  - Configuration Management Database (CMDB)
  - Network devices themselves via polling
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: POLL devices for version OR PARSE status messages | FOR each device, GET
      current_version | RETRIEVE last_known_version | IF current_version_date < last_known_version_date
      THEN ALERT | STORE current_version as last_known_version
- question: Has a time-series analysis of device firmware versions detected an unexpected
    change, such as a downgrade outside a maintenance window?
  context: Firmware versions on network devices should be stable, changing only during
    planned maintenance. This question applies time-series anomaly detection to the
    version history of devices. The model learns the normal 'steady state' of a device's
    version and the cadence of legitimate updates. Any deviation, especially a change
    to a previous version number outside of a known maintenance window, would be flagged
    as a highly suspicious anomaly.
  answer_sources:
  - Zeek syslog.log
  - Syslog servers
  - Configuration Management Database (CMDB)
  - Network devices themselves via polling
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: INPUT time-series of device_version_reports to anomaly_detection_model
      | WHERE model flags unexpected_version_change | CORRELATE with maintenance_window_schedule
      | ALERT if change is outside_window
- question: Are files with firmware-like extensions being transferred to network
    devices from unapproved source IP addresses?
  context: This question provides a straightforward, rule-based method for detecting
    suspicious firmware transfers. Legitimate updates should only come from a specific
    list of management servers. By creating a rule that triggers on the combination
    of a destination device, a common firmware file extension, and a source IP that
    is not on the approved list, we can quickly identify and alert on potentially
    unauthorized staging of firmware.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Network traffic at aggregation points (e.g., core switch SPAN port)
  - Network management subnet
  - Internet gateway
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH Zeek files.log WHERE destination_ip IN network_device_range AND
      file_extension IN ['.bin', '.img', '.swi', '.pkg'] AND source_ip NOT IN approved_server_list
- question: Have any firmware transfers to network devices accumulated a high risk
    score based on deviations from baselined behavior?
  context: This question uses a risk-scoring model to identify suspicious transfers
    that may not violate a single hard rule but are anomalous when viewed in combination.
    By baselining multiple facets of legitimate transfers (source, protocol, time,
    size) and assigning points for each deviation, we can calculate a total risk
    score. Transfers exceeding a statistical threshold (e.g., 98th percentile) are
    flagged, allowing for detection of activity that is 'suspiciously different' across
    several vectors.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Network traffic at aggregation points (e.g., core switch SPAN port)
  - Network management subnet
  - Internet gateway
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: FOR each new firmware_transfer | CALCULATE score = 0 | IF source_ip is
      external THEN score+=2 | IF time is outside_window THEN score+=1 | IF file_size
      is anomalous THEN score+=1 | IF score > historical_98th_percentile_score THEN
      ALERT
- question: Have any firmware transfer events been identified as outliers or noise
    by a clustering algorithm?
  context: This question employs unsupervised machine learning to find 'unknown unknowns.'
    By feeding transfer metadata into a clustering algorithm like DBSCAN, we can group
    similar events. Legitimate updates, which are consistent in nature, will form
    dense clusters. An adversary's actions, which are likely to be unique, will not
    fit into these clusters and will be flagged as noise or outliers, generating
    an alert for further investigation.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Network traffic at aggregation points (e.g., core switch SPAN port)
  - Network management subnet
  - Internet gateway
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: RUN DBSCAN clustering on firmware_transfer_events with features (source_ip,
      dest_ip, protocol, size, time) | IDENTIFY events labeled as 'noise' or belonging
      to sparse clusters | ALERT on identified outliers
- question: Has the full sequence of a firmware transfer, a boot configuration command,
    and a system reboot been observed for a single network device within a short
    time window?
  context: This question correlates multiple, distinct events to detect the full
    attack chain of a system downgrade. A single event might be benign, but the sequence
    of a file transfer, followed by a boot command, and then a reboot for the same
    device is highly indicative of a firmware change. A SIEM correlation rule can
    detect this specific sequence, providing a high-fidelity alert that a downgrade
    has been attempted or completed, especially if it occurs outside a maintenance
    window.
  answer_sources:
  - Zeek files.log
  - Zeek syslog.log
  - Zeek conn.log
  - Windows Event ID 4688
  - SIEM/Log aggregation platform
  - Network management servers
  - Core network devices
  - Windows hosts used for network administration
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: CORRELATE logs over 60min window for same device_ip | TRIGGER on sequence:
      (Event A: files.log transfer) -> (Event B: syslog 'boot system' cmd) -> (Event
      C: syslog 'reboot' msg) | IF outside_maintenance_window, set priority=high
- question: Has the full downgrade sequence (transfer, boot command, reboot) occurred
    with a frequency that is statistically unlikely for a given device?
  context: This question builds on the correlation rule by adding a layer of statistical
    baselining. The full downgrade sequence should be an extremely rare event, especially
    outside of maintenance. By baselining the frequency of this sequence, we can
    alert on any occurrence that is not explicitly planned or exceeds a very low
    threshold (e.g., more than once per quarter). This helps filter out potential
    false positives from legitimate but poorly documented maintenance.
  answer_sources:
  - Zeek files.log
  - Zeek syslog.log
  - Zeek conn.log
  - Windows Event ID 4688
  - SIEM/Log aggregation platform
  - Network management servers
  - Core network devices
  - Windows hosts used for network administration
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH for downgrade_sequence (transfer, boot, reboot) | GROUP by device
      | CALCULATE frequency | COMPARE to historical_baseline_frequency | ALERT if
      frequency > 1_per_quarter OR sequence is outside_maintenance_window
- question: Can we detect anomalous downgrade activity by analyzing the relationships
    and interactions between users, devices, and actions as a graph?
  context: This question proposes a sophisticated graph-based analysis to understand
    the full context of an action. Normal administrative activity creates predictable
    graph structures. An attack, however, will likely create a graph with different
    nodes (e.g., an external IP) and different pathways. By modeling all related activities
    as a graph, a machine learning model can identify subgraphs that represent anomalous
    or malicious behavior, providing a holistic view of the attack that is difficult
    to achieve with event-based correlation alone.
  answer_sources:
  - Zeek files.log
  - Zeek syslog.log
  - Zeek conn.log
  - Windows Event ID 4688
  - SIEM/Log aggregation platform
  - Network management servers
  - Core network devices
  - Windows hosts used for network administration
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: BUILD activity graph with nodes (users, devices, IPs) and edges (actions)
      | APPLY ML model to identify anomalous subgraphs | ALERT on subgraphs matching
      attack patterns or deviating from normal admin_activity_graphs