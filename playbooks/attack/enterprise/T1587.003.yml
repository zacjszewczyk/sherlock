name: T1587.003: Digital Certificates
id: c3a8b4f0-5d6e-4a9b-8c7d-6f5e4d3c2b1a
description: This playbook helps determine if an adversary is developing resources related to digital certificates for future operations. It focuses on identifying malicious or suspicious certificates by checking for matches against known threat intelligence, analyzing for characteristics of abuse such as self-signatures or typosquatted subjects, detecting statistical anomalies like unusual validity periods or high entropy, tracking certificate reuse across disparate infrastructure, and identifying certificates issued for very recently registered domains.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any observed digital certificates matching known malicious indicators from threat intelligence feeds based on their SHA1 hash, serial number, or issuer?
    context: This question focuses on detecting known threats by directly comparing observed certificate attributes against active threat intelligence feeds. A positive match provides a high-confidence signal that an adversary is reusing infrastructure or tools from a known campaign, enabling a rapid response.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, web proxies, mail gateways, and inline TLS decryption devices where TLS inspection is performed.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each certificate in ssl.log:
            IF certificate.sha1 IN malicious_sha1_list OR
               certificate.serial IN malicious_serial_list OR
               certificate.issuer IN malicious_issuer_list:
              ALERT high_priority ("Malicious Certificate IOC Match")
  - question: Are there any certificate issuers that are extremely rare on the network and not on an established allowlist?
    context: This question helps to identify potentially malicious CAs or self-signed certificates that are not prevalent enough to be on a blocklist. By calculating the prevalence of all issuers over a 30-day window and flagging those in the bottom 0.1 percentile, security teams can uncover niche or custom CAs used by adversaries. Correlating these rare issuers with connections to low-reputation IPs adds confidence to the finding.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, web proxies, mail gateways, and inline TLS decryption devices where TLS inspection is performed.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          DEFINE issuer_prevalence = calculate_prevalence(ssl.log.issuer) over last 30 days
          FOR each issuer in issuer_prevalence:
            IF issuer.prevalence < 0.1_percentile AND issuer NOT IN allowlist:
              FLAG for review
  - question: Can a machine learning model identify new certificates that are likely malicious based on their attributes?
    context: This question applies machine learning to proactively identify malicious certificates that do not have an exact IOC match. By training a classifier on features like validity period, key algorithm, and subject/issuer information from known good and bad certificates, the model can score newly observed certificates. A high malicious probability score indicates a certificate that shares characteristics with known malicious ones and requires investigation.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, web proxies, mail gateways, and inline TLS decryption devices where TLS inspection is performed.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each new_certificate in ssl.log:
            features = extract_features(new_certificate)
            score = classification_model.predict_proba(features)
            IF score > 0.85:
              ALERT medium_priority ("High Probability Malicious Certificate")
  - question: Are any self-signed certificates being used, and have any of them been installed as a root certificate authority on endpoints?
    context: This question seeks to identify two related risky behaviors. First, it detects the use of self-signed certificates, often used by adversaries to encrypt C2 traffic. Second, it correlates this network observation with endpoint logs to detect if a self-signed certificate has been installed into the root trust store (T1553.004), a critical step for enabling man-in-the-middle attacks.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network egress points, corporate DNS resolvers, and all enterprise Windows endpoints' certificate trust stores.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each certificate in ssl.log:
            IF certificate.issuer == certificate.subject:
              SEARCH endpoint_logs for EventID 41 with certificate.thumbprint
              IF found:
                ALERT critical_priority ("Suspicious Root CA Installed")
              ELSE:
                ALERT medium_priority ("Self-Signed Certificate Observed")
  - question: Are certificates being used for domains that appear to be typosquatted versions of our own or partner domains?
    context: This question helps detect phishing or C2 infrastructure masquerading as legitimate domains. By calculating the Levenshtein distance between certificate domain names and a list of high-value internal/external domains, analysts can flag potential typosquats. Correlating these with certificates from free CAs and recently registered domains (bottom 5th percentile of age) strengthens the signal of malicious intent.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network egress points, corporate DNS resolvers, and all enterprise Windows endpoints' certificate trust stores.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each certificate in ssl.log:
            domain = certificate.subject_cn
            IF levenshtein_distance(domain, internal_domains) < 3:
              FLAG as potential typosquat
  - question: Is there an anomalous spike in DNS queries for domains associated with self-signed or free-CA certificates?
    context: This question uses time-series anomaly detection to find evidence of C2 activation. Domains used for C2 often lie dormant and then experience a sudden burst of activity. By monitoring DNS query volumes for domains with risky certificate characteristics (self-signed, free CA), a sudden spike that deviates from a forecasted baseline can indicate that an implant is actively resolving its C2 server.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network egress points, corporate DNS resolvers, and all enterprise Windows endpoints' certificate trust stores.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each risky_domain (from self-signed or free CA certs):
            actual_dns_volume = count_queries(risky_domain)
            forecasted_dns_volume = timeseries_model.forecast(risky_domain)
            IF actual_dns_volume >> forecasted_dns_volume:
              ALERT high_priority ("Anomalous DNS Spike for Risky Domain")
  - question: Are there any certificates with unusually short or long validity periods compared to normal network traffic?
    context: This question aims to find certificates with abnormal validity durations, a common tactic for adversaries. Legitimate certificates typically have standard validity periods (e.g., 90 days for Let's Encrypt, 1 year for commercial CAs). Adversaries may use very short periods (< 30 days) for throwaway infrastructure or very long periods (> 825 days) to avoid frequent renewal. Flagging certificates outside a defined normal range helps spot these outliers.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, web proxies, and inline TLS decryption devices where full certificate details are visible.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each certificate in ssl.log:
            validity = certificate.not_valid_after - certificate.not_valid_before
            IF (validity < 30_days OR validity > 825_days) AND certificate.issuer NOT IN exceptions_list:
              ALERT low_priority ("Anomalous Certificate Validity Period")
  - question: Are there any certificates with statistically outlier characteristics, such as high Shannon entropy or an unusual validity period?
    context: This question helps uncover novel malicious certificates by identifying statistical outliers. Adversaries using DGAs may create certificate subjects with high entropy. By establishing a baseline of normal certificate properties (entropy, duration) and flagging any new certificate that deviates significantly (e.g., z-score > 3), analysts can find suspicious certificates that do not match any known bad signatures.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, web proxies, and inline TLS decryption devices where full certificate details are visible.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          DEFINE baseline = calculate_stats(entropy(subject), validity_duration) from last 90 days
          FOR each new_certificate in ssl.log:
            CALCULATE metrics for new_certificate
            IF z_score(new_certificate.metrics) > 3:
              ALERT medium_priority ("Statistically Outlier Certificate Detected")
  - question: Can a clustering algorithm identify certificates with an atypical combination of attributes?
    context: This question uses unsupervised machine learning to find unique, potentially malicious certificates. By grouping certificates based on a vector of features (entropy, validity, key length, etc.), a clustering algorithm like DBSCAN can identify "noise" points that do not belong to any cluster. These noise points represent certificates with an unusual combination of attributes that differ from all common groupings, making them highly suspicious and worthy of review.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, web proxies, and inline TLS decryption devices where full certificate details are visible.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          feature_vectors = create_vectors(all_certificates)
          clusters = DBSCAN(feature_vectors)
          noise_points = get_noise_points(clusters)
          FOR each point in noise_points:
            ALERT medium_priority ("Atypical Certificate Cluster Identified")
  - question: Is a single suspicious certificate being reused across multiple distinct IP addresses?
    context: This question seeks to identify shared command and control (C2) infrastructure. If a certificate already flagged as suspicious (e.g., self-signed, high entropy) is observed being used by servers at multiple, geographically or logically distinct IP addresses (e.g., different /24 subnets) within a short time frame, it strongly suggests a network of C2 servers managed by the same actor.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, flow data collectors (e.g., NetFlow/IPFIX), and inline TLS decryption devices.
    range: last 24 hours
    queries:
      - technology: Pseudocode
        query: |
          FOR each certificate_sha1 in suspicious_watchlist:
            destination_ips = find_distinct_ips(certificate_sha1) in last 24 hours
            IF count(unique_subnets(destination_ips)) > 3:
              ALERT high_priority ("Suspicious Certificate Reused Across IPs")
  - question: Is any single certificate being used by a statistically abnormal number of unique IPs or Server Name Indications (SNIs)?
    context: This question identifies potential C2 infrastructure by finding certificates that are reused far more than is typical for the network. While some legitimate services reuse certificates, adversary C2 networks often do so extensively. By calculating the 99th percentile for IP/SNI reuse across all certificates, analysts can flag any certificate exceeding this threshold as a potential indicator of a widely distributed C2 network.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, flow data collectors (e.g., NetFlow/IPFIX), and inline TLS decryption devices.
    range: last 7 days
    queries:
      - technology: Pseudocode
        query: |
          DEFINE threshold = 99th_percentile(count(unique_ips_per_cert)) over last 7 days
          FOR each certificate in ssl.log:
            count_ips = count(unique_ips(certificate.sha1))
            IF count_ips > threshold:
              ALERT medium_priority ("Certificate Associated with Anomalous Number of IPs")
  - question: Can graph analysis identify certificates that act as central hubs connecting disparate IPs and SNIs?
    context: This question models network connections as a graph to find central C2 infrastructure nodes. In this graph model, a certificate that connects to many different IP and SNI nodes, which are themselves not well-connected, is a hub. Using community detection algorithms, such a certificate with high centrality that bridges otherwise separate communities is a strong indicator of shared C2 infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, flow data collectors (e.g., NetFlow/IPFIX), and inline TLS decryption devices.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          Graph = create_graph(certificates, ips, snis)
          communities = louvain_modularity(Graph)
          centrality_scores = calculate_degree_centrality(Graph)
          FOR each certificate_node in Graph:
            IF certificate_node.centrality is high AND connects_multiple_communities(certificate_node):
              ALERT high_priority ("Certificate Identified as C2 Hub via Graph Analysis")
  - question: Are connections being made to newly registered domains that are also using newly issued certificates?
    context: This question targets "just-in-time" adversary infrastructure. Adversaries often register a domain and immediately issue a certificate for it before launching a campaign. A symbolic rule can alert if a connection is made to a domain first seen within the last 7 days that also uses a certificate issued within the last 7 days, as this combination is highly indicative of fresh malicious infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Network egress points, corporate DNS resolvers, and external threat intelligence platforms providing passive DNS data.
    range: last 7 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each connection in ssl.log:
            domain_age = get_first_seen(connection.server_name)
            cert_age = now() - connection.certificate.not_valid_before
            IF domain_age < 7_days AND cert_age < 7_days:
              ALERT high_priority ("Connection to New Domain with New Certificate")
  - question: Are there connections where the time between domain registration and certificate issuance is statistically very short?
    context: This question aims to find adversary infrastructure by analyzing the timing of its creation. While legitimate services may have a delay between registering a domain and provisioning a certificate, adversaries often do this almost simultaneously. By calculating the time delta between a domain's first-seen date and its certificate's issuance date and flagging connections in the bottom 1st percentile (e.g., < 24 hours), analysts can identify this "just-in-time" provisioning behavior.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Network egress points, corporate DNS resolvers, and external threat intelligence platforms providing passive DNS data.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each connection in ssl.log:
            delta = connection.certificate.not_valid_before - get_first_seen(connection.server_name)
            IF delta < 24_hours:
              FLAG for review
  - question: Is there an anomalous spike in the registration of new domains that corresponds with a spike in new certificates?
    context: This question seeks to identify large-scale adversary campaign preparation. By using time-series forecasting on the daily count of newly observed domains, a sudden spike above the forecast indicates unusual activity. If this spike in new domains is correlated with a corresponding spike in new certificates (especially from free CAs or self-signed), it strongly suggests an adversary is provisioning a large amount of infrastructure for an impending campaign.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Network egress points, corporate DNS resolvers, and external threat intelligence platforms providing passive DNS data.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          new_domains_forecast = forecast(daily_new_domains)
          new_certs_forecast = forecast(daily_new_certs)
          IF actual_new_domains >> new_domains_forecast AND actual_new_certs >> new_certs_forecast:
            ALERT high_priority ("Anomalous Spike in New Domain and Certificate Creation")