name: T1132.001: Standard Encoding
id: a2e8c1f0-5b6d-4c8e-9f0a-1b2c3d4e5f6a
description: This playbook investigates the use of standard encoding schemes (e.g., Base64, Hex) by adversaries to obfuscate command and control (C2) communications. It focuses on detecting malicious encoded signatures in network traffic, identifying anomalous encoding patterns in unexpected protocol fields, analyzing asymmetric data transfer ratios, correlating network connections with suspicious endpoint processes, and finding traffic on standard ports that does not conform to the expected protocol structure.
type: technique
related:
- TA0011: Command and Control
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there known malicious encoded C2 signatures present in network payloads, HTTP bodies, or extracted files?
  context: This question aims to find direct evidence of known malicious activity by matching network data against a pre-compiled list of signatures associated with malware C2 communications that use standard encoding. A positive match is a high-confidence indicator of compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek files.log
  - Network Egress Points (Firewall/Proxy Logs)
  range: last 90 days
  queries:
  - pseudocode: SEARCH network_logs (payloads, http_bodies, extracted_files) FOR regex_matches(known_malicious_signatures) | GENERATE high_severity_alert
- question: Are there network connections on common C2 ports showing unusual character frequency distributions, suggesting unknown or novel encoding?
  context: This question helps detect potentially malicious encoded traffic that doesn't match known signatures. By establishing a baseline of normal character patterns on specific ports, significant deviations can highlight traffic that is likely obfuscated or encoded, warranting further investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek files.log
  - Network Egress Points (Firewall/Proxy Logs)
  range: last 90 days
  queries:
  - pseudocode: CALCULATE character_frequency_distribution for payloads on common_c2_ports | COMPARE against baseline | ALERT on deviations > 3_std_dev
- question: Can we classify network payloads as benign or malicious based on features like n-gram frequency, entropy, and string length using a machine learning model?
  context: This question leverages machine learning to proactively identify malicious encoded C2 communications. By training a model on known good and bad traffic, it can learn to recognize the subtle statistical properties of encoded payloads and classify new, unseen traffic in near real-time.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek files.log
  - Network Egress Points (Firewall/Proxy Logs)
  range: last 90 days
  queries:
  - pseudocode: APPLY pre-trained_classification_model to new_network_payloads | EXTRACT features (n-grams, entropy, length) | ALERT on classification='malicious-encoded' with confidence > 0.9
- question: Are long Base64 or hexadecimal strings present in unusual network protocol fields like DNS queries, HTTP User-Agents, or URIs?
  context: Adversaries may hide C2 data in plain sight by encoding it and placing it in metadata fields that typically contain plain text. This question seeks to identify such anomalies by searching for patterns indicative of encoding in fields where they don't belong, especially when communicating with low-reputation domains.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Internal DNS Resolvers and Web Proxies
  range: last 90 days
  queries:
  - pseudocode: SEARCH http_logs (uri, user_agent, referrer) AND dns_logs (query) for regex(base64_or_hex) | FILTER for destination_reputation='low' | ALERT on match
- question: Do HTTP User-Agent or DNS query fields exhibit unusually high entropy, suggesting the presence of randomized or encoded data?
  context: High entropy (randomness) in fields that should contain structured or predictable text is a strong indicator of data obfuscation. This question focuses on measuring the entropy of specific fields to find outliers that deviate significantly from the established norm, which could represent encoded C2 channels.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Internal DNS Resolvers and Web Proxies
  range: last 90 days
  queries:
  - pseudocode: CALCULATE shannon_entropy for http_user_agent and dns_query | COMPARE against baseline | ALERT if entropy > 99th_percentile
- question: Can unsupervised machine learning identify outlier clusters of DNS queries or HTTP headers that may represent novel C2 encoding techniques?
  context: This question aims to discover unknown threats by using clustering algorithms to group similar network traffic. Traffic that does not fit into the large, dense clusters of normal activity forms outlier groups. Investigating these outliers can reveal new or previously unseen methods of encoding C2 communications.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Internal DNS Resolvers and Web Proxies
  range: last 90 days
  queries:
  - pseudocode: EXTRACT features (length, char_ratio, entropy) from dns_queries and http_headers | APPLY clustering_algorithm (e.g., DBSCAN) | INVESTIGATE outlier_clusters
- question: Are there any external network connections with a highly asymmetric data transfer ratio, such as a large amount of data sent versus a small amount received?
  context: This question looks for beaconing or data exfiltration behavior where a small command is received and a large amount of encoded data is sent back. A high ratio of sent-to-received bytes, especially when significant data is sent, can indicate data being smuggled out of the network under the guise of normal traffic.
  answer_sources:
  - Zeek conn.log
  - Core Network Taps and Flow Collectors
  range: last 90 days
  queries:
  - pseudocode: SEARCH network_connection_logs where direction='outbound' AND (bytes_sent / bytes_received) > 50 AND bytes_sent > 1KB | EXCLUDE known_good_services | ALERT on match
- question: Is any host exhibiting a data transfer ratio or total data volume that significantly deviates from its own historical baseline?
  context: This question uses behavioral analysis to detect anomalies on a per-host basis. By learning what is normal for each specific host, the system can more accurately identify suspicious deviations in traffic patterns that might signal a new C2 channel being established for data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Core Network Taps and Flow Collectors
  range: last 90 days
  queries:
  - pseudocode: FOR each_host, CALCULATE 30-day_moving_average and std_dev for data_ratio and total_volume | COMPARE new_connections to baseline | ALERT if metric > 3_std_dev from baseline
- question: Are there unexplained spikes in a host's outbound data volume when analyzed as a time-series, potentially indicating encoded data exfiltration?
  context: This question applies time-series analysis to model the rhythm and seasonality of a host's network traffic. An anomaly detection model can learn the 'heartbeat' of a host's daily and weekly traffic patterns and flag any sudden, sharp increases in outbound data that don't fit the learned model, which could be a sign of C2 activity.
  answer_sources:
  - Zeek conn.log
  - Core Network Taps and Flow Collectors
  range: last 90 days
  queries:
  - pseudocode: MODEL aggregated_bytes_sent per host in 10-min_intervals using time-series_model (e.g., ARIMA) | ALERT on detected anomalies (unexplained_spikes)
- question: Is an external network connection being initiated by a process that is unsigned or running from a suspicious temporary or user-writable directory?
  context: Legitimate software is typically signed and runs from protected directories like Program Files. This question tries to identify malware by looking for network activity originating from processes that lack a valid digital signature or are executing from unusual locations (%APPDATA%, %TEMP%), as this is a common malware tactic.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Endpoint Devices (Workstations and Servers)
  range: last 90 days
  queries:
  - pseudocode: JOIN process_creation_events with network_connection_events | ALERT if process_is_unsigned OR process_path in suspicious_dirs (%APPDATA%, %TEMP%) AND connection_is_external
- question: Is a network connection being initiated by a process that is rare or uncommon across the environment?
  context: Most network connections are made by a small set of common applications (e.g., web browsers, email clients). This question identifies suspicious activity by flagging network connections made by processes that are statistically rare across the entire organization. A rare process making a network call is a potential indicator of a custom malware implant.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Endpoint Devices (Workstations and Servers)
  range: last 90 days
  queries:
  - pseudocode: CALCULATE rarity_score for all network-connecting_processes | ALERT on connections from processes with rarity_score in top 1%
- question: Can a machine learning model identify suspicious processes based on their attributes, and do any of these suspicious processes initiate network connections?
  context: This question uses a predictive model to proactively score processes based on suspicious characteristics (e.g., path, parent process, command line entropy). When a process deemed 'suspicious' by the model then makes a network connection, the event is flagged with a high risk score, allowing analysts to prioritize the most likely threats.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Endpoint Devices (Workstations and Servers)
  range: last 90 days
  queries:
  - pseudocode: APPLY pre-trained_classification_model to process_creation_events | IF process_is_classified 'suspicious', CHECK for subsequent network_connection_events | ENRICH with network_intel and assign high_risk_score
- question: Is there network traffic on a well-known port (e.g., 53, 80, 443) that does not match the expected protocol for that port?
  context: Adversaries often tunnel their C2 traffic over common ports like DNS (53) or HTTP (80) to bypass firewalls. This question aims to detect this behavior by identifying connections on these ports that cannot be successfully parsed by protocol-specific analyzers, indicating that a non-standard or tunneled protocol is being used.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek ssl.log
  - Internet-facing Application Servers and Proxies
  range: last 90 days
  queries:
  - pseudocode: SEARCH connection_logs for traffic on ports 53, 80, 443 | CHECK if connection_id appears in corresponding protocol_logs (dns.log, http.log, ssl.log) | ALERT if no match is found
- question: Are there unusually long values in protocol fields like HTTP URIs, SSL server names, or DNS queries?
  context: Adversaries may encode and exfiltrate data by stuffing it into protocol fields, resulting in abnormally long strings. This question establishes a baseline for the normal length of values in these fields and alerts when a value is a statistical outlier, which could indicate data smuggling.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek ssl.log
  - Internet-facing Application Servers and Proxies
  range: last 90 days
  queries:
  - pseudocode: CALCULATE length_distribution for URI, SSL_server_name, and DNS_query fields | ALERT if a value's length > 99.5th_percentile
- question: Are there TLS connections using client (JA3) or server (JA3S) fingerprints that are rare, are associated with known malware, or do not match common legitimate applications?
  context: The way a client or server sets up a TLS session creates a fingerprint (JA3/JA3S). Malware C2 frameworks often have unique or uncommon fingerprints. This question aims to identify malicious TLS traffic by fingerprinting all sessions and looking for those that are known to be malicious or are statistical outliers compared to the common fingerprints of legitimate browsers and applications.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek ssl.log
  - Internet-facing Application Servers and Proxies
  range: last 90 days
  queries:
  - pseudocode: CALCULATE JA3/JA3S hashes for all TLS handshakes | CLUSTER fingerprints to find outliers | MATCH against known-bad JA3/JA3S lists | INVESTIGATE outlier_clusters and matches