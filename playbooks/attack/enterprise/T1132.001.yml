name: T1132.001: Standard Encoding
id: 3a8f6c2d-9b1e-4f7a-8c3d-1e9f0a2b3c4d
description: This playbook helps identify adversary use of standard encoding schemes like Base64 or Hex to obfuscate command and control communications. It looks for known malicious encoded signatures in network traffic, anomalous encoding patterns in unexpected protocol fields (e.g., DNS queries, HTTP User-Agents), statistically significant asymmetric data transfer ratios, network connections initiated by suspicious or unsigned processes, and traffic on standard ports that fails to conform to expected protocol structures.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there network payloads, HTTP bodies, or extracted files matching known malicious encoded C2 signatures?
    context: A direct match against a known malicious signature is a high-fidelity indicator of compromise. This question aims to find these known threats by scanning various network data artifacts against a threat intelligence watchlist of encoded C2 patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Network Egress Points (Firewall/Proxy Logs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH network_payloads, http_bodies, extracted_files WHERE content MATCHES REGEX IN (malicious_encoded_c2_signatures_watchlist)
  - question: Do any network payloads on common C2 ports exhibit an anomalous character frequency distribution compared to the established baseline?
    context: Even if a signature doesn't match a known threat, the structure of the data can reveal its nature. Encoded data has a different character distribution than plain text or normal binary traffic. This question seeks to identify potential unknown or novel C2 channels by flagging statistical deviations from normal traffic patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Network Egress Points (Firewall/Proxy Logs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each connection on ports (80, 443, 53): CALCULATE character_frequency(payload). COMPARE with baseline_frequency. ALERT if deviation > 3 * std_dev.
  - question: Can a machine learning model classify any new network payloads as malicious encoded C2 traffic with high confidence?
    context: This question leverages a proactive, machine learning-based approach to C2 detection. By training a model on features like n-gram frequency, entropy, and length, it can learn the subtle characteristics of encoded C2 traffic and identify it in real-time, even without prior signatures. A high confidence score indicates a strong likelihood of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Network Egress Points (Firewall/Proxy Logs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: APPLY ml_model on new_network_payloads. ALERT where classification == 'malicious-encoded' AND confidence_score > 0.9.
  - question: Is there evidence of Base64 or long hexadecimal strings within unusual HTTP header fields or DNS queries to low-reputation domains?
    context: Adversaries often hide C2 data in plain sight by embedding it in protocol fields that are typically unencrypted and less scrutinized, such as User-Agent strings or DNS queries. This question aims to detect this technique by searching for the structural patterns of encoded data in these specific fields, correlating findings with destination reputation to reduce false positives.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS Resolvers and Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH http_logs, dns_logs WHERE (http.uri OR http.user_agent OR http.referrer OR dns.query) MATCHES REGEX (base64_pattern OR hex_pattern) AND destination.reputation == 'low'
  - question: Are there any HTTP User-Agents or DNS queries with unusually high Shannon entropy, suggesting encoded or randomized data?
    context: Shannon entropy measures the randomness or unpredictability of data. Encoded or encrypted data has high entropy, whereas legitimate User-Agent strings and DNS queries typically have low entropy. A spike in entropy in these fields is a strong indicator that they are being abused to tunnel data.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS Resolvers and Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each event in http_logs, dns_logs: CALCULATE entropy(user_agent) or entropy(dns_query). ALERT if entropy > 99th_percentile_baseline.
  - question: Does unsupervised clustering reveal any outlier groups of DNS queries or HTTP headers that suggest novel C2 encoding techniques?
    context: This question aims to find the "unknown unknowns." By clustering traffic based on features like length, character ratios, and entropy, normal activity will form dense clusters. Malicious or anomalous traffic, which deviates from the norm, will appear as small, isolated outlier clusters, which can then be prioritized for human investigation.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS Resolvers and Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features (length, char_ratio, entropy) from dns_queries, http_headers. APPLY clustering_algorithm (e.g., DBSCAN). INVESTIGATE outlier_clusters.
  - question: Are there any external connections with a highly asymmetric data ratio (sent >> received), excluding known data-heavy services?
    context: C2 communication, especially for data exfiltration, often involves sending a large amount of encoded data out with only small commands or acknowledgements received in return. This question looks for this specific pattern of a high send-to-receive byte ratio, which is a classic indicator of data being smuggled out of the network.
    answer_sources:
      - Zeek conn.log
      - Core Network Taps and Flow Collectors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH network_connections WHERE destination.is_external == true AND (sent_bytes / received_bytes) > 50 AND sent_bytes > 1024 AND destination.service NOT IN (known_backup_services)
  - question: Have any hosts exhibited a significant deviation in their typical data transfer ratio or total volume for any connection?
    context: Every host has a typical pattern of network behavior. A sudden, drastic change in the amount of data it sends or the ratio of sent to received bytes can indicate a compromise. This question uses statistical analysis to automatically detect when a host's behavior deviates from its own established norm, pointing to a potential C2 channel.
    answer_sources:
      - Zeek conn.log
      - Core Network Taps and Flow Collectors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host: CALCULATE baseline (30-day avg, std_dev) for data_ratio and total_volume. FOR each new_connection: ALERT if ratio or volume > (baseline_avg + 3 * baseline_std_dev).
  - question: Does a time-series model detect any anomalous spikes in outbound data volume from any host, considering daily and weekly patterns?
    context: Network traffic has predictable seasonal patterns (e.g., lower on weekends, higher during business hours). This question uses a time-series model to learn these complex patterns for each host. An alert is generated only when a spike in outbound traffic cannot be explained by these normal cycles, indicating a high probability of an abnormal event like encoded data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Core Network Taps and Flow Collectors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host: APPLY time-series_model (e.g., ARIMA) to aggregated_outbound_bytes. ALERT on detected_anomalies.
  - question: Have any unsigned processes or processes running from temporary/user-writable locations initiated an external network connection?
    context: Legitimate software is typically signed and runs from protected directories like Program Files. Malware, on the other hand, is often unsigned and executes from user-writable locations like %APPDATA% or %TEMP%. This question aims to identify highly suspicious activity by correlating process characteristics with network behavior.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Devices (Workstations and Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN process_creation_events, network_connection_events ON process_id. ALERT WHERE (process.path IN ('%APPDATA%', '%TEMP%', '%PUBLIC%') OR process.signature_status != 'Valid') AND connection.is_external == true.
  - question: Have any rare or previously unseen processes initiated network connections?
    context: Most network connections in an enterprise are made by a small set of common processes (browsers, email clients, etc.). A process that rarely or never makes network connections suddenly doing so is highly suspicious. This question seeks to identify such anomalous behavior by baselining "normal" and flagging rarity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Devices (Workstations and Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE rarity_score for all network-connecting processes. ALERT on connections where initiating_process.rarity_score > 99th_percentile.
  - question: Has a process classified as 'suspicious' by a machine learning model initiated a network connection?
    context: This question uses a predictive model to proactively identify suspicious processes based on a combination of their attributes (path, parent, command line, etc.). When a process flagged by the model also exhibits network activity, the event is automatically assigned a high risk score, allowing analysts to focus on the most likely threats.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint Devices (Workstations and Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: APPLY ml_model on process_creation_events. IF process.classification == 'suspicious' and process initiates network_connection: ASSIGN high_risk_score and ALERT.
  - question: Is there any traffic on a standard port (e.g., 53, 80, 443) that does not conform to the expected protocol (DNS, HTTP, TLS)?
    context: Adversaries may tunnel a custom C2 protocol over a common port like 80 or 443 to bypass firewall rules. While the port is allowed, the traffic itself is not legitimate HTTP or TLS. This question detects this "protocol mismatch" by identifying traffic that a deep packet inspection tool like Zeek fails to parse as the expected protocol.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Internet-facing Application Servers and Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH connections on ports (53, 80, 443) WHERE connection_id NOT IN (dns_logs.id, http_logs.id, ssl_logs.id).
  - question: Are there any abnormally long values in protocol fields like URI, TLS server_name, or DNS query?
    context: Adversaries using techniques like DNS tunneling often encode data into extremely long DNS query names. Similarly, C2 data can be hidden in long URIs. This question establishes a baseline for the normal length of these fields and flags statistical outliers that are likely carrying an unauthorized data payload.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Internet-facing Application Servers and Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each field in (http.uri, ssl.server_name, dns.query): CALCULATE length_baseline (99.5th percentile). ALERT if event.field_length > baseline.
  - question: Are there any TLS connections with rare or outlier JA3/JA3S fingerprints?
    context: JA3/JA3S hashes create a fingerprint of the TLS client and server implementation. Standard browsers and legitimate applications have common, well-known fingerprints. Malware C2 frameworks, however, often use custom TLS libraries, resulting in unique or rare fingerprints. This question aims to identify these malicious clients by finding JA3/JA3S hashes that are outliers compared to the bulk of normal traffic.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Internet-facing Application Servers and Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER JA3/JA3S hashes from TLS handshakes. INVESTIGATE connections in small outlier clusters or with hashes not matching known_good_fingerprints.