name: "T1069.001: Local Groups"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook helps determine if an adversary is performing host discovery to identify local groups and permissions. This is typically done by executing processes with malicious file hashes associated with reconnaissance tools, using built-in Windows utilities like 'net.exe' or PowerShell cmdlets like 'Get-LocalGroup' to enumerate group membership, conducting remote enumeration across a large number of hosts, or by having enumeration activity clustered with other discovery techniques."
type: "technique"
related:
  - "TA0007: Discovery"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
investigative_questions:
  - question: "Have any processes been executed with file hashes matching known-malicious signatures for reconnaissance tools?"
    context: "This question seeks to identify the use of known-bad reconnaissance tools (e.g., PowerSploit, BloodHound) by matching process execution hashes against a threat intelligence list. A direct match is a high-fidelity indicator of malicious activity and should be treated as a critical alert, as it confirms the presence of an adversary's tool on the endpoint."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "SEARCH process_creation_logs WHERE process_hash IN known_malicious_hashes_list"
  - question: "Are there any process hashes that are unusually rare across the enterprise, suggesting non-standard or potentially malicious software?"
    context: "This question aims to uncover unknown or custom tools by identifying statistical outliers. By calculating the prevalence of every process hash across the environment, processes that appear on a very small number of endpoints can be flagged. While not definitively malicious, such rarity indicates non-standard software that could be an unauthorized tool or custom malware and warrants further investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "CALCULATE prevalence of each process_hash. FILTER for hashes with prevalence < threshold (e.g., 5 endpoints)"
  - question: "Can a machine learning model identify unknown or rare file hashes as potentially malicious based on their characteristics?"
    context: "This question leverages machine learning to score and prioritize alerts for file hashes that are not on any known-good or known-bad list. By analyzing features like hash prevalence, signing certificate information, and first-seen timestamps, a classification model can assess the likelihood that a rare or unknown file is malicious, helping analysts focus on the most suspicious executables."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "APPLY file_reputation_model to process_creation_logs. ALERT on hashes classified as malicious or suspicious"
  - question: "Have built-in utilities like 'net.exe' or 'whoami.exe' been used to enumerate local groups, especially from an anomalous parent process or by a non-administrator?"
    context: "This question focuses on detecting the malicious use of legitimate Windows tools. Adversaries often use 'net localgroup' or 'whoami /groups' for discovery. This query looks for these specific commands and adds context, such as being executed by a non-standard parent process (e.g., `winword.exe`) or a non-administrative user, to distinguish malicious activity from benign system administration."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "SEARCH command_line_logs for ('net localgroup', 'net group', 'whoami /groups') WHERE parent_process NOT IN ('cmd.exe', 'powershell.exe')"
  - question: "Has any user exhibited an abnormal spike in the frequency of local group enumeration commands compared to their baseline behavior?"
    context: "This question seeks to identify anomalous user behavior through statistical analysis. It establishes a normal baseline for how often each user runs enumeration commands. An alert is triggered if a user's activity significantly exceeds this baseline (e.g., more than three standard deviations above the mean), which could indicate a compromised account being used for discovery."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "FOR each user, CALCULATE daily_count of enumeration_commands. ALERT if daily_count > (mean + 3 * std_dev) of baseline"
  - question: "Do user command sequences show local group enumeration occurring in a context that is statistically unlikely for that user's role?"
    context: "This question uses machine learning to analyze the entire sequence of user commands, rather than just isolated events. It can identify when local group enumeration commands appear in an unusual context for a specific user, such as immediately following a suspicious file download or surrounded by other discovery commands. This contextual awareness helps differentiate between routine administrative tasks and targeted reconnaissance."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "APPLY command_sequence_model to user_sessions. ALERT on sessions with anomalous sequences containing enumeration_commands"
  - question: "Have any PowerShell scripts been executed that contain cmdlets or .NET types for local group enumeration, which are not on an approved allowlist?"
    context: "This question targets the use of PowerShell for discovery. It scans PowerShell script block logs for specific keywords like 'Get-LocalGroup' or '[adsi]'. To reduce false positives from legitimate administrative scripts, it checks if the script's hash is on a pre-approved allowlist, ensuring that alerts are focused on unknown or unauthorized script executions."
    answer_sources:
      - "Windows Event ID 4104"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "SEARCH powershell_script_logs for keywords ('Get-LocalGroup', 'Get-LocalGroupMember', '[adsi]') WHERE script_hash NOT IN allowlist"
  - question: "Are there any PowerShell script blocks containing enumeration keywords that also have an unusually high entropy score, suggesting obfuscation?"
    context: "This question aims to detect obfuscated PowerShell scripts. Adversaries often use encoding or obfuscation to hide their code from simple keyword searches. By calculating the Shannon entropy (a measure of randomness) of a script block, this query can identify scripts that are both trying to enumerate groups and appear to be heavily obfuscated, which is a strong indicator of malicious intent."
    answer_sources:
      - "Windows Event ID 4104"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "CALCULATE entropy for each script_block. ALERT if script contains enumeration_keywords AND entropy > threshold (e.g., 95th percentile)"
  - question: "Can a machine learning text classifier identify PowerShell script blocks as malicious based on their content and enumeration logic?"
    context: "This question applies a machine learning model trained to distinguish between benign and malicious PowerShell code. The model analyzes the entire script content, not just keywords, to make a classification. This allows it to detect novel or complex malicious scripts that use enumeration as part of a larger attack, providing a more robust and intelligent detection capability."
    answer_sources:
      - "Windows Event ID 4104"
      - "Domain Controllers"
      - "Member Servers"
      - "Privileged Access Workstations"
      - "User Endpoints"
    range: "last 90 days"
    queries:
      - "APPLY powershell_classification_model to script_block_logs. ALERT on scripts classified as malicious that contain enumeration logic"
  - question: "Has a single source user or host enumerated local groups on an unusually large number of destination hosts within a short time frame?"
    context: "This question seeks to detect automated, large-scale discovery activity. By setting a simple, fixed threshold (e.g., enumeration on more than 10 hosts within an hour from a single source), this query acts as a high-fidelity tripwire for the 'fan-out' behavior characteristic of an adversary scanning the network, as opposed to a user performing a targeted administrative task."
    answer_sources:
      - "Windows Event ID 4798"
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Centralized SIEM/Log Aggregator"
      - "Network Egress/Ingress Points"
      - "Internal Network Segments"
    range: "last 90 days"
    queries:
      - "AGGREGATE enumeration_events by source_user/host. ALERT if count(distinct destination_hosts) > 10 within 1 hour"
  - question: "Is any user or host enumerating a number of distinct hosts that exceeds a dynamically calculated statistical threshold for normal 'fan-out' behavior?"
    context: "This question enhances the 'fan-out' detection by using a dynamic threshold instead of a fixed one. It establishes a baseline of normal enumeration activity across the organization (e.g., the 99th percentile of hosts enumerated per hour). Alerting when a user exceeds this adaptive threshold makes the detection more resilient to environmental changes and less prone to false positives than a static number."
    answer_sources:
      - "Windows Event ID 4798"
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Centralized SIEM/Log Aggregator"
      - "Network Egress/Ingress Points"
      - "Internal Network Segments"
    range: "last 90 days"
    queries:
      - "CALCULATE 99th_percentile of distinct_hosts_enumerated per hour. ALERT if source_user/host count > 99th_percentile_threshold"
  - question: "Has a user started enumerating local groups on hosts that are outside of their normal activity cluster or community, as defined by graph analysis?"
    context: "This question uses advanced graph analytics to model normal user-to-host relationships. It identifies 'communities' of activity (e.g., a specific admin team and their servers). An alert is triggered when a user suddenly enumerates hosts far outside their typical community, which is a strong indicator of lateral movement and discovery by a compromised account."
    answer_sources:
      - "Windows Event ID 4798"
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Centralized SIEM/Log Aggregator"
      - "Network Egress/Ingress Points"
      - "Internal Network Segments"
    range: "last 90 days"
    queries:
      - "MODEL user-host interactions as a graph. APPLY community_detection algorithm. ALERT if user enumerates hosts outside their normal community"
  - question: "Has local group enumeration activity from a source host been observed in close temporal proximity to other discovery techniques, like network share discovery?"
    context: "This question aims to increase detection confidence by correlating multiple, related suspicious events. It looks for a common attack pattern where an adversary first enumerates local groups and then, within a short time window (e.g., 15 minutes), enumerates network shares from the same host. Linking these activities together provides stronger evidence of a coordinated reconnaissance effort."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4798"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Centralized SIEM/Log Aggregator"
      - "Domain Controllers"
      - "DNS Servers"
      - "Network Egress/Ingress Points"
    range: "last 90 days"
    queries:
      - "CORRELATE group_enumeration_event with network_share_discovery_event from same source_host within 15 minutes"
  - question: "Has a host accumulated a high risk score based on a combination of different discovery activities occurring within a 1-hour window?"
    context: "This question uses a risk-scoring model to aggregate multiple, potentially weak signals into a stronger alert. Different discovery activities (group enumeration, port scanning, etc.) are assigned risk points. If a single host's cumulative risk score exceeds a statistical threshold within an hour, it suggests a confluence of suspicious behaviors that, taken together, are highly indicative of a threat."
    answer_sources
      - "Windows Event ID 4688"
      - "Windows Event ID 4798"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Centralized SIEM/Log Aggregator"
      - "Domain Controllers"
      - "DNS Servers"
      - "Network Egress/Ingress Points"
    range: "last 90 days"
    queries:
      - "SUM risk_scores for various discovery activities per host per hour. ALERT if total_risk_score > 98th_percentile_threshold"
  - question: "Does a host's overall activity, represented by a time-series vector of multiple metrics, show a significant deviation from its normal learned behavior?"
    context: "This question uses a machine learning model to learn the normal 'rhythm' of a host's behavior across many dimensions (process activity, network traffic, DNS queries, etc.). The model can then detect subtle but significant deviations from this learned pattern. This is powerful for catching sophisticated attackers who try to blend in, as it flags anomalies in the overall combination of activities, even if no single activity is overtly malicious."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4798"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Centralized SIEM/Log Aggregator"
      - "Domain Controllers"
      - "DNS Servers"
      - "Network Egress/Ingress Points"
    range: "last 90 days"
    queries:
      - "APPLY time-series_anomaly_detection_model to host_activity_vector. ALERT if reconstruction_error > threshold"