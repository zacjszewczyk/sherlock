name: T1071.004: Application Layer Protocol: DNS
id: 6a827c8d-3a1b-4f9c-9b0d-7e3f21a0b543
description: This playbook helps investigate whether an adversary is using the Domain Name System (DNS) for Command and Control (C2) communications. It addresses several key indicators of malicious DNS activity, including queries for domains on threat intelligence lists, unusual query patterns characteristic of C2 tools (like high ratios of TXT or CNAME requests), queries with abnormally high length or entropy suggesting data encoding, sustained high volumes of queries from a single host to one domain (beaconing), high ratios of sent-to-received data indicating data upload, and DNS queries originating from suspicious processes like command shells or script interpreters.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any internal hosts communicating with known malicious C2 domains or IP addresses via DNS?
    context: This question aims to identify immediate, high-confidence threats by correlating internal DNS activity with external threat intelligence. A match indicates a potential compromise, as a host is attempting to resolve or has received a resolution for a domain or IP address already identified as part of a C2 infrastructure. This is a primary indicator of an active C2 channel.
    answer_sources: Zeek dns.log, Network Egress Points, Internal DNS Resolvers, DNS Forwarders
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log JOIN Threat_Intelligence_Feeds ON (dns.query == ti.domain OR dns.answers == ti.ip) | RETURN dns.log
  - question: Are there any newly observed, low-prevalence domains with rare TLDs being queried by a small number of hosts?
    context: Adversaries often use newly registered or obscure domains for C2. This question helps uncover these by looking for domains that are not widely accessed across the enterprise (low prevalence) and use uncommon TLDs. A combination of these two factors can indicate a domain specifically set up for a targeted attack, bypassing reputation-based threat feeds.
    answer_sources: Zeek dns.log, Network Egress Points, Internal DNS Resolvers, DNS Forwarders
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | GROUP BY domain, tld | COUNT unique source_ip | WHERE unique_source_ip_count < 5 AND tld NOT IN (top 95% of TLDs) | RETURN domain, tld, unique_source_ip_count
  - question: Are hosts resolving DNS queries for domains that a machine learning model scores as likely malicious or indicative of C2 activity?
    context: This question leverages machine learning to proactively identify suspicious domains that may not appear on static threat lists. By analyzing various features like domain age, registration details, and lexical structure, the model can detect algorithmically generated domains (DGAs) or other C2 characteristics, providing a score-based approach to threat hunting.
    answer_sources: Zeek dns.log, Network Egress Points, Internal DNS Resolvers, DNS Forwarders
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | APPLY ML_Model (features: domain_age, registrar, geo, asn_rep, lexical_features) | WHERE model_score > C2_threshold | RETURN dns.log, model_score
  - question: Are there any DNS queries that match the specific patterns of known DNS C2 tools?
    context: This question focuses on detecting specific C2 frameworks by matching their unique DNS query structures. Tools like Iodine or dnscat2 use DNS queries to tunnel data, creating recognizable patterns. Identifying these patterns provides strong evidence of a particular C2 tool being used in the environment.
    answer_sources: Zeek dns.log, Network Egress Points, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | WHERE dns.query MATCHES REGEX (Iodine_pattern OR dnscat2_pattern OR CobaltStrike_pattern) | RETURN dns.log
  - question: Is any host exhibiting an unusually high ratio of non-standard DNS query types (e.g., TXT, NULL, CNAME) to a single domain?
    context: Normal DNS traffic is dominated by A and AAAA record lookups. Adversaries often abuse other record types like TXT, CNAME, or NULL for C2 data transfer. This question helps find compromised hosts by identifying statistical deviations from normal query type distributions, flagging endpoints that make an abnormal number of these non-standard requests.
    answer_sources: Zeek dns.log, Network Egress Points, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | GROUP BY source_ip, domain | CALCULATE qtype_distribution | WHERE (TXT_ratio > 98th_percentile OR NULL_ratio > 98th_percentile) | RETURN source_ip, domain, ratios
  - question: Are there any sequences of DNS queries from a single host that are anomalous compared to normal browsing behavior?
    context: This question uses sequence analysis to detect C2 communications that manifest as an abnormal series of DNS lookups over time. Unlike single-query analysis, this method can identify malicious patterns like rapid, successive subdomain lookups or long chains of TXT queries that, when viewed as a sequence, deviate significantly from legitimate DNS traffic patterns.
    answer_sources: Zeek dns.log, Network Egress Points, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | GROUP BY source_ip | APPLY Sequence_Analysis_Model (HMM) | WHERE sequence_is_anomalous | RETURN source_ip, anomalous_sequence
  - question: Are there any DNS queries that violate RFC standards for label or total query length?
    context: This question identifies DNS queries that are malformed according to established internet standards (RFCs). Queries with labels longer than 63 characters or total lengths over 253 characters are invalid for legitimate DNS. Their presence is a strong, high-fidelity indicator of abuse, often related to data exfiltration or C2 where data is encoded into the query itself.
    answer_sources: Zeek dns.log, Internal DNS Resolvers, Endpoint Devices, Network Egress Points
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | WHERE length(dns.query_label) > 63 OR length(dns.query) > 253 | RETURN dns.log
  - question: Are there DNS queries with unusually high entropy or long subdomains, suggesting encoded data?
    context: Adversaries often encode C2 data or exfiltrated information into DNS subdomains, which results in long, random-looking strings. This question seeks to detect this activity by calculating the Shannon entropy (a measure of randomness) and length of subdomains. Queries that are statistical outliers (e.g., >3 standard deviations from the mean) are highly suspect for DNS tunneling.
    answer_sources: Zeek dns.log, Internal DNS Resolvers, Endpoint Devices, Network Egress Points
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | CALCULATE entropy(subdomain), length(subdomain) | WHERE Z_score(entropy) > 3 OR Z_score(length) > 3 | RETURN dns.log, entropy, length
  - question: Can an anomaly detection model identify novel or previously unseen forms of encoded DNS queries?
    context: This question employs an unsupervised machine learning model to find outliers in DNS traffic without prior knowledge of specific malicious patterns. By training on a wide range of features (length, entropy, TLD, etc.), the model learns what constitutes 'normal' DNS activity and can flag any query that deviates significantly, making it effective at detecting new or evolving DNS tunneling techniques.
    answer_sources: Zeek dns.log, Internal DNS Resolvers, Endpoint Devices, Network Egress Points
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | APPLY Anomaly_Detection_Model (Isolation Forest) on features (length, entropy, levels, TLD) | WHERE is_anomaly | RETURN dns.log
  - question: Is any single host generating an extremely high volume of DNS queries to the same domain in a short time frame?
    context: This question aims to detect C2 beaconing activity by using a simple, high-threshold rule. A large burst of DNS queries (e.g., >500 in 10 minutes) from one host to a single domain is highly abnormal and often indicates a fast-beaconing implant or a data transfer phase of an attack. This method provides a quick, albeit potentially noisy, way to spot intense C2 activity.
    answer_sources: Zeek dns.log, Client Network Subnets, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | AGGREGATE count BY source_ip, domain over 10m | WHERE count > 500 | RETURN source_ip, domain, count
  - question: Is any host's DNS query rate to a specific domain statistically anomalous compared to its own or the network's baseline?
    context: This question provides a more nuanced approach to detecting beaconing than a hard threshold. By establishing a baseline of normal query volume for each host-domain pair, it can identify subtle but significant increases in traffic that indicate C2 'heartbeat' activity. It is more effective at finding 'low and slow' beacons that would not trigger a high-volume threshold.
    answer_sources: Zeek dns.log, Client Network Subnets, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | AGGREGATE count BY source_ip, domain per 1m | COMPARE count to historical_baseline | WHERE count > 99th_percentile_baseline | RETURN source_ip, domain, count
  - question: Are there statistically significant spikes in DNS query volume from a host to a domain that cannot be explained by historical patterns?
    context: This question uses time-series forecasting to model the expected DNS query volume between a host and a domain. It then flags any observed volume that significantly exceeds the model's prediction. This advanced technique is excellent for detecting irregularities in traffic patterns, such as a C2 beacon that activates or changes its frequency, by identifying deviations from the established temporal rhythm.
    answer_sources: Zeek dns.log, Client Network Subnets, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | FOR_EACH high_volume_pair | APPLY Time_Series_Model (ARIMA) to query_counts | WHERE observed_count > forecasted_count + confidence_interval | RETURN source_ip, domain, observed_count
  - question: Are there long DNS queries that result in a successful response but contain no answer, suggesting data upload?
    context: This question targets a specific pattern of DNS tunneling used for data exfiltration. An adversary sends data encoded in a long DNS query. The C2 server receives the query (and the data), and to acknowledge receipt without raising suspicion, it sends back a 'NOERROR' response that is empty. This combination of a long query and an empty but successful response is a strong indicator of data being uploaded via DNS.
    answer_sources: Zeek dns.log, Zeek conn.log, Network Egress Points, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log | WHERE query_length > 100 AND rcode_name == "NOERROR" AND answers IS EMPTY | RETURN dns.log
  - question: Are there any DNS transactions where the amount of data sent is anomalously high compared to the data received?
    context: This question analyzes the raw byte counts of DNS transactions to find imbalances. In legitimate DNS, the query (sent) is small and the response (received) is slightly larger. In data exfiltration via DNS, this is reversed; the query containing the data is large, and the response is small. By calculating the sent-to-received byte ratio, we can flag transactions that deviate from the norm and indicate data upload.
    answer_sources: Zeek dns.log, Zeek conn.log, Network Egress Points, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log JOIN conn.log ON uid | CALCULATE ratio = conn.orig_ip_bytes / conn.resp_ip_bytes | WHERE ratio > 98th_percentile OR ratio > 1.0 | RETURN dns.log, conn.log, ratio
  - question: Can a clustering model automatically group and identify DNS transactions that exhibit characteristics of data upload?
    context: This question uses unsupervised machine learning to discover groups of anomalous DNS transactions. By feeding features like byte ratios and query length into a clustering algorithm, the model can automatically separate the vast majority of 'normal' lookups from a small, dense cluster of 'upload' transactions without needing predefined rules or thresholds. This is effective for finding novel exfiltration methods.
    answer_sources: Zeek dns.log, Zeek conn.log, Network Egress Points, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log JOIN conn.log ON uid | APPLY Clustering_Model (DBSCAN) on features (byte_ratio, query_length, qtype) | IDENTIFY anomalous_cluster | RETURN transactions_in_cluster
  - question: Are any unusual processes, such as command shells or scripts, making DNS queries?
    context: This question moves the investigation to the endpoint to identify the source of suspicious DNS activity. Legitimate DNS queries are typically made by web browsers or system services. A DNS query originating from a command shell (cmd.exe, powershell.exe), a script interpreter, or an executable in a temporary directory is highly suspicious and a strong indicator of malware or hands-on-keyboard activity.
    answer_sources: Windows Sysmon Event ID 22, Windows Sysmon Event ID 1, Endpoint Devices (Workstations and Servers), Domain Controllers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Sysmon EventID=22 | WHERE process_image IN ('cmd.exe', 'powershell.exe', ...) OR process_path IN ('%APPDATA%', '%TEMP%') | RETURN event
  - question: Are legitimate, common processes (like svchost.exe) making DNS queries to extremely rare or unique domains?
    context: This question helps to find process injection or other stealth techniques where malware hides within a legitimate process. While a process like `svchost.exe` makes many DNS queries, it normally communicates with a predictable set of common domains (e.g., Microsoft update servers). If it suddenly queries a very rare domain that no other process has contacted, it suggests that the process may be compromised and is being used for C2.
    answer_sources: Windows Sysmon Event ID 22, Windows Sysmon Event ID 1, Endpoint Devices (Workstations and Servers), Domain Controllers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Sysmon EventID=22 | CALCULATE domain_rarity (IDF) | FOR_EACH process | WHERE process IN (common_processes) AND domain_IDF > high_threshold | RETURN event
  - question: Can a machine learning model detect malicious behavior chains involving process creation and subsequent DNS queries?
    context: This question links process activity with network activity to find complex malicious behaviors. By training a model on features from both process creation (Sysmon EID 1) and DNS query (Sysmon EID 22) events, it can learn to identify suspicious sequences, such as a document opening PowerShell which in turn makes a high-entropy DNS query. This provides a holistic view that is more powerful than analyzing either event type in isolation.
    answer_sources: Windows Sysmon Event ID 22, Windows Sysmon Event ID 1, Endpoint Devices (Workstations and Servers), Domain Controllers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Sysmon (EventID=1 OR EventID=22) | CORRELATE events into process_chains | APPLY ML_Model (Decision Tree) on features (parent_process, process, cmd_line, dns_entropy) | WHERE model_predicts_malicious | RETURN process_chain