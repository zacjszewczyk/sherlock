name: "T1651: Cloud Administration Command"
id: "3e74c58c-847c-4c60-843e-a134a6547a82"
description: "This playbook helps investigate whether an adversary is abusing cloud administration services (like AWS Systems Manager, Azure Run Command, or GCP OS Patch Management) to execute commands on virtual machines. It provides questions to identify malicious command arguments through threat intelligence matching and entropy analysis; detect anomalous child processes spawned by VM agents using deny-lists and frequency analysis; find suspicious network connections by correlating with threat feeds and identifying beaconing or data exfiltration patterns; and spot anomalous API calls by analyzing source IP, user behavior, and multi-dimensional outliers."
type: "technique"
related: 
  - "TA0002: Execution"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are commands executed via cloud administration services matching known malicious indicators from threat intelligence feeds?"
    context: "This question aims to detect known threats by correlating the initial cloud API call (e.g., AWS ssm:SendCommand) with the resulting process creation on the virtual machine (e.g., Windows Event ID 4688). By scanning the command-line arguments of the executed process against up-to-date threat intelligence feeds for malicious domains, IPs, file hashes, or command strings, an analyst can quickly identify the use of known adversary tools or infrastructure."
    answer_sources:
      - "Windows Event ID 4688"
      - "AWS CloudTrail logs"
      - "Azure Activity Logs"
      - "Google Cloud Audit Logs"
      - "Cloud virtual machine instances"
      - "Cloud provider management plane (API logs)"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "JOIN cloud_api_logs ON request_id WITH endpoint_process_logs ON correlation_id | WHERE process_command_line MATCHES threat_intelligence_feed"
  - question: "Are command-line arguments from cloud administration commands exhibiting unusually high entropy, suggesting obfuscation or encryption?"
    context: "Adversaries often encode or obfuscate their commands to evade simple signature-based detection. This question focuses on identifying such evasion techniques by calculating the Shannon entropy (a measure of randomness) of command-line argument strings. By establishing a baseline of entropy for legitimate administrative commands, any command with a score that is a statistical outlier (e.g., in the 95th percentile) can be flagged for review, as it may contain obfuscated malicious code."
    answer_sources:
      - "Windows Event ID 4688"
      - "AWS CloudTrail logs"
      - "Azure Activity Logs"
      - "Google Cloud Audit Logs"
      - "Cloud virtual machine instances"
      - "Cloud provider management plane (API logs)"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM endpoint_process_logs WHERE parent_process is_vm_agent | CALCULATE entropy(process_command_line) | WHERE entropy > baseline_95th_percentile"
  - question: "Can a machine learning model classify commands executed via cloud administration services as malicious based on features from both cloud and host logs?"
    context: "This question proposes a more advanced detection method using a machine learning classifier (e.g., Random Forest) to identify malicious commands that may not be caught by simpler rules. The model would be trained on features from both the cloud API call (like source IP reputation, user history) and the host process event (command length, character counts, entropy) to build a comprehensive profile of the execution and predict its maliciousness with higher accuracy."
    answer_sources:
      - "Windows Event ID 4688"
      - "AWS CloudTrail logs"
      - "Azure Activity Logs"
      - "Google Cloud Audit Logs"
      - "Cloud virtual machine instances"
      - "Cloud provider management plane (API logs)"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "EXTRACT features from correlated_api_and_host_events | APPLY classification_model(features) | ALERT where prediction is 'malicious'"
  - question: "Is a cloud VM agent spawning interactive tools or known malicious utilities that are inconsistent with automated administration?"
    context: "Cloud VM agents are designed for automated, non-interactive tasks. The spawning of interactive command shells (like cmd.exe, powershell.exe) or tools commonly abused by adversaries (like whoami.exe, mimikatz.exe) by a VM agent process is highly anomalous and a strong indicator of compromise. This question uses a deny-list of such tools to quickly generate high-severity alerts on suspicious child process activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Cloud virtual machine instances"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM endpoint_process_logs WHERE parent_process in (ssmagent.exe, waagent.exe, google_guest_agent.exe) AND process_name in deny_list"
  - question: "Is a cloud VM agent spawning a child process that is statistically rare for the host or the entire environment?"
    context: "This question leverages frequency analysis to spot anomalies. Adversaries may introduce custom or renamed tools onto a compromised system. By building a historical baseline of all child processes spawned by VM agents on each host, any process that has never been seen before or is in the bottom 5th percentile of execution frequency across the environment can be flagged as a potential threat."
    answer_sources:
      - "Windows Event ID 4688"
      - "Cloud virtual machine instances"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM endpoint_process_logs WHERE parent_process is_vm_agent | GROUP BY process_name | CALCULATE frequency | ALERT where frequency < 5th_percentile"
  - question: "Does a process spawned by a cloud VM agent fall outside of established clusters of normal administrative activity?"
    context: "To detect novel or unknown threats, this question suggests using an unsupervised machine learning algorithm like DBSCAN. By clustering normal process executions based on features like process name, parent, user context, and command-line structure, the algorithm can identify 'normal' behavior. Any new process execution that does not fit into an established cluster is flagged as an anomaly, warranting further investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "Cloud virtual machine instances"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "EXTRACT features from vm_agent_child_processes | APPLY clustering_model(features) | ALERT on events classified as noise/outliers"
  - question: "Is a process spawned by a cloud VM agent connecting to external destinations that are listed in threat intelligence feeds?"
    context: "A critical step in confirming a compromise is identifying command-and-control (C2) communications. This question involves correlating process creation events with network connection logs (from sources like Zeek or VPC Flow Logs). By checking the destination IP or domain of any outbound connection from a VM agent's child process against a threat intelligence feed of known C2 servers, an analyst can find high-fidelity evidence of malicious activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "AWS VPC Flow Logs"
      - "Azure Network Watcher Flow Logs"
      - "Google Cloud VPC Flow Logs"
      - "Virtual network gateways and firewalls"
      - "Cloud-native network flow logs (VPC)"
      - "Endpoint network sensors"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "JOIN process_logs ON process_id WITH network_logs ON process_id | WHERE destination_ip in threat_intelligence_feed"
  - question: "Does network traffic from a process spawned by a cloud VM agent exhibit patterns of beaconing or unusually large data transfers?"
    context: "This question looks for behavioral indicators of C2 activity or data exfiltration. Rhythmic, regularly timed outbound connections (beaconing) can be detected by analyzing the time delta between connections to the same destination. Similarly, data exfiltration can be spotted by baselining normal data transfer volumes for a given process and flagging any connection where the volume is a statistical outlier (e.g., exceeds the 98th percentile)."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "AWS VPC Flow Logs"
      - "Azure Network Watcher Flow Logs"
      - "Google Cloud VPC Flow Logs"
      - "Virtual network gateways and firewalls"
      - "Cloud-native network flow logs (VPC)"
      - "Endpoint network sensors"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM network_logs WHERE process is_vm_agent_child | CALCULATE time_delta_stddev and bytes_out | ALERT where stddev is near 0 OR bytes_out > baseline_98th_percentile"
  - question: "Does the volume or frequency of network connections from a VM agent's child process significantly deviate from forecasted normal behavior?"
    context: "This question applies time-series forecasting models (like ARIMA) to network traffic data to predict expected behavior. By training a model on historical connection volume and frequency, it can learn the normal operational patterns of processes spawned by VM agents. Any significant deviation from the forecasted values suggests a change in the process's behavior, which could indicate a compromise and subsequent malicious use, such as for large-scale data exfiltration."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "AWS VPC Flow Logs"
      - "Azure Network Watcher Flow Logs"
      - "Google Cloud VPC Flow Logs"
      - "Virtual network gateways and firewalls"
      - "Cloud-native network flow logs (VPC)"
      - "Endpoint network sensors"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM network_logs | APPLY time_series_forecast(volume, frequency) | ALERT where actual_value significantly deviates from predicted_value"
  - question: "Is a cloud administration command being executed from an unauthorized IP address or a known malicious source like a TOR exit node?"
    context: "The origin of an administrative command is a critical piece of context. Legitimate administration typically occurs from a finite set of corporate IP ranges or designated jump boxes. This question focuses on monitoring cloud API logs (e.g., CloudTrail) to check the source IP of command execution events against an allow-list of trusted IPs and a deny-list of known malicious IPs (like TOR exit nodes). An execution from an unauthorized source is a major red flag for account compromise."
    answer_sources:
      - "AWS CloudTrail logs"
      - "Azure Activity Logs"
      - "Google Cloud Audit Logs"
      - "Windows Event ID 4688"
      - "Identity and Access Management (IAM) service logs"
      - "Cloud provider management plane (API logs)"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM cloud_api_logs WHERE event_name is 'SendCommand' | WHERE source_ip NOT IN corporate_ranges OR source_ip IN tor_exit_nodes"
  - question: "Is an IAM user or role executing a cloud administration command that is anomalous for their typical behavior (e.g., new target, unusual location, odd time)?"
    context: "This question applies User and Entity Behavior Analytics (UEBA) to detect compromised credentials. By establishing a baseline of normal API activity for each IAM identity (user or role), it's possible to detect deviations. Anomalies could include a user running a command on a VM for the first time, an API call originating from a new and unusual geographic location, or activity happening outside of normal business hours."
    answer_sources:
      - "AWS CloudTrail logs"
      - "Azure Activity Logs"
      - "Google Cloud Audit Logs"
      - "Windows Event ID 4688"
      - "Identity and Access Management (IAM) service logs"
      - "Cloud provider management plane (API logs)"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "FROM cloud_api_logs | BASELINE activity by user/role | ALERT on first-time user-to-target_instance execution OR unusual geo/ISP"
  - question: "Can a multi-dimensional anomaly detection model identify cloud administration API calls that are significant outliers from normal activity?"
    context: "Sophisticated attackers may try to blend in by making their actions seem normal across any single dimension. This question proposes using an anomaly detection algorithm like Isolation Forest to analyze multiple features of an API call simultaneously (e.g., source IP, time of day, IAM principal, target instance). By identifying data points that are outliers in this multi-dimensional space, this method can uncover complex, evasive attacker behavior that simpler checks would miss."
    answer_sources:
      - "AWS CloudTrail logs"
      - "Azure Activity Logs"
      - "Google Cloud Audit Logs"
      - "Windows Event ID 4688"
      - "Identity and Access Management (IAM) service logs"
      - "Cloud provider management plane (API logs)"
    range: "Last 90 days"
    queries:
      - platform: "pseudocode"
        query: "EXTRACT features (source_ip, time, user, target) from cloud_api_logs | APPLY isolation_forest(features) | ALERT on events with high anomaly_score"