name: T1037.005: Startup Items
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate adversary activity related to macOS Startup Items for both persistence and privilege escalation. It focuses on detecting processes executing from /Library/StartupItems/ that are known malware, rare, or exhibit malicious behavior. It also covers monitoring for the creation or modification of files within this directory, looking for unauthorized processes, high-entropy names, malicious content patterns (via YARA), or anomalous rates of change. The playbook addresses network activity originating from startup items, specifically connections to malicious or suspicious domains. Furthermore, it details how to identify privilege escalation attempts, such as non-root processes writing to the directory, scripts containing sensitive commands, or insecure file permission changes that could allow tampering.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a process executed from a macOS Startup Item that is known to be malicious based on threat intelligence?
    context: Adversaries can place malicious executables in the /Library/StartupItems/ directory to ensure their code runs automatically on system boot, establishing persistence. This question aims to identify such activity by checking if any process originating from this directory matches a known malware hash from a threat intelligence feed. A match is a high-fidelity indicator of a compromise.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_EXEC
      - Endpoint Process Creation Logs
      - File Integrity Monitoring Logs
      - Threat Intelligence Feed
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs WHERE image_path STARTS WITH '/Library/StartupItems/' | HASH executable_file | LOOKUP threat_intelligence_feed ON hash | FILTER is_malicious=true
  - question: Is there a rare or uncommon executable running as a Startup Item across the environment?
    context: Legitimate software often has a wide distribution across an enterprise. Malware, especially targeted malware, may only be present on a small number of machines. This question focuses on identifying executables in /Library/StartupItems/ that are statistically rare within the organization. By flagging files that appear on a very small percentage of endpoints (e.g., less than 1%), analysts can uncover potentially malicious or unauthorized software that would otherwise be missed by signature-based detection.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_EXEC
      - Endpoint Process Creation Logs
      - File Integrity Monitoring Logs
      - Threat Intelligence Feed
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH file_inventory ON all_endpoints WHERE path STARTS WITH '/Library/StartupItems/' | GROUP BY file_hash | COUNT distinct endpoints | CALCULATE prevalence = count / total_endpoints | FILTER prevalence < 0.01
  - question: Has a machine learning model identified a newly observed executable in a Startup Item as malicious?
    context: Signature-based detection can miss novel or polymorphic malware. This question leverages a machine learning model to perform static analysis on new executables found in /Library/StartupItems/. The model examines intrinsic file properties like entropy, strings, and code structure to predict if a file is malicious without needing a pre-existing signature. An alert with a high confidence score indicates a strong probability that a previously unknown threat has been placed for persistence.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_EXEC
      - Endpoint Process Creation Logs
      - File Integrity Monitoring Logs
      - Threat Intelligence Feed
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory.
    range: Last 90 days
    queries:
      - pseudocode: ON new_file_in '/Library/StartupItems/' | EXTRACT file_features (entropy, strings, signing_status) | INVOKE ML_model(file_features) | FILTER model_prediction='malicious' AND confidence_score > 0.90
  - question: Has a file been created or modified in a Startup Item that matches known malicious patterns or suspicious content?
    context: Adversaries often drop scripts or binaries containing specific commands or code structures. This question uses YARA, a pattern-matching tool, to scan the content of any new or changed file in /Library/StartupItems/. The YARA rule is designed to find indicators of compromise, such as obfuscated code, reverse shell commands, or signatures of known malware families, providing an effective way to detect malicious payloads as they are written to disk.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - ESF ES_EVENT_TYPE_NOTIFY_WRITE
      - Endpoint File Creation/Modification Logs
      - File Integrity Monitoring Logs
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory.
    range: Last 90 days
    queries:
      - pseudocode: ON file_creation_or_modification IN '/Library/StartupItems/' | SCAN file_content WITH yara_rule_set | ALERT on_match
  - question: Has a file or directory with a randomized or high-entropy name been created in a Startup Item?
    context: To avoid detection based on common names, adversaries may use randomly generated names for their files and directories. These names often exhibit high Shannon entropy compared to legitimate, human-readable names. This question aims to detect this behavior by calculating the entropy of all new file/directory names in /Library/StartupItems/ and flagging those that are statistically unusual, suggesting automated or evasive malware placement.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - ESF ES_EVENT_TYPE_NOTIFY_WRITE
      - Endpoint File Creation/Modification Logs
      - File Integrity Monitoring Logs
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory.
    range: Last 90 days
    queries:
      - pseudocode: ON file_creation IN '/Library/StartupItems/' | CALCULATE shannon_entropy(file_name) | COMPARE to_baseline | ALERT if entropy > 3.0 OR deviation > 3_sigma
  - question: Is there an anomalous spike in file creation or modification activity within Startup Items across the enterprise?
    context: A widespread malware campaign or a coordinated attack might involve deploying persistence mechanisms to many machines in a short period. This would cause a sudden increase in file write activity in the /Library/StartupItems/ directory. This question uses a time-series anomaly detection model to learn the normal rhythm of such events (e.g., daily/weekly cycles of legitimate software updates) and alerts on any statistically significant deviation, which could indicate a mass deployment of malicious startup items.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - ESF ES_EVENT_TYPE_NOTIFY_WRITE
      - Endpoint File Creation/Modification Logs
      - File Integrity Monitoring Logs
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory.
    range: Last 90 days
    queries:
      - pseudocode: AGGREGATE file_events IN '/Library/StartupItems/' BY hour | APPLY time_series_model | DETECT anomalous_spike | ALERT if deviation > threshold
  - question: Has a process launched from a Startup Item connected to a known malicious command and control (C2) server or malware distribution point?
    context: A primary function of persistent malware is to "call home" to a C2 server for instructions or to exfiltrate data. This question correlates process execution events from /Library/StartupItems/ with outbound network connections. By checking the destination IP or domain against threat intelligence feeds, it directly identifies communication with known malicious infrastructure, providing a strong signal of an active compromise.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_EXEC
      - ESF ES_EVENT_TYPE_NOTIFY_CONNECT
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Endpoint Network Connection Logs
      - macOS endpoints, Network egress points, and DNS servers.
    range: Last 90 days
    queries:
      - pseudocode: JOIN (SEARCH process_logs WHERE path STARTS WITH '/Library/StartupItems/') WITH (SEARCH network_logs) ON host_id AND time_window=5m | LOOKUP destination_ip IN threat_feed | ALERT if destination_is_malicious
  - question: Is a process from a Startup Item communicating with a newly registered or unpopular domain?
    context: Adversaries frequently use newly registered domains (NRDs) for their C2 infrastructure to evade reputation-based blocklists. These domains also tend to be unpopular as they are not widely used by the general public. This question identifies network connections from startup item processes to domains that are very young or not on popular domain lists (like the Tranco top 1M). This heuristic is highly effective at uncovering suspicious C2 communications that might not yet be flagged by threat intelligence.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_EXEC
      - ESF ES_EVENT_TYPE_NOTIFY_CONNECT
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Endpoint Network Connection Logs
      - macOS endpoints, Network egress points, and DNS servers.
    range: Last 90 days
    queries:
      - pseudocode: FOR process FROM '/Library/StartupItems/' | GET resolved_domains | FOR each domain, GET whois_age AND popularity_rank | CALCULATE risk_score based on age < 60d and popularity | ALERT if risk_score > threshold
  - question: Does the encrypted (TLS/SSL) traffic from a Startup Item process exhibit characteristics of known malware?
    context: Much of C2 traffic is encrypted, hiding its content. However, the way a TLS connection is established can be fingerprinted (e.g., using JA3/JA3S). Specific malware families often use unique cryptographic libraries, resulting in a consistent and identifiable fingerprint. This question applies a machine learning model to analyze the metadata of TLS connections from startup item processes, flagging connections that behave like known malicious tools or implants even when the content is encrypted.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_EXEC
      - ESF ES_EVENT_TYPE_NOTIFY_CONNECT
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Endpoint Network Connection Logs
      - macOS endpoints, Network egress points, and DNS servers.
    range: Last 90 days
    queries:
      - pseudocode: FOR tls_connection FROM process IN '/Library/StartupItems/' | EXTRACT features (ja3, tls_version, ciphers, cert_info) | INVOKE tls_classifier_model(features) | ALERT if probability(malicious) > 0.85
  - question: Has a non-root process created a file in a Startup Item directory?
    context: The /Library/StartupItems/ directory is a system-level location, and legitimate modifications are almost always performed by processes running as root (UID 0), such as system installers or software update agents. An unprivileged user or process writing to this directory is a strong indicator of a privilege escalation attempt, where an adversary is trying to place a file that will later be executed with root privileges by the system at startup. This question seeks to detect this specific unauthorized action, excluding known-good installer processes.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - Endpoint File Creation Logs with User Context
      - Osquery process_events
      - Osquery file_events
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory and associated process user context.
    range: Last 90 days
    queries:
      - pseudocode: ON file_creation IN '/Library/StartupItems/' | GET creating_process_uid | IF process_uid != 0 AND process_name NOT IN allowlist | ALERT
  - question: Was a file in a Startup Item created by a process with an unusual parent process?
    context: Legitimate software installations that modify /Library/StartupItems/ typically originate from a predictable chain of processes (e.g., `launchd` spawning an installer). If a process that writes a startup item is spawned by an anomalous parent, such as a web browser, email client, or terminal shell, it suggests that user-level code execution has led to a privilege escalation attempt. This question baselines normal parent-child relationships and alerts on deviations, which can uncover attacks initiated from user-facing applications.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - Endpoint File Creation Logs with User Context
      - Osquery process_events
      - Osquery file_events
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory and associated process user context.
    range: Last 90 days
    queries:
      - pseudocode: ON file_creation IN '/Library/StartupItems/' | GET parent_process_name | LOOKUP parent_process_name in baseline_of_legit_parents | IF parent_process_name is rare (<1% frequency) | ALERT
  - question: Has a machine learning model predicted that a file write to a Startup Item is a privilege escalation attempt?
    context: Differentiating between legitimate software installation and malicious privilege escalation can be complex. This question uses a classification model that has been trained to recognize the subtle patterns of an attack. By analyzing a combination of features—such as the process name, its parent, its user context (UID), and its command-line arguments—the model can provide a probabilistic score of whether a write to /Library/StartupItems/ is malicious, enabling the detection of sophisticated or novel escalation techniques.
    answer_sources:
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - Endpoint File Creation Logs with User Context
      - Osquery process_events
      - Osquery file_events
      - File systems on all macOS endpoints, specifically the /Library/StartupItems/ directory and associated process user context.
    range: Last 90 days
    queries:
      - pseudocode: ON file_creation IN '/Library/StartupItems/' | EXTRACT features (process_name, parent_name, euid, signing_status, cmd_line) | INVOKE privesc_model(features) | ALERT if prediction is 'privilege_escalation'
  - question: Does a script in a Startup Item contain commands or code used for privilege escalation or defense evasion?
    context: After gaining the ability to write a file to /Library/StartupItems/, an adversary will place a script containing commands to further their objectives. This question involves automatically scanning the content of any new or modified file in this directory with a YARA ruleset specifically tailored to find macOS attack commands. This includes commands for creating users (`dscl`), disabling security controls (`spctl`, `csrutil`), or establishing reverse shells, providing immediate detection of malicious payloads.
    answer_sources:
      - File Integrity Monitoring Logs
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - ESF ES_EVENT_TYPE_NOTIFY_WRITE
      - File Content Analysis Tools
      - The contents of executable scripts within all subdirectories of /Library/StartupItems/ on all macOS endpoints.
    range: Last 90 days
    queries:
      - pseudocode: ON file_write IN '/Library/StartupItems/**' | SCAN file_content WITH privesc_yara_rules | ALERT on match (e.g., 'dscl', 'spctl --master-disable')
  - question: Does a Startup Item script contain commands that are statistically rare for this context?
    context: Legitimate startup scripts typically use a common and limited set of commands for configuration and setup. Adversarial scripts, however, often contain commands related to user management, security tampering, or network reconnaissance that are rarely, if ever, found in benign scripts. This question identifies suspicious scripts by analyzing the commands they contain and flagging any script that uses commands statistically infrequent across the enterprise's entire population of startup scripts.
    answer_sources:
      - File Integrity Monitoring Logs
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - ESF ES_EVENT_TYPE_NOTIFY_WRITE
      - File Content Analysis Tools
      - The contents of executable scripts within all subdirectories of /Library/StartupItems/ on all macOS endpoints.
    range: Last 90 days
    queries:
      - pseudocode: FOR all_scripts IN '/Library/StartupItems/**' | PARSE commands | CALCULATE frequency of each command across enterprise | ALERT if script contains rare command (frequency < 0.5%)
  - question: Has a Startup Item script been identified as belonging to a suspicious or unclassified category by a topic modeling algorithm?
    context: This question uses an unsupervised machine learning approach (NLP topic modeling) to automatically group all startup scripts into logical categories based on their content, such as 'software update,' 'network config,' etc. A malicious script with a unique purpose (e.g., credential theft) will likely not fit well into any established benign category. The model would either place it in a new, anomalous topic or flag it as an outlier, allowing analysts to discover novel attack scripts without prior knowledge of their specific commands.
    answer_sources:
      - File Integrity Monitoring Logs
      - ESF ES_EVENT_TYPE_NOTIFY_CREATE
      - ESF ES_EVENT_TYPE_NOTIFY_WRITE
      - File Content Analysis Tools
      - The contents of executable scripts within all subdirectories of /Library/StartupItems/ on all macOS endpoints.
    range: Last 90 days
    queries:
      - pseudocode: PROCESS text_content of all scripts in '/Library/StartupItems/**' with LDA model | IDENTIFY topics | ALERT if script falls into new or anomalous topic
  - question: Have the file permissions of a Startup Item been changed to be insecurely world-writable, or has its configuration plist been modified?
    context: Adversaries may change file permissions on a legitimate or malicious startup item to make it world-writable (`-rwxrwxrwx`). This allows any user or process on the system to modify the executable, enabling a low-privilege user to hijack a root-level persistence mechanism. Additionally, modifying the `StartupParameters.plist` file can alter how the item is run. This question detects these specific, high-risk file modification events, which are strong indicators of tampering or privilege escalation attempts.
    answer_sources:
      - File Integrity Monitoring Logs
      - ESF ES_EVENT_TYPE_NOTIFY_SETATTR
      - Osquery file_events
      - Endpoint File Permission Modification Logs
      - All files and subdirectories within the /Library/StartupItems/ path on all macOS endpoints.
    range: Last 90 days
    queries:
      - pseudocode: MONITOR file_attribute_changes IN '/Library/StartupItems/**' | ALERT if new_permissions are world-writable OR if file_name is 'StartupParameters.plist' and event is 'modification'
  - question: Does a file in a Startup Item have permissions that deviate from the established enterprise baseline?
    context: In a managed environment, files in /Library/StartupItems/ should have standard, predictable permissions (e.g., `755` for executables, `644` for plists). A deviation from this norm, even if not world-writable, can indicate a misconfiguration or an adversary's attempt to set up a future attack vector. This question involves creating a baseline of normal file permissions and alerting on any file that does not conform, providing a proactive way to find and fix security weaknesses or detect subtle tampering.
    answer_sources:
      - File Integrity Monitoring Logs
      - ESF ES_EVENT_TYPE_NOTIFY_SETATTR
      - Osquery file_events
      - Endpoint File Permission Modification Logs
      - All files and subdirectories within the /Library/StartupItems/ path on all macOS endpoints.
    range: Last 90 days
    queries:
      - pseudocode: FOR each file IN '/Library/StartupItems/**' | GET current_permissions | COMPARE to enterprise_baseline (e.g., 755 for exec, 644 for plist) | ALERT on deviation
  - question: Has an anomalous sequence of file system events related to a Startup Item occurred, deviating from the pattern of a legitimate installation?
    context: Legitimate software installations follow a predictable sequence of operations (e.g., create directory, write plist, write executable, set permissions). An adversary's actions might follow a different, less logical order (e.g., create a file, then later come back and change its permissions to be executable). This question uses a sequence analysis model to learn the "grammar" of a normal installation and flags any sequence of events that violates this learned pattern, allowing for the detection of suspicious behavior based on the *order* of operations, not just the individual actions.
    answer_sources:
      - File Integrity Monitoring Logs
      - ESF ES_EVENT_TYPE_NOTIFY_SETATTR
      - Osquery file_events
      - Endpoint File Permission Modification Logs
      - All files and subdirectories within the /Library/StartupItems/ path on all macOS endpoints.
    range: Last 90 days
    queries:
      - pseudocode: MODEL sequence of file_events in '/Library/StartupItems/**' (e.g., create_dir -> create_plist -> create_exec -> set_perms) | MONITOR new event sequences | ALERT if sequence deviates from learned benign model