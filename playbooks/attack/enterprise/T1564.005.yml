name: T1564.005: Hidden File System
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: Adversaries may use hidden file systems to conceal their tools, data, or activities. This playbook helps detect such evasion techniques by looking for indicators across network traffic, endpoint process activity, driver installations, raw disk access, registry modifications, and disk layout anomalies. It aims to identify the transfer and use of utilities like VeraCrypt, manipulation of disk partitions with tools like diskpart.exe, installation of suspicious kernel drivers, unauthorized raw disk access, modification of critical boot-related registry keys, and the creation of unallocated space on a disk for hidden volumes.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any known hidden file system creation utilities been transferred over the network?
    context: Adversaries often download tools like VeraCrypt, TrueCrypt, or E4sh to create hidden, encrypted volumes for data staging or tool storage. This query searches for file transfers where the file's hash, name, or embedded metadata matches a watchlist of these known utilities. Detecting the transfer is a key early indicator of this technique.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Zeek http.log
      - Internet gateways and network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          SEARCH network_file_logs
          WHERE file_hash IN (watchlist_hashes) OR file_name IN (watchlist_names) OR file_metadata IN (watchlist_metadata)
          CORRELATE with connection_logs on unique_id
          RETURN timestamp, source_ip, destination_ip, file_name, file_hash
  - question: Have any executable files with unusually high-entropy filenames been transferred over the network?
    context: To avoid simple name-based detection, adversaries may randomize the filenames of their tools. This can result in filenames with high character entropy (randomness). This query establishes a baseline for filename entropy and flags executables with anomalously high entropy, which could indicate a renamed malicious tool, including those for creating hidden file systems.
    answer_sources:
      - Zeek files.log
      - Internet gateways and network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          CALCULATE shannon_entropy for all filenames in network_file_logs over last 30 days to create baseline.
          SEARCH network_file_logs for new executables
          WHERE shannon_entropy(filename) > 95th_percentile_baseline AND filename NOT IN (allow_list)
          RETURN timestamp, source_ip, destination_ip, filename, entropy_score
  - question: Do any network file transfers exhibit characteristics of being malicious based on a machine learning model?
    context: This query uses a trained classification model to score file transfers based on a wide range of features (IP reputation, ASN, port, file type, size, etc.). This allows for the detection of suspicious transfers that may not match specific signatures but whose combined characteristics are indicative of malicious activity, such as downloading a hidden file system utility from a non-standard source.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek http.log
      - Internet gateways and network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          FOR each new file transfer event
          EXTRACT features (IP reputation, ASN, port, file type, size, filename entropy, etc.)
          SCORE event using pre-trained classification model
          IF score > high_risk_threshold
          ALERT with event details and risk score
  - question: Have any disk management utilities been executed with command-line arguments indicative of hidden volume creation or partition manipulation?
    context: Adversaries can use native Windows utilities like diskpart.exe, mountvol.exe, and fsutil.exe to manage disk partitions and volumes. This query looks for specific command-line arguments associated with malicious activity, such as deleting a volume mount point to hide a volume (mountvol /d), creating a large new file to serve as a container (fsutil file createnew), or running a script to modify partitions (diskpart /s).
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, File Servers, Critical application servers, and Administrator workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          SEARCH process_creation_logs (EID 4688)
          WHERE (process_name == 'mountvol.exe' AND command_line CONTAINS '/d')
          OR (process_name == 'diskpart.exe' AND command_line CONTAINS '/s')
          OR (process_name == 'fsutil.exe' AND command_line CONTAINS 'file createnew')
          AND process NOT IN (administrative_allow_list)
          RETURN timestamp, hostname, process_name, command_line, parent_process
  - question: Have any disk management utilities been executed by a rare parent process or with rare command-line arguments?
    context: Legitimate use of disk management tools typically originates from predictable parent processes (like mmc.exe) or scripts. This query baselines normal usage and alerts when these tools are executed by an unusual parent process (like cmd.exe in a user context) or with a command-line combination that is rare across the enterprise, suggesting non-standard, potentially malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, File Servers, Critical application servers, and Administrator workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          PROFILE parent_process/command_line combinations for diskpart.exe, mountvol.exe, fsutil.exe across enterprise.
          SEARCH process_creation_logs (EID 4688) for these processes
          WHERE prevalence(parent_process, command_line) < 1%_of_fleet
          AND parent_process NOT IN (standard_admin_tools)
          ALERT on rare combination
  - question: Have any anomalous sequences of command-line executions involving disk management been observed?
    context: Adversaries often perform reconnaissance before acting. A sequence of commands like disk reconnaissance (wmic partition get) followed immediately by partition modification (diskpart) within the same command shell session is highly suspicious. This query uses a sequence analysis model to learn normal command patterns and flag anomalous sequences that suggest malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, File Servers, Critical application servers, and Administrator workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          MODEL command sequences within parent process sessions (cmd.exe, powershell.exe).
          FOR each new session
          ANALYZE sequence of commands
          IF sequence is anomalous AND contains (disk_recon_cmd FOLLOWED BY disk_modification_cmd)
          ALERT on suspicious command sequence
  - question: Has a new kernel driver service been created that is unsigned or located outside the standard drivers directory?
    context: Hidden file system utilities like BestCrypt and VeraCrypt rely on kernel drivers. Adversaries may install these drivers in non-standard locations or use unsigned drivers to evade detection. This query alerts on the creation of a new kernel driver service (ServiceType 0x1) where the driver file is located outside of C:\Windows\System32\drivers or when a driver fails to load due to a signature validation failure (Code Integrity Event 3033).
    answer_sources:
      - Windows Event ID 7045
      - Microsoft-Windows-CodeIntegrity/Operational Event ID 3033
      - Windows Event ID 4688
      - All Windows endpoints and servers, particularly Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          SEARCH service_creation_logs (EID 7045)
          WHERE ServiceType == '0x1' AND ImagePath NOT CONTAINS '\\System32\\drivers\\'
          ALERT on event.
          ALSO, CREATE high-severity alert for any CodeIntegrity log (EID 3033).
  - question: Has a new kernel driver been installed that is rare across the enterprise or has a high-entropy service name?
    context: Widespread software deployments result in drivers being present on many systems. A kernel driver that appears on only a very small percentage of hosts (<1%) could be part of a targeted attack or unauthorized software installation. Additionally, randomly generated service names, which have high entropy, are a common tactic for malware. This query flags drivers that are either rare or have high-entropy names.
    answer_sources:
      - Windows Event ID 7045
      - All Windows endpoints and servers, particularly Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          AGGREGATE kernel driver installations (EID 7045) over 30 days.
          CALCULATE prevalence for each ImagePath.
          CALCULATE entropy for each ServiceName.
          SEARCH for new driver installations
          WHERE prevalence(ImagePath) < 1% OR entropy(ServiceName) > 98th_percentile
          ALERT on rare or high-entropy driver.
  - question: Does a new kernel driver installation exhibit anomalous characteristics based on a machine learning model?
    context: This query uses an anomaly detection model trained on legitimate driver installations. By analyzing features like file path depth, service name entropy, and file name entropy, the model can identify new driver installations that deviate significantly from the norm. This can catch sophisticated threats that might evade simpler rule-based detections.
    answer_sources:
      - Windows Event ID 7045
      - All Windows endpoints and servers, particularly Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          FOR each new driver installation event (EID 7045)
          EXTRACT features (path depth, service name entropy, file name entropy, etc.)
          SCORE event using pre-trained anomaly detection model
          IF score is anomalous
          ALERT with event details and anomaly score.
  - question: Has an unauthorized process attempted to read from or write to a raw physical disk?
    context: Hidden file systems can be created in raw, unpartitioned disk space. Accessing this space requires direct interaction with the physical disk object (e.g., \\.\PhysicalDrive0). This query leverages System Access Control Lists (SACLs) to log such access attempts and alerts when a process not on an approved allow-list (e.g., backup agents, chkdsk.exe) tries to read or write raw disk data.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Windows Event ID 4688
      - SACL-monitored raw disk objects (\\.\PhysicalDrive*) on all Windows endpoints and servers, especially database servers, file servers, and domain controllers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          REQUIRE SACL enabled on \\.\PhysicalDrive* objects.
          SEARCH object_access_logs (EID 4656, 4663)
          WHERE ObjectName CONTAINS '\\PhysicalDrive'
          AND Accesses CONTAINS ('ReadData' OR 'WriteData')
          AND ProcessName NOT IN (approved_disk_utility_allow_list)
          ALERT on unauthorized access.
  - question: Has a process that rarely accesses raw disk been observed doing so?
    context: Legitimate raw disk access is typically performed by a small, consistent set of system utilities. This query establishes a baseline of which processes normally access raw disk and how frequently. An alert is generated when a process that is not commonly observed accessing raw disk (i.e., has a low prevalence for this action) performs this highly privileged operation, especially if its parent is a common user shell.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Windows Event ID 4688
      - SACL-monitored raw disk objects (\\.\PhysicalDrive*) on all Windows endpoints and servers, especially database servers, file servers, and domain controllers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          BASELINE prevalence of processes accessing raw disk from object_access_logs (EID 4656, 4663).
          SEARCH for new raw disk access events.
          IF prevalence(ProcessName) < 2%_of_systems
          FLAG for review, prioritizing if parent_process is rare (e.g., cmd.exe).
  - question: Do any raw disk access events fall into anomalous clusters?
    context: This query uses clustering to group raw disk access events by their shared properties (process name, parent process, time of day). Large, dense clusters typically represent normal, recurring behavior (e.g., nightly backups). Small, isolated clusters or single events (singletons) are, by definition, unusual and may represent malicious activity. The query flags these anomalies for investigation.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Windows Event ID 4688
      - SACL-monitored raw disk objects (\\.\PhysicalDrive*) on all Windows endpoints and servers, especially database servers, file servers, and domain controllers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          CLUSTER raw disk access events based on features (process name, parent, access mask, time).
          ANALYZE resulting clusters.
          FLAG small, sparse clusters or singleton events as anomalous.
  - question: Have critical file system or boot-related registry keys been modified by an unauthorized process?
    context: To ensure their hidden file system driver is loaded at boot, adversaries may modify registry keys that control boot-time execution or file system drivers (e.g., BootExecute, Services\Ntfs). This query creates high-priority alerts for any modification to these critical keys by a process other than a trusted system installer or patch manager, as this is highly indicative of tampering.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Boot sectors of physical disks and Windows Registry hives on all Windows assets
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          SEARCH registry_modification_logs (EID 4657)
          WHERE RegistryKey IN ('HKLM\\...\\Services\\Ntfs', 'HKLM\\...\\BootExecute')
          AND ProcessName NOT IN ('TrustedInstaller.exe', approved_patch_managers)
          CREATE high-priority alert.
  - question: Has there been a statistical anomaly in the number of modifications to registry service keys?
    context: The installation of new services, including malicious drivers, involves modifying keys under HKLM\SYSTEM\CurrentControlSet\Services. While some changes are normal, a sudden spike in modification events on a host, especially outside of a patch window, is abnormal. This query baselines the daily count of these modifications and alerts when a host significantly deviates from its own or the enterprise-wide norm.
    answer_sources:
      - Windows Event ID 4657
      - Boot sectors of physical disks and Windows Registry hives on all Windows assets
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          TRACK daily count of modifications to HKLM\\...\\Services key per host.
          ESTABLISH baseline mean and standard deviation for each host.
          ALERT when daily_count > (mean + 3 * std_dev) OR daily_count > 99th_percentile_all_hosts.
  - question: Has a time-series model detected an anomalous spike in boot-related registry modifications?
    context: Legitimate modifications to boot and service registry keys often follow predictable patterns (e.g., spikes during Patch Tuesday). This query uses a time-series model that accounts for this seasonality to detect anomalous spikes in activity. An alert from this model indicates a level of modification that is unexpected even when accounting for normal administrative cycles, suggesting potential bootkit or malicious driver installation.
    answer_sources:
      - Windows Event ID 4657
      - Boot sectors of physical disks and Windows Registry hives on all Windows assets
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          MODEL aggregate count of modifications to HKLM\\...\\Control\\Session Manager and HKLM\\...\\Services keys with time-series model (e.g., SARIMA).
          ACCOUNT for weekly/monthly seasonality.
          ALERT on any spike flagged as a significant anomaly by the model.
  - question: Is there a significant discrepancy between a disk's total size and the sum of its allocated partition sizes?
    context: An adversary can create a hidden file system in a "Host Protected Area" or other unpartitioned space on a disk. This results in a gap where the sum of the visible partitions is less than the total physical disk size. This query periodically runs a script to compare these values and alerts if a significant, unaccounted-for gap (e.g., >1GB) exists, which could be a hidden partition.
    answer_sources:
      - Windows Event ID 4688
      - Custom Script Output
      - Physical disks on all Windows endpoints and servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          SCHEDULE script to run `wmic diskdrive get size` and `wmic partition get size`.
          CALCULATE UnallocatedSpace = TotalDiskSize - SUM(PartitionSizes).
          IF UnallocatedSpace > 1GB
          ALERT on disk size discrepancy.
  - question: Has a change point detection algorithm identified a sudden increase in unallocated disk space?
    context: Rather than just looking at the current state, this query analyzes the history of unallocated disk space on a host over time. A sudden, sharp increase in this value, detected as a "change point" by an algorithm, indicates that space was recently de-allocated or carved out. This is a strong indicator that a partition was deleted or shrunk to make room for a hidden volume.
    answer_sources:
      - Custom Script Output
      - Physical disks on all Windows endpoints and servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          INGEST periodic UnallocatedSpace calculation into time-series database.
          APPLY change point detection algorithm (e.g., CUSUM) to the time-series for each host.
          ALERT when a statistically significant positive change point is detected.
  - question: Has a host's disk layout profile changed unexpectedly to a different standard build cluster?
    context: In a managed environment, machines of a certain type (e.g., developer laptops) have similar disk layouts. This query clusters hosts based on their disk profiles (total size, number of partitions, etc.). If a host suddenly moves from its expected cluster (e.g., 'Standard Laptop') to a different one because its unallocated space changed, it signals an unauthorized modification to its disk layout.
    answer_sources:
      - Custom Script Output
      - Physical disks on all Windows endpoints and servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |-
          COLLECT disk layout profiles from all hosts weekly.
          CLUSTER hosts into standard build profiles using K-Means.
          IF a host migrates from its expected cluster to another
          FLAG for investigation as an unauthorized disk modification.