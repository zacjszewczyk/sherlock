name: T1590.004: Network Topology
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: "This playbook helps determine if an adversary is performing external network reconnaissance to map an organization's network topology. It addresses several key indicators of this activity, including: a high volume of connection attempts from a single source, especially if that source is listed on threat intelligence feeds; network traffic containing signatures of common reconnaissance tools (e.g., specific User-Agent strings or anomalous TCP flag combinations); statistically unusual scanning patterns, such as a single source connecting to a large number of distinct hosts (horizontal scan) or ports (vertical scan); low-and-slow connection attempts targeting sensitive or non-standard ports from previously unseen sources; and sequential connection attempts to a contiguous range of IP addresses to enumerate live hosts."
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Is an external IP address known to threat intelligence services attempting to connect to our network?
    context: Adversaries often use infrastructure that has been previously identified and reported for malicious activity, such as known scanners or TOR exit nodes. Correlating inbound connection attempts against reputable threat intelligence feeds provides a high-confidence method for detecting the initial stages of reconnaissance. It is crucial to also maintain an allowlist of known benign scanners (e.g., from partners or security vendors) to reduce false positives.
    answer_sources:
      - Zeek conn.log
      - Zeek intel.log
      - Perimeter firewalls
      - Internet gateways
      - Cloud provider network flow logs (e.g., AWS VPC Flow Logs)
      - Threat Intelligence Platform integration points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each connection in conn.log
            IF connection.source_ip is in threat_intelligence_feed
              AND connection.source_ip is NOT in benign_scanner_allowlist
                ALERT "Threat Intel Match for Source IP"
  - question: Is any single external IP address exhibiting an anomalously high volume of connection attempts compared to its own historical baseline?
    context: While some external IPs may be naturally chatty, a sudden and significant increase in connection attempts from a single source can indicate a scanning operation. By establishing a historical baseline (e.g., mean and standard deviation of connections per hour) for each source IP, analysts can detect when an IP's activity deviates significantly from its normal behavior, pointing to a potential reconnaissance effort.
    answer_sources:
      - Zeek conn.log
      - Zeek intel.log
      - Perimeter firewalls
      - Internet gateways
      - Cloud provider network flow logs (e.g., AWS VPC Flow Logs)
      - Threat Intelligence Platform integration points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
            CALCULATE mean_hourly_connections and std_dev over last 30 days
            IF current_hour_connections > (mean_hourly_connections + 3 * std_dev)
              ALERT "Anomalous Connection Volume for Source IP"
  - question: Can we use machine learning to classify an external IP address as a potential scanner based on its behavioral and reputational features?
    context: Sophisticated adversaries may attempt to blend in with normal traffic. A machine learning classification model can provide more nuanced detection by considering a wide range of features simultaneously, such as IP reputation scores, the owner of the Autonomous System Number (ASN), country of origin, connection frequency, and historical patterns. By training a model to recognize the combined characteristics of scanners, it can assign a 'scanner probability' score to each IP, enabling alerts on sources that surpass a confidence threshold.
    answer_sources:
      - Zeek conn.log
      - Zeek intel.log
      - Perimeter firewalls
      - Internet gateways
      - Cloud provider network flow logs (e.g., AWS VPC Flow Logs)
      - Threat Intelligence Platform integration points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
            GATHER features (IP reputation, ASN, country, connection frequency)
            CALCULATE scanner_probability = ml_model.predict(features)
            IF scanner_probability > alert_threshold
              ALERT "High Probability Scanner Detected by ML Model"
  - question: Is an external source using traffic patterns, such as specific User-Agent strings or TCP flag combinations, that are characteristic of known reconnaissance tools?
    context: Automated scanning tools (e.g., Nmap, ZMap, Nikto) often leave tell-tale artifacts in network traffic. These can include unique User-Agent strings in HTTP headers or the use of specific TCP flag combinations to probe for host and port status (e.g., NULL, FIN, or Xmas scans). Creating detection rules that search for these specific signatures is a direct way to identify the use of reconnaissance tools.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek weird.log
      - External-facing web servers
      - Application load balancers
      - DMZ
      - Web Application Firewalls (WAFs)
      - Intrusion Detection/Prevention Systems (IDS/IPS)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each http_request in http.log
            IF http_request.user_agent MATCHES regex(known_scanner_strings)
              ALERT "Known Scanner User-Agent Detected"
          FOR each connection in conn.log
            IF connection.tcp_flags IS "Xmas" OR "NULL" OR "FIN"
              ALERT "Anomalous TCP Scan Detected"
  - question: Are there inbound HTTP requests with User-Agent strings that have unusually high or low complexity, suggesting they are not from standard browsers?
    context: Legitimate web browsers have User-Agent strings with a predictable level of complexity and randomness. The Shannon entropy of a string measures this complexity. A very low entropy score often indicates a simple, hardcoded string used by a basic script or tool. Conversely, a very high entropy score can indicate an adversary's attempt to evade signature-based detection by randomizing the User-Agent. Flagging strings with entropy scores outside the normal range can uncover these non-standard clients.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek weird.log
      - External-facing web servers
      - Application load balancers
      - DMZ
      - Web Application Firewalls (WAFs)
      - Intrusion Detection/Prevention Systems (IDS/IPS)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE baseline_entropy_range for legitimate User-Agents
          FOR each http_request in http.log
            CALCULATE entropy = shannon_entropy(http_request.user_agent)
            IF entropy NOT in baseline_entropy_range
              ALERT "Anomalous User-Agent Entropy Detected"
  - question: Is there a statistically significant increase in the frequency of unusual TCP scan types (NULL, FIN, Xmas) over time?
    context: While a single anomalous TCP packet might be noise, a sustained increase in the rate of these packets indicates a more deliberate, coordinated scanning event. A time-series anomaly detection model (like ARIMA or Prophet) can learn the normal background rate of such events and forecast an expected range. When the observed count of these scan types significantly exceeds the forecast, it suggests an active scanning campaign is underway.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek weird.log
      - External-facing web servers
      - Application load balancers
      - DMZ
      - Web Application Firewalls (WAFs)
      - Intrusion Detection/Prevention Systems (IDS/IPS)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL expected_scan_counts = time_series_model.forecast(historical_scan_counts)
          GET observed_scan_counts for current time window
          IF observed_scan_counts significantly deviates from expected_scan_counts
            ALERT "Significant Increase in TCP Scan Types Detected"
  - question: Is a single external IP attempting to connect to an unusually large number of different hosts (horizontal scan) or different ports on a single host (vertical scan)?
    context: Two of the most common reconnaissance techniques are horizontal and vertical scanning. A horizontal scan involves probing the same port across many different hosts to find vulnerable services. A vertical scan involves probing many different ports on a single host to map all its open services. Simple threshold-based rules that count the number of unique destination IPs or ports contacted by a single source within a short time window are effective at detecting this brute-force activity.
    answer_sources:
      - Zeek conn.log
      - DMZ subnets
      - Public IP address ranges
      - Edge routers
      - Cloud security groups and network ACLs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip in a 1-minute window
            COUNT unique destination_ips
            IF unique destination_ips > 100
              ALERT "Potential Horizontal Scan Detected"
            COUNT unique destination_ports on a single host
            IF unique destination_ports > 50
              ALERT "Potential Vertical Scan Detected"
  - question: Is any external IP exceeding a dynamically calculated percentile for the number of distinct hosts or ports contacted?
    context: Static thresholds for scan detection can be brittle and lead to false positives or negatives as network traffic patterns change. A more robust approach is to use dynamic baselining. By calculating a high percentile (e.g., the 99th percentile) for the number of distinct hosts and ports contacted across all external traffic, analysts can create a floating threshold that adapts to the network's current state. Any source IP exceeding this dynamic threshold is a statistically significant outlier and a strong candidate for a scanner.
    answer_sources:
      - Zeek conn.log
      - DMZ subnets
      - Public IP address ranges
      - Edge routers
      - Cloud security groups and network ACLs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE p99_distinct_hosts and p99_distinct_ports for all traffic in a 5-min window
          FOR each source_ip in that window
            IF source_ip.distinct_host_count > p99_distinct_hosts
              ALERT "Source IP Exceeds Dynamic Threshold for Horizontal Scanning"
            IF source_ip.distinct_port_count > p99_distinct_ports
              ALERT "Source IP Exceeds Dynamic Threshold for Vertical Scanning"
  - question: Can we use unsupervised machine learning to automatically group and identify scanning behaviors without pre-defined rules or thresholds?
    context: Unsupervised clustering algorithms, such as DBSCAN, can automatically identify groups of similar behavior within a dataset without needing pre-labeled examples. By feeding the algorithm features from connection logs (e.g., counts of distinct destination IPs and ports, total connection duration), it can naturally separate normal traffic from anomalous clusters. These clusters, identified by the model as outliers, often correspond directly to horizontal, vertical, or other non-standard scanning behaviors.
    answer_sources:
      - Zeek conn.log
      - DMZ subnets
      - Public IP address ranges
      - Edge routers
      - Cloud security groups and network ACLs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT features (distinct_hosts, distinct_ports, total_duration) for all source_ips
          RUN dbscan_model on features
          FOR each cluster identified as anomalous
            ALERT "Anomalous Scanning Cluster Detected by ML Model"
  - question: Is an external IP attempting to connect to a critical, sensitive, or non-public port?
    context: Certain ports, such as those for remote administration (RDP, SSH), database management, or internal device management (SNMP), should never be exposed to or receive connection attempts from the public internet. Creating a watchlist of these high-value ports and generating a high-priority alert for any external connection attempt is a simple and highly effective way to detect targeted reconnaissance or intrusion attempts.
    answer_sources:
      - Zeek conn.log
      - VPN concentrators
      - Remote access gateways
      - Servers hosting sensitive applications
      - Management interfaces of network appliances
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE critical_port_watchlist = [3389, 22, 5985, 161, ...]
          FOR each connection in conn.log
            IF connection.destination_port in critical_port_watchlist
              AND connection.source_ip is external
                ALERT "External Connection Attempt to Critical Port"
  - question: Is an external IP exhibiting 'low and slow' scanning behavior, characterized by infrequent connections with long delays between them?
    context: To evade detection systems that trigger on high connection volume, adversaries may employ 'low and slow' scanning, where connection attempts are spaced out over long periods. This can be detected by monitoring the inter-arrival time (the delay between successive connection attempts) for each source IP. An IP that consistently exhibits an unusually long inter-arrival time, especially when combined with a low total connection count, is likely attempting to perform stealthy reconnaissance.
    answer_sources:
      - Zeek conn.log
      - VPN concentrators
      - Remote access gateways
      - Servers hosting sensitive applications
      - Management interfaces of network appliances
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
            CALCULATE avg_inter_arrival_time between connections
            CALCULATE p95_inter_arrival_time for all source IPs
            IF source_ip.avg_inter_arrival_time > p95_inter_arrival_time
              ALERT "Potential 'Low and Slow' Scanner Detected"
  - question: Is there a subtle, long-term increase in the number of unique sources attempting to connect to our critical ports?
    context: A coordinated, distributed reconnaissance campaign may not show up as a high volume of traffic from a single source, but rather as a small increase in traffic from many different sources over a long period. By applying time-series anomaly detection to the hourly or daily count of *unique source IPs* connecting to a specific high-value port, analysts can detect these subtle, long-term campaigns that would be missed by methods focused on volume or short time windows.
    answer_sources:
      - Zeek conn.log
      - VPN concentrators
      - Remote access gateways
      - Servers hosting sensitive applications
      - Management interfaces of network appliances
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each port in critical_port_watchlist
            MODEL expected_unique_ips = time_series_model.forecast(historical_unique_ip_counts)
            GET observed_unique_ips for current time window
            IF observed_unique_ips significantly deviates from expected_unique_ips
              ALERT "Anomalous Increase in Unique Sources Targeting Critical Port"
  - question: Is an external source sequentially scanning a contiguous range of our IP addresses?
    context: A classic network sweep involves an attacker probing a sequential block of IP addresses (e.g., 192.0.2.1, 192.0.2.2, 192.0.2.3, etc.) to discover which hosts are live. This behavior is highly unnatural for legitimate traffic. A stateful rule that tracks the destination IPs contacted by a source and alerts when it observes a sequential pattern can reliably detect this type of enumeration.
    answer_sources:
      - Zeek conn.log
      - Zeek icmp.log
      - Zeek weird.log
      - Organization's allocated CIDR blocks
      - Edge router logs
      - Network Address Translation (NAT) logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
            TRACK sequence of destination_ips contacted
            IF sequence contains > 10 IPs with sequential last octets in 1 minute
              ALERT "Sequential Network Sweep Detected"
  - question: Is an external source experiencing an extremely high ratio of failed to successful connections, suggesting it is probing for live hosts?
    context: When an adversary is enumerating a network block, they are blindly sending probes to IPs that may or may not be active. This results in a very high percentage of failed, rejected, or timed-out connections. Legitimate clients, which know the address of the server they want to contact, will have a much lower failure rate. Therefore, flagging a source IP whose connection failure ratio exceeds a high threshold (e.g., 90%) is a strong indicator of reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek icmp.log
      - Zeek weird.log
      - Organization's allocated CIDR blocks
      - Edge router logs
      - Network Address Translation (NAT) logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip in a 10-minute window
            CALCULATE failure_ratio = count(failed_connections) / count(total_connections)
            IF failure_ratio > 0.90
              ALERT "High Connection Failure Ratio Detected for Source IP"
  - question: Can we mathematically model the sequence of IP addresses contacted by a source to identify non-random, sequential scanning patterns?
    context: A sophisticated way to detect sequential scanning is to model the attacker's behavior using a Markov Chain. This model calculates the probability of transitioning from one state (contacting IP 'N') to another (contacting IP 'N+1'). For normal traffic, the probability of contacting an adjacent IP address is extremely low. For a network sweep, this transition probability is very high. Alerting when this probability exceeds a learned threshold provides a mathematically rigorous method for detecting sequential sweeps.
    answer_sources:
      - Zeek conn.log
      - Zeek icmp.log
      - Zeek weird.log
      - Organization's allocated CIDR blocks
      - Edge router logs
      - Network Address Translation (NAT) logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
            MODEL transition probabilities between contacted IPs using a Markov Chain
            CALCULATE probability_of_sequential_transition = P(contacting IP_N+1 | contacted IP_N)
            IF probability_of_sequential_transition > anomaly_threshold
              ALERT "Sequential Scanning Pattern Detected by Markov Chain Model"