name: T1562.012: Disable or Modify Linux Audit System
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has attempted to disable or modify the Linux audit system to evade detection. This can be accomplished by transferring known tampering tools to a host, executing remote commands from a compromised Windows machine to stop the auditd service, causing a cessation of logging traffic, modifying critical audit configuration files over the network, or executing commands directly on the Linux host to kill, disable, or reconfigure the auditd service.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any files transferred to Linux servers been identified as known auditd tampering tools by matching their hash against a threat intelligence feed?
    context: This question aims to detect the introduction of known malicious tools used for disabling the Linux audit system. By checking file hashes from network transfers against a threat intelligence database, analysts can identify high-fidelity threats early, often before the tool is even executed. A match provides strong evidence of an adversary staging tools for defense evasion.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Network egress points, DMZ, connections between workstations and the Linux server environment.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek files.log FOR file transfers to Linux subnets
          EXTRACT file_hash
          LOOKUP file_hash against threat_intel_database
          IF match, ALERT and CORRELATE with Zeek conn.log using UID
  - question: Are there any executable files or scripts being transferred to Linux servers that exhibit unusually high entropy, suggesting they might be packed or encrypted to hide malicious code?
    context: Adversaries often use packers or encryption to obfuscate their malware and evade signature-based detection. High Shannon entropy is a common characteristic of such files. This question helps identify suspicious files that may not match known signatures but whose structure is anomalous, warranting further investigation for potential malicious functionality.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Network egress points, DMZ, connections between workstations and the Linux server environment.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek files.log for executable/script MIME types to Linux servers
          CALCULATE Shannon entropy for each file
          COMPARE entropy to historical baseline for asset type
          ALERT if entropy is in top 98th percentile
  - question: Has a machine learning model classified any recent file transfers to Linux servers as having a high probability of being malicious?
    context: This question leverages a machine learning model to provide a more nuanced and comprehensive detection method than single indicators. By analyzing multiple features of a file transfer (e.g., file type, size, entropy, source IP reputation, connection details), the model can identify complex patterns indicative of malicious activity that might be missed by simple rules, helping to uncover novel or sophisticated threats.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Network egress points, DMZ, connections between workstations and the Linux server environment.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          INPUT new file transfers (from Zeek files.log, conn.log) into trained classification model
          SCORE transfer based on features (MIME, size, entropy, IP rep, duration)
          ALERT if score exceeds high-probability malicious threshold
  - question: Has a command been executed from a Windows host via a remote shell client (like SSH or PowerShell) to stop, disable, or modify the auditd service on a Linux system?
    context: This question targets a direct and explicit attempt to disable the Linux audit system from a remote management host. Monitoring for specific command-line strings (e.g., 'systemctl stop auditd', 'auditctl -e 0') within Windows process creation events provides a clear and actionable indicator of an adversary's attempt to evade defenses on a connected Linux server.
    answer_sources:
      - Windows Event ID 4688
      - Windows management workstations, Jump servers, Domain Controllers, and other systems with remote access tools.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Windows Event ID 4688 for process creation
          FILTER for remote clients (ssh.exe, plink.exe, wsl.exe, pwsh.exe)
          SEARCH CommandLine for keywords ('systemctl stop auditd', 'killall auditd', 'auditctl -D')
          ALERT on match
  - question: Has any user executed an unusually rare command via a remote shell client, particularly one involving system services or configuration?
    context: Adversaries' actions often deviate from normal administrative behavior. This question aims to detect such deviations by baselining command-line activity for each user. A command that is statistically rare for a specific user or the entire organization, especially if it relates to system management, can indicate misuse of credentials or an adversary exploring or altering the system in an atypical way.
    answer_sources:
      - Windows Event ID 4688
      - Windows management workstations, Jump servers, Domain Controllers, and other systems with remote access tools.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each user, BASELINE historical commands from remote shell clients
          CALCULATE rarity score for new commands
          ALERT if command rarity is in 99th percentile, especially for system/service commands
          CORRELATE with recent authentications
  - question: Has a machine learning model detected an anomalous sequence of commands within a remote shell session, such as privilege escalation followed by the disabling of a security service?
    context: This question moves beyond single commands to analyze the entire command sequence within a session. Adversaries often follow a logical progression of actions (e.g., gain higher privileges, then disable defenses). A sequence analysis model can learn normal administrative workflows and flag sessions that contain suspicious or illogical progressions, revealing malicious intent that individual commands might not.
    answer_sources:
      - Windows Event ID 4688
      - Windows management workstations, Jump servers, Domain Controllers, and other systems with remote access tools.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          RECONSTRUCT remote sessions from process events
          INPUT command sequence into trained LSTM model
          MODEL compares sequence to baseline of benign admin sessions
          ALERT if sequence is anomalous (e.g., sudo followed by disabling auditd)
  - question: Did logging traffic from a critical Linux server stop unexpectedly within minutes of a new SSH session being established to it?
    context: This question directly links a potential cause (a new remote session) with a suspicious effect (cessation of logs). A common adversary tactic is to gain access and immediately disable logging to cover their tracks. Correlating these two events in a tight time window creates a high-confidence alert that points to active, intentional evasion.
    answer_sources:
      - Zeek conn.log
      - Zeek ssh.log
      - Syslog/SIEM collectors, Network core switches monitoring traffic from critical Linux servers, Authentication servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          ON new SSH connection to critical server (from Zeek ssh.log)
          START 5-minute timer
          IF no syslog traffic is seen from server IP for a 2-minute period within that window (from Zeek conn.log)
          ALERT with SSH session details
  - question: Has the volume of logging traffic from a critical Linux server dropped significantly below its normal, established baseline?
    context: This question uses statistical baselining to detect a potential log tampering event without needing to see the command that caused it. A sudden, sustained drop in log volume (e.g., more than 3 standard deviations) is a strong anomaly. This method can catch instances where the audit service crashes or is killed in a way that doesn't generate a command-line event, providing a different angle for detection.
    answer_sources:
      - Zeek conn.log
      - Zeek ssh.log
      - Syslog/SIEM collectors, Network core switches monitoring traffic from critical Linux servers, Authentication servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each critical server, establish 30-day baseline of log volume (bytes/min) from Zeek conn.log
          MONITOR for deviations
          ALERT if volume drops >3 standard deviations below mean for >5 minutes
          ENRICH with recent login activity
  - question: Has a time-series forecasting model predicted a normal level of log volume from a critical server, while the actual observed volume is significantly lower?
    context: This question employs a predictive model to identify logging anomalies. Unlike a simple statistical baseline, a time-series model can account for complex patterns like time of day, day of week, and other cyclical business operations. When the actual log volume falls far below the model's prediction, it signals an unexpected and therefore suspicious drop, potentially caused by tampering.
    answer_sources:
      - Zeek conn.log
      - Zeek ssh.log
      - Syslog/SIEM collectors, Network core switches monitoring traffic from critical Linux servers, Authentication servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each critical server, use ARIMA/Prophet model to forecast expected log volume
          COMPARE actual observed log volume to the model's predicted lower confidence bound
          ALERT if actual volume is significantly below prediction
  - question: Has a network file transfer operation or a remote command been observed writing to or modifying a critical Linux audit configuration file (e.g., audit.rules, auditd.conf)?
    context: This question targets direct manipulation of the files that control the Linux audit system's behavior. Any unauthorized modification of these specific, sensitive files is a major security event. Monitoring for writes to these file paths via network protocols (SMB, FTP) or remote execution (SCP) provides a very high-fidelity alert for defense evasion.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek smb_files.log
      - Zeek ftp.log
      - Windows management workstations, File servers used for staging, Critical Linux servers hosting audit configurations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH network file logs (smb_files.log, ftp.log) and command logs (Win 4688 for scp)
          FILTER for write operations to paths like '/etc/audit/audit.rules', '/etc/audit/auditd.conf', '/etc/audit/rules.d/*'
          ALERT on any unauthorized write
  - question: Has an audit configuration file been modified by a user, from a source host, or at a time that deviates from the established baseline for legitimate changes?
    context: Legitimate changes to audit configurations are typically performed by specific administrators, from specific systems, and often within planned maintenance windows. This question aims to identify modifications that fall outside these normal patterns. A change made by a non-standard user account or from an unusual IP address is highly suspicious and could indicate a compromised account being used to weaken defenses.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek smb_files.log
      - Zeek ftp.log
      - Windows management workstations, File servers used for staging, Critical Linux servers hosting audit configurations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE authorized users, source hosts, and times for audit config file modifications
          MONITOR for new modifications
          ALERT if modification deviates from baseline (e.g., non-admin user, unusual source IP, outside change window)
  - question: Has a machine learning model flagged a recent audit configuration file modification as high-risk or characteristic of adversarial tampering?
    context: This question uses a model to assess the risk of a configuration change based on a wide range of contextual factors. The model can learn the subtle differences between benign administrative changes and malicious tampering by considering user role, source IP, time, and even correlation with change management tickets. This provides a sophisticated scoring mechanism to prioritize the most suspicious modifications for immediate review.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek smb_files.log
      - Zeek ftp.log
      - Windows management workstations, File servers used for staging, Critical Linux servers hosting audit configurations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          INPUT audit config file modifications into trained classification model
          SCORE modification based on features (user role, source, time, change ticket correlation)
          ALERT on changes scored as high-risk
  - question: Has a command been executed on a Linux host to stop, disable, kill, reconfigure, or delete rules for the auditd service?
    context: This question looks for the most direct evidence of an adversary disabling the Linux audit system: the command itself. By using regular expressions to search command logs for variations of commands like 'service auditd stop', 'killall auditd', or 'auditctl -D', analysts can catch explicit attempts to turn off this critical security control. This is a high-severity indicator of active defense evasion.
    answer_sources:
      - Zeek command.log
      - Critical Linux servers (e.g., web servers, database servers, authentication servers), Linux administrator workstations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek command.log
          FILTER for commands matching regex like '(systemctl|service) stop auditd', 'kill(all)? auditd', 'auditctl -e 0', 'auditctl -D'
          ALERT on match
  - question: Has a rare administrative command related to managing the auditd service been executed on a Linux host, especially outside a maintenance window?
    context: While administrators may occasionally manage the auditd service, these actions are typically infrequent. This question focuses on identifying when such a command is statistically rare for a given host or the environment as a whole. A rare occurrence, particularly if it's not part of a documented change, is suspicious and could signal an adversary's attempt to disable security monitoring.
    answer_sources:
      - Zeek command.log
      - Critical Linux servers (e.g., web servers, database servers, authentication servers), Linux administrator workstations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE admin commands on each Linux host
          CALCULATE frequency of auditd management commands
          ALERT if a rare auditd command is executed (e.g., 99th percentile rarity), especially outside a maintenance window
  - question: Has a machine learning model identified an anomalous sequence of shell commands, such as downloading a tool followed by its use to disable auditd?
    context: This question analyzes the narrative of an attack by examining command sequences. Adversaries often follow a pattern: obtain a tool, prepare it, and then use it to disable defenses. An NLP or sequence model can learn these malicious patterns and distinguish them from benign administrative workflows, allowing it to flag a suspicious chain of events like 'wget -> chmod -> ./tool_to_kill_auditd'.
    answer_sources:
      - Zeek command.log
      - Critical Linux servers (e.g., web servers, database servers, authentication servers), Linux administrator workstations.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          INPUT shell command history from Zeek command.log into a sequence model
          MODEL is trained to identify anomalous sequences
          ALERT if a sequence indicating defense evasion is detected (e.g., download -> execute -> disable auditd)