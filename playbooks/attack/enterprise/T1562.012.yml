name: 'T1562.012: Disable or Modify Linux Audit System'
id: 'a7b1c3d4-e5f6-4a9b-8c7d-6e5f4a3b2c1d'
description: 'This playbook focuses on detecting attempts by an adversary to disable or modify the Linux audit system (`auditd`), a key defense evasion technique (T1562.012). It provides investigative questions to identify this activity through various lenses: the transfer of known tampering tools, the remote execution of commands from Windows hosts to stop the service, the anomalous cessation of logging traffic from a server after a remote login, the direct modification of audit configuration files over the network, and the execution of local commands to kill or reconfigure the `auditd` service. Each method is explored through symbolic logic, statistical analysis, and machine learning approaches to provide comprehensive detection strategies.'
type: 'technique'
related: 'TA0005: Defense Evasion'
contributors: 'Zachary Szewczyk'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Have any files been transferred to a Linux host that match the hash of a known malicious tool used for tampering with the audit system?'
    context: 'This question aims to detect the introduction of known malicious tools onto a Linux server. By comparing file hashes from network transfers against a threat intelligence feed, we can identify specific tools designed to disable or modify `auditd`. A match provides a strong indication of a preparatory step for defense evasion. The alert should be correlated with session data to understand the origin and context of the transfer.'
    answer_sources: 'Zeek files.log, Zeek conn.log, Threat intelligence feed. Look for data at Network egress points, DMZ, connections between workstations and the Linux server environment.'
    range: 'last 90 days'
    queries: 'SEARCH Zeek files.log FOR file transfers to Linux subnets. EXTRACT file hash. LOOKUP hash in threat intelligence database. IF match, ALERT and CORRELATE with Zeek conn.log using connection UID.'
  - question: 'Have any executable files or scripts with unusually high entropy, suggesting packing or encryption, been transferred to Linux servers?'
    context: 'This question seeks to identify potentially malicious files that may not be known to threat intelligence feeds. High entropy often indicates that a file is packed or encrypted to obfuscate its true nature. By establishing a baseline for normal file entropy and flagging statistical outliers (e.g., top 98th percentile), we can uncover novel or custom tools used for audit system manipulation.'
    answer_sources: 'Zeek files.log, Zeek conn.log. Look for data at Network egress points, DMZ, connections between workstations and the Linux server environment.'
    range: 'last 90 days'
    queries: 'SEARCH Zeek files.log for executable/script transfers to Linux servers. CALCULATE Shannon entropy for each file. COMPARE entropy to historical baseline. IF entropy is in top 98th percentile, ALERT.'
  - question: 'Can machine learning models identify high-probability malicious file transfers to Linux servers based on network metadata?'
    context: 'This question explores a proactive, predictive approach. A machine learning model can learn the subtle characteristics of malicious file transfers by analyzing numerous features (file type, size, entropy, IP reputation, connection duration, etc.). This allows for the detection of suspicious transfers that might not be caught by signature-based or simple statistical methods, providing a more robust defense against emerging threats.'
    answer_sources: 'Zeek files.log, Zeek conn.log. Look for data at Network egress points, DMZ, connections between workstations and the Linux server environment.'
    range: 'last 90 days'
    queries: 'INPUT features from Zeek files.log and conn.log (MIME type, size, entropy, IP reputation, etc.) into a trained classification model. IF model output score is "high-probability malicious", ALERT.'
  - question: 'Has a command to disable or stop the Linux auditd service been executed from a remote shell client on a Windows host?'
    context: 'This question focuses on detecting direct commands for auditd tampering initiated from Windows systems. By monitoring process creation events for specific command-line strings executed via tools like SSH or PowerShell, we can catch explicit attempts to disable the audit daemon on a remote Linux host. This is a high-fidelity indicator of active defense evasion.'
    answer_sources: 'Windows Event ID 4688. Look for data on Windows management workstations, Jump servers, Domain Controllers, and other systems with remote access tools.'
    range: 'last 90 days'
    queries: 'SEARCH Windows Event ID 4688 for process names (ssh.exe, plink.exe, etc.). PARSE command line for keywords (''systemctl stop auditd'', ''killall auditd'', ''auditctl -e 0'', etc.). IF match, ALERT.'
  - question: 'Has any user executed an unusually rare command via a remote shell client that could be related to system modification?'
    context: 'This question aims to find anomalous administrative behavior that could indicate malicious activity. Adversaries may use legitimate but infrequently used commands to tamper with systems. By baselining normal command usage for each user and flagging statistically rare commands (e.g., top 99th percentile), analysts can investigate unusual actions that might otherwise be missed, such as a user stopping the audit service for the first time.'
    answer_sources: 'Windows Event ID 4688. Look for data on Windows management workstations, Jump servers, Domain Controllers, and other systems with remote access tools.'
    range: 'last 90 days'
    queries: 'FOR each user, SEARCH Windows Event ID 4688 for remote shell commands. CALCULATE historical frequency for each command. IF new command rarity is in 99th percentile, ALERT for review.'
  - question: 'Can we detect anomalous sequences of commands within a remote shell session that indicate defense evasion?'
    context: 'This question leverages the context of an entire session rather than individual commands. An adversary''s actions often follow a logical, malicious sequence (e.g., escalate privileges, then disable security tools). A sequence analysis model (like an LSTM) can learn normal administrative command patterns and flag sessions that deviate, such as one containing privilege escalation immediately followed by a command to stop `auditd`.'
    answer_sources: 'Windows Event ID 4688. Look for data on Windows management workstations, Jump servers, Domain Controllers, and other systems with remote access tools.'
    range: 'last 90 days'
    queries: 'RECONSTRUCT remote command sessions from Windows Event ID 4688. INPUT command sequence into a trained LSTM model. IF model flags sequence as anomalous, ALERT.'
  - question: 'Has a remote login to a critical Linux server been followed by a suspicious stoppage of its network logging traffic?'
    context: 'This question tries to correlate a remote access event with a potential side effect of audit tampering: the cessation of logs. If an adversary logs in and disables the audit or logging service, the flow of syslog data to a central collector will stop. This rule creates a direct link between a new SSH session and a subsequent, unexpected loss of logs from that same server, providing a strong signal of potential tampering.'
    answer_sources: 'Zeek conn.log, Zeek ssh.log. Look for data on Syslog/SIEM collectors, Network core switches monitoring traffic from critical Linux servers, Authentication servers.'
    range: 'last 90 days'
    queries: 'DETECT new SSH session to critical server from Zeek ssh.log. MONITOR Zeek conn.log for syslog traffic from that server''s IP. IF syslog traffic stops for >2 minutes within 5 minutes of the SSH session, ALERT.'
  - question: 'Has the logging volume from a critical Linux server dropped significantly below its established baseline?'
    context: 'This question uses statistical analysis to detect logging outages that could be caused by tampering. By creating a historical baseline of normal log volume for each critical server, we can automatically detect significant, sustained drops (e.g., 3 standard deviations below the mean). Such a deviation is a strong anomaly that warrants investigation, especially when correlated with recent logins or other activity on the server.'
    answer_sources: 'Zeek conn.log, Zeek ssh.log. Look for data on Syslog/SIEM collectors, Network core switches monitoring traffic from critical Linux servers, Authentication servers.'
    range: 'last 90 days'
    queries: 'FOR each critical server, CALCULATE 30-day baseline of logging volume (bytes/min) from Zeek conn.log. IF current volume drops >3 standard deviations below the mean for a sustained period, ALERT.'
  - question: 'Does the current logging volume from a critical server deviate from the volume predicted by a time-series forecasting model?'
    context: 'This question applies advanced forecasting to detect logging anomalies. A time-series model (like ARIMA or Prophet) can learn complex patterns, including seasonality (time of day, day of week), to predict the expected log volume. An alert is triggered when the actual volume falls significantly outside the model''s prediction, indicating a deviation that cannot be explained by normal fluctuations and may be the result of malicious intervention.'
    answer_sources: 'Zeek conn.log, Zeek ssh.log. Look for data on Syslog/SIEM collectors, Network core switches monitoring traffic from critical Linux servers, Authentication servers.'
    range: 'last 90 days'
    queries: 'FOR each critical server, use a time-series model to PREDICT expected log volume. IF actual volume from Zeek conn.log falls below the predicted lower confidence bound, ALERT.'
  - question: 'Has a network file transfer or remote command been used to write to or modify a critical Linux audit configuration file?'
    context: 'This question focuses on detecting direct manipulation of the audit system''s configuration files. Any unauthorized modification of files like `/etc/audit/audit.rules` or `/etc/audit/auditd.conf` is a critical security event. This logic searches network file transfer logs (SMB, FTP) and command-line logs (for SCP/PSCP) for any write operations targeting these specific, sensitive files, triggering a high-priority alert.'
    answer_sources: 'Windows Event ID 4688, Zeek conn.log, Zeek smb_files.log, Zeek ftp.log. Look for data on Windows management workstations, File servers used for staging, Critical Linux servers hosting audit configurations.'
    range: 'last 90 days'
    queries: 'SEARCH Zeek smb_files.log, ftp.log, and Windows Event ID 4688 command lines for write operations to ''audit.rules'', ''auditd.conf'', or ''/etc/audit/rules.d/''. IF unauthorized write is detected, ALERT.'
  - question: 'Has an audit configuration file been modified by an unauthorized user, from an unusual location, or at an abnormal time?'
    context: 'This question aims to identify suspicious modifications by comparing them against a baseline of normal administrative behavior. Legitimate changes to audit files are typically performed by specific users, from specific hosts, and during planned maintenance windows. By profiling this authorized activity, we can flag any modification that deviates from the norm (e.g., by a non-admin account, from an unknown IP), which may indicate a compromised account or insider threat.'
    answer_sources: 'Windows Event ID 4688, Zeek conn.log, Zeek smb_files.log, Zeek ftp.log. Look for data on Windows management workstations, File servers used for staging, Critical Linux servers hosting audit configurations.'
    range: 'last 90 days'
    queries: 'BASELINE authorized users, source hosts, and times for audit config file modifications. MONITOR new modifications. IF modification deviates from baseline (e.g., unauthorized user, unusual source IP), ALERT.'
  - question: 'Can a machine learning model distinguish between legitimate administrative changes and malicious tampering of audit configuration files?'
    context: 'This question proposes a sophisticated method for validating changes to critical configuration files. A classification model can be trained on a variety of features (user role, source IP, time of day, relation to a change ticket, change size) to learn the difference between benign and malicious modifications. This allows the system to automatically score the risk of each change and alert on those that are characteristic of adversarial behavior.'
    answer_sources: 'Windows Event ID 4688, Zeek conn.log, Zeek smb_files.log, Zeek ftp.log. Look for data on Windows management workstations, File servers used for staging, Critical Linux servers hosting audit configurations.'
    range: 'last 90 days'
    queries: 'INPUT features of file modification (user role, source, time, change ticket correlation) into a trained classification model. IF model score is high-risk, ALERT.'
  - question: 'Has a command been executed on a Linux host to directly stop, disable, kill, or reconfigure the auditd service?'
    context: 'This question seeks to find direct, unambiguous evidence of auditd tampering via command-line execution. By monitoring for specific command patterns (e.g., `systemctl stop auditd`, `killall auditd`, `auditctl -e 0`, `auditctl -D`) in command logs, we can immediately detect and alert on attempts to disable the Linux audit system. This is a high-fidelity indicator of malicious activity.'
    answer_sources: 'Zeek command.log. Look for data on Critical Linux servers (e.g., web servers, database servers, authentication servers), Linux administrator workstations.'
    range: 'last 90 days'
    queries: 'SEARCH Zeek command.log for commands matching regex patterns like `/(systemctl|service)\\s+(stop|disable)\\s+auditd/`, `/kill(all)?\\s+auditd/`, or `/auditctl\\s+(-e\\s+0|-D)/`. IF match, ALERT.'
  - question: 'Has a statistically rare administrative command related to managing the auditd service been executed on a Linux host?'
    context: 'This question aims to detect unusual administrative actions that might be malicious. While a command like `service auditd stop` might be legitimate, its execution could be highly unusual for a specific host or the environment in general. By baselining command frequencies and alerting on rare administrative commands (e.g., in the 99th percentile of rarity), analysts can focus on out-of-the-ordinary events that may signal an attack.'
    answer_sources: 'Zeek command.log. Look for data on Critical Linux servers (e.g., web servers, database servers, authentication servers), Linux administrator workstations.'
    range: 'last 90 days'
    queries: 'FOR each host, BASELINE frequency of administrative commands from Zeek command.log. IF an auditd-related command is executed and its frequency is in the 99th percentile of rarity for that host, ALERT.'
  - question: 'Can an analysis of command sequences in shell history identify patterns indicative of auditd tampering?'
    context: 'This question focuses on understanding the adversary''s workflow by analyzing the sequence of commands. An NLP or sequence model can be trained to recognize normal administrative patterns and flag anomalous sequences. For example, a sequence involving downloading a tool, changing its permissions, and then using it to disable `auditd` (`wget ...`, `chmod +x ...`, `./tool --disable-auditd`) is a strong indicator of malicious intent that can be detected by such a model.'
    answer_sources: 'Zeek command.log. Look for data on Critical Linux servers (e.g., web servers, database servers, authentication servers), Linux administrator workstations.'
    range: 'last 90 days'
    queries: 'INPUT command sequences from Zeek command.log into a trained NLP/sequence model. IF model flags a sequence as anomalous (e.g., download -> chmod -> execute -> disable auditd), ALERT.'