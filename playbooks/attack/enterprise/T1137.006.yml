name: T1137.006: Add-ins
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is maintaining persistence using malicious Office add-ins. It focuses on detecting suspicious add-in file creation or loading (e.g., matching known IOCs, having high-entropy names, being unsigned, or loading from non-standard paths), unusual child processes spawned by Office applications (e.g., command shells, scripting interpreters), suspicious outbound network connections indicative of C2 communication, and subsequent writes to other system persistence locations like Run keys or Startup folders.
type: technique
related:
  - TA0003: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a known malicious Office add-in been installed or configured to load?
    context: This question aims to detect persistence attempts where an adversary uses an Office add-in whose file hash or registry entry is a known Indicator of Compromise (IOC). Matching against a threat intelligence feed allows for high-confidence detection of previously identified malware.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Windows Event ID 4663
      - Windows Event ID 4657
      - User endpoint workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers where Office is installed. Specifically, user profile directories (%APPDATA%) and system-wide add-in registry hives (HKLM and HKCU).
    range: Last 90 days
    queries:
      - pseudocode: SEARCH file creation events (Sysmon EID 11) in add-in paths AND registry set events (Sysmon EID 13) for add-in keys. JOIN file hash and registry value with threat intelligence feed. ALERT on match.
  - question: Has a new Office add-in file been created with an unusually complex or randomized name?
    context: Adversaries may use algorithmically generated or obfuscated filenames to evade simple signature-based detections. High Shannon entropy in a filename can indicate this type of evasion. This question helps identify suspicious add-in files that warrant further inspection, even if they are not yet known IOCs.
    answer_sources:
      - Windows Sysmon Event ID 11
      - User endpoint workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers where Office is installed. Specifically, user profile directories (%APPDATA%) and system-wide add-in locations.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH file creation events (Sysmon EID 11) in add-in paths. CALCULATE Shannon entropy for each filename. ALERT on entropy score > 95th percentile of baseline.
  - question: Does a newly created Office add-in file exhibit characteristics of malware based on a machine learning model?
    context: This question leverages a machine learning classifier (Random Forest) to proactively identify malicious add-ins based on a combination of features like file size, entropy, and internal strings. This approach can detect novel or zero-day threats that may not be caught by IOCs or simple heuristics.
    answer_sources:
      - Windows Sysmon Event ID 11
      - User endpoint workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers where Office is installed.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH file creation events (Sysmon EID 11) in add-in paths. EXTRACT features from file (size, entropy, PE headers, etc.). SCORE file with Random Forest model. ALERT if malicious confidence > 0.9.
  - question: Has an Office application loaded an add-in that is unsigned or signed by an untrusted publisher?
    context: Legitimate software, including Office add-ins, is typically digitally signed by a trusted publisher. An unsigned add-in or one signed by an unknown or untrusted entity is highly suspicious and a common characteristic of malware. This question helps enforce code signing policies as a security control.
    answer_sources:
      - Windows Sysmon Event ID 7
      - Windows Sysmon Event ID 13
      - Windows Event ID 4657
      - Endpoint process and image load logs, focusing on user-writable locations like %TEMP%, %APPDATA%, and Downloads folders. Endpoint code signing certificate validation logs and events.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH image load events (Sysmon EID 7) for Office processes. FILTER for add-in file types. ALERT if SignatureStatus is 'Unsigned' OR Signature is NOT in trusted publisher allow-list.
  - question: Is an Office application loading an add-in from an uncommon or suspicious directory?
    context: Adversaries often place malicious add-ins in non-standard locations, such as temporary directories, user download folders, or network shares, to evade detection. Legitimate add-ins are typically loaded from predictable, standard paths. Identifying loads from rare directories helps uncover these attempts.
    answer_sources:
      - Windows Sysmon Event ID 7
      - Endpoint process and image load logs, focusing on user-writable locations like %TEMP%, %APPDATA%, and Downloads folders.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH image load events (Sysmon EID 7) for add-ins. AGGREGATE parent directory paths. CALCULATE rarity score for each path. ALERT on paths in top 5% rarity.
  - question: Does the file path of a loaded add-in deviate significantly from established normal behavior?
    context: This question uses an anomaly detection model (Isolation Forest) to identify add-in load paths that are statistical outliers compared to a baseline of legitimate activity. This is effective for finding novel malicious placements without relying on pre-defined lists of 'bad' locations.
    answer_sources:
      - Windows Sysmon Event ID 7
      - Endpoint process and image load logs.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH image load events (Sysmon EID 7) for add-ins. SCORE file path with Isolation Forest model. ALERT on significant anomalies.
  - question: Has an Office application spawned a suspicious child process like a command shell or scripting interpreter?
    context: A common post-exploitation step for a malicious add-in is to spawn a process like cmd.exe or powershell.exe to execute further commands. This behavior is highly uncharacteristic of normal Office application usage and is a strong indicator of compromise.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Process execution logs on all user endpoint workstations and servers running Microsoft Office applications.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH process creation events (Sysmon EID 1). FILTER for Office parent processes (winword.exe, excel.exe, etc.). ALERT if child process is in high-risk list (cmd.exe, powershell.exe, wscript.exe, etc.).
  - question: Did an Office application execute a child process with unusual or anomalous command-line arguments?
    context: Even when a legitimate child process is spawned, adversaries may use obfuscated or unusually long command-line arguments to execute malicious code. This question aims to detect these deviations from normal command-line patterns by comparing new commands against a historical baseline using string distance metrics.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Process execution logs on all user endpoint workstations and servers running Microsoft Office applications.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH process creation events (Sysmon EID 1) from Office parents. CALCULATE Levenshtein distance of command line against baseline for that parent-child pair. ALERT if distance is > 2 standard deviations from mean.
  - question: Is the process ancestry chain leading to or from an Office application anomalous?
    context: Malicious activity can create unusual process trees (e.g., outlook.exe -> winword.exe -> powershell.exe). This question uses a machine learning model (autoencoder) to learn what normal process sequences look like and flag any chain that has a high reconstruction error, indicating a deviation from the learned norm.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Process execution logs on all user endpoint workstations and servers running Microsoft Office applications.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH process creation events (Sysmon EID 1). CONSTRUCT process ancestry chains. FEED chain to autoencoder model. ALERT on high reconstruction error.
  - question: Has an Office application or its child process connected to a known malicious IP address or domain?
    context: A primary goal of a malicious add-in is often to establish a command and control (C2) channel. This question seeks to identify outbound network connections from an Office process tree to destinations that are present on threat intelligence blocklists, such as known C2 servers or newly registered domains.
    answer_sources:
      - Windows Sysmon Event ID 3
      - Windows Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points (firewalls, proxies), DNS server logs, and endpoint process and network connection logs.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH network connections (Sysmon EID 3) from Office process tree. ENRICH destination IP/domain with threat intelligence. ALERT on match to known C2 or recently registered domain.
  - question: Is a process originating from an Office application exhibiting periodic, 'heartbeat'-like network beaconing?
    context: C2 channels often use regular, automated check-ins or 'heartbeats.' This question analyzes the timing between connections to the same destination. A very low standard deviation in the time intervals is a strong indicator of automated, non-human communication characteristic of malware beaconing.
    answer_sources:
      - Zeek conn.log
      - Network egress points (firewalls, proxies), DNS server logs, and endpoint process and network connection logs.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH network connection logs (Zeek conn.log). GROUP by host and destination. CALCULATE standard deviation of time deltas between connections. ALERT on very low standard deviation.
  - question: Can a time series analysis model detect anomalous, periodic network traffic originating from an Office process?
    context: This question applies a more advanced statistical model (like Seasonal-Hybrid ESD) to network traffic time series data to detect periodic patterns that might be missed by simple standard deviation checks. It is particularly effective at finding beaconing behavior that may have some jitter or is part of a noisier traffic pattern.
    answer_sources:
      - Zeek conn.log
      - Network egress points (firewalls, proxies), DNS server logs, and endpoint process and network connection logs.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH network connection logs (Zeek conn.log). CREATE time series for each host. APPLY time series anomaly detection model. ALERT on detection of periodic beaconing from Office-related process.
  - question: Has an Office application or its child process attempted to modify a known system persistence location?
    context: After initial execution via an add-in, an adversary may attempt to establish a more durable form of persistence by writing to locations like the 'Run' registry keys or the 'Startup' folder. This question directly monitors these critical locations for modifications originating from the Office process tree.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Windows Sysmon Event ID 1
      - Endpoint file systems and registry hives, specifically focusing on known persistence locations such as `HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`, `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce`, and user/system Startup folders.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH file write (EID 11) and registry set (EID 13) events. FILTER for events originating from Office process tree. ALERT if target path is a known persistence location.
  - question: Did an Office application write to a file path or registry key that is statistically rare across the enterprise?
    context: While adversaries may use known persistence locations, they might also use obscure or novel ones. This question uses a frequency analysis model (like IDF) to identify write operations to locations that are uncommon across the entire organization, which could indicate an attempt to hide a persistence mechanism in an unusual place.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Endpoint file systems and registry hives, specifically focusing on known persistence locations.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH file write (EID 11) and registry set (EID 13) from Office process tree. CALCULATE rarity score (IDF) for each target path. ALERT on paths in 99th percentile of rarity.
  - question: Does the sequence of system activities following an Office application launch represent an anomalous pattern?
    context: This question uses a clustering algorithm (DBSCAN) to group sessions of activity (file writes, process creations, etc.) that occur shortly after an Office application starts. By baselining normal activity clusters, the model can identify outlier sessions (noise points) that represent an anomalous sequence of events, potentially indicating malicious behavior from an add-in.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Windows Sysmon Event ID 1
      - Endpoint file systems and registry hives.
    range: Last 90 days
    queries:
      - pseudocode: SEARCH system events within 5 minutes of an Office app launch. CLUSTER event sessions using DBSCAN. ALERT on any session classified as noise/outlier.