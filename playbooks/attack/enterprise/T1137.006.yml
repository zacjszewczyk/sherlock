name: T1137.006: Add-ins
id: c3a4b5d6-e7f8-4a9b-8c1d-2e3f4a5b6c7d
description: This playbook focuses on detecting adversaries maintaining persistence through malicious Microsoft Office add-ins. It covers techniques such as the creation of suspicious add-in files (e.g., .wll, .xll) or registry keys, loading of unsigned or untrusted add-in libraries from non-standard paths, Office applications spawning unusual child processes (e.g., command shells, scripting interpreters), outbound network connections from Office processes to suspicious destinations, and writes to known persistence locations (e.g., Run keys, Startup folders) following an Office application launch.
type: technique
related:
  - TA0003: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious Office add-in file being created or registered on the system?
    context: This question aims to detect the presence of malicious Office add-ins by cross-referencing newly created or registered add-in files against a threat intelligence feed of known Indicators of Compromise (IOCs). A match indicates a high-confidence threat where an adversary is attempting to establish persistence using a known malicious tool. The detection focuses on specific file creation events (e.g., .wll, .xll) in standard add-in directories and modifications to registry keys responsible for loading add-ins.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Windows Event ID 4663
      - Windows Event ID 4657
      - User endpoint workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers where Office is installed. Specifically, user profile directories (%APPDATA%) and system-wide add-in registry hives (HKLM and HKCU).
    range: Last 90 days
    queries:
      - pseudocode: Search for file creation events (Sysmon EID 11) in Office add-in directories OR registry value set events (Sysmon EID 13) for Office add-in load points. Compare file hash and registry value against known IOCs. Alert on match.
  - question: Is a newly created Office add-in file using an obfuscated or algorithmically generated name to evade detection?
    context: Adversaries may use randomly generated filenames to avoid simple signature-based detection. This question focuses on identifying such files by analyzing the Shannon entropy of their filenames. A high entropy score, compared to a baseline of legitimate add-in names, suggests the name is not human-readable and may be algorithmically generated, a common obfuscation technique.
    answer_sources:
      - Windows Sysmon Event ID 11
      - User endpoint workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers where Office is installed. Specifically, user profile directories (%APPDATA%\Microsoft\AddIns, %APPDATA%\Microsoft\Word\STARTUP).
    range: Last 90 days
    queries:
      - pseudocode: For each file creation event (Sysmon EID 11) in add-in directories, calculate Shannon entropy of the filename. Compare score against a pre-established baseline. Flag files with scores in the 95th percentile or higher.
  - question: Does a newly created Office add-in file exhibit characteristics of malware based on a machine learning model?
    context: This question uses a machine learning approach (Random Forest classifier) to proactively identify malicious add-ins that may not be present in existing threat intelligence. By training a model on features like file size, entropy, and PE header data from known good and bad files, it can score new add-ins based on their likelihood of being malicious. A high confidence score from the model indicates a probable threat that requires immediate investigation.
    answer_sources:
      - Windows Sysmon Event ID 11
      - User endpoint workstations, Virtual Desktop Infrastructure (VDI) instances, and application servers where Office is installed. Specifically, user profile directories (%APPDATA%) and system-wide add-in registry hives (HKLM and HKCU).
    range: Last 90 days
    queries:
      - pseudocode: On file creation events (Sysmon EID 11), extract features (size, entropy, PE headers). Input features into a trained Random Forest model. Trigger investigation for files with a malicious score > 0.9.
  - question: Is an Office application loading an unsigned or untrusted add-in?
    context: Legitimate software, including Office add-ins, is typically digitally signed by a trusted publisher. This question aims to detect malicious add-ins by checking their code signing status. An add-in that is unsigned or signed by a publisher not on an approved allow-list is highly suspicious and could indicate an adversary is loading a custom or compromised tool for persistence.
    answer_sources:
      - Windows Sysmon Event ID 7
      - Windows Sysmon Event ID 13
      - Windows Event ID 4657
      - Endpoint process and image load logs, focusing on user-writable locations like %TEMP%, %APPDATA%, and Downloads folders. Endpoint code signing certificate validation logs and events.
    range: Last 90 days
    queries:
      - pseudocode: On image load events (Sysmon EID 7) for Office add-in file types into Office processes, check the signature status. Alert if signature is 'Unsigned' or the publisher is not on the allow-list.
  - question: Is an Office add-in being loaded from an uncommon or rare file path?
    context: Adversaries often place malicious payloads in non-standard locations, such as temporary directories or user download folders, to evade detection. This question identifies suspicious add-in loads by calculating the rarity of the file's location across the enterprise. An add-in loading from a directory that is rarely used for this purpose is an anomaly that warrants investigation.
    answer_sources:
      - Windows Sysmon Event ID 7
      - Endpoint process and image load logs, focusing on user-writable locations like %TEMP%, %APPDATA%, and Downloads folders.
    range: Last 90 days
    queries:
      - pseudocode: For each add-in image load event (Sysmon EID 7), aggregate the parent directory paths. Calculate a rarity score for each path. Flag add-ins loaded from paths in the top 5% rarity score.
  - question: Is an Office add-in's file path anomalous when compared to a historical baseline of legitimate paths?
    context: This question employs an anomaly detection model (Isolation Forest) to identify add-ins loading from unusual locations. The model is trained exclusively on legitimate, historical add-in file paths. Any new add-in that loads from a path the model flags as a significant outlier is considered anomalous and potentially malicious, as it deviates from established normal behavior.
    answer_sources:
      - Windows Sysmon Event ID 7
      - Endpoint process and image load logs, focusing on user-writable locations like %TEMP%, %APPDATA%, and Downloads folders.
    range: Last 90 days
    queries:
      - pseudocode: Score new add-in load paths (from Sysmon EID 7) using a trained Isolation Forest model. Generate a medium-severity alert for paths identified as significant anomalies.
  - question: Is an Office application spawning a suspicious child process like a command shell or scripting interpreter?
    context: A common post-exploitation technique for a malicious add-in is to execute commands or scripts. This question seeks to detect this behavior by monitoring for Office applications (e.g., Word, Excel) spawning high-risk child processes such as cmd.exe, powershell.exe, or other Living-Off-the-Land Binaries (LOLBins). Such activity is highly uncharacteristic of normal user behavior and is a strong indicator of compromise.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Process execution logs on all user endpoint workstations and servers running Microsoft Office applications.
    range: Last 90 days
    queries:
      - pseudocode: Monitor for process creation events (Sysmon EID 1) where a known Office process is the parent and the child process is on a high-risk list (e.g., cmd.exe, powershell.exe). Alert on match.
  - question: Are the command-line arguments used by a child process of an Office application significantly different from historical norms?
    context: While some child processes spawned by Office applications can be legitimate, adversaries often use unusual or obfuscated command-line arguments. This question aims to detect such anomalies by comparing the command line of a new process to a historical baseline for that specific parent-child pair using a string distance metric (Levenshtein distance). A significant deviation suggests the command is abnormal and potentially malicious.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Process execution logs on all user endpoint workstations and servers running Microsoft Office applications.
    range: Last 90 days
    queries:
      - pseudocode: For new process creations from Office parents, calculate Levenshtein distance of command line against historical baseline. Flag command lines with a distance score > 2 standard deviations from the mean.
  - question: Does the process execution chain originating from an Office application appear anomalous based on a machine learning model?
    context: Malicious activity can often be identified by an unusual sequence of process creations. This question uses a sequence-to-sequence autoencoder model trained on legitimate process ancestry chains. By feeding real-time process creation events into the model, it can detect anomalous chains (e.g., explorer.exe -> winword.exe -> rundll32.exe) that have a high reconstruction error, indicating a deviation from normal behavior that could be caused by a malicious add-in.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Process execution logs on all user endpoint workstations and servers running Microsoft Office applications.
    range: Last 90 days
    queries:
      - pseudocode: Feed real-time process creation chains (Sysmon EID 1) into a trained autoencoder model. Flag process chains with a high reconstruction error as anomalous.
  - question: Is an Office application or its child process making a network connection to a known malicious or newly registered domain?
    context: Malicious add-ins frequently establish command and control (C2) channels. This question seeks to identify these connections by correlating process and network events. It checks if an Office application or its child process is connecting to a destination IP or domain that is listed in threat intelligence feeds or has been registered very recently, both of which are strong indicators of C2 activity.
    answer_sources:
      - Windows Sysmon Event ID 3
      - Windows Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points (firewalls, proxies), DNS server logs, and endpoint process and network connection logs.
    range: Last 90 days
    queries:
      - pseudocode: Join process events (Sysmon EID 1) with network events (Sysmon EID 3). Enrich destination IP/domain with threat intelligence. Alert if connection from Office process tree goes to a known malicious or recently registered domain.
  - question: Is a process associated with an Office application exhibiting periodic, 'heartbeat'-like network beaconing?
    context: Automated C2 communication often manifests as regular, periodic network connections or 'beacons'. This question aims to detect this pattern by analyzing the time intervals between successive connections from a host to the same destination. A very low standard deviation in these time deltas suggests automated, machine-like behavior, which is characteristic of C2 beaconing and not typical user activity.
    answer_sources:
      - Zeek conn.log
      - Network egress points (firewalls, proxies), DNS server logs, and endpoint process and network connection logs.
    range: Last 90 days
    queries:
      - pseudocode: Using Zeek conn.log, calculate the standard deviation of time deltas between connections from a source to a single destination. Alert on a very low standard deviation (e.g., < 1s for 10+ connections).
  - question: Does network traffic from a host show signs of C2 beaconing based on time-series anomaly detection?
    context: This question applies a more advanced statistical model to detect C2 beaconing. By treating network connection events as a time series, a model like Seasonal-Hybrid ESD can identify regularly spaced, periodic patterns that might be missed by simpler methods. A strong, consistent periodic signal with low data payloads, originating from a process tied to an Office application, is a high-fidelity indicator of a C2 channel.
    answer_sources:
      - Zeek conn.log
      - Network egress points (firewalls, proxies), DNS server logs, and endpoint process and network connection logs.
    range: Last 90 days
    queries:
      - pseudocode: Apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to a host's network connection logs. Flag regularly spaced, periodic connections with low data volume as potential beaconing.
  - question: Is a process launched by an Office application writing to a known persistence location, such as a Run key or Startup folder?
    context: A key objective for an adversary is to ensure their malware survives a reboot. This question looks for evidence of this by monitoring critical persistence locations. If a process originating from an Office application writes a file or registry key to a well-known persistence spot (e.g., Run keys, Startup folder), it is a strong indication that the add-in is attempting to establish persistence.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Windows Sysmon Event ID 1
      - Endpoint file systems and registry hives, specifically focusing on known persistence locations such as HKLM\Software\Microsoft\Windows\CurrentVersion\Run, HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce, and user/system Startup folders.
    range: Last 90 days
    queries:
      - pseudocode: Alert when a process in an Office application's process tree (Sysmon EID 1) writes to a monitored persistence location (file write EID 11, registry set EID 13).
  - question: Is an Office process writing to an unusually rare file path or registry key?
    context: Beyond well-known persistence locations, adversaries may use obscure paths to hide. This question aims to find these by baselining all file and registry write locations for Office processes across the enterprise. Using a rarity model like IDF, it flags writes to locations that are extremely uncommon, which could represent a novel or hidden persistence technique.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Endpoint file systems and registry hives.
    range: Last 90 days
    queries:
      - pseudocode: Baseline all file/registry write paths from Office processes. Use an IDF model to score path rarity. Alert on writes to paths with a score in the 99th percentile.
  - question: Does the sequence of system events following an Office application launch appear anomalous?
    context: This question attempts to identify malicious activity by looking at the overall behavior pattern shortly after an Office application starts. By collecting events (file writes, registry sets, process creations) within a short window and using a clustering algorithm like DBSCAN, it can identify sessions of activity. Sessions that don't fit into a known 'benign' cluster are flagged as anomalous, potentially representing a malicious add-in executing its payload.
    answer_sources:
      - Windows Sysmon Event ID 11
      - Windows Sysmon Event ID 13
      - Windows Sysmon Event ID 1
      - Endpoint file systems and registry hives, specifically focusing on known persistence locations.
    range: Last 90 days
    queries:
      - pseudocode: Within 5 minutes of an Office app launch, collect system events. Use DBSCAN to cluster activity sessions. Flag sessions labeled as noise/anomalies for investigation.