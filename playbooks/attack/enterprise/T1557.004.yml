name: T1557.004: Evil Twin
id: f8d8f8d8-f8d8-4f8d-8f8d-f8d8f8d8f8d8
description: This playbook focuses on detecting Evil Twin attacks (T1557.004), where an adversary sets up a malicious Wi-Fi access point that mimics a legitimate one to intercept traffic, steal credentials, and collect data. The investigation involves analyzing Wi-Fi connection logs, network traffic (HTTP, DNS, TLS), and endpoint events to identify connections to unauthorized or suspicious access points. Key indicators include connections to BSSIDs or captive portals on threat intelligence blocklists, use of spoofed corporate SSIDs, DNS responses resolving to private IPs, invalid SSL certificates on captive portals, and subsequent signs of data exfiltration or internal network scanning from the compromised device.
type: technique
related:
- TA0006: Credential Access
- TA0009: Collection
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are corporate endpoints connecting to known malicious BSSIDs or captive portals identified by SSL certificate thumbprints from threat intelligence?
  context: Adversaries often reuse infrastructure. By comparing observed BSSIDs from Wi-Fi connection logs and SSL certificate thumbprints from captive portal interactions against a threat intelligence feed of known malicious indicators, we can quickly identify connections to Evil Twin access points.
  answer_sources:
  - Zeek wifi.log
  - Zeek ssl.log
  - Windows Event ID 8001
  - Corporate endpoints with wireless capabilities, wireless access point controllers, and network sensors monitoring egress traffic.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH (wifi_logs OR ssl_logs OR windows_events) for connection_events
      JOIN connection_events with threat_intel_feed ON (bssid OR ssl_thumbprint)
      RETURN matched_connections
- question: Has a corporate endpoint connected to a BSSID that is historically rare for a given corporate SSID?
  context: Legitimate corporate wireless networks have a relatively stable set of BSSIDs. A malicious Evil Twin access point will introduce a new, transient BSSID. By baselining the frequency of BSSIDs associated with each corporate SSID, we can detect these rare and potentially malicious connections.
  answer_sources:
  - Zeek wifi.log
  - Zeek ssl.log
  - Windows Event ID 8001
  - Corporate endpoints with wireless capabilities, wireless access point controllers, and network sensors monitoring egress traffic.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE frequency of each bssid per corporate_ssid over last 90 days
      SEARCH new wifi_connections
      IF connection_bssid_frequency < threshold (e.g., 0.1%) THEN ALERT
- question: Can we classify a new Wi-Fi connection as malicious using a machine learning model based on its connection characteristics?
  context: An Evil Twin access point may exhibit subtle characteristics that differ from legitimate ones. A supervised machine learning model can learn these patterns from features like the BSSID's vendor, the Wi-Fi channel, signal strength, and captive portal presence to score new connections and identify likely attacks in real-time.
  answer_sources:
  - Zeek wifi.log
  - Zeek ssl.log
  - Windows Event ID 8001
  - Corporate endpoints with wireless capabilities, wireless access point controllers, and network sensors monitoring egress traffic.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new wifi_connection:
        EXTRACT features (bssid_oui, channel, signal, duration, etc.)
        INPUT features into trained_classification_model
        IF model_score > malicious_threshold THEN ALERT
- question: Does network traffic associated with a captive portal contain artifacts (headers, HTML content) of known Evil Twin frameworks?
  context: Adversary tools like WiFi Pineapple or Evilginx often leave specific fingerprints in the HTTP traffic they generate for captive portals. Searching for these known artifacts, such as unique server headers or JavaScript file names, in network logs can directly identify the use of these frameworks.
  answer_sources:
  - Zeek http.log
  - Zeek wifi.log
  - Zeek files.log
  - Network traffic sensors at egress points, endpoint EDR agents with network visibility, and DNS resolvers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH http_logs and file_logs for traffic from captive_portals
      MATCH content against regex_patterns for known_evil_twin_frameworks
      RETURN matched_sessions
- question: Do captive portal URIs exhibit unusually high complexity or randomness, suggesting the use of automated attack tools?
  context: Automated Evil Twin frameworks may generate complex, randomized URI paths and query parameters for session tracking or evasion. Calculating the Shannon entropy of these URIs can quantify this complexity. A URI with an entropy score significantly higher than the baseline for legitimate portals is suspicious.
  answer_sources:
  - Zeek http.log
  - Zeek wifi.log
  - Zeek files.log
  - Network traffic sensors at egress points, endpoint EDR agents with network visibility, and DNS resolvers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE Shannon entropy of URIs for legitimate captive_portals
      FOR each new captive_portal_uri:
        CALCULATE shannon_entropy
        IF entropy > baseline_95th_percentile THEN ALERT
- question: Can the text content of a captive portal login page be classified as anomalous or malicious using topic modeling?
  context: Legitimate captive portals typically have consistent branding and text. An Evil Twin portal might have subtly different language or be part of a group of malicious pages with similar textual features. NLP techniques like topic modeling can cluster pages by content, flagging pages that fall into outlier or known-suspicious topics.
  answer_sources:
  - Zeek http.log
  - Zeek wifi.log
  - Zeek files.log
  - Network traffic sensors at egress points, endpoint EDR agents with network visibility, and DNS resolvers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      EXTRACT text from all captive_portal_pages
      APPLY LDA topic modeling to cluster pages
      REVIEW pages in outlier topics or suspicious_topics
      IF page is in a suspicious topic THEN ALERT
- question: Has a corporate device connected to an access point that is broadcasting a corporate SSID but has a BSSID not on the authorized inventory list?
  context: A core component of an Evil Twin attack is spoofing a legitimate corporate SSID. By maintaining a definitive, authoritative inventory of all approved BSSIDs for each corporate SSID, any connection to a BSSID not on this list is an immediate and high-fidelity indicator of a rogue access point.
  answer_sources:
  - Zeek wifi.log
  - Windows Event ID 8001
  - Wireless LAN Controller Logs
  - Wireless LAN Controllers, enterprise asset management database, endpoint wireless logs, and physical security access logs for location correlation.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH wifi_connection_logs for connections to corporate_ssids
      LOOKUP connection_bssid in authoritative_bssid_inventory
      IF bssid NOT FOUND in inventory THEN ALERT
- question: Is a new, un-baselined BSSID broadcasting a corporate SSID being used by multiple devices at a specific physical location?
  context: While a single device connecting to a new BSSID could be a misconfiguration, multiple devices connecting to the same new, unauthorized BSSID at one location strongly suggests a physically proximate Evil Twin AP. This method detects rogue APs without a pre-built inventory by baselining what's normal for a location.
  answer_sources:
  - Zeek wifi.log
  - Windows Event ID 8001
  - Wireless LAN Controller Logs
  - Wireless LAN Controllers, enterprise asset management database, endpoint wireless logs, and physical security access logs for location correlation.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR for new BSSID-corporate_SSID pairs per location
      COUNT unique devices connecting to new_pair
      IF device_count > threshold (e.g., 1) THEN ALERT
- question: Can we detect a cluster of devices making anomalous connections to a previously unseen BSSID that is spoofing a corporate SSID?
  context: An Evil Twin attack will manifest as a small group of physically close devices all connecting to the same new, malicious BSSID. A clustering algorithm like DBSCAN can analyze connection data (BSSID, SSID, client MAC) and identify these small, dense clusters as anomalies against the backdrop of normal Wi-Fi activity.
  answer_sources:
  - Zeek wifi.log
  - Windows Event ID 8001
  - Wireless LAN Controller Logs
  - Wireless LAN Controllers, enterprise asset management database, endpoint wireless logs, and physical security access logs for location correlation.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT connection_data (bssid, ssid, client_mac) into DBSCAN model
      IDENTIFY small, dense clusters
      IF cluster involves a new_bssid and corporate_ssid THEN ALERT
- question: Did a device, shortly after connecting to a new Wi-Fi network, receive a DNS response for an external corporate domain that resolved to a private (RFC1918) IP address?
  context: A common Evil Twin technique is DNS hijacking, where the malicious AP resolves legitimate domains (like a corporate VPN or login portal) to an IP address it controls on the local network. This rule detects this specific redirection by looking for non-routable IP responses for known external domains immediately after a new Wi-Fi connection.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Zeek wifi.log
  - Centralized DNS servers, network sensors capturing DNS traffic, and endpoint DNS client logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRIGGER on new_wifi_connection event
      MONITOR subsequent dns_logs for 5 minutes
      IF dns_query for external_corporate_domain resolves to rfc1918_ip THEN ALERT
- question: After connecting to a new network, is a device receiving DNS responses for common domains that resolve to IP addresses outside of its established baseline?
  context: Devices typically receive consistent sets of IP addresses for the domains they frequently visit. An Evil Twin will provide different IPs to redirect traffic. By baselining the normal IP responses for a user's most accessed domains, we can detect deviations that occur after connecting to a new, potentially malicious network.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Zeek wifi.log
  - Centralized DNS servers, network sensors capturing DNS traffic, and endpoint DNS client logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE typical DNS response IPs for top 50 domains per device
      TRIGGER on new_wifi_connection
      MONITOR for DNS responses with IPs not in baseline for that domain
      IF count_of_deviant_responses > threshold THEN ALERT
- question: Is there a sudden spike in the rate of DNS responses resolving to private IP addresses for a host immediately after it connects to a new Wi-Fi network?
  context: While some private IP resolutions can be normal, a DNS hijacking attack will cause a sudden, anomalous increase in these events as the adversary redirects multiple services. A time-series anomaly detection model can learn the normal rate of these events for a host and flag a sharp spike that is temporally correlated with a new network connection.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Zeek wifi.log
  - Centralized DNS servers, network sensors capturing DNS traffic, and endpoint DNS client logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL time-series of private_ip_dns_resolutions per host
      DETECT sharp spikes in the rate of these events
      CORRELATE spikes with recent new_wifi_connection events
      IF correlation exists THEN ALERT
- question: Has a device interacted with a login portal that is either unencrypted (HTTP) or uses an SSL certificate that is self-signed or has a host mismatch?
  context: Legitimate login portals should always use properly configured HTTPS with a valid certificate. An adversary-controlled captive portal often uses no encryption or a self-signed/invalid certificate. Alerting on these specific SSL validation failures for pages that appear to be login portals is a strong indicator of an Evil Twin.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek wifi.log
  - Zeek x509.log
  - Network egress points, endpoint browsers (via EDR), wireless network sensors, and Certificate Transparency logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH ssl_logs for validation_status IN ('self-signed', 'wrong_host')
      CORRELATE with http_logs where URI contains 'login'
      CORRELATE with wifi_logs for recent connection to non-corporate SSID
      IF all conditions met THEN ALERT
- question: Has the ratio of unencrypted (HTTP) to encrypted (HTTPS) login pages encountered by a device or the entire fleet suddenly increased?
  context: A widespread Evil Twin campaign or a targeted SSL stripping attack would cause a statistically significant increase in the number of login pages served over HTTP instead of HTTPS. Monitoring this ratio over time and alerting on anomalous increases can detect these downgrade attacks.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek wifi.log
  - Zeek x509.log
  - Network egress points, endpoint browsers (via EDR), wireless network sensors, and Certificate Transparency logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE 30-day mean and stddev of (HTTP_logins / HTTPS_logins) ratio
      MONITOR current ratio
      IF current_ratio > (mean + 3 * stddev) THEN ALERT
- question: Can we use a machine learning classifier to predict if a captive portal is malicious based on its network characteristics?
  context: A decision tree can be trained to identify malicious captive portals by learning rules from a combination of features. Simple but powerful features like whether the protocol is HTTP, the SSL validation status, the presence of login keywords in the URI, and whether the BSSID is new can be combined to make a high-confidence prediction.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek wifi.log
  - Zeek x509.log
  - Network egress points, endpoint browsers (via EDR), wireless network sensors, and Certificate Transparency logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new captive_portal_session:
        EXTRACT features (is_http, ssl_status, has_login_keyword, is_new_bssid)
        INPUT features to trained_decision_tree
        IF prediction is 'malicious' with high confidence THEN ALERT
- question: After connecting to a suspicious Wi-Fi network, did a device make an outbound connection to an IP or domain on a C2 or data exfiltration threat intelligence list?
  context: Once an adversary gains access or credentials via an Evil Twin, their next step is often to establish a command and control (C2) channel or exfiltrate data. Checking outbound connections from a device on a suspicious network against high-confidence threat intelligence lists is a direct way to detect this follow-on activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek wifi.log
  - Network security gateways, DNS servers, and integrated threat intelligence platforms.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRIGGER on connection to suspicious_bssid
      MONITOR subsequent outbound conn_logs and dns_logs
      JOIN destination_ip or destination_domain with C2_exfil_threat_intel_list
      IF match found THEN ALERT
- question: Did a device on a suspicious network make a TLS connection using a JA3 hash that is extremely rare across the enterprise?
  context: Standard applications (browsers, system tools) use common TLS libraries, resulting in a limited set of JA3 hashes. Custom malware used for C2 often has a unique JA3 hash. An extremely rare or unique JA3 hash from a device on a suspicious network is a strong indicator of a non-standard client, likely malware.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek wifi.log
  - Network security gateways, DNS servers, and integrated threat intelligence platforms.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE frequency of all JA3 hashes across the enterprise
      MONITOR TLS connections from devices on suspicious_networks
      IF connection_JA3_hash is extremely rare (e.g., seen only once) THEN ALERT
- question: Using a graph model, does a device on a suspicious network connect to a destination IP that is an outlier with few or no other connections from the enterprise?
  context: Normal network traffic forms a dense graph of connections between internal devices and popular external services. A C2 server is often a "lonely" node in this graph, connected to by only one or a few compromised hosts. Graph analysis can flag these outlier connections, especially when they originate from a device in a compromised state (i.e., on a suspicious network).
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek wifi.log
  - Network security gateways, DNS servers, and integrated threat intelligence platforms.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL network traffic as a graph (nodes=devices/IPs, edges=connections)
      IDENTIFY destination nodes with very low 'in-degree' (few incoming connections)
      IF a device on a suspicious_network connects to an outlier_node THEN ALERT
- question: Does network traffic from a device on a suspicious network contain patterns associated with data exfiltration tools or techniques?
  context: Data exfiltration often uses specific protocols or patterns. This involves scanning HTTP traffic for POST requests with User-Agent strings of known tools (like Cobalt Strike) and scanning DNS traffic for queries to domains known to be used for DNS tunneling, providing a signature-based method for detecting exfiltration.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek conn.log
  - DNS servers, network traffic sensors at egress points.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH http_logs from suspicious_hosts for POST requests with known_bad_user_agents
      SEARCH dns_logs from suspicious_hosts for queries to known_dns_tunneling_domains
      IF match found THEN ALERT
- question: From a device on a suspicious network, are we observing DNS queries with high-entropy subdomains or HTTP POST requests with atypically large bodies?
  context: These are two common methods of data exfiltration. DNS tunneling encodes data in long, random-looking subdomains (high entropy). Other methods involve hiding data in large HTTP POST requests. By baselining normal behavior for each user, we can flag a sudden occurrence of high-entropy DNS or unusually large POST requests as potential exfiltration.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek conn.log
  - DNS servers, network traffic sensors at egress points.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR devices on suspicious_networks:
        CALCULATE shannon_entropy of DNS query subdomains; IF entropy > 4.0 THEN ALERT
        COMPARE HTTP POST body size to user's historical 99th percentile; IF size > percentile THEN ALERT
- question: After connecting to a suspicious network, does the length or frequency of a host's DNS queries significantly deviate from forecasted normal behavior?
  context: DNS tunneling for data exfiltration alters the normal pattern of DNS traffic, often resulting in longer queries or a higher frequency of queries. A time-series forecasting model (like ARIMA) can predict the expected DNS behavior, and a significant deviation from this prediction can serve as an alert for anomalous activity.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek conn.log
  - DNS servers, network traffic sensors at egress points.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FORECAST expected DNS query length and frequency per host using ARIMA model
      COMPARE observed query length/frequency to forecast
      IF observed value significantly deviates from forecast after a suspicious_connection THEN ALERT
- question: Did a device on a suspicious network transfer files with sensitive MIME types or extensions to a non-corporate destination?
  context: Adversaries often compress sensitive data into archives before exfiltration. This rule creates a simple but effective signature for this behavior by monitoring for outbound file transfers (e.g., ZIP, 7z, PST, KDBX) to untrusted destinations from a device that is already on a suspicious network.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Zeek wifi.log
  - Network egress points, Data Loss Prevention (DLP) systems, file servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH file_logs for outbound transfers from devices on suspicious_networks
      IF file_mime_type IN ('zip', '7z', etc.) OR file_extension IN ('.pst', '.kdbx')
      AND destination is non-corporate THEN ALERT
- question: Did a device on a suspicious network exfiltrate a volume of data that significantly exceeds its historical daily average?
  context: Data exfiltration often involves transferring a much larger volume of data than a user typically sends. By establishing a baseline of normal daily outbound data volume for each user, we can detect anomalous spikes. An outbound transfer that is several standard deviations above the user's average, especially after connecting to a suspicious network, is a strong indicator of exfiltration.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Zeek wifi.log
  - Network egress points, Data Loss Prevention (DLP) systems, file servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE daily mean and stddev of outbound_bytes per user
      MONITOR outbound data volume in 1-hour windows for users on suspicious_networks
      IF volume > (daily_mean + 3 * stddev) THEN ALERT
- question: Can we use a machine learning model to identify anomalous data transfers from a device on a suspicious network?
  context: A one-class SVM is an anomaly detection model that learns a boundary around "normal" data points. We can train it on features of normal data transfers (byte count, protocol, port, time of day). Any new transfer that falls outside this learned boundary after the device joins a suspicious network can be flagged as a potential exfiltration event.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Zeek wifi.log
  - Network egress points, Data Loss Prevention (DLP) systems, file servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN one-class SVM on normal data transfer features per device
      FOR each new transfer from a device on a suspicious_network:
        CLASSIFY the transfer using the trained SVM
        IF classification is 'anomaly' THEN ALERT
- question: Is a device on a suspicious network establishing TLS sessions using weak/outdated protocols (TLSv1.0, SSLv3) or with certificates from an untrusted Certificate Authority?
  context: An adversary performing a Man-in-the-Middle (MitM) attack may force clients to use weak encryption protocols that are easier to break or present their own certificates that are not signed by a trusted CA. Detecting these specific weak configurations in TLS sessions, especially for sensitive domains, is a direct indicator of interception.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek wifi.log
  - Network traffic sensors, Enterprise PKI and trusted CA lists, endpoint EDR agents with network visibility.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH ssl_logs from devices on suspicious_networks
      IF tls_version IN ('TLSv1.0', 'SSLv3')
      OR certificate_issuer NOT IN trusted_ca_list THEN ALERT
- question: For a connection to a high-value domain, is a device on a suspicious network using a TLS cipher or version that is statistically rare for that specific domain?
  context: Connections to a specific service (e.g., office365.com) typically use a consistent, modern set of TLS parameters. A MitM proxy might negotiate a different, less common cipher suite. By baselining the common ciphers and versions for top domains, we can spot deviations that occur only when a device is on a suspicious network.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek wifi.log
  - Network traffic sensors, Enterprise PKI and trusted CA lists, endpoint EDR agents with network visibility.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE frequency of ciphers/versions for top 100 domains
      MONITOR TLS connections from devices on suspicious_networks
      IF cipher or version is rare (<1% freq) for that destination_domain THEN ALERT
- question: Can we identify anomalous TLS sessions from devices on suspicious networks by clustering them based on their technical parameters?
  context: A MitM proxy will create TLS sessions with a unique combination of parameters (cipher, version, certificate details, JA3 hash). By using a clustering algorithm, normal sessions will form large clusters, while the few intercepted sessions will form a small, isolated cluster, making them easy to identify as anomalous.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek wifi.log
  - Network traffic sensors, Enterprise PKI and trusted CA lists, endpoint EDR agents with network visibility.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CLUSTER all TLS sessions based on features (cipher, version, issuer, ja3)
      IDENTIFY small, isolated clusters
      IF a session from a device on a suspicious_network is in an outlier_cluster THEN ALERT
- question: Did a security tool like Zeek generate a network scan notice for a device that recently connected to a suspicious Wi-Fi network?
  context: After gaining a foothold on a device via an Evil Twin, an adversary may scan the local network to find other targets. Network security monitoring tools like Zeek have built-in detectors for this behavior. Correlating these scan alerts with a recent connection to a suspicious network provides strong evidence of post-compromise activity.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Windows Event ID 5156
  - Network taps or SPAN ports monitoring local subnet traffic, endpoint firewalls, and EDR logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH for Zeek scan_notices or high volume of Windows firewall events (EID 5156)
      CORRELATE source_device with recent connection to suspicious_wifi_network
      IF correlation exists THEN ALERT
- question: Is a device attempting to connect to an anomalously high number of distinct IP addresses within its local subnet?
  context: Network scanning is characterized by a single host rapidly attempting to connect to many different hosts. By counting the number of unique destination IPs a device tries to reach in its local subnet within a short time window, we can detect this behavior. An alert is triggered if this count exceeds a high percentile of normal device behavior.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Windows Event ID 5156
  - Network taps or SPAN ports monitoring local subnet traffic, endpoint firewalls, and EDR logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each device, in a 1-minute window:
        COUNT distinct destination_ips in the same /24 subnet
        IF count > 99th_percentile_of_all_devices THEN ALERT
- question: Does a device's local network connection "fan-out" (number of unique local IPs contacted) show a sudden spike after joining a new network?
  context: This method models the normal rate at which a device initiates connections to new local IPs over time. A network scan represents a sharp, sudden deviation from this model's prediction. By applying time-series anomaly detection to the connection fan-out metric, we can pinpoint scanning activity that begins shortly after a device joins a suspicious network.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Windows Event ID 5156
  - Network taps or SPAN ports monitoring local subnet traffic, endpoint firewalls, and EDR logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL time-series of local connection fan-out per device
      DETECT sharp spikes that deviate from the model's prediction
      IF spike occurs after joining a new_network THEN ALERT