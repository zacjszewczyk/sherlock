name: T1583.001: Domains
id: 0c1b4e2a-1f3d-4c5b-8e9a-7f6d5c4b3a21
description: This playbook focuses on detecting whether an adversary is acquiring or using malicious domains to support operations. It covers several detection methods, including matching network traffic against threat intelligence feeds of known malicious domains, identifying typosquatted or visually similar domains designed to deceive users, analyzing newly registered domains with suspicious TLS certificate attributes, detecting Domain Generation Algorithm (DGA) activity through high volumes of NXDOMAIN responses, and identifying beaconing behavior characteristic of Command and Control (C2) communications.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an internal host communicating with a domain known to be malicious based on threat intelligence feeds?
    context: This question aims to identify direct communication with known malicious infrastructure. By continuously ingesting high-confidence threat intelligence feeds, we can create a high-severity alert when an internal host's DNS query or network connection destination matches a known malicious domain. A match provides a strong signal of a potential compromise or malicious activity.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Corporate DNS Resolvers
      - Egress Web Proxies
      - Network Security Monitoring (NSM) Sensors
      - Firewall Egress Logs
    range: last 90 days
    queries:
      - pseudocode: SEARCH (Zeek dns.log OR Zeek conn.log) WHERE (domain OR resolved_ip_domain) IN threat_intelligence_feed
  - question: Is any internal host communicating with an unusual number of unique malicious domains in a short time frame?
    context: This question seeks to differentiate between an isolated, accidental click and a more deliberate, active compromise. By grouping events by source IP over a short window (e.g., 5 minutes) and counting the number of unique malicious domains contacted, we can identify hosts that are likely compromised and are actively communicating with multiple C2 servers or malware distribution points. Alerting on a count that exceeds a statistical threshold helps prioritize more significant threats.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Corporate DNS Resolvers
      - Egress Web Proxies
      - Network Security Monitoring (NSM) Sensors
      - Firewall Egress Logs
    range: last 90 days
    queries:
      - pseudocode: FROM (Zeek dns.log OR Zeek conn.log) WHERE (domain OR resolved_ip_domain) IN threat_intelligence_feed | GROUP BY source_ip, time_window=5m | COUNT unique_malicious_domains | ALERT IF count > threshold
  - question: Has there been an anomalous, enterprise-wide spike in communications with known malicious domains?
    context: This question focuses on detecting large-scale campaigns or widespread internal compromises. By applying a time-series anomaly detection model to the overall volume of threat intelligence matches per hour, we can identify sudden spikes that deviate significantly from the normal baseline. A spike exceeding a learned threshold (e.g., 3 standard deviations above the rolling average) indicates a potentially significant event requiring immediate, broad investigation.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Corporate DNS Resolvers
      - Egress Web Proxies
      - Network Security Monitoring (NSM) Sensors
      - Firewall Egress Logs
    range: last 90 days
    queries:
      - pseudocode: APPLY time_series_anomaly_model TO (COUNT of threat_intel_matches per hour) | ALERT IF count > (rolling_24h_avg + 3 * rolling_24h_std_dev)
  - question: Is an internal host communicating with a domain that is a known or pre-calculated typosquatted/homograph variant of our corporate domains?
    context: This question aims to detect credential phishing or malware delivery attempts using domains that visually mimic legitimate ones. By pre-generating a list of potential typosquatted and homograph domains and alerting on an exact match from DNS logs, we can quickly identify and respond to these targeted attacks.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Corporate DNS Resolvers
      - Mail Gateway Logs
      - Egress Web Proxies
      - Endpoint DNS Cache
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek dns.log WHERE query_domain IN precomputed_typosquat_list
  - question: Are internal hosts resolving domains that are typographically similar to our corporate domains but also contain a high percentage of non-alphanumeric characters?
    context: This question provides a dynamic method for identifying potential typosquatted domains that may not be on a pre-computed list. By calculating the Levenshtein distance to legitimate domains, we can find close matches. Further filtering by the percentage of non-alphanumeric characters helps to isolate domains that are algorithmically generated or specifically crafted to be deceptive, warranting manual review.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Corporate DNS Resolvers
      - Mail Gateway Logs
      - Egress Web Proxies
      - Endpoint DNS Cache
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - pseudocode: FOR each domain in Zeek dns.log | CALCULATE levenshtein_distance to corporate_domains | FILTER distance between 1 and 2 | CALCULATE non_alnum_char_percentage | ALERT IF percentage > threshold
  - question: Can we use a machine learning model to predict whether a resolved domain is a likely typosquat attempt?
    context: This question leverages machine learning to automate the detection of typosquatting at scale. By training a classification model on features like n-gram frequency, entropy, and Levenshtein distance, the model can learn the patterns of both legitimate and malicious domains. Applying this model to all DNS queries allows for the generation of a probability score, enabling automated alerting on high-confidence predictions and reducing analyst workload.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Corporate DNS Resolvers
      - Mail Gateway Logs
      - Egress Web Proxies
      - Endpoint DNS Cache
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - pseudocode: APPLY typosquat_classification_model TO all domains in Zeek dns.log | ALERT IF typosquat_probability > 0.9
  - question: Is an internal host making a TLS connection to a recently registered domain that is also using a free, short-validity certificate?
    context: This question helps to identify adversary infrastructure that is set up quickly and cheaply for short-term campaigns. Attackers often use newly registered domains and free certificates (like Let's Encrypt) with short validity periods. Correlating these three attributes—recent registration, free CA, and short validity—creates a high-fidelity signal for suspicious activity.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek conn.log
      - Egress Web Proxies
      - Corporate DNS Resolvers
      - Certificate Transparency Log Feeds
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - pseudocode: ENRICH Zeek ssl.log with domain_registration_date | ALERT IF (registration_age < 30 days) AND (issuer IS free_ca) AND (cert_validity <= 90 days)
  - question: Can we assign a risk score to external connections based on domain age, WHOIS privacy, and TLS issuer to find the most suspicious outliers?
    context: This question proposes a risk-scoring model to surface suspicious domains that might not trigger a single, specific rule. By assigning points for various suspicious attributes (e.g., recent registration, WHOIS privacy, free TLS CA), we can create a composite score. Alerting on domains whose scores are statistical outliers (e.g., in the 95th percentile) helps analysts focus on the most anomalous and potentially malicious connections in the environment.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek conn.log
      - Egress Web Proxies
      - Corporate DNS Resolvers
      - Certificate Transparency Log Feeds
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - pseudocode: FOR each connection, CALCULATE risk_score (points for age<60d, whois_privacy, free_ca) | ALERT IF risk_score > 95th_percentile_of_scores_in_last_24h
  - question: Can we group domains with similar characteristics to automatically identify clusters of malicious infrastructure?
    context: This question leverages unsupervised machine learning to discover groups of related adversary infrastructure. By clustering domains based on features like registration age, TLD, ASN reputation, and certificate attributes, we can identify groups of domains that share common, suspicious traits. Once a cluster is identified and labeled as suspicious (through sampling), we can alert on any internal communication to any domain within that cluster, effectively identifying related threats.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek conn.log
      - Egress Web Proxies
      - Corporate DNS Resolvers
      - Certificate Transparency Log Feeds
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - pseudocode: APPLY clustering_algorithm TO domains based on (reg_age, tld, asn_rep, cert_attrs) | ANALYZE and LABEL clusters | ALERT IF connection_to_domain in 'suspicious' or 'malicious' cluster
  - question: Is an internal host generating a high volume of failed DNS lookups (NXDOMAINs) in a short period, and if so, what process is responsible?
    context: This question aims to detect one of the primary indicators of Domain Generation Algorithm (DGA) malware, which rapidly queries for algorithmically generated domains until it finds one that is active for C2. A high rate of NXDOMAIN responses from a single host is a strong signal. Correlating this network activity with endpoint process data (like Windows Event ID 4688) is crucial to identify the malicious process responsible for the DGA activity.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Endpoint Processes
      - Corporate DNS Resolvers
      - Domain Controllers
      - Endpoint DNS Cache
    range: last 90 days
    queries:
      - pseudocode: FROM Zeek dns.log, COUNT NXDOMAIN responses by source_ip over 60s | IF count > 20, CORRELATE source_ip and timestamp with endpoint logs (e.g., WEF 4688) to find process | ALERT if process not in allowlist
  - question: Is a specific host exhibiting an anomalous ratio of NXDOMAIN responses and an unusually high entropy in its queried domain names?
    context: This question provides a more statistically robust method for detecting DGA activity by combining two key indicators. DGA domains are not only numerous (leading to high NXDOMAIN ratios) but also random-looking (leading to high Shannon entropy). By establishing a historical baseline for each host and alerting when both the NXDOMAIN ratio and query entropy exceed the 99th percentile, we can create a high-fidelity alert that is tailored to the normal behavior of each machine.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Endpoint Processes
      - Corporate DNS Resolvers
      - Domain Controllers
      - Endpoint DNS Cache
    range: last 90 days
    queries:
      - pseudocode: FOR each source_ip over 5min window, CALCULATE (nxdomain_ratio, avg_shannon_entropy) | ALERT IF nxdomain_ratio > 99th_percentile_baseline AND avg_shannon_entropy > 99th_percentile_baseline
  - question: Can we use a deep learning model to classify individual domain queries as DGA-generated in real time?
    context: This question focuses on using advanced machine learning for high-precision DGA detection. Deep learning models like LSTMs can be pre-trained to recognize the complex patterns of machine-generated domain names. By feeding all DNS queries into such a model in real-time, we can identify DGA attempts with high confidence on a per-query basis, even before a successful C2 connection is made, allowing for very early detection.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Endpoint Processes
      - Corporate DNS Resolvers
      - Domain Controllers
      - Endpoint DNS Cache
    range: last 90 days
    queries:
      - pseudocode: APPLY dga_deep_learning_model TO each domain in Zeek dns.log | ALERT IF classification is 'DGA' with confidence > 0.95 and response is NXDOMAIN
  - question: Is there network traffic where the protocol used is on a non-standard port?
    context: This question aims to detect C2 channels that attempt to evade simple port-based firewall rules. Adversaries often tunnel common protocols (like HTTP or SSL) over non-standard ports to blend in or bypass egress filtering. Alerting when the identified service in network logs does not match the standard port for that service is a classic technique for finding such covert channels. It's important to build an exclusion list for legitimate applications in the environment that use non-standard ports.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Firewall Egress Logs
      - Egress Web Proxies
      - Network Sensor Taps
      - Endpoint Process Execution Logs
    range: last 90 days
    queries:
      - pseudocode: FROM Zeek conn.log, ALERT IF (service == 'http' AND dest_port != 80) OR (service == 'ssl' AND dest_port != 443) | EXCLUDE known good exceptions
  - question: Is any internal host making highly periodic connections (low jitter) or transferring anomalous amounts of data to an external destination?
    context: This question targets the characteristic 'heartbeat' of C2 beaconing. Malware often connects back to its C2 server at regular intervals, resulting in a very low standard deviation in the time between connections (low jitter). Additionally, C2 communication may involve unusual data sizes (e.g., small, regular check-ins or large, unexpected exfiltration). By calculating jitter and monitoring for anomalous data transfer sizes against a baseline, we can identify these automated, non-human communication patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Firewall Egress Logs
      - Egress Web Proxies
      - Network Sensor Taps
      - Endpoint Process Execution Logs
    range: last 90 days
    queries:
      - pseudocode: FOR each src-dst pair over 24h, CALCULATE jitter (std_dev of time between connections) | ALERT IF jitter < 1s AND interval is regular | SEPARATELY, ALERT IF sent_bytes or recv_bytes > 95th_percentile_for_port
  - question: Can we use an autoencoder to detect network connections that are anomalous when compared to a baseline of normal activity?
    context: This question proposes using an unsupervised machine learning model (an autoencoder) to learn what 'normal' network traffic looks like. The autoencoder is trained on benign connection metadata. When a new connection's features are fed into the model, a high reconstruction error means the model struggled to reproduce it, implying the connection is highly anomalous and does not fit the learned pattern of normalcy. This can effectively detect novel C2 communication patterns without relying on predefined rules or signatures.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Firewall Egress Logs
      - Egress Web Proxies
      - Network Sensor Taps
      - Endpoint Process Execution Logs
    range: last 90 days
    queries:
      - pseudocode: TRAIN autoencoder on benign connection metadata | FOR each new connection, CALCULATE reconstruction_error | ALERT IF reconstruction_error > 99th_percentile_of_training_errors