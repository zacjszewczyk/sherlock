name: T1499.001: OS Exhaustion Flood
id: f7a5d3e1-8c4b-4f9e-a2b8-c1d9e7f6a5b4
description: This playbook helps investigate whether an adversary is attempting to impact system availability or functionality via an OS Exhaustion Flood. This is typically done by sending a high volume of packets (like SYN or ACK floods) to a target to consume its resources, such as its connection state table or memory pools. Indicators of this activity include sustained high rates of specific packet types from a single source, traffic characteristics consistent with automated tooling (e.g., low source port entropy, static TTLs), a high ratio of half-open to established TCP connections, a large number of out-of-state ACK packets, and host-level events indicating resource exhaustion (e.g., Windows Event ID 4227). The ultimate goal is to observe a degradation in service performance, such as a drop in successful transaction rates, that correlates with these network-level anomalies.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a high rate of traffic originating from a known DoS or botnet IP address targeting a critical asset?
    context: This question aims to identify attacks from known malicious infrastructure. Adversaries frequently use botnets for DoS attacks. Correlating high-volume traffic from a source IP against a threat intelligence feed of known DoS actors provides a high-confidence indicator of an OS Exhaustion Flood. An alert from this rule suggests an active, recognized threat is targeting the organization's resources.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Internet Gateway, Perimeter Firewalls, Core Routers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE source_ip IN (threat_intel_dos_watchlist) | CALCULATE traffic_rate | WHERE traffic_rate > high_rate_threshold AND destination_ip IN (critical_assets) | ALERT
  - question: Is any single source IP sending an anomalously high volume of SYN or ACK packets to a server compared to its normal traffic baseline?
    context: This question focuses on detecting statistically significant deviations from normal traffic patterns. By establishing a baseline of inbound traffic for each server, we can identify sudden, sustained spikes from a single source that are characteristic of a flood attack. This method can detect attacks from previously unknown sources that would be missed by threat intelligence feeds alone.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Internet Gateway, Perimeter Firewalls, Core Routers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log | CALCULATE rolling_average_and_stddev(packet_count) by destination_server | JOIN with live_traffic | WHERE live_packet_count_from_source > (rolling_average + 3 * stddev) for > 60s | ALERT
  - question: Does inbound traffic from a single source exhibit characteristics that a machine learning model identifies as a significant deviation from normal behavior?
    context: This leverages machine learning to identify complex and subtle anomalies that may not be caught by simple threshold or statistical methods. A time-series model trained on normal traffic patterns can detect novel attack techniques by flagging any traffic that has a high reconstruction error, indicating it doesn't conform to previously seen benign behavior.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Internet Gateway, Perimeter Firewalls, Core Routers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT live_zeek_conn_log_stream | APPLY time_series_anomaly_model | WHERE reconstruction_error > dynamic_threshold | ALERT
  - question: Does high-volume inbound traffic exhibit session characteristics (e.g., specific TTLs, window sizes) matching signatures of known DoS tools?
    context: This question seeks to identify attacks by fingerprinting the tools used. Many DoS tools have unique, static characteristics in the packets they generate (like fixed TTL values or non-standard window sizes). Scanning high-volume traffic for these signatures allows for specific identification of the attack tooling, which can aid in attribution and response.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway, Load Balancers, Targeted Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE traffic_volume > high_threshold | SCAN traffic_flow_features AGAINST known_dos_tool_signatures | IF match THEN ALERT
  - question: Is a high-volume traffic source using non-random source ports, as indicated by low Shannon entropy?
    context: This question helps differentiate legitimate high-volume traffic from automated flood attacks. Legitimate clients typically use ephemeral source ports in a pseudo-random fashion (high entropy). In contrast, many flood tools use sequential or static source ports, resulting in very low entropy. A low entropy score for a high-volume source is a strong indicator of an automated attack tool.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway, Load Balancers, Targeted Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE traffic_volume > high_threshold | GROUP BY source_ip | CALCULATE shannon_entropy(source_ports) over 1_min_window | WHERE entropy < 2.0 | ALERT
  - question: Does a machine learning clustering model identify a group of TCP sessions as anomalous based on their collective features?
    context: This question uses unsupervised machine learning to find coordinated attack traffic. By clustering TCP sessions based on features like TTL, window size, and inter-arrival time, benign traffic will form a large, dense cluster. Attack traffic, even from multiple sources, will often form smaller, distinct clusters due to the common tooling used. Identifying these anomalous clusters can reveal a distributed or coordinated attack.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway, Load Balancers, Targeted Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT live_zeek_conn_log_stream | APPLY session_feature_clustering_model | IDENTIFY anomalous_clusters | ALERT on sessions in anomalous_clusters
  - question: Is there an abnormally high number of half-open TCP connections ('S0' state) to a single destination?
    context: This question aims to detect a classic SYN flood attack. In a SYN flood, the attacker sends a large volume of SYN packets but never completes the three-way handshake, leaving many connections in a half-open ('S0') state. This exhausts the server's connection table. A sudden, massive increase in 'S0' connections is a primary indicator of this attack.
    answer_sources:
      - Zeek conn.log
      - Public-facing Application Servers, Authentication Servers, Database Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE connection_state = 'S0' | COUNT connections by destination_ip over 1_min_window | WHERE count > 10000 | ALERT
  - question: Has the ratio of half-open ('S0') to fully established ('SF') connections for a critical server significantly exceeded its historical baseline?
    context: This question provides a more robust method for detecting SYN floods by comparing the rate of new, unestablished connections to established ones. In a SYN flood, the 'S0' count skyrockets while the 'SF' count may stagnate or drop. Comparing this ratio to a historical baseline helps to accurately identify anomalous conditions and reduce false positives.
    answer_sources:
      - Zeek conn.log
      - Public-facing Application Servers, Authentication Servers, Database Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log | CALCULATE ratio(S0_connections / SF_connections) by destination_server over 1_min_window | COMPARE ratio to 30_day_baseline | WHERE ratio > 99th_percentile for > 3_mins | ALERT
  - question: Has a change point detection algorithm identified a statistically significant and abrupt increase in the number of half-open ('S0') connections?
    context: This question uses advanced statistical analysis to detect the precise onset of a SYN flood. Change point detection algorithms are designed to identify points in a time series where the statistical properties change abruptly. Applying this to the count of 'S0' connections can provide a very rapid and high-confidence alert at the very beginning of an attack.
    answer_sources:
      - Zeek conn.log
      - Public-facing Application Servers, Authentication Servers, Database Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT time_series_of_S0_connection_counts | APPLY change_point_detection_algorithm | IF significant_increase_detected THEN ALERT
  - question: Is a single source sending a high volume of ACK packets that do not correspond to any existing or valid connection?
    context: This question is designed to detect an ACK flood. This type of attack attempts to exhaust system resources by forcing the system to check its state table for a connection corresponding to each incoming ACK packet. Identifying a high rate of these out-of-state ACKs from a single source is a direct indicator of this attack.
    answer_sources:
      - Zeek conn.log
      - Critical Infrastructure Servers, Stateful Firewalls, VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE packet_type = 'ACK' AND connection_uid IS NULL or connection_state = 'CLOSED' | COUNT by source_ip | WHERE count_per_second > 1000 | ALERT
  - question: Is the rate of out-of-state ACK packets from a single source anomalously high compared to the destination's baseline?
    context: This question builds on the previous one by using baselining to improve detection accuracy. While some out-of-state packets can occur in normal network operations, a sustained, high-volume flood will be a clear statistical anomaly. Comparing the current rate against a dynamically calculated baseline for the target system helps distinguish a malicious flood from benign network noise.
    answer_sources:
      - Zeek conn.log
      - Critical Infrastructure Servers, Stateful Firewalls, VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH out_of_state_ack_packets | CALCULATE baseline_rate by destination_ip | COMPARE live_rate from source_ip to baseline | WHERE live_rate > (mean + 3 * stddev) | ALERT
  - question: Has a machine learning classifier identified an incoming stream of ACK packets as malicious?
    context: This question leverages a supervised machine learning model to provide high-confidence detection of ACK floods. By training a classifier on features from both benign and malicious ACK streams, the model can learn the subtle patterns that differentiate them. This approach can detect sophisticated attacks that might evade simpler rule-based or statistical methods.
    answer_sources:
      - Zeek conn.log
      - Critical Infrastructure Servers, Stateful Firewalls, VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT live_ack_packet_stream | APPLY pre_trained_ack_flood_classifier | IF classification = 'malicious' THEN ALERT
  - question: Has a server generated a Windows Event ID indicating TCP/IP connection limit exhaustion or memory pool allocation failure?
    context: This question focuses on direct evidence of resource exhaustion from the target host itself. Windows Event IDs 4227, 2019, and 2020 are explicit indicators that the operating system is struggling to handle the load of new connections or memory requests. An alert on these events is a critical, high-fidelity signal that the server is experiencing severe resource starvation.
    answer_sources:
      - Windows Event ID 4227
      - Windows Event ID 2019
      - Windows Event ID 2020
      - Zeek conn.log
      - Domain Controllers, Critical Application Servers, Windows Server Fleet
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH windows_event_logs | WHERE event_id IN (4227, 2019, 2020) | ALERT IMMEDIATELY
  - question: Following a host-level resource exhaustion event, was the target host subjected to an anomalously high volume of network traffic?
    context: This question correlates host-based evidence with network-based evidence to confirm the cause of exhaustion. A Windows event indicating resource exhaustion is a strong signal, but correlating it with a simultaneous network flood targeting that same host provides conclusive evidence of a DoS attack. This automated correlation helps analysts quickly confirm the attack vector.
    answer_sources:
      - Windows Event ID 4227
      - Windows Event ID 2019
      - Windows Event ID 2020
      - Zeek conn.log
      - Domain Controllers, Critical Application Servers, Windows Server Fleet
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON windows_exhaustion_event (id: 4227, 2019, 2020) | TRIGGER SEARCH Zeek conn.log for 5_mins_prior on event_host | CALCULATE packet_volume | COMPARE volume to 7_day_average | IF volume > (average + 3 * stddev) THEN ELEVATE_ALERT
  - question: Does a probabilistic model, given both network and host event evidence, calculate a high probability of an OS Exhaustion Attack?
    context: This question uses a sophisticated analytical model to fuse multiple weak signals into a single high-confidence alert. A Bayesian network can weigh different pieces of evidence (e.g., a network flood alert, a host exhaustion event) and calculate the overall probability of a specific attack type, reducing alert fatigue by only firing when multiple, correlated indicators are present.
    answer_sources:
      - Windows Event ID 4227
      - Windows Event ID 2019
      - Windows Event ID 2020
      - Zeek conn.log
      - Domain Controllers, Critical Application Servers, Windows Server Fleet
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT network_flood_alert, host_exhaustion_event | APPLY bayesian_network_model | CALCULATE probability(OS_Exhaustion_Attack) | IF probability > 0.9 THEN HIGH_CONFIDENCE_ALERT
  - question: Has the success rate of a critical service dropped dramatically while the request volume remains high?
    context: This question focuses on the ultimate impact of the attack, which is service degradation. A sharp drop in successful transactions (e.g., HTTP 200 OK responses) while the overall number of requests is steady or increasing is a clear sign that the service is overwhelmed and unable to function correctly. This is a business-impact-focused indicator that directly measures the effect of a potential DoS attack.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - API Gateways, Customer-facing Web Portals, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek http.log | CALCULATE success_rate_current_hour vs success_rate_previous_hour | WHERE success_rate_current_hour < 0.25 * success_rate_previous_hour AND request_volume_is_high | ALERT
  - question: Has a service's success rate fallen to an extreme low compared to its historical performance, while simultaneously experiencing an extremely high inbound packet rate?
    context: This question refines the previous one by using historical baselines for both service success and traffic volume to provide strong, correlated evidence of a DoS attack. A service might fail for many reasons, but when a severe performance degradation occurs at the exact same time as a massive traffic spike, an attack is the most likely cause.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - API Gateways, Customer-facing Web Portals, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH service_logs AND network_logs | CALCULATE service_success_rate AND inbound_packet_rate | COMPARE to historical_baselines | WHERE success_rate < 1st_percentile AND packet_rate > 99th_percentile | ALERT
  - question: Is the actual transaction success rate significantly worse than what a predictive model would expect for the current traffic volume?
    context: This question uses a predictive model to identify anomalous service degradation. A regression model can learn the normal relationship between traffic volume and success rate. An alert is triggered only when the actual success rate is far below the model's prediction, indicating that the degradation is not due to normal load but an external factor, such as a DoS attack consuming resources.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - API Gateways, Customer-facing Web Portals, Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT live_traffic_volume, live_success_rate | APPLY predictive_regression_model to get predicted_success_rate | WHERE live_success_rate << predicted_success_rate | ALERT