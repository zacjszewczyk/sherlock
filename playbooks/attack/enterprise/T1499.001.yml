name: T1499.001: OS Exhaustion Flood
id: 5937a01b-853b-486a-8484-933390c58f0d
description: 'Investigative playbook to determine if an adversary is attempting to impact system availability or functionality via an OS exhaustion flood. This playbook focuses on identifying evidence of OS exhaustion through analysis of network traffic logs and host-based events. Indicators include sustained high rates of SYN or ACK packets, traffic characteristics consistent with automated tooling (e.g., low source port entropy, static TTLs), a high ratio of half-open to established TCP connections, a large volume of out-of-state ACK packets, specific Windows Event IDs signaling resource exhaustion (4227, 2019, 2020), and a measurable drop in service success rates that correlates with a spike in inbound packet volume.'
type: technique
related:
  - TA0040: Impact
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious IP from a threat intelligence feed sending a high volume of traffic to a critical asset?
    context: This question helps to quickly identify and prioritize potential Denial-of-Service (DoS) attacks originating from sources already identified by the security community as malicious. By cross-referencing high-rate traffic against a curated watchlist of DoS or botnet-related IP addresses, analysts can rapidly confirm the malicious nature of the activity and escalate the incident.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Internet Gateway
      - Perimeter Firewalls
      - Core Routers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE source_ip IN (dos_botnet_watchlist) AND destination_ip IN (critical_assets) | STATS count BY source_ip, destination_ip, time_window | WHERE count > high_rate_threshold
  - question: Is any single source IP sending an anomalously high number of SYN or ACK packets to a server compared to its normal traffic patterns?
    context: This question focuses on detecting statistical anomalies in traffic volume. By establishing a dynamic baseline (rolling average and standard deviation) for each server, this method can uncover flood attacks that might not trigger static thresholds. An alert based on a significant deviation (e.g., 3 standard deviations) indicates that a single source's behavior is highly unusual and warrants investigation.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Internet Gateway
      - Perimeter Firewalls
      - Core Routers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each destination_server, CALCULATE rolling_avg, rolling_std_dev of inbound SYN/ACK packets over 5min | SEARCH Zeek conn.log for SYN or ACK packets | STATS count BY source_ip, destination_server | WHERE count > (rolling_avg + 3 * rolling_std_dev) FOR > 60 seconds
  - question: Does a machine learning model detect that the network traffic pattern from a single source is a significant deviation from historically normal behavior?
    context: This question leverages advanced machine learning to identify sophisticated or subtle flood attacks. A time-series anomaly detection model learns the complex patterns of normal traffic. When live traffic from a source cannot be accurately 'reconstructed' by the model, it results in a high reconstruction error, which is a strong signal of an attack that simpler statistical methods might miss.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Internet Gateway
      - Perimeter Firewalls
      - Core Routers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT live Zeek conn.log traffic features (packet count, byte count) into trained ML model | FOR each source_ip, CALCULATE reconstruction_error | IF reconstruction_error > dynamic_threshold THEN ALERT
  - question: Does high-volume inbound traffic match the known signatures of DoS attack tools?
    context: This question aims to identify attacks by matching traffic characteristics against a library of known tool signatures (e.g., specific TTLs, fixed window sizes). This is a highly effective method for detecting common attack vectors, providing a quick and reliable way to classify a flood as malicious based on its technical fingerprints.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway
      - Load Balancers
      - Targeted Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log for high-volume flows | MATCH flow characteristics (TTL, window_size, IP_options) against known_dos_tool_signatures | ALERT on match
  - question: Is a high-volume source IP using non-random source ports, suggesting the use of an automated flood tool?
    context: Normal TCP/IP stacks select source ports randomly, leading to high entropy. Many DoS tools use simplistic or sequential port selection, resulting in very low entropy. This question helps an analyst identify automated, non-standard traffic generation by measuring the randomness (or lack thereof) of source ports, which is a strong indicator of a malicious flood.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway
      - Load Balancers
      - Targeted Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each high-volume source_ip in Zeek conn.log, CALCULATE shannon_entropy of source_ports over 1min window | IF entropy < 2.0 THEN ALERT
  - question: Does machine learning-based clustering identify anomalous groups of TCP sessions that are distinct from normal traffic?
    context: This question uses unsupervised machine learning to find clusters of traffic. Benign traffic from diverse clients will form a large, diffuse cluster. Coordinated attack traffic, originating from a tool with similar TCP characteristics (TTL, window size, etc.), will form a small, dense, and anomalous cluster. Identifying these outlier clusters helps detect coordinated attacks.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway
      - Load Balancers
      - Targeted Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT TCP session features (source_port, TTL, window_size) from Zeek conn.log into clustering model (e.g., DBSCAN) | IDENTIFY and ALERT on anomalous clusters distinct from the main 'benign' cluster
  - question: Has the number of half-open TCP connections ('S0') to a single destination exceeded a predefined critical threshold?
    context: This question provides a simple, direct method for detecting a potential SYN flood. A large number of 'S0' connections indicates that a server is receiving SYN packets but not the subsequent ACKs to complete the handshake. A static threshold provides a clear tripwire for identifying a high volume of these incomplete connections.
    answer_sources:
      - Zeek conn.log
      - Public-facing Application Servers
      - Authentication Servers
      - Database Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE conn_state == 'S0' | STATS count BY destination_ip over 1min window | IF count > 10000 THEN ALERT
  - question: Is the ratio of half-open ('S0') to established ('SF') connections for a critical server anomalously high compared to its historical baseline?
    context: This question refines the detection of SYN floods by looking at the proportion of connection states. A drastic shift in the ratio of incomplete to complete handshakes is a strong, context-aware indicator of a resource exhaustion attempt. Comparing this ratio to a historical baseline (e.g., 99th percentile) allows for dynamic, self-tuning alerting.
    answer_sources:
      - Zeek conn.log
      - Public-facing Application Servers
      - Authentication Servers
      - Database Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each critical_server, CALCULATE baseline_ratio of S0_to_SF_connections from last 30 days | CALCULATE live_ratio over 1min | IF live_ratio > 99th_percentile_of_baseline for > 3min THEN ALERT
  - question: Has a change point detection algorithm identified a sudden, statistically significant increase in the rate of half-open ('S0') connections?
    context: This question focuses on detecting the precise moment a SYN flood begins. Change point detection algorithms are specifically designed to identify abrupt shifts in time-series data. Applying this to the count of 'S0' connections can provide a very early and high-confidence warning that an attack has started.
    answer_sources:
      - Zeek conn.log
      - Public-facing Application Servers
      - Authentication Servers
      - Database Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT time-series of 'S0' connection counts for a critical asset into a change point detection model | IF model detects a statistically significant and abrupt increase THEN ALERT
  - question: Is a single source IP sending a high rate of ACK packets that do not belong to any active connection?
    context: This question targets ACK floods, which aim to exhaust stateful devices like firewalls by forcing them to check their state table for each incoming packet. By identifying 'out-of-state' ACK packets and alerting when a single source sends them at a high rate, an analyst can pinpoint this specific type of resource exhaustion attack.
    answer_sources:
      - Zeek conn.log
      - Critical Infrastructure Servers
      - Stateful Firewalls
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log for ACK packets | LOOKUP connection uid | IF uid does not exist OR corresponds to a closed state | STATS count by source_ip | IF count > 1000/sec THEN ALERT
  - question: Is the rate of out-of-state ACK packets from a single source anomalously high compared to the destination's baseline?
    context: This question improves on static thresholds by creating a dynamic baseline for out-of-state ACK packets. By alerting only when the rate from a single source significantly deviates from the established norm for a particular destination, this method reduces false positives and focuses the analyst on true statistical anomalies indicative of an attack.
    answer_sources:
      - Zeek conn.log
      - Critical Infrastructure Servers
      - Stateful Firewalls
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each destination_ip, CALCULATE baseline mean/std_dev of out-of-state ACK packets | FOR each source_ip, CALCULATE rate of out-of-state ACKs | IF rate > (baseline_mean + 3 * baseline_std_dev) THEN ALERT
  - question: Has a machine learning classifier identified a stream of ACK packets as malicious?
    context: This question uses a supervised machine learning model to provide a definitive classification of traffic. By training a model on features of both benign and malicious ACK streams, it can learn to distinguish between them with high accuracy, providing the analyst with a high-confidence alert about the traffic's intent.
    answer_sources:
      - Zeek conn.log
      - Critical Infrastructure Servers
      - Stateful Firewalls
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT features (packet size, inter-arrival time) of ACK packet streams into trained classifier (e.g., Random Forest) | IF classifier output is 'malicious' THEN ALERT
  - question: Has a critical Windows server logged an event indicating TCP/IP connection limit exhaustion or memory pool allocation failure?
    context: This question focuses on definitive, host-based evidence of resource exhaustion. Windows Event IDs 4227 (TCP connection limit), 2019 (non-paged pool failure), and 2020 (paged pool failure) are explicit signals that the OS is struggling to allocate resources, indicating a successful DoS attack.
    answer_sources:
      - Windows Event ID 4227
      - Windows Event ID 2019
      - Windows Event ID 2020
      - Zeek conn.log
      - Domain Controllers
      - Critical Application Servers
      - Windows Server Fleet
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event Logs for EventID IN (4227, 2019, 2020) on critical servers | ALERT on detection
  - question: Did a network-level packet flood occur just before a host-level resource exhaustion event was logged?
    context: This question is crucial for correlating network and host evidence to confirm an attack. By automatically linking a host-based exhaustion event (like Event ID 4227) with a preceding, anomalous spike in network traffic, an analyst can confidently attribute the host's failure to a network-based DoS attack, linking cause and effect.
    answer_sources:
      - Windows Event ID 4227
      - Windows Event ID 2019
      - Windows Event ID 2020
      - Zeek conn.log
      - Domain Controllers
      - Critical Application Servers
      - Windows Server Fleet
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON ALERT for EventID (4227, 2019, 2020) on host_ip, QUERY Zeek conn.log for 5min before event WHERE destination_ip == host_ip | CALCULATE packet_volume | IF packet_volume > (7-day_avg + 3 * std_dev) THEN ELEVATE ALERT
  - question: What is the probability of an OS Exhaustion Attack, given the combined evidence from both network and host sensors?
    context: This question seeks to quantify the confidence of an attack assessment using a probabilistic model like a Bayesian network. This fuses uncertain evidence from different sources (network flood, host event) to calculate a single, defensible confidence score, enabling more effective prioritization.
    answer_sources:
      - Windows Event ID 4227
      - Windows Event ID 2019
      - Windows Event ID 2020
      - Zeek conn.log
      - Domain Controllers
      - Critical Application Servers
      - Windows Server Fleet
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT network_flood_alert AND host_exhaustion_event (e.g., EventID 4227) into Bayesian network model | IF posterior_probability('OS Exhaustion Attack') > 0.9 THEN TRIGGER HIGH-CONFIDENCE ALERT
  - question: Has the success rate of a critical service dropped dramatically while request volume remains high or has increased?
    context: This question focuses on the ultimate impact of a potential DoS attack, which is service degradation. A sharp drop in successful transactions (e.g., HTTP 200 OK responses) is a direct measure of user-facing impact. Checking that this drop is not due to a lack of traffic points towards the service being overwhelmed.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - API Gateways
      - Customer-facing Web Portals
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR critical_service, CALCULATE success_rate (e.g., HTTP 200s) over 1hr | IF current_rate < (previous_1hr_rate * 0.25) AND total_requests >= previous_1hr_requests THEN ALERT
  - question: Is a critical service experiencing an anomalously low success rate at the same time its host is receiving an anomalously high volume of network packets?
    context: This question provides a powerful, correlated indicator of a DoS attack by linking application-level health to network-level stress. It confirms that the service is failing (success rate below 1st percentile) and simultaneously provides a likely cause (inbound packet rate above 99th percentile). This two-pronged condition is highly specific to DoS scenarios.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - API Gateways
      - Customer-facing Web Portals
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR critical_service, CALCULATE success_rate_baseline and packet_rate_baseline | IF current_success_rate < 1st_percentile_baseline AND current_packet_rate > 99th_percentile_baseline THEN ALERT
  - question: Is the service's success rate significantly worse than what a machine learning model would predict, given the current traffic volume?
    context: This question uses a regression model to understand the normal relationship between traffic volume and success rate. An alert is triggered when the actual success rate is far below the predicted rate, indicating that the performance degradation is abnormal and not just a symptom of high demand, pointing strongly to a malicious DoS attack.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - API Gateways
      - Customer-facing Web Portals
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT current_traffic_volume into regression_model to get predicted_success_rate | GET actual_success_rate | IF actual_success_rate << predicted_success_rate THEN ALERT