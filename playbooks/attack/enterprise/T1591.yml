name: T1591: Gather Victim Org Information
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary is gathering organizational information to support future targeting. This can manifest as network connections to known malicious infrastructure, HTTP requests for sensitive files or directories, the use of specific scanning tools or DNS query types, network scanning patterns (horizontal or vertical), DNS enumeration techniques like subdomain brute-forcing, or attempts to access non-public web resources from an external source.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any internal hosts communicated with or been contacted by external IPs or domains known for malicious scanning or reconnaissance?
    context: This question aims to identify direct communication with known adversary infrastructure. Matching network traffic against a high-confidence threat intelligence feed is a direct way to detect the early stages of a targeted attack, as adversaries often use pre-compromised hosts or dedicated scanning infrastructure for initial reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateway
      - Perimeter firewalls
      - Cloud VPC flow logs
      - DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek conn.log and dns.log WHERE (source_ip OR destination_ip OR dns_query) IN threat_intelligence_feed. RETURN matching_records, timestamp, source_ip, destination_ip, dns_query.
  - question: Are any external IP addresses communicating with an unusually high proportion of IOC-flagged IPs compared to normal activity?
    context: This question moves beyond simple one-to-one matches to find statistical anomalies. An external source that communicates with many different known-bad IPs, even if those IPs are not part of a specific campaign, may be a scanner or part of a botnet. This helps detect broader, less-targeted reconnaissance efforts by identifying sources with a statistical predisposition for 'bad neighborhoods' on the internet.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateway
      - Perimeter firewalls
      - Cloud VPC flow logs
      - DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: FOR each external_ip in a 24h window, CALCULATE ratio = (connections_to_ioc_ips / total_connections). COMPARE ratio to 95th_percentile_baseline. RETURN external_ip WHERE ratio > baseline.
  - question: Can we predict in real-time if a new network connection is likely part of a reconnaissance campaign based on its characteristics?
    context: This question uses machine learning to proactively identify reconnaissance activity. By training a model on historical data, we can learn the subtle characteristics of reconnaissance connections (e.g., short duration, common scanning ports, protocol anomalies) that may not be captured by symbolic rules or simple statistics. This allows for the detection of novel or evolving scanning techniques.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateway
      - Perimeter firewalls
      - Cloud VPC flow logs
      - DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: INPUT new_connection_features (dest_port, protocol, duration, ioc_flag). APPLY trained_classification_model. RETURN probability_is_reconnaissance. ALERT if probability > threshold.
  - question: Have any external IPs requested web pages or files containing sensitive keywords or file extensions indicative of bulk information gathering?
    context: This question looks for direct attempts to access sensitive organizational information via public web servers. Adversaries often search for org charts, policy documents, or internal directories. Monitoring for keywords like 'orgchart', 'directory', or file types like '.xlsx' and '.pdf' in URI requests can reveal targeted information gathering.
    answer_sources:
      - Zeek http.log
      - Public-facing web servers
      - Content Delivery Network (CDN) logs
      - Web Application Firewall (WAF) logs
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek http.log WHERE source_ip is_external AND uri MATCHES sensitive_keyword_regex. RETURN matching_requests, timestamp, source_ip, uri.
  - question: Are any external IPs requesting a statistically unusual or random-looking set of URIs, possibly indicating web fuzzing or forced browsing?
    context: This question aims to detect automated tools trying to discover hidden files and directories. Instead of looking for specific keywords, it analyzes the pattern of requests. A high Shannon entropy in the requested URIs suggests the source is not a human user clicking links but an automated tool systematically trying many different paths, which is a common reconnaissance technique.
    answer_sources:
      - Zeek http.log
      - Public-facing web servers
      - Content Delivery Network (CDN) logs
      - Web Application Firewall (WAF) logs
    range: last 90 days
    queries:
      - pseudocode: FOR each external_ip in a 1h window, CALCULATE shannon_entropy of requested_uris. COMPARE entropy to (mean_entropy + 3 * std_dev). RETURN external_ip WHERE entropy > threshold.
  - question: Can we automatically group user sessions into 'benign' and 'suspicious' categories based on their browsing behavior?
    context: This question uses unsupervised machine learning to find 'unknown unknowns'. By clustering user sessions based on features like request count and URI diversity, the system can automatically identify groups of similar behaviors. Analysts can then label these clusters (e.g., 'normal user', 'search engine crawler', 'suspicious scanner'), allowing the system to automatically flag new sessions that fit a suspicious profile without needing pre-defined rules.
    answer_sources:
      - Zeek http.log
      - Public-facing web servers
      - Content Delivery Network (CDN) logs
      - Web Application Firewall (WAF) logs
    range: last 90 days
    queries:
      - pseudocode: FOR new_user_session, EXTRACT features (request_count, uri_diversity, response_codes). APPLY k-means_model to assign cluster. ALERT if session is in 'suspicious_scanner' cluster.
  - question: Have we observed any web requests with User-Agent strings from known reconnaissance tools, or received any DNS queries (like AXFR or ANY) used for reconnaissance?
    context: This question seeks to identify the explicit use of common hacking and reconnaissance tools. Tools like Nmap, sqlmap, and masscan often leave a distinct signature in the User-Agent string of their HTTP requests. Similarly, DNS queries for 'AXFR' (zone transfer) or 'ANY' are classic methods for enumerating all DNS records for a domain. Detecting these is a strong indicator of active reconnaissance.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - DNS resolvers (internal and external-facing)
      - Public-facing web servers
      - Internet gateway
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek http.log WHERE user_agent MATCHES recon_tool_regex. OR SEARCH Zeek dns.log WHERE source is_external AND query_type IN ('AXFR', 'ANY'). RETURN matching_events.
  - question: Are any single IPs generating a high volume of requests using a statistically rare User-Agent string?
    context: This question aims to find adversaries using custom or less-common tools. While they may not use a well-known User-Agent like 'nmap', their tool might still have a unique, non-browser signature. By flagging User-Agents that are rare across the entire user base but frequent for a single source IP, we can identify potential automated tools that are not in our known-bad signature list.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - DNS resolvers (internal and external-facing)
      - Public-facing web servers
      - Internet gateway
    range: last 90 days
    queries:
      - pseudocode: CALCULATE frequency of all user_agents in 24h. IDENTIFY rare_user_agents (<0.01% frequency). FOR each rare_user_agent, FIND source_ips with high request volume. RETURN ip and user_agent.
  - question: Is the volume of reconnaissance-related DNS queries (AXFR, ANY) significantly higher than what a time-series model would predict for this time?
    context: This question uses time-series forecasting to detect anomalies in the volume of specific, high-risk activities. While a few AXFR or ANY queries might be legitimate or noise, a sudden spike is highly suspicious. A forecasting model learns the normal rhythm (or lack thereof) of these query types and can alert when a statistically significant deviation occurs, indicating a potential large-scale enumeration attempt.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - DNS resolvers (internal and external-facing)
      - Public-facing web servers
      - Internet gateway
    range: last 90 days
    queries:
      - pseudocode: FORECAST expected_volume of 'AXFR'/'ANY' queries for current_hour using ARIMA model. GET observed_volume. ALERT if observed_volume > forecasted_upper_confidence_bound.
  - question: Has any single external IP connected to a large number of unique ports on one of our hosts, or to a large number of unique hosts in our network, within a short time frame?
    context: This question aims to detect classic network scanning behavior. A 'vertical scan' involves probing many ports on a single target to find open services. A 'horizontal scan' involves probing the same port across many different targets to find a specific vulnerable service. Both are hallmark activities of network reconnaissance, and setting simple thresholds can be an effective way to detect them.
    answer_sources:
      - Zeek conn.log
      - Network perimeter
      - DMZ segments
      - Server subnets
      - Firewall logs
    range: last 90 days
    queries:
      - pseudocode: AGGREGATE connections by source_ip over 5min windows. COUNT distinct destination_ports per destination_host (vertical) and distinct destination_hosts (horizontal). ALERT if vertical_count > 100 OR horizontal_count > 50.
  - question: Are any external IPs contacting a number of distinct hosts or ports that is statistically anomalous compared to a historical baseline?
    context: This question refines the fixed-threshold approach by using a dynamic baseline. Instead of a static number like '100 ports', this method flags activity that is in the top 1% of what has been observed historically. This makes the detection more resilient to changes in network behavior and less prone to false positives in environments where high connection counts might occasionally be normal.
    answer_sources:
      - Zeek conn.log
      - Network perimeter
      - DMZ segments
      - Server subnets
      - Firewall logs
    range: last 90 days
    queries:
      - pseudocode: FOR each source_ip in 1min window, COUNT distinct destination_hosts and destination_ports. COMPARE counts to 99th_percentile_baseline. RETURN source_ip WHERE count > baseline.
  - question: Can we use density-based clustering to automatically identify groups of connections that represent network scanning activity, including slow scans?
    context: This question applies a machine learning approach that is particularly well-suited for finding scan activity. DBSCAN groups together points that are closely packed, marking as outliers points that lie alone in low-density regions. When applied to connection data, a scan (even a slow one) will appear as a dense cluster of points originating from one source and targeting many destinations. This can be more effective than time-windowed thresholding for detecting slow and low scans.
    answer_sources:
      - Zeek conn.log
      - Network perimeter
      - DMZ segments
      - Server subnets
      - Firewall logs
    range: last 90 days
    queries:
      - pseudocode: APPLY DBSCAN to connection data (source_ip, dest_ip, dest_port, timestamp). IDENTIFY dense clusters. ANALYZE clusters for single source_ip and multiple destinations. FLAG cluster as scan activity.
  - question: Has any single external IP generated a large number of DNS errors (NXDomain) for our domain in a short period, indicating a possible subdomain brute-force attack?
    context: This question targets a common technique for discovering an organization's assets. Adversaries use wordlists to guess and query for subdomains (e.g., 'dev.example.com', 'vpn.example.com'). This generates a high volume of queries for non-existent domains, resulting in NXDomain responses from the DNS server. A simple threshold on these errors from a single source is a high-fidelity indicator of this activity.
    answer_sources:
      - Zeek dns.log
      - Authoritative external DNS servers
      - Internal DNS resolvers
      - Domain controllers
    range: last 90 days
    queries:
      - pseudocode: AGGREGATE DNS responses by source_ip over 1min windows. COUNT responses where rcode is 'NXDOMAIN' and query is for our_domain. ALERT if count > 100.
  - question: Are any external IPs exhibiting a statistically high ratio of NXDomain errors to total queries, or are their queries for subdomains unusually random?
    context: This question enhances brute-force detection by looking at ratios and randomness. A high ratio of errors to successes is a strong indicator of guessing. Furthermore, calculating the Shannon entropy of the queried subdomain labels can reveal automated, non-human patterns. A high entropy suggests the subdomains are not being typed by a person but generated by a tool, further strengthening the evidence of a brute-force attempt.
    answer_sources:
      - Zeek dns.log
      - Authoritative external DNS servers
      - Internal DNS resolvers
      - Domain controllers
    range: last 90 days
    queries:
      - pseudocode: FOR each source_ip in 10min window, CALCULATE nxdomain_ratio = (nxdomain_count / total_queries). CALCULATE shannon_entropy of queried_subdomains. ALERT if nxdomain_ratio OR entropy are anomalously high.
  - question: Is the overall pattern and volume of DNS query types (A, MX, SRV, NXDomain) deviating significantly from what our machine learning model predicts as normal?
    context: This question takes a holistic view of DNS traffic using a sophisticated time-series model. An LSTM autoencoder can learn the complex, time-dependent patterns of normal DNS traffic, including the typical mix of query types. When a reconnaissance tool begins operating, it can disrupt this pattern (e.g., a sudden spike in NXDomain, or an unusual number of SRV queries). The model detects this disruption as an anomaly, even if no single threshold is breached.
    answer_sources:
      - Zeek dns.log
      - Authoritative external DNS servers
      - Internal DNS resolvers
      - Domain controllers
    range: last 90 days
    queries:
      - pseudocode: INPUT per-minute counts of DNS query types into LSTM_autoencoder. CALCULATE reconstruction_error. ALERT if reconstruction_error exceeds learned threshold.
  - question: Has an external IP, not on an approved allow-list, attempted to access a known administrative or non-public web page?
    context: This question is about enforcing access control on known sensitive web paths. Every organization has web pages that should never be accessed from the public internet, such as '/admin' or '/wp-admin'. By creating an explicit list of these paths and alerting on any external access, we can detect blatant attempts to find and exploit administrative interfaces.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Web application servers
      - Internal administrative portals
      - Staging or development environments inadvertently exposed to the internet
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek http.log WHERE source_ip is_external AND source_ip NOT IN admin_allow_list AND uri IN known_admin_paths. RETURN high-severity alert.
  - question: Has an external IP accessed a URI that is almost exclusively accessed by internal users?
    context: This question aims to automatically discover non-public pages without needing a manually curated list. By profiling every URI, we can establish a 'publicity score' based on how often it's accessed by external versus internal users. A page with a very low score (e.g., <5% external access) is de facto an internal page. Any new external access to such a page is highly suspicious and could indicate a leaked link or successful enumeration of a hidden endpoint.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Web application servers
      - Internal administrative portals
      - Staging or development environments inadvertently exposed to the internet
    range: last 90 days
    queries:
      - pseudocode: FOR each URI, CALCULATE publicity_score = (external_requests / total_requests) over 30 days. FOR new requests, ALERT if source_ip is_external and requested_uri.publicity_score < 0.05.
  - question: Are there any external user sessions whose behavior is a significant outlier compared to the behavior of all other legitimate external users?
    context: This question uses one-class classification to define a tight boundary around 'normal' behavior and flag anything outside it. The model is trained only on what is known to be good (legitimate external user sessions). When a new session appears that doesn't fit this profile (e.g., an unusual sequence of requests, strange timing, different request headers), the model flags it as an outlier. This is effective for detecting novel attacks or reconnaissance techniques that don't match any known pattern.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Web application servers
      - Internal administrative portals
      - Staging or development environments inadvertently exposed to the internet
    range: last 90 days
    queries:
      - pseudocode: EXTRACT feature_set from new external user session. APPLY one-class_SVM_model. ALERT if session is classified as outlier.