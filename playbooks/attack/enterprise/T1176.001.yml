name: T1176.001: Browser Extensions
id: 597a7e8e-c353-4e2b-8a8c-a329d4e9d6c3
description: This playbook helps investigate if an adversary is maintaining persistence using malicious browser extensions. It addresses threats such as browser processes establishing network connections to known C2 servers, non-browser processes modifying extension files or registries to force-install extensions, browsers spawning anomalous child processes like command shells, browsers exhibiting unusual network behavior (e.g., high data volume, high-entropy domains), and browsers initiating connections to internal network services on non-web ports, indicating potential reconnaissance or lateral movement.
type: technique
related:
  - TA0003: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a browser process communicating with known command and control (C2) servers identified by threat intelligence?
    context: This question seeks to identify high-confidence indicators of compromise. Malicious browser extensions often communicate with C2 servers for command execution or data exfiltration. By joining network flow and DNS logs and comparing them against a threat intelligence feed of known malicious domains and IPs, we can detect direct evidence of a compromised browser.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Egress points to the internet (e.g., firewalls, proxies)
      - DNS resolvers
      - User workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_flow_logs AND dns_logs
          JOIN on destination_ip
          LOOKUP against threat_intel_feed on destination_ip OR domain
          WHERE threat_intel_match = true
          ALERT
  - question: Is a browser connecting to statistically rare or low-prevalence domains across the enterprise?
    context: Adversary C2 infrastructure is often unique to a specific campaign and not widely visited by others in the organization. This question helps uncover potential C2 activity that is not yet present in threat intelligence feeds by flagging connections to domains that are statistical outliers in terms of their prevalence within the enterprise network.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress points to the internet (e.g., firewalls, proxies)
      - DNS resolvers
      - User workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dns_logs over 30_days
          CALCULATE prevalence of each domain
          SEARCH dns_logs for current_day
          JOIN with prevalence_data
          WHERE domain_prevalence is in bottom 1st_percentile
          ALERT
  - question: Has a user's browser exhibited an anomalous spike in outbound network traffic volume, potentially correlated with connections to rare domains?
    context: Malicious extensions can cause significant deviations from a user's normal network behavior, such as during large data exfiltration events. This question uses a time-series model to establish a baseline of normal data transfer volume for each user. It flags significant deviations from this baseline, providing a behavioral approach to detect anomalies that might indicate C2 communication or data theft.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress points to the internet (e.g., firewalls, proxies)
      - DNS resolvers
      - User workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FORECAST outbound_data_volume per user using ARIMA model on 30_day_baseline
          COMPARE current_volume to forecast
          WHERE current_volume > (predicted_volume + 3 * std_dev)
          ALERT
  - question: Is a non-browser process modifying browser extension files or registry keys used to force-install extensions?
    context: Adversaries may use scripts or other processes to sideload or persist a malicious extension, bypassing the official browser store. This question looks for direct evidence of this technique by monitoring for file writes to sensitive extension directories or registry modifications to 'ExtensionInstallForcelist' keys, especially when the action is performed by an unauthorized process like `powershell.exe` or `cmd.exe`.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Windows Event ID 4657
      - User workstations
      - Domain Controllers (for Group Policy Objects)
      - Configuration management servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_modification_events OR registry_modification_events
          WHERE (target_path contains 'Extensions' AND source_process is not 'chrome.exe') OR (target_registry_key contains 'ExtensionInstallForcelist' AND source_process is not authorized)
          ALERT
  - question: Is a statistically rare process writing to browser extension directories within the environment?
    context: While some legitimate installers might write to browser extension directories, these actions are typically performed by common, known processes. This question establishes a baseline of which processes normally perform these writes. It then flags any write operations from processes that are statistically uncommon or have never been seen performing this action before, helping to identify potentially malicious sideloading activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Windows Event ID 4657
      - User workstations
      - Domain Controllers (for Group Policy Objects)
      - Configuration management servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_write_events to extension_directories over 30_days
          CALCULATE frequency of each source_process
          WHERE source_process_frequency < 1%_of_endpoints
          ALERT
  - question: Can file or registry modifications related to browser extensions be classified as a 'suspicious sideload' by a machine learning model?
    context: This question leverages a classification model to distinguish between benign installation activities and malicious sideloading. The model analyzes features like the parent process, command-line arguments, and user context to make a determination. This provides a more nuanced detection capability than simple rule-based alerts, reducing false positives from legitimate software installers.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Windows Event ID 4657
      - User workstations
      - Domain Controllers (for Group Policy Objects)
      - Configuration management servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT process_execution_logs into Random_Forest_Classifier
          FEATURES: parent_process, command_line, user_context, target_path
          WHERE classification = 'suspicious_sideload'
          ALERT
  - question: Is a browser process spawning a command shell or scripting engine as a child process?
    context: Legitimate browser operations should not involve spawning processes like `cmd.exe`, `powershell.exe`, or `wscript.exe`. This parent-child relationship is a strong indicator that a malicious extension or exploited browser vulnerability is attempting to execute commands on the host system. This question creates a high-priority alert for this highly anomalous and suspicious activity.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Terminal servers / VDI environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events
          WHERE parent_process in ('chrome.exe', 'firefox.exe', 'msedge.exe') AND child_process in ('cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'rundll32.exe')
          ALERT
  - question: Has a browser spawned a child process that has a very low historical probability of occurring?
    context: This question uses a statistical approach to detect anomalous process creation events. By baselining normal parent-child relationships for browsers across the enterprise, it can identify when a browser spawns a new or very rare child process. This can help detect novel attack techniques or the use of living-off-the-land binaries (LOLBins) that might not be covered by a static symbolic rule.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Terminal servers / VDI environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events from browsers over time
          CALCULATE probability of each child_process
          WHERE current_child_process_probability < 0.001
          ALERT
  - question: Does a graph-based anomaly detection model identify a new or rare process execution subgraph originating from a browser?
    context: This question models process activity as a graph, where process lineage forms chains and trees. A machine learning model is trained on what normal process graphs look like. This allows it to detect not just a single anomalous parent-child relationship, but entire anomalous execution chains that may originate from a compromised browser, providing deeper context into the attacker's actions post-exploitation.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Terminal servers / VDI environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL process_lineage as graph
          TRAIN on benign activity
          DETECT new or rare subgraphs originating from browser_node
          ALERT
  - question: Is a browser making HTTP requests with a malformed User-Agent string, especially to newly-registered domains?
    context: Malicious extensions or tools often use custom, malformed, or missing User-Agent strings in their C2 communications, which distinguishes them from legitimate browser traffic. This question correlates this anomaly with another high-risk indicator: connections to domains that were registered very recently, as these are frequently used in attack campaigns.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Egress points to the internet
      - Network taps/sensors providing Zeek data
      - User workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http_logs
          WHERE user_agent is missing or malformed
          JOIN with dns_logs
          LOOKUP domain_registration_date
          WHERE registration_date < 30_days_ago
          ALERT
  - question: Is a host's browser traffic exceeding its normal baseline for data volume or connection count, or are its DNS queries showing high entropy?
    context: This question uses multiple statistical methods to find anomalous network behavior. A spike in data volume or connection frequency can indicate data exfiltration or beaconing. High entropy in DNS queries is a classic indicator of Domain Generation Algorithms (DGAs), which are used by malware to dynamically find C2 servers. Combining these metrics provides a robust method for detecting suspicious browser activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Egress points to the internet
      - Network taps/sensors providing Zeek data
      - User workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_logs
          CALCULATE 30-day baseline of outbound_bytes and connection_count per host
          ALERT if current_value > 99th_percentile.
          AND
          SEARCH dns_logs
          CALCULATE shannon_entropy of domain_names per host
          ALERT if entropy is high.
  - question: Does a time-series or clustering model identify a host's browser network activity as anomalous?
    context: This question applies machine learning to detect subtle deviations in network behavior. A time-series model can forecast expected traffic patterns and flag significant deviations, while clustering algorithms can group network connections based on their characteristics (like duration and bytes transferred) and identify connections that fall into 'outlier' clusters, which may represent malicious C2 traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Egress points to the internet
      - Network taps/sensors providing Zeek data
      - User workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FORECAST outbound_data_volume using LSTM model
          ALERT if observed > forecast.
          AND
          CLUSTER connections using K-Means on features (duration, bytes)
          ALERT if connection is in outlier_cluster.
  - question: Is a browser process initiating connections to internal servers on non-web ports like SMB, RDP, or SSH?
    context: Browsers are designed for web traffic (ports 80/443). When a browser process is observed connecting to internal systems on ports used for file sharing (SMB), remote desktop (RDP), or remote administration (SSH), it is a strong indication that an attacker is using the compromised browser to perform internal reconnaissance or attempt lateral movement within the network.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - User network segments
      - Server network segments
      - Internal network taps/sensors
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_logs
          WHERE source_vlan is user_vlan AND dest_vlan is server_vlan AND dest_port not in (80, 443)
          ENRICH with host_logs to confirm source_process is a browser
          ALERT
  - question: Is a workstation's browser making a statistically rare connection to an internal host or port?
    context: This question identifies anomalous internal connections by baselining what is 'normal' for each user or workstation. A connection from a user in one department to a server in another, on a port they have never used before, is statistically unusual. This approach helps to uncover unexpected internal network traversal that could be indicative of an adversary exploring the network from a compromised host.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - User network segments
      - Server network segments
      - Internal network taps/sensors
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH internal_connection_logs
          BASELINE normal (dest_ip, dest_port) pairs per user
          ALERT if new connection is not in baseline and is statistically rare across all users.
  - question: Does a graph-based community detection model identify a browser-initiated connection that unexpectedly bridges two distinct internal network communities?
    context: This question models the internal network as a graph of interconnected systems, with algorithms identifying distinct 'communities' of hosts that normally communicate (e.g., the marketing VLAN, the engineering servers). An alert is triggered when a browser process creates a connection that crosses the boundary between two communities in a way that violates the established communication patterns, indicating potential lateral movement.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - User network segments
      - Server network segments
      - Internal network taps/sensors
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL internal_network as a graph
          IDENTIFY communities using Louvain Modularity
          ALERT if browser_process creates an edge that bridges two communities unexpectedly.