name: T1110.004: Credential Stuffing
id: d8a3e79e-4340-4f3b-8f1e-9a2c1b4d0f6c
description: This playbook helps determine if an adversary is attempting credential stuffing. It provides investigative steps to analyze authentication logs and network traffic for key indicators. These include logins from IPs or User-Agents on threat intelligence lists, a high volume of failed logins from a single source across many accounts, impossible travel scenarios where a user logs in from geographically disparate locations in an impossible timeframe, and signs of automation in web requests to authentication endpoints. The goal is to detect and respond to attempts to gain unauthorized access by systematically trying stolen user credentials.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any authentication events where the source IP or User-Agent matches a known credential stuffing indicator from threat intelligence?
  context: This question aims to find direct evidence of an attack by matching observed authentication activity against high-confidence threat intelligence feeds that specialize in credential stuffing campaigns. A direct match is a strong indicator that the activity is malicious and part of a broader campaign, warranting immediate investigation and potential blocking of the source.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Zeek http.log
  - Externally-facing authentication services (VPN, OWA, M365)
  - Internet Gateway/Firewall
  - Web Proxies
  - Cloud Identity Provider (e.g., Azure AD)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH auth_logs and web_logs | JOIN on source_ip | LOOKUP threat_intel_feed on source_ip or user_agent | WHERE threat_intel_match = true | ALERT
- question: Which source IPs have a high ratio of login attempts matching threat intelligence indicators compared to their total attempts over a one-hour window?
  context: This question identifies attackers who are persistently using known malicious infrastructure. By calculating the ratio of IOC-matched attempts to total attempts, an analyst can distinguish between a benign user who coincidentally shares an IP with a past threat and a dedicated attacker whose traffic is dominated by malicious indicators. This helps prioritize alerts for IPs that are highly confident threats.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Zeek http.log
  - Externally-facing authentication services (VPN, OWA, M365)
  - Internet Gateway/Firewall
  - Web Proxies
  - Cloud Identity Provider (e.g., Azure AD)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH auth_logs | LOOKUP threat_intel on source_ip, user_agent | STATS count(logins) as total_logins, count(match_found) as matched_logins BY source_ip, time_window=1h | EVAL ratio = matched_logins / total_logins | WHERE ratio > 99th_percentile_baseline | ALERT
- question: Can a machine learning model identify new login attempts as being part of a credential stuffing campaign in real-time?
  context: This question leverages predictive analytics to proactively identify threats. By training a supervised model on features like ASN, geolocation, and User-Agent characteristics from historical data, the system can score new, unseen login attempts. This allows for the detection of novel threats that may not yet be on threat intelligence lists but exhibit malicious characteristics.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Zeek http.log
  - Externally-facing authentication services (VPN, OWA, M365)
  - Internet Gateway/Firewall
  - Web Proxies
  - Cloud Identity Provider (e.g., Azure AD)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM auth_logs | EXTRACT features (ASN, geo, UA_length, etc.) | LOOKUP threat_intel | INVOKE ML_model | WHERE prediction_probability > 0.90 | ALERT
- question: Has any single source IP generated a high number of failed logins across many unique accounts in a short time frame?
  context: This question seeks to identify the classic brute-force pattern of a credential stuffing attack. An attacker using a list of stolen credentials will typically generate a large volume of failures from one IP address against many different user accounts. This rule-based approach provides a clear, high-fidelity signal of an active attack, with severity increasing if any of the attempts succeed.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers
  - Authentication Servers (RADIUS, LDAP)
  - Cloud Identity Provider (e.g., Azure AD)
  - VPN Concentrators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_id=4625 | STATS distinct_count(username) as unique_users, count(logins) as failed_logins BY source_ip, time_window=5m | WHERE failed_logins > 100 AND unique_users > 20 | ALERT
- question: Are there source IPs exhibiting an anomalously high count and high entropy of unique usernames in failed login attempts?
  context: This question uses statistical measures to detect credential stuffing. High entropy in usernames indicates that the attacker is cycling through a diverse, non-sequential list of accounts, which is typical of using a credential dump. This is different from a targeted attack on a few accounts. It helps find attackers who are "spraying" credentials across the organization.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers
  - Authentication Servers (RADIUS, LDAP)
  - Cloud Identity Provider (e.g., Azure AD)
  - VPN Concentrators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_id=4625 | STATS distinct_count(username) as unique_users, shannon_entropy(username) as user_entropy BY source_ip, time_window=5m | WHERE unique_users > 98th_percentile AND user_entropy > baseline | ALERT
- question: Can clustering algorithms isolate anomalous source IPs based on login attempt features like volume, failure count, and unique account targets?
  context: This question applies unsupervised machine learning to find attacker IPs without pre-defined rules. By clustering IPs based on their login behavior, the algorithm can automatically separate the dense cluster of normal user activity from sparse, outlier clusters that represent attackers. This is effective for detecting unknown or evolving attack patterns.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers
  - Authentication Servers (RADIUS, LDAP)
  - Cloud Identity Provider (e.g., Azure AD)
  - VPN Concentrators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH auth_logs | STATS total_attempts, failure_count, success_count, distinct_count(username) BY source_ip, time_window=1h | APPLY DBSCAN_clustering | WHERE cluster = 'outlier' | ALERT
- question: Have any successful user logins occurred from a location that is physically impossible to reach given the time and location of the user's previous login?
  context: This question looks for "impossible travel" scenarios, a strong indicator of account compromise. If a user's credentials are used successfully in two distant locations within a short time, it implies that at least one of the logins is fraudulent. This is a high-confidence alert that an account has been taken over, likely as a result of a successful credential stuffing attack.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - VPN Concentrators
  - Cloud Identity Provider (e.g., Azure AD)
  - Internet Gateway/Firewall
  - Geolocation Intelligence Service
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_id=4624 | GEO_ENRICH source_ip | FOR_EACH user | COMPARE current_login_time, current_login_location WITH previous_login_time, previous_login_location | CALCULATE travel_speed | WHERE speed > 1000_kmh | ALERT
- question: Is a user successfully logging in from a location that is a statistical anomaly compared to their established history of login locations?
  context: This question goes beyond simple impossible travel by creating a behavioral baseline of normal login locations for each user. It uses the Mahalanobis distance to score how much a new login deviates from the user's typical geographic cluster. This can detect suspicious, though not necessarily impossible, logins, such as a US-based employee suddenly logging in from another country for the first time.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - VPN Concentrators
  - Cloud Identity Provider (e.g., Azure AD)
  - Internet Gateway/Firewall
  - Geolocation Intelligence Service
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_id=4624 | GEO_ENRICH source_ip | FOR_EACH user | CALCULATE mahalanobis_distance(current_location, historical_location_profile) | WHERE distance_score > 98th_percentile | ALERT
- question: Can a user-specific machine learning model classify a new login as an outlier based on features like location, time of day, and source ASN?
  context: This question uses a highly tailored anomaly detection model (One-Class SVM) for each user. This model learns a user's unique, multi-faceted login behavior, including time, location, and network origin. It can then flag any new login that deviates from this established pattern as an outlier, providing a sophisticated method for detecting account takeover.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - VPN Concentrators
  - Cloud Identity Provider (e.g., Azure AD)
  - Internet Gateway/Firewall
  - Geolocation Intelligence Service
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_id=4624 | EXTRACT features (geo, time_of_day, ASN) | FOR_EACH user | INVOKE one_class_svm_model(user_profile) | WHERE classification = 'outlier' | ALERT
- question: Are there web requests to authentication endpoints that show signs of automation, such as specific User-Agent strings or missing HTTP headers?
  context: This question focuses on identifying the tools used in credential stuffing. Automated scripts and tools often use characteristic User-Agent strings (e.g., 'curl', 'python-requests') or fail to include standard headers like 'Referer' that are present in normal browser traffic. Detecting these artifacts on login pages is a strong indication of an automated attack.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 4625
  - Web Servers hosting login pages
  - Web Application Firewalls (WAFs)
  - Reverse Proxies
  - Content Delivery Networks (CDNs)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH web_logs where url='/login' | WHERE user_agent in (automation_list) OR referer_header is null | CORRELATE with failed_logins by source_ip | ALERT
- question: Are any source IPs making requests to login pages with unnaturally consistent timing between requests or a high ratio of POST to GET requests?
  context: This question identifies automation by analyzing the timing and nature of web requests. Unlike humans, scripts often operate with machine-like precision, resulting in a very low variation in the time between requests. Furthermore, a tool focused only on trying credentials will have a high ratio of POST (login submission) to GET (page load) requests. These behaviors are strong signals of a scripted attack.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 4625
  - Web Servers hosting login pages
  - Web Application Firewalls (WAFs)
  - Reverse Proxies
  - Content Delivery Networks (CDNs)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH web_logs where url='/login' | STATS stddev(inter_request_time) as timing_variance, ratio(POST_requests, GET_requests) as post_get_ratio BY source_ip, time_window=1m | WHERE timing_variance < 50ms OR post_get_ratio > threshold | ALERT
- question: Has there been a sudden, anomalous spike in the overall volume of failed logins across the environment?
  context: This question takes a macroscopic view to detect large-scale attacks. A time-series anomaly detection model learns the normal rhythm of failed logins for the entire organization. A sudden, sharp spike that the model flags as an anomaly can be the first indication that a widespread credential stuffing campaign has begun, even before individual attacker IPs are identified.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 4625
  - Web Servers hosting login pages
  - Web Application Firewalls (WAFs)
  - Reverse Proxies
  - Content Delivery Networks (CDNs)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_id=4625 | TIME_SERIES count(logins) | INVOKE lstm_autoencoder_model | WHERE anomaly_score > threshold | ALERT