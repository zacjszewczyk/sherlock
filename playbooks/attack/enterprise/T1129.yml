name: T1129: Shared Modules
id: a8b1c2d3-e4f5-4a6b-8c7d-9e0f1a2b3c4d
description: |
  This playbook helps investigate whether an adversary has executed malicious code by loading a shared module (e.g., a DLL). It addresses the primary information requirement: "Has the adversary executed code by loading a malicious shared module?". The investigation focuses on several key indicators: 1) A module is loaded that matches a known malicious hash or is signed by an untrusted entity. 2) A module is loaded from a high-risk or statistically unusual location, such as a user-writable directory or network share, especially if it is unsigned. 3) A sensitive system process, like lsass.exe, loads a module that is not on its expected allow-list. 4) A module is loaded very shortly after it was created on disk, a pattern indicative of a dropper. 5) A process makes a network connection immediately after loading a suspicious module, suggesting C2 communication. By examining these indicators, analysts can detect various stages of attack execution involving shared modules.
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Was a loaded module identified as malicious based on its hash or signer by a threat intelligence feed?
    context: |
      This question seeks to find direct evidence of compromise by checking for known-bad indicators. Threat intelligence feeds provide lists of file hashes (SHA256) and digital signer names associated with malware. A match on either a hash or a signer for a loaded module is a high-confidence signal that a malicious shared module has been executed on the system.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 7
      - Enterprise Workstations and Servers, Domain Controllers
    range: last 90 days
    queries:
      - symbolic: QUERY Sysmon EID 7 WHERE (module_hash IN threat_intel_hashes) OR (signer IN threat_intel_signers)
  - question: Did a process load a module with a statistically rare digital signature across the enterprise?
    context: |
      This question aims to identify outliers that might represent unauthorized or malicious tools. Most legitimate software is signed by common, reputable vendors. A module signed by an entity that is extremely rare or has never been seen before in the environment is highly suspicious and could indicate an adversary is using custom-signed malware to evade detection.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 7
      - Enterprise Workstations and Servers, Domain Controllers
    range: last 90 days
    queries:
      - statistical: CALCULATE prevalence of all signers over 30 days. QUERY Sysmon EID 7 WHERE signer_prevalence < 1st_percentile.
  - question: Did a machine learning model classify a loaded module as malicious based on its metadata?
    context: |
      This question leverages a more sophisticated detection method that can identify novel threats. A machine learning model can analyze a combination of features—such as signature status, signer reputation, file name entropy, and file path—to calculate a 'maliciousness' score. This approach can catch threats that do not have a known hash or signature by identifying a suspicious combination of characteristics.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 7
      - Enterprise Workstations and Servers, Domain Controllers
    range: last 90 days
    queries:
      - machine_learning: INPUT module metadata (signature, signer, entropy, path) into classification model. ALERT if score > threshold.
  - question: Was an unsigned or recently created module loaded from a high-risk location like a UNC path or a user-writable directory?
    context: |
      This question targets a common adversary TTP. Legitimate applications typically load modules from protected directories like Program Files or System32. Loading modules from user-writable locations (%APPDATA%, %TEMP%), web server directories, or network UNC paths is highly irregular and often associated with malware dropping, lateral movement tools, or living-off-the-land techniques. An unsigned module from such a location is particularly suspicious.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - Enterprise Workstations and Servers, Network File Shares
    range: last 90 days
    queries:
      - symbolic: QUERY Sysmon EID 7 WHERE (image_path MATCHES high_risk_patterns) AND (is_signed = false OR signature_status != valid).
  - question: Did a process show a statistically significant deviation by loading an unusual number of modules from high-risk locations?
    context: |
      This question focuses on detecting behavioral anomalies. A process that typically loads modules from standard locations but suddenly begins loading numerous modules from temporary folders or network shares is exhibiting a significant change in behavior. This deviation from its established baseline can be a strong indicator of process injection or compromise.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - Enterprise Workstations and Servers, Network File Shares
    range: last 90 days
    queries:
      - statistical: BASELINE module load paths per process. CALCULATE z-score for loads from high-risk paths. ALERT if z-score > 3.0.
  - question: Did a time-series anomaly detection model detect a sudden spike in module loads from high-risk paths on a specific host?
    context: |
      This question focuses on the behavior of a host over time. Even if a host has some baseline level of module loads from non-standard paths, a sudden, sharp increase can indicate a new event, such as a malware infection being deployed or a lateral movement tool being executed. A time-series model can distinguish this spike from normal, historical fluctuations.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - Enterprise Workstations and Servers, Network File Shares
    range: last 90 days
    queries:
      - machine_learning: APPLY time-series model to count of high-risk path loads per host. ALERT on significant positive anomaly.
  - question: Was an unsigned module loaded from a directory not on the standard allow-list of system and program file paths?
    context: |
      This question uses an allow-listing strategy to identify suspicious activity. By defining a list of known-good directories where modules are expected to load from (e.g., C:\Windows\System32, C:\Program Files), any unsigned module loaded from a location not on this list is flagged for review. This is an effective way to reduce noise and focus on potentially malicious behavior.
    answer_sources:
      - Sysmon Event ID 7
      - Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - symbolic: QUERY Sysmon EID 7 WHERE (module_directory NOT IN allow_list) AND (is_signed = false).
  - question: Did a process exhibit a significant increase in the entropy of its module load paths, indicating it is loading from an unusually diverse set of locations?
    context: |
      This question looks for processes that behave erratically. Normal processes tend to load modules from a predictable and limited set of directories. A sudden increase in the diversity (or Shannon entropy) of these paths suggests the process is loading libraries from many different, and potentially unusual, locations. This can be a sign of process hollowing or other injection techniques where the process is co-opted for malicious activity.
    answer_sources:
      - Sysmon Event ID 7
      - Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - statistical: CALCULATE Shannon entropy of module load paths per process. ALERT if entropy increases > 2 standard deviations from baseline.
  - question: Was a module load event identified as an outlier by a clustering algorithm due to a rare process-path combination?
    context: |
      This question uses unsupervised machine learning to find "weird" activity that doesn't match any known pattern. By grouping all observed combinations of processes and their module load paths, a clustering algorithm can identify normal operational clusters. Any event that does not fit into a cluster is considered a "noise point" or outlier and represents a rare, un-baselined activity that warrants investigation.
    answer_sources:
      - Sysmon Event ID 7
      - Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - machine_learning: CLUSTER (process_name, module_load_path) vectors using DBSCAN. INVESTIGATE events classified as noise/outliers.
  - question: Was a module loaded within 5 minutes of being created on disk, especially if created by a browser, office app, or script interpreter?
    context: |
      This question targets the classic "dropper" pattern. Adversaries often use a legitimate application (like a web browser, Microsoft Word, or PowerShell) to write a malicious DLL to disk and then immediately execute it via another process. The very short time delta between the file creation and the module load is a key forensic artifact of this technique.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - symbolic: CORRELATE Sysmon EID 11 (file create) and EID 7 (image load) for the same file on the same host within 5 minutes. RAISE severity if creating process is high-risk (browser, script engine, etc.).
  - question: Did a module load event occur with a time-to-load (from file creation) that is in the 1st percentile, indicating an unusually fast write-then-execute pattern?
    context: |
      This question quantifies the "dropper" pattern across the environment. By analyzing the time difference between all file creations and subsequent module loads, we can establish a distribution. Events that fall in the lowest percentile (i.e., the fastest write-to-load times) are the most anomalous and most likely to be automated malicious activity, as opposed to legitimate software installations.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - statistical: CALCULATE time delta between EID 11 and EID 7 for all DLLs. FLAG loads where delta is in the 1st percentile.
  - question: Was a sequence of events involving file creation and module loading flagged as anomalous by a sequence analysis model?
    context: |
      This question analyzes the narrative of events to find malicious stories. A model trained on normal event sequences can detect an improbable chain of events, such as chrome.exe creating a file, which is then immediately loaded by svchost.exe. Such a sequence has a very low probability of occurring during normal operations and is a strong indicator of compromise.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - machine_learning: ANALYZE sequence of Sysmon events (process create -> file create -> image load) using a sequence model (e.g., HMM). ALERT on low probability sequences.
  - question: Did a highly sensitive process like lsass.exe or csrss.exe load a module that is not on its strict, pre-defined allow-list?
    context: |
      This question is critical for detecting credential access attempts. Core system processes like LSASS (Local Security Authority Subsystem Service) have a static, predictable set of modules they should ever load. Any deviation from this "golden image" allow-list, such as loading an unknown DLL, is a major red flag and could indicate an adversary is attempting to dump credentials using a tool like Mimikatz.
    answer_sources:
      - Sysmon Event ID 7
      - Windows Security Event ID 4688
      - Critical Servers (e.g., Domain Controllers, Certificate Authorities), Enterprise Workstations
    range: last 90 days
    queries:
      - symbolic: QUERY Sysmon EID 7 where process is 'lsass.exe' or 'csrss.exe' AND loaded_module_path NOT IN golden_image_allow_list.
  - question: Did a sensitive process like svchost.exe load a module that is rarely or has never been seen loaded by that process before?
    context: |
      This question aims to detect DLL injection into common service hosts. While svchost.exe hosts many different services and loads a wider variety of DLLs than lsass.exe, its behavior is still generally predictable. By baselining the modules loaded by svchost.exe across the environment, we can flag any instance where it loads a rare or first-seen module, which may indicate a malicious service or injected code.
    answer_sources:
      - Sysmon Event ID 7
      - Windows Security Event ID 4688
      - Critical Servers (e.g., Domain Controllers, Certificate Authorities), Enterprise Workstations
    range: last 90 days
    queries:
      - statistical: BASELINE module load frequency for svchost.exe. ALERT if a loaded module's frequency is < 5th percentile or new.
  - question: Did a module load by a sensitive process generate a high reconstruction error from an autoencoder, indicating it doesn't conform to normal patterns?
    context: |
      This question uses an advanced ML technique to learn the "normal" characteristics of modules loaded by a sensitive process. An autoencoder is trained on feature vectors (path, signature, etc.) of known-good modules. When a malicious module is loaded (e.g., via injection), its features will not match the learned pattern, causing the model to fail at reconstructing it accurately. This high "reconstruction error" serves as a high-fidelity alert for anomalous activity.
    answer_sources:
      - Sysmon Event ID 7
      - Windows Security Event ID 4688
      - Critical Servers (e.g., Domain Controllers, Certificate Authorities), Enterprise Workstations
    range: last 90 days
    queries:
      - machine_learning: INPUT module load features into process-specific autoencoder. ALERT if reconstruction_error > threshold.
  - question: Did a process make an external network connection within 2 minutes of loading an unsigned or high-risk module?
    context: |
      This question correlates module loading with network activity to detect Command and Control (C2) behavior. Loading a suspicious module is the first step; the second is often for that module to "call home." By linking a suspicious module load event with a subsequent outbound network connection from the same process, we can identify potential malware beaconing or data exfiltration with a high degree of confidence.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points (Firewall, Proxy), Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - symbolic: CORRELATE Sysmon EID 7 (suspicious load) with Sysmon EID 3 (network connect) from same process within 2 minutes to non-private IP. ENRICH with Zeek logs.
  - question: Following a suspicious module load, did the host connect to a destination with a statistically rare Autonomous System Number (ASN) or domain suffix?
    context: |
      This question adds crucial context to a network connection following a suspicious module load. Most legitimate business traffic goes to major cloud providers and well-known ASNs. A connection to a rare, obscure ASN or a domain with an unusual top-level domain (e.g., .xyz, .club, .top) is a strong indicator that the destination is not a legitimate service and is likely part of an adversary's C2 infrastructure.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points (Firewall, Proxy), Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - statistical: ON suspicious load alert, query subsequent connections. CALCULATE rarity of destination ASN and domain suffix. FLAG connections to rare destinations.
  - question: Following a suspicious module load, did the process's network activity significantly deviate from its forecasted behavior?
    context: |
      This question establishes a baseline of normal network behavior for each process and looks for deviations. A process might normally have no network activity, or very little. If, after loading a suspicious module, that process suddenly initiates a large number of connections or starts communicating in a way that is uncharacteristic for it, a time-series model can flag this spike as an anomaly indicative of malicious C2 activity.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points (Firewall, Proxy), Enterprise Workstations and Servers
    range: last 90 days
    queries:
      - machine_learning: FORECAST network connection volume/diversity per process. ON suspicious load, ALERT if actual activity significantly exceeds forecast.