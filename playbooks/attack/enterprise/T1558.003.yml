name: T1558.003: Kerberoasting
id: a6c3d5e2-1b9f-4d8e-a2b1-c7f8a9b0c1d2
description: This playbook helps determine if an adversary is attempting to steal credentials using Kerberoasting. It provides investigative steps to detect this activity by looking for signatures of known Kerberoasting tools in process execution logs, monitoring for Kerberos TGS service ticket requests that use weak RC4 encryption (0x17), identifying single accounts making an anomalous number of unique service ticket requests in a short time, and detecting requests for high-value or unusual Service Principal Names (SPNs).
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any process creation events that match signatures of known Kerberoasting tools?
  context: This question aims to identify the direct execution of common Kerberoasting tools (e.g., Rubeus, Invoke-Kerberoast). Adversaries often use these specific tools to request service tickets for accounts with Service Principal Names (SPNs). Detecting their execution via process names or specific command-line arguments is a high-fidelity indicator of a Kerberoasting attempt.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain-joined endpoints, particularly workstations used by developers, system administrators, and security analysts, and member servers with connectivity to Domain Controllers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (process_logs) | WHERE process_name IN ('rubeus.exe', 'asktgs.exe') OR command_line CONTAINS ('kerberoast', 'asktgs', '-spn', 'invoke-kerberoast')
- question: Have any common processes, like PowerShell or cmd.exe, been executed with unusually complex or high-entropy command-line arguments, potentially indicating obfuscated Kerberoasting activity?
  context: Adversaries often hide Kerberoasting activity within legitimate processes like PowerShell to evade simple signature-based detection. This question focuses on identifying anomalous command-line arguments by measuring their entropy. A sudden spike in entropy for a common process, especially when followed by network connections to a Domain Controller on port 88, can reveal obfuscated or fileless tool execution.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain-joined endpoints, particularly workstations used by developers, system administrators, and security analysts, and member servers with connectivity to Domain Controllers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (process_logs) | WHERE process_name IN ('powershell.exe', 'cmd.exe') | CALCULATE command_line_entropy | COMPARE entropy to historical_baseline (95th percentile) | CORRELATE with network_connections to DC on port 88
- question: Can we identify potential Kerberoasting attempts by using a machine learning model to classify process command-line arguments as malicious?
  context: This question leverages a more advanced, model-based approach to detection. By training a classification model on features extracted from command-line arguments (like n-grams, character frequencies, etc.), it's possible to identify novel or heavily obfuscated Kerberoasting commands that might be missed by signature or simple entropy checks. A high confidence score from the model indicates a command that strongly resembles known malicious patterns.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain-joined endpoints, particularly workstations used by developers, system administrators, and security analysts, and member servers with connectivity to Domain Controllers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (process_logs) | PIPE events to ML_model | FILTER model_confidence_score > 0.9 | ALERT on high_confidence_events
- question: Have any Kerberos service tickets (TGS) been requested using the weak RC4-HMAC encryption type by accounts not explicitly approved for legacy compatibility?
  context: Kerberoasting relies on cracking service tickets offline. Tickets encrypted with RC4-HMAC (0x17) are significantly weaker and easier to crack than modern AES types. This question seeks to find TGS requests using this deprecated encryption type, which is a strong indicator of a Kerberoasting attempt, especially when the requesting account has no legitimate reason to use it.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - All Domain Controllers within the Active Directory forest.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | WHERE event_id = 4769 AND encryption_type = '0x17' AND account_name NOT IN (legacy_rc4_allowed_group)
- question: Has any user account shown a statistically significant increase in the proportion of RC4-encrypted service ticket requests compared to their normal behavior?
  context: This question uses behavioral analysis to detect deviations from a user's established baseline. A legitimate account might occasionally use RC4 for a specific legacy service, but an adversary performing Kerberoasting will likely generate a sudden burst of RC4 requests. Alerting on a significant deviation from the norm helps to spot compromised accounts being used for this attack.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - All Domain Controllers within the Active Directory forest.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | FOR each account | CALCULATE baseline_rc4_proportion (30d) | MONITOR for current_rc4_proportion > (baseline + 4 * stdev) OR any_rc4_request if baseline is 0
- question: Can we identify outlier accounts whose Kerberos ticket request patterns (encryption types, service counts, timing) differ significantly from their peers?
  context: This question uses unsupervised machine learning to find anomalous accounts without pre-defining what 'bad' looks like. By clustering accounts based on their Kerberos activity, accounts being used for Kerberoasting will likely form small, distinct clusters or be identified as outliers. These outliers often exhibit a high ratio of RC4 requests and requests for a large number of unique services, patterns that are atypical for normal users.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - All Domain Controllers within the Active Directory forest.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | GROUP by account | FEATURE_EXTRACT (encryption_types, service_counts, time_patterns) | APPLY clustering_algorithm (DBSCAN) | INVESTIGATE outlier_clusters
- question: Has any single source IP address or account requested an unusually high number of unique service tickets in a very short time frame?
  context: A key feature of Kerberoasting is the rapid enumeration and request of tickets for many different SPNs. This question aims to detect this brute-force behavior by setting a fixed threshold. While normal activity might involve a few service ticket requests, an adversary will request dozens or hundreds in a short period, which would trigger this rule.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers and network monitoring points capturing traffic to and from Domain Controllers, such as network taps or SPAN ports.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | TIME_WINDOW (5m) | GROUP by client_ip | COUNT distinct service_name | WHERE distinct_service_count > 20
- question: Has any source account exceeded its own historical baseline for the maximum number of unique service tickets requested within a 5-minute window?
  context: This question refines the fixed-threshold approach by using a dynamic, per-account baseline. Some service accounts or administrative users may legitimately request more tickets than a typical user. By comparing current activity to the account's own 99th percentile, this method can detect anomalous spikes in activity for any account, reducing false positives from normally 'chatty' accounts.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers and network monitoring points capturing traffic to and from Domain Controllers, such as network taps or SPAN ports.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | FOR each account | CALCULATE baseline_max_services (30d, 99th percentile, 5m window) | ALERT if current_5m_count > baseline_max_services
- question: Is the current volume of unique TGS requests from any account statistically improbable when compared to a time-series forecast of its normal behavior?
  context: This question employs advanced time-series analysis to detect subtle anomalies. A forecasting model learns the typical rhythm and patterns of an account's service requests over time. An alert is generated only when the observed activity significantly deviates from the model's prediction, including its expected range of variance. This can catch slower, more methodical Kerberoasting attempts that might not trigger simple threshold-based alerts.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers and network monitoring points capturing traffic to and from Domain Controllers, such as network taps or SPAN ports.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | FOR each account | CREATE time_series_model (Prophet/LSTM) of unique_TGS_requests_per_minute | ALERT if observed_count > forecast_upper_bound
- question: Has a service ticket been requested for a high-value or sensitive SPN (e.g., for a SQL admin, Exchange service, or privileged account) by a user who is not on an approved access list?
  context: Adversaries performing Kerberoasting specifically target accounts with elevated privileges, as cracking their service tickets yields powerful credentials. This question focuses on protecting these critical assets by creating a watchlist of SPNs tied to privileged accounts. Any request for these SPNs from an unauthorized user is a high-fidelity indicator of a targeted attack.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers, and servers hosting high-value services (e.g., SQL Servers, SAP instances, SharePoint farms) which have registered SPNs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | WHERE service_name IN (high_value_spn_watchlist) AND account_name NOT IN (approved_access_list)
- question: Has any user requested a service ticket for an SPN that they have never accessed before, where that SPN is also one of the rarest accessed across the entire organization?
  context: This question identifies unusual behavior by combining two factors: novelty for the user and rarity within the organization. A user suddenly accessing a service they've never used before is suspicious. If that service is also one that very few people ever access (e.g., a specific database admin service), the combination is a strong signal of potential reconnaissance or a Kerberoasting attempt against an unusual but potentially valuable target.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers, and servers hosting high-value services (e.g., SQL Servers, SAP instances, SharePoint farms) which have registered SPNs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | CALCULATE population_spn_rarity | FOR each user | CHECK if requested_spn is new for user AND is_rare (top 5%) | ALERT on match
- question: Can we detect anomalous user-to-service access by using a graph-based model to predict which SPN requests are unlikely or improbable?
  context: This question models the relationships between users and the services they access as a graph. A link prediction model can learn the 'rules' of this graph, understanding which connections are typical (e.g., finance users access finance servers). When a new, unexpected connection is observed (e.g., a finance user requests a ticket for a developer tool server), the model will assign it a low probability score, flagging it as a highly unusual event worthy of investigation. This can uncover lateral movement or targeted Kerberoasting.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers, and servers hosting high-value services (e.g., SQL Servers, SAP instances, SharePoint farms) which have registered SPNs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: source IN (kerberos_logs) | BUILD user_spn_graph | TRAIN link_prediction_model | FOR each new TGS_request | SCORE request_probability | ALERT on low_probability_score