name: T1602.002: Network Device Configuration Dump
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate if an adversary is attempting to collect network device configurations. Adversaries may dump configuration files from network devices to obtain credentials, network topology, and other sensitive information. This can be achieved by running known reconnaissance tools from a management host, using standard network utilities from unauthorized workstations, transferring configuration files over unencrypted protocols, connecting to management ports from unauthorized sources, or using a single compromised account to connect to a large number of devices in a short time frame.
type: technique
related:
- TA0009: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
- question: Are known network configuration dumping tools being executed on management hosts, followed by connections to malicious C2 servers?
  context: This is a high-fidelity indicator of compromise. The execution of a tool with a known malicious hash, followed closely by network traffic to a known command and control (C2) server, strongly suggests that a compromised host is actively being used to exfiltrate network device configurations.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log from Management jump boxes, DNS resolvers, Internet gateway firewall, and Network device management interfaces.
  range: last 90 days
  queries:
  - symbolic: |
      SEARCH Windows Event ID 4688
      WHERE process_hash IN (threat_intel_feed_of_dumping_tools)
      FOR_EACH event:
        SEARCH (Zeek conn.log OR Zeek dns.log)
        WHERE source_ip = event.source_ip
          AND timestamp BETWEEN event.timestamp AND event.timestamp + 5_minutes
          AND (destination_ip IN (malicious_ips) OR destination_domain IN (malicious_domains))
        RETURN results
- question: Are hosts on network management subnets making DNS requests with unusually high entropy, potentially indicating DGA-based C2 for data exfiltration?
  context: High entropy in domain names is a common characteristic of Domain Generation Algorithms (DGAs), which malware uses to locate C2 servers. Analyzing DNS query entropy from critical subnets, like those used for network management, can help uncover covert exfiltration channels used after a configuration dump.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log from Management jump boxes, DNS resolvers, Internet gateway firewall, and Network device management interfaces.
  range: last 90 days
  queries:
  - statistical: |
      SEARCH Zeek dns.log
      WHERE source_ip_subnet IN (network_management_subnets)
      CALCULATE entropy(query_domain)
      GROUP BY source_ip
      COMPARE current_entropy to historical_baseline_95th_percentile(source_ip)
      RETURN source_ip WHERE current_entropy > baseline
- question: Can a machine learning model identify network connections from management systems as malicious exfiltration based on their characteristics?
  context: Machine learning models can identify complex, non-obvious patterns of malicious behavior that rule-based systems might miss. By analyzing multiple features of a network connection (e.g., data volume, destination reputation, JA3 hash), a classifier can provide a probabilistic score of maliciousness, helping to detect novel or evasive exfiltration techniques.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log from Management jump boxes, DNS resolvers, Internet gateway firewall, and Network device management interfaces.
  range: last 90 days
  queries:
  - machine_learning: |
      INPUT Zeek conn.log data from management systems
      FEATURES = [data_volume, dest_ip_reputation, dest_port, ja3_hash, duration]
      APPLY trained_classification_model(FEATURES)
      RETURN connections WHERE model_prediction == 'malicious' AND probability > 0.9
- question: Are network management utilities being run from unauthorized workstations to interact with network devices?
  context: Network management utilities (like plink.exe, tftp.exe, scp) are powerful tools. Their use from a standard user workstation or an application server, rather than a designated administrative host, is highly suspicious and could indicate a compromised host being pivoted to access network infrastructure.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1, Zeek conn.log from General user workstations, Application servers, and Network device management interfaces.
  range: last 90 days
  queries:
  - symbolic: |
      SEARCH (Windows Event ID 4688 OR Sysmon Event ID 1)
      WHERE command_line CONTAINS ('show running-config', 'copy running-config', 'tftp.exe', 'plink.exe')
        AND source_host NOT IN (authorized_admin_hosts)
      RETURN alerts
- question: Are any hosts exhibiting an abnormally high frequency of network management utility usage compared to their role-based baseline?
  context: While an administrator might use network management tools, automated scripts used by an adversary will often use them far more frequently than a human. By establishing a baseline of normal usage for different host roles (e.g., developer vs. admin), statistical outliers that could represent malicious automation can be identified.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1, Zeek conn.log from General user workstations, Application servers, and Network device management interfaces.
  range: last 90 days
  queries:
  - statistical: |
      CALCULATE frequency of network_management_utility_commands per host
      ESTABLISH baseline_frequency_per_host_role
      RETURN host WHERE current_frequency > (mean_for_role + 3 * std_dev_for_role)
- question: Can an anomaly detection model identify command-line executions that are structurally different from normal administrative activity?
  context: Adversaries may attempt to obfuscate their command-line activity to evade simple keyword-based detections. An anomaly detection model can learn the typical structure, length, and patterns of legitimate commands and flag significant deviations that may represent malicious or obfuscated command-line invocations.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1, Zeek conn.log from General user workstations, Application servers, and Network device management interfaces.
  range: last 90 days
  queries:
  - machine_learning: |
      INPUT command_line_logs
      FEATURES = [command_length, character_distribution, ip_address_count, keyword_count]
      APPLY trained_anomaly_detection_model(FEATURES)
      RETURN commands flagged as anomalous
- question: Are files containing sensitive configuration keywords being transferred over unencrypted protocols?
  context: Network device configurations contain highly sensitive data, including passwords, keys, and network secrets. The transfer of this data over unencrypted protocols like FTP, TFTP, or HTTP is a major security risk and a strong indicator that an adversary is exfiltrating configuration files.
  answer_sources:
  - Zeek files.log, Zeek ftp.log, Zeek http.log, Zeek conn.log from Network backbone sensors, Unencrypted file transfer servers (FTP/TFTP), and Core network switches.
  range: last 90 days
  queries:
  - symbolic: |
      SEARCH Zeek files.log for files transferred via unencrypted protocols (FTP, HTTP, TFTP)
      FOR_EACH file:
        SCAN file_content for regex ('enable secret', 'password', 'snmp-server community', 'crypto key')
        RETURN file and connection details on match
- question: Are files transferred over unencrypted protocols showing an unusually high 'sensitivity score' based on the presence of configuration-related keywords?
  context: Instead of just looking for a single keyword, this method calculates a score based on the frequency and variety of sensitive keywords. This can help prioritize alerts and detect files that are highly likely to be configuration dumps, even if they don't contain one specific high-confidence term, by flagging those that exceed a baseline sensitivity score.
  answer_sources:
  - Zeek files.log, Zeek ftp.log, Zeek http.log, Zeek conn.log from Network backbone sensors, Unencrypted file transfer servers (FTP/TFTP), and Core network switches.
  range: last 90 days
  queries:
  - statistical: |
      FOR_EACH file in Zeek files.log (unencrypted):
        CALCULATE sensitivity_score based on frequency of config_keywords
      ESTABLISH baseline score for typical files
      RETURN files WHERE score > 99th_percentile_of_baseline
- question: Can a machine learning classifier identify network device configuration files being transferred over unencrypted protocols, even if they are partial or obfuscated?
  context: Adversaries may exfiltrate only parts of a configuration file or attempt to obfuscate keywords. A Naive Bayes classifier, trained on the statistical properties of language in legitimate config files versus benign text, can identify these partial or altered configuration dumps that might be missed by simple keyword matching.
  answer_sources:
  - Zeek files.log, Zeek ftp.log, Zeek http.log, Zeek conn.log from Network backbone sensors, Unencrypted file transfer servers (FTP/TFTP), and Core network switches.
  range: last 90 days
  queries:
  - machine_learning: |
      FOR_EACH file_content from unencrypted transfers:
        APPLY trained_naive_bayes_classifier(file_content)
        RETURN file WHERE classification == 'config_file'
- question: Are unauthorized hosts connecting to network device management ports?
  context: Access to network device management ports (e.g., SSH, Telnet, SNMP) should be strictly controlled. A connection from any host not on the approved list of management stations is a clear policy violation and a strong indicator of either misconfiguration or an adversary attempting to gain unauthorized access.
  answer_sources:
  - Zeek conn.log, Zeek snmp.log, Firewall Logs from Network device management interfaces, Core network switches, Internet gateway, and Firewall concentrators.
  range: last 90 days
  queries:
  - symbolic: |
      SEARCH (Zeek conn.log OR Firewall Logs)
      WHERE destination_port IN (22, 23, 161)
        AND destination_ip IN (network_device_range)
        AND source_ip NOT IN (authorized_management_hosts)
      RETURN alerts
- question: Is there a statistically significant spike in connection counts to network device management ports compared to the historical baseline?
  context: Automated scanning or configuration dumping will often result in a burst of connections that is abnormal compared to routine human administrative activity. By baselining the normal connection rate for each device, a sudden spike exceeding a statistical threshold (e.g., 3 standard deviations) can signal malicious activity.
  answer_sources:
  - Zeek conn.log, Zeek snmp.log, Firewall Logs from Network device management interfaces, Core network switches, Internet gateway, and Firewall concentrators.
  range: last 90 days
  queries:
  - statistical: |
      FOR_EACH network_device:
        CREATE baseline of hourly connection counts to management ports
      ALERT if current_connection_count > (moving_average + 3 * std_dev) for that time window
- question: Is the volume of data transferred to or from network device management ports significantly deviating from time-series forecasts, suggesting a bulk data dump?
  context: Dumping a full device configuration involves transferring a much larger volume of data than a typical interactive management session. Time-series forecasting models like ARIMA can predict the expected data volume for a given time. An observed volume that significantly exceeds the forecast's confidence interval indicates an anomalously large data transfer, consistent with a configuration dump.
  answer_sources:
  - Zeek conn.log, Zeek snmp.log, Firewall Logs from Network device management interfaces, Core network switches, Internet gateway, and Firewall concentrators.
  range: last 90 days
  queries:
  - machine_learning: |
      APPLY ARIMA model to time-series of data volume (orig_bytes + resp_bytes) to management ports
      ALERT when observed_volume significantly exceeds forecasted_volume_confidence_interval
- question: Is a single source IP connecting to an unusually large number of distinct network devices in a short time, indicating automated fan-out activity?
  context: An adversary who has compromised a host will often use it to automatically scan or connect to a wide range of other devices on the network. A simple rule that counts the number of distinct devices a single source connects to within a short window (e.g., >10 devices in 5 minutes) is an effective way to detect this "fan-out" behavior.
  answer_sources:
  - Zeek ssh.log, Windows Event ID 4624, Zeek conn.log, RADIUS Authentication Logs from RADIUS/TACACS+ authentication servers, Management jump boxes, Network device management interfaces, and Domain Controllers.
  range: last 90 days
  queries:
  - symbolic: |
      IN a 5-minute window:
        COUNT distinct destination_ips (in network_device_range on port 22/23) per source_ip
      ALERT if count > 10 AND source_ip NOT IN (monitoring_tools_list)
- question: Is any user account or source IP authenticating to a number of distinct devices that is a statistical outlier (e.g., in the 99th percentile)?
  context: While some administrators or tools may legitimately connect to many devices, their behavior is often predictable. By analyzing the distribution of "device fan-out" across all users and source IPs, it's possible to identify outliers whose behavior is highly unusual (e.g., in the top 1% of all activity) and warrants investigation for compromise.
  answer_sources:
  - Zeek ssh.log, Windows Event ID 4624, Zeek conn.log, RADIUS Authentication Logs from RADIUS/TACACS+ authentication servers, Management jump boxes, Network device management interfaces, and Domain Controllers.
  range: last 90 days
  queries:
  - statistical: |
      FOR_EACH user/source_ip:
        CALCULATE number of distinct devices authenticated to per hour
      ESTABLISH baseline distribution for this 'device fan-out' metric
      ALERT on any user/IP in the 99th percentile of the distribution
- question: Can a clustering algorithm identify anomalous authentication patterns, such as a single compromised account performing fan-out activity, by distinguishing them from normal administrative behavior?
  context: Clustering algorithms like DBSCAN can automatically group similar behaviors. Normal administrative activity (e.g., a network team managing a specific set of routers) will form dense clusters. A single compromised account being used to scan broadly across the network will not fit into any existing cluster and will be identified as noise or a sparse, anomalous cluster.
  answer_sources:
  - Zeek ssh.log, Windows Event ID 4624, Zeek conn.log, RADIUS Authentication Logs from RADIUS/TACACS+ authentication servers, Management jump boxes, Network device management interfaces, and Domain Controllers.
  range: last 90 days
  queries:
  - machine_learning: |
      INPUT authentication events with features (source_IP, destination_IP_prefix, user_account)
      APPLY DBSCAN clustering algorithm
      INVESTIGATE points identified as noise or belonging to small, sparse clusters