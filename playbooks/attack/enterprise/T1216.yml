name: 'T1216: System Script Proxy Execution'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: 'This playbook focuses on detecting adversaries attempting to evade defenses by using legitimate system script proxies (like cscript.exe, pubprn.vbs) to execute malicious code. It provides investigative steps to identify this activity by analyzing process command lines for known indicators from threat intelligence, matching against malicious patterns, observing unusual child process creation, detecting rare outbound network connections, and identifying script execution from high-risk or uncommon file paths.'
type: 'technique'
related:
  - 'TA0005: Defense Evasion'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: 'Is a script proxy process (e.g., cscript.exe, pubprn.vbs) being executed with a command line containing an indicator (URL, IP, domain, hash) from a high-confidence threat intelligence feed?'
    context: 'This question aims to find the most direct evidence of malicious activity by matching command-line arguments against known-bad indicators. A match provides strong evidence that a legitimate system tool is being co-opted to download, execute, or communicate with malicious infrastructure, a common defense evasion technique.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Application Servers'
      - 'Jump Servers'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events | parse command_line for indicators (urls, domains, ips, hashes) | join indicators with threat_intelligence_feed | where process_name in (''cscript.exe'', ''wscript.exe'', ''forfiles.exe'', ''pubprn.vbs'', ''mshta.exe'')'
  - question: 'Is a script proxy executing with a command line containing a domain or IP that is statistically rare within the enterprise?'
    context: 'This question helps uncover previously unknown malicious infrastructure. Adversaries often use new or unique domains/IPs for their operations. By identifying script proxy executions involving domains or IPs that have rarely or never been seen in the environment, analysts can flag suspicious activity that lacks a known-bad signature.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Application Servers'
      - 'Jump Servers'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events where process_name is script_proxy | parse command_line for domain/ip | calculate frequency of domain/ip over 90 days | filter for frequency < 5th percentile'
  - question: 'Can a machine learning model classify a script proxy execution as malicious based on its command-line features and context?'
    context: 'This question leverages machine learning to build a predictive model for detecting malicious script proxy executions. By training on features like the presence and type of IOC, threat intelligence reputation, script name, and user context, the model can identify complex patterns that are difficult to define with simple rules, thus detecting novel or sophisticated attacks.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Application Servers'
      - 'Jump Servers'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - 'run ML_model on process_creation_events where process_name is script_proxy | input_features: has_ioc, ioc_type, ioc_reputation, script_name, user_context | alert if prediction_score > 0.85'
  - question: 'Is a script proxy being created with a command-line structure that matches a known malicious regular expression pattern?'
    context: 'This question focuses on identifying specific adversary TTPs (Tactics, Techniques, and Procedures) that have been codified into regular expression patterns. For example, the pubprn.vbs script can be used to execute remote scripts using a distinct `script:http://...` syntax. Matching these patterns provides high-fidelity alerts for known attack methods.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Application Servers'
      - 'systems enforcing Application Control (e.g., AppLocker)'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events | filter command_line matches malicious_regex_library for T1216 | alert on match'
  - question: 'Does the command line of a script proxy execution exhibit unusually high entropy, suggesting obfuscation?'
    context: 'Adversaries often obfuscate or encode commands to evade signature-based detection. This question uses Shannon entropy as a measure of randomness to detect such obfuscation. A command line with abnormally high entropy compared to a baseline of legitimate activity is a strong indicator of a malicious, hidden payload.'
    answersources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Application Servers'
      - 'systems enforcing Application Control (e.g., AppLocker)'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events where process_name is script_proxy | calculate shannon_entropy of command_line_arguments | filter entropy > 95th percentile of baseline'
  - question: 'Can a machine learning model classify a script proxy command line as malicious based on its structural and content-based features?'
    context: 'This question uses a machine learning classifier to distinguish between malicious and benign command lines. By analyzing a combination of features like length, character counts, presence of indicators, and entropy, the model can learn the subtle characteristics of malicious commands, enabling the detection of novel attack variations.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Application Servers'
      - 'systems enforcing Application Control (e.g., AppLocker)'
    range: 'last 90 days'
    queries:
      - 'run ML_model on script_proxy command_lines | input_features: length, special_chars, has_url_ip, arg_count, entropy | alert if classified as malicious with high confidence'
  - question: 'Did a script proxy process (e.g., wscript.exe) spawn a child process that is not on an established allow-list of legitimate child processes?'
    context: 'This question helps detect when a script proxy is used to launch a subsequent malicious stage. Legitimate scripts typically have predictable child processes. By maintaining an allow-list of normal behavior, any deviation, such as spawning `powershell.exe`, `cmd.exe`, or an unsigned binary in a temp directory, can be immediately flagged as highly suspicious.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Jump Servers'
      - 'Development/Test Environment Servers'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events | identify parent_child_relationships where parent is script_proxy | alert if child_process not in (allow_list) or child_process in (high_risk_list)'
  - question: 'Has a script proxy spawned a child process that is statistically rare for that specific host or its peer group?'
    context: 'This question moves beyond a global allow-list to a more context-aware, statistical approach. A parent-child process relationship might be legitimate in one context (e.g., a developer machine) but highly anomalous in another (e.g., a domain controller). By baselining normal behavior on a per-host or per-peer-group basis, this method can detect contextually inappropriate activity.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Jump Servers'
      - 'Development/Test Environment Servers'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events | build baseline of parent(script_proxy)-child pairs per host | alert if new pair frequency is < 1st percentile for host or peer_group'
  - question: 'Has a host''s script proxy process behavior deviated significantly from its normal, clustered behavior profile?'
    context: 'This question uses unsupervised machine learning to detect anomalous system behavior. By clustering hosts with similar process relationship patterns, the model can identify when a single host begins to behave differently from its peers or its own historical norm. This shift, identified as an outlier, can indicate a compromise without relying on predefined rules or signatures.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Jump Servers'
      - 'Development/Test Environment Servers'
    range: 'last 90 days'
    queries:
      - 'run clustering_model on hosts using process_relationship features | features: child_processes, file_paths, signature_status | alert if host becomes an outlier or moves to a new cluster'
  - question: 'Did a script proxy process, or its immediate child, initiate an outbound network connection to a known malicious IP or domain?'
    context: 'This question aims to detect command and control (C2) or data exfiltration activity by correlating process execution with network logs. By linking a script proxy process to an outbound connection and checking the destination against a C2 blocklist, analysts can find strong evidence of a successful compromise.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Network Egress Points (Firewalls, Proxies)'
      - 'DNS Resolvers'
      - 'User Endpoints'
      - 'Internet-facing Servers'
    range: 'last 90 days'
    queries:
      - 'correlate process_events with network_logs by process_guid/timestamp | join with dns_logs | alert if destination_ip or destination_domain is on C2_blocklist'
  - question: 'Did a script proxy process initiate a network connection to a destination IP or domain that is exceptionally rare for the enterprise?'
    context: 'This question helps uncover C2 channels that are not yet on threat intelligence feeds. Adversary infrastructure is often new and not widely connected to. By identifying connections from script proxies to destinations that are in the bottom percentile of access frequency across the entire enterprise, analysts can pinpoint suspicious communications that warrant investigation.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Network Egress Points (Firewalls, Proxies)'
      - 'DNS Resolvers'
      - 'User Endpoints'
      - 'Internet-facing Servers'
    range: 'last 90 days'
    queries:
      - 'search network_connections from script_proxy_processes | calculate enterprise_wide frequency of destination_ip/fqdn | alert if frequency < 1st percentile'
  - question: 'Is there a statistically significant anomaly in the time series data of outbound network connections from script proxy processes?'
    context: 'This question applies anomaly detection to network traffic patterns to spot malicious activity. A compromised host might exhibit a sudden spike in the number of connections, data volume, or unique destinations contacted by script proxies. A time series model can learn the normal rhythm of this traffic and automatically alert on deviations that signify a potential C2 beaconing or data staging event.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Network Egress Points (Firewalls, Proxies)'
      - 'DNS Resolvers'
      - 'User Endpoints'
      - 'Internet-facing Servers'
    range: 'last 90 days'
    queries:
      - 'run time_series_anomaly_detection on network_traffic from script_proxies | features: connection_count, unique_destinations, bytes_sent | alert on significant deviation from seasonal baseline'
  - question: 'Is a script proxy executing a script from a high-risk or unusual file path, such as a temporary directory or user downloads folder?'
    context: 'This question focuses on the location of the executed script. Adversaries often drop scripts into world-writable or non-standard locations like temporary directories, public folders, or user download folders to bypass execution restrictions and hide from casual observation. Executing from these locations is a strong indicator of malicious intent.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Multi-user Servers (e.g., Citrix, RDS)'
      - 'Network File Shares'
    range: 'last 90 days'
    queries:
      - 'search process_creation_events where process_name is script_proxy | parse script_path from command_line | alert if script_path in (high_risk_directories_list)'
  - question: 'Is a script proxy executing a script from a file path that has high entropy or is located in a rarely used directory?'
    context: 'This question uses statistical properties of the file path to detect suspicious activity. High entropy in a path can indicate randomization used to evade detection, while execution from a directory that is rarely used across the enterprise suggests an attacker has created a non-standard location for their tools. The combination of these two factors is highly suspicious.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Multi-user Servers (e.g., Citrix, RDS)'
      - 'Network File Shares'
    range: 'last 90 days'
    queries:
      - 'search script_proxy_executions | calculate entropy of script_path and frequency of parent_directory | alert if path_entropy > 95th percentile or directory_frequency < 5th percentile'
  - question: 'Can a one-class SVM model, trained on legitimate script paths, identify a new script execution path as an anomaly?'
    context: 'This question employs an anomaly detection model to learn the characteristics of all "normal" script execution paths in the environment. By modeling features like path depth and directory naming conventions, the one-class SVM can identify any new execution path that falls outside this learned boundary of normalcy, flagging it as a potential threat without prior knowledge of what is "bad".'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User Endpoints'
      - 'Multi-user Servers (e.g., Citrix, RDS)'
      - 'Network File Shares'
    range: 'last 90 days'
    queries:
      - 'run one_class_svm_model on script_execution_paths | features: path_depth, token_counts, file_extension | alert if path is classified as an anomaly (outside learned boundary)'