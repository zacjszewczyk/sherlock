name: T1547.009: Shortcut Modification
id: f4a2b1d3-6e7c-4b8a-9f1d-0c9e8a7b6d5c
description: |
  This playbook helps investigate if an adversary is maintaining persistence or escalating privileges by creating or modifying shortcut (.lnk) files. Adversaries may place shortcuts in startup folders to execute malicious code on system boot or user logon. They may also modify existing shortcuts in privileged locations to hijack their execution flow, often using Living-off-the-Land Binaries (LOLBAS) with obfuscated commands. Indicators include shortcuts pointing to known malicious executables, anomalous command-line arguments, deceptive metadata (e.g., mismatched icons and targets), unusual process parent-child relationships, and suspicious network activity originating from shortcut-launched processes.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are processes created from .lnk files executing known malicious code or connecting to known malicious infrastructure?
    context: |
      This question seeks to identify the most direct evidence of a malicious shortcut: one that executes a file or connects to a domain/IP already identified as malicious. By cross-referencing file hashes and network indicators from shortcut executions against threat intelligence, analysts can quickly find known threats.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Endpoints (User and System Startup Folders)
      - DNS Resolvers
      - Network Egress Points
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - query: |
          SEARCH for process creation events from a .lnk file.
          EXTRACT target file hash and any IP/domain in command line.
          JOIN hash, IP, and domain against threat intelligence feeds.
          ALERT on any match.

  - question: Are processes launched from .lnk files making network connections to rare or unusual IP addresses?
    context: |
      This question helps uncover potential C2 channels that are not yet on threat intelligence feeds. Adversaries often use dedicated infrastructure that is not widely accessed. By identifying connections from shortcut-launched processes to destination IPs that are statistically rare across the enterprise, analysts can pinpoint suspicious, low-prevalence C2 servers.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Endpoints (User and System Startup Folders)
      - DNS Resolvers
      - Network Egress Points
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - query: |
          SEARCH for process creation events from .lnk files that initiate network connections.
          CALCULATE the 30-day enterprise-wide prevalence for each destination IP.
          ALERT on any connection where the destination IP is in the bottom 1st percentile of prevalence.

  - question: Can we use machine learning to predict if a .lnk file execution event is malicious based on its characteristics?
    context: |
      This question aims to proactively score the risk of a shortcut execution. By training a model on various features—such as whether the target file is signed, the randomness (entropy) of the target path, command-line length, and the reputation of any network indicators—it's possible to create a system that flags suspicious .lnk executions even if they use novel malware or infrastructure.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Endpoints (User and System Startup Folders)
      - DNS Resolvers
      - Network Egress Points
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - query: |
          TRAIN a classification model on features of .lnk executions (e.g., target signature, path entropy, argument length, IP reputation).
          APPLY the model to new .lnk execution events.
          ALERT on events with a high maliciousness score.

  - question: Is a shortcut file in a persistence location being used to execute a Living-off-the-Land Binary (LOLBAS) with suspicious arguments?
    context: |
      This question targets a common adversary technique of using legitimate system tools (LOLBAS) for malicious ends. This query looks for the specific pattern of a shortcut in a startup folder launching a LOLBAS like 'powershell.exe' or 'mshta.exe' with command-line arguments associated with malicious script execution or code download, which is a strong indicator of persistence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: User Startup Folder (%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup)
      - System Startup Folder (C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp)
    range: last 90 days
    queries:
      - query: |
          SEARCH for process creation of a known LOLBAS with suspicious arguments (e.g., -enc, IEX, DownloadString).
          CORRELATE with a .lnk file creation event in a startup folder within the last 5 minutes.
          ALERT on correlation.

  - question: Are command-line arguments for LOLBAS executions launched from .lnk files showing unusually high entropy?
    context: |
      This question helps detect obfuscated commands. Adversaries often encode or randomize their scripts to evade simple signature-based detections. High Shannon entropy in the command-line arguments is a mathematical indicator of such obfuscation. By baselining normal entropy for each LOLBAS and alerting on outliers, we can find hidden malicious commands.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: User Startup Folder (%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup)
      - System Startup Folder (C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp)
    range: last 90 days
    queries:
      - query: |
          SEARCH for LOLBAS processes launched from .lnk files.
          CALCULATE Shannon entropy of the command-line arguments.
          BASELINE the entropy distribution for each LOLBAS.
          ALERT if entropy exceeds the 98th percentile of its baseline.

  - question: Are there anomalous clusters of LOLBAS executions originating from .lnk files?
    context: |
      This question uses unsupervised machine learning to find novel or unusual LOLBAS activity. By grouping executions based on features like command-line length and structure, normal administrative activities will form large, dense clusters. Malicious activities, being different, will form small, separate clusters or be flagged as outliers, allowing for their discovery without prior knowledge of the attack.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: User Startup Folder (%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup)
      - System Startup Folder (C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp)
    range: last 90 days
    queries:
      - query: |
          CLUSTER LOLBAS executions from .lnk files based on command-line features (length, entropy, keywords).
          IDENTIFY outlier clusters using an algorithm like DBSCAN.
          INVESTIGATE executions within outlier clusters.

  - question: Is a process launched from a startup folder shortcut spawning reconnaissance tools?
    context: |
      This question looks for post-persistence discovery activity. After establishing persistence, an adversary's next step is often to gather information about the compromised system and network. A process originating from a startup shortcut that immediately spawns tools like 'whoami.exe', 'net.exe', or 'ipconfig.exe' is a strong signal of this malicious discovery phase.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint Process Trees
      - Network Gateway Traffic Logs
      - DNS Query Logs
      - System and User Startup Folders
    range: last 90 days
    queries:
      - query: |
          SEARCH for a process launched from a startup .lnk file.
          MONITOR for child processes spawned within 60 seconds.
          ALERT if a child process is a known reconnaissance tool (e.g., whoami.exe, net.exe, tasklist.exe).

  - question: Is a process launched from a startup shortcut exhibiting anomalous child process or network behavior compared to its baseline?
    context: |
      This question aims to detect when a legitimate, auto-starting application has been hijacked or compromised. By creating a profile of normal behavior (e.g., typical child processes, destination ports, data volumes) for legitimate startup programs, we can detect significant deviations. A high risk score based on multiple deviations can indicate that the legitimate application is now performing malicious actions.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint Process Trees
      - Network Gateway Traffic Logs
      - DNS Query Logs
      - System and User Startup Folders
    range: last 90 days
    queries:
      - query: |
          FOR each legitimate startup process, baseline its normal child processes and network activity.
          SCORE new executions based on deviations from the baseline (e.g., new child process, rare port).
          ALERT on high cumulative risk scores.

  - question: Is there an anomalous spike in the creation rate of .lnk files in startup directories?
    context: |
      This question helps detect large-scale, automated deployment of persistence. A worm or a script-based attack might drop malicious shortcuts on many machines simultaneously. By using a time-series model to forecast the normal rate of new shortcut creation in startup folders, we can automatically detect a sudden, statistically significant increase that indicates a widespread campaign.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint Process Trees
      - Network Gateway Traffic Logs
      - DNS Query Logs
      - System and User Startup Folders
    range: last 90 days
    queries:
      - query: |
          MODEL the hourly count of new .lnk files created in startup folders using a time-series forecast.
          ALERT if the observed count significantly exceeds the forecasted confidence interval.

  - question: Is a shortcut file masquerading as a common application while actually targeting a script interpreter?
    context: |
      This question targets social engineering tactics where a user is tricked into running a malicious script disguised as a document or application. This query looks for a mismatch between the shortcut's name (e.g., 'Report.lnk') and the process it actually executes (e.g., 'powershell.exe'). This deception is a strong indicator of malicious intent.
    answer_sources:
      - Windows Sysmon Event ID 11
      - File System Auditing Logs
      - Endpoint File Systems: User profile directories, Temporary file directories (%TEMP%), Email attachment sandboxes, Web download folders
    range: last 90 days
    queries:
      - query: |
          ON .lnk file creation/execution, compare the .lnk file name to the target process name.
          ALERT if the file name implies a document/app but the target is a script interpreter (e.g., powershell.exe, wscript.exe).

  - question: Are newly created .lnk files unusually large?
    context: |
      This question leverages file metadata to find suspicious shortcuts. A normal shortcut file is very small (typically a few kilobytes). An unusually large .lnk file (e.g., over 1MB) is highly suspicious, as it may indicate that a malicious payload or script is embedded directly within the file itself to avoid separate file downloads.
    answer_sources:
      - Windows Sysmon Event ID 11
      - File System Auditing Logs
      - Endpoint File Systems: User profile directories, Temporary file directories (%TEMP%), Email attachment sandboxes, Web download folders
    range: last 90 days
    queries:
      - query: |
          BASELINE the normal file size distribution for .lnk files across the enterprise.
          MONITOR for new .lnk file creation events.
          ALERT if a new .lnk file's size exceeds the 99th percentile of the baseline.

  - question: Can a machine learning model detect masquerading .lnk files based on their metadata and file characteristics?
    context: |
      This question seeks to build a robust classifier for deceptive shortcuts. By training a model on features like file size, target path entropy, icon/target mismatches, and the presence of a 'Zone.Identifier' (indicating it was downloaded from the internet), the system can learn to distinguish legitimate shortcuts from malicious ones designed to trick users.
    answer_sources:
      - Windows Sysmon Event ID 11
      - File System Auditing Logs
      - Endpoint File Systems: User profile directories, Temporary file directories (%TEMP%), Email attachment sandboxes, Web download folders
    range: last 90 days
    queries:
      - query: |
          TRAIN a classification model on .lnk file features (size, entropy, icon/target mismatch, Zone.Identifier).
          APPLY the model to new .lnk files.
          ALERT on files classified as malicious.

  - question: Has a shortcut in a privileged location been modified to point to a known malicious executable?
    context: |
      This question focuses on a high-impact privilege escalation scenario. Modifying a shortcut in a system-wide directory (like the Public Desktop) that an administrator might click allows an adversary to execute code with elevated privileges. This query specifically looks for cases where the new target of such a shortcut is a file whose hash is on a threat intelligence list.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: System-wide startup folder, Public Desktop folder, Administrative Tools folder
    range: last 90 days
    queries:
      - query: |
          MONITOR for .lnk file modifications in privileged directories.
          ON modification, hash the new target executable.
          JOIN the hash against a threat intelligence feed.
          GENERATE a high-priority alert on a match.

  - question: Has a shortcut in a privileged location been modified to point to a rare, non-standard executable?
    context: |
      This question helps find novel malware used for privilege escalation. Instead of looking for known bad hashes, this query identifies when a privileged shortcut is changed to point to a new executable that is very rare in the environment. A legitimate software update would place the binary on many systems, whereas a targeted attack tool may only be on a few, making its rarity a key indicator.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: System-wide startup folder, Public Desktop folder, Administrative Tools folder
    range: last 90 days
    queries:
      - query: |
          MAINTAIN a baseline of target executables for privileged .lnk files.
          ON modification, identify the new target executable.
          CALCULATE the enterprise-wide prevalence of the new target's hash.
          ALERT if the hash is present on fewer than 5 endpoints.

  - question: Can we detect anomalous event sequences related to the modification of privileged shortcuts?
    context: |
      This question uses machine learning to understand the context of a file modification. Normal software installations have predictable event patterns (e.g., an installer 'msiexec.exe' creates a shortcut). An adversary's actions may create an anomalous sequence (e.g., 'powershell.exe' modifies an existing shortcut). A sequence-based model can learn these normal patterns and flag deviations that suggest malicious tampering.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: System-wide startup folder, Public Desktop folder, Administrative Tools folder
    range: last 90 days
    queries:
      - query: |
          TRAIN a sequence model (e.g., LSTM autoencoder) on normal event sequences involving privileged .lnk files.
          APPLY the model to new event sequences.
          ALERT on sequences with a high anomaly score.

  - question: Has a high-integrity process from a shortcut been hijacked using a LOLBAS wrapper?
    context: |
      This question targets a specific execution hijacking technique. An adversary can modify a shortcut to prepend a command like 'cmd.exe /c' before the legitimate application path. This causes their malicious command to run first, often with the elevated privileges of the original shortcut. This query looks for the command-line pattern of a LOLBAS launching another program, especially in a high-integrity context.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: Administrative Tools folder, Control Panel items folder, System-wide Start Menu programs folder
    range: last 90 days
    queries:
      - query: |
          SEARCH for process creation events running with high integrity.
          APPLY a regex to the command line to detect a LOLBAS launching another executable (e.g., `cmd.exe /c ... app.exe`).
          ALERT on a pattern match.

  - question: Has the command-line structure of a privileged shortcut execution significantly deviated from its baseline?
    context: |
      This question provides a statistical method for detecting the hijacking described previously. For each privileged shortcut, we can record its normal, expected command-line. By calculating the structural difference (e.g., Levenshtein distance) between a new execution's command-line and the baseline, we can flag significant changes that indicate a potential hijacking attempt.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: Administrative Tools folder, Control Panel items folder, System-wide Start Menu programs folder
    range: last 90 days
    queries:
      - query: |
          FOR each privileged shortcut, establish a baseline of its normal command line.
          ON new execution, calculate the Levenshtein distance between the observed and baseline command line.
          ALERT if the distance exceeds a defined threshold.

  - question: Can a classifier distinguish between direct and hijacked command-lines for privileged shortcut executions?
    context: |
      This question proposes a machine learning approach to detect command-line hijacking. By training a model on features like the presence of LOLBAS strings, argument count, and overall length, it can learn the difference between a simple, direct execution ('app.exe') and a complex, hijacked one ('cmd.exe /c evil.bat && app.exe'). This provides a more nuanced detection than a rigid regex.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Windows Sysmon Event ID 11
      - Endpoints: Administrative Tools folder, Control Panel items folder, System-wide Start Menu programs folder
    range: last 90 days
    queries:
      - query: |
          TRAIN a classifier on command lines from privileged shortcuts.
          ENGINEER features like LOLBAS presence, argument count, and length.
          ALERT on command lines classified as hijacked.

  - question: Is a high-integrity process launched from a shortcut spawning discovery tools or making external network connections?
    context: |
      This question looks for abuse of elevated privileges. Once an adversary gains high-integrity execution via a shortcut, they will likely perform discovery or establish C2. This query detects this by looking for a high-integrity process from a shortcut that either spawns reconnaissance tools ('net.exe', 'whoami.exe') or makes any connection to an external (non-private) IP address.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - High-Value Assets: Domain Controllers, Application Servers, Administrator Workstations
      - Network Infrastructure: Egress Points, DNS Resolvers
    range: last 90 days
    queries:
      - query: |
          SEARCH for a process with high integrity whose parent was launched from a privileged shortcut.
          ALERT if this process spawns a discovery tool OR initiates a network connection to a non-RFC1918 address.

  - question: Is a privileged shortcut execution exhibiting statistically anomalous network behavior compared to its baseline?
    context: |
      This question aims to find compromised privileged applications through their network traffic. A legitimate privileged tool might have a very predictable network pattern (e.g., only connects internally on port 443). If that tool, when launched from its shortcut, suddenly connects to an external IP or uses a rare port, this statistical deviation from its baseline is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - High-Value Assets: Domain Controllers, Application Servers, Administrator Workstations
      - Network Infrastructure: Egress Points, DNS Resolvers
    range: last 90 days
    queries:
      - query: |
          FOR each privileged shortcut, baseline its normal network behavior (e.g., destination IP space, common ports).
          ON new execution, check its network connections.
          ALERT if a connection is a statistical outlier (e.g., external IP, rare port).

  - question: Is graph-based anomaly detection identifying unusual process trees originating from privileged shortcuts?
    context: |
      This question uses a sophisticated ML approach to model entire execution chains. A normal privileged process has a typical process tree structure. By representing these trees as graphs, an anomaly detection algorithm can learn the normal structure and flag executions that produce a significantly different graph, such as one with unexpected new processes ('powershell.exe') or edges representing C2 activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - High-Value Assets: Domain Controllers, Application Servers, Administrator Workstations
      - Network Infrastructure: Egress Points, DNS Resolvers
    range: last 90 days
    queries:
      - query: |
          MODEL normal process execution trees from privileged shortcuts as graphs.
          APPLY a graph-based anomaly detection algorithm.
          ALERT on executions that generate a structurally anomalous graph.

  - question: Is a modified privileged shortcut execution immediately followed by explicit privilege escalation events?
    context: |
      This question looks for the direct outcome of a successful privilege escalation attempt. It creates a high-fidelity alert by correlating the execution from a modified privileged shortcut with subsequent security events that confirm escalation, such as the creation of a new user account, a user being added to the Administrators group, or a new privileged logon, all within a very short time window.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4720
      - Windows Event ID 4732
      - Security Logs: Domain Controller Security Event Logs, Endpoint Security Event Logs
      - Processes: Local Security Authority Subsystem Service (LSASS) process monitoring
    range: last 90 days
    queries:
      - query: |
          CREATE a correlation rule.
          TRIGGER on a process creation from a modified privileged shortcut.
          ALERT if followed within 10 seconds by a user creation (4720), admin group addition (4732), or privileged logon (4624).

  - question: Is there a statistical spike in special privilege assignments immediately following executions from privileged shortcuts?
    context: |
      This question provides a broader, statistical view of the correlation described previously. Instead of looking for a single instance, it monitors the overall rate at which special privilege assignments (Event ID 4672) occur shortly after any process launch from a privileged shortcut. A sudden, significant increase in this rate across the enterprise can indicate a widespread campaign exploiting this technique.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4720
      - Windows Event ID 4732
      - Security Logs: Domain Controller Security Event Logs, Endpoint Security Event Logs
      - Processes: Local Security Authority Subsystem Service (LSASS) process monitoring
    range: last 90 days
    queries:
      - query: |
          MONITOR the rate of special privilege assignment events (4672) occurring within 60 seconds of a privileged shortcut launch.
          ESTABLISH a baseline for this rate.
          ALERT if the observed rate exceeds the 99.9th percentile of the baseline.

  - question: Can sequence mining algorithms identify rare event chains indicative of privilege escalation via shortcut modification?
    context: |
      This question uses data mining to automatically discover malicious attack patterns. By analyzing sequences of security events from all endpoints, a sequence mining algorithm can identify common, benign patterns. It can then flag new or extremely rare sequences, such as the specific chain of {Shortcut Modified -> Process Launch -> Privileges Assigned -> Member added to Domain Admins}, as high-fidelity indicators of an attack in progress.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4672
      - Windows Event ID 4720
      - Windows Event ID 4732
      - Security Logs: Domain Controller Security Event Logs, Endpoint Security Event Logs
      - Processes: Local Security Authority Subsystem Service (LSASS) process monitoring
    range: last 90 days
    queries:
      - query: |
          APPLY a sequence mining algorithm (e.g., FP-Growth) to security event logs.
          IDENTIFY statistically rare event sequences.
          FLAG sequences that indicate escalation, such as {.lnk modification -> 4688 -> 4672 -> 4732}.