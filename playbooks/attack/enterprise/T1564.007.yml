name: T1564.007: VBA Stomping
id: 5c9e8a70-63a1-4b1f-827e-9d0a1b3c4d5e
description: This playbook helps identify adversaries using VBA stomping (T1564.007), a defense evasion technique where malicious p-code is executed from a Microsoft Office document while the corresponding VBA source code is removed or obfuscated to evade static analysis. Detection strategies involve analyzing documents for structural discrepancies between source and p-code, monitoring for suspicious child processes spawned by Office applications, analyzing network traffic for anomalous connections or patterns indicative of C2 communication, and correlating activity with threat intelligence.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there MS Office documents on the network or in emails that show signs of VBA stomping based on automated file analysis?
    context: This question aims to proactively identify malicious Office documents where the VBA source code has been removed or manipulated to hide from static analysis tools, a technique known as VBA stomping. By automatically scanning files in transit and at rest and looking for specific indicators from tools like `olevba`, we can catch this evasion technique early. A positive finding is a strong indicator of a malicious document designed to bypass initial security scans.
    answer_sources:
      - File analysis tool logs (e.g., Olevba JSON output)
      - Zeek files.log
      - Email security gateway logs
      - Automated file analysis sandbox
      - Network file shares
      - Email gateway quarantine
      - Endpoint devices
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each MS Office file from network traffic or email; RUN `olevba --decode`; IF output contains 'VBA Stomping'; ALERT.
  - question: Are there any Office documents with an anomalous ratio of VBA source code lines to compiled p-code instructions, suggesting code removal?
    context: This question looks for a statistical anomaly that points to VBA stomping. In a normal macro-enabled document, there is a predictable relationship between the amount of source code and the resulting compiled p-code. A ratio that is zero (no source code) or statistically very low compared to a baseline of normal documents is a strong indicator that the source code was deliberately removed to evade analysis, while the malicious p-code remains.
    answer_sources:
      - File analysis tool logs (e.g., Olevba JSON output)
      - Zeek files.log
      - Email security gateway logs
      - Automated file analysis sandbox
      - Network file shares
      - Email gateway quarantine
      - Endpoint devices
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each document with macros; CALCULATE ratio = (VBA source lines / p-code instructions); IF ratio is 0 OR ratio < (mean_ratio - 3 * std_dev); ALERT.
  - question: Can we use a machine learning model to identify and score the risk of VBA stomping in Office documents?
    context: This question proposes using a machine learning classifier to provide a more nuanced risk assessment for VBA stomping. By training a model on various features like the presence of source code, auto-executing function names, and keyword analysis, we can move beyond simple flags to a probabilistic score. This helps prioritize alerts and can potentially identify novel or subtle variations of the stomping technique that symbolic or simple statistical rules might miss.
    answer_sources:
      - File analysis tool logs (e.g., Olevba JSON output)
      - Zeek files.log
      - Email security gateway logs
      - Automated file analysis sandbox
      - Network file shares
      - Email gateway quarantine
      - Endpoint devices
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each new document with macros; EXTRACT features (source code presence, auto-exec names, keyword ratios, etc.); PREDICT risk_score using ML model; IF risk_score > threshold; ALERT.
  - question: Are any MS Office applications (Word, Excel, PowerPoint) spawning suspicious child processes like PowerShell or Command Prompt?
    context: This question focuses on detecting the execution phase of a malicious macro. After a user opens a compromised document, the embedded macro code (potentially hidden by VBA stomping) will often execute by spawning other processes to download payloads, run commands, or perform reconnaissance. Monitoring for Office applications launching command-line interpreters or scripting engines is a high-fidelity way to detect this post-exploitation behavior.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Security Event ID 4688
      - User workstations
      - Virtual Desktop Infrastructure (VDI)
      - Remote Desktop Session Hosts
      - Corporate servers with MS Office installed
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH process creation logs WHERE parent_process in ('winword.exe', 'excel.exe', 'powerpnt.exe') AND child_process in ('powershell.exe', 'cmd.exe', 'wscript.exe', etc.); ALERT.
  - question: Are MS Office applications spawning unusual or never-before-seen child processes, or using command-line arguments with unusually high entropy?
    context: This question aims to detect anomalies in process creation behavior that might not be caught by a static watchlist. By baselining normal activity, we can flag two types of suspicious events 'first-seen' process relationships (e.g., Excel spawning `whoami.exe` for the first time ever in the environment) and the use of obfuscated command lines. High entropy in command-line arguments often indicates encoding or encryption used to hide the attacker's commands.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Security Event ID 4688
      - User workstations
      - Virtual Desktop Infrastructure (VDI)
      - Remote Desktop Session Hosts
      - Corporate servers with MS Office installed
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: COMPARE process creation events against 30-day baseline; IF (parent_process, child_process) pair is new OR command_line_entropy is > 95th percentile; ALERT.
  - question: Can an unsupervised machine learning model detect anomalous process creation events originating from MS Office applications?
    context: This question leverages an unsupervised ML model to find outliers in process creation data without pre-defined rules. By learning the characteristics of normal process events (parent, child, command-line features), an Isolation Forest or similar model can identify events that deviate significantly from the norm. This approach is effective at discovering novel attack patterns that don't match any known signatures or statistical thresholds.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Security Event ID 4688
      - User workstations
      - Virtual Desktop Infrastructure (VDI)
      - Remote Desktop Session Hosts
      - Corporate servers with MS Office installed
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each Office process creation event; EXTRACT features (parent, child, cmd_line_length, cmd_line_entropy); SCORE with Isolation Forest model; IF anomaly_score is high; ALERT.
  - question: Are any MS Office applications making direct-to-IP network connections on non-standard web ports?
    context: This question attempts to identify command-and-control (C2) callbacks. Legitimate Office application network activity typically involves DNS lookups to domains on standard web ports (80, 443). Malicious macros, however, often contain hardcoded IP addresses and use non-standard ports for C2 communication to bypass simple domain-based filtering. Detecting this specific pattern is a strong indicator of compromise.
    answer_sources:
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 22
      - Endpoint devices
      - DNS resolvers
      - Network egress points
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH network connection logs WHERE process in ('winword.exe', 'excel.exe', 'powerpnt.exe') AND destination is IP_address AND destination_port not in (80, 443, 53); ALERT.
  - question: Is there a statistical anomaly in network traffic from MS Office applications, such as an unusual volume of data exfiltration or connections to high-entropy domains?
    context: This question looks for two statistical indicators of malicious activity. First, a sudden spike in outbound data volume from an Office application could signify data exfiltration. Second, connections to high-entropy domains (domains that look like random strings of characters) are a hallmark of Domain Generation Algorithms (DGAs), which are commonly used by malware to locate C2 servers. Both are strong deviations from normal behavior.
    answer_sources:
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 22
      - Endpoint devices
      - DNS resolvers
      - Network egress points
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each host; IF daily_office_bytes_out > (30d_avg + 4 * 30d_std_dev); ALERT. FOR each DNS query from Office; IF domain_entropy > 3.5; ALERT.
  - question: Can a time-series analysis model detect anomalous beaconing patterns in network connections from MS Office applications?
    context: This question focuses on detecting the 'heartbeat' of malware, known as beaconing. C2 implants regularly check in with their server, creating a periodic pattern of network connections. By modeling the normal rhythm of network activity from Office applications on a per-host basis (e.g., more activity during work hours), a time-series model can detect when the observed connection count significantly deviates from the forecast, indicating a potentially automated, malicious process.
    answer_sources:
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 22
      - Endpoint devices
      - DNS resolvers
      - Network egress points
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL hourly Office connections per host with ARIMA; IF actual_connections deviates significantly from forecast; ALERT.
  - question: Are any MS Office applications communicating with known malicious IPs/domains, or do any downloaded Office documents match known malicious file hashes?
    context: This is a fundamental threat intelligence matching question. It cross-references observed activity—network connections from Office apps and downloaded Office files—against curated lists of known-bad indicators. A match on an IP, domain, or file hash is a very high-confidence signal that a host is compromised or has received a malicious payload, warranting immediate investigation.
    answer_sources:
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Threat Intelligence Feed
      - Endpoint devices
      - DNS resolvers
      - Network egress points (e.g., Firewalls, Web Proxies)
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: JOIN Office network logs with threat_intel_feed on (IP, domain); ALERT on match; JOIN file logs with threat_intel_feed on file_hash; ALERT on match.
  - question: Are MS Office applications making network connections to rare or unusual Autonomous Systems (ASNs)?
    context: This question provides a way to find suspicious network destinations without relying on specific threat intelligence. Most legitimate business traffic goes to a relatively small set of common ASNs (e.g., those for Microsoft, Google, AWS). A connection from an Office app to a rare or obscure ASN, one that the organization seldom communicates with, is anomalous and could indicate communication with a C2 server hosted in a less reputable part of the internet.
    answer_sources:
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Threat Intelligence Feed
      - Endpoint devices
      - DNS resolvers
      - Network egress points (e.g., Firewalls, Web Proxies)
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: BASELINE frequency of destination ASNs for Office connections; IF connection is to an ASN in the bottom 5th percentile of frequency; ALERT.
  - question: Can a supervised machine learning model classify network connections from Office applications as benign or malicious in real-time?
    context: This question proposes using a supervised ML model, trained on historical examples of good and bad connections, to proactively score and classify new network traffic. By incorporating a rich set of features like port, data volume, connection duration, TLS fingerprinting (JA3/JA3S), and domain characteristics, the model can learn complex patterns that distinguish malicious C2 traffic from legitimate updates or cloud document syncing, providing a powerful layer of detection.
    answer_sources:
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Threat Intelligence Feed
      - Endpoint devices
      - DNS resolvers
      - Network egress points (e.g., Firewalls, Web Proxies)
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each new Office network connection; EXTRACT features (port, bytes, duration, JA3, domain_entropy, etc.); PREDICT class (benign/malicious) with Random Forest model; IF prediction is 'malicious' with high confidence; ALERT.