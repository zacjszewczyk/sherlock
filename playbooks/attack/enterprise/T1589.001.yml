name: T1589.001: Credentials
id: 9a8b7c6d-5e4f-4a3b-2c1d-0e9f8a7b6c5d
description: "Investigates whether an adversary is gathering the organization's credentials. This involves detecting credential phishing, where inbound email or web traffic contains known indicators of compromise (IOCs) from threat intelligence feeds. It also covers identifying suspected credential phishing campaigns by observing emails with similar characteristics sent to an anomalously high number of recipients in a short time. Additionally, the playbook looks for signs of password spraying, where a single source IP generates a high volume of authentication failures across multiple accounts. Finally, it addresses username enumeration, identified by a high rate of 'user name does not exist' authentication failures from an external source against a login endpoint."
type: technique
related:
  - TA0043: Reconnaissance
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Are our network logs showing any traffic to or from indicators of compromise (IOCs) known to be associated with credential phishing campaigns?"
    context: "This question aims to detect credential phishing attempts by matching observed network traffic against a high-confidence list of known malicious indicators. A match provides strong evidence of a targeted attack and allows for rapid response. By continuously monitoring DNS queries, web traffic, and email content for these IOCs, we can identify and block threats at the earliest stage."
    answer_sources: "Zeek smtp.log, Zeek http.log, Zeek files.log, Zeek dns.log, Email Gateway, Web Proxy, Network Egress Points, DNS Resolvers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each IOC in threat_feed: SEARCH http.log, dns.log, smtp.log for IOC. IF match found, ALERT high_severity."
  - question: "Are there any uncategorized URLs in our network traffic that exhibit characteristics of phishing, such as high character entropy or being hosted on a newly registered domain?"
    context: "This question seeks to identify novel or unknown phishing URLs that are not yet on threat intelligence lists. Attackers often use newly created domains and randomized URL paths to evade detection. By risk-scoring URLs based on their structural entropy and domain age, we can proactively flag suspicious links that warrant further investigation, even without a prior IOC match."
    answer_sources: "Zeek smtp.log, Zeek http.log, Zeek files.log, Zeek dns.log, Email Gateway, Web Proxy, Network Egress Points, DNS Resolvers, Passive DNS/WHOIS data"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each URL in http.log, smtp.log: IF URL not in IOC_list: CALCULATE path_entropy, domain_age. CALCULATE risk_score = weight_entropy * path_entropy + weight_age * domain_age. IF risk_score > threshold, ALERT."
  - question: "Can we apply a machine learning model to proactively classify new, uncategorized URLs as phishing based on their lexical features?"
    context: "This question leverages machine learning to automate the detection of phishing URLs. By training a logistic regression classifier on features like URL length, character types, and keywords, the model can learn to distinguish malicious links from benign ones. This provides a scalable way to analyze all new URLs in real-time and alert on those with a high probability of being malicious."
    answer_sources: "Zeek smtp.log, Zeek http.log, Zeek files.log, Zeek dns.log, Email Gateway, Web Proxy, Network Egress Points, DNS Resolvers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each new URL in http.log, smtp.log: EXTRACT lexical_features. PREDICT phishing_probability = logistic_regression_model(features). IF phishing_probability > 0.9, ALERT."
  - question: "Has any single external sender delivered emails to an anomalously large number of internal recipients within a short timeframe?"
    context: "This question aims to detect the initial blast of a phishing campaign. Adversaries often send the same or similar emails to many recipients at once. By setting a threshold (e.g., >20 recipients in 1 hour) and correlating it with message similarity, we can identify a coordinated attack and take containment actions before users begin interacting with the malicious emails."
    answer_sources: "Zeek smtp.log, Zeek http.log, Zeek dns.log, Email Gateway, Internal Mail Servers, DNS Resolvers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "GROUP emails by sender_IP over 1-hour windows. FOR each group: COUNT unique_recipients. CALCULATE subject_similarity. IF unique_recipients > 20 AND subject_similarity > 0.8, ALERT."
  - question: "Have any specific URLs been sent to an unusually high number of recipients in a very short period?"
    context: "This question focuses on the velocity of a specific malicious link being distributed via email. A sudden spike in the number of recipients receiving a particular URL is a strong indicator of a coordinated phishing campaign. By baselining the normal 'URL-to-recipient velocity' and alerting on significant deviations, we can quickly pinpoint the malicious payload being used in an attack."
    answer_sources: "Zeek smtp.log, Zeek http.log, Zeek dns.log, Email Gateway, Internal Mail Servers, DNS Resolvers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each URL in smtp.log: COUNT distinct recipients over a 5-minute window. COMPARE count to 30-day baseline for that URL. IF count > 99th percentile of baseline, ALERT."
  - question: "Can we identify clusters of email activity that represent a coordinated phishing campaign using unsupervised machine learning?"
    context: "This question applies unsupervised learning to discover previously unknown phishing campaigns without relying on predefined rules. By clustering emails based on metadata like sender, subject, and link domains, we can group related malicious activities together. Monitoring these clusters for sudden growth or anomalous volume can reveal a campaign in progress, even if its characteristics are novel."
    answer_sources: "Zeek smtp.log, Zeek http.log, Zeek dns.log, Email Gateway, Internal Mail Servers, DNS Resolvers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "INGEST email metadata (sender, subject, links) into DBSCAN model. MONITOR cluster formation and size. APPLY time-series anomaly detection to message volume within clusters. IF anomalous spike detected, ALERT."
  - question: "Is any single external IP address responsible for a high number of login failures across many different user accounts?"
    context: "This question is designed to detect password spraying attacks. In such attacks, an adversary uses a few common passwords against many different usernames. This behavior manifests as a single source IP generating numerous authentication failures for distinct accounts. Alerting on this pattern helps identify and block the attack before a valid credential combination is found."
    answer_sources: "Windows Event ID 4625, Zeek conn.log, Public-facing Authentication Servers (e.g., ADFS, VPN, OWA), Active Directory Domain Controllers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "GROUP auth_failures by source_IP over 1-hour windows. FOR each group: COUNT distinct usernames. IF distinct_usernames > 10 AND source_IP is external, ALERT."
  - question: "Are there any source IPs exhibiting an abnormally low ratio of successful to failed logins?"
    context: "This question provides another way to detect password spraying by analyzing the success/failure ratio of authentication attempts from a source IP. A legitimate user might have a few failed logins, but an attacker will have a vast number of failures and very few (or zero) successes. A ratio that is a statistical outlier (e.g., below the 1st percentile) strongly indicates malicious brute-force activity."
    answer_sources: "Windows Event ID 4625, Zeek conn.log, Public-facing Authentication Servers (e.g., ADFS, VPN, OWA), Active Directory Domain Controllers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each source_IP over 1-hour window: CALCULATE ratio = unique_success_logins / unique_failed_logins. IF ratio < 1st_percentile_baseline AND total_failures > 20, ALERT."
  - question: "Are we observing an anomalous volume of failed authentications originating from a specific Autonomous System Number (ASN)?"
    context: "This question aims to detect large-scale, distributed password spraying attacks by aggregating data at the ASN level. An attacker might use multiple IPs from the same hosting provider. By modeling the expected volume of failed logins per ASN and accounting for normal daily/weekly patterns, we can detect significant spikes that indicate a coordinated attack originating from a particular network block."
    answer_sources: "Windows Event ID 4625, Zeek conn.log, Public-facing Authentication Servers (e.g., ADFS, VPN, OWA), Active Directory Domain Controllers"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each ASN: FORECAST expected failed_auth_volume using Prophet model. IF observed_failed_auth_volume > predicted_upper_confidence_interval, ALERT."
  - question: "Is any single external IP address generating a large number of 'user name does not exist' authentication errors in a short time?"
    context: "This question helps detect username enumeration, a reconnaissance technique where an attacker tries to validate a list of potential usernames against a login portal. This activity results in a high volume of failed login events with the specific reason 'user name does not exist.' Alerting on this specific error code from a single source is a high-fidelity indicator of an enumeration attempt."
    answer_sources: "Zeek http.log, Windows Event ID 4625, Zeek conn.log, Public-facing Web Servers, Application Servers, Authentication APIs"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "GROUP events by source_IP over 10-min window. FOR each group: COUNT events where EventID=4625 and Sub-Status='0xc0000064'. IF count > 50, ALERT."
  - question: "Are any source IPs generating a disproportionately high ratio of 'user does not exist' failures compared to 'bad password' failures?"
    context: "This question distinguishes username enumeration from password spraying. A password spraying attempt would generate mostly 'bad password' errors, while username enumeration generates 'user does not exist' errors. By calculating the ratio of these two failure types and comparing it to a baseline, we can identify sources that are clearly focused on discovering valid usernames rather than guessing passwords."
    answer_sources: "Zeek http.log, Windows Event ID 4625, Zeek conn.log, Public-facing Web Servers, Application Servers, Authentication APIs"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each source_IP: CALCULATE ratio = count(user_not_exist_errors) / count(bad_password_errors). IF ratio > 98th_percentile_baseline, ALERT."
  - question: "Can we use a machine learning model to automatically classify authentication sessions as benign, password spraying, or username enumeration?"
    context: "This question proposes a sophisticated, automated approach to detecting various authentication attacks. By training a classifier on session-based features (e.g., number of unique usernames, ratio of failure types, request timing), the model can learn the subtle differences between normal user behavior and different attack patterns, allowing for more accurate and automated detection."
    answer_sources: "Zeek http.log, Windows Event ID 4625, Zeek conn.log, Public-facing Web Servers, Application Servers, Authentication APIs"
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: "FOR each 5-min auth session: EXTRACT features (username_count, failure_ratio, timing_stats). PREDICT attack_type = classification_model(features). IF attack_type is malicious, ALERT."