name: T1550.004: Web Session Cookie
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook provides an analytic guide for detecting adversaries using stolen web session cookies to bypass authentication and evade defenses (T1550.004). It focuses on identifying anomalies indicative of session hijacking for both defense evasion and lateral movement. Key investigative areas include monitoring for sessions originating from malicious or unusual geolocations, detecting processes on endpoints accessing browser cookie stores, analyzing user-agent and impossible travel anomalies within a single session, and identifying non-browser processes (like PowerShell) making authenticated web requests. The playbook also covers detecting the same session being used from multiple internal IPs, sessions on internal applications originating from hosts with no corresponding user logon events, and users performing actions inconsistent with their roles, all of which can signify lateral movement using a stolen cookie.
type: technique
related:
- TA0005: Defense Evasion
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are inbound web requests with valid session cookies originating from IP addresses associated with known malicious activity, TOR exit nodes, or anonymizing proxies?
  context: This question aims to detect the use of stolen session cookies from infrastructure commonly used by adversaries. A legitimate user's session suddenly appearing from a known malicious IP or an anonymizing service is a strong indicator that the session has been compromised and is being replayed by an attacker to bypass authentication controls.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Internet Gateway
  - VPN Concentrator
  - External Web Application Servers
  - Cloud Service Provider Flow Logs
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log WHERE session_cookie EXISTS | JOIN conn.log ON uid | LOOKUP source_ip in threat_intel_list WHERE is_malicious=true
- question: Are authenticated user sessions originating from geolocations or network providers (ASNs) that are statistically rare or entirely new for that specific user?
  context: This question helps identify session hijacking by detecting geographic and network anomalies. Adversaries using stolen cookies will likely connect from locations and networks different from the legitimate user's typical patterns. Flagging sessions from the rarest 1% of a user's historical locations helps surface these high-risk deviations from their established baseline behavior.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Internet Gateway
  - VPN Concentrator
  - External Web Application Servers
  - Cloud Service Provider Flow Logs
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH conn.log | GEOIP source_ip | BASELINE historical_locations by user over 30d | DETECT new or rare (99th percentile) country/asn for user
- question: Is there an anomalous spike in the volume of requests within a user's session, particularly during non-business hours, compared to their historical activity?
  context: This question seeks to identify session hijacking through behavioral analysis of request volume. Automated tools used by attackers to exploit a stolen session often generate a much higher rate of requests than a human user. A time-series model can predict a user's normal activity level, and a significant deviation from this prediction, especially outside of normal working hours, can indicate a compromised session.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Internet Gateway
  - VPN Concentrator
  - External Web Application Servers
  - Cloud Service Provider Flow Logs
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log | TIMESERIES count by user, session_id, hour | FORECAST expected_volume with confidence_interval | ALERT where actual_volume > upper_confidence_interval and is_off_hours=true
- question: Are processes being created with command-line arguments that reference common browser cookie databases or known credential dumping tools?
  context: This question aims to detect the initial theft of cookie files from an endpoint. Adversaries use specific tools or scripts that access well-known file paths where browsers store their cookie databases. Monitoring process command lines for these specific paths or tool names provides a high-fidelity signal of cookie theft activity.
  answer_sources:
  - Windows Event ID 4688
  - User Endpoints
  - Critical Staff Workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events (EID 4688) WHERE command_line CONTAINS 'mimikatz.exe' OR command_line MATCHES REGEX '.*AppData.*Cookies.*'
- question: Are common system processes like powershell.exe or cmd.exe being executed with unusually complex or obfuscated command-line arguments that reference user profile directories?
  context: This question seeks to identify obfuscated attempts to access sensitive files like cookie databases. Adversaries often use encoding or complex scripting to hide their actions. High Shannon entropy in a command line is a mathematical indicator of randomness and complexity, which can reveal these obfuscated commands when legitimate usage is typically simple and predictable.
  answer_sources:
  - Windows Event ID 4688
  - User Endpoints
  - Critical Staff Workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events (EID 4688) WHERE process_name IN ('powershell.exe', 'cmd.exe') | CALCULATE entropy(command_line) | ALERT where entropy > 3_stddev_from_baseline AND command_line CONTAINS ('AppData', 'Local')
- question: Can machine learning models identify process creation events that, based on their features, are highly likely to be malicious attempts to steal cookies?
  context: This question leverages machine learning to move beyond simple string matching and detect novel or polymorphic attacker techniques. By training a model on features like argument length, entropy, and parent process relationships, it can learn to identify suspicious patterns indicative of credential theft, even if the exact commands have never been seen before.
  answer_sources:
  - Windows Event ID 4688
  - User Endpoints
  - Critical Staff Workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: STREAM process_creation_events (EID 4688) TO classification_model | ALERT on events classified as 'malicious' with >95% confidence
- question: Has the User-Agent string for a single, authenticated web session changed between requests?
  context: This question identifies a strong anomaly that is highly indicative of a hijacked session. A legitimate user's browser will send the same User-Agent string for the duration of a session. A change in this value for the same session cookie strongly implies that a different client (i.e., the attacker's machine) has begun using the stolen cookie.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4634
  - Internet Gateway
  - User Endpoints
  - Authentication Logs from Domain Controllers
  - Web Proxies
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log | GROUPBY session_id | DETECT if unique_count(user_agent) > 1
- question: Is a user's session showing 'impossible travel' velocity between requests or using a User-Agent string that is highly dissimilar to their historical profile?
  context: This question combines two powerful heuristics to detect session hijacking. 'Impossible travel' calculates if the speed required to travel between the geolocations of two consecutive requests is physically impossible, indicating session use from multiple locations. Additionally, comparing the session's User-Agent to the user's typical set of agents can flag when an attacker uses a different browser or tool.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4634
  - Internet Gateway
  - User Endpoints
  - Authentication Logs from Domain Controllers
  - Web Proxies
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log, conn.log | GROUPBY session_id | CALCULATE travel_velocity between consecutive requests | ALERT if velocity > 600 mph
- question: Do clustering algorithms identify user sessions that are outliers compared to the typical patterns of behavior?
  context: This question uses unsupervised machine learning to find anomalous sessions without predefined rules. By clustering sessions based on features like source IP, User-Agent, and resources accessed, the algorithm can group normal, legitimate activity together. Sessions that do not fit into any dense cluster are flagged as outliers, representing potentially hijacked sessions that deviate from established norms.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4634
  - Internet Gateway
  - User Endpoints
  - Authentication Logs from Domain Controllers
  - Web Proxies
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log, conn.log | CLUSTER sessions using DBSCAN on features (ip, user_agent, timing) | ALERT on sessions classified as noise/outliers
- question: Has a process accessed a browser cookie file and then immediately made a DNS query for a domain on a threat intelligence list?
  context: This question aims to detect the "smash and grab" exfiltration of stolen cookies. This specific sequence of events—accessing the cookie file, followed within seconds by a connection to a known malicious domain—is a high-confidence indicator that a process has stolen credentials and is immediately attempting to send them to an attacker-controlled server.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - User Endpoints
  - DNS Servers
  - Internet Gateway
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEQUENCE [process_event WHERE command_line contains 'Cookies'] by host within 60s, then [dns_query WHERE domain in threat_list]
- question: After a process accesses a local cookie file, does it connect to a network destination that is statistically rare for that host?
  context: This question helps detect exfiltration to novel or unusual command-and-control servers. Instead of relying on known-bad domains, this method baselines the normal network destinations for each host. A connection to a brand new or extremely rare destination immediately after cookie file access is suspicious, as it deviates from the host's established network behavior.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - User Endpoints
  - DNS Servers
  - Internet Gateway
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEQUENCE [process_event WHERE command_line contains 'Cookies'] by host, then [network_connection WHERE destination is rare (99th percentile) for host]
- question: Are there anomalous sequences of host and network events, such as PowerShell accessing a cookie file and then making a long-lived connection to a dynamic DNS domain?
  context: This question uses a stateful model to detect malicious chains of activity that, individually, might not be suspicious. A Hidden Markov Model can learn normal sequences (e.g., browser reads cookie, browser connects to web). It can then flag highly improbable sequences, like a command-line tool reading cookies and connecting to a suspicious domain, which are characteristic of attacker behavior.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - User Endpoints
  - DNS Servers
  - Internet Gateway
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: STREAM host_events, network_events TO sequence_model | ALERT on sequences with low probability score
- question: Is a new authenticated session accessing internal application pages without first visiting a defined login or SSO URL?
  context: This question aims to detect when an adversary bypasses the entire authentication workflow by injecting a stolen session cookie. Legitimate users must pass through a login page. A session that appears fully authenticated deep within an application without a record of passing through the "front door" is a strong sign that a stolen cookie was used to resume a session illegitimately.
  answer_sources:
  - Zeek http.log
  - Web Application Servers
  - Load Balancers
  - Reverse Proxies
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FOR new_session, CHECK if first_request_url is NOT IN (login_urls) AND accesses internal_url
- question: Does a user's session begin on a URL with high entropy, suggesting it's not a common landing page?
  context: This question identifies sessions that start on unusual or unique pages, which can indicate direct access via a stolen cookie. Most legitimate sessions start at common pages like '/home' or '/dashboard'. A session starting on a deep, complex URL (which has high entropy) suggests the user didn't navigate there normally, but rather injected a cookie to land directly on a specific page of interest.
  answer_sources:
  - Zeek http.log
  - Web Application Servers
  - Load Balancers
  - Reverse Proxies
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FOR each session, CALCULATE entropy(first_request_url) | ALERT on sessions with high entropy landing pages
- question: Has a new web session started in a state that is not a designated 'start' state according to a model of normal user navigation?
  context: This question uses a state transition model (Markov chain) to detect illogical session initiation. The model learns the valid pathways a user can take through an application (e.g., from 'login' to 'dashboard'). A session that materializes in a state like 'edit_profile' without having passed through a valid preceding state is a high-confidence anomaly, pointing to session hijacking.
  answer_sources:
  - Zeek http.log
  - Web Application Servers
  - Load Balancers
  - Reverse Proxies
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: STREAM http.log TO markov_chain_model | ALERT when a session starts in a state with no valid transition from a start_state
- question: Is an authenticated session to an internal web application originating from an internal host that is already on a watchlist for other suspicious activity?
  context: This question correlates cookie-based activity with other security alerts to identify lateral movement. If a host is already flagged for suspicious behavior (e.g., C2 beaconing), any subsequent authenticated web session originating from it is highly suspect. It likely indicates the attacker is using a stolen cookie from that compromised host to pivot to other internal resources.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internal Network Segments
  - Server Subnets
  - Data Center Core Switches
  - Internal Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log WHERE session_cookie EXISTS | JOIN conn.log on uid | LOOKUP source_ip in high_risk_host_watchlist | ALERT on match
- question: Is an internal host contacting an anomalously high number of unique internal web servers compared to its peers?
  context: This question helps identify an adversary performing internal reconnaissance or moving laterally across multiple applications from a single compromised host. A typical workstation may only access a few internal web apps. A host suddenly accessing dozens of them could be an attacker using stolen cookies to explore the internal network, making it a pivot point.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internal Network Segments
  - Server Subnets
  - Data Center Core Switches
  - Internal Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH conn.log WHERE dest_port IN (80, 443) | STATS unique_count(dest_ip) by source_ip | ALERT if unique_count > 95th_percentile_for_host_role
- question: Is a web connection bridging two distinct communities of users and servers that do not typically interact?
  context: This question uses graph analysis to detect anomalous lateral movement paths. By modeling normal traffic, you can identify clusters of activity (e.g., the 'Finance' community). A connection from a host in one community to a server in another, where no such connection typically exists, is a strong indicator of an attacker pivoting across departmental or security boundaries.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internal Network Segments
  - Server Subnets
  - Data Center Core Switches
  - Internal Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: BUILD graph of internal_web_traffic | APPLY community_detection_algorithm | ALERT on connections that bridge two distinct communities
- question: Is an authenticated web request to an internal application coming from a process that is not an approved web browser?
  context: This question aims to detect the use of scripting tools or living-off-the-land binaries for lateral movement. Adversaries often use tools like PowerShell or curl to replay stolen cookies, rather than a full browser. Correlating network requests with endpoint process data to find sessions initiated by non-browser processes is a high-fidelity way to detect this technique.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Zeek conn.log
  - User Endpoints
  - Servers hosting internal web applications
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE http.log requests with process_creation_events (EID 4688) on source_ip | ALERT if process_name NOT IN ('chrome.exe', 'msedge.exe')
- question: Is an internal web request originating from a statistically rare parent-child process relationship?
  context: This question identifies lateral movement attempts hidden within legitimate processes. While PowerShell making a web request might be normal, Word spawning PowerShell which then makes a web request is highly unusual. Baselining normal process parent-child chains that lead to network activity can reveal these anomalous execution chains used by attackers.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Zeek conn.log
  - User Endpoints
  - Servers hosting internal web applications
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE network_events with process_events | BASELINE frequency of parent-child process chains making web requests | ALERT on statistically rare chains
- question: Can a machine learning classifier distinguish between legitimate automated web traffic and malicious, script-based lateral movement?
  context: This question addresses the challenge that some non-browser traffic is legitimate (e.g., system scripts). A classifier trained on features from both process and network data (like User-Agent, process name, parent process) can learn the nuanced differences between benign automation and attacker-driven scripting, reducing false positives from simple non-browser alerts.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Zeek conn.log
  - User Endpoints
  - Servers hosting internal web applications
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: STREAM process and network features to classifier_model | ALERT on traffic classified as 'scripted_lateral_movement'
- question: Is the same session cookie being used in requests from multiple distinct internal IP addresses within a short time frame?
  context: This question detects a clear case of session reuse or hijacking. A legitimate user's session should be tied to a single host and IP address at any given time. If the same session ID appears from two different internal IPs, it strongly implies an adversary has stolen the cookie from one machine and is replaying it from another to move laterally.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internal Network Core
  - Application Server Load Balancers
  - East-West Traffic Mirrors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log | FOR each session_id, track source_ip with 30m expiration | ALERT if request with same session_id arrives from a different source_ip
- question: Is a single user account accessing internal applications from a number of distinct source IPs that is anomalously high compared to their own baseline?
  context: This question identifies users whose session activity is spread across an unusual number of machines. While some users may use multiple devices, an attacker moving laterally may use a stolen session from many different compromised hosts in a short period. Alerting when a user's daily source IP count exceeds their personal baseline can detect this "session hopping" behavior.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internal Network Core
  - Application Server Load Balancers
  - East-West Traffic Mirrors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: STATS unique_count(source_ip) by user, day | BASELINE user's daily ip count | ALERT if today's count > 3_stddev_from_mean
- question: Did a user session make an illogical jump in application state that also coincided with a change in the source IP address?
  context: This question combines behavioral and network analytics for high-fidelity detection. A state machine model can track a user's navigation path. A sudden, illogical jump (e.g., from a low-privilege page to an admin page without intermediate steps) is suspicious on its own. When this jump happens at the exact moment the source IP also changes, it is a very strong indicator of a hijack.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internal Network Core
  - Application Server Load Balancers
  - East-West Traffic Mirrors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: MODEL user navigation with state_machine | ALERT if illogical_state_jump occurs AND source_ip for session changes simultaneously
- question: Has an authenticated web request to an internal service occurred from a host where the associated user has no recent logon event?
  context: This question looks for "ghost" sessions, where a user's credentials are used on a host they are not legitimately logged into. If an internal web request from UserA originates from HostB, but domain controller logs show UserA has not logged into HostB (interactively, remotely, or otherwise), it implies the session cookie was stolen and moved to HostB for lateral movement.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - Domain Controllers
  - Member Servers
  - User Endpoints
  - Internal Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: FOR each web_request(user, source_host), QUERY for logon_event(EID 4624) for that user on that host in last 24h | ALERT if no logon event is found
- question: Is an internal web request coming from a user-host pair that has a very low or zero historical probability of occurring?
  context: This question uses historical logon data to identify anomalous lateral movement. By baselining which users log into which hosts, you can spot improbable combinations. A web request from a user on a server they have never logged into before is highly suspicious and could indicate an attacker has pivoted to that server and is using a stolen cookie from there.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - Domain Controllers
  - Member Servers
  - User Endpoints
  - Internal Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: BASELINE probability of user_logon_to_host from logon_events (EID 4624) | FOR each web_request(user, source_host), ALERT if probability is near-zero
- question: Is a web session being used from a host that a user-host relationship graph model deems to be a highly improbable source for that user?
  context: This question applies graph-based machine learning to detect anomalous user-host interactions. A bipartite graph can model the complex relationships between all users and all hosts they log into. This model can then predict the likelihood of future connections. A web request from a user-host pair that the model flags as highly improbable is a strong candidate for lateral movement.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - Domain Controllers
  - Member Servers
  - User Endpoints
  - Internal Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: TRAIN user-host logon graph model with logon_events | FOR each web_request(user, source_host), SCORE with model | ALERT on highly improbable pairs
- question: Is a user performing highly privileged actions within a sensitive internal application that are not aligned with their defined role?
  context: This question uses role-based access control logic for detection. By defining URL patterns for sensitive actions (e.g., deleting a VM) and mapping users to roles, you can create high-fidelity alerts. When a user not in the 'vCenter Admins' group attempts to access a VM deletion API, it's a clear policy violation that could indicate a hijacked session of a lower-privileged user is being used.
  answer_sources:
  - Zeek http.log
  - Administrative Network Segment
  - Servers hosting critical management tools
  - Core Switches
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log WHERE url MATCHES privileged_action_patterns | ALERT if user NOT IN required_admin_group
- question: Is a user performing actions within a sensitive web application that are statistically very rare for them or their peer group?
  context: This question moves beyond static roles to detect behavioral anomalies. An attacker with a stolen cookie may perform actions the legitimate user never does. By profiling the URLs/APIs accessed by each user and their peers (e.g., other developers), you can flag an action that is in the 99.9th percentile of rarity for that user or group, indicating a significant deviation from normal behavior.
  answer_sources:
  - Zeek http.log
  - Administrative Network Segment
  - Servers hosting critical management tools
  - Core Switches
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: PROFILE url_access_frequency by user and peer_group | FOR each new action, CALCULATE rarity_score | ALERT if score > 99.9th percentile
- question: Does a user's sequence of actions within an application deviate significantly from normal navigation paths learned by a machine learning model?
  context: This question uses deep learning to detect sophisticated session hijacking. A sequence-to-sequence autoencoder can learn the 'rhythm' and normal flow of user actions. When an attacker takes over a session, their sequence of actions (e.g., jumping directly to sensitive settings) will not match the learned patterns. The model will fail to reconstruct this anomalous sequence, generating a high error rate and a corresponding alert.
  answer_sources:
  - Zeek http.log
  - Administrative Network Segment
  - Servers hosting critical management tools
  - Core Switches
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: STREAM user_session_url_sequence to autoencoder_model | CALCULATE reconstruction_error | ALERT if error is high