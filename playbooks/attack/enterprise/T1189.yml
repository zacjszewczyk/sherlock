name: T1189: Drive-by Compromise
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary has gained initial access by compromising a user's web browser upon visiting a malicious or compromised website. A drive-by compromise occurs when a user, with no interaction other than browsing, triggers malicious code that exploits a vulnerability in their browser or an associated plugin. This can happen through malicious advertisements (malvertising), strategically compromised legitimate websites (watering holes), or sites hosting exploit kits. Detections focus on identifying network connections to known malicious infrastructure, analyzing web content for suspicious scripts or exploit code, observing anomalous behavior on the endpoint (such as a browser spawning a command shell or writing executable files), and detecting coordinated access to newly observed domains by groups of users.
type: technique
related:
- TA0001: Initial Access
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are endpoints communicating with domains or URLs on threat intelligence feeds?
  context: This question aims to detect the initial vector of a drive-by compromise by correlating network traffic logs (DNS queries and HTTP requests) against high-confidence lists of known malicious domains and URLs. A match indicates a user's browser has been directed to, or has requested, content from a site associated with malicious activity like exploit kits or malvertising, which is a primary indicator of a drive-by attack.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek dns.log
  - Enterprise Web Proxy
  - Internet Gateway Firewall
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log, dns.log WHERE destination_host IN threat_intel_feed OR destination_url IN threat_intel_feed
- question: Have any users visited websites with very low reputation scores?
  context: This question seeks to identify visits to potentially malicious, newly created, or obscure websites that may be used for drive-by attacks. By calculating a reputation score based on factors like domain age, registration privacy, and historical prevalence within the organization, we can flag visits to outlier domains (e.g., in the lowest 5th percentile) that are statistically unusual and therefore suspicious.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek dns.log
  - Enterprise Web Proxy
  - Internet Gateway Firewall
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE reputation_score for all domains in http.log, dns.log. ALERT if score < 5th_percentile
- question: Are any requested URLs being classified as malicious by our machine learning model?
  context: This question uses a predictive approach to identify malicious URLs that may not yet be on any threat intelligence feed. A pre-trained classification model analyzes lexical features of URLs (like length, entropy, and special characters) from HTTP logs. An alert is generated if the model classifies a URL as malicious with high confidence, suggesting a potential drive-by compromise attempt.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek dns.log
  - Enterprise Web Proxy
  - Internet Gateway Firewall
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PREDICT maliciousness for all URLs in http.log. ALERT if confidence_score > 0.90
- question: Do any HTTP response bodies contain content matching signatures of known exploit kits or obfuscation techniques?
  context: This question focuses on inspecting the actual content delivered to the browser. By scanning HTTP response bodies with YARA rules, we can detect specific patterns, code snippets, or function names associated with known exploit kits and common obfuscation methods used to hide malicious payloads. A match is a strong indicator that the user has been served malicious content designed to exploit their browser.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Enterprise Web Proxy
  - Network Intrusion Detection System (NIDS)
  - Full Packet Capture (PCAP) Storage
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SCAN http_response_bodies with YARA ruleset for exploit_kits. ALERT on match.
- question: Is there evidence of obfuscated JavaScript in HTTP traffic, as indicated by high character entropy?
  context: This question aims to identify malicious JavaScript, which is often heavily obfuscated to evade signature-based detection. By calculating the character entropy of JavaScript code found in HTTP traffic and comparing it against a baseline of normal entropy levels, we can flag scripts that are abnormally random or complex. A significant deviation from the baseline suggests the presence of packed or obfuscated code, a common tactic in drive-by attacks.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Enterprise Web Proxy
  - Network Intrusion Detection System (NIDS)
  - Full Packet Capture (PCAP) Storage
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE entropy for JavaScript in HTTP traffic. ALERT if entropy > (baseline + 3*stddev).
- question: Does our sequence model classify any JavaScript code from web traffic as suspicious?
  context: This question leverages advanced machine learning to analyze the structure of JavaScript code. A trained sequence model (like an LSTM) examines the code's abstract syntax tree (AST) to identify patterns and sequences indicative of malicious functionality, even if the code is novel or obfuscated. This helps detect zero-day or polymorphic browser exploits that might otherwise be missed.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Enterprise Web Proxy
  - Network Intrusion Detection System (NIDS)
  - Full Packet Capture (PCAP) Storage
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ANALYZE JavaScript AST with LSTM model. ALERT if classified as suspicious.
- question: Have any web browsers spawned command-line interpreters or scripting hosts with suspicious command-line arguments?
  context: This question looks for post-exploitation activity on the endpoint. A successful browser exploit often results in the browser process spawning a child process like a command shell (cmd.exe, powershell.exe) to execute further commands. This query specifically looks for this parent-child relationship and checks the command line for high-fidelity indicators of malicious activity, such as encoded commands or instructions to download and execute code.
  answer_sources:
  - Windows Event ID 4688
  - User Workstations
  - Virtual Desktop Infrastructure (VDI) Fleet
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs WHERE parent_process is browser AND child_process is (cmd, powershell, wscript) AND command_line contains ('-enc', 'IEX', 'mshta.exe javascript:', 'certutil').
- question: Are there any statistically rare command-line arguments being executed by processes spawned from web browsers?
  context: This question aims to detect anomalous post-exploitation commands that may not contain known malicious strings. By analyzing the frequency of all command-line tokens across the enterprise, we can identify arguments that are highly unusual when initiated by a browser. The presence of such rare tokens is a strong statistical indicator of abnormal and potentially malicious behavior.
  answer_sources:
  - Windows Event ID 4688
  - User Workstations
  - Virtual Desktop Infrastructure (VDI) Fleet
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ANALYZE command_line tokens for browser-spawned processes. ALERT on tokens with frequency < 0.1%.
- question: Is our classification model flagging any command lines originating from browser processes as malicious?
  context: This question applies machine learning to score the likelihood that a command line is malicious based on its characteristics (length, character sets, keyword presence). When a command line spawned by a browser process receives a high maliciousness score, it provides a high-confidence signal that a browser exploit has led to command execution on the endpoint.
  answer_sources:
  - Windows Event ID 4688
  - User Workstations
  - Virtual Desktop Infrastructure (VDI) Fleet
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SCORE maliciousness of command lines from browser-spawned processes. ALERT if score is high.
- question: Have web browsers spawned any unexpected child processes or written executable files to unusual locations?
  context: This question identifies two key indicators of post-exploitation activity. First, it checks for browsers spawning child processes that are not on an approved allowlist of helper applications, which could indicate malicious code execution. Second, it monitors for browsers writing executable files (e.g., .exe, .dll, .ps1) to temporary or user-writable directories, as this is a common method for malware to establish persistence or drop a next-stage payload after a drive-by compromise.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - User Workstations
  - Application Servers
  - VDI Fleet
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_logs WHERE parent is browser AND child NOT IN allowlist. SEARCH file_creation_logs WHERE process is browser AND file_extension is executable AND path IN (%APPDATA%, %TEMP%).
- question: Have any anomalous parent-child process relationships or file write events involving browsers been detected?
  context: This question uses frequency analysis to find outliers in browser behavior. By establishing a baseline of normal process creation and file write activities over a 30-day period, we can detect events that are extremely rare (e.g., in the bottom 1st percentile of frequency). Such statistical anomalies are strong indicators of a deviation from normal operations, potentially caused by a successful exploit.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - User Workstations
  - Application Servers
  - VDI Fleet
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ANALYZE frequency of parent-child pairs and file-write events for browsers. ALERT on events in bottom 1st percentile.
- question: Are clustering algorithms identifying outlier host events related to browser activity?
  context: This question uses unsupervised machine learning to find novel or unknown malicious activity. By grouping similar host events (based on parent/child process names, file paths, etc.) into clusters, any event that does not fit into an existing cluster is flagged as an outlier. An outlier involving a browser could represent a new attack pattern not covered by existing rules or signatures.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - User Workstations
  - Application Servers
  - VDI Fleet
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER host events using DBSCAN. FLAG browser-related events that are outliers.
- question: Is there any suspicious follow-on network activity from a host shortly after a web browsing event?
  context: This question aims to detect command-and-control (C2) or data exfiltration traffic immediately following a potential compromise. It correlates web browsing events with subsequent network connections from the same host within a short time window (5 minutes). A connection to a known malicious IP or over a non-standard, high-risk port is a strong indicator that the browser was exploited and is now communicating with an attacker's infrastructure.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internet Gateway Firewall
  - User Workstations
  - Network Core Switches
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN http.log and conn.log on source_ip. SEARCH for conn.log events within 5 mins of http.log event WHERE dest_ip IN threat_feed OR dest_port is high-risk.
- question: Are users making anomalous network connections (based on destination ASN, country, or port) after browsing the web?
  context: This question establishes a behavioral baseline for each user's typical network activity. By tracking the normal destination Autonomous Systems (ASNs), countries, and ports a user connects to, we can detect significant deviations. A new connection made shortly after browsing that has a high anomaly score (e.g., to a rarely contacted country or ASN) suggests potential C2 communication resulting from a drive-by compromise.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internet Gateway Firewall
  - User Workstations
  - Network Core Switches
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE anomaly score for new connections post-browsing based on user's baseline (ASN, country, port). ALERT if score > 99th percentile.
- question: Do time-series models detect anomalies in a host's outbound traffic that correlate with recent web browsing?
  context: This question applies time-series analysis to a host's network traffic patterns (like bytes out or connection counts) to detect deviations from its own historical norm. An alert from this model, when correlated with recent web browsing activity from the same host, can help pinpoint the moment a compromise occurred and the subsequent start of C2 traffic, even if the destination is not known to be malicious.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Internet Gateway Firewall
  - User Workstations
  - Network Core Switches
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY ARIMA model to host outbound traffic. CORRELATE traffic anomalies with recent http.log activity from the same host.
- question: Are multiple hosts within the same subnet accessing the same newly observed domain in a short time frame?
  context: This question is designed to detect watering hole attacks, where an adversary compromises a site frequented by a specific group of users. By tracking Newly Observed Domains (NODs) and alerting when multiple hosts from a related group (like a /24 subnet) access the same NOD quickly, we can identify targeted attacks against a specific department or team.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Active Directory
  - Internal DNS Resolvers
  - Enterprise Web Proxy
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MAINTAIN list of Newly Observed Domains (NODs). ALERT if >10 hosts in same /24 subnet access the same NOD within 1 hour.
- question: Are any domains being accessed that are disproportionately popular within our organization compared to their global popularity?
  context: This question seeks to identify potential watering hole sites by calculating a 'locality ratio'. This ratio compares the internal popularity of a domain (how many of our hosts visit it) to its global popularity. A domain that is unpopular worldwide but frequently visited internally is highly suspicious and could be a compromised site specifically targeting the organization.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Active Directory
  - Internal DNS Resolvers
  - Enterprise Web Proxy
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE locality_ratio = (internal_host_count / global_popularity) for each domain. ALERT if ratio is in top 5%.
- question: Does graph analysis reveal clusters of hosts that are strongly connected to a small, shared set of external domains?
  context: This question uses community detection algorithms on a graph of host-to-domain connections. This advanced technique can reveal subtle, coordinated activity. The formation of a new, dense cluster where a specific group of internal hosts all begin connecting to a small set of common external domains is a powerful indicator of a targeted watering hole campaign.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Active Directory
  - Internal DNS Resolvers
  - Enterprise Web Proxy
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CONSTRUCT host-domain graph. USE Louvain Modularity to detect communities. INVESTIGATE newly formed, dense communities.