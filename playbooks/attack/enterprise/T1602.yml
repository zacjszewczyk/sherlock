name: T1602: Data from Configuration Repository
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: >-
  This playbook helps investigate whether an adversary has collected sensitive data from various configuration repositories, such as network devices, cloud consoles, version control systems, and Group Policy Objects. It focuses on detecting anomalous network connections, unusual tool usage, unauthorized access patterns, large data transfers, suspicious authentication events, and direct file access that could indicate the theft of device configurations, infrastructure-as-code, or other critical system settings.
type: technique
related:
  - 'TA0009: Collection'
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have there been any successful connections or authentications to a configuration repository from a known malicious IP address or using known compromised credentials?
    context: >-
      This question aims to find high-confidence indicators of compromise by correlating network and authentication logs with threat intelligence feeds and lists of compromised accounts. A match strongly suggests an adversary is targeting repositories like NMS servers, Domain Controllers, or Git servers to steal configuration data.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Zeek ssh.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Network Management System (NMS) servers
      - TFTP servers
      - Core network infrastructure (routers, switches)
      - Domain Controllers hosting Group Policy Objects
      - Cloud management consoles and API endpoints
      - 'Version control systems (e.g., Git, SVN) storing infrastructure-as-code'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          JOIN (connection_logs, auth_logs) WITH (threat_intel_ips, compromised_creds) 
          WHERE destination IN (repository_NAIs) 
          AND (source_ip IN threat_intel_ips OR username IN compromised_creds)
  - question: Have there been any connections to a configuration repository from a known malicious IP address that also originates from a statistically rare country or Autonomous System Number (ASN)?
    context: >-
      This question enhances threat detection by combining threat intelligence with statistical analysis. An adversary might use infrastructure in unusual geographic locations. By flagging connections from threat-listed IPs that also come from rare ASNs or countries, we can prioritize potentially more sophisticated or targeted attacks that deviate from normal traffic patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Zeek ssh.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Network Management System (NMS) servers
      - TFTP servers
      - Core network infrastructure (routers, switches)
      - Domain Controllers hosting Group Policy Objects
      - Cloud management consoles and API endpoints
      - 'Version control systems (e.g., Git, SVN) storing infrastructure-as-code'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each new connection TO repository_NAIs:
            IF source_ip IN threat_list AND rarity(source_country) > 99th_percentile:
              ALERT
  - question: Can we identify potentially malicious sessions to configuration repositories using a machine learning model that scores sessions based on features like IP reputation, ASN rarity, and credential status?
    context: >-
      This question leverages a supervised machine learning model to proactively identify suspicious connections that may not be caught by simple rules. By training a model on features like IP reputation, source location rarity, time-of-day anomalies, and use of compromised credentials, we can assign a risk score to each session and alert on those exceeding a high-probability threshold for maliciousness.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Zeek ssh.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Network Management System (NMS) servers
      - TFTP servers
      - Core network infrastructure (routers, switches)
      - Domain Controllers hosting Group Policy Objects
      - Cloud management consoles and API endpoints
      - 'Version control systems (e.g., Git, SVN) storing infrastructure-as-code'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each connection session:
            features = [ip_rep, asn_rarity, time_deviation, known_compromised_cred_flag]
            score = ml_model.predict_proba(features)
            IF score > 0.85:
              ALERT
  - question: Have any SNMP GET/GETBULK requests targeted sensitive OIDs, or have network scanning tools like 'snmpwalk' or 'nmap' been executed on non-administrative hosts?
    context: >-
      This question looks for direct evidence of configuration collection attempts. Adversaries may use SNMP to query devices for their running configurations via specific OIDs. They may also use common scanning tools on compromised endpoints to perform this reconnaissance. Detecting these specific OIDs or the execution of these tools on unauthorized machines is a strong indicator of malicious activity.
    answer_sources:
      - Zeek snmp.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Network Management System (NMS) servers
      - Core network infrastructure (routers, switches)
      - Endpoints not designated for network administration
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH snmp_logs WHERE oid IN (sensitive_oid_watchlist);
          SEARCH process_creation_logs WHERE (process_name IN ('snmpwalk', 'nmap') AND host NOT IN (admin_hosts))
  - question: Are there any source IPs making SNMP requests with an unusually high variety of OID prefixes, suggesting reconnaissance scanning rather than normal polling?
    context: >-
      This question uses statistical analysis to differentiate between legitimate, targeted SNMP polling and malicious reconnaissance. Legitimate tools typically query a predictable set of OIDs, resulting in low entropy. A reconnaissance scan, however, will query many different OID branches, resulting in high entropy. A significant deviation from the baseline entropy can indicate an adversary is mapping out the MIB tree to find sensitive information.
    answer_sources:
      - Zeek snmp.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Network Management System (NMS) servers
      - Core network infrastructure (routers, switches)
      - Endpoints not designated for network administration
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each source_ip in snmp_logs:
            CALCULATE shannon_entropy(requested_oids) in 5_min_window
            IF entropy > 3_std_dev_from_baseline:
              ALERT
  - question: Can we detect anomalous SNMP query sequences from unauthorized sources that deviate from patterns learned from legitimate management servers?
    context: >-
      This question applies sequence analysis to identify malicious SNMP activity. By training a model (like an HMM or LSTM) on the typical sequence of SNMP queries from authorized servers, we can create a profile of 'normal' behavior. When a new query sequence from an unauthorized host has a low probability of being generated by this model, it suggests an anomalous and potentially malicious pattern of collection.
    answer_sources:
      - Zeek snmp.log
      - Zeek conn.log
      - Windows Event ID 4688
      - Network Management System (NMS) servers
      - Core network infrastructure (routers, switches)
      - Endpoints not designated for network administration
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each snmp_session from non-admin_host:
            probability = sequence_model.score(query_sequence)
            IF probability < low_threshold:
              ALERT
  - question: Have any connections or login attempts to configuration repositories originated from a host or user account not on the authorized access allow-list?
    context: >-
      This question enforces a zero-trust approach to accessing critical infrastructure. By defining an explicit allow-list of administrative subnets, jump boxes, and user accounts, any connection attempt from outside this list is immediately flagged as a policy violation and a potential security incident. This is a highly effective way to detect unauthorized access attempts.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Windows Event ID 4624
      - Network Management System (NMS) servers
      - Core network infrastructure (routers, switches)
      - Domain Controllers hosting Group Policy Objects
      - Cloud management consoles and API endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH (connection_logs, auth_logs) 
          WHERE destination IN (repository_NAIs) 
          AND (source_ip NOT IN (admin_ip_allowlist) OR user NOT IN (admin_user_allowlist))
  - question: Have there been any connections to a configuration repository from a source subnet that is statistically rare or has not been seen before?
    context: >-
      This question aims to find unusual access paths that might be missed by static allow-lists. By baselining all connecting subnets over a long period, we can identify new or extremely infrequent sources. A connection from a subnet that rarely or never communicates with a sensitive repository could indicate a compromised machine on an unexpected network segment being used as a pivot point.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Windows Event ID 4624
      - Network Management System (NMS) servers
      - Core network infrastructure (routers, switches)
      - Domain Controllers hosting Group Policy Objects
      - Cloud management consoles and API endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each new connection TO repository_NAIs:
            CHECK source_subnet against 30-day baseline
            IF rarity(source_subnet) > 98th_percentile:
              ALERT
  - question: Can we use an unsupervised clustering algorithm to identify anomalous network sessions to configuration repositories that do not fit into normal traffic patterns?
    context: >-
      This question uses unsupervised machine learning to find outliers without pre-existing labels. By clustering network sessions based on features like source IP, destination port, and bytes transferred, the algorithm groups legitimate, recurring traffic patterns. Any session that does not fit into a cluster (an outlier) is flagged as anomalous and warrants investigation, as it may represent a novel attack vector.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Windows Event ID 4624
      - Network Management System (NMS) servers
      - Core network infrastructure (routers, switches)
      - Domain Controllers hosting Group Policy Objects
      - Cloud management consoles and API endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          APPLY dbscan_clustering ON connection_logs TO repository_NAIs using features (src_ip, dst_port, protocol, bytes);
          IDENTIFY and ALERT on noise_points/outliers
  - question: Has any single network session from a configuration repository exceeded a predefined large data transfer threshold, potentially indicating a full configuration backup exfiltration?
    context: >-
      This question uses a simple but effective method to detect bulk data theft. While normal administrative tasks involve small data transfers, exfiltrating an entire device configuration or repository backup results in a large data transfer. By setting a high, protocol-specific threshold (e.g., >50MB for TFTP), we can create high-fidelity alerts for these potentially critical events.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Network Management System (NMS) servers
      - TFTP servers
      - Core network infrastructure (routers, switches)
      - 'Version control systems (e.g., Git, SVN) storing infrastructure-as-code'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH connection_logs 
          WHERE destination IN (repository_NAIs) 
          AND server_to_client_bytes > large_threshold (e.g., 50MB)
  - question: Have there been any network connections from a configuration repository where the amount of data transferred was a significant statistical outlier compared to the historical baseline for that connection pair?
    context: >-
      This question provides a more dynamic approach than a hard threshold by comparing data transfer volumes to a historical baseline for each specific source-destination pair. Using a Z-score, it can detect transfers that are statistically unusual (e.g., 3.5 standard deviations above the mean), even if they don't cross a large, fixed threshold. This helps identify anomalous transfers relative to their specific context.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Network Management System (NMS) servers
      - TFTP servers
      - Core network infrastructure (routers, switches)
      - 'Version control systems (e.g., Git, SVN) storing infrastructure-as-code'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each new connection:
            CALCULATE z_score(resp_bytes) against historical baseline for that src-dst pair
            IF z_score > 3.5:
              ALERT
  - question: Has the aggregate data volume transferred from a configuration repository significantly exceeded the amount predicted by a time series forecasting model?
    context: >-
      This question looks for bulk data transfers at a macro level by modeling the expected data egress from a repository over time. A time series model learns the normal rhythm (e.g., hourly, daily patterns) of data flow. If the actual observed data volume dramatically exceeds the model's predicted upper bound, it indicates an anomalous event, such as a large-scale exfiltration, affecting the entire repository.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Network Management System (NMS) servers
      - TFTP servers
      - Core network infrastructure (routers, switches)
      - 'Version control systems (e.g., Git, SVN) storing infrastructure-as-code'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FORECAST expected_hourly_volume for each repository_NAI;
          IF actual_volume > predicted_upper_bound:
            ALERT
  - question: Has any successful login to a configuration repository been immediately preceded by a high number of failed login attempts from the same source IP?
    context: >-
      This question aims to detect successful brute-force or password-spraying attacks. A pattern of many failed authentications followed by a success from the same source is a classic indicator that an adversary was attempting to guess a password and eventually succeeded. Correlating failed and successful login events within a short time window is a high-confidence method for identifying this.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Network Management System (NMS) servers
      - Domain Controllers
      - Cloud management consoles
      - 'Version control systems (e.g., Git, SVN)'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CORRELATE successful_logins with failed_logins;
          IF count(failed_logins from src_ip) > 15 in 5_mins preceding a successful_login:
            ALERT
  - question: Has a successful administrative login occurred that qualifies as 'impossible travel' or happened at a time that is a major statistical anomaly for that specific user?
    context: >-
      This question identifies compromised credentials by analyzing the context of the login. 'Impossible travel' (e.g., a user logging in from two distant countries in an hour) is a strong indicator of account sharing or theft. Similarly, a login occurring at a time that is highly unusual for a user (e.g., 3 AM for a 9-to-5 employee, calculated via standard deviations) suggests the legitimate user is likely not the one performing the action.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Network Management System (NMS) servers
      - Domain Controllers
      - Cloud management consoles
      - 'Version control systems (e.g., Git, SVN)'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each successful_login:
            CHECK for impossible_travel based on previous login location/time
            CALCULATE login_hour deviation from user's baseline
            IF impossible_travel OR time_deviation > 4_std_dev:
              ALERT
  - question: Can we use an Isolation Forest model to detect anomalous successful logins to configuration repositories based on a combination of user, location, and time-based features?
    context: >-
      This question uses an unsupervised anomaly detection model, Isolation Forest, to identify suspicious logins. The model learns a profile of normal login behavior for each user based on multiple features (source IP, location, time, day, logon type). It is particularly effective at flagging logins that are outliers across several dimensions simultaneously, which might be missed by single-variable statistical checks.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Network Management System (NMS) servers
      - Domain Controllers
      - Cloud management consoles
      - 'Version control systems (e.g., Git, SVN)'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each login_event:
            features = [user, src_ip, geo, time, day, logon_type]
            anom_score = isolation_forest_model.predict(features)
            IF anom_score == -1 (outlier):
              ALERT
  - question: Has an unauthorized process or user account attempted to read a sensitive configuration file or backup on a repository server?
    context: >-
      This question provides a last line of defense by monitoring direct file access on the host itself. By enabling auditing (SACLs) on critical configuration files and directories, we can generate an event for every read attempt. An alert is triggered if the process or user accessing the file is not on an explicit allow-list, providing a high-fidelity signal that an unauthorized entity is trying to access sensitive data.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - File systems of Network Management System (NMS) servers
      - TFTP server root directories
      - Domain Controller SYSVOL shares containing GPOs
      - 'Local directories of version control systems (e.g., Git, SVN) on management servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH file_access_audits (EventID 4663) 
          WHERE file_path IN (critical_config_paths) 
          AND (process_name NOT IN (allow_list) OR user NOT IN (admin_group))
  - question: Has a sensitive configuration file been accessed with an unusual frequency or by a process that has rarely or never accessed it before?
    context: >-
      This question uses statistical baselining to detect anomalous file access patterns. For example, a monthly backup archive that is suddenly accessed mid-month is suspicious. Likewise, if a common configuration file is suddenly read by a generic process like 'powershell.exe' instead of its usual dedicated application, it could indicate an adversary is using living-off-the-land techniques to read the file.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - File systems of Network Management System (NMS) servers
      - TFTP server root directories
      - Domain Controller SYSVOL shares containing GPOs
      - 'Local directories of version control systems (e.g., Git, SVN) on management servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each file_access_event:
            CHECK access frequency and process rarity against 30-day baseline
            IF file is dormant OR process is rare for this file:
              ALERT
  - question: Can a machine learning classification model distinguish between legitimate administrative file access and malicious access to configuration files?
    context: >-
      This question applies supervised machine learning to the problem of file access auditing. By training a model on labeled historical data, it can learn the complex, non-linear patterns that differentiate routine access by an administrator from malicious access by an adversary. Features like process rarity, user account tier, and time of day help the model make a nuanced determination, reducing false positives from simpler methods.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - File systems of Network Management System (NMS) servers
      - TFTP server root directories
      - Domain Controller SYSVOL shares containing GPOs
      - 'Local directories of version control systems (e.g., Git, SVN) on management servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each file_access_event:
            features = [process_rarity, user_tier, time_of_day, file_path_rarity]
            prediction = ml_model.predict(features)
            IF prediction == 'malicious':
              ALERT