name: "T1137: Office Application Startup"
id: "b1d4f2e8-c9a1-4b7e-9d0f-5a2c8f6b3e1d"
description: "This playbook investigates whether an adversary is maintaining persistence using Office application startup mechanisms. This involves looking for malicious files written to Office startup paths, suspicious registry modifications for Office add-ins, Office applications spawning unusual child processes, non-standard processes writing to startup directories, anomalous Office add-in installations, and the creation of malicious Outlook rules designed to execute applications."
type: "technique"
related:
  - "TA0003: Persistence"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are known malicious files or add-ins being written to Office startup paths or registered as add-ins?"
    context: "This question seeks to identify persistence attempts using symbolic, high-confidence indicators. Adversaries may place malicious files (like VBS scripts or DLLs) in Office startup directories (`STARTUP`, `Templates`) so they execute when the application launches. They can also register malicious COM add-ins in the registry. This query looks for file hashes matching threat intelligence feeds or registry values matching watchlists of known malicious add-ins."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "User workstations"
      - "Terminal servers"
      - "File servers hosting shared Office templates"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH file creation events (4663) in Office startup paths. HASH created file. JOIN hash against threat intel feed. ALERT on match. SEARCH registry modification events (4657) for Office add-in keys. MATCH value/data against known malicious add-in watchlist. ALERT on match."
  - question: "Are there any files with unusually high entropy or any rarely seen add-in paths being used in Office startup locations?"
    context: "This question uses statistical analysis to find outliers that may indicate malicious activity. High file name entropy can suggest an adversary is trying to obfuscate file names to avoid detection. Similarly, an add-in pointing to a DLL in an uncommon location or a DLL that is present on very few systems enterprise-wide is suspicious and could be a custom malicious tool."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "User workstations"
      - "Terminal servers"
      - "File servers hosting shared Office templates"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH file creation events (4663) in Office startup paths. CALCULATE file name entropy. ALERT on entropy > 99th percentile. SEARCH registry modification events (4657) for Office add-ins. CALCULATE prevalence of add-in DLL paths. ALERT on path prevalence < 1%."
  - question: "Is there an anomalous volume of file or registry modifications in sensitive Office startup locations for any user?"
    context: "This question leverages machine learning to detect unusual spikes in activity. Adversaries setting up persistence may generate a burst of file and registry writes that deviates from a user's normal behavior. A time-series model can learn a user's baseline activity and flag significant deviations that could represent a persistence installation."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "User workstations"
      - "Terminal servers"
      - "File servers hosting shared Office templates"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "MODEL time-series of file (4663) and registry (4657) modifications in Office startup locations per user. ALERT on volume > predicted confidence interval."
  - question: "Are Office applications spawning child processes with command lines containing known obfuscation or download patterns?"
    context: "This seeks to find explicit evidence of malicious code execution. Office applications spawning processes like PowerShell with encoded commands (`-enc`), download commands (`DownloadString`), or inline execution (`IEX`) is a common TTP for executing a payload after a user opens a malicious document. This query uses regular expressions to find these high-confidence malicious patterns."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "User workstations"
      - "Terminal servers"
      - "Internet gateway"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH process creation events (4688) where parent is Office app. APPLY regex for '-enc', '-nop', 'IEX', 'DownloadString', base64 patterns to command line. ALERT on match."
  - question: "Are Office applications spawning child processes with unusually long or high-entropy command lines?"
    context: "This uses statistical measures to identify suspicious command lines. Malicious scripts, especially encoded ones, are often significantly longer and have higher character entropy than benign commands. By baselining normal command line characteristics for specific parent-child process pairs (e.g., `winword.exe` -> `powershell.exe`), we can flag outliers that are more than 3 standard deviations from the mean."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "User workstations"
      - "Terminal servers"
      - "Internet gateway"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH process creation events (4688) where parent is Office app. BASELINE command line length and entropy per parent-child pair. ALERT on values > 3 standard deviations from mean."
  - question: "Can we predict if a command line spawned by an Office application is malicious based on its features?"
    context: "This question applies a machine learning classification model to automate the detection of malicious command lines. By training a model (like Random Forest) on features such as keyword presence, n-grams, and entropy from a labeled dataset, the model can score new, unseen command lines for their probability of being malicious, allowing for more nuanced and scalable detection than simple regex."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "User workstations"
      - "Terminal servers"
      - "Internet gateway"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "MODEL classification of command lines from Office child processes using features (keywords, n-grams, entropy). ALERT on high probability of maliciousness."
  - question: "Are Office applications spawning known high-risk child processes like `net.exe` or `regsvr32.exe`?"
    context: "This question focuses on a simple but effective detection method. Benign Office application usage rarely involves spawning system or network utilities. This query checks for instances where an Office process (`winword.exe`, `excel.exe`, etc.) creates a child process from a denylist of tools commonly abused by adversaries for reconnaissance or execution, such as `net.exe`, `whoami.exe`, or `powershell.exe`."
    answer_sources:
      - "Windows Event ID 4688"
      - "User workstations"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH process creation events (4688). ALERT if parent is Office app and child is on denylist (net.exe, whoami.exe, regsvr32.exe, etc.)."
  - question: "Are Office applications spawning child processes that are new or rare in the environment?"
    context: "This question aims to find anomalous process relationships. By establishing a baseline of all parent-child process relationships across the enterprise, we can flag any new or very infrequent pairings. An Office application spawning a process that has never been seen before, or only on a handful of hosts, is highly suspicious and warrants investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "User workstations"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH process creation events (4688). CALCULATE frequency of all parent-child pairs. ALERT on new pairs or pairs with prevalence < 0.1% or seen on < 5 hosts."
  - question: "Are there any process creation events involving Office applications that do not fit into established clusters of normal behavior?"
    context: "This question uses unsupervised machine learning to find anomalous process events. A clustering algorithm like DBSCAN can group similar process events based on features like parent/child names, user, and host. Events that do not belong to any established cluster are considered outliers or noise, and in this context, they represent potentially malicious activity that deviates from normal patterns."
    answer_sources:
      - "Windows Event ID 4688"
      - "User workstations"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "MODEL clustering of process creation events (parent, child, user, host). ALERT on new events that do not fit into an existing cluster."
  - question: "Are suspicious processes like `powershell.exe` or `cmd.exe` writing executable or script files to Office startup directories?"
    context: "This question looks for a specific, high-fidelity indicator of persistence. While Office applications or installers might legitimately write template files, other processes like `powershell.exe` or `cmd.exe` writing files with extensions like `.dll`, `.vbs`, or `.ps1` to these locations is highly indicative of an adversary dropping a persistence mechanism. This query correlates file write events with the process that performed the write and alerts if that process is on a denylist."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "User workstations"
      - "File servers hosting shared templates"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH file write events (4663) in Office startup paths. CORRELATE ProcessID to process logs (4688). ALERT if writing process is on denylist (powershell.exe, cmd.exe, etc.) and file extension is script/executable."
  - question: "Are there any new or rare processes writing files, or files with rare extensions, to Office startup directories?"
    context: "This question uses statistical rarity to uncover threats. By baselining which processes normally write to Office startup paths, we can immediately spot an anomaly when a new process performs this action. Similarly, while `.dotm` might be common, an `.exe` or `.dll` being written to these directories is statistically rare and suspicious. This query flags writes from new processes or files with uncommon extensions."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "User workstations"
      - "File servers hosting shared templates"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "BASELINE processes that write to Office startup paths. ALERT on writes from a new process. BASELINE file extensions in these paths. ALERT on statistically rare extensions (.exe, .dll)."
  - question: "Do event sequences preceding a file write to an Office startup path deviate from normal user behavior patterns?"
    context: "This question uses ML to analyze the chain of events leading to a suspicious action. A normal file write might be preceded by launching Word and clicking 'Save As'. A malicious write might be preceded by a network connection from a rare IP, followed by a PowerShell execution. A sequence analysis model (like an HMM) can learn these normal sequences and flag chains of events that are anomalous, providing richer context than a single event."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "User workstations"
      - "File servers hosting shared templates"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "MODEL sequence of events (e.g., network connection, process creation) preceding file writes (4663) to startup paths. ALERT on sequences that deviate from learned normal models."
  - question: "Are Office add-in registry keys being modified by non-standard processes like `cmd.exe` or `reg.exe`?"
    context: "This question seeks to identify when a persistence mechanism is being installed via the registry by an unusual process. Legitimate add-ins are typically installed by `msiexec.exe` or application updaters. An adversary might use a command-line tool like `reg.exe` or `powershell.exe` to create the necessary keys. This query alerts when a process from a denylist modifies these specific registry keys."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "User workstations"
      - "Domain Controllers"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH registry modifications (4657) to Office add-in keys. CORRELATE ProcessID to process logs (4688). ALERT if modifying process is on denylist (cmd.exe, powershell.exe, reg.exe)."
  - question: "Are any newly installed Office add-ins statistically rare across the enterprise?"
    context: "This question uses prevalence analysis to find suspicious software. Most legitimate Office add-ins will be installed on a significant portion of the user base. A custom malicious add-in, however, will be rare. By baselining all add-in names and their DLL paths, we can flag any new add-in that is entirely new or has a very low prevalence (e.g., installed on less than 1% of systems), as it is a strong indicator of a targeted tool."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "User workstations"
      - "Domain Controllers"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "BASELINE all Office add-in FriendlyNames and DLL paths across enterprise. CALCULATE prevalence of each. ALERT on new add-ins with prevalence < 1% or that are previously unseen."
  - question: "Do any registry modifications related to Office add-ins appear as significant outliers compared to normal software installation profiles?"
    context: "This question uses an unsupervised ML model to find anomalous registry modification events without pre-defined rules. By feeding features like the process name, username, time of day, and the add-in's prevalence score into a model like Isolation Forest, the model can learn what a 'normal' add-in installation looks like. It can then flag events that are outliers, such as a rare add-in being installed by an unusual process at 3 AM."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "User workstations"
      - "Domain Controllers"
      - "Terminal servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "MODEL anomaly detection on registry modification events (4657) for add-ins using features (process, user, time, add-in prevalence). ALERT on events flagged as outliers."
  - question: "Has an Outlook rule been created that is configured to launch an external application or script?"
    context: "This question targets a classic persistence technique where an adversary creates an Outlook rule to automatically run a malicious program or script when a specific email is received. This query looks for the explicit creation of such rules, either through M365 audit logs (checking for the `New-InboxRule` cmdlet with the `-RunAnApplication` parameter) or by monitoring the endpoint registry where rule data is stored and scanning for keywords like `.exe` or `.vbs`."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4663"
      - "Microsoft 365 Unified Audit Log"
      - "User workstations"
      - "Microsoft Exchange servers"
      - "Office 365 tenant"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "SEARCH M365 audit logs for 'New-InboxRule' with '-RunAnApplication' parameter. OR MONITOR registry modifications (4657) for Outlook rules and scan content for script/executable keywords. ALERT on match."
  - question: "Are there any new Outlook rules with suspicious names, or is any user creating an unusually high number of rules?"
    context: "This question uses statistical methods to find suspicious Outlook rules. Adversaries often use inconspicuous or obfuscated names for their malicious rules, such as a single dot '.' or a high-entropy random string, to evade detection. This query flags rules with such names. Additionally, it tracks the rate of rule creation per user and alerts on a sudden spike, which could indicate automated rule creation by malware."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4663"
      - "Microsoft 365 Unified Audit Log"
      - "User workstations"
      - "Microsoft Exchange servers"
      - "Office 365 tenant"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "CALCULATE entropy of new Outlook rule names. ALERT on entropy > 99th percentile or non-alphanumeric names. TRACK rule creation rate per user. ALERT if rate > 3 standard deviations from user's baseline."
  - question: "Is there an anomalous spike in Outlook rule creation activity, or can we predict if a rule is malicious based on its properties?"
    context: "This question applies machine learning to detect malicious rule activity. A time-series model can monitor the overall volume of rule modifications across the organization and alert on unusual spikes that might indicate a widespread campaign. Separately, a classification model could be trained on features like rule name entropy, the type of action (e.g., run application vs. move to folder), and condition complexity to predict the likelihood that a specific rule is malicious."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4663"
      - "Microsoft 365 Unified Audit Log"
      - "User workstations"
      - "Microsoft Exchange servers"
      - "Office 365 tenant"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "MODEL time-series of Outlook rule modifications (New-InboxRule, Set-InboxRule). ALERT on anomalous spikes. OR MODEL classification of rules based on features (name entropy, action type) to predict maliciousness."