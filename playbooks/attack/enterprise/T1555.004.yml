name: T1555.004: Windows Credential Manager
id: d3b9c8a0-5b1f-4f8e-8a9d-1c2b3e4f5a6b
description: This playbook helps to determine if an adversary has accessed credentials from the Windows Credential Manager. It provides investigative questions and queries to detect various techniques, including the execution of known credential dumping tools by hash, suspicious usage of the 'vaultcmd.exe' utility, direct file access to Windows Vault directories, correlation of credential access with network exfiltration, suspicious parent-child process relationships (e.g., Office spawning 'vaultcmd.exe'), and direct Windows API calls used for credential enumeration.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any processes been executed whose file hashes match known credential dumping tools?
    context: This question aims to identify the execution of a known malicious tool (e.g., Mimikatz, LaZagne) used for credential dumping. By comparing process file hashes against a threat intelligence feed of known malicious hashes, analysts can detect these tools with high fidelity. A match is a strong indicator that an adversary is attempting to steal credentials from the Windows Credential Manager.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Privileged Access Workstations (PAWs), Domain Controllers, Member Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE file_hash IN known_credential_dumper_hashes | ALERT
  - question: Are there any newly observed, non-allowlisted process hashes with a very low prevalence across the enterprise?
    context: Adversaries often use custom or rare tools to evade signature-based detection. This question helps uncover such tools by focusing on statistical rarity. A process hash that is not on the organization's allowlist and has been seen on very few endpoints (e.g., less than 0.1%) is suspicious, as it deviates from normal software distribution patterns and may indicate a custom adversary tool.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Privileged Access Workstations (PAWs), Domain Controllers, Member Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs | FILTER file_hash NOT IN allowlist | CALCULATE prevalence(file_hash) | WHERE prevalence < 0.1% | ALERT
  - question: Can a machine learning model identify process executions that are likely to be credential dumping tools based on their features?
    context: This question uses a behavioral approach to detection. A machine learning model analyzes features of a process execution event (e.g., process name entropy, parent process, command-line arguments) to identify characteristics of malicious credential dumping behavior. This can flag suspicious processes even if they don't have a known malicious hash, providing more resilient detection.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Privileged Access Workstations (PAWs), Domain Controllers, Member Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs | EXTRACT features | SCORE with classification_model | WHERE score > high_probability_threshold | ALERT
  - question: Has the 'vaultcmd.exe' utility been executed with command-line arguments used for enumeration?
    context: The built-in 'vaultcmd.exe' utility can be abused by adversaries to list stored credentials. This question looks for executions of 'vaultcmd.exe' with specific arguments like '/list', '/listcreds', '/listschema', or '/listproperties'. Since legitimate administrative use of these commands is rare, any occurrence should be investigated as a potential credential access attempt.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Terminal Servers, Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name == 'vaultcmd.exe' AND command_line CONTAINS ('/list', '/listcreds', '/listschema', '/listproperties') | ALERT
  - question: Has any user executed 'vaultcmd.exe' with an anomalous frequency or from an unusual parent process?
    context: This question seeks to identify anomalous usage of 'vaultcmd.exe' by baselining normal behavior. An alert is triggered if a user executes the utility far more frequently than their historical average or if it is spawned by a parent process that is not typically associated with its execution. This can help distinguish malicious use from rare but legitimate administrative activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Terminal Servers, Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name == 'vaultcmd.exe' | BASELINE frequency and parent_process per user | ALERT on statistical deviation from baseline
  - question: Is 'vaultcmd.exe' being executed as part of an anomalous process chain?
    context: Adversaries often execute credential access tools from processes established during initial access, such as a web browser or an Office application. This question uses an anomaly detection model to identify unusual process parent-child relationships. A chain like 'winword.exe -> cmd.exe -> vaultcmd.exe' is highly anomalous and a strong indicator of a malicious script or macro executing.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Terminal Servers, Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL IsolationForest on process_chains | PREDICT anomaly on new 'vaultcmd.exe' executions | ALERT on anomaly
  - question: Has a non-allowlisted process accessed files within the Windows Vault directories?
    context: This question focuses on detecting direct manipulation of the credential vault files. By enabling file system auditing on vault directories (e.g., '%APPDATA%\\..\\Local\\Microsoft\\Vault\\'), we can monitor for any process that is not on a strict allowlist (e.g., 'lsass.exe', 'explorer.exe') that reads credential files ('.vcrd') or the policy file ('Policy.vpol'). Such access is highly suspicious.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Data from User Workstations, Servers hosting user profiles, Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_access_logs WHERE target_file_path CONTAINS '\\Microsoft\\Vault\\' AND (target_file_name ENDS_WITH '.vcrd' OR target_file_name == 'Policy.vpol') AND process_name NOT IN allowlist | ALERT
  - question: Has there been a sudden increase in the number of unique processes accessing Windows Vault files on any host?
    context: This question aims to detect anomalous activity by profiling which processes normally access vault files. A sudden increase in the variety (entropy) of processes accessing these sensitive files on a given host suggests that a new tool or script, not part of normal operations, is attempting to enumerate or steal credentials.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Data from User Workstations, Servers hosting user profiles, Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, CALCULATE rolling_7_day_entropy of unique process_names accessing vault_files | ALERT on sudden increase in entropy
  - question: Is there an anomalous spike in the volume of file access events to Windows Vault directories on any host?
    context: This question uses time-series analysis to detect abnormal access patterns. A forecasting model is trained on the normal volume of access events to vault directories for each host. If the observed access volume significantly exceeds the predicted volume, it could indicate a brute-force or enumeration attack by a malicious tool.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Data from User Workstations, Servers hosting user profiles, Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, MODEL access_volume_to_vault_dirs with ARIMA | FORECAST expected_volume | ALERT if actual_volume exceeds forecast_confidence_interval
  - question: Has a host shown signs of credential access followed immediately by a network connection to a known malicious destination?
    context: This question correlates credential access activity with potential exfiltration. It looks for a "smash and grab" scenario where a T1555.004 alert (e.g., 'vaultcmd.exe' execution) is followed within a very short time window (e.g., 5 minutes) by an outbound network connection to an IP or domain on a threat intelligence blocklist.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - Zeek dns.log
      - Data from User Workstations, Internet Gateway, DNS Servers, Proxy Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CORRELATE T1555.004_alert AND subsequent_network_connection (within 5 mins) WHERE destination IN threat_intel_blocklist | ALERT
  - question: Following a credential access event, did the host make an outbound connection to a rare destination with an unusually large amount of data sent?
    context: This question hunts for exfiltration by identifying anomalous network behavior following a credential access event. It flags connections where the destination is statistically rare for that specific host and the amount of data sent is unusually high compared to the host's baseline. This could indicate credentials being sent to an adversary-controlled server.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - Zeek dns.log
      - Data from User Workstations, Internet Gateway, DNS Servers, Proxy Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: AFTER T1555.004_alert, MONITOR outbound_connections | WHERE destination_rarity < 1st_percentile AND bytes_sent > 95th_percentile | ALERT
  - question: Has a sequence of events occurred that matches a high-risk path from credential access to exfiltration?
    context: This question uses a sequence analysis model to identify chains of TTPs. It defines a high-risk state transition, such as a 'Credential Access' event (e.g., 'vaultcmd' execution) followed by an 'Exfiltration' event (e.g., connection to a new, high-entropy domain). An alert is generated if an observed sequence of events matches this malicious path with high probability.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - Zeek dns.log
      - Data from User Workstations, Internet Gateway, DNS Servers, Proxy Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL event_sequences with HiddenMarkovModel | DEFINE high-risk_path (CredentialAccess -> Exfiltration) | ALERT on observed path with high probability
  - question: Has a suspicious parent process spawned a child process that interacts with the Windows Credential Manager?
    context: This question targets attacks originating from scripts or macros, which are common initial access vectors. It looks for process creation events where a suspicious parent (e.g., 'winword.exe', 'powershell.exe') spawns a child process known to interact with the Credential Manager (e.g., 'vaultcmd.exe' or 'rundll32.exe' loading 'keymgr.dll'). This pattern is a high-fidelity indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Email Gateway Servers, Web Servers, Terminal Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE parent_process IN suspicious_list AND (process_name == 'vaultcmd.exe' OR (process_name == 'rundll32.exe' AND command_line CONTAINS 'keymgr.dll')) | ALERT
  - question: Has a rare parent-child process pair involving credential manager interaction been observed?
    context: This question identifies malicious activity by finding statistically rare process relationships. By building a frequency table of all parent-child process pairs across the environment, any pair involving 'vaultcmd.exe' or 'rundll32.exe keymgr.dll' that has been seen very infrequently (e.g., less than 5 times) is flagged. This helps uncover novel or targeted attack chains.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Email Gateway Servers, Web Servers, Terminal Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FREQUENCY_TABLE of all parent_child_pairs | FILTER child_process is 'vaultcmd.exe' OR 'rundll32.exe keymgr.dll' | WHERE frequency < 5 | ALERT
  - question: Does graph-based analysis reveal an anomalous process execution path leading to credential manager interaction?
    context: This question models all process activity as a large-scale graph and uses algorithms to find anomalous paths. An execution path such as 'winword.exe -> cmd.exe -> vaultcmd.exe' would stand out as a structural anomaly within the graph of normal enterprise-wide process behavior, indicating a likely attack chain that deviates from legitimate system use.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Data from User Workstations, Email Gateway Servers, Web Servers, Terminal Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL process_executions as graph | IDENTIFY anomalous_edges or short_paths leading to 'vaultcmd.exe' | ALERT on high anomaly_score
  - question: Has a non-allowlisted process made suspicious Windows API calls to enumerate credentials?
    context: This question moves detection to a lower level by monitoring direct API calls. It looks for calls to functions like 'CredEnumerateA', 'CredReadA', or 'VaultEnumerateItems' which are used to programmatically list credentials. If these calls originate from a process not on a strict allowlist (e.g., 'lsass.exe'), it is a strong signal of a credential dumping attempt.
    answer_sources:
      - EDR Telemetry (API Calls)
      - Data from User Workstations, Privileged Access Workstations (PAWs), Critical Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH api_call_logs WHERE api_function IN ('CredEnumerateA', 'CredReadA', 'VaultEnumerateItems') AND process_name NOT IN allowlist | ALERT
  - question: Has any process made an anomalously high number of credential-related API calls?
    context: This question establishes a baseline for the frequency of credential-related API calls on a per-host, per-process basis. An alert is triggered if a process suddenly makes a burst of these calls, exceeding its normal behavior, or if a process that has never made these calls before suddenly starts. This can detect a process that has been compromised or a tool designed for enumeration.
    answer_sources:
      - EDR Telemetry (API Calls)
      - Data from User Workstations, Privileged Access Workstations (PAWs), Critical Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE api_call_frequency per process per host | ALERT on statistical deviation from baseline OR if a new process makes these calls
  - question: Can a machine learning model identify malicious sequences of API calls related to credential access?
    context: This question uses a supervised machine learning model to analyze sequences of API calls made by a process. By training on known malicious and benign examples, the model can learn to identify suspicious patterns, such as a process opening another process, enumerating credentials, and then opening a network socket. This provides a sophisticated, behavioral way to detect credential theft.
    answer_sources:
      - EDR Telemetry (API Calls)
      - Data from User Workstations, Privileged Access Workstations (PAWs), Critical Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH api_call_logs | EXTRACT feature_sequences (e.g., OpenProcess -> CredEnumerateA -> Socket) | SCORE with classification_model | WHERE score > high_confidence | ALERT