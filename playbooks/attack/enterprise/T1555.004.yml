name: T1555.004: Windows Credential Manager
id: 9b8a7c6d-5e4f-4a3b-2c1d-0e9f8a7b6c5d
description: This playbook helps determine if an adversary has accessed credentials from the Windows Credential Manager. It provides investigative questions to detect this activity by identifying the execution of known credential dumping tools, misuse of the legitimate 'vaultcmd.exe' utility, direct access to credential vault files, suspicious process execution chains (e.g., spawned from Office applications), programmatic enumeration via suspicious API calls, and correlation of these events with potential network exfiltration.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a known credential dumping tool, identified by its file hash, been executed?
  context: This question aims to detect the use of well-known malicious tools like Mimikatz or LaZagne that are designed to extract credentials from the Windows Credential Manager. Matching process execution hashes against a threat intelligence feed is a high-fidelity method for identifying these specific tools.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Privileged Access Workstations (PAWs), Domain Controllers, Member Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs where (process_hash in known_cred_dumper_hashes)
- question: Has a rare or previously unseen process been executed that is not on the organizational allowlist?
  context: This question helps identify potentially unknown or custom credential dumping tools. Adversaries may use modified or novel tools to evade hash-based detection. By looking for processes with very low prevalence across the enterprise, especially those run by non-system users, analysts can uncover suspicious activity that warrants further investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Privileged Access Workstations (PAWs), Domain Controllers, Member Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs where (process_hash not in allowlist) | calculate_prevalence(process_hash) | where (prevalence < 0.001 and user not in system_accounts)
- question: Has a process been executed that a machine learning model predicts is a credential dumping tool?
  context: This question leverages machine learning to identify credential dumping tools based on their behavioral characteristics (e.g., process name, parent process, command-line arguments) rather than just a static signature like a hash. This approach can detect obfuscated, packed, or entirely new variants of dumping tools that other methods might miss.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Privileged Access Workstations (PAWs), Domain Controllers, Member Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: stream process_creation_logs | apply classification_model(features) | where (prediction == 'cred_dumper' and score > 0.9)
- question: Has the 'vaultcmd.exe' utility been used with command-line arguments to list or enumerate credentials?
  context: This question focuses on detecting the misuse of a legitimate Windows utility, 'vaultcmd.exe', to access credentials. While the tool has legitimate uses, its execution with enumeration-related flags like '/list' is uncommon in normal operations and is a known technique for adversaries to query the Credential Manager.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Terminal Servers, Application Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs where (process_name == 'vaultcmd.exe' and command_line contains ('/list', '/listcreds', '/listschema', '/listproperties'))
- question: Has 'vaultcmd.exe' been executed by a user with an anomalous frequency or from an uncommon parent process?
  context: This question aims to find deviations from normal user and system behavior. By baselining legitimate 'vaultcmd.exe' activity, analysts can detect when a user executes it far more often than usual or when it is spawned by an unusual parent process, both of which can indicate malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Terminal Servers, Application Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs where (process_name == 'vaultcmd.exe') | baseline_user_and_parent_behavior | alert_on_deviation(frequency_stddev > 3, parent_rarity > 95%)
- question: Was 'vaultcmd.exe' executed as part of an anomalous process chain, such as originating from an Office application or web browser?
  context: This question uses anomaly detection to identify suspicious process execution chains. A legitimate execution of 'vaultcmd.exe' is typically initiated by an administrator in a command prompt. An execution spawned by a program like Word, a browser, or a script is highly irregular and strongly suggests a malicious payload is attempting to steal credentials.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Terminal Servers, Application Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs | build_process_tree | apply anomaly_detection_model | where (process_name == 'vaultcmd.exe' and is_anomaly)
- question: Has a process not on the allowlist directly accessed Windows Vault credential or policy files?
  context: This question seeks to detect unauthorized access to the files where Windows stores credential data. Normally, only a few system processes (like 'lsass.exe') should access these sensitive files. Any other process, especially an unrecognized one, accessing '.vcrd' or 'Policy.vpol' files is a strong indicator of a credential theft attempt.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - User Workstations, Servers hosting user profiles, Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search file_access_logs where (target_file matches '*\\Microsoft\\Vault\\*\\*.vcrd' or '*\\Policy.vpol') and (process_name not in ('lsass.exe', 'explorer.exe', 'vaultcmd.exe'))
- question: Has there been an anomalous increase in the variety of processes accessing Windows Vault files on a given host?
  context: This question looks for changes in the pattern of access to Vault files. A stable system will have a predictable set of processes accessing these files. A sudden increase in the number of unique processes (i.e., higher entropy) suggests that new, potentially malicious software has been introduced and is attempting to enumerate or steal credentials.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - User Workstations, Servers hosting user profiles, Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search file_access_logs where (target_file matches '*\\Microsoft\\Vault\\*') | aggregate by host, time_window | calculate_process_entropy | alert_on_entropy_spike
- question: Has the volume of access events to Windows Vault directories on a host significantly exceeded the forecasted baseline?
  context: This question uses time-series analysis to detect an unusual quantity of access events. A credential dumping tool might rapidly access many files within the Vault directory, creating a spike in activity. By comparing the observed volume against a forecasted baseline, this method can flag hosts experiencing abnormal, potentially malicious, access patterns.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - User Workstations, Servers hosting user profiles, Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search file_access_logs where (target_file matches '*\\Microsoft\\Vault\\*') | aggregate by host, time | apply time_series_forecast | where (actual_volume > forecast_upper_bound)
- question: Following a suspected credential access event, did the host make a network connection to a known malicious destination?
  context: This question correlates internal suspicious activity with external communication to identify a full attack chain. An alert for credential access followed immediately by a connection to a known command-and-control (C2) server or malicious IP provides strong evidence of a successful "smash and grab" operation where credentials are stolen and then exfiltrated.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations, Internet Gateway, DNS Servers, Proxy Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: correlate (T1555.004_alert) with (network_connection_log within 5m) where (destination_ip in blocklist or destination_domain in blocklist)
- question: Following a suspected credential access event, did the host send an unusually large amount of data to a rare or new destination?
  context: This question aims to detect exfiltration to unknown or custom C2 infrastructure. Instead of relying on known-bad indicators, it looks for anomalous network behavior. A connection to a destination the host has never or rarely communicated with, especially if it involves a large data upload, is highly suspicious after a credential access attempt.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations, Internet Gateway, DNS Servers, Proxy Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: correlate (T1555.004_alert) with (network_connection_log within 5m) where (destination_rarity < 0.01 and bytes_sent > host_baseline_95th_percentile)
- question: Did a sequence of events occur that matches a high-risk model of credential access followed by exfiltration?
  context: This question uses a sophisticated model to understand the sequence of attacker actions (TTPs). By defining a high-risk path—for example, a vaultcmd.exe execution followed by a DNS query for a high-entropy domain—the model can identify chains of events that, when viewed together, strongly indicate a malicious operation, even if individual events are not highly anomalous.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations, Internet Gateway, DNS Servers, Proxy Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: stream events (process, network, dns) | apply sequence_analysis_model | where (sequence_matches('cred_access' -> 'exfiltration') with high_probability)
- question: Has a process known to interact with the Credential Manager (e.g., 'vaultcmd.exe') been spawned by a suspicious parent like an Office application or scripting engine?
  context: This question targets a common attack vector where malicious code embedded in documents or scripts (e.g., macros) attempts to steal credentials. Legitimate credential management is almost never initiated by applications like Word or Outlook, making this parent-child relationship a high-fidelity indicator of compromise.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Email Gateway Servers, Web Servers, Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs where (parent_process in ('winword.exe', 'excel.exe', 'powershell.exe')) and (process_name == 'vaultcmd.exe' or (process_name == 'rundll32.exe' and command_line contains 'keymgr.dll'))
- question: Has a rare or never-before-seen parent-child process relationship involving 'vaultcmd.exe' been observed?
  context: This question aims to uncover novel or unusual execution chains without relying on a predefined list of suspicious parents. By identifying parent-child pairs that are extremely rare across the entire enterprise, analysts can spot attacker activity that deviates from established norms, even if the parent process itself is not typically considered suspicious.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Email Gateway Servers, Web Servers, Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs | count by parent_process, process_name | where (process_name contains 'vaultcmd.exe' or 'keymgr.dll') and (count < 5)
- question: Does the process execution graph show an anomalous path leading to the execution of a credential management utility?
  context: This question applies graph theory to detect sophisticated attacks. By modeling all process executions as a large graph, algorithms can identify unusual connections (edges) or short sequences (paths) that don't fit the normal structure. A path from an email client to a command shell to 'vaultcmd.exe', for example, would stand out as a significant anomaly in the graph.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations, Email Gateway Servers, Web Servers, Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: stream process_creation_logs | build_enterprise_process_graph | apply graph_anomaly_detection | where (anomalous_edge_target contains 'vaultcmd.exe')
- question: Has a process not on the allowlist made suspicious API calls used to enumerate credentials from the Credential Manager?
  context: This question provides deep visibility into how a process interacts with the operating system to steal credentials. Direct monitoring of API calls like 'CredEnumerateA' or 'VaultEnumerateItems' can detect malicious behavior even if the tool is fileless or uses obfuscation. Calls from unauthorized processes like scripting engines are strong indicators of compromise.
  answer_sources:
  - EDR Telemetry (API Calls)
  - User Workstations, Privileged Access Workstations (PAWs), Critical Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search edr_api_logs where (api_call in ('CredEnumerateA', 'CredReadA', 'VaultEnumerateItems')) and (process_name not in allowlist)
- question: Has a process made an anomalously high number of credential-related API calls, or has a process made these calls for the first time on a host?
  context: This question uses behavioral baselining to detect deviations in API call patterns. A sudden spike in the number of calls to credential APIs from a single process, or calls from a process that has never done so before on a specific host, can indicate that the process has been compromised or is a malicious tool attempting to dump all available credentials.
  answer_sources:
  - EDR Telemetry (API Calls)
  - User Workstations, Privileged Access Workstations (PAWs), Critical Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search edr_api_logs where (api_call in cred_api_list) | baseline_per_host_process_behavior | alert_on_deviation(call_count > 99th_percentile or is_new_caller)
- question: Has a sequence of API calls occurred that a machine learning model identifies as characteristic of credential theft?
  context: This question looks beyond individual API calls to analyze the entire sequence of actions taken by a process. Malicious activity often follows a predictable pattern (e.g., opening a process, enumerating credentials, opening a network socket). A machine learning model trained on these sequences can identify complex malicious behaviors that would be difficult to define with simple rules.
  answer_sources:
  - EDR Telemetry (API Calls)
  - User Workstations, Privileged Access Workstations (PAWs), Critical Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: stream edr_api_logs | build_api_call_sequences_per_process | apply classification_model | where (prediction == 'malicious_cred_access' and score > 0.9)