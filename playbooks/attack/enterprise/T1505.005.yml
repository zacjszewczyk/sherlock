name: T1505.005: Terminal Services DLL
id: f8a7b6c5-9d8e-4f7a-b1c3-2e0d9f8a7b6c
description: This playbook focuses on detecting adversaries who achieve persistence by modifying the Terminal Services DLL (termsrv.dll) or its associated registry configuration. By replacing or patching this DLL, an attacker's code can be executed with SYSTEM privileges when the Terminal Services service starts. This technique is also commonly used to enable multiple concurrent Remote Desktop Protocol (RDP) sessions on Windows client operating systems. The playbook investigates this technique by searching for evidence of known-bad file hashes, unauthorized or statistically rare modifications to the DLL file or its registry path, suspicious command-line activity used to alter permissions, and anomalous RDP session activity that may result from a successful modification.
type: technique
related:
  - TA0003: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has the Terminal Services DLL ('termsrv.dll') or its configured path in the registry been modified to match a known-bad file hash?
    context: This question aims to detect a direct replacement of the legitimate 'termsrv.dll' with a known malicious one. Adversaries may replace this DLL to ensure their code is executed with system privileges whenever the Terminal Services service starts. By comparing the file hash against a threat intelligence database, we can quickly identify known threats.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 7 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - File systems and registries of all Windows endpoints and servers, especially Remote Desktop Gateway servers and multi-user session hosts.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_modification OR registry_modification WHERE (file_path = 'C:\Windows\System32\termsrv.dll' OR registry_key = 'HKLM\System\CurrentControlSet\services\TermService\Parameters\ServiceDll') | HASH file | JOIN threat_intel_db ON hash | RETURN alert IF match_found
  - question: Is the file hash of the active 'termsrv.dll' statistically rare or new within the environment?
    context: This question helps uncover unknown or custom malware that isn't in threat intelligence feeds. A 'termsrv.dll' file hash that is present on only a very small number of systems (or is brand new) is highly suspicious, as legitimate versions are typically uniform across systems with the same patch level. This rarity analysis can surface targeted attacks or newly developed tools.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 7 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - File systems and registries of all Windows endpoints and servers, especially Remote Desktop Gateway servers and multi-user session hosts.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH all_endpoints FOR file_path = 'C:\Windows\System32\termsrv.dll' | GROUP BY file_hash, COUNT(hostname) as prevalence | CALCULATE total_hosts | CALCULATE percentage = (prevalence / total_hosts) * 100 | RETURN alert IF percentage < 0.1
  - question: Does the currently active Terminal Services DLL exhibit malicious characteristics according to a machine learning classification model?
    context: This question uses a predictive approach to identify malicious DLLs based on their intrinsic features (like entropy, imported functions, etc.), rather than relying on known signatures or simple rarity. This is effective against polymorphic malware or novel threats that have never been seen before but share structural characteristics with known malicious families.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 7 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - File systems and registries of all Windows endpoints and servers, especially Remote Desktop Gateway servers and multi-user session hosts.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: ON file_modification of 'termsrv.dll' | EXTRACT PE_features | INPUT features into ML_model | RETURN alert IF model_score > 0.85
  - question: Have any commands been executed to take ownership or change permissions of 'termsrv.dll' or its associated registry key?
    context: Before an adversary can replace or modify a protected system file like 'termsrv.dll', they often need to take ownership and grant themselves permissions. This question looks for the preparatory steps of the attack by monitoring for specific command-line tools ('takeown', 'icacls', 'reg.exe') used against these specific assets. Detecting this precursor activity can provide an early warning.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Command-line and process execution logs from all Windows endpoints and servers, particularly administrative workstations and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation WHERE command_line CONTAINS ('takeown' OR 'icacls' OR 'reg.exe add') AND command_line CONTAINS ('termsrv.dll' OR 'TermService') | RETURN alert
  - question: Were commands used to modify 'termsrv.dll' or its registry key executed with high entropy or by a rare parent process?
    context: Adversaries often obfuscate commands to evade simple keyword-based detection, which can result in high command-line entropy. Furthermore, system files are typically modified by legitimate system processes. If a tool like 'icacls' is spawned by an unusual parent, such as a web browser or office application, it's a strong indicator of compromise. This question helps find these statistical anomalies.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Command-line and process execution logs from all Windows endpoints and servers, particularly administrative workstations and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation WHERE command_line CONTAINS ('termsrv.dll' OR 'TermService') | CALCULATE entropy(command_line), rarity(parent_process) | RETURN alert IF entropy > threshold OR rarity < threshold
  - question: Does the sequence of commands leading up to the modification of 'termsrv.dll' or its registry key deviate from normal administrative behavior?
    context: This question moves beyond single commands to analyze the entire session's behavior. An adversary's actions, even if using legitimate tools, often follow a sequence that is different from a typical system administrator's workflow. A sequence analysis model can learn what normal looks like and flag entire sessions that are anomalous, providing context and reducing false positives from individual command alerts.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Command-line and process execution logs from all Windows endpoints and servers, particularly administrative workstations and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH command_history by user_session | INPUT sequence into LSTM_model | RETURN alert IF sequence is anomalous
  - question: Was the 'termsrv.dll' file or its 'ServiceDll' registry key modified by a process not on the authorized allowlist?
    context: Critical system files and registry keys should only be modified by a small, well-defined set of trusted processes, such as system updaters ('TrustedInstaller.exe'). This question establishes a baseline of known-good behavior and alerts on any deviation. A modification by a process like 'powershell.exe' or a randomly named executable is highly suspicious and warrants immediate investigation.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - File system and registry audit logs on all Windows hosts, particularly Remote Desktop servers and domain controllers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_modification OR registry_modification WHERE (target_file = 'termsrv.dll' OR target_key = '...TermService\Parameters') | CHECK if process_name in allowlist | RETURN alert IF NOT IN allowlist
  - question: Was the 'termsrv.dll' file or its 'ServiceDll' registry key modified by a statistically rare process?
    context: This question provides a safety net for when a strict allowlist is not feasible or fully comprehensive. It analyzes the historical frequency of all processes that have ever modified the target assets. A process that has never, or very rarely, performed this action before is flagged as an anomaly. This can help detect legitimate but compromised tools being used for malicious purposes.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - File system and registry audit logs on all Windows hosts, particularly Remote Desktop servers and domain controllers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_modification OR registry_modification WHERE (target_file = 'termsrv.dll' OR target_key = '...TermService\Parameters') | CALCULATE frequency(process_name) over time | RETURN alert IF frequency < 5th_percentile
  - question: Does the event of modifying 'termsrv.dll' or its registry key appear anomalous based on a model of legitimate modification behavior?
    context: This question uses a multi-variate anomaly detection model to build a comprehensive profile of what a "normal" modification event looks like, considering factors like the process, its parent, the user context, and even the time of day. Any new event that deviates significantly from this learned profile is flagged. This is powerful for detecting sophisticated attacks that might use legitimate processes and user accounts but at an unusual time or in an unusual context.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - File system and registry audit logs on all Windows hosts, particularly Remote Desktop servers and domain controllers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH modification_events on target_assets | EXTRACT features (process, parent, user, time) | INPUT features into isolation_forest_model | RETURN alert IF event is anomalous
  - question: Are there multiple concurrent interactive RDP sessions (Logon Type 10) active on a client operating system?
    context: One of the primary motivations for modifying 'termsrv.dll' is to bypass the concurrent RDP session limit on Windows client operating systems (e.g., Windows 11), which normally only allow one interactive session. Detecting more than one active session is a very strong, high-fidelity indicator that this patch has been applied, likely for malicious purposes.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Windows Event ID 4778
      - Windows Event ID 4779
      - Zeek conn.log
      - Authentication logs from Domain Controllers and member servers/workstations, and network flow logs from network sensors at egress points and key internal segments.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH logon_events (type=10) and logoff_events | MAINTAIN state_table of active_sessions per host | FILTER for client_OS | RETURN alert IF active_sessions > 1
  - question: Is there a statistically anomalous number of concurrent RDP sessions on a Windows Server?
    context: While servers are designed for multiple RDP sessions, each server typically has a predictable usage pattern. This question establishes a baseline for what is "normal" for each server. A sudden, sharp increase in concurrent sessions that significantly deviates from this baseline (e.g., exceeding 3 standard deviations from the moving average) can indicate a compromised server being used for lateral movement, data staging, or as a jump box.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Windows Event ID 4778
      - Windows Event ID 4779
      - Zeek conn.log
      - Authentication logs from Domain Controllers and member servers/workstations, and network flow logs from network sensors at egress points and key internal segments.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH logon_events (type=10) and logoff_events | CALCULATE active_sessions_per_server over time | CALCULATE moving_average and std_dev | RETURN alert IF current_sessions > (moving_average + 3 * std_dev)
  - question: Does the current number of active RDP sessions significantly deviate from the forecasted number predicted by a time-series model?
    context: This question uses a more sophisticated statistical method than a simple moving average to predict RDP session load, accounting for seasonality (e.g., time of day, day of week). It forecasts the expected number of sessions and alerts when the actual number is significantly outside the model's prediction and confidence interval. This can reduce false positives from normal but spiky usage and more accurately identify true anomalies. Correlating this with network logs (Zeek) adds further validation.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Windows Event ID 4778
      - Windows Event ID 4779
      - Zeek conn.log
      - Authentication logs from Domain Controllers and member servers/workstations, and network flow logs from network sensors at egress points and key internal segments.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: FOR each_server | TRAIN ARIMA_model on historical_session_data | FORECAST expected_sessions | GET current_sessions | RETURN alert IF current_sessions is outside forecast_confidence_interval AND correlated_increase_in_zeek_rdp_logs