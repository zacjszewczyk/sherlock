name: T1090.003: Multi-hop Proxy
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: "This playbook is designed to answer the primary investigative requirement: 'Is the adversary using multi-hop proxy chains for command and control?'. It provides a structured approach to detect this technique by identifying several key indicators. These include: outbound connections from internal assets to known Tor, public proxy, or C2 infrastructure; TLS handshakes with malicious fingerprints (JA3/JA3S) or anomalous certificate properties (self-signed, short validity, high entropy); traffic patterns indicative of internal pivoting (low fan-in, high fan-out); connection sequences characteristic of automated C2 beaconing (low jitter, low data variance); and anomalous protocol usage suggesting tunneling (oversized ICMP packets, long/high-entropy DNS queries, or unexpected encrypted traffic to network devices)."
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal assets connecting to external IP addresses known to be associated with Tor, public proxies, or C2 servers?
    context: This question aims to identify direct connections to known malicious or anonymizing infrastructure. Adversaries often use public proxies or compromised servers as part of their command and control (C2) chain to obscure their true location. Correlating outbound network connections against a high-fidelity threat intelligence feed of known proxy and C2 nodes is a direct method for detecting this activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Network Egress Points
      - Centralized DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each outbound connection in conn.log or dns.log
          CHECK if destination_ip is in threat_intel_feed(proxies, tor_nodes, c2_servers)
          IF match, GENERATE alert.
  - question: Are internal systems communicating with destinations in historically rare Autonomous Systems (ASNs) or unusual geographic locations for this organization?
    context: Adversaries may use newly established or obscure hosting providers to stand up their C2 infrastructure. These providers often belong to ASNs that the organization has rarely or never communicated with before. By baselining normal ASN and country destinations, this question helps to statistically identify connections to anomalous network providers or geographic regions that lack a clear business justification, which could indicate a C2 channel.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Network Egress Points
      - Centralized DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          CALCULATE historical frequency of destination_asn and destination_country for all outbound connections.
          FOR each new connection
          IF destination_asn_frequency < 5th_percentile OR destination_country has no business nexus
          FLAG connection for review.
  - question: Can machine learning models classify outbound network connections as benign, suspicious, or malicious based on their characteristics?
    context: This question leverages machine learning to automate the detection of malicious proxy activity by analyzing multiple network flow features simultaneously. A classification model can learn the complex patterns that distinguish legitimate traffic from C2 communications, considering factors like port, data volume, duration, destination rarity, and threat intelligence. This provides a more holistic and scalable approach to identifying suspicious outbound connections that might be missed by simpler rule-based methods.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Network Egress Points
      - Centralized DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          TRAIN classification model (e.g., Random Forest) on labeled network flows.
          FEATURES = [port, bytes, duration, asn_rarity, country_rarity, threat_intel_match]
          APPLY trained model to new outbound connections to score and classify.
  - question: Are we observing TLS handshakes matching known malicious JA3/JA3S hashes or suspicious certificates?
    context: This question focuses on identifying malicious TLS traffic by its fingerprint. Tools like Tor, Psiphon, and Cobalt Strike often have unique JA3/JA3S hashes. Additionally, C2 frameworks may use self-signed certificates or certificates with unusually short validity periods. Alerting on matches to these known-bad or suspicious indicators provides a high-confidence way to detect C2 channels.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Network Egress Points
      - Internal Server Segments
      - DMZ
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each TLS session in ssl.log
          CHECK if ja3_hash or ja3s_hash in watchlist(tor, cobalt_strike, etc.)
          FOR each certificate in x509.log
          CHECK if issuer == subject OR validity_period < 90_days
          IF match, GENERATE alert.
  - question: Are we observing TLS certificates with high-entropy subject/issuer fields?
    context: Adversary C2 frameworks often algorithmically generate domain names and certificate details, resulting in names that appear random. Calculating the Shannon entropy of certificate subject and issuer fields can quantify this randomness. A high entropy score is a strong statistical indicator that the certificate was not generated for legitimate, human-readable services and may be part of a C2 infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Network Egress Points
      - Internal Server Segments
      - DMZ
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each certificate in x509.log
          CALCULATE shannon_entropy of certificate.subject and certificate.issuer fields.
          IF entropy > 3.5
          FLAG certificate as suspicious.
  - question: Can an ML model identify anomalous TLS handshakes that deviate from a normal baseline?
    context: This question proposes using anomaly detection to find malicious TLS traffic without relying on pre-existing signatures. By training a model (like a one-class SVM or an autoencoder) on the characteristics of legitimate TLS sessions within the environment, it can learn a baseline of normal behavior. Any new TLS handshake that significantly deviates from this baseline is flagged as an anomaly, potentially representing an unknown C2 tool or technique.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Network Egress Points
      - Internal Server Segments
      - DMZ
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          TRAIN anomaly detection model (e.g., Autoencoder) on features from legitimate TLS sessions.
          FEATURES = [ja3, cipher_suites, cert_validity, etc.]
          APPLY model to new TLS sessions.
          IF reconstruction_error > threshold
          FLAG session as anomalous.
  - question: Are any internal hosts showing a low fan-in from external sources and a high fan-out to internal destinations?
    context: This question looks for a network traffic pattern indicative of an internal pivot point. An adversary who has compromised a host (often in the DMZ) will use it to relay commands and exfiltrate data. This results in a pattern where the compromised host receives connections from a very small number of external C2 servers (low fan-in) but initiates connections to a large number of internal systems (high fan-out).
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Demilitarized Zone (DMZ)
      - User Workstation Subnets
      - Critical Server VLANs
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          OVER a 1-hour sliding window
          FOR each internal_host_ip
          COUNT distinct external_source_ips (fan_in)
          COUNT distinct internal_destination_ips (fan_out)
          IF fan_in < 3 AND fan_out > 10
          GENERATE alert.
  - question: Do any hosts have an anomalously high 'pivot score'?
    context: This question provides a statistical method to quantify the pivoting behavior described in the previous question. By calculating a 'pivot score' as a ratio of outbound connections to inbound connections, we can establish a baseline for normal host behavior. A host whose score dramatically exceeds the norm (e.g., is in the 99th percentile) is exhibiting highly anomalous fan-out activity and is a strong candidate for a compromised pivot point.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Demilitarized Zone (DMZ)
      - User Workstation Subnets
      - Critical Server VLANs
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each host
          CALCULATE pivot_score = (1 + outbound_destinations) / (1 + inbound_sources)
          ESTABLISH baseline distribution of pivot_score across all hosts.
          IF host.pivot_score > 99th_percentile
          GENERATE alert.
  - question: Can graph analysis and anomaly detection identify hosts acting as anomalous bridges between traffic communities?
    context: This question applies advanced analytics to find pivot hosts. By modeling the network as a graph, we can use algorithms to identify normal clusters of communication (e.g., web servers talking to database servers). A compromised host acting as a pivot will often form an anomalous bridge between otherwise disconnected communities. Graph-based anomaly detection can identify these nodes by looking at metrics like 'betweenness centrality', which measures how often a node appears on the shortest path between other nodes.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Demilitarized Zone (DMZ)
      - User Workstation Subnets
      - Critical Server VLANs
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          CONSTRUCT network graph (nodes=hosts, edges=connections).
          IDENTIFY normal communities (e.g., Louvain algorithm).
          APPLY anomaly detection (e.g., Isolation Forest) on graph features (centrality, degree).
          FLAG nodes identified as anomalous bridges.
  - question: Are hosts making a high frequency of connections to non-categorized or newly observed domains?
    context: This question aims to detect potential C2 beaconing through a simple frequency analysis. Adversaries often use newly registered or uncategorized domains for their infrastructure. A host making an unusually high number of connections to such a domain, especially on common C2 ports like 443, 80, or 53, is a strong indicator of beaconing activity that warrants investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - User Workstation Subnets
      - Server Subnets
      - Network Egress Points
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          IDENTIFY connections to non-categorized or newly_observed_domains.
          FOR each source_host
          IF connection_count_to_same_destination > 50 in 1 hour
          FLAG for review.
  - question: Are there source-destination pairs exhibiting machine-like beaconing with low jitter and low data volume variance?
    context: This question seeks to identify automated C2 beaconing by its machine-like regularity. Unlike human-generated traffic, C2 implants communicate on a strict schedule (low jitter) and often send/receive similar amounts of data in each check-in (low variance). By calculating the standard deviation of inter-arrival times and data volumes for connections, we can statistically identify traffic patterns that are too regular to be human-generated.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - User Workstation Subnets
      - Server Subnets
      - Network Egress Points
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each source-destination pair over 24 hours
          CALCULATE std_dev of time between connections (jitter).
          CALCULATE variance of bytes_sent and bytes_received.
          IF jitter < 2_seconds AND byte_variance < low_threshold
          GENERATE alert for beaconing.
  - question: Can a Fast Fourier Transform (FFT) on connection time series data identify periodic signals characteristic of C2 beaconing?
    context: This question applies signal processing techniques to find C2 beaconing. A Fast Fourier Transform (FFT) can decompose a time series of events (like connections per second) into its constituent frequencies. Highly periodic, automated beaconing will appear as a sharp spike in the frequency spectrum. This method is very effective at detecting even slow-and-low beaconing that might be missed by other statistical methods.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - User Workstation Subnets
      - Server Subnets
      - Network Egress Points
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each source-destination pair
          CREATE time series of connection counts per second.
          APPLY FFT to the time series.
          IF a sharp peak is present in the frequency spectrum
          FLAG as periodic beaconing.
  - question: Are we observing signs of protocol tunneling, such as large ICMP packets, long DNS queries, or unapproved encrypted connections to network gear?
    context: This question looks for C2 communication hidden within other protocols (tunneling). Adversaries abuse protocols in non-standard ways, for example, by stuffing data into ICMP packets (which normally have little to no payload), creating extremely long DNS queries to encode data, or establishing encrypted sessions to network devices like switches that should not be acting as management endpoints.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek icmp.log
      - Zeek weird.log
      - Network Infrastructure Segments (Routers, Switches)
      - DNS Servers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          ALERT if icmp.payload_size > 64 bytes.
          ALERT if dns.query_length > 250 characters.
          ALERT if encrypted connection (port 22, 443) to network_device not in approved_vpn_list.
  - question: Is there DNS traffic with high-entropy query names or an unusually high ratio of TXT to A queries?
    context: This question focuses on detecting C2 that uses DNS for communication. Adversaries may encode data in high-entropy (random-looking) subdomains. They may also abuse DNS TXT records, which can hold more data than standard A records. Monitoring for DNS queries with high entropy or a client making an anomalously high number of TXT queries compared to A queries can effectively uncover this C2 channel.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek icmp.log
      - Zeek weird.log
      - Network Infrastructure Segments (Routers, Switches)
      - DNS Servers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          FOR each DNS query
          CALCULATE shannon_entropy of query_name.
          IF entropy > 4.0, FLAG as suspicious.
          FOR each client
          CALCULATE ratio of TXT_queries to A_queries.
          IF ratio > 98th_percentile of baseline, FLAG client.
  - question: Can an autoencoder model detect anomalous protocol traffic by identifying high reconstruction errors?
    context: This question uses machine learning to find protocol abuse. An autoencoder is trained on feature vectors from legitimate traffic for various protocols (DNS, ICMP, etc.). It learns to compress and decompress this normal traffic with minimal error. When the trained model is fed malicious or tunneled traffic that deviates from normal patterns, it will be unable to reconstruct it accurately, resulting in a high reconstruction error that triggers an alert.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek icmp.log
      - Zeek weird.log
      - Network Infrastructure Segments (Routers, Switches)
      - DNS Servers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: Pseudocode
        query: |
          TRAIN autoencoder model on feature vectors from normal protocol traffic (DNS, ICMP).
          FOR each new network event
          CALCULATE reconstruction_error using the trained model.
          IF reconstruction_error > threshold
          FLAG as anomalous traffic.