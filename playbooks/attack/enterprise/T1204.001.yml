name: T1204.001: Malicious Link
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary has achieved execution via user interaction with a malicious link. It focuses on identifying evidence such as network connections to known malicious domains or IPs, lexically anomalous URLs, suspicious process creation chains (e.g., a browser spawning a command shell), rapid execution of downloaded files, execution from non-standard directories, and network traffic patterns indicative of command-and-control beaconing.
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any endpoints connected to domains or IP addresses known to be malicious?
    context: This question seeks to identify direct communication with known malicious infrastructure. By correlating network logs (DNS queries and connection logs) with threat intelligence feeds, analysts can quickly spot connections to command-and-control servers, malware distribution points, or phishing sites, which are strong indicators of compromise following a malicious link click.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise Web Gateway
      - DNS Resolvers
      - Firewall Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each record IN (dns.log, conn.log)
          LET indicator = record.domain OR record.destination_ip
          IF indicator IN threat_intelligence_feed
          THEN ALERT (record)
  - question: Are there any requested URLs with unusually high entropy, length, or numeric character ratios that could indicate algorithmic generation or obfuscation?
    context: Adversaries often use Domain Generation Algorithms (DGAs) or obfuscation techniques to hide their C2 infrastructure. These URLs appear random and differ from typical human-readable URLs. By baselining normal URL characteristics (entropy, length, character ratios) and alerting on significant deviations, analysts can uncover potentially malicious, algorithmically generated domains that would be missed by signature-based detection.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise Web Gateway
      - DNS Resolvers
      - Firewall Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each url IN http.log
          CALCULATE url_metrics (entropy, length, num_ratio)
          IF url_metrics > baseline_95th_percentile
          THEN ALERT (url)
  - question: Has a machine learning model identified any URLs as having a high probability of being malicious based on their lexical features?
    context: This question leverages machine learning to proactively identify malicious URLs that may not yet be on any threat intelligence list. By training a model on the structural and lexical features of known good and bad URLs, it can score new, unseen URLs. A high probability score serves as a predictive alert, enabling analysts to investigate suspicious links before they are widely recognized as malicious.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise Web Gateway
      - DNS Resolvers
      - Firewall Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each url IN (http.log, dns.log)
          LET score = PREDICT_URL_MALICIOUSNESS(url)
          IF score > 0.90
          THEN ALERT (url, score)
  - question: Have any common productivity applications (browsers, email clients, document readers) spawned a command-line interpreter or other LOLBin?
    context: This is a classic indicator of compromise. Benign user activity within applications like Outlook or Chrome should not typically result in the creation of a command shell or scripting interpreter (e.g., PowerShell, cmd.exe). Such an event strongly suggests that a malicious link or document has executed a payload, and it provides a clear starting point for investigating the execution chain.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations
      - Remote Desktop Servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
          IF parent_process IN ('outlook.exe', 'chrome.exe', 'msedge.exe', 'acrord32.exe')
          AND child_process IN ('powershell.exe', 'cmd.exe', 'wscript.exe', 'cscript.exe', 'mshta.exe', 'certutil.exe')
          THEN ALERT (event)
  - question: Are there any statistically rare parent-child process relationships, or are there command-line arguments with unusually high entropy or length for common relationships?
    context: Adversaries may use legitimate but uncommon process chains to evade simple rule-based detections. By baselining all parent-child process relationships, analysts can detect outliers that represent abnormal system activity. Furthermore, even in a common relationship, highly entropic or long command lines often indicate obfuscated or fileless payloads, which are hallmarks of advanced attacks.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations
      - Remote Desktop Servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
          IF process_pair_is_rare OR command_line_is_anomalous
          THEN ALERT (event)
  - question: Has a machine learning model flagged any process creation events as high-risk based on their combined features?
    context: This question uses a holistic, machine learning-based approach to detect suspicious process execution. Instead of relying on a single indicator, a model can analyze the combination of parent process, child process, command-line arguments, user context, and other factors simultaneously. This allows for the detection of nuanced and complex attack patterns that might otherwise appear benign when each feature is viewed in isolation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations
      - Remote Desktop Servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
          LET score = PREDICT_PROCESS_RISK(event)
          IF score > threshold
          THEN ALERT (event, score)
  - question: Was a file downloaded and subsequently executed, where the file's hash is present in a threat intelligence feed?
    context: This question aims to find the 'smoking gun' of a malware execution. Correlating a file download event with its immediate execution and then matching its hash against a list of known malware provides very high-confidence evidence of a compromise. This allows analysts to bypass ambiguity and move directly to incident response.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - User Workstations
      - Enterprise Web Gateway
      - Email Gateway
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN file_creation_events ON file_hash
          WITH process_creation_events
          IF file_hash IN threat_intelligence_feed
          THEN ALERT (joined_event)
  - question: Have any files been executed almost immediately after being downloaded, suggesting automated execution?
    context: Benign user behavior typically involves a delay between downloading a file and executing it. A very short time delta (e.g., seconds) often indicates that the execution was triggered programmatically by a script or exploit delivered via the malicious link, rather than by a deliberate user action. This is a strong signal of a drive-by download or a malicious dropper.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - User Workstations
      - Enterprise Web Gateway
      - Email Gateway
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN file_creation_events ON file_name
          WITH process_creation_events
          CALCULATE time_delta = process.time - file.time
          IF time_delta < 30_seconds
          THEN ALERT (event, time_delta)
  - question: Has there been an anomalous spike in the overall rate of 'download-then-execute' events across the enterprise?
    context: While individual 'download-then-execute' events might be benign, a sudden increase in the frequency of these events across the entire organization is a strong indicator of a widespread campaign, such as a mass phishing attack. This macro-level view helps security teams detect large-scale attacks in progress that might be missed when only looking at individual endpoint events.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - User Workstations
      - Enterprise Web Gateway
      - Email Gateway
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE download_then_execute_events by hour
          APPLY anomaly_detection_model to timeseries
          IF hourly_count is anomalous
          THEN ALERT (hour, count)
  - question: Has a process spawned by a browser or email client been executed from a non-standard or user-writable directory like Temp or Downloads?
    context: Malware often drops its payload into temporary or user-writable directories to ensure it has permission to execute and to blend in with other temporary files. Legitimate child processes of browsers are typically helper utilities that run from the application's own installation directory (e.g., Program Files). Execution from locations like AppData, Temp, or Downloads is highly suspicious and a common indicator of post-exploitation activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations
      - Application Servers
      - Terminal Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
          IF parent_process IN (browsers, email_clients)
          AND child_process_path IN ('%APPDATA%', '%TEMP%', '%USERPROFILE%\\Downloads\\')
          THEN ALERT (event)
  - question: Has a child process of a browser or email client executed from a statistically rare or previously unseen file path?
    context: This question moves beyond a static deny-list to a dynamic, learned approach. By baselining normal execution paths for every parent-child process pair in the environment, analysts can detect novel or exceptionally rare execution locations. This helps uncover adversaries who are deliberately trying to avoid common 'bad' directories by creating new, unique paths for their payloads.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations
      - Application Servers
      - Terminal Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
          LET path = child_process_path
          IF path is rare_for_parent_process(parent)
          THEN ALERT (event)
  - question: Has an unsupervised machine learning model identified any process execution events as anomalous outliers based on their path and context?
    context: This question uses clustering to automatically group 'normal' process behavior without pre-defined rules. Events that do not fit into any of the established clusters are flagged as outliers. This is a powerful technique for discovering novel attack methods, as it can identify suspicious combinations of features (e.g., a specific user running a specific process from an odd directory) that would not trigger rule-based or frequency-based alerts.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations
      - Application Servers
      - Terminal Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER all process_creation_events
          using features (path, parent, user)
          FOR each event classified as outlier/noise
          THEN ALERT (event)
  - question: Did a process recently spawned by a browser or document reader make a network connection to a known C2 server?
    context: This question directly links a suspicious execution event (process spawned from a browser) to a known malicious outcome (communication with a C2 server). This correlation provides extremely strong evidence that a malicious link led to a payload that is now 'calling home' for instructions, confirming a successful intrusion.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - User Workstations
      - Firewall Egress Points
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN process_creation_events ON process_id
          WITH network_connection_events
          IF connection_destination IN c2_threat_feed
          THEN ALERT (joined_event)
  - question: Is a process spawned by a browser exhibiting network behavior indicative of C2 communication, such as connecting to a rare ASN/country or using highly regular, 'heartbeat'-like connections?
    context: Adversaries often use C2 servers in unusual geographic locations or ASNs. Furthermore, their malware beacons back on a fixed schedule (e.g., every 60 seconds) with a small amount of data. By baselining normal network traffic and looking for these anomalies—connections to rare destinations or traffic with unnaturally low jitter (low standard deviation in timing and size)—analysts can detect C2 activity even when the destination IP is not on a threat list.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - User Workstations
      - Firewall Egress Points
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_spawned_by_browser
          ANALYZE its network_connections
          IF connection_destination_is_rare
          OR connection_timing_is_periodic
          THEN ALERT (process, connection_details)
  - question: Has a time-series anomaly detection model identified network traffic from a newly created process as being abnormal or C2-like?
    context: This question applies advanced machine learning to detect subtle C2 communication patterns that are difficult to define with simple rules. An autoencoder trained on billions of benign network flows can learn what 'normal' traffic looks like. When it encounters traffic from a new process that it cannot reconstruct accurately—such as the periodic, low-volume heartbeats of C2 traffic—it flags it as an anomaly, providing a powerful signal for an analyst to investigate.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - User Workstations
      - Firewall Egress Points
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_process
          STREAM its network_flow_data to LSTM_autoencoder
          IF reconstruction_error > threshold
          THEN ALERT (process, flow_data)