name: T1558: Steal or Forge Kerberos Tickets
id: 5291b8d0-5e32-4a0e-9fc3-2b7e192f3925
description: Investigates whether an adversary has stolen or forged Kerberos tickets to gain unauthorized access. This is detected by identifying the execution of known credential dumping tools via process monitoring, analyzing for high volumes of service ticket requests indicative of Kerberoasting, detecting ticket requests for accounts with pre-authentication disabled (AS-REP Roasting), looking for evidence of forged tickets with inconsistent privileges or lifetimes (Golden/Silver Tickets), and monitoring for unauthorized process access to LSASS memory where credentials and tickets are stored.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any process creation events where the process hash or command-line arguments match known Kerberos credential dumping tools or attack patterns?
  context: Adversaries use well-known tools like Mimikatz, Rubeus, or Kekeo to steal or forge Kerberos tickets. This question aims to detect the direct execution of these tools by looking for their unique file hashes or the specific commands they use, such as 'kerberos::golden' or 'asktgt /user:'. A positive match is a high-confidence indicator of an active credential access attempt.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers, Member Servers, Privileged User Workstations, Standard User Workstations
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process_creation_events
      WHERE (process_hash IN (known_credential_dumper_hashes))
      OR (command_line CONTAINS ('kerberos::golden', 'asktgt', 'rubeus.exe kerberoast', 'klist purge'))
- question: Have any command-line execution events shown unusually high entropy or involved rare processes with authentication-related parameters, suggesting obfuscated credential theft activity?
  context: To evade simple signature-based detection, adversaries often obfuscate their commands or use custom or rarely seen tools. This question looks for statistical anomalies like high entropy (random-looking strings common in encoded commands) or the execution of a process that is novel to the environment, especially when combined with parameters related to authentication, which could indicate a disguised credential theft tool.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers, Member Servers, Privileged User Workstations, Standard User Workstations
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH command_line_events
      | CALCULATE entropy(command_line)
      | DETECT outliers OR rare_processes WHERE command_line CONTAINS ('kerberos', 'ticket', 'auth')
- question: Has a machine learning model classified any process execution events as suspicious for Kerberos credential dumping based on features like parent process, command-line arguments, and digital signature status?
  context: This question leverages a machine learning model trained to recognize the subtle, combined characteristics of credential dumping activities. It goes beyond simple signatures by analyzing a combination of features (e.g., parent process, command length, argument count, keywords) to identify suspicious behavior that might otherwise be missed by traditional rules.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers, Member Servers, Privileged User Workstations, Standard User Workstations
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process_creation_events
      | INVOKE ML_credential_dumping_classifier
      | WHERE prediction = 'suspicious'
- question: Have any non-approved user accounts requested Kerberos service tickets using the weak RC4-HMAC encryption type?
  context: Adversaries perform Kerberoasting by requesting service tickets for accounts that use the weak RC4 encryption. This allows them to more easily crack the ticket offline to reveal the service account's password. This question specifically looks for these weak ticket requests (Event ID 4769 with encryption type 0x17) from accounts not on an approved list for legacy compatibility, filtering out expected noise.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers, Network sensors monitoring traffic to/from Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH kerberos_tgs_events (EventID=4769)
      WHERE encryption_type = '0x17'
      AND user NOT IN (approved_legacy_accounts_list)
- question: Has any single user account requested an anomalously high number of unique Kerberos service tickets in a short time frame?
  context: A key indicator of a Kerberoasting attack is a single user rapidly requesting tickets for many different services across the domain in an attempt to find a vulnerable one. This behavior is highly unusual for normal user activity. This question aims to detect this statistical anomaly by baselining normal behavior and alerting when a user's activity exceeds a high threshold or their own baseline.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers, Network sensors monitoring traffic to/from Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH kerberos_tgs_events (EventID=4769)
      | STATS distinct_count(service_name) BY user, time_window=5m
      | DETECT outliers WHERE distinct_count > 99th_percentile_baseline
- question: Has a time-series anomaly detection model identified any users with a volume of service ticket requests that significantly deviates from their normal, learned behavior patterns?
  context: This question uses a machine learning approach to understand the normal rhythm of ticket requests for each user over time (e.g., factoring in time of day, day of week). It flags sudden, unexpected spikes in request volume that do not fit the user's established pattern, which is a strong indicator of an automated process like a Kerberoasting spray.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Domain Controllers, Network sensors monitoring traffic to/from Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH kerberos_tgs_events (EventID=4769)
      | INVOKE ML_timeseries_anomaly_model_per_user
      | WHERE prediction = 'anomaly'
- question: Have any successful Kerberos authentication tickets (TGTs) been issued to accounts that are configured to not require pre-authentication?
  context: Adversaries can abuse accounts with Kerberos pre-authentication disabled (an attack known as AS-REP Roasting) to request an authentication ticket without providing any credentials. They can then crack this ticket offline to obtain the user's password hash. This question looks for the specific event (Event ID 4768 with Pre-Auth Type '0') that indicates this attack is occurring.
  answer_sources:
  - Windows Event ID 4768
  - Zeek kerberos.log
  - Active Directory User Object Attributes
  - Domain Controllers, Active Directory infrastructure, Network sensors monitoring traffic to/from Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH kerberos_tgt_events (EventID=4768)
      WHERE pre_auth_type = '0' AND result_code = '0x0'
      | ENRICH with AD_user_attributes
      | WHERE user_account_control INCLUDES 'DONT_REQ_PREAUTH'
- question: Has the number of accounts with Kerberos pre-authentication disabled increased, or has an existing vulnerable account shown an anomalous spike in authentication ticket requests?
  context: This question has two parts. First, it monitors the environment for configuration changes that increase the attack surface for AS-REP Roasting. Second, it baselines the activity of known vulnerable accounts to detect when an adversary begins to actively exploit one, indicated by a sudden increase in successful TGT requests for that user.
  answer_sources:
  - Windows Event ID 4768
  - Zeek kerberos.log
  - Active Directory User Object Attributes
  - Domain Controllers, Active Directory infrastructure, Network sensors monitoring traffic to/from Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH AD_user_objects WHERE pre_auth_disabled = true | COUNT and track_changes;
      SEARCH kerberos_tgt_events (EventID=4768) WHERE pre_auth_type = '0' | STATS count BY user | DETECT outliers
- question: Has a machine learning model identified any user whose rate of TGT requests without pre-authentication is a statistical outlier compared to their peer group?
  context: Normal users in similar roles tend to have similar activity patterns. This question uses clustering to group users and identify when one user's behavior—specifically related to AS-REP Roasting indicators—deviates significantly from their peers. This can suggest their account is compromised and being used for this attack, even if their individual activity might not trigger a simple threshold alert.
  answer_sources:
  - Windows Event ID 4768
  - Zeek kerberos.log
  - Active Directory User Object Attributes
  - Domain Controllers, Active Directory infrastructure, Network sensors monitoring traffic to/from Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH kerberos_tgt_events (EventID=4768) WHERE pre_auth_type = '0'
      | INVOKE ML_peer_group_analysis
      | WHERE prediction = 'outlier'
- question: Have any network logon events occurred where the user's Kerberos ticket contained privileged group memberships not assigned to them in Active Directory (Golden Ticket), or have any service tickets been requested on a server for a user who hasn't recently requested an authentication ticket from a Domain Controller (Silver Ticket)?
  context: Golden and Silver tickets are forged tickets that grant an adversary unauthorized access. A Golden Ticket impersonates any user with any privilege, detected by comparing ticket privileges at logon (Event 4624) with actual AD rights. A Silver Ticket grants access to a specific service, detected by observing a service ticket request (Event 4769) on a member server without a preceding authentication ticket request (Event 4768) on a DC.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4769
  - Windows Event ID 4768
  - Zeek kerberos.log
  - Domain Controllers, Critical Member Servers, User Workstations, Active Directory infrastructure
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      Golden: SEARCH logon_events (EventID=4624) | COMPARE event_SIDs with live_AD_group_SIDs | ALERT on mismatch.
      Silver: SEARCH tgs_events (EventID=4769) on member_servers | CHECK for corresponding tgt_event (EventID=4768) on DCs within last 10h | ALERT if no TGT found.
- question: Have any user logon sessions exhibited a privilege score that is a statistical outlier compared to their historical sessions, or have any Kerberos tickets been observed with an abnormally long lifetime?
  context: This question seeks statistical anomalies related to forged tickets. A "privilege score" can quantify the power of a user's access rights during logon; a sudden, unexplainable jump can indicate a Golden Ticket. Forged tickets, especially Golden Tickets, are often created with extremely long lifetimes (e.g., 10 years), which is a strong statistical deviation from the standard domain policy (e.g., 10 hours).
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4769
  - Windows Event ID 4768
  - Zeek kerberos.log
  - Domain Controllers, Critical Member Servers, User Workstations, Active Directory infrastructure
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      Golden: SEARCH logon_events (EventID=4624) | CALCULATE privilege_score_from_SIDs | DETECT outliers for user.
      Silver/Golden: SEARCH zeek_kerberos_logs | CALCULATE ticket_lifetime | ALERT if lifetime > domain_policy_hours
- question: Has a graph-based anomaly detection model identified any highly improbable user-to-service access patterns, such as a user accessing a service completely unrelated to their job function or peer group?
  context: This question models the relationships between users and the services they access as a graph. Forged tickets, particularly Silver Tickets, allow an adversary to access services they normally wouldn't. A machine learning model can analyze this graph to find these improbable connections (e.g., a marketing user accessing a domain controller's replication service), which would be strong evidence of a forged ticket being used for lateral movement.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4769
  - Windows Event ID 4768
  - Zeek kerberos.log
  - Domain Controllers, Critical Member Servers, User Workstations, Active Directory infrastructure
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH tgs_events (EventID=4769)
      | BUILD user_service_access_graph
      | INVOKE ML_graph_anomaly_model
      | WHERE prediction = 'improbable_access'
- question: Has any process not on the approved allowlist attempted to read the memory of the LSASS.exe process?
  context: The Local Security Authority Subsystem Service (LSASS) process stores credentials in memory. Adversaries access this memory to dump credentials, including Kerberos tickets. This question uses a high-fidelity rule to detect any unauthorized process (i.e., not a legitimate EDR or system tool) attempting to read from LSASS, which is a hallmark of credential theft.
  answer_sources:
  - Sysmon Event ID 10
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - All Windows Endpoints, especially Domain Controllers, Privileged Access Workstations, and critical servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process_access (SysmonID=10)
      WHERE target_process = 'lsass.exe'
      AND source_process NOT IN (lsass_access_allowlist)
      AND access_mask INCLUDES ('PROCESS_VM_READ')
- question: Have there been any rare or previously unseen combinations of user, source process, and access permissions targeting the LSASS.exe process?
  context: While some processes legitimately access LSASS, the specific combinations of which process, under which user's context, and with what permissions are usually predictable. This question establishes a baseline of normal LSASS access patterns and alerts on any new or statistically rare combination, which could indicate a novel or disguised credential dumping tool.
  answer_sources:
  - Sysmon Event ID 10
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - All Windows Endpoints, especially Domain Controllers, Privileged Access Workstations, and critical servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process_access (SysmonID=10)
      WHERE target_process = 'lsass.exe'
      | CREATE tuple(source_process, user, access_mask)
      | DETECT rare or previously_unseen tuples
- question: Has a one-class SVM machine learning model flagged any LSASS.exe access events as anomalous based on features like the source process path, parent process, and user context?
  context: This question uses a machine learning model specifically designed to learn what "normal" LSASS access looks like. Instead of trying to define all possible malicious access, it builds a tight boundary around legitimate activity. Any access event that falls outside this learned boundary is immediately flagged as suspicious, making it effective at catching unknown or zero-day credential theft techniques.
  answer_sources:
  - Sysmon Event ID 10
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - All Windows Endpoints, especially Domain Controllers, Privileged Access Workstations, and critical servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process_access (SysmonID=10)
      WHERE target_process = 'lsass.exe'
      | INVOKE ML_lsass_access_anomaly_model
      | WHERE prediction = 'anomaly'