name: "T1674: Input Injection"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook helps investigate whether an adversary is executing commands or code via input injection. This is detected by looking for known malicious IOCs in process command lines, DNS queries, or HTTP requests; unusual parent-child process relationships like a browser spawning a shell; command lines with high entropy, excessive length, or obfuscation patterns; a rapid burst of process creations from a single parent process; and web requests loading external JavaScript from untrusted domains."
type: "technique"
related:
  - "TA0002: Execution"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are process command lines, DNS queries, or HTTP requests matching known malicious indicators associated with input injection?"
    context: "This question aims to identify direct evidence of malicious activity by matching observable data (command lines, DNS, HTTP traffic) against a threat intelligence feed curated for input injection IOCs. A match is a high-confidence signal that a known malicious command or connection has occurred on the network."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Endpoint Fleet"
      - "DNS Resolvers"
      - "Network Egress Points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "SEARCH process_events, dns_logs, http_logs | JOIN threat_intel_feed ON (command_line=ioc OR dns_query=ioc OR http_host=ioc OR http_uri=ioc) WHERE ioc_tag = 'Input Injection'"
  - question: "Has there been an anomalous spike in the number of IOC matches related to input injection, suggesting a widespread attack?"
    context: "This question moves beyond single IOC hits to detect broader campaigns. By establishing a baseline of normal IOC match frequency, a sudden, statistically significant increase (e.g., three standard deviations above the mean) can signal a large-scale, coordinated attack that might otherwise be lost in the noise of individual alerts."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Endpoint Fleet"
      - "DNS Resolvers"
      - "Network Egress Points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "SEARCH ioc_matches from past 30 days | CALCULATE hourly_count_baseline (95th_percentile, std_dev) | SEARCH current_hour_ioc_matches | COMPARE current_count to baseline | ALERT if current_count > (baseline_95th_percentile + 3 * std_dev)"
  - question: "Are there command lines or domains that appear malicious based on their structural features, even if they don't match a known IOC?"
    context: "This question addresses the detection of novel or unknown threats. By using a machine learning model to analyze features like entropy, length, and character patterns, it's possible to identify suspicious command lines and domains that deviate from benign norms, flagging them for investigation even without a prior IOC match."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Endpoint Fleet"
      - "DNS Resolvers"
      - "Network Egress Points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR EACH command_line, domain | EXTRACT features (length, entropy, n-grams, etc.) | APPLY trained_classification_model | SCORE malicious_probability | ALERT if score > threshold"
  - question: "Are common user applications like browsers or email clients spawning command-line interpreters or scripting engines?"
    context: "User-facing applications like Outlook or Chrome should not typically spawn shells like PowerShell or cmd.exe. Such an event is a high-fidelity indicator that an exploit or malicious macro has successfully executed and is attempting to run commands on the system."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Terminal Servers"
      - "Virtual Desktop Infrastructure (VDI)"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "SEARCH process_creation_events | WHERE parent_process IN ('chrome.exe', 'outlook.exe', 'iexplore.exe') AND child_process IN ('powershell.exe', 'cmd.exe', 'wscript.exe') | ALERT"
  - question: "Has a process spawned a child process that is rare or has never been seen before in the environment?"
    context: "This question focuses on detecting anomalous process lineage. By baselining normal parent-child process relationships across the enterprise, any new or exceptionally rare pairing can be flagged as suspicious. This helps uncover novel execution techniques that don't match predefined high-fidelity rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Terminal Servers"
      - "Virtual Desktop Infrastructure (VDI)"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "BUILD historical_baseline of parent_child_pairs over 90 days | FOR EACH new_process_creation_event | CHECK if parent_child_pair is new or rare (count < 5) | ALERT if true"
  - question: "Do the sequences of process creations within a user session deviate from established patterns of normal behavior?"
    context: "This question uses a more advanced analytical approach by modeling entire user sessions as process-lineage graphs. Anomaly detection models can then identify unusual structures or sequences of events within these graphs, which may indicate complex, multi-stage attacks that would be missed by looking at individual parent-child pairs."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Terminal Servers"
      - "Virtual Desktop Infrastructure (VDI)"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "CONSTRUCT process_lineage_graphs per user_session | APPLY graph_anomaly_detection_model | IDENTIFY outlier subgraphs | ALERT on deviations"
  - question: "Are there command-line executions containing keywords or patterns strongly associated with obfuscation or fileless malware?"
    context: "This question seeks to identify common and high-fidelity indicators of malicious PowerShell or command-line usage. Strings like '-EncodedCommand' or 'IEX(New-Object Net.WebClient).DownloadString' are frequently used by attackers to hide their code and download additional payloads, making their presence a strong signal of compromise."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Application Servers"
      - "Domain Controllers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "SEARCH process_creation_events | FILTER command_line CONTAINS ('-EncodedCommand', '-e', 'IEX(New-Object Net.WebClient).DownloadString', etc.) | ALERT"
  - question: "Are there any command-line executions with abnormally high length or character entropy?"
    context: "This question is designed to detect obfuscated or complex commands. Malicious scripts, especially those that are Base64-encoded or heavily obfuscated, tend to be much longer and have higher character randomness (entropy) than typical administrative commands. Comparing a command's length and entropy against a historical baseline for that specific process can reveal these outliers."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Application Servers"
      - "Domain Controllers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "BUILD baseline of command_line_length and entropy per process_name over 90 days | FOR EACH new_command | COMPARE length and entropy to 99th_percentile of baseline | ALERT if exceeded"
  - question: "Do any command lines fall into unusual clusters or appear as statistical outliers when grouped by their structural characteristics?"
    context: "This question uses unsupervised machine learning to find 'needles in a haystack.' By vectorizing and clustering all command lines, common and benign commands will form large, dense clusters. Rare, custom, or malicious commands will either form very small clusters or be classified as noise/outliers, making them easy to isolate for investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Application Servers"
      - "Domain Controllers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "VECTORIZE all command_lines (TF-IDF, length, entropy) | APPLY clustering_algorithm (DBSCAN) | INVESTIGATE small clusters and noise points"
  - question: "Has a single parent process spawned a burst of multiple child processes in an extremely short time frame?"
    context: "This question helps detect automated execution, which is characteristic of malicious scripts or programs. A human operator cannot manually launch several processes from the same parent in under a second. A burst of activity like this is a strong indicator of a script loop or automated tool running commands in rapid succession."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Point-of-Sale Terminals"
      - "Systems with frequent physical access"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "WATCH process_creation_events | GROUP by ParentProcessID | COUNT child_processes within a 1-second sliding window | ALERT if count > 3"
  - question: "Is a user executing commands or spawning processes at a rate that is anomalously fast compared to their own historical behavior?"
    context: "This question personalizes anomaly detection by baselining the 'rhythm' of each individual user. By comparing a user's current activity to their own past behavior, this method can detect when a user's account might be compromised and used by an automated script, reducing false positives from naturally fast-typing users."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Point-of-Sale Terminals"
      - "Systems with frequent physical access"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR EACH user | BUILD baseline of time_deltas between consecutive process_creations | FOR EACH new session | CALCULATE average_time_delta | ALERT if average_time_delta < 1st_percentile_of_baseline"
  - question: "Has there been a sudden, anomalous spike in the overall rate of process creation on a host or by a user?"
    context: "This question looks at the macro-level tempo of activity. Time-series models can learn the normal ebb and flow of process creation activity for a host or user. A sudden, sharp spike that deviates from this learned pattern can indicate a malicious event, such as a malware outbreak or a script running out of control."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Point-of-Sale Terminals"
      - "Systems with frequent physical access"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "MODEL rate of process_creations per user/host as a time-series | USE LSTM or similar model to predict expected rate | ALERT on significant deviation between actual and predicted rate"
  - question: "Is a high-value internal web application loading JavaScript from an unknown or unapproved external domain?"
    context: "This is a key question for detecting Cross-Site Scripting (XSS) or web-based supply chain attacks. High-value applications should only load scripts from a vetted list of trusted domains. A request to load a script from a new, external domain could mean an attacker has injected malicious code to steal data or capture credentials."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek dns.log"
      - "Network Egress Points"
      - "Web Proxies"
      - "DMZ"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "SEARCH http_logs WHERE uri ENDS WITH '.js' AND referer_domain IS internal_or_high_value AND host_domain IS NOT IN allowlist | ALERT"
  - question: "Has the set of external domains providing scripts to a high-value application changed significantly from its historical norm?"
    context: "This question provides a dynamic way to detect changes in a web application's dependencies. A low Jaccard similarity score indicates that the application is suddenly loading scripts from a very different set of domains than it usually does, which is a strong indicator of a potential compromise or a malicious injection."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek dns.log"
      - "Network Egress Points"
      - "Web Proxies"
      - "DMZ"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR EACH high_value_app | BUILD baseline_set of script_source_domains over 90 days | FOR EACH new_session | CALCULATE Jaccard_similarity between session_script_domains and baseline_set | ALERT if similarity < 0.7"
  - question: "Are there suspicious outbound POST requests from high-value web applications that could indicate data exfiltration by injected scripts?"
    context: "This question focuses on the data exfiltration phase that often follows a successful input injection attack. Malicious JavaScript injected into a page might gather sensitive data and send it to an attacker-controlled server via an HTTP POST request. A machine learning model can flag anomalous ones based on features like request size, content type, or destination."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek dns.log"
      - "Network Egress Points"
      - "Web Proxies"
      - "DMZ"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FROM http_logs | FILTER request_method = 'POST' and referer is high_value_app | EXTRACT features (body_length, content_type, etc.) | APPLY trained_classification_model | ALERT if score > threshold"