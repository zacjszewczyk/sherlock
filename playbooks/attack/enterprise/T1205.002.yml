name: T1205.002: Socket Filters
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook focuses on detecting adversaries using socket filters for persistence, defense evasion, and command and control, as defined in MITRE ATT&CK technique T1205.002. Adversaries can attach a filter to a raw socket, allowing a dormant malicious process to be 'woken up' by a specific, crafted network packet (a 'magic packet'). This technique allows malware to remain hidden until activated. The playbook provides investigative questions to identify these magic packets in network logs (e.g., specific flags, non-standard ports, small payloads from threat-listed IPs), detect the creation of processes that use packet capture libraries (e.g., pcap, WinPcap) or raw socket APIs from unusual locations, and correlate anomalous network triggers with subsequent malicious host behavior like reverse shells, log clearing, or DGA lookups.
type: technique
related:
  - TA0003: Persistence
  - TA0005: Defense Evasion
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an adversary sending a 'magic packet' from a known command-and-control (C2) IP to trigger a dormant backdoor?
    context: This question searches for a classic backdoor trigger. Adversaries send a specific packet to a non-standard, high-numbered port. By matching the source IP against a C2 threat intelligence list and looking for connection states that indicate a connection attempt without a full handshake or data transfer ('S0', 'S1', 'OTH'), we can identify these 'knocks' with high confidence.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network sensors at internet egress/ingress points
      - Virtual network taps in cloud environments (e.g., VPC Traffic Mirroring)
      - Core network switch SPAN ports
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE direction=inbound AND source_ip IN C2_threat_intel_list AND dest_port > 1024 AND conn_state IN ('S0', 'S1', 'OTH')
  - question: Is a host receiving an inbound connection that is a statistical outlier compared to its normal traffic profile?
    context: This question aims to find trigger packets without relying on known-bad indicators. By baselining normal connection patterns for each host (ports, flags, packet/byte counts), we can detect anomalies. A trigger packet will likely target a port that is rarely used for that host or have an unusually small size, making it a statistical outlier worthy of investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network sensors at internet egress/ingress points
      - Virtual network taps in cloud environments (e.g., VPC Traffic Mirroring)
      - Core network switch SPAN ports
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, BASELINE inbound connections (dest_port_frequency, packet_count_mean, byte_count_mean). ALERT ON new connection WHERE dest_port_frequency < 1st_percentile OR packet_count < (mean - 3*std_dev)
  - question: Has an anomaly detection model identified a highly unusual inbound network connection that could be a trigger packet?
    context: Machine learning models like Isolation Forest can learn the complex patterns of normal network traffic. This question uses such a model to score new connections. A connection that the model flags as a significant anomaly (i.e., it is easily 'isolated' from normal traffic) is a strong candidate for a malicious trigger packet, as its features do not conform to benign patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network sensors at internet egress/ingress points
      - Virtual network taps in cloud environments (e.g., VPC Traffic Mirroring)
      - Core network switch SPAN ports
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY anomaly_detection_model(IsolationForest) to inbound Zeek conn.log features (port, protocol, duration, byte_counts, flags). ALERT ON connection WHERE anomaly_score < threshold
  - question: Is a non-standard process being launched with command-line arguments indicating the use of packet capture or raw socket filtering?
    context: Adversaries need to use specific libraries or system calls to set up socket filters. This question looks for process creation events where the command line contains keywords like 'pcap' or 'SO_ATTACH_FILTER'. By excluding known legitimate tools (Wireshark, tcpdump), we can focus on suspicious processes that are likely part of a malicious backdoor.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint security logs from all workstations and servers
      - Centralized Windows Event Log collection system
      - Live memory analysis on suspicious hosts
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH WinEvent:4688 WHERE (command_line CONTAINS 'pcap' OR 'libpcap' OR 'winpcap' OR 'setsockopt' OR 'SO_ATTACH_FILTER') AND parent_process_name NOT IN (allowlist_of_network_tools)
  - question: Is a process being executed with an abnormally complex or obfuscated command line?
    context: To hide their activity, adversaries often encode or obfuscate commands passed on the command line, which results in high Shannon entropy (a measure of randomness). This question establishes a baseline for the normal command-line entropy of each executable and alerts on significant deviations, which could indicate malicious, obfuscated parameters being passed to a process.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint security logs from all workstations and servers
      - Centralized Windows Event Log collection system
      - Live memory analysis on suspicious hosts
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: FOR each unique process_name, BASELINE command_line_entropy. ALERT ON WinEvent:4688 WHERE command_line_entropy > 99th_percentile for that process_name
  - question: Has a machine learning model identified a rare and anomalous process execution pattern?
    context: This question uses clustering algorithms to group all process execution events based on their features (parent, path, command-line attributes). Normal, frequent activities will form large, dense clusters. Malicious activity, being rare, will form small, isolated clusters. Investigating these outlier clusters can reveal novel attack patterns.
    answer sources:
      - Windows Event ID 4688
      - Endpoint security logs from all workstations and servers
      - Centralized Windows Event Log collection system
      - Live memory analysis on suspicious hosts
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY clustering_model(DBSCAN) to process creation features (parent_process, process_path, cmd_line_length, cmd_line_entropy). ALERT ON events in small, distant clusters
  - question: Did a host spawn a command shell or initiate a new outbound connection immediately after receiving a suspected 'magic packet'?
    context: This is a high-confidence detection that directly links a network trigger to a malicious action. The question looks for a two-part event: first, the arrival of a packet matching the 'magic packet' profile, and second, the immediate execution of a shell or a new outbound connection from the same host. This temporal correlation is a strong indicator that the packet successfully triggered a backdoor.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized SIEM capable of correlating endpoint and network logs
      - Data lake with host and network telemetry
      - Endpoint Detection and Response (EDR) platform logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on inbound 'magic_packet' to host. IF within 15 seconds, (WinEvent:4688 on host for cmd.exe/powershell.exe OR new outbound Zeek conn.log from host), THEN ALERT.
  - question: Did a host exhibit a sudden spike in process creation activity immediately following the receipt of an anomalous inbound packet?
    context: Instead of looking for a specific process, this question looks for a behavioral change. It baselines the normal rate of process creation for a host. A sudden, statistically significant increase in this rate right after receiving a suspicious packet (e.g., from a rare IP) suggests that the packet may have triggered a script or payload that is spawning multiple subsequent processes.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized SIEM capable of correlating endpoint and network logs
      - Data lake with host and network telemetry
      - Endpoint Detection and Response (EDR) platform logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE process_creation_rate per host. TRIGGER on anomalous inbound packet to host. IF process_creation_rate on host spikes > 3*std_dev above baseline immediately after, THEN ALERT.
  - question: Has a machine learning model detected a low-probability sequence of events indicative of a backdoor activation?
    context: This question uses sequence analysis models (like HMMs or LSTMs) to learn the normal "grammar" of system events. A sequence like `[anomalous_inbound_packet] -> [shell_spawn] -> [new_outbound_connection]` is highly abnormal and has a low probability of occurring in benign operations, making it a strong signal of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized SIEM capable of correlating endpoint and network logs
      - Data lake with host and network telemetry
      - Endpoint Detection and Response (EDR) platform logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY sequence_analysis_model(LSTM) to event streams (network, process, file). ALERT ON low-probability sequence, e.g., [rare_inbound_conn, spawn_cmd.exe, outbound_conn_new_ip]
  - question: Is an adversary using non-standard network protocols or IP fragmentation to evade network defenses?
    context: Firewalls and IDS are often optimized for standard protocols (TCP, UDP, ICMP). Adversaries may use other protocols or abuse IP fragmentation to bypass inspection. This question looks for traffic using uncommon IP protocols or Zeek's explicit detection of fragmentation anomalies, which are strong signs of an evasion attempt.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Network sensors at the internet border
      - Sensors monitoring traffic between internal network segments
      - Cloud provider network logs (e.g., AWS VPC Flow Logs, Azure Network Watcher)
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE protocol NOT IN ('tcp', 'udp', 'icmp') AND dest_ip is internal. OR SEARCH Zeek weird.log WHERE name IN ('ip_fragmentation_anomaly', 'possible_split_routing')
  - question: Is an adversary sending packets with an abnormally low Time-To-Live (TTL) value?
    context: Attackers may craft packets with a low TTL to ensure they expire before reaching deeper inspection points or security sensors within the network. This question establishes a baseline for normal TTL values from various network locations and flags connections with suspiciously low TTLs, which is a statistical indicator of TTL-based evasion.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Network sensors at the internet border
      - Sensors monitoring traffic between internal network segments
      - Cloud provider network logs (e.g., AWS VPC Flow Logs, Azure Network Watcher)
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE TTL values for inbound traffic. ALERT ON connection WHERE TTL < 5th_percentile for its source ASN/region
  - question: Has a machine learning model classified an inbound connection as anomalous based on its low-level network features?
    context: This question uses a one-class SVM or similar model to create a tight boundary around what is considered "normal" traffic, based on features like protocol, TTL, and fragmentation flags. Any connection that falls outside this boundary is, by definition, anomalous and could represent a novel or sophisticated evasion technique not caught by specific rules.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Network sensors at the internet border
      - Sensors monitoring traffic between internal network segments
      - Cloud provider network logs (e.g., AWS VPC Flow Logs, Azure Network Watcher)
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY one-class_SVM_model to inbound traffic features (protocol, TTL, packet_size, frag_flags). ALERT ON connection classified as anomaly
  - question: Was a Windows Filtering Platform (WFP) rule that permitted a connection created by a suspicious process?
    context: Adversaries can add malicious WFP rules to allow their C2 traffic to bypass the Windows Firewall. This question links a permitted connection (Event 5156) back to the rule that allowed it (Event 5152) and then to the process that created that rule (Event 4688). If the rule-creating process is unsigned or runs from a temp directory, it is highly likely to be malicious.
    answer_sources:
      - Windows Event ID 5156
      - Windows Event ID 5152
      - Windows Event ID 4688
      - Key servers with Windows Firewall enabled
      - User endpoints with local firewalls
      - Centralized Windows Event Log repository
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: JOIN WinEvent:5156 and WinEvent:5152 on FilterId. FIND WinEvent:4688 for ProcessId from 5152. ALERT IF process_path in 4688 is in temp/user-writable location OR process is unsigned.
  - question: Is a WFP filter being created by a process or parent-process pair that rarely or never does so?
    context: Normally, only a few specific system processes (like `svchost.exe` spawned by `services.exe`) are responsible for creating WFP filters. This question baselines these legitimate relationships. An alert on a rare pair, such as `word.exe` spawning a process that creates a filter, would be a strong statistical anomaly indicating potential compromise.
    answer_sources:
      - Windows Event ID 5156
      - Windows Event ID 5152
      - Windows Event ID 4688
      - Key servers with Windows Firewall enabled
      - User endpoints with local firewalls
      - Centralized Windows Event Log repository
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE frequency of (parent_process, child_process) pairs that create WFP filters. ALERT ON filter creation where the parent-child pair frequency < 0.1%
  - question: Has a graph analysis model identified a process creating a WFP filter that is disconnected from normal clusters of activity?
    context: This question models the system's behavior as a graph, where processes are nodes. Community detection algorithms find clusters of related activity. Legitimate processes that create filters will belong to large, well-known communities. A malicious process creating a filter will appear as an isolated node, making it easy to spot as an anomaly.
    answer_sources:
      - Windows Event ID 5156
      - Windows Event ID 5152
      - Windows Event ID 4688
      - Key servers with Windows Firewall enabled
      - User endpoints with local firewalls
      - Centralized Windows Event Log repository
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: MODEL WFP filter creation as a graph (nodes=processes, edges=filter_creation). APPLY community_detection_algorithm. ALERT ON process that creates a filter but is not in a known community.
  - question: Was the security event log cleared or auditing disabled immediately after the host received a small, one-way inbound packet?
    context: This question correlates a network trigger with a defense evasion action. Receiving a small, unidirectional packet (a potential trigger) followed within minutes by a critical security event like clearing the event log (Event 1102) or disabling audit policies (Event 4719) strongly suggests a backdoor was activated and is now attempting to cover its tracks.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 1102
      - Windows Event ID 4719
      - Centralized SIEM with correlated data from Domain Controllers, endpoints, and network sensors
      - Security log archives
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on Zeek conn.log where history CONTAINS '^d' AND orig_ip_bytes < 100. IF within 5 minutes, same host generates WinEvent:1102 OR WinEvent:4719, THEN ALERT.
  - question: Did a host experience a statistically significant spike in critical security events (log clearing, etc.) after receiving a packet from a rare source IP?
    context: This is a behavioral approach to detecting the same pattern. It looks for a statistical spike in the rate of high-impact security events. If this spike follows a network event from a novel source IP, it increases the likelihood that the two are related and that the network event triggered the evasive action.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 1102
      - Windows Event ID 4719
      - Centralized SIEM with correlated data from Domain Controllers, endpoints, and network sensors
      - Security log archives
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE rate of critical events (1102, 4719) per host. TRIGGER on inbound packet from new source_ip (not seen in 30 days). IF critical event rate spikes > 3*std_dev above average, THEN ALERT.
  - question: Has a probabilistic model calculated a high likelihood that a critical security event was caused by a preceding anomalous network event?
    context: A Bayesian network can learn the causal relationships between different types of events. This question uses such a model to calculate the probability of a defense evasion action (e.g., Log Cleared) given the observation of a suspicious network event (e.g., Rare Inbound Packet). If the model computes a high probability, it provides a statistically robust alert indicating a likely causal link.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 1102
      - Windows Event ID 4719
      - Centralized SIEM with correlated data from Domain Controllers, endpoints, and network sensors
      - Security log archives
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY Bayesian network model to event streams. ALERT IF P(CriticalHostEvent | AnomalousNetworkEvent) > confidence_threshold
  - question: Is a host receiving a single, small 'knock' packet from a known C2 IP address on a non-standard port?
    context: This is a very specific and high-fidelity rule to detect the activation of a C2 channel. It combines multiple strong indicators: a source IP known for C2, a high-numbered destination port, and characteristics of a trigger packet (single packet, very small size). A match on this rule is a high-confidence indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Network sensors at internet perimeter
      - Threat Intelligence Platform integrated with SIEM
      - DNS server logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek conn.log WHERE source_ip IN C2_threat_intel_list AND dest_port > 1024 AND sent_packets == 1 AND sent_bytes < 100
  - question: Is a host receiving a single-packet connection on an extremely rare port for the organization?
    context: This question aims to find C2 'knocks' without relying on threat intelligence. C2 backdoors often listen on obscure, high-numbered ports. By identifying connections to ports that are statistically rare across the entire enterprise, we can uncover potential C2 listeners, especially if the source IP also has a low reputation.
    answer_sources:
      - Zeek conn.log
      - Network sensors at internet perimeter
      - Threat Intelligence Platform integrated with SIEM
      - DNS server logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE inbound destination port frequency across enterprise. ALERT ON single-packet connection WHERE dest_port_frequency < 1st_percentile
  - question: Has a trained machine learning classifier assigned a high probability score, indicating a connection is likely a C2 trigger?
    context: A supervised model can be trained on a dataset of known malicious C2 'knocks' and benign traffic. The model learns the subtle combination of features (IP reputation, port rarity, size, flags) that best distinguishes C2 triggers. This question uses the model to score new connections, providing a probabilistic assessment of C2 risk.
    answer_sources:
      - Zeek conn.log
      - Network sensors at internet perimeter
      - Threat Intelligence Platform integrated with SIEM
      - DNS server logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY supervised_C2_classifier_model to connection features. ALERT ON connection WHERE probability_c2 > 0.95
  - question: Did a host make a DNS query for a known-bad or algorithmically-generated domain (DGA) immediately after receiving a suspected trigger packet?
    context: After a backdoor is activated, it often needs to resolve a C2 domain. This question links a network trigger event to a subsequent suspicious DNS query. A query for a domain matching a DGA regular expression or appearing on a blocklist is a strong indicator that the triggered payload is establishing a C2 channel.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network sensors monitoring DNS traffic (port 53)
      - Centralized SIEM correlating DNS logs with endpoint process logs
      - DNS resolver logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on suspected trigger packet to host. IF within 60 seconds, host makes DNS query where domain MATCHES DGA_regex OR domain IN threat_intel_domain_list, THEN ALERT.
  - question: Did a host make a DNS query for a domain with statistically high randomness (entropy)?
    context: Domain Generation Algorithms (DGAs) often produce random-looking strings (e.g., `a73hbx92jd.com`), which have high Shannon entropy. This question establishes a baseline for the entropy of normal domain names and flags queries for domains with exceptionally high entropy, which are likely DGAs used for C2.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network sensors monitoring DNS traffic (port 53)
      - Centralized SIEM correlating DNS logs with endpoint process logs
      - DNS resolver logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE Shannon entropy for DNS queries. ALERT ON DNS query WHERE domain_entropy > 99th_percentile
  - question: Has a character-level machine learning model identified a DNS query as highly improbable and likely machine-generated?
    context: An RNN/LSTM model can learn the character-level patterns of legitimate domain names. This question uses such a model to evaluate new domains. A domain that the model finds surprising or "perplexing" is one that does not conform to the patterns of human-generated names and is therefore likely a DGA.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network sensors monitoring DNS traffic (port 53)
      - Centralized SIEM correlating DNS logs with endpoint process logs
      - DNS resolver logs
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY character_level_RNN_model to DNS query domain. ALERT IF domain perplexity_score > threshold
  - question: Was a PowerShell reverse shell or other encoded command executed on a host immediately after it received an anomalous inbound connection?
    context: This is another high-confidence correlation. It looks for a network trigger (inbound connection to a non-standard port) followed immediately by the execution of a command indicative of a reverse shell or obfuscated payload (e.g., `powershell -enc`). This sequence is a classic pattern for backdoor activation leading directly to C2.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint EDR/sysmon logs from all hosts
      - Network sensors at key choke points
      - Centralized SIEM for correlation
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on inbound connection to non-standard port. IF within 10 seconds, same host runs powershell.exe with command line containing '-nop', '-w hidden', or '-enc', THEN ALERT.
  - question: Did a statistically rare parent-child process relationship (e.g., web server spawning a shell) occur immediately after an anomalous inbound connection?
    context: Legitimate software has predictable process trees. A web server spawning a command shell is highly unusual. This question detects such rare parent-child relationships. When this rare event is temporally linked to a preceding anomalous network connection, it strongly suggests the connection triggered a payload that is now spawning a shell for C2.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint EDR/sysmon logs from all hosts
      - Network sensors at key choke points
      - Centralized SIEM for correlation
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE parent-child process relationships. ALERT ON rare relationship (e.g., web_server.exe -> cmd.exe). ELEVATE IF it follows an anomalous inbound connection.
  - question: Has a graph-based ML model detected an anomalous process execution chain that was initiated immediately after a suspected C2 trigger packet?
    context: This question models entire chains of process activity as subgraphs. It uses machine learning to identify rare or novel subgraphs that deviate from normal behavior. Linking the creation of such an anomalous subgraph to a preceding C2 trigger packet provides a powerful, behavior-based alert for backdoor activation.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint EDR/sysmon logs from all hosts
      - Network sensors at key choke points
      - Centralized SIEM for correlation
    range: the last 90 days
    queries:
      - technology: pseudocode
        query: APPLY graph_anomaly_detection to process execution chains. ALERT ON creation of rare subgraph (e.g., web_server -> powershell -> outbound_conn). ELEVATE IF it follows a suspected C2 trigger packet.