name: T1087.002: Domain Account
id: 5a1b9c8d-2e3f-4a6b-8c7d-9f0e1d2c3b4a
description: This playbook addresses the threat of an adversary actively enumerating domain accounts or groups within an Active Directory environment. It provides investigative questions to detect this activity through several distinct evidence types: the execution of known enumeration tools (e.g., SharpHound) or native utilities (e.g., net.exe, dsquery); the use of malicious PowerShell scripts containing enumeration cmdlets (e.g., Get-ADUser, PowerView); anomalous network traffic patterns such as high-volume LDAP/SAMR queries to Domain Controllers; Kerberos ticket requests indicative of Kerberoasting; and correlated sequences of discovery commands that reveal a logical attack progression. The goal is to identify reconnaissance efforts that precede lateral movement and privilege escalation.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known Active Directory enumeration tools being executed in the environment?
    context: This question seeks to identify the direct execution of malicious reconnaissance tools like SharpHound or AdRecon. Monitoring for the creation of processes matching a known tool watchlist (e.g., 'sharphound.exe', 'adrecon.exe') is a high-fidelity method to detect initial stages of credential access and lateral movement preparation.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, Member Servers, Privileged User Workstations
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_events (e.g., Windows Event ID 4688) WHERE process_name IN (watchlist_of_ad_tools) OR command_line CONTAINS (unique_tool_arguments)
  - question: Are there any processes with unusually high command-line entropy, potentially indicating obfuscated enumeration scripts?
    context: Adversaries often obfuscate or pack their scripts to evade simple signature-based detections. This question aims to find these by calculating the entropy (randomness) of command-line arguments. A significant deviation from the baseline entropy for common processes can indicate a hidden or malicious payload, especially when launched from unexpected parent processes like web servers.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, Member Servers, Privileged User Workstations
    range: last 90 days
    queries:
      - pseudocode: CALCULATE entropy of command_line_arguments for all process_creation_events. ALERT where entropy > 99th_percentile_baseline, especially for non-standard parent_processes.
  - question: Can machine learning models identify process execution events that are highly probable to be malicious Active Directory enumeration?
    context: This question explores using a machine learning classifier to move beyond simple rules and detect nuanced patterns of malicious enumeration. By training a model on features like parent process, user context, and command-line characteristics, the system can score new events and flag suspicious activity that might not trigger a specific rule but fits a broader malicious profile.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers, Member Servers, Privileged User Workstations
    range: last 90 days
    queries:
      - pseudocode: APPLY classification_model to process_creation_events. ALERT on events with high_probability_score for malicious_enumeration_class.
  - question: Are native Windows utilities like 'net.exe', 'dsquery.exe', or 'nltest.exe' being used with command-line arguments indicative of domain enumeration?
    context: Adversaries frequently use 'living-off-the-land' binaries (LOLBins) to perform discovery, as these tools are built-in and less likely to be flagged by basic antivirus. This question focuses on detecting the specific command-line patterns (e.g., 'net user /domain', 'dsquery user') that signify these utilities are being used for reconnaissance rather than legitimate administration, especially when initiated by non-interactive processes.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, All Endpoint Devices
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_events for 'net.exe', 'dsquery.exe', 'nltest.exe' WHERE command_line CONTAINS (enumeration_strings) AND parent_process is non-interactive.
  - question: Is any host executing discovery-related native utilities at a frequency that is anomalous compared to its own history or its peer group?
    context: While a single execution of 'net.exe' might be normal, a sudden burst of these commands from a single host is suspicious. This question aims to detect such behavior by baselining the execution frequency of these utilities per host. An alert is triggered when a host's activity significantly deviates from its normal pattern or the pattern of similar hosts, indicating potential automated scripting of discovery commands.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, All Endpoint Devices
    range: last 90 days
    queries:
      - pseudocode: BASELINE execution frequency of 'net.exe', 'dsquery.exe', 'nltest.exe' per host. ALERT when host_count > 95th_percentile of its own baseline or peer_group_baseline.
  - question: Are there unusual clusters of command executions that, when grouped by user, host, and time, deviate from normal administrative workflows?
    context: This question uses unsupervised machine learning to find 'unknown unknowns'. By clustering process executions based on multiple features (user, host, parent process, command, time), the analysis can identify groups of activity that are outliers. These anomalous clusters may represent an adversary's discovery workflow, which differs subtly from routine administrative tasks.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, All Endpoint Devices
    range: last 90 days
    queries:
      - pseudocode: CLUSTER process_execution_events on features (user, host, parent_process, command). INVESTIGATE outlier clusters that deviate from normal_behavior_clusters.
  - question: Are PowerShell scripts being executed that contain cmdlets, functions, or parameters used for Active Directory enumeration?
    context: PowerShell is a powerful tool for both administrators and adversaries. This question focuses on finding malicious use by inspecting decoded PowerShell script blocks (from Event ID 4104) for specific keywords. It looks for common enumeration cmdlets like 'Get-ADUser', functions from attack frameworks like PowerView, and broad query patterns like '-Filter *' that indicate large-scale reconnaissance.
    answer_sources:
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, Privileged User Workstations, Exchange Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH powershell_script_block_logs (Event ID 4104) WHERE script_text MATCHES REGEX for (ad_cmdlets, powerview_functions, or broad_query_patterns).
  - question: Are there any executed PowerShell scripts exhibiting high entropy or unusual character ratios, suggesting obfuscation?
    context: To bypass keyword-based detections, attackers often obfuscate their PowerShell scripts. This question seeks to detect such obfuscation by analyzing the statistical properties of the script text itself. High entropy (randomness) or an abnormal ratio of letters to special characters can be a strong indicator that the script has been encoded or packed to hide its true purpose.
    answer_sources:
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, Privileged User Workstations, Exchange Servers
    range: last 90 days
    queries:
      - pseudocode: CALCULATE entropy and character_ratios for each powershell_script_block. ALERT on scripts where metrics > 3_standard_deviations_from_mean.
  - question: Is any user executing PowerShell enumeration commands at a volume that significantly exceeds their predicted normal activity?
    context: This question uses time-series analysis to detect a sudden burst of discovery activity from a specific user account. By modeling the expected volume of PowerShell enumeration events for each user over time, the system can flag a sudden, anomalous spike that exceeds the forecast. This points to a potential script-driven reconnaissance campaign by a compromised account.
    answer_sources:
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, Privileged User Workstations, Exchange Servers
    range: last 90 days
    queries:
      - pseudocode: FORECAST expected volume of powershell_enumeration_events per user. ALERT when observed_volume >> predicted_volume for a given time window.
  - question: Is a non-administrative account attempting to read the membership of sensitive Active Directory groups?
    context: A key goal for an adversary is to identify members of privileged groups like 'Domain Admins'. This question provides a high-fidelity way to detect this by auditing access to these objects directly. By setting a System Access Control List (SACL) on these groups, any attempt to read their 'Member' attribute will generate an Event ID 4662, which can be alerted on if the account performing the action is not a privileged administrator.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek ldap.log
      - Windows Event ID 4662
      - Domain Controllers, Core Network Switches monitoring traffic to/from DCs
    range: last 90 days
    queries:
      - pseudocode: SEARCH directory_service_access_logs (Event ID 4662) WHERE object_is_sensitive_group AND attribute_is_member AND account_is_not_admin.
  - question: Is any single source IP generating an anomalous volume of LDAP or SAMR traffic to a Domain Controller?
    context: Tools like BloodHound generate a large volume of LDAP or SAMR queries to map out the domain. This question aims to detect this from a network perspective. By baselining normal traffic patterns (e.g., number of queries, bytes transferred) from clients to Domain Controllers, it is possible to identify a source IP that dramatically exceeds the norm (e.g., 99th percentile), indicating a potential enumeration scan.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek ldap.log
      - Windows Event ID 4662
      - Domain Controllers, Core Network Switches monitoring traffic to/from DCs
    range: last 90 days
    queries:
      - pseudocode: BASELINE LDAP/SAMR traffic metrics per source IP to DCs. ALERT when source_ip_metrics > 99th_percentile of baseline. CORRELATE with high counts of Event 4662 per user.
  - question: Can an unsupervised machine learning model identify anomalous network connections to Domain Controllers that are indicative of enumeration?
    context: This question seeks to find suspicious network traffic that doesn't fit a specific rule but is statistically abnormal. By using an algorithm like Isolation Forest on network connection features (duration, data volume, LDAP operation type), the system can learn what 'normal' DC traffic looks like and flag any connections that are strong outliers. These outliers are likely to be reconnaissance activities from tools like BloodHound.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek ldap.log
      - Windows Event ID 4662
      - Domain Controllers, Core Network Switches monitoring traffic to/from DCs
    range: last 90 days
    queries:
      - pseudocode: APPLY anomaly_detection_model (e.g., Isolation Forest) to network_connection_logs to DCs. ALERT on connections flagged as strong outliers.
  - question: Are Kerberos service tickets being requested for user accounts using a weak encryption type (RC4), indicative of a Kerberoasting attack?
    context: Kerberoasting is an attack to crack the passwords of service accounts. It involves requesting a Kerberos Ticket Granting Service (TGS) ticket for a Service Principal Name (SPN) associated with a user account. This question detects this with high fidelity by looking for TGS requests (Event ID 4769) that use the weak, crackable RC4 encryption type for a user SPN (name doesn't end in '$').
    answer_sources:
      - Windows Event ID 4769
      - Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH kerberos_tgs_request_logs (Event ID 4769) WHERE encryption_type is 'RC4-HMAC (0x17)' AND service_name is_a_user_account.
  - question: Is a single client requesting Kerberos tickets for an anomalously high number of distinct services in a short period?
    context: Before launching a Kerberoasting attack, an adversary must first discover which accounts have SPNs. This is often done by requesting tickets for a large number of services to see which requests succeed. This question detects this reconnaissance phase by counting the number of unique SPNs requested by each client. A client requesting a number of tickets far above the norm (e.g., 98th percentile) is highly suspicious.
    answer_sources:
      - Windows Event ID 4769
      - Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: AGGREGATE distinct service_name count from Event 4769 by client_address over 5 minutes. ALERT when count > 98th_percentile of all clients.
  - question: Can a machine learning model identify anomalous Kerberos TGS requests that deviate from normal patterns?
    context: This question uses a one-class classifier (like a One-Class SVM) to model 'normal' Kerberos ticket request behavior. By training on features like the client's location, time of day, and the type of service being requested, the model can create a boundary of normalcy. Any new request that falls significantly outside this boundary is flagged as an anomaly, potentially indicating part of a Kerberoasting attack or other malicious activity.
    answer_sources:
      - Windows Event ID 4769
      - Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: APPLY one-class_svm_model to Kerberos TGS requests. ALERT on requests that fall outside the learned 'normal' boundary.
  - question: Is there a correlated sequence of events, such as enumerating a privileged group and then its members, occurring from the same source in a short time frame?
    context: Adversaries often follow a logical progression of discovery actions. This question aims to detect that pattern by using a stateful correlation rule. For example, if a user on a host first runs a command to identify the 'Domain Admins' group, and then shortly after runs another command to list the members of that group, the combined sequence is much more suspicious than either event in isolation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - SIEM / Log Aggregator Platform, Domain Controllers, Member Servers
    range: last 90 days
    queries:
      - pseudocode: CREATE stateful_correlation_rule ALERT if (event_A 'net group \"Domain Admins\"') is followed within 15 mins by (event_B 'Get-ADGroupMember \"Domain Admins\"') from same user/host.
  - question: Is any user accumulating a high 'Discovery Activity Score' by executing a series of weighted discovery commands over a short period?
    context: Some discovery commands are more indicative of malicious intent than others. This question creates a scoring system where different commands are assigned points based on their likely malice. The scores for a user are summed over a time window. By tracking this score over time, the system can use baselining to detect when a user's activity score spikes anomalously, indicating a concentrated reconnaissance effort.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - SIEM / Log Aggregator Platform, Domain Controllers, Member Servers
    range: last 90 days
    queries:
      - pseudocode: CALCULATE discovery_activity_score per user over 1 hour by summing weighted command points. ALERT when score spikes anomalously compared to user's historical baseline.
  - question: Are there statistically rare sequences of commands being executed that match known adversary discovery TTPs?
    context: This question uses advanced analytics to find malicious command sequences without pre-defining them. Sequence mining algorithms can analyze all command-line and PowerShell logs across the enterprise to identify which sequences of commands are common and which are rare. Rare sequences that are known to be associated with adversary tactics can then be flagged, providing high-context alerts that go beyond single-event detection.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - SIEM / Log Aggregator Platform, Domain Controllers, Member Servers
    range: last 90 days
    queries:
      - pseudocode: APPLY sequence_mining_algorithm to command/script logs. FLAG rare sequences that match known adversary TTPs.