name: 'T1087.001: Local Account'
id: 'a6b5a3e1-8f5b-43e3-9565-5022a8684699'
description: 'This playbook focuses on detecting adversary attempts to enumerate local system accounts, a key discovery technique. It addresses methods ranging from the use of known malicious tools and suspicious command-line arguments to anomalous command frequencies and "low and slow" activity across multiple systems. The playbook also details how to correlate discovery events with subsequent malicious actions, such as logon attempts with dormant accounts or the exfiltration of the SAM database, to provide high-confidence alerts on active threats.'
type: 'technique'
related:
  - 'TA0007: Discovery'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Has a process been executed whose file hash matches a known malicious discovery tool?'
    context: 'This question aims to detect the use of well-known adversary tools like PowerSploit, BloodHound, or Mimikatz. By hashing every new process and checking it against a threat intelligence feed, we can identify the execution of malicious binaries used for local account enumeration with high confidence. A match indicates an active threat on the endpoint.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations'
      - 'Member servers'
      - 'Domain controllers'
      - 'Endpoint Detection and Response (EDR) platform'
      - 'SIEM/Log Aggregator'
      - 'Threat Intelligence Feeds'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each new process event, COMPUTE file hash. QUERY threat intel feed for hash. IF match exists, ALERT.'
  - question: 'Has a rare or anomalous process been executed on the system?'
    context: 'This question helps identify potentially malicious, unknown, or custom tools that are not present in threat intelligence feeds. By calculating the prevalence of a process hash across the enterprise, very rare executions (e.g., bottom 1st percentile) can be flagged as suspicious. This is especially relevant if the parent process is unusual for spawning new processes, such as a Microsoft Office application, or if the process is unsigned.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations'
      - 'Member servers'
      - 'Domain controllers'
      - 'Endpoint Detection and Response (EDR) platform'
      - 'SIEM/Log Aggregator'
      - 'Process hash prevalence data'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each new process event, COMPUTE file hash. CALCULATE prevalence of hash across enterprise over last 30 days. IF prevalence is in bottom 1st percentile AND parent process is anomalous, ALERT.'
  - question: 'Does a machine learning model classify a new process execution as malicious based on its characteristics?'
    context: 'This question leverages machine learning to score the likelihood of a process being malicious, moving beyond simple hash lookups or prevalence counts. The model considers a richer set of features, including the process name, parent process, user context, and command-line arguments, to identify sophisticated or obfuscated threats that might otherwise be missed. An alert is generated when the model''s confidence score surpasses a set threshold.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations'
      - 'Member servers'
      - 'Domain controllers'
      - 'Endpoint Detection and Response (EDR) platform'
      - 'SIEM/Log Aggregator'
      - 'ML model output'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each new process event, EXTRACT features (process name, parent, user, cmdline). INPUT features into ML classification model. IF model score > threshold, ALERT.'
  - question: 'Has a command been executed that is commonly used for local account enumeration?'
    context: 'This question looks for the direct execution of commands that adversaries use to discover local accounts. By monitoring process command-line arguments for specific strings like `net user`, `Get-LocalUser`, or `wmic useraccount get`, we can detect explicit enumeration attempts. Alerts should be prioritized if these commands are spawned by unusual parent processes like Microsoft Office applications or web browsers, which can indicate a compromised user session.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations'
      - 'Member servers'
      - 'Domain controllers'
      - 'Terminal servers'
      - 'SIEM/Log Aggregator'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each new process event, SEARCH command line for regex patterns like ''net user'', ''Get-LocalUser''. IF match found, ALERT.'
  - question: 'Is a user executing commands that are anomalous compared to their historical baseline activity?'
    context: 'This question seeks to identify unusual command-line behavior on a per-user or per-host basis. It uses two methods: analyzing the complexity (Shannon entropy) of a command string to detect obfuscation and tracking the frequency of discovery-related commands. An alert is triggered if a command is significantly more complex or if the frequency of discovery commands deviates sharply from the established norm for that specific user or host.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations'
      - 'Member servers'
      - 'Domain controllers'
      - 'Terminal servers'
      - 'SIEM/Log Aggregator'
      - 'User/Host command history baseline'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each new command, CALCULATE Shannon entropy. IF entropy > 3 std dev from user''s average, ALERT. ALSO, TRACK frequency of discovery commands. IF frequency > 99th percentile of user''s history, ALERT.'
  - question: 'Has a user executed a sequence of commands that matches a known malicious pattern?'
    context: 'This question moves beyond single commands to analyze the entire sequence of actions within a user session. A sequence analysis model (like an LSTM) can be trained to recognize the "grammar" of an attack, such as reconnaissance commands (`whoami`, `net user`) followed by lateral movement or privilege escalation. This helps identify malicious intent even when individual commands, viewed in isolation, might appear benign.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations'
      - 'Member servers'
      - 'Domain controllers'
      - 'Terminal servers'
      - 'SIEM/Log Aggregator'
      - 'Command sequence analysis model'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'INPUT user''s command sequence into sequence analysis model. IF model flags sequence as matching a malicious pattern, ALERT.'
  - question: 'Has a user or host executed an excessive number of discovery commands within a short time frame?'
    context: 'This question is designed to detect brute-force or rapid enumeration activity. By counting the number of discovery-related commands (identified via regex) from a single source user or host within a short window (e.g., 5 minutes) and comparing it to a static threshold, we can quickly identify high-volume, noisy enumeration attempts.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Source host initiating discovery'
      - 'Target hosts being enumerated'
      - 'Security Information and Event Management (SIEM) system'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'COUNT discovery commands per source user/host in 5-minute windows. IF count > 10, ALERT.'
  - question: 'Has the rate of discovery commands from a user or host significantly deviated from their established baseline?'
    context: 'This question refines the previous one by using a dynamic, per-entity baseline instead of a single static threshold. This approach is more effective at detecting adversaries who are attempting to stay "under the radar" by using a volume of commands that might be normal for a system administrator but is highly unusual for a typical user. An alert is triggered when an entity''s activity exceeds its own historical norm by a significant margin (e.g., 3 standard deviations).'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Source host initiating discovery'
      - 'Target hosts being enumerated'
      - 'Security Information and Event Management (SIEM) system'
      - 'User/Host command frequency baseline'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each 5-minute window, COUNT discovery commands per user/host. IF count > 3 std dev from that entity''s historical mean, ALERT.'
  - question: 'Can sparse, "low and slow" enumeration events across multiple hosts and times be grouped into a single coordinated campaign?'
    context: 'This question addresses the challenge of detecting sophisticated, "low and slow" enumeration where an adversary spreads their activity across multiple targets over a longer period to evade simple frequency-based alerts. By using a clustering algorithm like DBSCAN, we can group these seemingly unrelated events based on features like source, command type, and time proximity, revealing the broader, coordinated campaign.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Source host initiating discovery'
      - 'Target hosts being enumerated'
      - 'Security Information and Event Management (SIEM) system'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'INPUT discovery event features (source, target, user, command, time) into DBSCAN clustering algorithm. IF a cluster of related events is identified, ALERT as a coordinated campaign.'
  - question: 'Did a local account discovery attempt from a source host precede a local logon attempt from that same source within a 60-minute window?'
    context: 'This question aims to link reconnaissance activity directly to a potential follow-on action. A local account discovery command (`net user`) followed shortly by a local logon attempt (successful or failed) from the same source is a strong indicator that the adversary is acting on the information they just gathered. This correlation provides critical context, turning two separate, lower-priority events into a single high-priority alert.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4625'
      - 'Zeek conn.log'
      - 'Authentication servers'
      - 'Domain Controllers'
      - 'High-value servers'
      - 'User workstations'
      - 'SIEM system'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'ON discovery event from source IP, START 60-minute timer. IF local logon event (Type 2) from same source IP occurs within window, ALERT.'
  - question: 'Following a discovery and logon attempt, was the target account one that is rarely used or dormant?'
    context: 'This question adds a layer of risk scoring to the previous correlation. If an adversary discovers and then attempts to use a local account, targeting a dormant or infrequently used account is particularly suspicious, as these are less likely to be monitored and more likely to have weak or unchanged passwords. By checking the logon history, we can significantly increase the priority of alerts involving these high-risk dormant accounts.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4625'
      - 'Zeek conn.log'
      - 'Authentication servers'
      - 'Domain Controllers'
      - 'High-value servers'
      - 'User workstations'
      - 'SIEM system'
      - 'Account logon history data'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'ON correlated discovery/logon alert, QUERY logon history for target account. IF time since last logon is in 95th percentile (dormant), INCREASE alert risk score.'
  - question: 'Does a machine learning model predict a logon attempt is malicious, especially when it is preceded by a discovery event?'
    context: 'This question operationalizes the correlation between discovery and logon as a feature in a machine learning model. The model learns to assess the risk of a logon based on multiple factors (time of day, source IP, etc.), but the presence of a recent discovery event from the same source acts as a powerful feature, significantly increasing the model''s maliciousness score. This provides a probabilistic, automated way to flag high-risk logon attempts.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4625'
      - 'Zeek conn.log'
      - 'Authentication servers'
      - 'Domain Controllers'
      - 'High-value servers'
      - 'User workstations'
      - 'SIEM system'
      - 'ML model output'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'FOR each logon event, CREATE feature set including a boolean ''preceded_by_discovery_in_60_min''. INPUT to ML model. IF score > threshold, ALERT.'
  - question: 'Has there been an attempt to access or save the SAM database, followed by a network file transfer of that data?'
    context: 'This question looks for a common credential theft technique: dumping the Security Account Manager (SAM) database for offline cracking. The analytic correlates host-based events indicating SAM access (e.g., `reg.exe save hklm\\sam` or direct file access) with network-based events (e.g., from Zeek) showing a file of the same name or hash being exfiltrated. This provides end-to-end visibility of the theft.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4663'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Domain Controllers'
      - 'Critical application servers'
      - 'Network egress points'
      - 'File servers'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'ON SAM access event (EID 4688/4663), MONITOR network file logs for outbound transfer of a file with matching name/hash. IF found, ALERT.'
  - question: 'After a suspected SAM database access, did the host exhibit anomalous outbound network traffic volume?'
    context: 'This question provides an alternative way to detect exfiltration when file-level network visibility isn''t available. After a SAM access event is detected on a host, we analyze its subsequent network connections. A connection with an unusually large amount of outbound data, when compared to that specific host''s baseline, is a strong indicator that a large file (like the SAM database) has been exfiltrated.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4663'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Domain Controllers'
      - 'Critical application servers'
      - 'Network egress points'
      - 'File servers'
      - 'Host network traffic baseline'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'ON SAM access event, MONITOR outbound connections from host for 15 mins. IF connection outbound bytes > 99th percentile for that host, ALERT.'
  - question: 'Does an anomaly detection model flag a spike in outbound traffic from a critical asset that is temporally correlated with a SAM access event?'
    context: 'This question uses a more sophisticated, unsupervised machine learning approach to detect exfiltration from critical assets like Domain Controllers. An anomaly detection model (like Isolation Forest) is trained on normal network behavior. It can then flag anomalous patterns in traffic (e.g., spikes in outbound bytes, unusual protocols, or connection durations) that, when correlated in time with a host-based SAM access alert, provide a high-confidence signal of credential theft.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4663'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Domain Controllers'
      - 'Critical application servers'
      - 'Network egress points'
      - 'File servers'
      - 'Anomaly detection model output'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: 'CONTINUOUSLY run anomaly detection model on DC network traffic. IF model alerts AND a SAM access event occurred on the DC recently, ESCALATE alert.'