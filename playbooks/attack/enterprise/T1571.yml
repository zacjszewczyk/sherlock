name: T1571: Non-Standard Port
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook investigates whether an adversary is communicating with command and control (C2) infrastructure using non-standard ports to evade detection. This involves identifying outbound connections on ports not typically allowed for egress traffic, analyzing the characteristics of that traffic for malicious indicators, and correlating network data with host-based process activity. Key indicators include connections to known malicious IPs, the use of TLS/SSL fingerprints associated with C2 frameworks, protocol-port mismatches, unusual process network behavior (e.g., `powershell.exe` connecting to a high port), and C2-like network patterns such as periodic beaconing or long-duration, low-data sessions.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an internal asset establishing a successful outbound TCP connection to a known malicious C2 server on a non-standard port?
    context: This question aims to identify high-confidence malicious activity by correlating two specific conditions: communication on an unusual port and communication with a destination IP address that is already flagged by threat intelligence as a command and control server. A match provides a strong signal of a compromised host.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Egress network gateways, internet-facing proxies, and SIEM/Threat Intelligence Platform
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH Zeek conn.log WHERE conn_state is 'SF' AND destination_ip is public AND destination_port is NOT in {80, 443, 25, 53, 22, 8080}. JOIN results with threat_intel_feed ON destination_ip. ALERT on matches.
  - question: Are any external IP addresses receiving an unusually high frequency of connections on non-standard ports from our network?
    context: This question helps uncover potential C2 infrastructure that is not yet on a threat intelligence feed. By analyzing the frequency of connections, we can spot outliers. A single external IP receiving connections from many internal hosts, or a high volume of connections from one host, on an unusual port could indicate a C2 server.
    answer_sources:
      - Zeek conn.log
      - Egress network gateways, internet-facing proxies, and SIEM/Threat Intelligence Platform
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH Zeek conn.log WHERE conn_state is 'SF' and destination_port is non-standard. COUNT connections by destination_ip over 24h. IDENTIFY destination_ips in 99th percentile of frequency. ENRICH with ASN/GeoIP data. REVIEW for non-business IPs.
  - question: Can we predictively score new outbound connections on non-standard ports for their likelihood of being malicious?
    context: This question moves from reactive detection to proactive risk scoring. By training a machine learning model on various network connection features (port, duration, bytes transferred, IP reputation, ASN rarity), we can automatically assess the risk of new connections that might otherwise go unnoticed. This helps prioritize analyst attention on the most suspicious activities.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Egress network gateways, internet-facing proxies, and SIEM/Threat Intelligence Platform
    range: last 90 days
    queries:
      - language: pseudocode
        query: INPUT features (dest_port, duration, bytes_sent, bytes_received, TI_score, ASN_rarity) into a trained Random Forest model. SCORE new connections on non-standard ports. ALERT on scores above a defined maliciousness threshold.
  - question: Is any TLS/SSL traffic on non-standard ports using fingerprints (JA3/JA3S, certificate details) associated with known malicious C2 frameworks?
    context: This question targets the specific tools used by adversaries. Many C2 frameworks have unique TLS implementation details that result in consistent JA3/JA3S hashes or certificate characteristics. Matching these fingerprints is a highly reliable way to identify the presence of a specific threat actor tool. Detecting self-signed certificates on non-standard ports is also a strong indicator.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek x509.log
      - Egress network gateways and any network sensors performing TLS/SSL inspection
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH ssl.log and x509.log for connections on non-standard ports. MATCH ja3, ja3s, certificate_issuer, certificate_subject against known C2 indicator list. ALERT on matches or if self_signed is true.
  - question: Does any TLS traffic on non-standard ports use a certificate subject with unusually high or low entropy?
    context: This question seeks to uncover C2 channels that use algorithmically generated or default domain names. High entropy in a certificate subject can indicate a Domain Generation Algorithm (DGA). Conversely, very low entropy can point to default, non-descriptive names used in C2 framework templates. Both extremes are anomalous and warrant investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek x509.log
      - Egress network gateways and any network sensors performing TLS/SSL inspection
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH ssl.log for traffic on non-standard ports. CALCULATE Shannon entropy of the certificate_subject. FLAG subjects in the top 5th (high entropy) and bottom 5th (low entropy) percentiles for review.
  - question: Can we identify clusters of anomalous TLS sessions on non-standard ports that may represent a single C2 campaign?
    context: This question uses unsupervised machine learning to find "unknown unknowns." By clustering TLS sessions based on their characteristics (certificate validity, key length, JA3 hash), we can group similar connections. A cluster of sessions that is distinct from normal traffic can reveal a coordinated C2 campaign, even if the specific indicators are not previously known.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek x509.log
      - Egress network gateways and any network sensors performing TLS/SSL inspection
    range: last 90 days
    queries:
      - language: pseudocode
        query: EXTRACT features (cert_validity, key_length, signature_algo, ja3, self_signed_flag) from ssl.log and x509.log for non-standard port traffic. APPLY DBSCAN clustering. ANALYZE outlier clusters for shared anomalous properties.
  - question: Is any network traffic using a protocol that does not match the IANA-registered or common service for its destination port?
    context: This question identifies attempts to disguise malicious traffic by running it over a port typically associated with a different, often trusted, protocol. For example, running C2 over port 53 (DNS) to bypass simple port-based firewall rules. Dynamic protocol identification by sensors like Zeek is crucial for detecting this mismatch.
    answer_sources:
      - Zeek conn.log
      - Internal network segments (for East-West traffic visibility) and egress network gateways (for North-South traffic visibility)
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH Zeek conn.log. ALERT where (dest_port is 53 AND service is NOT 'dns') OR (dest_port is 80 AND service is NOT 'http'/'ssl') OR (dest_port is 443 AND service is NOT 'ssl').
  - question: Is any host exhibiting a significant increase in protocol-port mismatches compared to its own baseline?
    context: This question focuses on behavioral change at the host level. While some protocol mismatches can be benign, a sudden spike for a particular host can indicate a new, potentially malicious process has started communicating evasively. Comparing a host's activity against its own historical baseline helps to reduce false positives.
    answer_sources:
      - Zeek conn.log
      - Internal network segments (for East-West traffic visibility) and egress network gateways (for North-South traffic visibility)
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR each host, create baseline of normal protocol/port mismatches. CALCULATE current mismatch ratio over 24h. FLAG hosts where ratio exceeds 3 standard deviations above baseline.
  - question: Are there network-wide spikes in protocol-port mismatch events that are anomalous compared to normal daily and weekly patterns?
    context: This question uses time series analysis to detect coordinated or widespread events. A sudden, statistically significant increase in mismatch events across the entire network could signal the start of a worm's propagation or a large-scale malware campaign.
    answer_sources:
      - Zeek conn.log
      - Internal network segments (for East-West traffic visibility) and egress network gateways (for North-South traffic visibility)
    range: last 90 days
    queries:
      - language: pseudocode
        query: AGGREGATE count of protocol-port mismatch events per hour. INPUT time series into a trained ARIMA model. ALERT on spikes that significantly deviate from the forecasted pattern.
  - question: Is a process that does not typically initiate network connections (e.g., regsvr32.exe, mshta.exe) making an outbound connection to an external IP?
    context: This question hones in on living-off-the-land (LotL) techniques, where attackers abuse legitimate system utilities to perform malicious actions. An outbound network connection from a process like `regsvr32.exe` or `wscript.exe` is highly suspicious and often indicates script-based malware execution.
    answer_sources:
      - Sysmon Event ID 3
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Critical servers (Domain Controllers, database servers), developer workstations, and executive endpoints
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH Sysmon Event ID 3. ALERT where process_image is in {regsvr32.exe, mshta.exe, wscript.exe, cscript.exe} AND destination_ip is external.
  - question: Has any host initiated an outbound connection from a process/parent-process combination to a destination port that has never been seen before?
    context: This question establishes a behavioral baseline of normal process network activity on a per-host basis. An attacker introducing a new tool or using a legitimate tool in a new way (e.g., `powershell.exe` connecting to port 8443 for the first time) would trigger this logic. Scoring the anomaly based on the rarity of the components helps prioritize investigation.
    answer_sources:
      - Sysmon Event ID 3
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Critical servers (Domain Controllers, database servers), developer workstations, and executive endpoints
    range: last 90 days
    queries:
      - language: pseudocode
        query: BUILD baseline of {process, parent_process, dest_port} tuples from Sysmon Event ID 3 over 30 days. SEARCH for new connections with tuples not in the baseline. SCORE and ALERT on first-seen combinations.
  - question: Can we automatically classify new process-initiated network connections as normal or anomalous based on a learned model of behavior?
    context: This question applies one-class machine learning to automate the detection of anomalous process network behavior. A One-Class SVM learns a "boundary" around normal activity. Any new connection that falls outside this boundary is flagged as an anomaly, providing a powerful way to detect novel attack techniques without pre-defined rules.
    answer_sources:
      - Sysmon Event ID 3
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Critical servers (Domain Controllers, database servers), developer workstations, and executive endpoints
    range: last 90 days
    queries:
      - language: pseudocode
        query: TRAIN One-Class SVM on baseline of {Image, ParentImage, DestinationPort, Protocol} tuples. FEED new connection data into the model. ALERT on any connection classified as an anomaly.
  - question: Are there any connections on non-standard ports that are exhibiting signs of protocol violations or malformed traffic?
    context: This question leverages specialized detectors in network sensors like Zeek that spot traffic that doesn't conform to protocol standards. Events like `active_connection_without_data` are strong indicators of evasion techniques or poorly written C2 tools. Correlating these "weird" events with non-standard port usage provides high-fidelity alerts.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Egress network gateways and internal network core switches
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH Zeek weird.log for events like 'active_connection_without_data'. CORRELATE weird.log events with conn.log using the connection UID. ALERT if the correlated connection is on a non-standard port.
  - question: Is any internal host communicating with an external destination in a periodic, 'heartbeat' pattern indicative of C2 beaconing?
    context: Malware on a compromised host regularly "calls home" to its C2 server to check for new commands, resulting in highly periodic network connections. By calculating the standard deviation of the time between connections to a specific destination, we can identify this machine-generated rhythm, as it will have a very low deviation compared to human-generated traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Egress network gateways and internal network core switches
    range: last 90 days
    queries:
      - language: pseudocode
        query: GROUP connections by source_ip, dest_ip, dest_port. CALCULATE standard deviation of inter-arrival time over a 1-hour window. FLAG groups with a standard deviation < 2 seconds and at least 5 connections.
  - question: Can we use a machine learning model to detect anomalous sequences of connection patterns, such as C2 heartbeating or low-and-slow data exfiltration?
    context: A time series autoencoder can learn the normal sequence and structure of connection features (duration, bytes, packets). It can then spot subtle anomalies like beaconing or data exfiltration hidden in long sessions by detecting a high "reconstruction error"—the model's inability to reproduce the anomalous sequence from its learned knowledge of normal patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Egress network gateways and internal network core switches
    range: last 90 days
    queries:
      - language: pseudocode
        query: CREATE time series of feature vectors {duration, orig_bytes, resp_bytes} for each source-destination pair. TRAIN a time series autoencoder on normal traffic patterns. ALERT when the model's reconstruction error for a new time series exceeds a set threshold.