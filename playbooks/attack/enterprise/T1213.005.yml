name: "T1213.005: Messaging Applications"
id: 9e54a0b8-9b8c-4a3e-8f2d-1c5b6a7d8e9f
description: |
  This playbook addresses the adversary tactic of collecting sensitive data or information via messaging applications (T1213.005). It provides investigative questions and queries to detect this activity by monitoring for several key indicators. These include: messaging applications establishing network connections to known malicious hosts or unapproved destinations; the use of command-line arguments indicative of automated or non-interactive control; significant deviations in data upload volumes or file counts from established user baselines; anomalous process execution, such as being spawned by an unusual parent process or running with high privileges; and network connections from messaging clients to sensitive internal services like databases or domain controllers.
type: technique
related:
  - "TA0009: Collection"
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can I detect if a messaging application is connecting to a known malicious or unapproved external destination?
    context: This question aims to identify data exfiltration or command-and-control (C2) communication channels established by adversaries using legitimate messaging applications. By correlating endpoint process data with network traffic and comparing destinations against threat intelligence feeds, analysts can uncover covert connections that might otherwise blend in with normal traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Sysmon Event ID 3
      - Windows Event ID 5156
      - Network Egress Points (e.g., Firewalls, Proxies)
      - DNS Resolvers
      - User Endpoints
    range: last 90 days
    queries:
      - pseudocode: SEARCH process-aware network logs (Sysmon EID 3, Windows EID 5156) for messaging application processes. JOIN with network flow logs (Zeek conn.log) on source IP and timestamp. FOR each connection, CHECK if destination IP (`id.resp_h`) or SNI (`server_name`) is in threat intelligence list of malicious C2, TOR nodes, or unapproved cloud storage. ALERT on match.
  - question: Is a user's messaging application traffic being sent to a rare or anomalous geographic location or network?
    context: This question helps detect potential data exfiltration by identifying deviations from a user's normal network behavior. Adversaries may route data through unusual Autonomous Systems (ASNs) or countries. By baselining typical destinations and alerting on infrequent ones, especially when paired with high data transfer volumes, analysts can spot suspicious outliers.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Sysmon Event ID 3
      - Windows Event ID 5156
      - Network Egress Points (e.g., Firewalls, Proxies)
      - DNS Resolvers
      - User Endpoints
    range: last 90 days
    queries:
      - pseudocode: FOR each user, BASELINE destination ASNs and countries from messaging app network logs over 30 days. CALCULATE frequency of each destination. FOR new connections, CHECK if destination ASN/country frequency is < 1% of historical connections. IF true AND data transfer volume (`orig_bytes`) is in top 5% for user, ALERT.
  - question: Can machine learning models identify anomalous network connections from messaging applications that may indicate malicious activity?
    context: This question explores the use of unsupervised machine learning to detect subtle anomalies in network traffic that rule-based systems might miss. By training a model on features of legitimate messaging traffic, it can learn a "normal" profile and flag any new connection that deviates significantly, such as those with unusual ports, durations, or data volumes, pointing to potential misuse.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Sysmon Event ID 3
      - Windows Event ID 5156
      - Network Egress Points (e.g., Firewalls, Proxies)
      - DNS Resolvers
      - User Endpoints
    range: last 90 days
    queries:
      - pseudocode: TRAIN one-class SVM/isolation forest on features from legitimate messaging traffic (destination port, data volume, duration, protocol, destination ASN/country). DEPLOY model to score new connections in real-time. ALERT on connections with anomaly scores in the top 1%.
  - question: How can I detect if a messaging application is being controlled via suspicious command-line arguments, suggesting scripted or automated use?
    context: This question focuses on identifying non-interactive use of messaging clients, a common technique for exfiltrating data or receiving commands. Adversaries may use scripts to call messaging applications with specific arguments to post messages or upload files. Searching for these specific argument patterns in process creation logs can directly uncover this activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Endpoints (Workstations, Laptops)
      - Servers with Messaging Clients Installed
    range: last 90 days
    queries:
      - pseudocode: SEARCH process creation logs (Sysmon EID 1, WEF 4688) for messaging app process names. APPLY regex to command-line arguments to find patterns like `--post-file`, `--channel`, `--token`, `-H`, `'Content-Type: application/json'`. ALERT on match.
  - question: Can high entropy or unusual length in command-line arguments for a messaging application indicate malicious automation?
    context: This question uses statistical analysis to find suspicious command-line usage. Adversaries often use long, complex strings for API tokens or embed encoded scripts in command-line arguments, which results in higher-than-normal character randomness (entropy) and length. Baselining normal entropy and length allows for the detection of these statistical outliers.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Endpoints (Workstations, Laptops)
      - Servers with Messaging Clients Installed
    range: last 90 days
    queries:
      - pseudocode: FOR each messaging app, BASELINE command-line entropy and length over 30 days. FOR each new process creation, CALCULATE command-line entropy and length. ALERT if entropy > 3 standard deviations above mean OR length > 99th percentile of historical lengths.
  - question: Can a machine learning classifier distinguish between benign and malicious automated use of messaging applications based on process creation data?
    context: This question proposes a supervised machine learning approach to improve detection accuracy. By training a model on labeled examples of both legitimate and malicious process launches, it can learn complex patterns involving the process name, parent process, and command-line features. This allows for more nuanced classification than simple rules or statistical thresholds.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Endpoints (Workstations, Laptops)
      - Servers with Messaging Clients Installed
    range: last 90 days
    queries:
      - pseudocode: TRAIN Random Forest classifier on labeled process creation events. USE features like process name, parent process, command-line length/entropy, and keyword flags ('http', 'api', 'upload'). DEPLOY model to classify new process launches. ALERT on high-confidence 'malicious' classifications.
  - question: Has any single messaging session transferred an exceptionally large amount of data, such as over 500 MB?
    context: This question provides a simple but effective tripwire for detecting bulk data exfiltration. While legitimate use can involve large files, a single session transferring an extremely large volume of data (e.g., 500 MB) is highly unusual and warrants immediate investigation as a potential sign of a significant data theft event.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: SEARCH network flow logs (Zeek conn.log) for traffic from messaging services. ALERT if `orig_bytes` in a single session > 500 MB.
  - question: Has a user's daily data upload volume or file transfer count via messaging applications significantly exceeded their normal behavior?
    context: This question focuses on detecting deviations from an individual user's established data transfer patterns. Adversaries exfiltrating data over time will cause a user's daily upload volume or file count to spike. By baselining each user's typical activity and alerting when they exceed their own 99th percentile, analysts can identify anomalous behavior relative to the user, not just the entire organization.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: FOR each user, BASELINE daily sum of `orig_bytes` and count of `files.log` events for messaging apps over 30 days. FOR each new day, CALCULATE daily totals. ALERT if daily total upload volume or file count > 99th percentile of user's baseline.
  - question: Can a time series model detect anomalous spikes in a user's hourly data upload volume to messaging services?
    context: This question leverages a more sophisticated statistical method to account for regular patterns in user behavior, such as time-of-day or day-of-week habits. A time series model can predict the expected range of data transfer for any given hour. An alert is triggered only when the actual volume significantly surpasses this predicted range, reducing false positives from normally scheduled or periodic high-volume activities.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: FOR each user, TRAIN a time series model (e.g., ARIMA) on hourly aggregate `orig_bytes` to messaging services. DEPLOY model to predict expected volume and confidence bounds. ALERT if observed hourly volume significantly exceeds the predicted upper confidence bound.
  - question: Is a messaging application being launched by an unusual parent process or running with elevated system privileges?
    context: This question aims to detect when a messaging application is executed in a context that is abnormal for a user-facing application. Legitimate messaging apps are typically launched by the user's shell (`explorer.exe`) and run with user-level privileges. Launch by a system service (`svchost.exe`) or execution as `NT AUTHORITY\SYSTEM` is highly indicative of process injection or other malicious techniques used for persistence or privileged execution.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Endpoints
      - Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH process creation logs (Sysmon EID 1, WEF 4688) where `NewProcessName` is a messaging app. ALERT if `SubjectLogonId` is '0x3e7' (SYSTEM) OR if `ParentProcessName` is not 'explorer.exe'. EXCLUDE known-good parent processes (e.g., software deployment tools).
  - question: Has a messaging application been launched by a parent process that is statistically rare across the enterprise?
    context: This question uses enterprise-wide process execution data to identify rare and therefore suspicious execution chains. An adversary using a novel method, such as launching a messaging app from `wmic.exe`, would create a parent-child process pair that is extremely rare or has never been seen before, making it a high-fidelity indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Endpoints
      - Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: CREATE a frequency table of all (ParentProcessName, NewProcessName) pairs for messaging apps over a 30-day baseline. CALCULATE the probability of each pair. ALERT when a newly observed pair has a historical probability < 0.01%.
  - question: Can graph-based anomaly detection identify suspicious process execution chains that terminate in a messaging application?
    context: This question applies graph theory to model the complex relationships between processes. By representing normal system activity as a large graph of parent-child process relationships, machine learning algorithms can identify anomalous structures, such as an unusually long chain of processes leading to the launch of a messaging app, or a launch originating from a part of the process graph that it normally never interacts with.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Endpoints
      - Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: BUILD a directed graph of process execution chains from baseline data. TRAIN a graph-based anomaly detection model on this graph. DEPLOY model to analyze new execution chains involving messaging apps. ALERT on chains identified as structural anomalies.
  - question: Is a messaging application attempting to connect to sensitive internal services like databases, domain controllers, or file shares?
    context: This question is designed to detect lateral movement or internal data collection. A connection attempt from a messaging client to an internal database server, domain controller, or a file share port (like SMB port 445) is highly suspicious and could indicate an adversary is using the messaging client's network access to pivot within the network.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Sysmon Event ID 3
      - Internal Network Segments
      - Sensitive Data Enclaves (e.g., Database Zones, Developer Networks)
      - User Endpoints
    range: last 90 days
    queries:
      - pseudocode: SEARCH host-based network logs (Sysmon EID 3, WEF 5156) where `Image` is a messaging app. ALERT if `DestinationIp` is in a sensitive internal range (e.g., database subnets) AND `DestinationPort` is a sensitive port (e.g., 445, 1433, 3389) AND the connection is not on a pre-approved allow-list.
  - question: Is a messaging application connecting to a rare internal destination IP address or port?
    context: This question helps identify anomalous internal connections by baselining what is normal for each application. An adversary connecting to a specific, non-standard internal host would create a rare connection event, which can be flagged by comparing it against the established frequency distribution of normal internal destinations.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Sysmon Event ID 3
      - Internal Network Segments
      - Sensitive Data Enclaves (e.g., Database Zones, Developer Networks)
      - User Endpoints
    range: last 90 days
    queries:
      - pseudocode: FOR each messaging app, BASELINE all internal destination IPs and ports it connects to over 30 days. CALCULATE frequency distribution. ALERT on any new connection to an internal destination that is not in the top 99.9% of the distribution.
  - question: Is a messaging application on a workstation making an unusual connection to a host in a different functional network zone, like a database server zone?
    context: This question uses network traffic analysis and graph theory to enforce network segmentation policies dynamically. By clustering hosts into "communities" based on their typical communication patterns, it can automatically detect policy violations. A connection from a messaging client in the "workstation" community to a server in the "database" community is a clear violation and a strong indicator of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Sysmon Event ID 3
      - Internal Network Segments
      - Sensitive Data Enclaves (e.g., Database Zones, Developer Networks)
      - User Endpoints
    range: last 90 days
    queries:
      - pseudocode: BUILD a network graph of internal hosts and connections. APPLY a community detection algorithm to identify functional clusters (e.g., 'workstations', 'database servers'). ALERT if a messaging app process in one community (e.g., 'workstations') initiates a connection to a host in a different, sensitive community (e.g., 'database servers').