name: T1480: Execution Guardrails
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps identify when an adversary's payload is performing environment-specific checks to constrain its execution to an intended target. This behavior, known as execution guardrailing, involves malware checking for signs of analysis environments (like sandboxes or specific hardware), domain memberships, or user accounts before fully executing. Indicators include processes that terminate abnormally quickly, perform a high number of system enumeration checks upon creation, contain complex conditional logic in their command line, access a diverse and functionally unrelated set of system objects, or perform network "canary" checks before connecting to malicious infrastructure.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Is a process accessing known VM or sandbox artifacts and then terminating quickly?
  context: Malware often checks for specific registry keys or files (e.g., those related to VMware or VirtualBox) to determine if it is running within a sandbox or analysis environment. If such artifacts are found, the malware may terminate immediately to evade analysis. This query looks for this specific sequence of a process accessing a known sandbox artifact and then exiting within 5 seconds of its creation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Windows Event ID 4663
  - Zeek conn.log
  - All Endpoints (Workstations, Laptops)
  - Virtual Desktop Infrastructure (VDI) Environments
  - Security Analyst and Developer Workstations
  range: last 90 days
  queries:
  - pseudocode: SEARCH process creation (4688), object access (4663) to a predefined list of VM/sandbox artifacts, and process termination (4689) WHERE (termination_time - creation_time) < 5 seconds.
- question: Is a newly created process performing an anomalously high number of discovery activities shortly after launch?
  context: Legitimate processes typically have a predictable and limited set of actions upon startup. A process that immediately performs a large number of discovery activities, such as accessing many system objects or making numerous WMI queries, is highly suspect. This query establishes a baseline for normal process behavior and alerts when a process's discovery activity count exceeds the 95th percentile, especially if it terminates quickly thereafter.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Windows Event ID 4663
  - Zeek conn.log
  - All Endpoints (Workstations, Laptops)
  - Virtual Desktop Infrastructure (VDI) Environments
  - Security Analyst and Developer Workstations
  range: last 90 days
  queries:
  - pseudocode: FOR each process creation (4688), COUNT subsequent object accesses (4663) and WMI queries in the first 5 seconds. COMPARE count to the historical baseline for that process name. ALERT if the count exceeds the 95th percentile and the process terminates quickly.
- question: Can a machine learning model classify a process as 'guardrailing' based on its initial behavior?
  context: This question proposes using a machine learning model to detect guardrailing. By training a classifier on features from the first few seconds of a process's life—such as its parent process, command-line arguments, a count of system-querying API calls, and a flag for a short lifetime—it's possible to identify suspicious processes automatically, including novel threats that may evade signature-based rules.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Windows Event ID 4663
  - Zeek conn.log
  - All Endpoints (Workstations, Laptops)
  - Virtual Desktop Infrastructure (VDI) Environments
  - Security Analyst and Developer Workstations
  range: last 90 days
  queries:
  - pseudocode: EXTRACT features (e.g., parent process, command line, API call count, short lifetime) from initial process activity. INPUT features into a trained Random Forest model. ALERT if the model classifies the process as 'guardrailing'.
- question: Is a process being launched with a command line that combines system discovery tools and conditional logic?
  context: Adversaries frequently embed logic directly into command lines to check the environment before execution. This involves chaining system discovery tools (e.g., `hostname`, `whoami`) with conditional operators (e.g., `&&`, `||`) and string matching tools (e.g., `findstr`) to validate a target. This query uses a regular expression to detect these complex, logic-heavy command lines, which are a strong indicator of guardrailing.
  answer_sources:
  - Windows Event ID 4688
  - All Endpoints (Workstations, Laptops)
  - Domain Controllers
  - Application Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH process creation events (4688) WHERE the command line matches a regex pattern for discovery tools combined with conditional logic and string matching.
- question: Does a process have an unusually complex or high-entropy command line compared to its baseline?
  context: Obfuscated or complex command lines are often used to hide malicious intent. By calculating the Shannon entropy of a command-line string, we can quantify its randomness. A command line with an entropy value that is a statistical outlier (e.g., more than three standard deviations above the mean for that process name) suggests obfuscation or complex guardrailing logic.
  answer_sources:
  - Windows Event ID 4688
  - All Endpoints (Workstations, Laptops)
  - Domain Controllers
  - Application Servers
  range: last 90 days
  queries:
  - pseudocode: FOR each process creation (4688), CALCULATE the Shannon entropy of its command line. COMPARE the entropy to the historical baseline for that process name. ALERT if entropy is > (mean + 3 * standard_deviation).
- question: Can a natural language processing model classify command lines as malicious guardrail checks?
  context: This advanced approach leverages a fine-tuned NLP model to analyze the semantic meaning of command lines, rather than just their syntax. This allows for the detection of novel or cleverly obfuscated guardrailing commands that might be missed by regular expressions or simple entropy analysis, providing a more resilient detection method.
  answer_sources:
  - Windows Event ID 4688
  - All Endpoints (Workstations, Laptops)
  - Domain Controllers
  - Application Servers
  range: last 90 days
  queries:
  - pseudocode: INPUT the command-line string from a process creation event (4688) into a fine-tuned NLP transformer model. ALERT if the model classifies the command as a 'malicious guardrail check'.
- question: Are processes terminating in an unusually short time (e.g., less than 3 seconds)?
  context: A process that executes and terminates almost instantly is abnormal and can indicate that a malware's guardrail check has failed (it detected an analysis environment) or succeeded (it determined it was not on the intended target). This query identifies such processes by measuring the duration between creation and termination events, while using an allowlist to exclude known-good, short-lived processes.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Zeek conn.log
  - All Endpoints (Workstations, Laptops)
  - Network Egress Points
  - Honeypots
  range: last 90 days
  queries:
  - pseudocode: JOIN process creation (4688) with process termination (4689) on Process ID. ALERT if (termination_time - creation_time) < 3 seconds AND the process name is not on an allowlist.
- question: Is a specific process terminating much faster than it normally does?
  context: Rather than using a fixed time threshold, this query establishes a historical baseline for the execution duration of each unique process. An alert is generated when a process terminates with a duration that is a statistical outlier (e.g., below the 5th percentile of its historical runtimes). This contextual approach is effective at spotting anomalies, such as a typically long-running process like `winword.exe` exiting in under a second.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Zeek conn.log
  - All Endpoints (Workstations, Laptops)
  - Network Egress Points
  - Honeypots
  range: last 90 days
  queries:
  - pseudocode: FOR each process, calculate its execution duration. COMPARE the duration to the historical distribution for that process name. ALERT if the duration is below the 5th percentile.
- question: Is there a sudden spike in the number of short-lived processes on a specific host?
  context: A sudden, sharp increase in the overall count of short-lived processes on a single host can signal a malware outbreak where a payload is being repeatedly executed but is failing its guardrail checks. This query uses a time-series anomaly detection model to monitor the rate of short-lived processes per host, alerting on statistically significant spikes that rise above the host's normal baseline.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Zeek conn.log
  - All Endpoints (Workstations, Laptops)
  - Network Egress Points
  - Honeypots
  range: last 90 days
  queries:
  - pseudocode: AGGREGATE the count of short-lived (<3s) processes per host, per hour. INPUT the resulting time-series data into an anomaly detection model. ALERT on statistically significant spikes.
- question: Is a process rapidly accessing items from multiple, functionally unrelated system categories?
  context: Legitimate processes typically access a focused set of related system resources. In contrast, guardrailing malware often probes disparate parts of the system—such as hardware identifiers, security product registry keys, and domain information—in quick succession. This query categorizes system objects and alerts when a new process accesses objects from three or more distinct categories within a 15-second window.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - All Endpoints
  - Domain Controllers
  - Servers hosting security agents or management consoles
  range: last 90 days
  queries:
  - pseudocode: TRACK object accesses (4663) per process. Categorize objects (e.g., 'Hardware', 'Security-Product', 'VM-Artifact'). ALERT if a process accesses >= 3 categories within 15 seconds of creation.
- question: Is a process accessing an unusually diverse and random set of file paths or registry hives?
  context: This query applies entropy analysis to a process's file and registry access patterns. A high entropy score calculated on the set of parent directories and top-level registry hives accessed by a process indicates it is probing widely across the system rather than performing a focused task. This diffuse access pattern is characteristic of reconnaissance and guardrailing activities.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - All Endpoints
  - Domain Controllers
  - Servers hosting security agents or management consoles
  range: last 90 days
  queries:
  - pseudocode: FOR each process, collect the set of unique parent directories and registry hives accessed in the first 30 seconds. CALCULATE the Shannon entropy of this set. ALERT if the entropy is anomalously high compared to the baseline for that process name.
- question: Can a clustering algorithm identify processes with unique and anomalous system access patterns?
  context: This ML-based query uses a density-based clustering algorithm (like DBSCAN) to group processes by their access behavior. Normal processes with similar functions will form dense clusters. Guardrailing malware, with its unique pattern of probing various unrelated system areas, will not fit into any cluster and will be identified as an outlier or "noise," making this an effective method for discovering novel threats.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - All Endpoints
  - Domain Controllers
  - Servers hosting security agents or management consoles
  range: last 90 days
  queries:
  - pseudocode: CREATE a feature vector for each process based on the categories of objects it accessed. INPUT vectors into a DBSCAN clustering model. ALERT on any processes that are identified as noise/outliers.
- question: Is a host connecting to a known-good site and then immediately connecting to a known-bad site?
  context: This behavior is a classic "canary" check for internet connectivity. Malware first connects to a high-reputation site (e.g., google.com) to verify it can reach the internet. Upon success, it immediately attempts to connect to its actual command-and-control (C2) server, which is often a low-reputation or newly registered domain. This query looks for this specific two-step network sequence from a single host.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Windows Event ID 4688
  - Network Egress/Ingress Points
  - DNS Servers
  - Web Proxies
  - All Endpoints
  range: last 90 days
  queries:
  - pseudocode: CORRELATE events by source IP. ALERT if a DNS query to a high-reputation domain is followed by a successful connection, and then a DNS query to a low-reputation/threat-intel domain within 30 seconds.
- question: Is a host exhibiting a sudden, sharp drop in the reputation of domains it is contacting?
  context: This query quantifies the "canary check" by scoring the reputation of each domain a host contacts. A significant drop in reputation score between two consecutive connections (e.g., from 95 for a trusted site to 15 for a malicious one) is a strong indicator that an initial connectivity check was followed by a connection to a C2 server.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Windows Event ID 4688
  - Network Egress/Ingress Points
  - DNS Servers
  - Web Proxies
  - All Endpoints
  range: last 90 days
  queries:
  - pseudocode: FOR each host, score the reputation of each new domain contacted. CALCULATE the 'reputation drop' between consecutive domains. ALERT if the drop exceeds 80 points within a 60-second window.
- question: Is a host's network connection sequence statistically improbable compared to its normal behavior?
  context: This advanced query uses a sequence analysis model (like an HMM or LSTM) to learn the normal patterns of network connections for hosts and applications. The model is trained on legitimate sequences of (domain, port, protocol) tuples. Any new connection sequence that the model deems to have a very low probability is flagged as an anomaly, indicating a potential deviation caused by guardrailing or C2 activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Windows Event ID 4688
  - Network Egress/Ingress Points
  - DNS Servers
  - Web Proxies
  - All Endpoints
  range: last 90 days
  queries:
  - pseudocode: TRAIN a sequence model (e.g., LSTM) on normal network connection tuples. FEED new connection sequences into the model for analysis. ALERT if a sequence has an anomalously low probability score.