name: "T1613: Container and Resource Discovery"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook focuses on detecting adversarial attempts to discover container resources and environment details within platforms like Kubernetes and Docker. It addresses reconnaissance activities such as API calls from malicious IPs, execution of discovery-oriented commands (e.g., kubectl ps, docker images), high-volume API call anomalies, automated scanning of container management web UIs, enumeration of multiple resource types in a short period, and anomalously large data retrievals from sensitive endpoints like secrets or logs. The goal is to identify unauthorized exploration of the containerized environment."
type: "technique"
related:
  - "TA0007: Discovery"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are container API calls originating from IP addresses known to be malicious?"
    context: "This question aims to detect initial reconnaissance or exploitation attempts by correlating network traffic to container API endpoints (like Kubernetes API or Docker daemon) with known malicious hosts from threat intelligence feeds. A match indicates a high-confidence threat attempting to discover or interact with the container environment."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Threat Intelligence Feed"
      - "NAI: Kubernetes API server, Docker daemon hosts, internet gateway, reverse proxies, cloud provider control plane endpoints."
    range: "Last 90 days"
    queries:
      - "SEARCH Zeek logs (conn.log, http.log) WHERE destination_port IN (6443, 2375, 2376, 10250) | JOIN source_ip WITH threat_intelligence_feed ON ip_address | IF match_found, ALERT."
  - question: "Is there an anomalous spike in new, unique IP addresses connecting to container API ports, suggesting a reconnaissance scan?"
    context: "This question identifies potential large-scale scanning activity. Adversaries often use a distributed set of IP addresses to scan for exposed container APIs. A sudden increase in the rate of new source IPs connecting to these services, compared to a historical baseline, is a strong indicator of a coordinated reconnaissance effort."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Kubernetes API server, Docker daemon hosts, internet gateway, reverse proxies, cloud provider control plane endpoints."
    range: "Last 90 days"
    queries:
      - "SEARCH Zeek logs WHERE destination_port IN (container_api_ports) | AGGREGATE unique count of new source_ips per hour | COMPARE current_rate to 30-day baseline | IF current_rate > 95th_percentile_of_baseline, ALERT."
  - question: "Can we proactively identify high-risk connections to container APIs using machine learning, even from sources not yet on a threat feed?"
    context: "This question leverages a machine learning model to score the risk of an API connection based on various features like IP reputation, ASN, time of day, and origin. This provides a more nuanced detection capability than simple blocklists, allowing for the identification of suspicious activity from previously unknown sources before they are formally listed on a threat feed."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Kubernetes API server, Docker daemon hosts, internet gateway, reverse proxies, cloud provider control plane endpoints."
    range: "Last 90 days"
    queries:
      - "INPUT connection_features (ip_reputation, asn, time_of_day, country, is_new_ip) into ML_model | GET risk_score | IF risk_score > threshold, ALERT."
  - question: "Are container discovery commands (`kubectl`, `docker`) being executed by non-interactive or unauthorized processes?"
    context: "This question seeks to find instances where container command-line tools are used for discovery (e.g., `kubectl get`, `docker ps`) by an automated script or malware rather than a human administrator. Execution by a non-interactive parent process (i.e., not a standard command shell) is a strong indicator of malicious automation."
    answer_sources:
      - "Windows Event ID 4688"
      - "NAI: Administrative workstations, jump servers, CI/CD runners, container nodes."
    range: "Last 90 days"
    queries:
      - "SEARCH Windows Event Logs (ID 4688) WHERE process_name IN ('kubectl.exe', 'docker.exe') AND command_line CONTAINS ('get', 'describe', 'ps', 'images', 'nodes', 'cluster-info') AND parent_process_name NOT IN ('explorer.exe', 'cmd.exe', 'powershell.exe') | ALERT."
  - question: "Is there an unusually high variation or randomness in the command-line arguments for `kubectl` or `docker` commands, suggesting scripted enumeration?"
    context: "Legitimate administrative commands often have a predictable structure. Automated reconnaissance tools, however, may generate a wide variety of commands in a short period. This question uses Shannon entropy to measure the complexity and randomness of command-line arguments, with a sudden spike indicating a deviation from normal, patterned user behavior toward automated discovery."
    answer_sources:
      - "Windows Event ID 4688"
      - "NAI: Administrative workstations, jump servers, CI/CD runners, container nodes."
    range: "Last 90 days"
    queries:
      - "FOR each user/host, SEARCH Windows Event Logs (ID 4688) for 'kubectl.exe' or 'docker.exe' processes in 5-minute window | CALCULATE Shannon entropy of command_line_arguments | IF entropy > (baseline + 3 * std_dev), ALERT."
  - question: "Can we identify anomalous container-related command executions by clustering them based on their execution context?"
    context: "This question uses an unsupervised machine learning approach (DBSCAN) to group process executions into clusters of 'normal' activity based on features like parent process, user, and host. Outliers or small, isolated clusters that do not fit into the large, dense groups of routine administrative activity are flagged as anomalous and potentially malicious."
    answer_sources:
      - "Windows Event ID 4688"
      - "NAI: Administrative workstations, jump servers, CI/CD runners, container nodes."
    range: "Last 90 days"
    queries:
      - "INPUT process_features (parent_process, user, host, command_tokens) into DBSCAN_model | IDENTIFY outlier clusters | ALERT on processes in outlier clusters."
  - question: "Are connections to container API endpoints originating from unauthorized network segments?"
    context: "Access to sensitive container management APIs should be tightly controlled and restricted to specific administrative network zones. This question aims to detect policy violations by alerting on any connection attempt from a non-approved network segment (e.g., a general user VLAN or guest network), which is a strong indicator of unauthorized access or lateral movement."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Kubernetes API server, Docker daemon hosts, internal network firewalls and switches."
    range: "Last 90 days"
    queries:
      - "SEARCH Zeek logs (conn.log) WHERE destination_port IN (container_api_ports) AND source_ip_zone IS 'non-administrative' | ALERT."
  - question: "Is any single IP address generating an unusually high volume of connections to container APIs, indicative of a brute-force or enumeration attack?"
    context: "An adversary attempting to enumerate resources or brute-force credentials may generate a rapid succession of connections from a single source. This question establishes a baseline for normal connection rates per IP and alerts when that baseline is significantly exceeded, pointing to a potential targeted attack."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Kubernetes API server, Docker daemon hosts, internal network firewalls and switches."
    range: "Last 90 days"
    queries:
      - "FOR each source_ip, SEARCH Zeek logs (conn.log) | AGGREGATE connection count per 1-minute interval | IF count > 99th_percentile_of_baseline, ALERT."
  - question: "Is there a platform-wide spike in container API requests that deviates from normal, forecasted traffic patterns?"
    context: "This question provides a macro-level view of API activity. By using a time-series model (like ARIMA or Prophet) trained on historical data, it can predict the expected volume of API requests. A significant deviation from this forecast can indicate a large-scale, distributed reconnaissance event that might not be caught by single-IP or single-user thresholds."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Kubernetes API server, Docker daemon hosts, internal network firewalls and switches."
    range: "Last 90 days"
    queries:
      - "INPUT total_api_request_rate per minute into time_series_model (ARIMA/Prophet) | GET forecasted_range | IF observed_rate is outside forecasted_range, ALERT."
  - question: "Are container management web UIs being accessed by clients using User-Agent strings associated with automated scanning tools or scripting libraries?"
    context: "Legitimate users access web UIs through standard web browsers. Adversaries often use automated tools or scripts for reconnaissance, which leave distinct User-Agent strings (e.g., `curl`, `python-requests`, `Kube-hunter`). This question identifies these non-standard User-Agents to detect automated and potentially malicious interaction with management consoles."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Web servers hosting container management UIs (Kubernetes Dashboard, Rancher, OpenShift)."
    range: "Last 90 days"
    queries:
      - "SEARCH Zeek http logs WHERE destination is container_management_UI | IF user_agent MATCHES ('Kube-hunter', 'python-requests', 'curl', 'Go-http-client'), ALERT."
  - question: "Is a user session on a container management UI exhibiting behavior consistent with broad scanning, such as accessing many unique pages in a short time?"
    context: "A normal user typically navigates a web UI in a focused manner, revisiting pages and following a logical path. An automated scanner, in contrast, will often try to access a large number of unique pages quickly to map out the application. This question detects such behavior by calculating the ratio of unique URIs to total requests; a ratio close to 1.0 indicates scanning."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Web servers hosting container management UIs (Kubernetes Dashboard, Rancher, OpenShift)."
    range: "Last 90 days"
    queries:
      - "FOR each session (source_ip + user_agent), CALCULATE (unique_uri_count / total_request_count) | IF ratio > 98th_percentile_of_historical_sessions, ALERT."
  - question: "Is the sequence of pages visited by a user on a container management UI anomalous when compared to learned patterns of legitimate navigation?"
    context: "This question employs a sophisticated machine learning model (like an LSTM autoencoder) to learn the typical 'clickstreams' or navigation sequences of normal users. When a new user session follows a path that the model cannot accurately reconstruct (i.e., has a high reconstruction error), it is flagged as anomalous, indicating a navigation pattern that is likely automated or malicious."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "NAI: Web servers hosting container management UIs (Kubernetes Dashboard, Rancher, OpenShift)."
    range: "Last 90 days"
    queries:
      - "INPUT session_uri_sequence into LSTM_autoencoder_model | CALCULATE reconstruction_error | IF reconstruction_error > threshold, ALERT."
  - question: "Is a single source IP attempting to discover multiple sensitive resource types (like secrets, service accounts, and cluster roles) in a short time frame?"
    context: "An adversary performing reconnaissance will often query for a variety of high-value resource types to understand the environment and find sensitive information. This question uses a stateful rule to detect this specific pattern of behavior—requesting several distinct, sensitive resource types in a short window—which is a strong indicator of targeted discovery."
    answer_sources:
      - "Zeek http.log"
      - "Windows Event ID 4688"
      - "NAI: Kubernetes API server, container nodes (for pod-to-API traffic)."
    range: "Last 90 days"
    queries:
      - "FOR each source_ip, TRACK distinct sensitive resource types requested in 5-minute window (e.g., 'secrets', 'serviceaccounts', 'clusterroles') | IF count >= 3, ALERT."
  - question: "Is a source IP requesting an unusually diverse set of API resource types, suggesting broad enumeration?"
    context: "A high entropy score for the set of requested resource types (e.g., pods, nodes, deployments, secrets) indicates that a client is exploring a wide range of what the API offers, which is characteristic of reconnaissance, rather than the more focused requests typical of normal operations."
    answer_sources:
      - "Zeek http.log"
      - "Windows Event ID 4688"
      - "NAI: Kubernetes API server, container nodes (for pod-to-API traffic)."
    range: "Last 90 days"
    queries:
      - "FOR each source_ip, in 10-minute window, PARSE resource types from URI | CALCULATE Shannon entropy of the set of unique resource types | IF entropy > threshold OR entropy > (baseline + 3 * std_dev), ALERT."
  - question: "Can we use graph analysis to identify anomalous API requests that fall outside of normal user and service behavior clusters?"
    context: "This question uses graph theory to model the relationships between clients (IPs) and the resources they access (API paths). Normal activity forms dense clusters (communities). A client making unusual or exploratory requests will appear as a node that is weakly connected to these main communities, making it easy to spot as a potential anomaly or threat."
    answer_sources:
      - "Zeek http.log"
      - "Windows Event ID 4688"
      - "NAI: Kubernetes API server, container nodes (for pod-to-API traffic)."
    range: "Last 90 days"
    queries:
      - "CONSTRUCT bipartite graph of (source_ip, api_resource_path) | APPLY community detection algorithm (e.g., Louvain) | IDENTIFY nodes/edges with low community affiliation | ALERT."
  - question: "Is an unauthorized host attempting to list all secrets in the cluster?"
    context: "Listing all secrets across all namespaces is a highly privileged and dangerous operation, as it can expose credentials for the entire cluster. This question creates a high-fidelity alert for this specific, high-impact action when it originates from any source not explicitly authorized, indicating a likely compromise or severe misconfiguration."
    answer_sources:
      - "Zeek http.log"
      - "Zeek conn.log"
      - "NAI: Kubernetes API server (specifically endpoints for secrets, configmaps, and pod logs)."
    range: "Last 90 days"
    queries:
      - "SEARCH Zeek http logs WHERE http_uri == '/api/v1/secrets' AND http_method == 'GET' AND source_ip NOT IN admin_host_allowlist | ALERT with high priority."
  - question: "Is an API response for a sensitive resource, such as secrets or logs, anomalously large, suggesting bulk data exfiltration?"
    context: "An adversary who has gained access may attempt to exfiltrate large amounts of data at once, such as all logs from a pod or all data from a configmap. This question establishes a baseline for the normal response size for sensitive endpoints and alerts when a response is unusually large, which could indicate a bulk data theft attempt."
    answer_sources:
      - "Zeek http.log"
      - "Zeek conn.log"
      - "NAI: Kubernetes API server (specifically endpoints for secrets, configmaps, and pod logs)."
    range: "Last 90 days"
    queries:
      - "FOR requests to sensitive endpoints (e.g., /logs, /secrets), SEARCH Zeek conn logs for response_bytes | IF response_bytes > 99th_percentile_of_baseline_for_endpoint, ALERT."
  - question: "Can we use anomaly detection to identify any access to sensitive data endpoints that deviates from established legitimate access patterns?"
    context: "This question uses an unsupervised machine learning model (One-Class SVM or Isolation Forest) to create a profile of 'normal' access to sensitive data based on features like source IP, User-Agent, and time of day. Any access attempt that the model flags as an outlier is considered anomalous and potentially malicious, providing a powerful way to detect novel threats."
    answer_sources:
      - "Zeek http.log"
      - "Zeek conn.log"
      - "NAI: Kubernetes API server (specifically endpoints for secrets, configmaps, and pod logs)."
    range: "Last 90 days"
    queries:
      - "INPUT access_features (source_ip, user_agent, time_of_day, resource_path) into one_class_ML_model | IF model flags as outlier, ALERT."