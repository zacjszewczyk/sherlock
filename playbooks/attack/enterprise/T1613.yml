name: T1613: Container and Resource Discovery
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: Identifies adversary attempts to discover information about a target's container environment. This involves detecting interactions with container platform endpoints (like Kubernetes or Docker APIs) from known malicious IPs, anomalous sources, or unauthorized network segments. The playbook looks for the execution of discovery-oriented commands (e.g., `kubectl get`, `docker ps`) by non-interactive processes, unusual command-line patterns, and high volumes of API calls indicative of enumeration. It also covers automated scanning of container management web UIs, broad reconnaissance across multiple resource types (pods, secrets, deployments), and the exfiltration of sensitive data indicated by anomalously large API responses or access from unapproved tools.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known malicious IP addresses communicating with our container API endpoints?
    context: This question aims to detect initial reconnaissance or exploitation attempts from threat actors whose infrastructure is already known. Correlating network traffic with threat intelligence feeds provides a high-fidelity signal that a known malicious entity is interacting with critical container management services like the Kubernetes or Docker API.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Kubernetes API server, Docker daemon hosts, internet gateway, reverse proxies, cloud provider control plane endpoints.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek logs (conn, http) WHERE destination_port IN (6443, 2375, 2376, 10250) AND source_ip IN (threat_intelligence_feed) RETURN source_ip, destination_ip, destination_port, timestamp
  - question: Is there an anomalous spike in the number of new IP addresses attempting to connect to our container APIs?
    context: This question helps identify wide-net reconnaissance scans where an attacker uses a large pool of IP addresses to probe for exposed container APIs. A sudden increase in previously unseen IPs connecting to these sensitive ports, compared to a historical baseline, can indicate the beginning of a targeted campaign or an automated scanning tool at work.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Kubernetes API server, Docker daemon hosts, internet gateway, reverse proxies, cloud provider control plane endpoints.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CALCULATE hourly count of new source_ips connecting to container_api_ports. COMPARE current hourly count to 95th percentile of 30-day baseline. ALERT if current > baseline.
  - question: Can we proactively identify high-risk API connections from unknown sources using machine learning?
    context: This question leverages machine learning to move beyond simple threat intelligence matching. By scoring connections based on a combination of features like IP reputation, ASN, time of day, and origin, this approach can detect suspicious activity from new or uncatalogued malicious infrastructure that would otherwise be missed by signature-based detections.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Kubernetes API server, Docker daemon hosts, internet gateway, reverse proxies, cloud provider control plane endpoints.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each API connection, EXTRACT features (IP reputation, ASN, time of day, country, is_new_ip). SCORE connection using pre-trained ML model. ALERT if risk_score > threshold.
  - question: Are container discovery commands being executed by non-interactive or unauthorized processes?
    context: This question helps detect when container management tools like `kubectl` or `docker` are run by automated scripts or malware rather than a human administrator. Legitimate use typically occurs within an interactive shell (`explorer.exe`, `powershell.exe`). Execution by another process could indicate a compromised CI/CD pipeline, a malicious script running on a server, or a remote webshell.
    answer_sources:
      - Windows Event ID 4688
      - Administrative workstations, jump servers, CI/CD runners, container nodes.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH process creation logs (Event ID 4688) WHERE process_name IN ('kubectl.exe', 'docker.exe') AND command_line CONTAINS ('get', 'describe', 'ps', 'images', 'nodes', 'cluster-info') AND parent_process_name NOT IN ('explorer.exe', 'powershell.exe', 'cmd.exe') RETURN hostname, user, process_name, parent_process_name, command_line
  - question: Is a user or host executing an unusually complex or varied set of container discovery commands?
    context: This question seeks to identify automated enumeration scripts by analyzing the complexity of command-line arguments. Human-driven commands tend to have lower, more predictable complexity. A sudden spike in Shannon entropy suggests a script is rapidly iterating through many different commands or arguments, which is a strong indicator of reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Administrative workstations, jump servers, CI/CD runners, container nodes.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each user/host, CALCULATE Shannon entropy of kubectl/docker command arguments in a 5-min window. COMPARE entropy to user's historical baseline. ALERT if current entropy > (baseline + 3 * std_dev).
  - question: Can we identify anomalous container command executions that deviate from normal administrative behavior patterns?
    context: This question uses unsupervised machine learning to find outliers in process execution data. By clustering executions based on user, host, parent process, and command arguments, we can establish a baseline of 'normal' activity (large, dense clusters). Small, isolated clusters represent rare or unique combinations of these features, which are highly likely to be malicious or unauthorized discovery attempts.
    answer_sources:
      - Windows Event ID 4688
      - Administrative workstations, jump servers, CI/CD runners, container nodes.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CLUSTER process execution events using DBSCAN on features (parent_process, user, host, command_tokens). IDENTIFY and ALERT on small, isolated clusters as anomalous activity.
  - question: Are connections to our container APIs originating from unauthorized network segments?
    context: This question enforces network segmentation rules to detect policy violations. Access to critical container API endpoints should be restricted to specific administrative zones. Any connection attempt from a non-administrative network (like a user VLAN or guest Wi-Fi) is a serious security event and could indicate lateral movement or an internal adversary.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Kubernetes API server, Docker daemon hosts, internal network firewalls and switches.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek conn.log WHERE destination_port IN (container_api_ports) AND source_ip_zone IS NOT 'administrative_zone'. GENERATE high-severity alert.
  - question: Is any single IP address generating an unusually high volume of connections to the Kubernetes API?
    context: This question aims to detect brute-force or rapid enumeration attacks from a single source. By establishing a per-IP baseline for connection frequency, we can spot when a specific host dramatically increases its connection rate. Exceeding a high percentile (like the 99th) of its own historical behavior is a strong indicator of an automated attack tool.
    answer_sources:
      - Zeek conn.log
      - Kubernetes API server, Docker daemon hosts, internal network firewalls and switches.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_ip, COUNT connections to K8s API per minute. COMPARE count to the 99th percentile of that IP's historical baseline. ALERT if current_count > baseline_percentile.
  - question: Is there a platform-wide, anomalous spike in the overall container API request rate?
    context: This question provides a macro view of API activity to detect large-scale discovery events that might be distributed across multiple source IPs. A time-series model learns the normal rhythm of API requests (including daily or weekly cycles). A significant deviation from the forecasted volume suggests a coordinated or widespread event, such as a large-scale reconnaissance scan or a worm-like activity spreading through the environment.
    answer_sources:
      - Zeek http.log
      - Kubernetes API server, Docker daemon hosts, internal network firewalls and switches.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL total API request rate per minute using a time-series model (e.g., Prophet). TRAIN on 30+ days of data. ALERT if observed rate significantly deviates from the model's forecast.
  - question: Are clients accessing our container management web UIs using User-Agents associated with automated tools or scripts?
    context: This question focuses on identifying non-human interaction with web-based management consoles. While some automation is legitimate, many discovery tools (like `Kube-hunter`) and generic scripting libraries (`python-requests`, `curl`) have distinct User-Agent strings. Flagging sessions with these User-Agents helps separate legitimate administrative access from automated reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Web servers hosting container management UIs (Kubernetes Dashboard, Rancher, OpenShift).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek http.log for traffic to container UIs. ALERT if user_agent matches list of known tool/scripting agents (e.g., 'Kube-hunter', 'python-requests', 'curl').
  - question: Is any user session in a container web UI exhibiting behavior consistent with broad scanning rather than targeted interaction?
    context: This question differentiates between normal user behavior and automated scanning. A human user typically revisits pages and focuses on specific areas, resulting in a low ratio of unique pages to total requests. An automated scanner, however, often tries to hit every possible link once, leading to a unique URI-to-request ratio near 1.0. This metric effectively identifies wide-net discovery.
    answer_sources:
      - Zeek http.log
      - Web servers hosting container management UIs (Kubernetes Dashboard, Rancher, OpenShift).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each session (source_ip + user_agent), CALCULATE ratio of (unique_URIs / total_requests). ALERT if ratio exceeds 98th percentile of historical sessions.
  - question: Are there user sessions in the container web UI whose navigation patterns deviate from learned legitimate behavior?
    context: This question uses advanced sequence modeling to detect anomalous navigation flows. An LSTM autoencoder can learn the typical sequences of pages a legitimate user visits. A malicious actor or an automated tool will likely follow a different, less common path. When the model fails to accurately 'reconstruct' this new, unseen sequence, it generates a high error score, flagging the session as anomalous.
    answer_sources:
      - Zeek http.log
      - Web servers hosting container management UIs (Kubernetes Dashboard, Rancher, OpenShift).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN LSTM autoencoder on sequences of URI requests from historical user sessions. FOR new sessions, calculate reconstruction error. ALERT on sessions with high error scores.
  - question: Is a single IP address attempting to enumerate multiple sensitive resource types in a short time frame?
    context: This question identifies broad reconnaissance focused on high-value targets. An attacker seeking to understand the environment and find sensitive information will often query for `secrets`, `serviceaccounts`, and `clusterroles` in quick succession. A stateful rule that tracks these specific requests per IP over a short window is a high-fidelity indicator of targeted discovery.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4688
      - Kubernetes API server, container nodes (for pod-to-API traffic).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: IN a 5-minute window, COUNT distinct sensitive resource types (secrets, serviceaccounts, clusterroles) requested via GET/LIST by a single source_ip. ALERT if count >= 3.
  - question: Is any IP address exhibiting unusually diverse API resource requests, suggesting broad enumeration?
    context: This question uses information theory to quantify the breadth of an attacker's discovery. While a legitimate admin might focus on one or two resource types at a time (low entropy), an attacker performing reconnaissance will query many different types (pods, nodes, secrets, deployments, etc.), resulting in high entropy. This is a powerful statistical method for detecting scanning behavior.
    answer_sources:
      - Zeek http.log
      - Kubernetes API server, container nodes (for pod-to-API traffic).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_ip, in a 10-min window, CALCULATE Shannon entropy of requested resource types from URI. ALERT if entropy > 3.0 or exceeds 3 standard deviations above the IP's baseline.
  - question: Can we use graph analysis to identify IP addresses making anomalous API requests that don't fit into normal behavior clusters?
    context: This question models the relationships between users (IPs) and the resources they access. Normal administrative activity forms dense communities in the graph (e.g., a group of CI/CD servers all accessing 'pods' and 'deployments'). An attacker's activity, such as a single IP trying to access a wide and unusual range of resources, will appear as a weakly connected node or edge, making it stand out from the established communities of normal behavior.
    answer_sources:
      - Zeek http.log
      - Kubernetes API server, container nodes (for pod-to-API traffic).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BUILD bipartite graph of (source_ip, api_resource_path). APPLY community detection algorithm. IDENTIFY and ALERT on nodes/edges that are not part of a major community.
  - question: Is an unauthorized host attempting to list all secrets in the cluster?
    context: This question provides a high-fidelity, rule-based detection for one of the most critical discovery actions an attacker can take. A request to list all secrets (`/api/v1/secrets`) is rarely legitimate and extremely dangerous. By alerting on any such request that doesn't come from a pre-approved administrative host, we can quickly detect a significant threat.
    answer_sources:
      - Zeek http.log
      - Kubernetes API server (specifically endpoints for secrets, configmaps, and pod logs).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek http.log for GET requests to '/api/v1/secrets'. ALERT with high priority if source_ip is NOT in admin_allow_list.
  - question: Are there anomalously large data transfers in response to requests for sensitive resources like logs or secrets?
    context: This question aims to detect bulk data exfiltration disguised as a normal discovery query. While a request for a single secret or log entry might be normal, a response that is orders of magnitude larger than usual suggests the attacker has found a way to dump a large volume of data. Baselining response sizes per endpoint allows us to spot these outliers.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Kubernetes API server (specifically endpoints for secrets, configmaps, and pod logs).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR requests to sensitive endpoints (e.g., /logs, /secrets), MONITOR response_size. ESTABLISH per-endpoint baseline. ALERT if response_size > 99th percentile of its baseline.
  - question: Can we use machine learning to detect anomalous access patterns to sensitive data endpoints, even if the request itself looks legitimate?
    context: This question uses outlier detection models to build a comprehensive profile of 'normal' access to sensitive data. The model learns the typical combination of source IP, User-Agent, time of day, and specific resource path. Any access attempt that deviates significantly from this learned profile, even if it doesn't violate a specific rule, is flagged as a high-fidelity anomaly, catching sophisticated attackers who try to blend in.
    answer_sources:
      - Zeek http.log
      - Kubernetes API server (specifically endpoints for secrets, configmaps, and pod logs).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN one-class ML model (e.g., Isolation Forest) on features from legitimate access to sensitive endpoints. USE model to score new access attempts. ALERT on any attempt flagged as an outlier.