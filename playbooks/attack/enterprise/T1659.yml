name: T1659: Content Injection
id: c1b2a3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has gained initial access or is conducting command and control via content injection (T1659). This involves detecting malicious files injected into unencrypted download streams, browser processes spawning suspicious child processes from temporary internet files, anomalous sequences of file downloads followed by process execution and network connections, and unexpected changes in TLS certificates or HTTP response sizes which may indicate man-in-the-middle attacks. It also covers identifying C2 communications hidden in legitimate traffic, beaconing behavior, and data exfiltration through covert channels like DNS tunneling.
type: technique
related:
  - TA0001: Initial Access
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any files transferred over unencrypted protocols (HTTP, FTP) from an external source matched a known malicious hash signature?
    context: This question targets the direct injection of known malicious files into unencrypted data streams. A match against a threat intelligence feed provides a high-confidence indicator that an adversary has successfully delivered a malicious payload to an endpoint, constituting a potential initial access event.
    answer_sources:
      - Zeek file.log
      - Zeek conn.log
      - Zeek http.log
      - Internet Gateway
      - External-facing Web Proxies
      - ISP Demarcation Point
      - Cloud Access Security Brokers (CASBs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN file hashes from HTTP/FTP traffic against a threat intelligence feed.
          FILTER for connections from external IP addresses.
  - question: Are there any files being downloaded across the enterprise that are extremely rare compared to normal file distribution?
    context: This question aims to uncover novel or targeted malware that wouldn't be caught by signature-based methods. Content-injected malware is often not widespread. By identifying files with very low prevalence (e.g., seen on only one or a few hosts), we can flag potential malicious files for further analysis, even without a prior signature.
    answer_sources:
      - Zeek file.log
      - Internet Gateway
      - External-facing Web Proxies
      - ISP Demarcation Point
      - Cloud Access Security Brokers (CASBs)
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE prevalence for each file hash over 30 days.
          ALERT on hashes with prevalence in the bottom 1st percentile.
  - question: Can we predict if a downloaded file is malicious based on its network traffic characteristics?
    context: This question uses a machine learning model to proactively identify malicious files based on a combination of features like file type, size, source protocol, and domain reputation. This approach can detect new threats and sophisticated injection techniques that may evade simpler symbolic or statistical checks by learning the subtle characteristics of malicious downloads.
    answer_sources:
      - Zeek file.log
      - Zeek http.log
      - Internet Gateway
      - External-facing Web Proxies
      - ISP Demarcation Point
      - Cloud Access Security Brokers (CASBs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY a trained classification model to features from file and HTTP logs.
          FLAG files with a high malicious probability score (>0.9).
  - question: Have any web browsers spawned a command-line interpreter or scripting engine with a command line referencing a temporary internet or download directory?
    context: This is a classic indicator of a drive-by-compromise or the execution of a malicious downloaded payload. Legitimate browser behavior rarely involves directly launching a shell or script engine to execute code from a temporary cache folder. This action is a strong signal that injected web content or a malicious download has led to code execution on the host.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Terminal Servers
      - Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for process creation events (4688) where parent is a browser, child is a script/shell, and command line contains temporary/download paths.
  - question: Are there any rare or never-before-seen parent-child process relationships originating from a web browser?
    context: This question seeks to identify anomalous process execution chains that deviate from established baselines. A web browser spawning an unusual child process is highly suspicious. By flagging process pairs that are statistically rare or new to the environment, we can detect novel execution techniques used by adversaries following a content injection attack.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Terminal Servers
      - Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE frequency of all parent-child process pairs.
          ALERT when a browser-parent pair has a frequency below the 5th percentile or is new.
  - question: Are there any anomalous process creation events involving web browsers, based on features like command-line length and entropy?
    context: This question uses an unsupervised anomaly detection model to find suspicious process creations without relying on predefined rules. The model learns normal process behavior and can flag outliers, such as a browser spawning a process with an unusually long or obfuscated command line, which are common characteristics of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Terminal Servers
      - Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY an anomaly detection model to process creation event features.
          FLAG events with high anomaly scores, especially those with a browser parent.
  - question: Has a host exhibited a rapid sequence of: 1) downloading an executable/script, 2) running a process from that file, and 3) making a network connection to a new domain?
    context: This question correlates network and endpoint data to trace the full lifecycle of a common attack chain: payload delivery, execution, and C2 callback. Observing this entire sequence on a single host within a short time window provides a very high-confidence alert that a content injection attack was successful and has established a foothold.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek file.log
      - Zeek conn.log
      - User Workstations
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE (file download) -> (process create from file) -> (new outbound connection) events on a single host within a 60-second window.
  - question: Are there any statistically rare sequences of file download type, process name, and destination top-level domain (TLD) occurring on hosts?
    context: This question builds on the sequence detection concept by looking for anomalous patterns. While a legitimate software update might follow a download-execute-connect pattern, malware often uses unique file types, process names, or connects to unusual TLDs. By flagging sequences that are statistically rare across the environment, we can find these suspicious deviations from normal activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek file.log
      - Zeek conn.log
      - User Workstations
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL 3-event sequences (download-type -> process-name -> destination-tld).
          ALERT on sequences with frequency in the lowest 1st percentile.
  - question: Can a sequence analysis model detect anomalous chains of user endpoint activity (downloads, process creations, network connections)?
    context: This question employs sophisticated sequence modeling (like HMM or LSTM) to learn the 'normal grammar' of host activity. The model can then identify entire sequences of events that deviate from this learned normal behavior, even if individual events in the sequence are not suspicious on their own. This is powerful for detecting novel or complex attack chains.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek file.log
      - Zeek conn.log
      - User Workstations
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY a trained sequence analysis model (HMM/LSTM) to event chains.
          FLAG sequences with low probability scores.
  - question: Have any critical external domains presented a different or self-signed TLS certificate compared to what has been seen historically?
    context: This question aims to detect man-in-the-middle (MITM) attacks, which are a prerequisite for TLS content injection. An unexpected change in a domain's certificate issuer or a sudden switch to a self-signed certificate is a major red flag indicating that traffic may be intercepted and modified.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Internet Gateway
      - Internal DNS Servers
      - Web Proxies
      - Network TAPs at key aggregation points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CACHE the first seen TLS issuer/subject for critical domains.
          ALERT if a different issuer or a self-signed status is observed later.
  - question: Have the HTTP response body sizes for specific, regularly accessed URLs deviated significantly from their historical average?
    context: This question looks for a side effect of content injection: a change in content size. If an adversary injects code or a payload into a web page, the size of the HTTP response will likely change. By monitoring for statistically significant deviations from the norm, we can detect potential content injection even in encrypted traffic (if a proxy performs TLS inspection).
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Internet Gateway
      - Internal DNS Servers
      - Web Proxies
      - Network TAPs at key aggregation points
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE moving average and standard deviation of response body length per URL.
          ALERT if a new response is > 3 standard deviations from the average.
  - question: Has a change point detection algorithm identified an abrupt shift in the TLS certificate issuers used for a high-value domain?
    context: This question applies a more advanced statistical technique to the problem of detecting MITM attacks at scale. A change point detection algorithm can automatically identify the exact moment a systematic shift occurs in the stream of observed TLS certificates, providing a timely alert for a potential large-scale interception event that facilitates content injection.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Internet Gateway
      - Internal DNS Servers
      - Web Proxies
      - Network TAPs at key aggregation points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY a change point detection algorithm to the time series of TLS certificate issuers for a specific domain.
          ALERT on detected change points.
  - question: Does any outbound HTTP traffic to high-reputation domains contain signatures of known Command and Control (C2) frameworks?
    context: Adversaries often hide C2 traffic by sending it to legitimate, trusted domains (domain fronting) to bypass simple firewalls. This question uses deep packet inspection to look for known C2 patterns (e.g., from Cobalt Strike, Metasploit) within the URI or body of HTTP requests, revealing covert channels that masquerade as normal traffic.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - DNS Resolvers
      - Cloud Service Gateways
      - Web Application Firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY signature ruleset (Suricata/YARA) to HTTP request content.
          ALERT on matches for known C2 framework patterns.
  - question: Are there any rare TLS client fingerprints (JA3 hashes) being used by multiple internal hosts to connect to the same destination?
    context: Malware often uses custom TLS libraries, resulting in a unique or rare JA3 fingerprint. While a single host with a rare JA3 might be a custom application, multiple hosts using the same rare JA3 to talk to the same server is highly indicative of a malware C2 channel. This question helps uncover such shared, non-standard TLS clients.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Network Egress Points
      - DNS Resolvers
      - Cloud Service Gateways
      - Web Application Firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          IDENTIFY JA3 hashes that are rare globally but used by multiple internal hosts to a common destination.
  - question: Can a machine learning model distinguish and flag outbound HTTP requests that are likely part of a C2 channel?
    context: This question uses a supervised model trained on the characteristics of C2 traffic (e.g., URI length, entropy, parameter counts). This allows for the detection of C2 activity, including from unknown or zero-day frameworks, by learning the generic statistical properties that differentiate it from benign web browsing.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - DNS Resolvers
      - Cloud Service Gateways
      - Web Application Firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY a trained classifier to outbound HTTP requests.
          FLAG requests with a high C2 probability score.
  - question: Are there any outbound HTTP requests using non-standard, malware-known, or programmatic User-Agent strings?
    context: C2 implants often use hardcoded, non-standard, or missing User-Agent strings that differ from those of legitimate web browsers. Searching for these known-bad or anomalous User-Agents is a simple and effective way to identify automated C2 communications from infected hosts.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Web Proxies
      - Network Egress Points
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for User-Agent strings matching known malware, http libraries (e.g. curl, python-requests), or non-browser formats.
  - question: Are any hosts making HTTP requests where the URI query parameters have consistently very high or very low entropy?
    context: This question identifies two common C2 patterns. High entropy in URI parameters often indicates encoded or encrypted data being exfiltrated. Very low entropy suggests simple, repetitive check-in messages. By flagging traffic that deviates from the normal entropy range for a given destination, we can find these automated C2 communications.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Web Proxies
      - Network Egress Points
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE entropy of URI query parameters per source/destination pair.
          FLAG pairs with consistently high (>4.0) or low (<1.5) entropy.
  - question: Can we cluster HTTP requests to find small, dense groups of activity that do not correspond to known applications?
    context: This question uses unsupervised clustering to group similar HTTP requests based on their features. While large clusters will represent common applications and browsers, small, tight clusters of identical or near-identical requests from one or more hosts often represent the uniform, repetitive traffic generated by a C2 implant.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Web Proxies
      - Network Egress Points
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER HTTP requests using DBSCAN on features like User-Agent and URI structure.
          INVESTIGATE small, dense clusters.
  - question: Are any hosts exhibiting a 'heartbeat' pattern of network connections to a single destination, with highly consistent data sizes?
    context: This question looks for a simple but effective indicator of C2 beaconing. A host repeatedly 'calling home' for instructions will often result in a series of connections with nearly identical data transfer sizes (for the request and the 'no new tasks' response). Identifying this repetitive pattern is a strong sign of an automated C2 implant.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - VPN Concentrators
      - User Workstations
      - Firewall logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          IDENTIFY source/destination pairs with >=10 connections in 1 hour where data sizes are within 10% of each other.
  - question: Are any hosts communicating with an external destination with a highly regular, periodic interval (low jitter)?
    context: Automated C2 beacons are often configured to communicate at a fixed interval (e.g., every 5 minutes). This results in a connection pattern with very low deviation in the time between connections (low jitter). By calculating the standard deviation of inter-arrival times, we can statistically identify this machine-like periodicity and distinguish it from human-generated traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - VPN Concentrators
      - User Workstations
      - Firewall logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE standard deviation of inter-arrival times for source/destination pairs.
          FLAG pairs with very low standard deviation (<5s) and a mean interval >1 min.
  - question: Can a Fast Fourier Transform (FFT) on connection time series data reveal strong periodic signals indicative of C2 beaconing?
    context: This question applies signal processing techniques to network traffic analysis. An FFT can transform a time series of connection events into the frequency domain. A strong, sharp peak in the frequency domain is a powerful mathematical indicator of a periodic signal, making it an excellent method for detecting the regular 'heartbeat' of C2 beaconing, even in noisy traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - VPN Concentrators
      - User Workstations
      - Firewall logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY FFT to the time series of connection events per source/destination pair.
          FLAG pairs with a strong peak in the frequency domain.
  - question: Are there any DNS queries or HTTP URI parameters that contain long, Base64-encoded strings?
    context: Adversaries often exfiltrate data or pass commands through covert channels like DNS or HTTP requests. Encoding the data in Base64 is a common technique. This question uses a regular expression to specifically search for long Base64 strings in places they don't belong, such as DNS subdomains, which is a strong indicator of data tunneling.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal DNS Servers
      - Web Proxies
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          USE regex to find long Base64 strings in DNS queries and HTTP URI parameters.
  - question: Are there any DNS queries for subdomains that have unusually high character entropy?
    context: DNS tunneling and Domain Generation Algorithms (DGAs) often produce random-looking, high-entropy subdomain strings. Legitimate domain names have structure and much lower entropy. By calculating the Shannon entropy of queried subdomains and alerting on high values, we can effectively detect these types of C2 communication channels.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal DNS Servers
      - Web Proxies
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE Shannon entropy for all queried subdomains.
          ALERT on queries with entropy > 4.5.
  - question: Can a character-level machine learning model distinguish between legitimate domain names and those used for DGA or DNS tunneling?
    context: This question uses a more advanced approach to detecting malicious domains. A model, like a CNN, can be trained to recognize the character-level patterns of legitimate domains versus the randomness of DGAs or the structure of tunneled data. This allows for highly accurate detection of malicious DNS queries that might be missed by simpler statistical methods.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal DNS Servers
      - Web Proxies
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY a trained character-level classifier (e.g., CNN) to DNS queries.
          FLAG queries classified as malicious.