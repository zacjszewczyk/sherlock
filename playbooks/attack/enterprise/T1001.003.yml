name: T1001.003: Protocol or Service Impersonation
id: 4a8b1c2d-3e4f-4a56-b789-0123456789ab
description: This playbook helps identify adversary attempts to blend command and control (C2) traffic by impersonating legitimate protocols or services. It focuses on detecting connections to known malicious infrastructure, identifying traffic that matches specific C2 framework signatures (like JA3/JA3S hashes or User-Agents), spotting network connections originating from unusual or sensitive processes, detecting the highly periodic beaconing characteristic of automated C2, finding protocol-port mismatches (e.g., non-TLS traffic on port 443), and flagging connections with atypical data transfer ratios that suggest data exfiltration or C2 communication disguised as normal web or DNS traffic.
type: technique
related:
- TA0011: Command and Control
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are any internal hosts connecting to external IPs, domains, or ASNs that are on a known command and control threat intelligence feed?
  context: This question aims to find direct evidence of communication with malicious infrastructure by cross-referencing network connection logs with a high-confidence list of known C2 indicators. A match provides a strong signal of a potential compromise and is one of the most direct ways to detect known threats.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Internet Gateway
  - Egress Firewalls
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each connection in (conn.log, http.log, dns.log)
      JOIN destination_ip, host_header, or queried_domain WITH cti_feed
      ON connection.destination == cti.indicator
      ALERT on match
- question: Are a statistically unusual number of unique internal hosts connecting to the same new external IP or domain, suggesting a widespread C2 campaign?
  context: This question seeks to identify emerging C2 infrastructure not yet on threat intelligence feeds. A sudden, widespread "fan-out" of connections from many internal hosts to a single, previously unseen destination is a strong indicator of a coordinated, automated campaign that has recently been activated.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Internet Gateway
  - Egress Firewalls
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each 1-hour window
      IDENTIFY new destination IPs/domains not seen before
      COUNT unique source hosts connecting to each new destination
      CALCULATE 95th percentile of fan-out for all new destinations
      ALERT if a destination's fan-out > 95th percentile
- question: Does a network connection exhibit characteristics that a machine learning model, trained on network metadata and threat intelligence, classifies as malicious?
  context: This question uses a predictive model to identify C2 connections that may not match static indicators of compromise (IOCs). By learning the subtle characteristics of malicious traffic (e.g., connection states, byte patterns, protocol usage) from past examples, the model can flag emerging C2 servers or variants that would otherwise be missed by signature-based detection.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Internet Gateway
  - Egress Firewalls
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new network connection
      EXTRACT features (conn_state, orig_bytes, resp_bytes, protocol, CTI_rep)
      INPUT features into trained classification model
      ALERT if model output is 'malicious' with high confidence
- question: Is network traffic exhibiting JA3/JA3S hashes, User-Agent strings, or URI patterns that match a curated list of known C2 framework indicators?
  context: This question looks for specific, hardcoded artifacts left by known C2 frameworks like Cobalt Strike or Metasploit. These frameworks often have unique fingerprints in their TLS handshakes (JA3/JA3S) or HTTP headers, making them identifiable even if the C2 server IP or domain is unknown.
  answer_sources:
  - Zeek ssl.log
  - Zeek http.log
  - Zeek x509.log
  - Internet Gateway
  - Web Proxies
  - TLS-terminating Firewalls
  - Intrusion Detection/Prevention Systems (IDS/IPS)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each connection in (ssl.log, http.log)
      MATCH JA3/JA3S hash, User-Agent, or URI against known C2 indicator list
      CHECK x509.log for certificates with malicious subject/issuer patterns
      ALERT on any match
- question: Are there TLS certificates with unusually low-entropy subject/issuer fields or abnormally short validity periods, suggesting they are default or hastily created C2 certificates?
  context: Legitimate TLS certificates typically have structured, meaningful subject/issuer information and standard validity periods. Adversaries often use self-signed or default certificates with generic, random, or very short-lived attributes. This statistical analysis helps flag such outliers that are unlikely to be legitimate.
  answer_sources:
  - Zeek ssl.log
  - Zeek http.log
  - Zeek x509.log
  - Internet Gateway
  - Web Proxies
  - TLS-terminating Firewalls
  - Intrusion Detection/Prevention Systems (IDS/IPS)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each certificate in x509.log
      CALCULATE Shannon entropy of subject/issuer fields
      CALCULATE validity duration
      ALERT if entropy is in lowest 5th percentile OR duration is in lowest 5th percentile (e.g., < 30 days)
- question: Can network traffic be grouped into small, distinct clusters based on HTTP/TLS features, separating it from large clusters of normal browser traffic?
  context: This question uses unsupervised machine learning to find "needles in a haystack." Legitimate web traffic forms large, dense clusters of similar behavior. C2 traffic, being programmatic and different from user-driven browsing, will form its own small, isolated clusters. Identifying these outlier clusters can reveal previously unknown C2 channels.
  answer_sources:
  - Zeek ssl.log
  - Zeek http.log
  - Zeek x509.log
  - Internet Gateway
  - Web Proxies
  - TLS-terminating Firewalls
  - Intrusion Detection/Prevention Systems (IDS/IPS)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      EXTRACT feature vectors from http.log and ssl.log (UA entropy, URI structure, JA3)
      APPLY clustering algorithm (e.g., DBSCAN) to feature vectors
      ALERT on small, distinct clusters identified as anomalous
- question: Is a sensitive system process, which should not normally make network connections, observed making an outbound network connection?
  context: This question establishes a high-fidelity tripwire for suspicious activity. System-critical processes like lsass.exe or smss.exe have no legitimate reason to initiate outbound connections. Seeing such an event is a strong indicator of credential theft, process injection, or another advanced attack technique.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Sysmon Event ID 3
  - Zeek conn.log
  - Domain Controllers
  - Critical Application Servers
  - User Workstations
  - Endpoints of privileged users (e.g., developers, system administrators)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CREATE watchlist of sensitive processes (lsass.exe, csrss.exe, etc.)
      CORRELATE process creation events (EID 4688) with network connection events (Sysmon EID 3)
      ALERT if a process on the watchlist makes an outbound network connection
- question: Is a process initiating a network connection from an unusual parent process or with an anomalous command-line argument, based on historical activity?
  context: This question tries to detect malicious process execution chains that lead to network activity. By baselining normal process lineage and command-line patterns for networking processes, it can score and flag deviations that indicate a process has been spawned by an exploit (e.g., from a document) and is now establishing C2.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Sysmon Event ID 3
  - Zeek conn.log
  - Domain Controllers
  - Critical Application Servers
  - User Workstations
  - Endpoints of privileged users (e.g., developers, system administrators)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BUILD baseline of (parent_process, child_process, command_line) for networking events
      FOR each new networking event
      CALCULATE rarity score for the (parent, child, command_line) triplet
      ALERT if score > 98th percentile of historical scores
- question: Has a machine learning model, trained on normal process networking behavior for a specific host role, detected an anomalous networking event?
  context: This question uses anomaly detection to identify when a process behaves abnormally on a specific type of asset. A web server's normal network behavior is different from a developer's workstation. By training a model for each role, this approach can detect subtle deviations that signify a compromise with high precision.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Sysmon Event ID 3
  - Zeek conn.log
  - Domain Controllers
  - Critical Application Servers
  - User Workstations
  - Endpoints of privileged users (e.g., developers, system administrators)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each host role (e.g., web server, workstation)
      TRAIN one-class SVM or isolation forest on normal process network features
      FOR each new process network event
      ALERT if the model classifies the event as an anomaly/outlier
- question: Are there connections to a single external destination with a consistent time interval and uniform duration, matching known C2 beaconing profiles?
  context: This question looks for the classic "heartbeat" of automated C2 malware. Unlike human-driven traffic, C2 beacons are programmatic and highly regular. Detecting this machine-like periodicity is a reliable way to identify an infected host calling home, especially when the pattern matches the default settings of a known C2 framework.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - Network Taps/Sensors
  - Core network switch SPAN/TAP ports
  - Firewall Logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH for connections to a single destination
      WHERE time between connections is consistently within a narrow range (e.g., 60s +/- 5s)
      AND connection duration is consistent (e.g., < 1s)
      ALERT on match
- question: Is there a group of connections from a source to a destination that exhibits an abnormally low standard deviation in the time between connections (low jitter)?
  context: This question provides a more robust statistical method for detecting C2 beaconing. While a simple rule might miss slight variations, calculating the standard deviation (jitter) of the time between connections can reliably identify automated, periodic traffic, even if the interval is not a common one. A very low jitter is unnatural for human activity.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - Network Taps/Sensors
  - Core network switch SPAN/TAP ports
  - Firewall Logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each source-destination pair over 1-hour window
      CALCULATE mean and standard deviation (jitter) of time between connections
      ALERT if jitter is below a low threshold (e.g., < 2 seconds)
      AND mean interval is within a common C2 range (e.g., 5s to 600s)
- question: Does a time series analysis of connection events for a source-destination pair reveal an abnormally strong and sharp peak in its frequency spectrum?
  context: This is an advanced signal processing technique to find periodic behavior. By transforming the time series of connections into the frequency domain using a Fast Fourier Transform (FFT), a strong, sharp peak reveals a dominant, repeating frequency. This is a highly reliable mathematical indicator of automated beaconing that is difficult for an adversary to evade.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - Network Taps/Sensors
  - Core network switch SPAN/TAP ports
  - Firewall Logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each source-destination pair
      CREATE time series of connection events
      APPLY Fast Fourier Transform (FFT) to the time series
      USE anomaly detection model to find abnormally sharp peaks in frequency spectrum
      ALERT on detection of a strong periodic signal
- question: Is there a TCP connection on a well-known port (e.g., 443) that does not use the expected protocol, such as non-TLS data on 443, or is a protocol violation being reported?
  context: This question aims to detect adversaries tunneling non-standard C2 protocols over common ports to bypass firewall rules. For example, sending raw C2 data over port 443 instead of performing a proper TLS handshake. Network security monitors like Zeek are specifically designed to detect these protocol-port mismatches and will often generate a specific notice.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek weird.log
  - Internet Gateway
  - Internal Network Segments via Zeek sensors
  - DMZ
  - Network Security Monitoring (NSM) sensor locations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN conn.log and ssl.log on connection UID
      ALERT on any connection where conn.log port is 443 but no ssl.log entry exists
      ALSO, ALERT on any 'active_protocol_violation' notice in weird.log
- question: Is there a statistical anomaly in the rate of specific TLS errors, such as a sudden spike in self-signed certificate errors from a single host?
  context: This question establishes a baseline for normal TLS errors that occur in any environment and looks for significant deviations. A sudden surge in a particular error type (e.g., 'self-signed certificate') from one or more hosts could indicate that a malware campaign has been activated and is establishing C2 using improperly configured TLS.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek weird.log
  - Internet Gateway
  - Internal Network Segments via Zeek sensors
  - DMZ
  - Network Security Monitoring (NSM) sensor locations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      PROFILE historical hourly rate of each 'validation_status' in ssl.log
      CALCULATE mean and standard deviation for each error type
      ALERT if current hourly rate of an error exceeds (mean + 3 * std_dev)
- question: Has a machine learning model, trained on legitimate TLS handshake features, identified a new TLS handshake as a statistical outlier?
  context: This question seeks to detect custom C2 channels that try to mimic TLS but fail to do so perfectly. By training a model on the complex interplay of features in a legitimate TLS handshake (cipher suites, versions, extensions, etc.), it can spot anomalous handshakes that do not conform to any known legitimate client's behavior, suggesting a custom-coded malicious client.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek weird.log
  - Internet Gateway
  - Internal Network Segments via Zeek sensors
  - DMZ
  - Network Security Monitoring (NSM) sensor locations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN one-class SVM on feature vectors from legitimate TLS handshakes in ssl.log
      FOR each new TLS handshake
      FEED its feature vector into the trained model
      ALERT if the model classifies the handshake as an outlier/anomaly
- question: Is there a network connection with a highly imbalanced data ratio for its protocol, such as a large upload over DNS or a large upload in an HTTP GET request?
  context: This question identifies protocol abuse for data exfiltration or C2. Certain protocols have well-defined data flow patterns (e.g., DNS involves a small query and a small/medium response). A large upload in a DNS query or a large request body in an HTTP GET request violates these norms and is a strong sign of tunneling.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Internet Gateway
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ALERT on DNS query in dns.log with query_length > 255 bytes
      ALERT on HTTP session in http.log where method is GET and request_body_len > 1MB
- question: Does a connection's client/server byte ratio fall into an extreme percentile for its destination port's historical distribution?
  context: This question statistically defines normal data transfer patterns for each service port and flags significant deviations. For example, traffic on port 80 (HTTP) is typically download-heavy. A connection with an extremely high upload-to-download ratio would be a statistical outlier for that port and could represent C2 data being sent out.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Internet Gateway
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each port (80, 443, 53)
      CALCULATE historical distribution of ratio R = orig_bytes / (orig_bytes + resp_bytes)
      FOR each new connection
      CALCULATE R and ALERT if it is > 99th percentile for that port
- question: Does a connection's sent/received byte pair appear as a noise point when clustered with other connections on the same port?
  context: This question uses unsupervised machine learning to find anomalous data transfer patterns. Normal traffic on a given port (e.g., web browsing on 443) will form a large, dense cluster in a 2D plot of bytes sent vs. bytes received. C2 connections, with their potentially unique byte ratios, will not fit into this cluster and will be identified as outliers, or "noise."
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek dns.log
  - Internet Gateway
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each common port (80, 443, 53)
      APPLY DBSCAN clustering to the [log(orig_bytes), log(resp_bytes)] feature space
      ALERT on any connection identified as a noise point (outlier) by the algorithm