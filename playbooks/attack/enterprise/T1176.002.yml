name: T1176.002: IDE Extensions
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: The adversary may be maintaining persistence by compromising Integrated Development Environment (IDE) extensions. This can manifest in several ways: installation of extensions with malicious signatures or that communicate with known C2 infrastructure; IDEs spawning suspicious child processes with obfuscated commands; sideloading extensions from unapproved network sources; IDE processes accessing sensitive files like credential stores or SSH keys outside of normal project scopes; or network traffic from IDEs exhibiting C2 beaconing patterns like periodic heartbeats or anomalous data exfiltration volumes.
type: technique
related:
- TA0003: Persistence
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a newly created IDE extension file or a network connection from an IDE process associated with known malicious indicators?
  context: This question aims to detect known threats by cross-referencing file hashes and network indicators (IPs, domains) against threat intelligence feeds. A match provides a high-confidence signal that a malicious IDE extension has been installed or is actively communicating with command-and-control infrastructure.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Developer workstations, build servers, network egress points, threat intelligence platforms.
  range: last 90 days
  queries:
  - pseudocode: SEARCH file creation events in IDE extension paths -> HASH file -> COMPARE hash against threat intel list. SEARCH network logs from IDE processes -> EXTRACT destination IP/domain -> COMPARE against threat intel list.
- question: Is an IDE process communicating with a domain that appears anomalous based on its entropy or rarity within the enterprise?
  context: This question helps uncover unknown or novel command-and-control (C2) domains that are not yet on threat intelligence lists. Adversaries often use Domain Generation Algorithms (DGAs) which produce high-entropy domains, or private C2 servers that are rarely accessed. Flagging these statistical outliers helps identify suspicious connections for further investigation.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Developer workstations, build servers, network egress points, threat intelligence platforms.
  range: last 30 days
  queries:
  - pseudocode: FOR each domain in DNS logs from IDE processes -> CALCULATE Shannon entropy -> CALCULATE enterprise-wide access frequency over 30 days -> ALERT if entropy > 3.5 OR frequency is in 99th percentile of rarity.
- question: Can network connections from IDE processes be classified as malicious C2 activity using a machine learning model?
  context: This question leverages machine learning to build a sophisticated detection model that can identify malicious C2 traffic based on a combination of network features. By learning the characteristics of both benign and malicious connections, the model can flag suspicious activity with high confidence, even if the destination is not on a blocklist.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Developer workstations, build servers, network egress points, threat intelligence platforms.
  range: last 90 days
  queries:
  - pseudocode: TRAIN classifier on labeled network data (duration, bytes, proto, conn_state, reputation, JA3/S) from IDEs. DEPLOY model to score live connections -> ALERT if prediction is 'malicious' with confidence > 0.90.
- question: Has a known IDE process spawned a child process with suspicious command-line arguments indicative of obfuscation, remote access, or hidden execution?
  context: This question targets a common follow-on action where a compromised IDE extension executes malicious code. By monitoring for known IDEs spawning processes with high-risk command-line arguments (e.g., encoded PowerShell, network tools like curl/wget, hidden window flags), analysts can detect attempts to escalate privileges, download additional payloads, or execute commands covertly.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Developer workstations, virtual desktop infrastructure (VDI) used for development, build servers.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process creation events WHERE parent is IDE process -> ANALYZE command line with regex for patterns like 'powershell -enc', '-w hidden', 'IEX', 'curl', 'wget', 'nc.exe' -> ALERT on match.
- question: Is an IDE spawning a child process or using command-line arguments that are statistically rare or have unusually high entropy compared to a historical baseline?
  context: This question aims to find anomalous process execution that deviates from established normal behavior. By baselining typical parent-child process relationships and command-line structures, this method can flag rare events (e.g., an IDE spawning svchost.exe) or unusually complex commands (high entropy) that might indicate malicious activity not caught by simple pattern matching.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Developer workstations, virtual desktop infrastructure (VDI) used for development, build servers.
  range: last 30 days
  queries:
  - pseudocode: BASELINE normal child processes and command entropy for each IDE over 30 days. FOR new process creation -> CALCULATE z-score for parent-child rarity -> CALCULATE entropy of command line -> ALERT if z-score > 3 OR entropy > 95th percentile.
- question: Does a command line from a process spawned by an IDE register as an anomaly when compared to a machine learning model of normal activity?
  context: This question uses unsupervised machine learning to detect novel or obfuscated malicious commands without prior knowledge of specific patterns. The model learns what "normal" command-line arguments look like and can flag any significant deviation, making it effective against evolving attacker techniques that traditional signature-based methods might miss.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Developer workstations, virtual desktop infrastructure (VDI) used for development, build servers.
  range: last 90 days
  queries:
  - pseudocode: TRAIN anomaly detection model (e.g., isolation forest) on vectorized command-line arguments from IDE child processes. DEPLOY model to score new command lines -> ALERT if anomaly score exceeds threshold.
- question: Was an IDE extension installed from a non-allowlisted network source, or was it written to disk by a process other than the IDE itself?
  context: This question focuses on identifying unauthorized or "sideloaded" IDE extensions. Legitimate extensions are typically installed from official marketplaces via the IDE's own update mechanism. An extension being downloaded from an unknown domain or created by an unexpected process (like cmd.exe or powershell.exe) is a strong indicator of malicious activity.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Developer workstations, network egress points, internal software repositories.
  range: last 90 days
  queries:
  - pseudocode: SEARCH for file writes in extension paths -> CORRELATE with recent network connections -> ALERT if download source is not on allowlist. SEPARATELY, ALERT if parent process of file write is not a recognized IDE/updater.
- question: Did an IDE extension download originate from a source domain that is statistically rare across the enterprise?
  context: This question helps identify suspicious extension sources by focusing on rarity. While an attacker's domain might not be on a blocklist, it is unlikely to be a common source for file downloads across the organization. Flagging downloads from the least prevalent domains can surface sideloading or connections to private infrastructure used to distribute malicious extensions.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Developer workstations, network egress points, internal software repositories.
  range: last 90 days
  queries:
  - pseudocode: FOR each download to an extension directory -> IDENTIFY source domain -> CALCULATE enterprise-wide prevalence of domain over 90 days -> ALERT if domain prevalence is in bottom 5th percentile.
- question: Does the volume of data being downloaded to IDE extension directories show a sudden, anomalous spike according to a time-series model?
  context: This question is designed to detect large-scale or coordinated supply chain attacks where a malicious extension is pushed to many developers at once. A time-series model learns the normal rhythm of extension downloads and updates. A sudden, massive spike in data volume that breaks this pattern could indicate a widespread compromise event.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Developer workstations, network egress points, internal software repositories.
  range: last 90 days
  queries:
  - pseudocode: MODEL hourly download volume to extension directories using time-series analysis (e.g., Prophet). DEPLOY model to forecast expected volume -> ALERT if observed volume exceeds the 99% confidence interval.
- question: Has a process with an IDE ancestor accessed sensitive files or directories, such as credential stores, SSH keys, or system configuration files?
  context: This question provides a high-fidelity alert for credential and data theft. IDEs should generally operate within project folders. Access to sensitive directories like .ssh, .aws, browser credential databases, or critical system folders is highly anomalous and a strong indicator that a compromised extension is attempting to steal secrets or escalate privileges.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Developer workstations, servers hosting sensitive user profiles (e.g., file servers, domain controllers), code repositories.
  range: last 90 days
  queries:
  - pseudocode: SEARCH for file access events -> CHECK if process ancestry traces to an IDE -> CHECK if target file path is in a predefined list of sensitive locations (e.g., %USERPROFILE%\\.ssh\\, credential stores) -> ALERT on match.
- question: Is an IDE process accessing files in a directory path that is statistically dissimilar from the user's normal project directories?
  context: This question aims to detect when an IDE's activity moves outside its normal "project scope." By creating a baseline of typical directories a developer works in, it's possible to flag when an IDE suddenly accesses files in a completely unrelated location. This can detect a compromised extension exploring the file system for valuable data outside of the current project.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Developer workstations, servers hosting sensitive user profiles (e.g., file servers, domain controllers), code repositories.
  range: last 30 days
  queries:
  - pseudocode: BASELINE parent directories accessed by user's IDEs over 30 days. FOR each new file access -> CALCULATE Jaccard distance between new path and baseline set -> ALERT if distance > 0.8.
- question: Does a graph-based machine learning model identify an IDE's interaction with a file or network destination as an anomalous outlier?
  context: This question uses advanced graph analytics to model the entire ecosystem of development activity (processes, files, network). Normal behavior forms dense clusters in the graph. An anomalous event, such as an IDE process suddenly accessing a rarely-touched credential file, will appear as an outlier or a "weakly connected" node, making it detectable by clustering or anomaly detection algorithms applied to the graph.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 11 (FileCreate)
  - Developer workstations, servers hosting sensitive user profiles (e.g., file servers, domain controllers), code repositories.
  range: last 90 days
  queries:
  - pseudocode: BUILD graph of processes, files, network nodes. USE graph embeddings (node2vec) and clustering (DBSCAN) to identify normal activity clusters. FLAG nodes/edges classified as outliers/noise for investigation.
- question: Is a network connection from an IDE process communicating with a known malicious destination or exhibiting signs of DNS tunneling?
  context: This question seeks to identify command-and-control (C2) communications using known indicators and techniques. It checks for connections to blocklisted IPs/domains, which is a high-confidence indicator of compromise. It also looks for DNS tunneling, a common C2 technique where data is exfiltrated over DNS protocol to a non-standard port, bypassing some network firewalls.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 3 (NetworkConnect)
  - Developer workstations, network egress points (firewalls, proxies), DNS servers.
  range: last 90 days
  queries:
  - pseudocode: SEARCH network logs from IDE processes -> ALERT if destination is on threat intel blocklist. SEPARATELY, SEARCH for DNS traffic (service='dns') where destination port is NOT 53 -> ALERT on match.
- question: Does network traffic from an IDE process exhibit a periodic, "heartbeat" pattern, or is the volume of data sent unusually large compared to a historical baseline?
  context: This question targets two common characteristics of C2 channels: beaconing and data exfiltration. Malicious implants often "call home" at regular intervals (a low-variance heartbeat). They may also send large, anomalous amounts of data when exfiltrating files. By baselining normal network behavior, these statistical deviations can be identified and flagged for review.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 3 (NetworkConnect)
  - Developer workstations, network egress points (firewalls, proxies), DNS servers.
  range: last 30 days
  queries:
  - pseudocode: FOR each source-destination pair from an IDE -> CALCULATE std deviation of time between connections -> ALERT if std dev < 1.0s. SEPARATELY, BASELINE bytes sent per user's IDEs -> ALERT if new connection exceeds 99th percentile.
- question: Does a time-series decomposition model identify an unexplainable anomaly in the network traffic patterns originating from an IDE process?
  context: This question applies a machine learning model to dissect network traffic into its core components: the overall trend, seasonal patterns (e.g., daily work cycles), and a residual "noise" component. A sudden, large spike in the residual component represents an event that cannot be explained by normal trends or seasonality, making it a strong candidate for anomalous activity like C2 beaconing or data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Sysmon Event ID 1 (ProcessCreate)
  - Sysmon Event ID 3 (NetworkConnect)
  - Developer workstations, network egress points (firewalls, proxies), DNS servers.
  range: last 90 days
  queries:
  - pseudocode: DECOMPOSE time series of IDE network traffic (bytes/connections per minute) into trend, seasonal, and residual components. ALERT if the residual value exceeds 3 standard deviations from its mean.