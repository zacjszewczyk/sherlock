name: 'T1588.006: Vulnerabilities'
id: 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
description: |
  This playbook helps analysts determine if an adversary is acquiring information about vulnerabilities to support targeting. It focuses on detecting various forms of network scanning and probing activity, which are common precursors to exploitation. The playbook includes methods to identify connections from known malicious infrastructure, detect signatures of scanning tools in web traffic, identify anomalous horizontal and vertical scanning patterns, spot distributed scanning events that may follow a public vulnerability disclosure, and detect internal reconnaissance originating from compromised endpoints. By using a combination of symbolic rules, statistical analysis, and machine learning models, analysts can uncover attempts to find and verify exploitable vulnerabilities in the environment.
type: 'technique'
related:
  - 'TA0042: Resource Development'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: "Have any inbound connections originated from IP addresses on a high-confidence threat intelligence list of known scanners or C2 infrastructure?"
    context: |
      This question seeks to detect initial reconnaissance or probing by cross-referencing inbound connection source IPs with known malicious indicators. A match provides a strong signal of adversarial activity, and filtering out known benign scanners (e.g., from search engines or security partners) is crucial to minimize false positives.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet gateway traffic; SIEM platform hosting threat intelligence feeds."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          JOIN zeek_conn.source_ip WITH threat_intel.ip 
          WHERE zeek_conn.direction = 'inbound' 
          AND zeek_conn.source_ip NOT IN benign_allow_list;
  - question: "For any IP identified as potentially malicious, has it exhibited broad, non-specific port scanning activity in the last 24 hours?"
    context: |
      This question helps prioritize alerts by assessing the behavior of a suspicious IP. A high Shannon entropy score on destination ports indicates the IP is not targeting a specific service but is instead scanning a wide range of ports, which is a classic indicator of reconnaissance. This helps distinguish targeted attacks from broad, indiscriminate scanning.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet gateway traffic; SIEM platform hosting threat intelligence feeds."
    range: "Last 24 hours"
    queries:
      - technology: "Pseudocode"
        query: |
          FROM zeek_conn 
          WHERE source_ip = 'suspicious_ip' AND timestamp > (now - 24h) 
          CALCULATE shannon_entropy(destination_port)
          ALERT if entropy > 3.5;
  - question: "Can we use a machine learning model to predict if a new, previously unseen inbound connection is likely malicious based on its network traffic features?"
    context: |
      This question leverages machine learning to proactively identify suspicious connections that may not appear on static threat intelligence lists. By training a model on features from historical data, it can learn the characteristics of malicious traffic (e.g., connection duration, bytes transferred, ASN information) and flag new connections that fit this profile with a high degree of probability, enabling detection of novel threats.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet gateway traffic; SIEM platform hosting threat intelligence feeds."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each new inbound_connection
          EXTRACT features (protocol, duration, bytes, ASN, country)
          PREDICT probability = logistic_regression_model(features)
          ALERT if probability > 0.9;
  - question: "Are inbound web requests showing signs of vulnerability scanning through matching known tool signatures, directory traversal attempts, or specific exploit probes?"
    context: |
      This question uses signature-based detection on HTTP traffic to find clear indicators of scanning or exploitation attempts. By searching for common scanner user-agents (Nmap, Nikto), directory traversal patterns, or exploit strings (like for Log4Shell), analysts can quickly identify low-sophistication attacks and known malicious techniques.
    answer_sources:
      - "Zeek http.log"
      - "Web-facing application servers; Reverse proxies and load balancers where network traffic is inspected."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          SELECT * FROM zeek_http 
          WHERE user_agent MATCHES '(?i)nmap|nikto|acunetix' 
          OR uri MATCHES '../' 
          OR post_body MATCHES 'jndi:ldap';
  - question: "Is any single external IP address generating an anomalously high ratio of client-error (4xx) HTTP responses, suggesting forceful browsing or endpoint discovery?"
    context: |
      This question aims to identify attackers who are systematically searching for hidden or unlinked content by monitoring for an unusually high rate of errors like '404 Not Found'. A high 4xx error rate from a single IP is a strong statistical indicator of forceful browsing or API endpoint enumeration.
    answer_sources:
      - "Zeek http.log"
      - "Web-facing application servers; Reverse proxies and load balancers where network traffic is inspected."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each source_ip in zeek_http over 1-hour windows
          CALCULATE ratio = (count where status_code LIKE '4%') / (total count)
          ALERT if ratio > baseline_95th_percentile;
  - question: "Can a machine learning model detect novel or obfuscated scanning and injection patterns in web request URIs that signature-based rules might miss?"
    context: |
      This question proposes using advanced NLP or CNN models to analyze the structure and characters of URIs. This approach can identify sophisticated attacks that use encoding or obfuscation to bypass simple regex rules, allowing for the detection of novel and zero-day attack patterns that would otherwise go unnoticed.
    answer_sources:
      - "Zeek http.log"
      - "Web-facing application servers; Reverse proxies and load balancers where network traffic is inspected."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each request in zeek_http
          CLASSIFY uri_string with cnn_model
          ALERT if classification is 'malicious' with confidence > 0.95;
  - question: "Has any single external IP address connected to an excessive number of unique hosts (horizontal scan) or unique ports on a single host (vertical scan) within a short time frame?"
    context: |
      This question uses simple thresholding to detect the two primary forms of network scanning. A horizontal scan (one source to many destinations) suggests an attacker is looking for a specific vulnerable service across the network, while a vertical scan (one source to many ports on one destination) suggests an attempt to fingerprint the services running on a single host.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring DMZ and internet gateway traffic; SIEM platform used for data aggregation and analysis."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each source_ip over 5-minute windows
          COUNT unique destination_hosts and destination_ports
          ALERT if unique_hosts > 50 OR unique_ports > 25;
  - question: "Is any external source IP exhibiting statistically anomalous scanning behavior by contacting a number of distinct hosts or ports that significantly deviates from the established baseline?"
    context: |
      This question moves beyond fixed thresholds to a more dynamic, statistical approach. By establishing a baseline of normal activity, it can flag source IPs whose connection patterns are a significant statistical outlier (e.g., more than 3 standard deviations from the mean). This method is more resilient to slow scans and can adapt to changing network traffic patterns.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring DMZ and internet gateway traffic; SIEM platform used for data aggregation and analysis."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each source_ip over 15-minute windows
          CALCULATE distinct_host_count and distinct_port_count
          ALERT if count > (hourly_mean + 3 * hourly_std_dev);
  - question: "Using clustering algorithms, can we identify external source IPs that behave as outliers or form sparse clusters, indicating they are not part of legitimate, dense traffic patterns and are likely scanners?"
    context: |
      This question applies unsupervised machine learning to identify scanners. Legitimate clients typically form dense clusters of activity (e.g., many users accessing a web server). Scanners, which connect broadly and shallowly, will not fit into these clusters and will be identified as noise or outliers by algorithms like DBSCAN, providing a powerful way to find anomalous actors.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring DMZ and internet gateway traffic; SIEM platform used for data aggregation and analysis."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          INPUT connection_tuples (source_ip, dest_ip, dest_port) over 30 mins
          RUN DBSCAN clustering algorithm
          IDENTIFY source_ips classified as noise_points;
  - question: "Following the public disclosure of a new vulnerability, are we observing connection attempts to the affected service/port from new IP addresses not seen in the last 30 days?"
    context: |
      This question focuses on detecting opportunistic, mass exploitation attempts that often follow the announcement of a critical vulnerability. By correlating vulnerability intelligence (like the CISA KEV catalog) with network traffic, security teams can create targeted, temporary alerts to watch for probes against a newly vulnerable service from unknown sources.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet-facing services (web, email, VPN); SIEM platform for time-series analysis and correlation with vulnerability intelligence."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          WHEN new_vuln for 'service_port' is announced
          ALERT on connection to 'service_port' 
          WHERE source_ip was not seen in previous 30 days;
  - question: "Has any critical internet-facing service experienced a sudden, statistically significant spike in the number of unique source IPs attempting to connect, suggesting a distributed scanning event?"
    context: |
      This question helps detect distributed scanning, where an adversary uses many different source IPs to evade simple IP-based blocking. By monitoring the time series of unique source IPs connecting to a specific port, a sudden spike that exceeds a statistical threshold (e.g., a 4-sigma event) can indicate a coordinated, large-scale reconnaissance effort.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet-facing services (web, email, VPN); SIEM platform for time-series analysis and correlation with vulnerability intelligence."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each critical_port, create time_series of unique_source_ip_count per hour
          CALCULATE 24h_moving_avg and 24h_std_dev
          ALERT when current_hour_count > (moving_avg + 4 * std_dev);
  - question: "Does the observed traffic volume (in unique source IPs) for a critical service port significantly deviate from what a time-series forecasting model predicted, indicating an anomalous event possibly tied to mass exploitation?"
    context: |
      This question uses more sophisticated time-series modeling (like ARIMA or Prophet) to predict expected traffic volumes, accounting for seasonality (e.g., time of day, day of week). An alert is generated when the actual traffic significantly exceeds the model's forecast, providing a high-fidelity signal of an anomalous event that simple statistical methods might miss.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet-facing services (web, email, VPN); SIEM platform for time-series analysis and correlation with vulnerability intelligence."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          TRAIN time_series_model on historical unique_ip_counts for critical_port
          FORECAST expected_count for current hour
          ALERT if observed_count is significantly outside forecast_confidence_interval;
  - question: "Has a known network scanning tool been executed on a non-administrative host, or has PowerShell been used for network reconnaissance cmdlets?"
    context: |
      This question shifts focus from the network perimeter to internal activity, aiming to detect post-compromise reconnaissance. It looks for the execution of common scanning tools (nmap, masscan) or the use of built-in tools like PowerShell for network discovery on endpoints where such activity is not authorized, such as standard user workstations.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Event ID 4104"
      - "Zeek conn.log"
      - "Endpoint Detection and Response (EDR) agents on workstations and servers; Network sensors monitoring internal (east-west) traffic segments; Domain Controllers."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          ALERT on process_creation_event (EID 4688)
          WHERE process_name IN ('nmap.exe', 'masscan.exe')
          AND host NOT IN security_asset_group;
  - question: "Has any internal host suddenly started contacting a number of unique internal destination IPs or ports that is statistically anomalous compared to its own established baseline behavior?"
    context: |
      This question establishes a behavioral baseline for each individual host on the internal network. It then looks for deviations from this norm, such as a workstation that normally contacts 5 other hosts per day suddenly contacting 50. This self-adaptive statistical method can effectively detect internal scanning activity without needing predefined tool signatures.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Event ID 4104"
      - "Zeek conn.log"
      - "Endpoint Detection and Response (EDR) agents on workstations and servers; Network sensors monitoring internal (east-west) traffic segments; Domain Controllers."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          FOR each internal_host, establish baseline of unique_dest_ips_per_hour using IQR
          CALCULATE upper_fence = Q3 + 1.5 * IQR
          ALERT if current_hour_count > upper_fence;
  - question: "Are we observing the creation of rare or unusual communication pathways on the internal network graph, such as a workstation connecting to a sensitive server port it has never contacted before?"
    context: |
      This question models the entire internal network as a graph of communications. By applying graph-based anomaly detection, it can identify when new, unusual connections (edges) appear that violate the established communication patterns. For example, a connection from a marketing laptop to a database administration port would be a high-rarity, suspicious event.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Event ID 4104"
      - "Zeek conn.log"
      - "Endpoint Detection and Response (EDR) agents on workstations and servers; Network sensors monitoring internal (east-west) traffic segments; Domain Controllers."
    range: "Last 90 days"
    queries:
      - technology: "Pseudocode"
        query: |
          MODEL internal network as a host communication graph
          FOR each new connection (edge)
          CALCULATE rarity_score based on historical graph
          ALERT if rarity_score is high;