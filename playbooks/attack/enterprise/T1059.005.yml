name: T1059.005: Visual Basic
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook is designed to help analysts determine if an adversary is
  leveraging Visual Basic (e.g., VBScript) for code execution. It provides investigative
  steps to detect malicious script activity by analyzing various indicators. These
  include Windows Script Host processes (wscript.exe, cscript.exe) initiating outbound
  network connections to known malicious C2 servers or statistically anomalous domains;
  executing with suspicious command-line arguments (high entropy, Base64, specific
  keywords); being spawned as a child process of Microsoft Office applications; being
  written to and executed from unusual directories; and the loading of the 'vbscript.dll'
  module by non-standard processes.
type: technique
related:
- TA0002: Execution
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a Windows Script Host process making a network connection to a known
    malicious destination?
  context: This question aims to identify direct command-and-control (C2) communication
    or malware downloads initiated by a Visual Basic script. Adversaries often use
    VBScripts to establish persistence or fetch second-stage payloads. Correlating
    script host execution with network connections to destinations on a threat intelligence
    feed provides a high-confidence indicator of compromise.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 5156
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Application Servers
  - Network Egress Points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN process_events (Sysmon1) with network_events (Sysmon3) on ProcessGuid.
      WHERE process_image in ('wscript.exe', 'cscript.exe') and destination_ip/hostname
      in C2_feed. ALERT.
- question: Is a Visual Basic script communicating with a rare or algorithmically
    generated domain (DGA)?
  context: This question helps detect sophisticated C2 channels that use Domain Generation
    Algorithms (DGAs) to evade static blocklists. By analyzing the statistical properties
    of domains contacted by script hosts, we can uncover previously unknown malicious
    infrastructure. A domain that is both rarely seen across the enterprise (low prevalence)
    and has a random-looking structure (high entropy) is highly suspicious.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 5156
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Application Servers
  - Network Egress Points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FIND connections from hosts with recent wscript/cscript execution. CALCULATE
      domain prevalence and entropy. ALERT if prevalence < 5th_percentile AND entropy
      > 95th_percentile.
- question: Can a machine learning model classify a network connection from a script
    host as malicious?
  context: This leverages a trained classification model to score network connections
    from script hosts based on features like port, protocol, data volume, and domain
    reputation. This helps identify novel or complex threats that may not match simple
    rules or statistical outliers. A high confidence score indicates a likely malicious
    connection.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 5156
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Application Servers
  - Network Egress Points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each network_connection from wscript/cscript, SCORE with ML_model(features).
      ALERT if score > 0.90.
- question: Is a Windows Script Host process being executed with command-line arguments
    containing suspicious keywords or flags?
  context: Adversaries embed commands directly into the script host's command line.
    This question looks for specific patterns like batch mode flags ('//B'), COM
    object instantiation ('CreateObject'), or code for downloading payloads ('MSXML2.XMLHTTP'),
    which are common in malicious VBScripts.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Web Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_events WHERE process_image in ('wscript.exe', 'cscript.exe')
      and command_line MATCHES regex_patterns_for_flags_or_keywords. ALERT.
- question: Does the command line of a script host execution exhibit unusually high
    entropy or length?
  context: Obfuscated or embedded scripts often result in command lines that are
    significantly longer or more random (higher entropy) than benign ones. This question
    establishes a baseline for command-line length and entropy to detect outliers
    indicative of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Web Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each wscript/cscript process_event, CALCULATE entropy and length of
      command_line. COMPARE to baseline. ALERT if entropy > 95th_percentile OR length
      > (mean + 3*stdev).
- question: Can a machine learning model classify a script host's command line as
    malicious?
  context: This uses a Natural Language Processing (NLP) model to analyze the text
    of the command line. This approach can identify complex malicious patterns beyond
    simple keywords or statistical measures, providing a more robust detection method
    for obfuscated commands.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Web Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each wscript/cscript process_event, SCORE command_line with NLP_model.
      ALERT if score > 0.85.
- question: Has a Microsoft Office application spawned a Windows Script Host process?
  context: This is a classic indicator of a malicious macro executing. Legitimate
    workflows rarely involve an Office application directly launching a script host.
    Detecting this parent-child relationship is a high-fidelity signal of an initial
    compromise attempt, often from a phishing document.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Email Gateways
  - File Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_events WHERE parent_image in (office_apps) and process_image
      in ('wscript.exe', 'cscript.exe'). ALERT.
- question: Is the spawning of a script host by an Office application a new or rare
    behavior for a specific user or host?
  context: This question refines detection by baselining behavior per user or host.
    While an Office App spawning a Script Host is almost always malicious, alerting
    on the first occurrence for a user or a low absolute count (e.g., >1 in 24 hours)
    can help prioritize alerts and identify targeted attacks.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Email Gateways
  - File Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each 'Office -> Script Host' event, CHECK historical baseline for
      user/host. ALERT if first_time_occurrence OR count > threshold.
- question: Does an anomaly detection model flag the process chain of an Office app
    spawning a script host as a high-scoring anomaly?
  context: This uses a machine learning model trained on normal process creation
    sequences (process trees). A malicious sequence like 'winword.exe -> wscript.exe'
    will deviate significantly from the learned normal behavior and be flagged as
    a high-scoring anomaly, providing an automated way to detect this threat.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Email Gateways
  - File Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each process_creation_event, SCORE process_tree with anomaly_model.
      ALERT if score is high for 'Office -> Script Host' sequence.
- question: Was a new VBScript file (.vbs, .vbe) written to a user-writable directory
    and executed shortly after?
  context: Adversaries often drop a script file to disk (e.g., in %TEMP% or %APPDATA%)
    and then immediately execute it. This "write-then-execute" behavior is highly
    suspicious. Correlating the file creation event with the process creation event
    within a short time window is a strong indicator of malicious payload delivery.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Temporary File Directories
  - User Profile Directories
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN file_create_events (Sysmon11) with process_create_events (Sysmon1).
      WHERE file_name ends with ('.vbs', '.vbe') AND process_create_time < (file_create_time
      + 2_minutes). ALERT.
- question: Is a VBScript being executed from an unusual or rare directory?
  context: Benign scripts are typically run from specific, predictable locations.
    Malicious scripts are often dropped in temporary or user-specific directories.
    By baselining common execution directories, we can alert when a script runs from
    a statistically rare location, indicating a likely threat.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Temporary File Directories
  - User Profile Directories
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each wscript/cscript execution, GET parent directory. CALCULATE frequency
      of all parent directories over 30 days. ALERT if execution_directory_frequency
      < 1st_percentile.
- question: Does a sequence analysis model consider the chain of events leading to
    a VBScript execution to be anomalous?
  context: This question uses a model (like a Hidden Markov Model) to understand
    normal sequences of system events. A malicious sequence, such as an email client
    writing a VBS file which is then executed, will have a very low probability under
    the model of normal behavior, thus triggering an alert.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Temporary File Directories
  - User Profile Directories
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL event sequences over time. FOR new sequence '(outlook) -> (file_create
      .vbs) -> (process_create wscript)', CALCULATE probability. ALERT if probability
      is very low.
- question: Is the 'vbscript.dll' module being loaded by a process not on the standard
    allow-list?
  context: The 'vbscript.dll' contains the engine for executing VBScript. It is normally
    loaded by expected script hosts. When an unexpected process loads this DLL, it
    indicates an adversary may be using a custom script interpreter or in-memory
    execution to evade detection.
  answer_sources:
  - Sysmon Event ID 7
  - User Workstations
  - Application Servers
  - System32 Directory
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH image_load_events (Sysmon7) WHERE loaded_image ends with 'vbscript.dll'.
      ALERT if loading_process_image NOT IN (allow_list).
- question: Is a new or rare process loading the 'vbscript.dll' module?
  context: This question uses historical data to identify anomalous behavior. By creating
    a baseline of which processes normally load 'vbscript.dll', we can automatically
    detect when a new or uncommon process loads it. This is a strong indicator of
    a custom or hijacked process being used to run VBScript code.
  answer_sources:
  - Sysmon Event ID 7
  - User Workstations
  - Application Servers
  - System32 Directory
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each 'vbscript.dll' load event, CHECK historical baseline of loading
      processes. ALERT if loading_process is new or rare (<1% of endpoints).
- question: Is a 'vbscript.dll' load event identified as an outlier by a clustering
    algorithm?
  context: This approach uses unsupervised machine learning to group normal DLL load
    events into clusters. A malicious 'vbscript.dll' load by an unusual process will
    not fit into any of these normal clusters and will be classified as an outlier
    or "noise," flagging it for investigation.
  answer_sources:
  - Sysmon Event ID 7
  - User Workstations
  - Application Servers
  - System32 Directory
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER all image_load_events based on features (process, parent, user).
      FOR 'vbscript.dll' loads, ALERT if event is classified as an outlier/noise.