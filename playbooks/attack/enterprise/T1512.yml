name: T1512: Video Capture
id: f4d2f8e1-4b1e-4a8d-98f5-9a6c7e2c8b0a
description: This playbook aims to detect if an adversary is using a compromised mobile device's camera for video or image collection. This involves identifying applications with suspicious camera permissions that are not on approved lists or behave anomalously for their category. It also looks for signs of data exfiltration, such as significant spikes in outbound network traffic correlated with video/image file transfers to malicious or low-reputation destinations. Finally, it detects covert camera activation by monitoring for camera API calls made by applications running in the background or without recent user interaction.
type: technique
related:
  - TA0035: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an application with camera permissions installed that is not on the corporate allow-list?
    context: This question helps identify unauthorized or potentially malicious applications that have been granted access to the device's camera. Applications that are not on the approved corporate allow-list or signed by a trusted developer pose a significant risk, as they could be used to covertly capture sensitive visual information.
    answer_sources:
      - Mobile Device Management (MDM) application inventory logs
      - App vetting platform scan results
      - Managed corporate mobile devices
      - Corporate application store
      - Mobile Application Management (MAM) console
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          apps = SEARCH mdm_logs FOR (permission = "android.permission.CAMERA" OR permission = "NSCameraUsageDescription")
          unapproved_apps = FILTER apps WHERE (app_name NOT IN corporate_app_allowlist OR developer_signature NOT IN trusted_developer_list)
          RETURN unapproved_apps
  - question: Has an application been installed that requests camera permissions in a category where such access is statistically rare?
    context: This question seeks to identify outlier applications whose behavior deviates from their peers. A calculator app requesting camera access is highly unusual and suspicious. By identifying applications that request permissions uncommon for their functional category (e.g., in the bottom 5th percentile of prevalence), we can flag potential spyware or malware masquerading as a legitimate app.
    answer_sources:
      - Mobile Device Management (MDM) application inventory logs
      - App vetting platform scan results
      - Managed corporate mobile devices
      - Corporate application store
      - Mobile Application Management (MAM) console
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          app_categories = GROUP mdm_logs BY app_category
          category_stats = CALCULATE prevalence of camera_permission FOR EACH category in app_categories
          rare_permission_apps = SEARCH mdm_logs WHERE has_camera_permission AND camera_permission_prevalence_for_category < 5th_percentile
          RETURN rare_permission_apps
  - question: Has a machine learning model identified an installed application as potentially malicious based on its attributes and requested permissions?
    context: This question leverages machine learning to automate the detection of malicious applications at scale. By training a model on features like permissions, developer reputation, and app store presence, it can score new and updated applications. A high-malice score (e.g., >0.85) serves as a strong, data-driven signal that the application warrants immediate investigation and potential reverse engineering to confirm its intent.
    answer_sources:
      - Mobile Device Management (MDM) application inventory logs
      - App vetting platform scan results
      - Managed corporate mobile devices
      - Corporate application store
      - Mobile Application Management (MAM) console
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          app_features = EXTRACT {permissions, category, developer_score, etc.} FROM mdm_logs
          malice_score = RUN classification_model ON app_features
          high_confidence_malware = FILTER apps WHERE malice_score > 0.85
          RETURN high_confidence_malware
  - question: Is a mobile device sending video or image files to a known malicious command-and-control (C2) server?
    context: This question aims to find direct evidence of data exfiltration involving captured media. A connection from a mobile device to a destination on a threat intelligence list, combined with a large data upload (originating bytes >> response bytes) and file logs showing video or image MIME types, is a very strong indicator of a compromise where an adversary is stealing visual data.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Network egress points for corporate Wi-Fi
      - VPN concentrators
      - cellular data gateways
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          connections = SEARCH zeek_conn_logs WHERE source_ip IN mobile_ip_range
          c2_connections = FILTER connections WHERE dest_ip IN threat_intel_feed AND orig_bytes > (10 * resp_bytes)
          exfil_events = JOIN c2_connections with zeek_file_logs ON connection_uid WHERE mime_type MATCHES "video/*" OR "image/*"
          RETURN exfil_events
  - question: Is a mobile device exhibiting an anomalous spike in outbound data transfer to a suspicious domain?
    context: This question uses behavioral analytics to detect potential data exfiltration without relying solely on known malicious indicators. A sudden, significant increase in a device's daily outbound data (exceeding its historical 99th percentile) is inherently suspicious. Correlating this spike with connections to newly registered domains or domains with high entropy (a characteristic of Domain Generation Algorithms used by malware) helps prioritize these anomalies as likely exfiltration channels for stolen data, such as video captures.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Network egress points for corporate Wi-Fi
      - VPN concentrators
      - cellular data gateways
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR EACH device_ip:
            baseline = CALCULATE 99th_percentile_daily_outbound_bytes over last 30 days FROM zeek_conn_logs
            today_bytes = CALCULATE total_outbound_bytes over last 24 hours
            IF today_bytes > baseline:
              suspicious_domains = FIND domains for connections with high_entropy OR newly_registered
              ALERT on device_ip with suspicious_domains
  - question: Are there unusual patterns in network traffic, such as unseasonal data spikes or connections to rare, clustered destinations, that could indicate covert exfiltration?
    context: This question employs advanced machine learning techniques to uncover subtle exfiltration patterns that simpler rules might miss. A time-series model can detect traffic spikes that violate normal daily or weekly patterns, while clustering algorithms can identify small groups of devices communicating with the same uncommon destination. These "small, dense clusters" are highly suspicious as they may represent a previously unknown C2 infrastructure being used to exfiltrate captured media from a targeted set of devices.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Network egress points for corporate Wi-Fi
      - VPN concentrators
      - cellular data gateways
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          # Time-series analysis
          traffic_spikes = RUN SARIMA_model ON hourly_outbound_bytes FOR EACH device
          # Clustering analysis
          connection_clusters = RUN DBSCAN_model ON {dest_ip, dest_port, protocol, total_bytes}
          suspicious_clusters = FILTER connection_clusters WHERE cluster is small_and_dense AND destination NOT IN known_services
          RETURN traffic_spikes, suspicious_clusters
  - question: Has an application activated the camera while running in the background?
    context: This question targets a key indicator of spyware: activating the camera without the user's knowledge. Legitimate applications typically only use the camera when they are in the foreground and actively being used. By alerting when a camera API call is made shortly after the application has entered a background state, we can detect this covert behavior. Maintaining an exception list for legitimate use cases (like video conferencing apps) is crucial to reduce false positives.
    answer_sources:
      - Mobile EDR logs
      - OS-level API call logs
      - Application lifecycle event logs
      - High-value target mobile devices (e.g., executive leadership, system administrators) with EDR agents installed
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          background_events = SEARCH edr_logs FOR event = "app_entered_background"
          camera_events = SEARCH edr_logs FOR event = "camera_api_call"
          FOR EACH camera_event:
            IF process_id NOT IN exception_list AND process_id had a background_event in last 60 seconds:
              ALERT on covert_camera_activation
  - question: Did an application activate the camera without a preceding, direct user interaction?
    context: This question seeks to differentiate between user-initiated and programmatically-initiated camera usage. For any given app, there is a normal, expected time delay between a user tapping a button (e.g., "Take Photo") and the camera being activated. If a camera API call occurs long after any user input, or with no preceding input at all (a time delta beyond the 99.9th percentile), it strongly suggests the activation was not initiated by the user and is therefore suspicious.
    answer_sources:
      - Mobile EDR logs
      - OS-level API call logs
      - Application lifecycle event logs
      - High-value target mobile devices (e.g., executive leadership, system administrators) with EDR agents installed
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR EACH app_name:
            baseline = CALCULATE 99.9th_percentile_time_delta between ui_event and camera_api_call
            realtime_events = MONITOR for camera_api_calls
            IF time_since_last_ui_event > baseline:
              ALERT on non-user-initiated_camera_activation
  - question: Has a sequence of application events occurred that is statistically improbable and indicates a transition from a background state to camera activation?
    context: This question uses a sophisticated state-machine model (HMM) to understand the "grammar" of normal application behavior. The model learns the legitimate sequences of events (e.g., app launch -> UI active -> user tap -> camera active). An event sequence that has a very low probability under this model, such as an application moving directly from a 'backgrounded' state to a 'camera active' state, represents a severe violation of normal behavior and is a high-confidence indicator of malicious activity.
    answer_sources:
      - Mobile EDR logs
      - OS-level API call logs
      - Application lifecycle event logs
      - High-value target mobile devices (e.g., executive leadership, system administrators) with EDR agents installed
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          # HMM model is pre-trained on benign event sequences
          realtime_sequences = CAPTURE event sequences {app_launch, ui_active, etc.}
          FOR EACH sequence:
            log_likelihood = CALCULATE probability of sequence using HMM
            IF log_likelihood is very_low:
              ALERT on anomalous_state_transition