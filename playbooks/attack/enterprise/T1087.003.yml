name: 'T1087.003: Email Account'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: |
  This playbook helps to determine if an adversary is actively discovering email accounts or global address lists within the enterprise network. Adversaries may attempt to enumerate email accounts and lists to build a map of the organization's personnel, roles, and communication structures. This is often a precursor to phishing campaigns, social engineering, or targeting specific individuals. Detection methods focus on identifying the use of known enumeration tools, anomalous use of legitimate system utilities like PowerShell and LDAP queries, unusual network traffic patterns to directory and mail services, and unauthorized processes making connections to these services.
type: 'technique'
related:
  - 'TA0007: Discovery'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: Are any processes being created that match the file hash or name of known email enumeration tools from our threat intelligence feeds?
    context: |
      This question aims to identify the direct use of known malicious tools for email account discovery. Matching process creations against a list of known bad hashes or filenames (like MailSniper or ADFind) is a high-fidelity method for detecting adversary activity early in the reconnaissance phase. A positive match provides strong evidence of malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Exchange Servers
      - Administrative Workstations
      - User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs (EventID=4688)
          JOIN threat_intel_feed ON file_hash OR file_name
          IF match FOUND, ALERT
  - question: Are there any newly executed processes, spawned by scripting engines, with high-entropy (potentially obfuscated) file names?
    context: |
      Adversaries often use obfuscated or randomized file names to evade simple signature-based detection. This question focuses on identifying processes spawned by common scripting engines (like PowerShell) that have unusually complex or random-looking names. High character entropy can be a strong indicator of an attempt to hide a malicious payload or script used for enumeration.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Exchange Servers
      - Administrative Workstations
      - User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs (EventID=4688)
          WHERE parent_process IN ('powershell.exe', 'cscript.exe')
          CALCULATE entropy(process_name)
          IF entropy > 3.5, ALERT
  - question: Have any newly created processes been classified by our machine learning model as highly probable email enumeration tools?
    context: |
      This question leverages a machine learning model to detect novel or unknown enumeration tools that might not be caught by signature-based methods. The model analyzes various features of a process creation event (parent process, user, command line, etc.) to predict its likelihood of being malicious. A high probability score suggests the process exhibits characteristics strongly associated with enumeration tools and warrants immediate investigation.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Exchange Servers
      - Administrative Workstations
      - User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new process_creation_event (EventID=4688)
          SCORE event with ML_model
          IF score > 0.9, ALERT
  - question: Are there any command-line or PowerShell script block logs containing specific keywords (e.g., 'Get-GlobalAddressList', 'Get-Recipient') used for email account discovery?
    context: |
      This question looks for the explicit use of PowerShell cmdlets or string patterns commonly associated with querying Active Directory or Exchange for user and mailbox information. Finding these specific terms in execution logs is a direct indicator that an actor is attempting to enumerate email accounts.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - Exchange Servers
      - Microsoft 365 Tenant
      - User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH command_line_logs (EventID=4688) OR powershell_script_logs (EventID=4104)
          REGEX for 'Get-GlobalAddressList', 'Get-Recipient', 'Get-Mailbox', or LDAP filters
          IF match FOUND, ALERT
  - question: Has any user executed a rare or novel PowerShell cmdlet (e.g., 'Get-GlobalAddressList') that is anomalous compared to their own historical activity?
    context: |
      This question aims to detect unusual behavior by establishing a baseline of normal PowerShell activity for each user. An administrator might rarely, if ever, use a cmdlet like 'Get-GlobalAddressList'. Its sudden appearance in their activity, especially if it's statistically rare for them, can signal a compromised account being used for reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - Exchange Servers
      - Microsoft 365 Tenant
      - User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user
          BUILD baseline of powershell_cmdlet_frequency
          FOR each new cmdlet_execution
          IF cmdlet is rare for user (e.g., 99th percentile), ALERT
  - question: Has a topic modeling analysis of PowerShell script logs classified any user's activity as 'reconnaissance'?
    context: |
      This question uses an unsupervised machine learning approach to categorize PowerShell scripts into topics. By identifying a 'reconnaissance' topic that includes enumeration cmdlets, the system can flag users whose script activity suddenly aligns with this topic, even if the exact commands are obfuscated or varied. This is useful for detecting suspicious patterns of behavior that may not be obvious from single commands.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - Exchange Servers
      - Microsoft 365 Tenant
      - User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY topic_model (LDA) to powershell_logs (EventID=4104)
          CLASSIFY scripts into topics like 'benign admin', 'reconnaissance'
          IF script topic is 'reconnaissance' for a user, ALERT
  - question: Have any LDAP search requests been observed with filters designed for bulk enumeration of user or email objects (e.g., '(objectClass=user)', '(mail=*)')?
    context: |
      This question targets the specific LDAP queries an adversary would use to dump large numbers of user accounts or email addresses from Active Directory. Monitoring for these filter patterns in network traffic or domain controller logs provides a direct and high-confidence indicator of an attempt to gather directory information.
    answer_sources:
      - Zeek ldap.log
      - Windows Event ID 1644
      - Domain Controllers
      - Network segments monitoring traffic to Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH ldap_logs (Zeek ldap.log, EventID=1644)
          REGEX for filters like '(objectCategory=person)', '(objectClass=user)', '(mail=*)'
          IF match FOUND, ALERT
  - question: Has any source IP address performed an LDAP query that returned a number of objects significantly higher than its historical average?
    context: |
      This question aims to detect bulk data exfiltration via LDAP by focusing on the *result* of the query, not just the query itself. A legitimate query might return a few objects, but an enumeration attempt will return hundreds or thousands. By baselining the typical number of objects returned per query for a given source, we can spot anomalous queries that return an unusually large dataset, indicating a bulk export.
    answer_sources:
      - Zeek ldap.log
      - Windows Event ID 1644
      - Domain Controllers
      - Network segments monitoring traffic to Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
          BUILD 30-day baseline of objects_returned per LDAP_query
          FOR each new query
          IF objects_returned > (3 * stdev(baseline)), ALERT
  - question: Has a time-series analysis detected an anomalous spike in the volume of LDAP search requests from any host?
    context: |
      This question focuses on the rate of LDAP activity rather than the content of individual queries. An adversary attempting to enumerate a directory will likely issue many queries in a short period. A time-series model can learn the normal rhythm of LDAP traffic and alert when a sudden, statistically significant spike occurs, which could indicate an automated enumeration script is running.
    answer_sources:
      - Zeek ldap.log
      - Windows Event ID 1644
      - Domain Controllers
      - Network segments monitoring traffic to Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL volume of LDAP_requests over time using SARIMA
          FOR each new time_window
          IF observed_volume deviates significantly from forecast, ALERT
  - question: Has any single source IP address initiated an excessive number of connections to directory or mail services within a short time frame?
    context: |
      This question uses a simple but effective threshold to detect brute-force or rapid connection-based enumeration attempts. By setting a high-water mark for the number of connections allowed from one IP to sensitive services (like Domain Controllers or Exchange) in a small window, we can catch automated tools that try to connect many times in quick succession.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek ldap.log
      - Network traffic segments in front of Domain Controllers and Exchange/Mail servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          COUNT connections from source_ip to DC/Exchange_ports within 5_minutes
          IF count > 500, ALERT
  - question: Is any source IP's hourly connection count to directory and mail services a statistical outlier compared to its own 30-day baseline?
    context: |
      This question provides a more dynamic approach than a fixed threshold by creating a personalized baseline for each IP address. Using a statistical method like Inter-Quartile Range (IQR) helps identify what is 'too many' connections for a *specific* host, rather than a universal number. This reduces false positives from normally chatty servers and better highlights anomalous behavior from quiet endpoints.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek ldap.log
      - Network traffic segments in front of Domain Controllers and Exchange/Mail servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
          CALCULATE hourly_connection_baseline (30-day) and IQR
          FOR each new hour
          IF connection_count > (Q3 + 1.5 * IQR), ALERT
  - question: Have our clustering algorithms identified any network connections to directory/mail services as outliers that do not conform to normal traffic patterns?
    context: |
      This question employs a machine learning technique (DBSCAN) to define 'normal' by grouping similar connections into clusters based on features like duration, bytes transferred, and service. Any connection that doesn't fit into a well-defined cluster is flagged as noise or an outlier. This is powerful for detecting novel or unusual enumeration techniques that don't look like any previously seen legitimate or malicious traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek ldap.log
      - Network traffic segments in front of Domain Controllers and Exchange/Mail servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY DBSCAN clustering to connection_logs features (bytes, duration, etc.)
          PROFILE dense clusters as 'normal'
          FLAG connections identified as noise/outliers, ALERT
  - question: Is a process that is not on our approved software allowlist initiating network connections to directory or mail services?
    context: |
      This question seeks to identify unauthorized software communicating with sensitive directory and mail infrastructure. By correlating the process that initiates a network connection with a predefined list of approved applications (e.g., Outlook), we can immediately flag any unknown or unapproved executable, such as a custom adversary tool, attempting to perform reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - User Endpoints
      - Application Servers
      - network choke points monitoring traffic to directory/mail servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE process_creation (EventID=4688) with network_connection (EventID=5156)
          IF process_name NOT IN allowlist AND destination_port IN (135, 389, 443, 636), ALERT
  - question: Has a statistically rare process initiated a connection to directory or mail services, especially from a user-writable directory?
    context: |
      This question focuses on identifying outlier processes based on their prevalence across the enterprise. A process like `outlook.exe` connecting to Exchange is common; a process named `svchost.exe` from `C:\Users\*` or a randomly named executable doing the same is extremely rare and highly suspicious. Flagging connections from the least common processes provides a powerful heuristic for finding adversary tools.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - User Endpoints
      - Application Servers
      - network choke points monitoring traffic to directory/mail servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE prevalence of all process_names connecting to DC/Mail servers
          IF connecting_process_prevalence is in bottom 1st percentile, ALERT
  - question: Has our One-Class SVM model classified any process-network connection event as an outlier compared to the baseline of legitimate activity?
    context: |
      This question uses a machine learning model trained exclusively on 'good' or legitimate process-network connection behavior. The model learns the boundary of normal activity. Any new event that falls outside this boundary is flagged as an anomaly. This is effective for detecting previously unseen enumeration tools or legitimate tools being used in an illegitimate context, without needing prior examples of malicious behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - User Endpoints
      - Application Servers
      - network choke points monitoring traffic to directory/mail servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN One-Class SVM on legitimate process-network_events
          SCORE new events in real-time
          IF event is classified as outlier, ALERT