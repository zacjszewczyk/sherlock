name: T1037.004: RC Scripts
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is using RC scripts for persistence or privilege escalation. It focuses on detecting malicious file transfers to Unix/Linux systems, modifications to RC script paths (e.g., /etc/rc.local) from both Unix and Windows hosts, anomalous SSH connections, and unusual post-reboot activity such as unexpected processes or network beaconing. Evidence is gathered from network logs (Zeek), endpoint logs (Windows Event ID 4688, Unix auditd), and system logs (syslog).
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a file with a known malicious hash been transferred to a Unix/Linux host over SSH from a known-malicious IP address?
    context: This question aims to detect the direct delivery of malware to a target system. An adversary may use SSH/SCP to transfer their malicious tools. By correlating network connections from threat-listed IPs with file transfers and hash analysis, analysts can identify the initial payload drop associated with persistence via RC scripts.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Internet gateways
      - Demilitarized zones (DMZ)
      - Critical Unix/Linux server segments (e.g., ESXi management networks, web server farms)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: SEARCH Zeek conn.log WHERE dest_port = 22 AND source_ip IN malicious_ip_list | JOIN uid with Zeek files.log WHERE file_hash IN malicious_hash_list
  - question: Are there SSH connections originating from anomalously rare countries or Autonomous Systems (ASNs)?
    context: Adversaries may operate from infrastructure in unusual geographic or network locations. This question helps identify suspicious SSH activity by baselining normal connection origins over 30 days and flagging new connections from sources that are statistically rare. This can surface attacker infrastructure that deviates from expected administrative access patterns.
    answer_sources:
      - Zeek conn.log
      - Internet gateways
      - Demilitarized zones (DMZ)
      - Critical Unix/Linux server segments (e.g., ESXi management networks, web server farms)
    range: Last 30 days
    queries:
      - platform: pseudocode
        query: BASELINE SSH connections by source_country and source_asn over 30 days | ALERT on new SSH connections where source_country or source_asn is in the bottom 1% of the baseline frequency
  - question: Is there an anomalous spike in SSH connection volume or data transfer size to critical Unix hosts, especially outside of normal business hours?
    context: This question uses machine learning to detect deviations from normal SSH traffic patterns. Adversaries transferring tools or exfiltrating data via SSH may cause unusual spikes in connection counts or data volume. By modeling historical traffic, this approach can automatically flag significant, unexpected activity that might otherwise be missed, particularly activity occurring at odd hours.
    answer_sources:
      - Zeek conn.log
      - Internet gateways
      - Demilitarized zones (DMZ)
      - Critical Unix/Linux server segments (e.g., ESXi management networks, web server farms)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: MODEL SSH traffic volume (count, bytes) to critical hosts | FORECAST expected traffic | ALERT when observed traffic significantly deviates from forecast, especially outside business hours
  - question: Is a Windows host using a remote administration tool (like scp.exe or plink.exe) to directly reference or modify a Unix RC script path?
    context: Adversaries may use compromised Windows administrative hosts to pivot to Unix/Linux systems and establish persistence. This question looks for the explicit command-line evidence of a remote administration tool being used to interact with sensitive RC script files (e.g., /etc/rc.local), which is a strong indicator of an attempt to modify system startup procedures.
    answer_sources:
      - Windows Event ID 4688
      - Windows administrative workstations
      - Windows jump servers/bastion hosts
      - Endpoint devices of system administrators and developers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: SEARCH EventID 4688 WHERE process_name IN ('scp.exe', 'plink.exe', 'ssh.exe') AND command_line MATCHES '(\/etc\/rc\.(local|common|d))|(\/etc\/init\.d\/)'
  - question: Are remote administration tools being used with statistically rare or never-before-seen command line arguments, particularly those containing file redirection keywords?
    context: Adversaries often use novel or unusual command-line syntax to evade simple signature-based detection. This question establishes a baseline of normal command-line usage for remote admin tools and flags outliers. The presence of redirection operators (`>`, `>>`) combined with system paths (`/etc/`) in a rare command is highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows administrative workstations
      - Windows jump servers/bastion hosts
      - Endpoint devices of system administrators and developers
    range: Last 30 days
    queries:
      - platform: pseudocode
        query: BASELINE command lines for remote admin tools over 30 days | ALERT on statistically rare or new command lines, especially those with 'echo', '>', '>>', and '/etc/'
  - question: Does a command line involving a remote administration tool have a high probability of being malicious based on its characteristics?
    context: This question applies a supervised machine learning model to proactively score and identify malicious command lines in real-time. By training on features like command length, special characters, keyword frequency, and string entropy, the model can learn to distinguish legitimate administrative commands from malicious ones intended to modify RC scripts.
    answer_sources:
      - Windows Event ID 4688
      - Windows administrative workstations
      - Windows jump servers/bastion hosts
      - Endpoint devices of system administrators and developers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: FOR each new EventID 4688 | EXTRACT features (length, special chars, keywords, entropy) | SCORE with trained classification model | ALERT if score exceeds maliciousness threshold
  - question: Has a connection been made to a critical Unix server from a source IP not belonging to an authorized administrative group?
    context: This question enforces access control policies at the network level. By defining groups of authorized administrator workstations and critical servers, it's possible to generate high-fidelity alerts for any SSH connection that violates this policy, indicating a potential unauthorized access attempt.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - ESXi management networks
      - Virtualization infrastructure
      - Core network switches and routers monitoring traffic to critical servers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: DEFINE admin_ips and critical_server_ips | SEARCH Zeek conn.log WHERE dest_port = 22 AND source_ip NOT IN admin_ips AND dest_ip IN critical_server_ips | ALERT
  - question: Was there an unusually large data transfer during an SSH/SCP session to a critical Unix host?
    context: Adversaries may transfer large tools or scripts to a compromised system. This question establishes a historical baseline for data transfer volume for specific source-destination pairs and flags sessions that significantly exceed the norm (e.g., 95th percentile), which could indicate the transfer of a malicious payload.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - ESXi management networks
      - Virtualization infrastructure
      - Core network switches and routers monitoring traffic to critical servers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: BASELINE data transfer volume for each source-destination SSH pair | ALERT if new session volume exceeds 95th percentile of its specific baseline
  - question: Does an SSH session to a critical server appear anomalous based on multiple factors like time, source, and data volume?
    context: This question uses an unsupervised machine learning model to find connections that are outliers across many dimensions simultaneously. An adversary's connection might be anomalous not just because of one factor, but because of a combination of factors (e.g., non-admin source, off-hours timing, large data transfer). This multi-dimensional approach can detect sophisticated, subtle attacks.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - ESXi management networks
      - Virtualization infrastructure
      - Core network switches and routers monitoring traffic to critical servers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: MODEL SSH sessions with features (source_ip, dest_ip, time, duration, bytes, is_admin_source) | USE Isolation Forest or similar to find outliers | ALERT on anomalous sessions
  - question: Following a system reboot, did a critical Unix host connect to a known malicious C2 server or a newly registered domain?
    context: Persistence mechanisms like RC scripts are designed to execute after a reboot. This question checks for immediate post-reboot network activity indicative of malware calling home. Correlating a reboot event with outbound connections to destinations on threat intelligence feeds is a strong signal of successful persistence.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Syslog
      - Internet gateways
      - Egress points of the network
      - DNS resolvers
      - Centralized log aggregators (SIEM)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: ON reboot_event from syslog | MONITOR outbound connections from host | ALERT if destination_ip IN C2_list OR destination_domain IN malicious_domain_list
  - question: After a reboot, is a critical Unix host exhibiting low-jitter, periodic network beaconing to a new, previously uncontacted destination?
    context: Automated malware often uses simple, regular time intervals for its C2 communication (beaconing), resulting in low "jitter". This question baselines known communication partners for a host and then, after a reboot, looks for new, highly periodic connections, which are characteristic of automated C2 beaconing established by a persistence mechanism.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Syslog
      - Internet gateways
      - Egress points of the network
      - DNS resolvers
      - Centralized log aggregators (SIEM)
    range: Last 30 days
    queries:
      - platform: pseudocode
        query: BASELINE known destination IPs/domains for host over 30 days | ON reboot_event | MONITOR connections to new destinations | CALCULATE time interval standard deviation | ALERT if deviation is low
  - question: Is there a new, strong periodic signal in the outbound network traffic of a critical host after it has been rebooted?
    context: This question uses time-series decomposition to find hidden periodic patterns in network traffic that emerge after a reboot. By removing the normal trend and seasonal components of the traffic, any remaining strong, regular signal (the residual) is likely to be an anomaly, such as a new C2 beaconing process activated by an RC script.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Syslog
      - Internet gateways
      - Egress points of the network
      - DNS resolvers
      - Centralized log aggregators (SIEM)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: MODEL outbound traffic with time-series decomposition | ON reboot_event | COMPARE new traffic to baseline | ALERT if residual component shows a strong periodic signal
  - question: Has a file been transferred to a Unix host that matches the name or hash of a known privilege escalation exploit?
    context: This question aims to detect the delivery of tools used for privilege escalation. By scanning file transfers for filenames (e.g., 'dirtycow.c') and hashes associated with known exploits, analysts can identify when an adversary is staging tools to elevate their permissions on a target system.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Network taps monitoring traffic between workstations and server segments
      - File transfer proxies
      - DMZ
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: SEARCH Zeek files.log WHERE filename MATCHES exploit_patterns OR file_hash IN exploit_hash_list | ALERT
  - question: Was an unusual file type or an abnormally large file transferred to a Unix system?
    context: Adversaries may transfer files that are atypical for the target system, such as source code for an exploit (`.c` file) being sent to a web server. This question establishes a baseline of normal file types and sizes for transfers to specific assets and flags deviations, which can indicate the staging of exploit code or other malicious tools.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Network taps monitoring traffic between workstations and server segments
      - File transfer proxies
      - DMZ
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: BASELINE file mime_types and sizes for transfers to Unix hosts | ALERT on transfers with a rare mime_type or a size exceeding the 99th percentile
  - question: Does a file transfer to a Unix system have a high probability of being malicious based on its metadata?
    context: This question uses a supervised machine learning model to distinguish between benign and suspicious file transfers. By analyzing a combination of metadata features from network logs (e.g., source/destination hosts, MIME type, connection info) and asset context, the model can learn to identify transfers that are characteristic of exploit delivery.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Network taps monitoring traffic between workstations and server segments
      - File transfer proxies
      - DMZ
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: FOR each file transfer | EXTRACT features from Zeek files.log and conn.log | SCORE with trained classification model | ALERT if score exceeds maliciousness threshold
  - question: Is there evidence of a remote shell command from a Windows host attempting to redirect output into a system RC script on a Unix host?
    context: This is a very specific and high-confidence indicator of an adversary attempting to modify a startup script for privilege escalation or persistence. The combination of a remote shell process (`ssh.exe`), a redirection operator (`>`), and a path to an RC file (`/etc/rc.*`) in a single command line is almost always malicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows administrative workstations
      - Windows jump servers/bastion hosts
      - Domain Controllers (for auditing originating user context)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: SEARCH EventID 4688 WHERE process_name IN ('ssh.exe', 'plink.exe') AND command_line CONTAINS '>>' AND command_line CONTAINS '/etc/rc.' | ALERT
  - question: Is a remote shell command attempting to modify a rarely accessed system file path?
    context: Legitimate administration typically involves accessing a common set of files and directories. Adversaries attempting to modify system files for privilege escalation may touch files that are rarely, if ever, modified during normal operations. This question baselines file path access frequency and flags modifications to infrequently accessed paths, such as system RC scripts.
    answer_sources:
      - Windows Event ID 4688
      - Windows administrative workstations
      - Windows jump servers/bastion hosts
      - Domain Controllers (for auditing originating user context)
    range: Last 30 days
    queries:
      - platform: pseudocode
        query: BASELINE accessed file paths from remote shell commands over 30 days | ALERT if a command modifies a path in the bottom 5% of access frequency
  - question: Can a command line be classified as a malicious modification attempt using Natural Language Processing (NLP)?
    context: This question applies NLP techniques to analyze the structure and content of command lines. By converting commands into numerical vectors (e.g., using TF-IDF) and training a classifier, the system can learn to recognize the complex patterns of malicious commands, such as the combination of tools (`echo`, `curl`), redirection, and sensitive paths, which might be missed by simpler rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows administrative workstations
      - Windows jump servers/bastion hosts
      - Domain Controllers (for auditing originating user context)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: CONVERT command lines to TF-IDF vectors | TRAIN a classifier (e.g., SVM) on 'benign' vs 'malicious' examples | CLASSIFY new commands and ALERT on 'malicious'
  - question: Did a non-root user session correlate with a root-owned RC script being modified?
    context: This question seeks to identify privilege escalation by correlating user sessions with sensitive file modifications. An alert is triggered if a non-root user (`auid != 0`) is observed escalating to root (`uid = 0`) and then modifying a critical RC script, especially if the originating network session is from an unauthorized IP. This directly links the escalation event to the malicious modification.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Unix/Linux Audit Logs
      - Centralized log aggregation platform (SIEM)
      - Critical Unix/Linux servers
      - Windows administrative workstations
      - Domain Controllers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: CORRELATE Unix auditd write events on '/etc/rc.*' with Zeek conn.log sessions | ALERT if auditd shows non-root user escalating to root (auid != 0, uid = 0) and Zeek shows source IP is not an admin
  - question: Does a file modification event on a Unix host have a high risk score based on user context, file sensitivity, and user behavior?
    context: This question moves beyond single indicators to a holistic risk score. By combining factors like whether the user is root, how sensitive the file path is, and whether the user has modified this file before, a more nuanced detection can be achieved. An event's score exceeding a high threshold (e.g., 98th percentile) indicates a highly suspicious modification that warrants investigation.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Unix/Linux Audit Logs
      - Centralized log aggregation platform (SIEM)
      - Critical Unix/Linux servers
      - Windows administrative workstations
      - Domain Controllers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: FOR each file modification | SCORE based on user_privilege, file_path_sensitivity, historical_behavior, source_ip_rep | ALERT if score > threshold
  - question: Can a file modification be identified as anomalous using a graph-based model of user-file interactions?
    context: This question models the relationships between users and the files they modify as a graph. Normal activity forms distinct communities (e.g., web admins modifying web files). An anomaly, such as a standard user modifying a sensitive RC script, would appear as an unusual edge connecting two otherwise separate communities in the graph, making it a high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Unix/Linux Audit Logs
      - Centralized log aggregation platform (SIEM)
      - Critical Unix/Linux servers
      - Windows administrative workstations
      - Domain Controllers
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: BUILD a graph of (user)-[modifies]->(file) | APPLY community detection algorithm | ALERT on edges that connect nodes in different, unexpected communities
  - question: Shortly after a reboot, did a new, un-baselined process execute as root and subsequently make an outbound network connection?
    context: This question directly checks for the successful execution of a new persistence mechanism. It baselines known good processes that run after a reboot. If a new process appears, runs as root, and then makes a network connection (especially to a suspicious IP), it strongly indicates that an adversary's RC script has successfully launched a malicious payload.
    answer_sources:
      - Zeek conn.log
      - Unix/Linux Audit Logs
      - Syslog
      - Critical Unix/Linux servers (for process and reboot logs)
      - Egress points of the network
      - Centralized log aggregation platform (SIEM)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: ON reboot_event | GET list of new processes from auditd vs baseline | ALERT if new process has uid=0 AND correlates with an outbound connection in Zeek conn.log
  - question: After a reboot, is there an anomalous parent-child process relationship, especially one that spawns a network connection?
    context: Legitimate processes have predictable parent-child relationships (e.g., `init` starts `systemd`). Adversaries might inject their malicious process into the boot sequence in an unusual way, creating a rare parent-child relationship. This question baselines these relationships and alerts on deviations, which can pinpoint where in the boot process a malicious script was executed.
    answer_sources:
      - Zeek conn.log
      - Unix/Linux Audit Logs
      - Syslog
      - Critical Unix/Linux servers (for process and reboot logs)
      - Egress points of the network
      - Centralized log aggregation platform (SIEM)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: BASELINE parent-child process relationships post-reboot | ON reboot_event | ANALYZE new process trees from auditd | ALERT on rare parent-child relationships
  - question: Following a reboot, does the system's resource utilization (CPU, memory, network) significantly exceed forecasted levels?
    context: A newly persisted malicious process can cause an unexpected strain on system resources as it executes. This question uses a time-series model to predict the normal resource consumption pattern for a host immediately after reboot. If the actual usage is significantly higher than predicted, it indicates that an unknown and potentially malicious process is running.
    answer_sources:
      - Zeek conn.log
      - Unix/Linux Audit Logs
      - Syslog
      - Critical Unix/Linux servers (for process and reboot logs)
      - Egress points of the network
      - Centralized log aggregation platform (SIEM)
    range: Last 90 days
    queries:
      - platform: pseudocode
        query: MODEL resource utilization (CPU, memory, network) post-reboot | FORECAST expected usage | ALERT if actual usage significantly exceeds prediction interval