name: T1003.006: DCSync
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps determine if an adversary is leveraging the Directory Replication Service (DRS) Remote Protocol via DCSync to exfiltrate credentials from a Domain Controller. It focuses on identifying indicators such as unauthorized directory services replication events (Windows Event ID 4662), abnormally large network traffic over the DRSUAPI RPC interface from non-DC sources, the execution of common DCSync tools (e.g., Mimikatz, secretsdump.py) identified via process command-line auditing, and specific high-fidelity Zeek notices indicating DCSync activity. The goal is to detect and investigate attempts to impersonate a Domain Controller to steal credential data.
type: technique
related:
  - "TA0006: Credential Access"
contributors:
  - "Zachary Szewczyk"
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a directory services replication event (Windows Event ID 4662) being generated by an account or IP address that is not an authorized Domain Controller?
    context: |
      A core behavior of a DCSync attack is a non-Domain Controller computer requesting directory replication. This question aims to detect this anomaly by checking if the source account (Subject/Security ID) or source IP address associated with a replication event (identified by specific GUIDs in the event properties) is on a pre-approved allow-list of legitimate Domain Controllers. A mismatch is a high-fidelity indicator of a potential DCSync attack.
    answer_sources:
      - Windows Security Event ID 4662
      - Zeek conn.log
      - All Domain Controllers within the enterprise.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Windows Event ID 4662
          WHERE Properties CONTAINS '1131f6aa-9c07-11d1-f79f-00c04fc2dcd2' OR '1131f6ad-9c07-11d1-f79f-00c04fc2dcd2'
          CORRELATE with network logs to get Source IP
          IF (Subject/Security ID NOT IN dc_sid_allow_list) OR (Source IP NOT IN dc_ip_allow_list)
          THEN ALERT high_severity
  - question: Has a non-Domain Controller account generated a directory services replication event (Windows Event ID 4662)?
    context: |
      In a properly configured Active Directory environment, only Domain Controller machine accounts should perform directory replication. Any other type of account, such as a user account or a standard service account, performing this action is highly anomalous and almost certainly malicious. This question focuses on establishing a baseline of authorized replication accounts and alerting on any deviation, which represents a zero-expected-frequency event for non-DC accounts.
    answer_sources:
      - Windows Security Event ID 4662
      - Zeek conn.log
      - All Domain Controllers within the enterprise.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Windows Event ID 4662 with replication GUIDs
          PROFILE Subject/Security ID
          COMPARE against baseline of authorized DC machine accounts
          IF Subject/Security ID IS NOT a DC machine account
          THEN ALERT high_severity
  - question: Are there anomalous directory replication requests that deviate from established patterns of activity?
    context: |
      Sophisticated adversaries may compromise a legitimate Domain Controller account or machine to launch a DCSync attack, bypassing simple allow-list checks. This question proposes using an unsupervised machine learning model to profile normal replication activity, considering features like source/destination IPs, source account, time of day, and frequency. The model can then identify outliers that deviate from these established patterns, flagging potentially malicious activity that appears legitimate on the surface.
    answer_sources:
      - Windows Security Event ID 4662
      - Zeek conn.log
      - All Domain Controllers within the enterprise.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          INGEST features (source_ip, source_sid, dest_dc, time_of_day) from events
          TRAIN anomaly detection model (e.g., Isolation Forest) on historical data
          APPLY model to new replication events
          IF model classifies event as anomaly
          THEN ALERT medium_severity
  - question: Is there network traffic using the DRSUAPI RPC interface originating from a non-Domain Controller IP address?
    context: |
      DCSync attacks leverage the Directory Replication Service (DRS) Remote Protocol, which has a specific UUID for its RPC interface. This question focuses on network-level detection by monitoring for any RPC connections using this specific interface UUID that originate from an IP address not belonging to a known, authorized Domain Controller. This is a direct violation of expected network behavior and a strong indicator of a DCSync attempt.
    answer_sources:
      - Zeek conn.log
      - Zeek dcerpc.log
      - Network sensor monitoring traffic on internal network segments containing Domain Controllers, and at key network choke points.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek dcerpc.log
          WHERE interface_uuid == 'E3514235-4B06-11D1-AB04-00C04FC2DCD2'
          JOIN with Zeek conn.log on UID
          IF conn.log.id.orig_h NOT IN dc_ip_allow_list
          THEN ALERT high_severity
  - question: Has a connection from a non-Domain Controller to a Domain Controller over the DRSUAPI interface shown an abnormally large data transfer volume?
    context: |
      A successful DCSync attack that exfiltrates a large portion of the Active Directory database will result in a significant amount of data being transferred from the Domain Controller to the attacker's machine. This question aims to detect this by baselining the normal replication traffic volume (response bytes) between legitimate DCs and then alerting when a connection from a non-DC to a DC over the same interface shows a volume that is a statistical outlier (e.g., 3+ standard deviations above the mean).
    answer_sources:
      - Zeek conn.log
      - Zeek dcerpc.log
      - Network sensor monitoring traffic on internal network segments containing Domain Controllers, and at key network choke points.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE mean and stddev of resp_bytes for DC-to-DC DRSUAPI traffic
          MONITOR non-DC to DC DRSUAPI traffic
          IF resp_bytes > (baseline_mean + 3 * baseline_stddev)
          THEN ALERT high_severity
  - question: Has the network traffic volume between a specific non-DC system and a DC on the DRSUAPI port significantly exceeded its forecasted normal behavior?
    context: |
      This question proposes a more granular, time-series based approach to detecting anomalous data transfers. For specific systems that might legitimately communicate with a DC (like an admin workstation), a forecasting model can predict the expected traffic volume. An alert is generated only when the observed traffic significantly deviates from this forecast, allowing for the detection of unusual data transfers that might not be large in absolute terms but are anomalous for that specific source-destination relationship.
    answer_sources:
      - Zeek conn.log
      - Zeek dcerpc.log
      - Network sensor monitoring traffic on internal network segments containing Domain Controllers, and at key network choke points.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each non-DC to DC pair:
          TRAIN time-series model (e.g., ARIMA) on historical resp_bytes
          FORECAST expected volume and confidence interval
          IF observed_volume > forecast_upper_bound
          THEN ALERT medium_severity
  - question: Has a process been created with a command line indicative of a DCSync tool, such as Mimikatz's `lsadump::dcsync` or impacket's `secretsdump.py`?
    context: |
      This question focuses on detecting the direct execution of known DCSync tooling on an endpoint. By monitoring process creation events (Windows Event ID 4688) and their associated command lines, an analyst can search for specific strings, arguments, and patterns (e.g., `lsadump::dcsync`, `secretsdump.py -just-dc`) that are unique to these tools. A match, especially on a non-Domain Controller, is a very high-fidelity indicator that an attack is in progress.
    answer_sources:
      - Windows Security Event ID 4688 (with Command Line Auditing enabled)
      - All workstations and member servers within the Active Directory environment, with heightened monitoring on systems used by administrators or those with network access to Domain Controllers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Process Creation Events (Event ID 4688)
          WHERE CommandLine MATCHES REGEX /(lsadump.*::.*dcsync|secretsdump\\.py.*(-just-dc|-just-dc-user|-just-dc-ntlm))/i
          THEN ALERT critical_severity
  - question: Has a process, such as PowerShell or Python, been executed with an unusually complex or high-entropy command line?
    context: |
      To evade signature-based detections, attackers often encode or obfuscate their command-line payloads. This results in command-line arguments that appear random and have high character variety (high entropy). This question aims to detect such obfuscation by calculating the Shannon entropy of command lines for common script interpreters or living-off-the-land binaries. An unusually high entropy score compared to a baseline can indicate a hidden payload used to stage a DCSync attack.
    answer_sources:
      - Windows Security Event ID 4688 (with Command Line Auditing enabled)
      - All workstations and member servers within the Active Directory environment, with heightened monitoring on systems used by administrators or those with network access to Domain Controllers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each Process Creation Event (e.g., powershell.exe):
          CALCULATE Shannon entropy of CommandLine
          BASELINE normal entropy scores across the environment
          IF entropy > 98th_percentile_of_baseline
          THEN ALERT low_severity
  - question: Can a machine learning model classify a newly observed process command line as potentially malicious based on features learned from known DCSync and other malicious commands?
    context: |
      This question proposes moving beyond simple signatures and heuristics to a supervised machine learning approach. By training a classification model on features extracted from a large dataset of both benign and malicious command lines (including known DCSync variants), the system can learn to identify malicious patterns in real-time. This allows for the detection of novel or slightly mutated attack commands that might otherwise be missed.
    answer_sources:
      - Windows Security Event ID 4688 (with Command Line Auditing enabled)
      - All workstations and member servers within the Active Directory environment, with heightened monitoring on systems used by administrators or those with network access to Domain Controllers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          EXTRACT features (length, n-grams, char frequency) from command line
          INPUT features into pre-trained classification model
          IF model_prediction == 'malicious' with high confidence
          THEN ALERT medium_severity
  - question: Has a Zeek sensor generated a `DCSync::Replication_From_Non_DC` notice?
    context: |
      Zeek, a popular network security monitor, can be configured with policy scripts specifically designed to detect DCSync attempts over the network. When such an attempt is detected, it generates a `DCSync::Replication_From_Non_DC` notice. This is a very high-fidelity, specific alert that provides strong evidence of an attack. This question focuses on ensuring these alerts are captured and escalated for immediate investigation.
    answer_sources:
      - Zeek notice.log
      - Network sensors monitoring traffic to and from Domain Controllers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Zeek notice.log
          WHERE note == 'DCSync::Replication_From_Non_DC'
          THEN ALERT critical_severity_immediate_response
  - question: Has there been a sudden burst or increase in the frequency of `DCSync::Replication_From_Non_DC` notices?
    context: |
      While a single DCSync notice is a critical event, a sudden spike in the number of these notices within a short time frame can indicate a much larger, automated attack campaign targeting multiple Domain Controllers or originating from multiple compromised hosts. This question aims to apply burst detection algorithms to the stream of Zeek notices to identify these widespread campaigns, which would warrant a higher-priority, coordinated incident response.
    answer_sources:
      - Zeek notice.log
      - Network sensors monitoring traffic to and from Domain Controllers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          MONITOR time series of 'DCSync::Replication_From_Non_DC' notices
          APPLY burst detection algorithm
          IF burst_detected
          THEN ESCALATE incident_priority
  - question: Can a machine learning model help prioritize DCSync-related alerts by scoring their severity based on contextual features?
    context: |
      Even high-fidelity alerts like Zeek's DCSync notice can generate noise in a large, complex environment. This question proposes creating a triage model that enriches these alerts with additional context—such as the source IP's reputation, whether it's internal or external, the criticality of the target DC, and the time of the event. By training a model on past incidents, it can learn to assign a priority score to new alerts, helping analysts focus their efforts on the most significant threats first.
    answer_sources:
      - Zeek notice.log
      - Network sensors monitoring traffic to and from Domain Controllers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each DCSync notice:
          ENRICH with features (source_ip_reputation, target_dc_criticality, etc.)
          INPUT features into pre-trained triage model
          OUTPUT priority_score
          SORT alerts for analyst review by priority_score