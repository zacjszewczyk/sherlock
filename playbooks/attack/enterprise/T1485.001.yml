name: T1485.001: Lifecycle-Triggered Deletion
id: f7a5b3c1-8d9e-4f6a-b2c3-d4e5f6a7b8c9
description: This playbook helps investigate whether an adversary has impacted data availability or integrity by deleting cloud storage data. This is often achieved by modifying or creating storage lifecycle policies with immediate or short-term deletion rules. Indicators of this activity include direct API calls (e.g., AWS 'PutBucketLifecycleConfiguration') to set short expiration periods, command-line executions (e.g., 'aws.exe') with similar parameters, or suspicious sequences of reconnaissance followed by modification. Further evidence can include a significant drop in network traffic to cloud storage destinations or API connections from unauthorized hosts or at unusual times.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a cloud storage lifecycle policy been modified or created via an API call to enact immediate or short-term data deletion?
    context: This question seeks to identify direct manipulation of cloud storage lifecycle policies through API calls. An adversary may use API calls like AWS's 'PutBucketLifecycleConfiguration', Azure's 'Set-AzStorageBlobInventoryPolicy', or GCP's 'storage.buckets.patch' to set a rule that deletes objects in one day or less. Detecting this is a high-fidelity indicator of an attempt to destroy data.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Log
      - GCP Audit Log
      - Cloud Provider Management Plane
      - Log Aggregation Systems (SIEM)
    range: last 90 days
    queries:
      - "Search cloud audit logs for API calls like 'PutBucketLifecycleConfiguration', 'Set-AzStorageBlobInventoryPolicy', or 'storage.buckets.patch' where request parameters specify a lifecycle rule with an action of 'Delete' or 'Expiration' and a period of 1 day or less."
  - question: Has a user or role uncharacteristically modified a cloud storage lifecycle policy, or has such a modification originated from an unusual geographic location?
    context: This question aims to detect anomalous behavior by profiling the frequency of lifecycle policy modifications. An alert is triggered if a user who rarely performs this action suddenly does so. Additionally, tracking the source IP's geolocation can reveal modifications originating from a country not previously associated with the user, suggesting a compromised account.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Log
      - GCP Audit Log
      - Cloud Provider Management Plane
      - Log Aggregation Systems (SIEM)
    range: last 90 days
    queries:
      - "Profile frequency of lifecycle policy modifications by user/role. Alert on executions by users in the bottom 10th percentile of frequency. Separately, track source IP geolocation for these API calls and alert if it originates from a country not seen in the last 90 days for that user."
  - question: Can a machine learning model identify a malicious cloud storage lifecycle policy modification among benign administrative changes?
    context: This question leverages machine learning to distinguish between normal and malicious activity. A classification model trained on features like user identity, source IP, time of day, and specific API parameters (e.g., expiration days) can score lifecycle modification events for maliciousness, providing a more nuanced detection than simple rules.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Log
      - GCP Audit Log
      - Cloud Provider Management Plane
      - Log Aggregation Systems (SIEM)
    range: last 90 days
    queries:
      - "Use a trained classification model (e.g., Random Forest) on cloud audit log features (user, source IP, time of day, API parameters) to flag lifecycle modification events with a high maliciousness score."
  - question: Has a command-line interface tool (e.g., aws.exe, az.exe) been used on a host to configure a storage lifecycle policy for immediate deletion?
    context: This question focuses on detecting the use of cloud CLI tools on endpoint devices to maliciously configure data deletion. An adversary with access to a developer's or administrator's machine may use the CLI to execute commands that set a lifecycle policy with an expiration of one day or less, which can be captured in process execution logs.
    answer_sources:
      - Windows Event ID 4688
      - Endpoints of developers and cloud administrators
      - CI/CD pipeline servers
      - Virtual machine instances with cloud SDKs installed
    range: last 90 days
    queries:
      - "Search Windows Event ID 4688 for process names 'aws.exe', 'az.exe', or 'gcloud.exe' where the command line includes 'put-bucket-lifecycle-configuration' and parameters for immediate deletion (e.g., 'Days:1')."
  - question: Has a user set an unusually short expiration period in a storage lifecycle configuration via the command line compared to historical norms?
    context: This question applies a statistical lens to CLI-based activity. By establishing a baseline of normal 'Days' values used in lifecycle configurations, it is possible to flag outliers. An alert for a value in the bottom 1st percentile organization-wide or two standard deviations below a user's average can indicate a malicious, non-standard configuration.
    answer_sources:
      - Windows Event ID 4688
      - Endpoints of developers and cloud administrators
      - CI/CD pipeline servers
      - Virtual machine instances with cloud SDKs installed
    range: last 90 days
    queries:
      - "Baseline typical 'Days' values in lifecycle configurations per user. Alert if a user sets an 'Expiration' value in the bottom 1st percentile of organizational history or >2 standard deviations below their personal average."
  - question: Can an anomaly detection model identify suspicious command-line executions used to configure storage lifecycle policies?
    context: This question uses an unsupervised machine learning model to find anomalous CLI executions without pre-labeled data. By training a model like an Isolation Forest on features such as the user, host, command, and lifecycle day value, it can identify outlier executions that deviate from normal administrative patterns, such as a non-admin account setting an unusually short lifecycle.
    answer_sources:
      - Windows Event ID 4688
      - Endpoints of developers and cloud administrators
      - CI/CD pipeline servers
      - Virtual machine instances with cloud SDKs installed
    range: last 90 days
    queries:
      - "Use an anomaly detection model (e.g., Isolation Forest) on CLI execution features (user, host, command, time, day value) to find outliers indicative of malicious activity."
  - question: Has a host-based event sequence shown cloud storage reconnaissance immediately followed by a lifecycle policy modification?
    context: This question looks for a common attack pattern where an adversary first enumerates storage resources (e.g., 'aws s3 ls') and then immediately modifies a lifecycle policy to delete them. Detecting this sequence within a short time window (e.g., 30 minutes) on the same host can indicate a targeted, destructive action rather than routine maintenance.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoints of developers and cloud administrators
      - Network Egress Points (Firewalls/Proxies)
      - Log Aggregation Systems (SIEM)
    range: last 90 days
    queries:
      - "Create a stateful rule to detect a storage 'list' or 'get' command followed within 30 minutes by a 'put-bucket-lifecycle-configuration' command from the same source host."
  - question: Has a user executed a sequence of cloud CLI commands for reconnaissance and modification that deviates from their normal workflow?
    context: This question statistically models the typical sequence of commands for different user roles. By using a Markov chain, we can calculate the probability of transitioning from a reconnaissance command to a destructive modification command. A sequence with a very low transition probability suggests a deviation from normal workflow and could be malicious.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoints of developers and cloud administrators
      - Network Egress Points (Firewalls/Proxies)
      - Log Aggregation Systems (SIEM)
    range: last 90 days
    queries:
      - "Model command sequences using a Markov chain per user role. Alert if a sequence with a low transition probability (e.g., <5%) between reconnaissance and modification commands occurs."
  - question: Can a sequence-based machine learning model detect an anomalous series of CLI commands indicative of data deletion preparation?
    context: This question applies advanced machine learning to understand the 'grammar' of administrative command sequences. A model like an RNN or LSTM can be trained on normal sequences of user commands. It can then flag new sequences that are highly improbable or 'grammatically' incorrect, such as immediate reconnaissance followed by destruction, which is a strong indicator of an attack.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoints of developers and cloud administrators
      - Network Egress Points (Firewalls/Proxies)
      - Log Aggregation Systems (SIEM)
    range: last 90 days
    queries:
      - "Use a sequence anomaly detection model (e.g., RNN/LSTM) on user command sequences to flag improbable sequences like immediate reconnaissance followed by destructive modification."
  - question: Has a critical data flow to cloud storage, such as a backup job, ceased unexpectedly?
    context: This question aims to detect the impact of data deletion by monitoring the data flows themselves. For critical processes like backups, a 'heartbeat' rule can be established. If network logs show no traffic from a backup server to its cloud storage destination for an extended period (e.g., 12 hours), it warrants an immediate investigation for data flow interruption.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points (Firewalls/Proxies)
      - Servers responsible for backups and log shipping
      - Application servers writing to cloud storage
    range: last 90 days
    queries:
      - "Define a heartbeat rule. Alert if no connection is seen in Zeek conn.log from a known backup server to its cloud storage destination for a predefined interval (e.g., >12 hours)."
  - question: Has the network traffic volume for a critical data flow to cloud storage dropped significantly below its established baseline?
    context: This question uses statistical analysis of network traffic volume as an indicator of a problem. By calculating a rolling baseline (e.g., 30-day mean +/- 3 standard deviations) for traffic to a cloud bucket, a sustained drop below this normal range can signal that data is no longer being written, possibly due to a destructive action.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points (Firewalls/Proxies)
      - Servers responsible for backups and log shipping
      - Application servers writing to cloud storage
    range: last 90 days
    queries:
      - "Calculate a rolling 30-day baseline of hourly traffic volume for critical data flows. Alert if the volume drops below the mean minus 3 standard deviations for a sustained period (e.g., 3 hours)."
  - question: Does a time-series forecasting model predict a significant, unexpected drop in network traffic to a cloud storage destination?
    context: This question uses predictive modeling to identify anomalies in data flows. A time-series model like ARIMA or Prophet can be trained on historical traffic data to forecast expected volume. If the actual observed traffic falls significantly outside the model's prediction confidence interval, it indicates an unpredicted and potentially malicious interruption of the data flow.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points (Firewalls/Proxies)
      - Servers responsible for backups and log shipping
      - Application servers writing to cloud storage
    range: last 90 days
    queries:
      - "Use a time-series forecasting model (e.g., ARIMA) to predict expected traffic volume. Alert if the actual observed traffic falls significantly outside the model's prediction confidence interval."
  - question: Has a connection to a cloud management API endpoint originated from a host or user not on an authorized allowlist?
    context: This question uses a simple but effective symbolic rule to detect unauthorized access. By maintaining an explicit allowlist of IP addresses and user accounts permitted to access cloud management APIs, any connection from a source not on this list can be immediately flagged as suspicious and potentially malicious.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - AWS CloudTrail
      - Network Egress Points (Firewalls/Proxies)
      - Domain Controllers and Authentication Servers
      - Endpoints of developers and cloud administrators
    range: last 90 days
    queries:
      - "Maintain an allowlist of authorized IPs and user accounts for cloud management APIs. Monitor logs for any connections from sources not on the list."
  - question: Did an administrative user connect to a cloud management API outside of their normal established working hours?
    context: This question seeks to identify anomalous user behavior based on timing. By creating a baseline of normal working hours for each administrative user (e.g., based on login and connection times), any connection to a sensitive management API outside of that user's typical time window can be flagged as a potential indicator of account compromise.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - AWS CloudTrail
      - Network Egress Points (Firewalls/Proxies)
      - Domain Controllers and Authentication Servers
      - Endpoints of developers and cloud administrators
    range: last 90 days
    queries:
      - "Create a baseline of normal working hours for each admin user using login and connection times. Alert if a connection to a management API occurs outside this time window for that user."
  - question: Can a clustering algorithm identify an anomalous network connection to a cloud API endpoint?
    context: This question uses unsupervised machine learning to automatically identify normal patterns of administrative connections. A clustering algorithm like DBSCAN can group connections based on features like source IP, destination, user agent, and time. Any connection that does not fall into a known, established cluster is flagged as an anomaly, potentially indicating activity from a compromised or unauthorized host.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - AWS CloudTrail
      - Network Egress Points (Firewalls/Proxies)
      - Domain Controllers and Authentication Servers
      - Endpoints of developers and cloud administrators
    range: last 90 days
    queries:
      - "Use a clustering algorithm (e.g., DBSCAN) on connection features (source IP, destination, user agent, time, bytes). Flag any connection that does not fall into a known cluster as an anomaly."