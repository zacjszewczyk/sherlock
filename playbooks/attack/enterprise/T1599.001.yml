name: T1599.001: Network Address Translation Traversal
id: e5a3c9b1-7b8c-4f0e-a9d4-2f6b3e1c9a0d
description: This playbook helps investigate if an adversary is using network address translation (NAT) traversal techniques to evade defenses and access restricted network segments. This involves detecting connections to malicious STUN/TURN services, identifying unauthorized use of STUN or UPnP/SSDP protocols, correlating NAT setup activity with subsequent suspicious connections, finding traffic that bypasses standard egress points, and identifying UDP hole punching attempts.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are internal hosts connecting to known malicious NAT traversal services?
  context: A direct connection from an internal host to an external IP address known to be a malicious STUN, TURN, or general NAT traversal service is a high-confidence indicator of compromise. This action aims to detect these connections by cross-referencing network logs with threat intelligence feeds, focusing on common NAT traversal ports like 3478 and 5349.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Network Egress Points (e.g., Firewalls, Routers)
  range: last 90 days
  queries:
  - pseudocode: SEARCH (Zeek conn.log OR WinEventID 5156) WHERE (destination_ip IN threat_intel_feed_NAT_traversal) AND (destination_port IN (3478, 5349) OR category IS 'NAT-Traversal').
- question: Is any host exhibiting an unusually high ratio of connections to malicious NAT-related IPs compared to its peers?
  context: This question seeks to identify outliers by establishing a baseline of normal behavior. A host that suddenly starts communicating with a disproportionately high number of malicious NAT-related IPs compared to its peers (e.g., other developer workstations) may be compromised, even if the total volume is low. This helps detect stealthy activity.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Network Egress Points (e.g., Firewalls, Routers)
  range: last 90 days
  queries:
  - pseudocode: CALCULATE 24h_rolling_ratio(malicious_NAT_connections / total_external_connections) PER host. COMPARE ratio to 95th_percentile_of_peer_group. ALERT if ratio exceeds threshold.
- question: Can we predictively identify malicious NAT traversal connections using machine learning based on their characteristics?
  context: This question moves from reactive (signature-based) to proactive detection. By training a classification model on the features of known-good and known-bad connections (e.g., port, protocol, data volume, duration), it's possible to score new, unseen connections and predict the likelihood that they are facilitating malicious NAT traversal, catching novel threats.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Network Egress Points (e.g., Firewalls, Routers)
  range: last 90 days
  queries:
  - pseudocode: APPLY Random Forest model to real-time connection data (port, protocol, volume, duration, TI_enrichment). SCORE and ALERT on high probability of malicious NAT traversal.
- question: Are unauthorized assets, like database servers, initiating STUN protocol communications?
  context: STUN (Session Traversal Utilities for NAT) is typically used by VoIP and WebRTC clients, not servers or critical infrastructure. The presence of STUN traffic, identified by its magic cookie (0x2112A442), originating from an asset not authorized for such communication is highly anomalous and suggests an adversary is performing reconnaissance to establish a peer-to-peer C2 channel.
  answer_sources:
  - Zeek conn.log
  - Zeek stun.log
  - Internal Network Segments (e.g., Server VLANs, User Subnets)
  range: last 90 days
  queries:
  - pseudocode: SEARCH UDP traffic for STUN_magic_cookie (0x2112A442). IF source_ip IN unauthorized_asset_list OR source_subnet IS policy-restricted, ALERT.
- question: Has any host shown a sudden, anomalous spike in STUN message activity?
  context: Beyond just the presence of STUN, the volume of activity can be an indicator. A sudden burst of STUN messages from a host, significantly exceeding its own established baseline, can signal the start of a malicious process attempting to discover its external IP and port for NAT traversal. This statistical approach helps detect activity on otherwise authorized hosts.
  answer_sources:
  - Zeek conn.log
  - Zeek stun.log
  - Internal Network Segments (e.g., Server VLANs, User Subnets)
  range: last 90 days
  queries:
  - pseudocode: CALCULATE 1h_moving_average and std_dev of STUN_messages PER host from stun.log. IF current_count > (average + 3 * std_dev), ALERT.
- question: Are there STUN sessions that are statistical outliers compared to legitimate STUN traffic patterns?
  context: Malicious use of STUN may differ subtly from legitimate use in its characteristics (e.g., source port, transaction ID patterns, request frequency). An anomaly detection model like an Isolation Forest can be trained on legitimate STUN traffic to learn what is normal, and then identify and alert on outlier sessions that do not conform to these patterns.
  answer_sources:
  - Zeek conn.log
  - Zeek stun.log
  - Internal Network Segments (e.g., Server VLANs, User Subnets)
  range: last 90 days
  queries:
  - pseudocode: APPLY Isolation Forest model to STUN session features (source_port, transaction_id_entropy, request_frequency). ALERT on sessions identified as anomalies.
- question: Are unauthorized hosts attempting to create external port mappings using UPnP/SSDP?
  context: Universal Plug and Play (UPnP) allows devices to automatically open ports on a firewall. While convenient, it can be abused by malware to expose an internal host to the internet. This question aims to detect such abuse by identifying UPnP/SSDP requests from hosts that are not on an explicit allowlist and correlating them with subsequent inbound traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek ssdp.log
  - Network Gateway Devices and Internal Host Subnets
  range: last 90 days
  queries:
  - pseudocode: IF SSDP_message (UDP:1900) from source_ip NOT IN UPnP_allowlist, CORRELATE with subsequent inbound connection to source_ip, then ALERT.
- question: Is any host, authorized or not, exhibiting an unusual frequency of UPnP port mapping requests?
  context: Even a host that is authorized to use UPnP can be compromised. A sudden and significant increase in the number of port mapping requests from any single host, compared to its own 30-day history, is anomalous and warrants investigation. This detects both policy violations and behavioral changes on authorized systems.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek ssdp.log
  - Network Gateway Devices and Internal Host Subnets
  range: last 90 days
  queries:
  - pseudocode: CALCULATE daily_UPnP_requests PER host. IF (host NOT IN UPnP_allowlist) OR (request_count > 99th_percentile_of_30d_history), ALERT.
- question: Is the overall volume of UPnP/SSDP traffic in critical subnets deviating from forecasted norms?
  context: Monitoring aggregate traffic on a per-subnet basis can reveal large-scale or coordinated malicious activity that might be missed at the individual host level. By using a time-series model (like ARIMA) to forecast expected traffic volume, we can generate an alert when observed traffic significantly deviates from the prediction, indicating a widespread anomaly.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek ssdp.log
  - Network Gateway Devices and Internal Host Subnets
  range: last 90 days
  queries:
  - pseudocode: APPLY ARIMA model to aggregate UPnP/SSDP traffic volume per critical subnet. IF observed_volume deviates from predicted_confidence_interval, ALERT.
- question: Are internal hosts establishing long-duration connections to new external IPs immediately following STUN/TURN activity?
  context: This is a classic pattern for establishing a covert channel. First, the malware uses STUN/TURN to determine its public-facing IP and port. Second, it uses this information to establish a direct, persistent connection to an external C2 server. Correlating these two events in a short time window creates a high-fidelity alert for malicious NAT traversal.
  answer_sources:
  - Zeek conn.log
  - Zeek stun.log
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: IDENTIFY host using STUN/TURN from stun.log. IF same host establishes a connection (>1hr duration) to a new, non-CDN IP within 5 minutes, ALERT.
- question: Following a STUN transaction, is a host creating a connection that is unusually long or involves an unusually large amount of data transfer?
  context: This behavioral analytic focuses on the nature of the connection established *after* a NAT traversal event. By comparing the duration and byte count of a post-STUN connection to the host's historical baseline, we can spot anomalies. An unusually long or high-volume session may indicate a persistent C2 channel or data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Zeek stun.log
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: FOR connections within 5 mins post-STUN by same host, CALCULATE Z-score for duration and bytes vs host's baseline. IF both Z-scores > 2.5, ALERT.
- question: Can we identify anomalous post-STUN connections by clustering them based on their attributes?
  context: Legitimate applications often produce post-STUN connections with consistent characteristics. A clustering algorithm like DBSCAN can group these normal sessions together. Any connection that does not fit into a known cluster is flagged as noise or an outlier, making it a high-confidence candidate for being a malicious P2P or C2 channel.
  answer_sources:
  - Zeek conn.log
  - Zeek stun.log
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: APPLY DBSCAN clustering to post-STUN connection features (duration, bytes, IP_reputation). ALERT on connections classified as noise/outliers.
- question: Are there external connections logged on endpoints that are not seen at the network perimeter?
  context: This question seeks to find discrepancies between endpoint and network visibility. If an endpoint (e.g., via Windows Event ID 5156) logs an outbound connection to the internet, but the designated network egress sensor (e.g., Zeek) does not see it, it implies that the traffic is bypassing standard security controls, possibly through a compromised router or an alternate egress path.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Endpoints, Internal Network Segments, and Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: JOIN endpoint_logs (WinEventID 5156) with perimeter_logs (Zeek conn.log) on connection_key over 1-min window. ALERT if endpoint_log has no match in perimeter_log.
- question: Is the percentage of matched endpoint-to-perimeter connections for critical subnets dropping below historical norms?
  context: This provides a macro-level view of routing integrity. By monitoring the percentage of connections that are successfully logged at both the endpoint and the perimeter, we can detect systemic issues. A sudden drop below a historical baseline could indicate a large-scale misconfiguration or a widespread adversary effort to evade egress monitoring.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Endpoints, Internal Network Segments, and Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: CALCULATE hourly percentage of matched endpoint-perimeter connections for critical subnets. ALERT if percentage drops below 1st percentile of its historical daily values.
- question: Are hosts communicating externally via network paths that deviate from their subnet's standard egress route?
  context: In a well-architected network, traffic from a given subnet should follow a predictable path to the internet. By modeling these standard paths, we can apply the model to real-time traffic to detect deviations. A connection that takes an anomalous route is suspicious and could indicate a compromised network device or a bypass technique.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Endpoints, Internal Network Segments, and Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: MODEL standard egress paths per subnet using a network graph. APPLY model to real-time traffic. ALERT on connections that deviate from the learned path.
- question: Is any internal host making rapid outbound UDP connections to a large number of distinct, high-numbered ports?
  context: This behavior is a strong signature of UDP hole punching, a technique used to establish direct peer-to-peer connections across NAT devices. An adversary uses this to create a communication channel that bypasses inbound firewall rules. A simple threshold rule can effectively detect this initial hole-punching spray.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Internal Host Subnets and Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: COUNT distinct destination_ports (>1024) for outbound UDP traffic per source_ip over 60s. IF count > 50, ALERT.
- question: Is the randomness (entropy) of destination ports for a host's outbound UDP traffic unusually high?
  context: UDP hole punching often involves iterating through a wide, random range of ports. This randomness can be quantified using Shannon entropy. A sudden spike in the entropy of destination ports for a host's outbound UDP traffic, when compared to its own baseline, is a strong statistical indicator of a hole punching attempt.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Internal Host Subnets and Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: CALCULATE Shannon entropy of destination ports for outbound UDP in a 5min sliding window per host. ALERT if entropy exceeds 98th percentile of its historical baseline.
- question: Can we detect UDP hole punching attempts by identifying anomalous patterns in outbound UDP traffic?
  context: A machine learning model (like a One-Class SVM) can learn the multi-dimensional profile of a host's 'normal' outbound UDP traffic, considering features like packets-per-second, unique ports, and port entropy. The model can then classify new activity in real-time, flagging anomalous windows that are characteristic of a UDP hole punching attempt.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Internal Host Subnets and Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: TRAIN One-Class SVM on normal UDP features (pps, uniq_ports, entropy). APPLY model to 1-minute windows of host activity. ALERT on 'anomalous' classifications.