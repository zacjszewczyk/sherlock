name: T1564.014: Extended Attributes
id: 6a2c1b8e-3f8d-4b9a-8c7d-1e9f0a2b3c4d
description: This playbook focuses on detecting adversaries hiding malicious payloads or data in file or directory extended attributes (xattrs) to evade detection. The investigation targets anomalous execution of command-line utilities for manipulating xattrs (`xattr`, `setfattr`, `getfattr`), the creation of xattrs with non-standard names or high-entropy data, and instances where a process reads an xattr before executing code from memory or initiating suspicious network connections.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a process creation event for an extended attribute utility (xattr, setfattr, getfattr) part of a larger malicious execution chain?
    context: This question seeks to identify when utilities for manipulating extended attributes are used as part of a multi-stage attack. An adversary might use a web shell or remote access tool to write a payload into an xattr and then use a scripting interpreter to read and execute it. Detecting this sequence of events is a high-fidelity indicator of compromise.
    answer_sources:
      - Sysmon for Linux Event ID 1
      - Linux Auditd logs (type=SYSCALL, key=proc_exec)
      - macOS Endpoint Security Framework (ESF_EVENT_TYPE_NOTIFY_EXEC)
      - Windows Event ID 4688
      - Applicable to Linux servers (web, database, application), macOS developer workstations, CI/CD pipeline runners, and Windows hosts with WSL enabled.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process_creation_events WHERE process_name IN ('xattr', 'setfattr', 'getfattr') AND command_line CONTAINS ('-w', 'setfattr -n user.', 'getfattr --only-values').
          CORRELATE with subsequent (within 5 mins) process_creation_events by the same user on the same host WHERE the parent_process of the initial event is in ('httpd', 'nginx', 'sh', 'bash') AND the subsequent process_name is in ('python', 'perl', 'osascript').
  - question: Has there been an anomalous spike in the execution frequency of extended attribute utilities by a specific user or on a specific host?
    context: This question uses statistical analysis to find deviations from normal behavior. Most users and systems have a predictable, low-frequency pattern of using xattr utilities. A sudden, significant increase in usage by a user or on a host can indicate automated scripting by an adversary to hide files or configuration data. Additionally, checking the entropy of the data being written can help identify encrypted or compressed malicious payloads.
    answer_sources:
      - Sysmon for Linux Event ID 1
      - Linux Auditd logs (type=SYSCALL, key=proc_exec)
      - macOS Endpoint Security Framework (ESF_EVENT_TYPE_NOTIFY_EXEC)
      - Windows Event ID 4688
      - Applicable to Linux servers (web, database, application), macOS developer workstations, CI/CD pipeline runners, and Windows hosts with WSL enabled.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE daily counts of 'xattr' and 'setfattr' executions per user/host over a 30-day period.
          ALERT if a user's daily_count > 99th_percentile for that user/host.
          ANALYZE command_line argument for 'xattr -w' or 'setfattr', calculate Shannon entropy of the value.
          ALERT if entropy_score > 6.0.
  - question: Can machine learning be used to classify the execution of extended attribute utilities as malicious based on contextual features?
    context: This question explores a proactive approach to detection by training a machine learning model to recognize malicious usage patterns. By analyzing features such as the parent process, user context, and command-line arguments, a model can learn to distinguish between benign administrative tasks and malicious TTPs, allowing for the detection of novel or subtle attack variations.
    answer_sources:
      - Sysmon for Linux Event ID 1
      - Linux Auditd logs (type=SYSCALL, key=proc_exec)
      - macOS Endpoint Security Framework (ESF_EVENT_TYPE_NOTIFY_EXEC)
      - Windows Event ID 4688
      - Applicable to Linux servers (web, database, application), macOS developer workstations, CI/CD pipeline runners, and Windows hosts with WSL enabled.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          COLLECT process execution events for 'xattr' and 'setfattr'.
          EXTRACT features including parent_process, grandparent_process, user_context, command_line_patterns, and execution_time.
          TRAIN a classifier model (e.g., Random Forest) on labeled benign and malicious data.
          DEPLOY model to score new events and ALERT on 'malicious' classifications with high confidence.
  - question: Has a new extended attribute been created with a suspicious name or content indicative of a known payload type?
    context: This question focuses on inspecting the properties of the extended attribute itself. Attackers may use non-standard naming conventions to hide data or store executable content directly within an attribute's value. This query looks for specific red flags, such as base64 encoded strings in attribute names, unusual prefixes on macOS, or the presence of common file headers (e.g., 'MZ' for executables, '#!' for scripts) in the attribute's value.
    answer_sources:
      - Linux Auditd logs (syscall=setxattr)
      - macOS Endpoint Security Framework (ESF_EVENT_TYPE_NOTIFY_SETXATTR)
      - osquery (file_extended_attributes table)
      - Zeek files.log
      - Applicable to critical system directories (/bin, /usr/bin, /etc), user home directories, and web-accessible directories (/var/www/html) on Linux and macOS hosts.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH for 'setxattr' syscall events or ESF SETXATTR events.
          ALERT IF (on Linux, attribute_name starts with 'user.' AND contains base64/hex string)
          OR (on macOS, attribute_name does not start with a known prefix like 'com.apple.')
          OR (decoded attribute_value contains 'MZ', 'ELF', or '#!/bin/bash').
  - question: Are there any extended attributes on the system containing unusually high-entropy data, suggesting obfuscation or encryption?
    context: This question aims to find hidden data by analyzing its randomness. Legitimate extended attributes typically contain structured, low-entropy data. Encrypted payloads or compressed code, however, have high entropy. By periodically scanning all xattrs and calculating the entropy of their values, we can identify statistical outliers that are likely to be malicious.
    answer_sources:
      - Linux Auditd logs (syscall=setxattr)
      - macOS Endpoint Security Framework (ESF_EVENT_TYPE_NOTIFY_SETXATTR)
      - osquery (file_extended_attributes table)
      - Zeek files.log
      - Applicable to critical system directories (/bin, /usr/bin, /etc), user home directories, and web-accessible directories (/var/www/html) on Linux and macOS hosts.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          PERIODICALLY RUN `SELECT path, key, value FROM file_extended_attributes`.
          For each attribute, calculate the Shannon entropy of its value.
          ESTABLISH a baseline entropy distribution for legitimate attributes, segmented by file type and key.
          ALERT if an attribute's entropy score is > 3 standard deviations from the mean for its segment.
  - question: Is there an anomalous spike in the rate of extended attribute creation, potentially correlated with recent network file downloads?
    context: This question seeks to identify the staging phase of an attack where a payload is downloaded and then hidden. A sudden burst of xattr creation on a host, particularly if it occurs shortly after a file download, is highly suspicious. A time-series anomaly detection model can effectively identify such spikes against a learned baseline of normal activity.
    answer_sources:
      - Linux Auditd logs (syscall=setxattr)
      - macOS Endpoint Security Framework (ESF_EVENT_TYPE_NOTIFY_SETXATTR)
      - osquery (file_extended_attributes table)
      - Zeek files.log
      - Applicable to critical system directories (/bin, /usr/bin, /etc), user home directories, and web-accessible directories (/var/www/html) on Linux and macOS hosts.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          INGEST file modification events (including xattr creation) and network download events.
          TRAIN a time-series anomaly detection model on the rate of new xattr creations per host.
          ALERT when the model detects an anomalous spike not correlated with known software deployments.
          INCREASE alert priority if the spike is preceded by a network file download to the same host within 5 minutes.
  - question: Did a process that read an extended attribute subsequently make a network connection to a known malicious or low-reputation destination?
    context: This question links the retrieval of potentially malicious data from an xattr with its use in command-and-control (C2) communications. A process reading data from an xattr and immediately making an outbound connection to an IP or domain on a threat intelligence feed is a strong indicator that a hidden payload has been activated.
    answer_sources:
      - Linux Auditd logs (syscall=getxattr)
      - Sysmon for Linux Event ID 1
      - Sysmon for Linux Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Applicable to the Internet gateway, DNS servers, and endpoint devices of privileged users.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          CREATE a stateful rule that triggers when a process reads an extended attribute (via 'getfattr' or 'getxattr' syscall).
          CORRELATE if, within 60 seconds, the same PID or a child process initiates an outbound network connection.
          ALERT IF the destination IP is on a threat intelligence feed OR the destination domain has a low reputation score.
  - question: Did a process that read an extended attribute subsequently make a network connection to a destination that is rare or anomalous for the host?
    context: This question provides a way to detect suspicious C2 activity without relying on pre-existing threat intelligence. By establishing a baseline of normal network behavior for each host, we can identify connections to destinations that are unusual in terms of their geography, network provider (ASN), or port. A connection with these rare characteristics following an xattr read is highly suspicious.
    answer_sources:
      - Linux Auditd logs (syscall=getxattr)
      - Sysmon for Linux Event ID 1
      - Sysmon for Linux Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Applicable to the Internet gateway, DNS servers, and endpoint devices of privileged users.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each process that reads an xattr, enrich its subsequent network connections with ASN, geo-location, and domain age.
          BUILD a 90-day historical baseline of destination countries, ASNs, and ports for each host.
          SCORE each new connection based on rarity (e.g., new country, new ASN, non-standard port).
          ALERT on any connection sequence originating from an xattr-reading process that accumulates a risk score above a defined threshold.
  - question: Can graph analysis reveal isolated activity clusters where a process reads an extended attribute and then connects to a rare network destination?
    context: This question uses advanced graph analytics to visualize and detect the entire attack chain as a single, connected event. By modeling processes, files, and network endpoints as a graph, we can apply algorithms to find small, isolated subgraphs of activity. A subgraph containing a process that reads an xattr and then connects to a rare external IP is a powerful and high-fidelity indicator of compromise.
    answer_sources:
      - Linux Auditd logs (syscall=getxattr)
      - Sysmon for Linux Event ID 1
      - Sysmon for Linux Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Applicable to the Internet gateway, DNS servers, and endpoint devices of privileged users.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          CONSTRUCT a graph where nodes are processes, files, and remote network endpoints, and edges represent interactions (e.g., 'reads_xattr_from', 'connects_to').
          APPLY a community detection algorithm to identify isolated subgraphs.
          SCORE subgraphs based on features like the presence of a 'reads_xattr_from' edge and the rarity of any network nodes.
          ALERT on subgraphs scored as 'suspicious'.