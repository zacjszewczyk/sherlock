name: T1553.004: Install Root Certificate
id: f4a2b1c8-d3e4-4f5a-8b6c-7d9e0f1a2b3c
description: This playbook focuses on detecting adversary attempts to evade defenses by installing a malicious root certificate. Such an action allows an adversary to bypass trust-based security controls, enabling activities like man-in-the-middle attacks or making malicious software and websites appear legitimate. Detections are based on identifying certificate installations that are unapproved or explicitly blocked, monitoring the use of command-line tools for certificate management, flagging certificates with anomalously low prevalence across the enterprise, identifying installations initiated by unauthorized users or processes, and correlating certificate installations with subsequent suspicious network activity.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a new root certificate been installed that is either on a known-malicious blocklist or not on the approved enterprise allowlist?
    context: Adversaries may install malicious root certificates to bypass certificate validation checks, enabling man-in-the-middle attacks or allowing malicious code to appear trusted. This question aims to detect such installations by comparing the thumbprint of any newly installed certificate against curated lists of known-bad and known-good certificates. An unapproved or explicitly blocked certificate is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Windows Registry (HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Zeek ssl.log
      - Domain Controllers, Public-facing Web Servers, Enterprise Certificate Authority Servers, Endpoint devices, Centralized log aggregation platform (SIEM)
    range: Last 90 days
    queries:
      - language: pseudocode
        query: SEARCH (Sysmon EID 13 AND RegistryPath CONTAINS 'Root\Certificates') OR (Windows CAPI2 EID 41) | EXTRACT CertificateThumbprint | LOOKUP against blocklist AND allowlist | WHERE InBlocklist=true OR InAllowlist=false | ALERT
  - question: Has a rare or uncommon certificate issuer been observed in network traffic that is not on the enterprise allowlist?
    context: Legitimate TLS traffic is typically associated with a finite set of common, trusted certificate issuers. An adversary might use a self-signed certificate or a certificate from a rare or compromised Certificate Authority. This question seeks to identify these outliers by calculating the prevalence of issuers across the network and flagging those that are both rare and not explicitly trusted.
    answer_sources:
      - Zeek ssl.log
      - Domain Controllers, Public-facing Web Servers, Enterprise Certificate Authority Servers, Endpoint devices, Centralized log aggregation platform (SIEM)
    range: Last 90 days
    queries:
      - language: pseudocode
        query: SEARCH Zeek ssl.log | GROUPBY issuer | CALCULATE prevalence | WHERE prevalence < 0.05% | LOOKUP against allowlist | WHERE InAllowlist=false | INVESTIGATE hosts
  - question: Has a newly observed certificate been classified as malicious by a machine learning model based on its intrinsic properties?
    context: Malicious certificates often have properties that distinguish them from legitimate ones, such as unusually long or short validity periods, weak cryptographic algorithms, or high-entropy subject/issuer strings. This question leverages a machine learning model trained to recognize these patterns to score new certificates and flag those with a high probability of being malicious for review.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Windows Registry (HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Zeek ssl.log
      - Domain Controllers, Public-facing Web Servers, Enterprise Certificate Authority Servers, Endpoint devices, Centralized log aggregation platform (SIEM)
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON new_certificate_observed | EXTRACT features (validity, key_length, algorithm, entropy) | SCORE with ML_model | IF score > confidence_threshold | ALERT
  - question: Was a command-line utility like certutil.exe or PowerShell used to install a certificate into a root trust store?
    context: Adversaries frequently use built-in system utilities to perform administrative tasks, including installing certificates. This question directly hunts for the command-line execution of tools like `certutil.exe` and PowerShell cmdlets (`Import-Certificate`, `Install-Certificate`) with arguments specifically targeting the installation of a certificate into a system's root store, which is a highly privileged and suspicious action if not part of a planned administrative task.
    answer_sources:
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 1 (Process Creation)
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - All Windows Endpoints and Servers, particularly Domain Controllers, administrative workstations, and developer machines.
    range: Last 90 days
    queries:
      - language: pseudocode
        query: SEARCH (Sysmon EID 1 OR WEF EID 4688) | WHERE (ProcessName='certutil.exe' AND CommandLine CONTAINS '-addstore' AND CommandLine CONTAINS 'root') OR (ProcessName='powershell.exe' AND (CommandLine CONTAINS 'Import-Certificate' OR CommandLine CONTAINS 'Install-Certificate') AND CommandLine CONTAINS 'Cert:\LocalMachine\Root') | ALERT
  - question: Did a certificate management command exhibit unusually high command-line entropy, potentially indicating obfuscation?
    context: To evade simple signature-based detection, adversaries may use randomized or obfuscated file paths and arguments in their commands. This question aims to detect such evasion by baselining the normal complexity (entropy) of legitimate certificate management commands and flagging any new command whose entropy is anomalously high, suggesting it may be algorithmically generated or obfuscated.
    answer_sources:
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 1 (Process Creation)
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - All Windows Endpoints and Servers, particularly Domain Controllers, administrative workstations, and developer machines.
    range: Last 90 days
    queries:
      - language: pseudocode
        query: SEARCH (Sysmon EID 1 OR WEF EID 4688) AND ProcessName IN ('certutil.exe', 'powershell.exe') | CALCULATE entropy of CommandLine | COMPARE against baseline | IF entropy > 98th_percentile | ALERT
  - question: Was a certificate installation command initiated by an anomalous or unexpected parent process chain?
    context: Legitimate administrative actions, including certificate installation, are typically initiated from predictable process chains (e.g., an admin tool spawning `certutil.exe`). A malicious installation is more likely to originate from an unusual parent, such as a compromised Office application or web browser. This question uses a sequence model to learn normal process execution chains and identify deviations that indicate a potentially malicious certificate installation.
    answer_sources:
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 1 (Process Creation)
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - All Windows Endpoints and Servers, particularly Domain Controllers, administrative workstations, and developer machines.
    range: Last 90 days
    queries:
      - language: pseudocode
        query: FOR each certificate_install_command | GET process_execution_chain | SCORE sequence with LSTM_model | IF anomaly_score is high (e.g., winword.exe -> powershell.exe -> Import-Certificate) | ALERT
  - question: Has a root certificate been installed on a host that has never been seen anywhere else in the environment before?
    context: Certificates deployed as part of legitimate software or operating system updates are typically distributed widely. A certificate that appears on only one host for the first time is highly suspect. This question aims to detect these "patient zero" installations by checking every new certificate against a historical inventory of all certificates seen across the enterprise, flagging any that are entirely novel.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Asset inventory or configuration management database (CMDB)
      - Centralized log aggregation platform (SIEM), All Windows Endpoints and Servers, Configuration Management Database (CMDB).
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON new_certificate_install (Sysmon EID 13) | EXTRACT thumbprint | SEARCH historical_inventory for thumbprint | IF not_found | ALERT 'First Seen In Environment'
  - question: Is there a root certificate installed on an unusually small number of endpoints compared to the overall population?
    context: A certificate that is present on only a handful of machines is an anomaly. This question systematically inventories all root certificates across all endpoints and calculates the prevalence of each one. Certificates that fall below a certain threshold (e.g., installed on fewer than 10 hosts or in the bottom 5% of prevalence) are flagged for review as they are unlikely to be part of a standard enterprise deployment.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Asset inventory or configuration management database (CMDB)
      - Centralized log aggregation platform (SIEM), All Windows Endpoints and Servers, Configuration Management Database (CMDB).
    range: Last 90 days
    queries:
      - language: pseudocode
        query: SCHEDULED DAILY: | GET all_installed_certs from all_endpoints | GROUPBY thumbprint | COUNT hosts | CALCULATE prevalence = host_count / total_hosts | WHERE prevalence < threshold | ALERT
  - question: Does a host have a highly unusual or unique combination of installed root certificates compared to its peers?
    context: Most hosts within an enterprise, especially those with similar roles, should have a similar set of trusted root certificates. This question uses clustering analysis (DBSCAN) to identify hosts that are outliers. By representing each host's certificate profile as a vector, the algorithm can group similar hosts together and isolate those that are "noise," indicating their trust store configuration is anomalous and warrants investigation.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Asset inventory or configuration management database (CMDB)
      - Centralized log aggregation platform (SIEM), All Windows Endpoints and Servers, Configuration Management Database (CMDB).
    range: Last 90 days
    queries:
      - language: pseudocode
        query: GET all_certs for all_hosts | CREATE host_certificate_vectors | APPLY DBSCAN clustering | IDENTIFY hosts marked as noise/outliers | ALERT
  - question: Was a certificate installation initiated by a process that is not an expected administrative tool, such as a web browser or office application?
    context: Certificate management is an administrative function and should only be initiated by specific system processes or administrator tools. An installation command spawned by a user application like a web browser, email client, or document editor is a major red flag, often indicating that a user was tricked into running a malicious file or that the application was exploited. This question specifically looks for these illegitimate parent-child process relationships.
    answer_sources:
      - Sysmon Event ID 1 (Process Creation)
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 13 (RegistryValue Set)
      - All Windows Endpoints and Servers, Identity and Access Management (IAM) systems for user context, Change Management Database (CMDB) for maintenance window data.
    range: Last 90 days
    queries:
      - language: pseudocode
        query: SEARCH (Sysmon EID 1 OR WEF EID 4688) AND ProcessName='certutil.exe' | IF ParentProcessName NOT IN (explorer.exe, mmc.exe, svchost.exe, ccmexec.exe) | ALERT
  - question: Was a root certificate installed by a user account that is not an administrator or has never performed this type of action before?
    context: Installing root certificates requires administrative privileges. This action should only be performed by a small, authorized set of system administrators or service accounts. This question aims to detect abuse of privilege or compromised accounts by identifying when a certificate installation is performed by a non-administrative user or by any user (even an admin) for whom this is a novel behavior.
    answer_sources:
      - Sysmon Event ID 1 (Process Creation)
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 13 (RegistryValue Set)
      - All Windows Endpoints and Servers, Identity and Access Management (IAM) systems for user context, Change Management Database (CMDB) for maintenance window data.
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON certificate_install_event | GET UserAccount | LOOKUP user_role and historical_activity | IF user_role IS NOT admin OR IS first_time_action for user | ALERT
  - question: Did a certificate installation event receive a high anomaly score from a UEBA model based on the context of the user, process, and time?
    context: A User and Entity Behavior Analytics (UEBA) model can provide a holistic assessment of risk by considering multiple factors simultaneously. This question leverages such a model to score the risk of a certificate installation by combining features like the user's role, the parent process, the time of day, and the specific command used. A confluence of anomalous factors (e.g., non-IT user, off-hours, spawned from Outlook) would generate a high-confidence alert.
    answer_sources:
      - Sysmon Event ID 1 (Process Creation)
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 13 (RegistryValue Set)
      - All Windows Endpoints and Servers, Identity and Access Management (IAM) systems for user context, Change Management Database (CMDB) for maintenance window data.
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON certificate_install_event | GATHER features (user, process, parent, time, command) | SCORE with UEBA_model | IF anomaly_score > threshold | ALERT
  - question: Shortly after a new root certificate was installed, did the host connect to known malicious or newly registered domains?
    context: A common adversary pattern is to install a malicious root certificate to enable secure (TLS/SSL) command and control (C2) communications. This question aims to detect this follow-on activity by correlating a certificate installation event with subsequent network traffic from the same host. Any connection to a destination flagged by threat intelligence within a short time window is highly indicative of a compromise.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 13 (RegistryValue Set)
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network Security Monitoring sensors (e.g., Zeek), DNS Resolvers, Endpoint log shippers, Centralized log aggregation platform (SIEM).
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON certificate_install_event (Sysmon EID 13) for host | WITHIN 60 minutes, SEARCH (Zeek DNS OR Zeek SSL) from host | LOOKUP destination against threat_intel_feed | IF match_found | ALERT
  - question: After a new root certificate was installed, did the host's outbound TLS traffic show a significant increase in domain randomness (SNI entropy)?
    context: Compromised hosts communicating with a C2 infrastructure that uses domain generation algorithms (DGAs) will exhibit a pattern of contacting many different, often random-looking domains. This question seeks to detect this behavior by baselining the normal entropy of Server Name Indication (SNI) values in a host's TLS traffic. A sharp, sustained increase in this entropy after a certificate installation suggests the host may be trying to establish a C2 channel.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 13 (RegistryValue Set)
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network Security Monitoring sensors (e.g., Zeek), DNS Resolvers, Endpoint log shippers, Centralized log aggregation platform (SIEM).
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON certificate_install_event for host | GET baseline_SNI_entropy for past 14 days | MONITOR SNI_entropy in 1-hour windows | IF current_entropy > (baseline + 2*stdev) | ALERT
  - question: Did a host's overall network behavior profile deviate significantly from its established baseline after a new root certificate was installed?
    context: An adversary's post-compromise activity (C2, exfiltration, lateral movement) often creates a network footprint that is fundamentally different from the host's normal behavior. This question uses an anomaly detection model (e.g., an autoencoder) trained on a host's normal network patterns. After a certificate installation, if the host's subsequent network traffic is flagged as a major behavioral shift by the model, it requires immediate investigation.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 13 (RegistryValue Set)
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network Security Monitoring sensors (e.g., Zeek), DNS Resolvers, Endpoint log shippers, Centralized log aggregation platform (SIEM).
    range: Last 90 days
    queries:
      - language: pseudocode
        query: ON certificate_install_event for host | FEED subsequent_network_vectors into host's autoencoder_model | CALCULATE reconstruction_error | IF reconstruction_error is high for a sustained period | ALERT