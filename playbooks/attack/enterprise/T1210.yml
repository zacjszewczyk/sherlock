name: "T1210: Exploitation of Remote Services"
id: "5f8a9e6b-8d7c-4a1e-9b0a-3d9f1c2b0e4a"
description: "This playbook helps investigate whether an adversary is exploiting remote services for lateral movement within the enterprise network. It focuses on identifying evidence such as network traffic matching known exploit signatures (e.g., EternalBlue, BlueKeep), remote execution tools (e.g., PsExec, WMIC) creating processes, network services spawning unusual child processes (e.g., cmd.exe, powershell.exe), service crashes following connection spikes, and hosts initiating internal network scanning shortly after receiving an inbound connection."
type: "technique"
related: 
  - "TA0008: Lateral Movement"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are NIDS signatures for known remote service exploits firing, and what is the full session context of the associated network traffic?"
    context: "This question aims to identify explicit, known attack patterns against services like SMB, RDP, or vCenter. By correlating a high-fidelity NIDS alert (e.g., for EternalBlue) with detailed network session logs (like Zeek's conn.log), an analyst can move beyond a simple alert to understand the full scope of the connection, including duration, data transferred, and connection state, which is crucial for verifying the exploit's success and identifying the attacker's source."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dce_rpc.log"
      - "Zeek rdp.log"
      - "Zeek files.log"
      - "Network sensors (e.g., Zeek) monitoring East-West traffic between server subnets, at the network perimeter, and within the DMZ."
      - "Network Intrusion Detection System (NIDS) alerts"
    range: "last 90 days"
    queries:
      - "pseudocode: JOIN NIDS_alerts ON (4-tuple, timestamp) WITH Zeek_conn_logs WHERE NIDS_signature CONTAINS 'known_exploit_CVE'"
  - question: "Are there any remote service connections exhibiting statistically anomalous metrics, such as unusually high data transfer or long duration, compared to their historical baseline?"
    context: "This question seeks to uncover exploit attempts or post-exploitation data transfers that don't match a known signature but deviate significantly from normal behavior. By baselining connection metrics (duration, bytes transferred) for each host and service, we can flag outliers (e.g., connections in the 99th percentile) that could represent a large exploit payload being delivered or a large volume of data being exfiltrated, even if the payload itself is unknown or encrypted."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dce_rpc.log"
      - "Zeek rdp.log"
      - "Zeek files.log"
      - "Network sensors (e.g., Zeek) monitoring East-West traffic between server subnets, at the network perimeter, and within the DMZ."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR EACH host, service: CALCULATE baseline (avg, stddev) of conn_duration, total_bytes. FIND connections WHERE metrics > baseline + (N * stddev)."
  - question: "Can a machine learning model identify malicious network traffic patterns associated with remote service exploitation that lack known signatures?"
    context: "This question leverages machine learning to find novel or obfuscated attacks that signature-based and statistical methods might miss. By training a classifier on a rich set of network flow features (like packet sizes, timing, and entropy), the model learns the subtle, complex characteristics of malicious traffic. This allows it to flag suspicious connections that look different from the vast amount of benign traffic, providing a powerful tool for discovering zero-day exploits or custom attacker tools."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dce_rpc.log"
      - "Zeek rdp.log"
      - "Zeek files.log"
      - "Network sensors (e.g., Zeek) monitoring East-West traffic between server subnets, at the network perimeter, and within the DMZ."
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY trained_classifier_model TO live_network_flows. REVIEW connections flagged as 'malicious' with high confidence."
  - question: "Are there any process creations or service installations indicative of common lateral movement tools like PsExec or WMIC?"
    context: "This question focuses on detecting the direct evidence of remote execution tools being used. By searching for specific command-line arguments ('wmic /node:', 'process call create'), service names ('PSEXESVC'), or files written to administrative shares ('ADMIN$'), analysts can find high-confidence indicators of an adversary moving laterally after a potential exploit."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4697"
      - "Windows Event ID 5145"
      - "Zeek smb_files.log"
      - "Endpoint Detection and Response (EDR) logs from Domain Controllers, application servers, management servers (e.g., vCenter), and high-value user workstations."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_logs WHERE command_line CONTAINS 'wmic /node:' OR command_line CONTAINS 'PSEXESVC.exe'. CORRELATE with service_install_logs and smb_file_logs."
  - question: "Are any extremely rare command-line arguments being executed on servers, particularly by network service accounts?"
    context: "This question aims to find unknown or custom attacker tools by focusing on rarity. Most system activity is repetitive and predictable. A command line that has been seen only a few times (or never before) across the entire enterprise, especially when executed by a sensitive account, is highly suspicious and warrants investigation as it could be a sign of post-exploitation activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4697"
      - "Windows Event ID 5145"
      - "Zeek smb_files.log"
      - "Endpoint Detection and Response (EDR) logs from Domain Controllers, application servers, management servers (e.g., vCenter), and high-value user workstations."
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE frequency of all command_lines. ALERT on command_lines with frequency in bottom 1st percentile, especially if user is a service account."
  - question: "Are there anomalous sequences of process creations following an inbound remote service connection that deviate from normal operational workflows?"
    context: "This question uses machine learning to understand the 'story' of what happens after a remote connection. Normal administrative activity follows a predictable sequence of process events. An attacker's actions will likely deviate from this norm. By training a model on benign sequences, we can detect any new sequence with high reconstruction error, indicating it is abnormal and possibly malicious post-exploitation behavior."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4697"
      - "Windows Event ID 5145"
      - "Zeek smb_files.log"
      - "Endpoint Detection and Response (EDR) logs from Domain Controllers, application servers, management servers (e.g., vCenter), and high-value user workstations."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each host, IDENTIFY process sequences after inbound remote connections. APPLY LSTM_autoencoder_model. ALERT on sequences with high reconstruction_error."
  - question: "Is a critical network service process (e.g., lsass.exe, services.exe) spawning unexpected child processes like cmd.exe or powershell.exe?"
    context: "This question looks for a classic sign of exploitation where a vulnerable service is manipulated to execute arbitrary code. A process like 'lsass.exe' should never have a child process. A service host like 'services.exe' spawning a command shell is highly anomalous and a strong indicator that an adversary has successfully exploited the service to gain code execution on the system."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Process creation logs from critical service hosts such as Domain Controllers, Exchange servers, VMware vCenter servers, and internet-facing web servers."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_logs WHERE (parent_process IS 'lsass.exe') OR (parent_process IS 'services.exe' AND child_process IS 'cmd.exe' OR 'powershell.exe')."
  - question: "Are there any parent-child process relationships occurring that are statistically rare or have never been seen before for that specific parent process?"
    context: "This question provides a way to generalize the detection of anomalous process relationships beyond a few hardcoded rules. By creating a frequency distribution of all observed parent-child process pairs, we can statistically identify any new or extremely rare combination. This helps find novel attacker techniques that use unexpected processes to spawn shells or other tools."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Process creation logs from critical service hosts such as Domain Controllers, Exchange servers, VMware vCenter servers, and internet-facing web servers."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each parent_process, CREATE baseline of child_process frequencies. ALERT on any new parent-child pair or pairs in the lowest 1% frequency."
  - question: "Can a machine learning model distinguish between benign and malicious parent-child process pairs, even for novel combinations?"
    context: "This question applies supervised learning to add more context to the analysis of process relationships. Simple statistical rarity can be noisy. A classification model can learn from features like process names, command line characteristics, and user context to make a more intelligent decision about whether a specific parent-child event is malicious, helping to reduce false positives and find more subtle threats."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Process creation logs from critical service hosts such as Domain Controllers, Exchange servers, VMware vCenter servers, and internet-facing web servers."
    range: "last 90 days"
    queries:
      - "pseudocode: EXTRACT features from parent-child process events. APPLY trained_classifier_model. REVIEW pairs flagged as 'malicious' with high confidence."
  - question: "Are critical services crashing or logging errors immediately after receiving an inbound connection from an internal source?"
    context: "This question seeks to identify failed exploit attempts or exploits that cause instability. A failed buffer overflow or other exploit attempt can often cause the target service to crash. By correlating service crash events (like Event ID 1000) with recent inbound network connections to that service, analysts can pinpoint the likely source of the attack attempt."
    answer_sources:
      - "Windows Event ID 7031"
      - "Windows Event ID 7034"
      - "Windows Event ID 1000"
      - "Zeek conn.log"
      - "Windows Event Logs from externally-facing application servers and internal servers running potentially vulnerable remote services (e.g., RDP, SMB)."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH for service_crash_events. IF found, LOOKUP network_logs for inbound connections to the crashed service port from the last 5 minutes."
  - question: "Is there a statistically significant increase in the rate of service errors on a host that correlates with a spike in inbound connection attempts?"
    context: "This question helps detect brute-force or scanning activity that may not crash a service but causes it to generate errors. By monitoring the rate of service errors and comparing it to a moving average baseline, we can detect anomalous spikes. Correlating this with a corresponding spike in connection attempts from a single source strengthens the evidence of a targeted attack or enumeration attempt."
    answer_sources:
      - "Windows Event ID 7031"
      - "Windows Event ID 7034"
      - "Windows Event ID 1000"
      - "Zeek conn.log"
      - "Windows Event Logs from externally-facing application servers and internal servers running potentially vulnerable remote services (e.g., RDP, SMB)."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each host, MONITOR rate of service_error_events. ALERT if rate > 3 * stddev of 24hr_moving_average. CORRELATE with connection_rate_spikes."
  - question: "Does a time-series anomaly detection model identify a cause-and-effect relationship between spikes in inbound connections and subsequent service error events?"
    context: "This question uses a more advanced analytical technique to formally link network activity to service instability. By modeling both the inbound connection rate and the service error rate as time-series data, an anomaly detection algorithm can identify when anomalous events in both streams occur in close succession, providing strong, automated evidence of a cause-and-effect relationship indicative of an exploit attempt."
    answer_sources:
      - "Windows Event ID 7031"
      - "Windows Event ID 7034"
      - "Windows Event ID 1000"
      - "Zeek conn.log"
      - "Windows Event Logs from externally-facing application servers and internal servers running potentially vulnerable remote services (e.g., RDP, SMB)."
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY SARIMA model to time-series of (connection_counts) and (error_counts). ALERT on correlated anomalies detected in both series."
  - question: "Is a host that recently received a remote service connection now initiating a large number of connections to other internal hosts?"
    context: "This question aims to detect a common post-exploitation step: internal reconnaissance. After an adversary compromises a machine via a remote service, they often use it as a pivot point to scan the internal network. This rule looks for that specific sequence of events: an inbound exploit followed by outbound scanning, by flagging a host that contacts many unique internal IPs shortly after being compromised."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek notice.log"
      - "Core network switches and traffic sensors monitoring East-West traffic between internal subnets."
    range: "last 90 days"
    queries:
      - "pseudocode: FIND hosts with recent inbound remote_service connection. For those hosts, CHECK if they initiated connections to > 20 unique IPs in a 1-minute window."
  - question: "Is any host exhibiting a sudden, statistically significant increase in the entropy of its destination IP addresses, indicating a shift to scanning behavior?"
    context: "This question provides a more robust, mathematical way to detect scanning. Normal hosts talk to a small, regular set of other hosts (low entropy). A host that begins scanning talks to many different, random-seeming hosts (high entropy). By monitoring the entropy of a host's destination IPs, we can detect a sudden shift from normal behavior to scanning behavior without relying on a fixed threshold."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek notice.log"
      - "Core network switches and traffic sensors monitoring East-West traffic between internal subnets."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each source_IP, CALCULATE Shannon entropy of destination_IPs in 5-min windows. ALERT if entropy increases > 2 stddev from its baseline."
  - question: "Can a clustering algorithm identify hosts that are behaving as network scanners by detecting them as outliers or noise points in network traffic patterns?"
    context: "This question uses unsupervised machine learning to find scanners by identifying hosts that don't fit in. Normal traffic (e.g., a web server talking to its database) forms dense clusters of communication. A compromised host scanning the network connects from one source to many disparate destinations, a pattern that does not fit any normal cluster. A density-based algorithm like DBSCAN will naturally label this scanning activity as 'noise' or an outlier, making it easy to spot."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek notice.log"
      - "Core network switches and traffic sensors monitoring East-West traffic between internal subnets."
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY DBSCAN clustering on network_logs using (src_IP, dst_IP, dst_port) as features. INVESTIGATE points classified as 'noise'."