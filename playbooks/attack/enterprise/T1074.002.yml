name: "T1074.002: Remote Data Staging"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: |
  This playbook helps investigate whether an adversary is collecting and staging data from multiple systems for exfiltration (T1074.002). The investigation focuses on identifying anomalous archive file creation, which is a common precursor to data exfiltration. Indicators include the creation of archive files that match known-bad threat intelligence; archives created by unusual processes (e.g., powershell.exe) or in unusual locations (e.g., %PUBLIC%, %TEMP%); hosts acting as central collection points by receiving a high volume of inbound data before creating a large archive; command-line activity that references multiple distinct source directories into a single destination file; and processes or users reading from an anomalously high number of distinct directories in a short period. The goal is to detect the aggregation of data on an internal system before it is moved out of the network.
type: "technique"
related:
  - "TA0009: Collection"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Has a recently created archive file been identified as malicious by threat intelligence feeds based on its hash or filename?"
    context: |
      This question aims to detect the most straightforward data staging attempts where adversaries use known malicious tools or output files. A match against a threat intelligence feed provides a high-confidence indicator that an archive file, potentially containing staged data, is associated with a known threat actor or campaign. This allows for rapid identification and response to confirmed malicious activity.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Common staging directories (%TEMP%, %PUBLIC%, C:\\Perflogs), file servers, and domain controllers."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH file_creation_events OR process_creation_events WHERE file_extension IN ['.zip', '.rar', '.7z', '.tar', '.gz'] | JOIN threat_intel_feed ON file_hash OR file_name | ALERT if match_found"
  - question: "Is there an anomalous frequency of archive file creation by any process, or are non-standard processes creating archives?"
    context: |
      This question helps uncover data staging by identifying unusual patterns in archive creation. Adversaries may use legitimate tools in an illegitimate manner or use custom/uncommon tools. By baselining normal activity, this detects deviations, such as a backup tool running at an odd time or a process that has never created an archive before suddenly doing so. It helps find the 'unusual in the usual'.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Common staging directories (%TEMP%, %PUBLIC%, C:\\Perflogs), file servers, and domain controllers."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH file_creation_events WHERE file_extension IN archive_extensions | GROUP BY process_name, hourly_window | COMPARE count to historical_baseline (95th percentile) OR CHECK if process_name NOT IN allowed_archiver_list | ALERT on deviation or non-allowed process"
  - question: "Does a machine learning model classify a recent archive creation event as malicious based on its context?"
    context: |
      This question leverages machine learning to perform a sophisticated, multi-faceted risk assessment of archive creation events. Unlike simple rules, an ML model can weigh various subtle features simultaneously (e.g., who spawned the process, the complexity of the command, where the file was saved). This allows for the detection of novel or cleverly disguised staging techniques that might evade simpler symbolic or statistical checks by appearing benign in isolation.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Common staging directories (%TEMP%, %PUBLIC%, C:\\Perflogs), file servers, and domain controllers."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each file_creation_event with archive_extension | EXTRACT features (parent_process, cmd_entropy, file_path, etc.) | PREDICT with classification_model | ALERT if prediction is 'malicious' AND confidence > 0.9"
  - question: "Has an archive file been created in a sensitive or unusual directory by a process not typically used for archiving?"
    context: |
      This question focuses on the 'where' and 'who' of archive creation. Adversaries often write files to world-writable or temporary directories to avoid permission issues and blend in. They also frequently use built-in system utilities like PowerShell or cmd.exe to perform archiving, rather than installing dedicated software. This rule-based check flags this suspicious combination of location and tool.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "User workstations, publicly writable network shares, and web server directories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH file_creation_events WHERE file_extension IN archive_extensions AND file_path IN sensitive_directories AND process_name NOT IN allowed_archivers | ALERT on match"
  - question: "Has an archive file been created by a process that was spawned by an unusual parent process?"
    context: |
      This question helps detect when legitimate archiving tools are invoked by an illegitimate process. For example, WinRAR.exe is normally launched by explorer.exe (a user double-clicking a file). If it's suddenly launched by a web server process (w3wp.exe) or a scheduled task run by svchost.exe, it's highly anomalous. By baselining the parent-child relationships that lead to archiving, we can spot suspicious execution chains that may indicate an adversary is orchestrating data staging.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "User workstations, publicly writable network shares, and web server directories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events WHERE child_process creates_archive | CALCULATE probability of parent_process -> child_process | ALERT if probability < 0.05"
  - question: "Has there been an anomalous surge in the volume of archive files being created in specific types of directories?"
    context: |
      This question aims to detect large-scale data staging by monitoring the rate of archive creation. An adversary preparing for exfiltration will often create many archive files in a short period. A time-series model can learn the normal 'rhythm' of this activity for different parts of the file system (e.g., user folders vs. temp folders) and alert when a sudden, unexpected spike occurs, which is a strong indicator of mass data collection.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "User workstations, publicly writable network shares, and web server directories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each directory_type (e.g., temp, public) | MODEL hourly archive creation volume with time_series_model | PREDICT expected volume | ALERT if actual_volume significantly exceeds prediction"
  - question: "Has a host shown signs of being a data collection point by receiving an unusual number of internal connections before creating a large archive file?"
    context: |
      This question correlates network and host activity to identify a central staging server. An adversary might funnel data from many compromised machines to a single internal host before archiving and exfiltrating. This query looks for a host that suddenly receives an unusual amount of traffic from many unique internal sources, and then shortly after, creates a large archive file. This two-phase detection is a strong indicator of a designated collection point.
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Internal network segments (core switches), critical servers (file servers, database servers), and the DMZ."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH network_logs for host with > 10 unique internal source IPs in 5min | IF found, SEARCH file_creation_logs on that host for archive > 100MB in next 10min | ALERT on correlation"
  - question: "Has a host's network activity deviated statistically, followed by the creation of a large archive file?"
    context: |
      This question seeks to identify staging hosts by finding statistical anomalies in network traffic. Instead of a fixed threshold, it establishes a dynamic baseline for each host's typical inbound data volume and number of connections. A significant deviation (e.g., 3 standard deviations above the norm) flags the host as suspicious. If this network anomaly is quickly followed by the creation of a large archive on the same host, the suspicion is elevated, providing a more robust signal than either event alone.
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Internal network segments (core switches), critical servers (file servers, database servers), and the DMZ."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each host, SEARCH network_logs | ALERT if inbound_bytes or unique_sources > 3 * stdev(baseline) in 15min | IF alert, ESCALATE to high-severity if large_archive_created within 10min"
  - question: "Can network traffic clustering identify central data aggregator hosts, and does host activity confirm this role?"
    context: |
      This question applies unsupervised machine learning to network logs to discover staging hosts without pre-defined rules. A clustering algorithm can automatically group hosts with similar traffic patterns, identifying outliers that act as 'hubs' receiving data from many 'spokes'. These network-identified hubs are then cross-referenced with host-level process logs to see if they are also executing compression or archiving commands, providing strong, multi-source evidence of a data staging role.
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Internal network segments (core switches), critical servers (file servers, database servers), and the DMZ."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "CLUSTER network_logs by destination_host, source_count, total_bytes | IDENTIFY cluster centroids as potential aggregators | CORRELATE aggregator hosts with process_logs for archiving commands"
  - question: "Has a command-line utility been used to copy files from multiple distinct source directories into a single destination file?"
    context: |
      This question inspects the command line itself for evidence of data aggregation. Adversaries often use built-in tools like 'robocopy' or 'Copy-Item' in a single command to gather files from various locations (e.g., user profiles, project folders) and consolidate them into one place. A query that uses regular expressions to detect multiple source paths pointing to a single destination file can effectively catch this explicit staging behavior.
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers, administrator workstations, and servers hosting development or source code repositories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events for cmd.exe, powershell.exe, robocopy.exe | PARSE command_line with regex for multiple source paths and one destination path | ALERT on match"
  - question: "Has a command line with unusually high complexity or entropy been executed by a file manipulation utility?"
    context: |
      This question aims to detect obfuscated or complex commands used for staging. Adversaries may use long, complicated command lines to gather many specific files, or they may obfuscate the commands to evade simple keyword-based detection. By calculating the Shannon entropy (a measure of randomness and complexity) of a command line and comparing it to a baseline for that specific process (e.g., 'powershell.exe'), we can flag commands that are statistically unusual and warrant further inspection.
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers, administrator workstations, and servers hosting development or source code repositories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each process_creation_event with file_manipulation_keywords | CALCULATE entropy of command_line | ALERT if entropy > 98th percentile of baseline for that process_name"
  - question: "Has a command-line execution shown a significant structural deviation from normal patterns for that process?"
    context: |
      This question uses a machine learning model to learn the 'grammar' of normal command-line arguments for a given process. An autoencoder is trained on benign command sequences and then used to evaluate new commands. If a new command's structure is so different from the training data that the model cannot accurately reconstruct it, this high 'reconstruction error' signals a significant anomaly. This can detect novel or unusual command patterns used for staging that don't rely on specific keywords or high entropy.
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain Controllers, administrator workstations, and servers hosting development or source code repositories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each new command_line_event | FEED into sequence_autoencoder_model for that process | CALCULATE reconstruction_error | ALERT if error > dynamic_threshold"
  - question: "Has a process typically associated with network services been observed reading files from sensitive user directories?"
    context: |
      This question seeks to identify process behavior that violates expected boundaries. A web server process (e.g., 'w3wp.exe') has no legitimate reason to be reading files from a user's 'Documents' folder. By enabling file access auditing on critical directories and creating rules that alert when specific processes access files outside their normal operational scope, we can detect when a compromised service is being abused to gather sensitive user data for staging.
    answer_sources:
      - "Windows Event ID 4663"
      - "File shares containing PII, financial, or intellectual property data, user home directories, and code repositories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "PREREQ: Enable file access auditing on critical folders | SEARCH file_read_events (4663) WHERE process_name IN network_service_list AND file_path IN user_data_directories | ALERT on match"
  - question: "Has a user or process context suddenly started reading files from an anomalously high number of unique directories?"
    context: |
      This question detects the 'smash and grab' behavior of data collection. Before staging, an adversary must first read the target data. This often involves rapidly traversing the file system and accessing numerous directories. By establishing a baseline for how many unique directories a user or process typically interacts with in a given time frame (e.g., one hour), we can use a statistical threshold (e.g., 99th percentile) to detect a sudden, wide-ranging file access pattern indicative of a data gathering operation.
    answer_sources:
      - "Windows Event ID 4663"
      - "File shares containing PII, financial, or intellectual property data, user home directories, and code repositories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "FOR each user/process, COUNT unique directories read from file_read_events (4663) per hour | COMPARE count to historical baseline for that user/process | ALERT if count > 99th percentile"
  - question: "Does file access activity show a 'hub-and-spoke' pattern where a single process is rapidly accessing a large number of previously unrelated files?"
    context: |
      This question uses a more advanced, graph-based approach to visualize and detect data gathering. File access events can be modeled as a graph where processes and files are nodes and a 'read' action is an edge. Normally, processes interact with a somewhat consistent set of files. A data staging operation will appear on this graph as a sudden 'starburst' or 'hub-and-spoke' pattern, where a single process node rapidly creates edges to many file nodes it has never touched before. Detecting the formation of this pattern is a strong indicator of mass-read activity.
    answer_sources:
      - "Windows Event ID 4663"
      - "File shares containing PII, financial, or intellectual property data, user home directories, and code repositories."
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "MODEL file_read_events as a process-file bipartite graph | USE graph anomaly detection to identify formation of 'hub-and-spoke' patterns | ALERT on detection of a new hub process"