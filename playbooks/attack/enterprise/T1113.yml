name: T1113: Screen Capture
id: d2b1b3e0-6a5c-4f9e-8d7c-9a0b1c2d3e4f
description: "Investigates whether an adversary is collecting sensitive data by capturing the screen. This is done by looking for the use of unauthorized screen capture utilities, misuse of native Windows tools, non-interactive processes creating image files, executions in unusual user contexts, suspicious exfiltration of image files, and behavioral anomalies like periodic or off-hours execution."
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Are there any process creation or network file transfer events that match known unauthorized screen capture utilities?
    context: This question seeks to identify the use of known malicious or unauthorized screen capture tools by comparing process and file indicators against a threat intelligence feed. By continuously monitoring process creation events and network file transfers, analysts can detect executables or file patterns associated with these tools, enabling a rapid response to a direct threat indicator.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - User workstations
      - Virtual Desktop Infrastructure (VDI) instances
      - Network egress points (e.g., firewalls, proxies)
    range: last 90 days
    queries:
      - "SEARCH process_creation_events OR network_file_transfers WHERE (process_hash IN threat_intel_list OR process_name IN threat_intel_list) OR (file_name MATCHES regex_patterns OR file_mime_type MATCHES regex_patterns)"
  - question: Are there any processes matching screen capture tool name patterns that are statistically rare within the enterprise?
    context: This question aims to uncover stealthy screen capture tools that may not be in threat intelligence feeds but are uncommon in the environment. By calculating the prevalence of all processes, the system can flag a process that matches a screen capture name pattern but is not on an allowlist and appears on a very small percentage of endpoints. This statistical rarity suggests it is not standard software and warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - User workstations
      - Virtual Desktop Infrastructure (VDI) instances
      - Network egress points (e.g., firewalls, proxies)
    range: last 90 days
    queries:
      - "CALCULATE prevalence of all process_hashes over a 30-day window. ALERT if process_name matches screen_capture_pattern AND process_hash NOT IN allowlist AND prevalence < 1%."
  - question: Can a machine learning model identify malicious processes associated with screen capture activity, even for unknown tools?
    context: This question leverages a binary classification model to detect novel or obfuscated screen capture malware. The model analyzes process metadata (parent process, user context, command-line arguments) to score it as 'malicious' or 'benign'. This approach can identify threats that evade signature-based detection by focusing on behavioral characteristics, flagging any high-scoring malicious process that also exhibits screen capture-related API or file activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - User workstations
      - Virtual Desktop Infrastructure (VDI) instances
      - Network egress points (e.g., firewalls, proxies)
    range: last 90 days
    queries:
      - "INPUT process_metadata (parent, user, cmdline, entropy) INTO classification_model. ALERT if model_score == 'malicious' AND process_behavior includes screen_capture_api_calls OR file_io."
  - question: Are native Windows utilities or PowerShell scripts being used with arguments or commands indicative of automated or hidden screen capture?
    context: This question focuses on the malicious use of legitimate tools (Living off the Land). It looks for executions of built-in utilities like psr.exe or snippingtool.exe, or PowerShell scripts using .NET APIs, with command-line arguments that suggest automation or stealth (e.g., /silent, /start). Detecting this abuse is critical as it bypasses detections focused solely on non-native malware.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - User workstations, especially those of privileged users or personnel handling sensitive data (e.g., finance, legal, R&D)
    range: last 90 days
    queries:
      - "SEARCH process_events OR powershell_logs WHERE (process_name IN ('psr.exe', 'snippingtool.exe') AND command_line CONTAINS suspicious_args) OR (powershell_script_block CONTAINS '[System.Drawing.Graphics]::CopyFromScreen')."
  - question: Are there any PowerShell or other command-line executions that show statistical signs of obfuscation when used for screen capture?
    context: This question aims to detect obfuscated scripts used for screen capture by analyzing their statistical properties. By profiling the normal length and entropy (randomness) of command lines for processes like powershell.exe, analysts can identify significant deviations. An unusually high Z-score for these metrics suggests a complex, potentially obfuscated command, which is a common tactic for hiding malicious code.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - User workstations, especially those of privileged users or personnel handling sensitive data (e.g., finance, legal, R&D)
    range: last 90 days
    queries:
      - "PROFILE command_line_length and entropy for each user/process. CALCULATE Z-score for new executions. ALERT if Z-score > 3.0."
  - question: Is there evidence of screen capture utilities being executed with a machine-like, periodic frequency?
    context: This question seeks to identify automated screen capture by analyzing the timing of execution events. Adversaries often configure malware to take screenshots at regular intervals. By applying time-series analysis to execution timestamps, analysts can detect strong periodic signals (e.g., a process running every 5 minutes) that are uncharacteristic of human behavior and not linked to a legitimate scheduled task.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - User workstations, especially those of privileged users or personnel handling sensitive data (e.g., finance, legal, R&D)
    range: last 90 days
    queries:
      - "INGEST execution timestamps for screen_capture_utilities per host. APPLY time-series analysis to identify periodic signals. ALERT on strong periodicity not tied to a known scheduled task."
  - question: Is a process running in a non-interactive context creating image files in unusual locations?
    context: This question aims to detect screen captures taken by background processes or services, which is highly anomalous behavior. By correlating process creation events with file creation events, an alert can be triggered if a process with a non-interactive parent (like services.exe) creates a file with a common image extension (.png, .jpg), indicating a potential automated capture mechanism.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 4688
      - Endpoint file systems (especially temp directories like C:\Windows\Temp\, AppData\Local\Temp)
      - Shared network drives, and staging servers
    range: last 90 days
    queries:
      - "CORRELATE process_creation (Sysmon EID 1) with file_creation (Sysmon EID 11). ALERT if process_parent IN ('services.exe', 'svchost.exe') AND file_extension IN ('.png', '.jpg', '.bmp')."
  - question: Are there statistically rare file creation events involving image files and non-standard processes or locations?
    context: This question uses statistical analysis to find anomalous file creation activity that might indicate screen capture. By building a baseline of normal (process, parent process, file extension, directory) combinations, the system can flag any new event that is a statistical rarity (e.g., in the bottom 0.1% of frequency). This can uncover malware dropping screenshots in unexpected places or using unusually named processes.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 4688
      - Endpoint file systems (especially temp directories like C:\Windows\Temp\, AppData\Local\Temp)
      - Shared network drives, and staging servers
    range: last 90 days
    queries:
      - "CREATE frequency table of (process, parent, extension, directory) tuples over 30 days. ALERT if a new file_creation_event tuple has a frequency < 0.1%."
  - question: Can an unsupervised machine learning model detect anomalous file creation events indicative of screen capture?
    context: This question applies anomaly detection to find screen capture activity that deviates from established norms. An unsupervised model (like an Isolation Forest) is trained on features of legitimate file creation events. The trained model then scores new events in real-time, alerting on any that are identified as significant outliers, which could represent a malicious process creating and saving a screenshot.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 4688
      - Endpoint file systems (especially temp directories like C:\Windows\Temp\, AppData\Local\Temp)
      - Shared network drives, and staging servers
    range: last 90 days
    queries:
      - "TRAIN Isolation Forest model on legitimate file_creation_event features. SCORE new events in real-time. ALERT on events flagged as significant outliers."
  - question: Is a known screen capture utility being executed by a system-level account or in a non-interactive session?
    context: This question seeks to identify a high-fidelity indicator of malicious activity where a screen capture tool is run with elevated, non-interactive privileges. Legitimate use of these tools is almost always by an interactive user. Execution under a SYSTEM account or spawned by a remote administration tool (like psexec.exe) is a strong sign of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Process execution logs on all endpoints, particularly Domain Controllers and critical application servers where interactive GUI use is rare
    range: last 90 days
    queries:
      - "SEARCH process_events WHERE process_name IN screen_capture_tools AND (user_context IS 'NT AUTHORITY\\SYSTEM' OR parent_process IN ('wmic.exe', 'psexec.exe', 'svchost.exe'))."
  - question: Is a screen capture utility being spawned by a statistically rare parent process?
    context: This question aims to detect anomalous execution chains by focusing on the parent-child process relationship. By maintaining a frequency distribution of parent processes for every child process across the enterprise, the system can flag when a screen capture tool is spawned by a parent that is not typically associated with it. This "rare parent" relationship is a strong indicator of unusual or malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Process execution logs on all endpoints, particularly Domain Controllers and critical application servers where interactive GUI use is rare
    range: last 90 days
    queries:
      - "MAINTAIN frequency distribution of parent processes for each child process. ALERT if screen_capture_utility is spawned by a parent not in its top 99% most frequent parents."
  - question: Can a machine learning model classify a screen capture execution as non-interactive, indicating potential malicious use?
    context: This question uses a supervised classification model to determine if a process execution is interactive or non-interactive. By training on features like Session ID, user account type, and parent process, the model can predict the context of an execution. Any instance where a screen capture tool is classified as 'non-interactive' with high confidence should be treated as a high-fidelity alert, as it contradicts normal usage patterns.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Process execution logs on all endpoints, particularly Domain Controllers and critical application servers where interactive GUI use is rare
    range: last 90 days
    queries:
      - "TRAIN classification model to predict 'interactive' vs 'non-interactive' executions. ALERT if a screen_capture_tool execution is classified as 'non-interactive' with high confidence."
  - question: Is there network activity showing image files being exfiltrated to a suspicious destination shortly after on-host screen capture indicators?
    context: This question links on-host behavior with network exfiltration. It correlates endpoint logs showing the execution of a suspicious screen capture process with network logs showing the transfer of image files from that same host. If the file transfer occurs within a short time window and goes to a destination with a poor reputation, it provides strong, connected evidence of data theft.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Network egress points (monitoring Zeek sensors), DNS resolution logs, and endpoint process execution logs
    range: last 90 days
    queries:
      - "CORRELATE endpoint_process_logs with network_file_logs by source_ip and timestamp. ALERT if host executes suspicious_capture_process AND within 5 mins transfers 'image/*' MIME type files to a bad_reputation_ip."
  - question: Is a host exfiltrating a statistically significant volume or count of image files compared to its historical baseline?
    context: This question aims to detect data exfiltration by identifying abnormal outbound network traffic. By establishing a rolling 30-day baseline for the hourly count and volume of image files transferred by each host, the system can detect significant spikes. An alert is generated if a host's activity exceeds a statistical threshold (e.g., 3 standard deviations above the mean), indicating a potential mass exfiltration of captured screens.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Network egress points (monitoring Zeek sensors), DNS resolution logs, and endpoint process execution logs
    range: last 90 days
    queries:
      - "ESTABLISH 30-day rolling baseline (mean, stddev) of hourly image file transfers per host. ALERT if hourly count or volume exceeds (mean + 3*stddev)."
  - question: Is the total network-wide volume of outbound image file traffic exceeding forecasted levels?
    context: This question provides a macro-level view of potential exfiltration by using time-series forecasting. A model is built to predict the expected volume of outbound image traffic for the entire network, accounting for normal daily and weekly patterns. If the actual observed traffic volume significantly exceeds the model's predicted upper confidence bound, it triggers a network-wide anomaly alert, which could indicate a large-scale, coordinated exfiltration campaign.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Network egress points (monitoring Zeek sensors), DNS resolution logs, and endpoint process execution logs
    range: last 90 days
    queries:
      - "FORECAST expected network-wide outbound image volume using a time-series model (e.g., SARIMA). ALERT if actual volume exceeds the forecasted upper confidence interval."
  - question: Is a screen capture process being executed while the active window title contains sensitive keywords?
    context: This question attempts to identify highly targeted screen captures by correlating the execution of a capture tool with the content of the user's active window. If an EDR provides active window title logging, a rule can be created to alert when a capture process runs while the user is viewing a window with a title containing sensitive terms like 'password', 'mfa', or 'secret', indicating a likely attempt to steal credentials or other critical information.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations
      - Endpoints assigned to privileged users (e.g., domain admins, executives)
    range: last 90 days
    queries:
      - "IF active_window_title logging is available, ALERT when screen_capture_process is executed AND active_window_title contains ('password', 'mfa', 'secret', 'vpn')."
  - question: Are screen capture executions occurring outside a user's normal working hours or with machine-like periodicity?
    context: This question seeks to identify anomalous behavior by analyzing the timing and rhythm of screen capture events. It flags executions that occur outside a user's statistically established working hours. Separately, it analyzes the time between consecutive capture events on a host; a very low variation in these time deltas indicates a machine-like, automated process rather than human-driven activity.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations
      - Endpoints assigned to privileged users (e.g., domain admins, executives)
    range: last 90 days
    queries:
      - "PROFILE user activity hours. ALERT on screen_capture_execution outside of normal hours. SEPARATELY, calculate time delta between consecutive capture events; ALERT on very low standard deviation."
  - question: Are there clusters of screen capture events that are anomalous compared to a user's normal behavior patterns?
    context: This question uses unsupervised machine learning to find behavioral outliers. A clustering algorithm (like DBSCAN) groups a user's screen capture events based on features like time of day and day of week. Events that do not fit into any 'normal' cluster are classified as noise or outliers. These anomalous events represent a deviation from the user's established routine and warrant investigation as potentially malicious.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations
      - Endpoints assigned to privileged users (e.g., domain admins, executives)
    range: last 90 days
    queries:
      - "APPLY DBSCAN clustering to user screen capture events based on (hour_of_day, day_of_week, process_name). ALERT on any event classified as an outlier (noise)."