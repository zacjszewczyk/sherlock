name: 'T1614: System Location Discovery'
id: 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
description: This playbook helps identify if an adversary is attempting to discover the geographic location of systems on the network. This is often done by querying public IP geolocation services, executing local commands to find system time zone or locale settings, or querying cloud metadata services. Detecting these actions can reveal early-stage reconnaissance activity before an adversary moves laterally or exfiltrates data.
type: technique
related:
  - 'TA0007: Discovery'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts making DNS queries or HTTP/S connections to known public IP geolocation services?
    context: Adversaries use public geolocation services to determine the external IP address and physical location of a compromised host. This is a common reconnaissance step to understand the environment they are in. Monitoring for connections to a maintained watchlist of these services is a direct method for detecting this specific behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Zeek ssl.log
      - Network Egress Points
      - Internal DNS Resolvers
      - Egress Proxy Servers
    range: last 90 days
    queries:
      - symbolic: SEARCH dns_logs OR web_logs WHERE destination_domain IN (geolocation_service_watchlist) AND source_ip IS_internal
  - question: Is any host exhibiting an unusual frequency of connections to geolocation services compared to its own baseline or its peer group?
    context: While benign applications might occasionally use geolocation services, malicious scripts often make repeated, automated queries. A statistical approach helps identify these outliers. By baselining normal behavior for each host and its peers, we can detect significant deviations that may indicate malicious activity, reducing false positives from legitimate, one-off uses.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Zeek ssl.log
      - Network Egress Points
      - Internal DNS Resolvers
      - Egress Proxy Servers
    range: last 90 days
    queries:
      - statistical: CALCULATE baseline_connections_to_geolocation_services PER host OVER 30_days. ALERT IF current_hourly_count > 99th_percentile_of_baseline.
  - question: Can we use machine learning to distinguish between benign and malicious connections to geolocation services based on connection characteristics?
    context: Malicious connections often have different characteristics than benign ones (e.g., initiated by a script versus a browser). A machine learning model can analyze features like user-agent, JA3/JA3S hashes, connection duration, and data volume to classify the connection's intent with higher accuracy than simple rules or statistical thresholds.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Zeek ssl.log
      - Network Egress Points
      - Internal DNS Resolvers
      - Egress Proxy Servers
    range: last 90 days
    queries:
      - machine_learning: APPLY ML_model ON web_traffic_to_geolocation_services. FEATURES = (user-agent, JA3, duration, data_volume). ALERT IF model_prediction IS 'malicious'.
  - question: Are users or processes executing specific command-line utilities to discover the system's time zone, locale, or language settings?
    context: Adversaries use commands like `Get-TimeZone` or `systeminfo` to understand the system's configuration and location. This can inform their next steps, such as tailoring attacks to a specific region or avoiding detection. This question focuses on creating specific rules to catch these known discovery commands, especially when run by suspicious parent processes.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Domain Controllers
      - Application Servers
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_logs WHERE command_line CONTAINS ('Get-Culture', 'Get-TimeZone', 'systeminfo | findstr', 'tzutil /g')
  - question: Is there a sudden spike in the variety of discovery-related commands being executed by a user or on a host?
    context: A normal user typically has a predictable command execution pattern. An adversary performing reconnaissance often runs a rapid series of different discovery commands. Measuring the Shannon entropy of commands in a short time window can statistically identify this burst of varied, unusual activity, which stands out from normal interactive use.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Domain Controllers
      - Application Servers
    range: last 90 days
    queries:
      - statistical: CALCULATE shannon_entropy of command_lines PER user, PER host IN 10_min_window. ALERT IF entropy_spike > threshold.
  - question: Can a sequence analysis model identify malicious reconnaissance command sequences executed within a user session?
    context: Beyond individual commands, the sequence of commands is highly indicative of intent. A machine learning model, like a Hidden Markov Model, can learn the patterns of both normal administrative activity and known malicious reconnaissance TTPs. By analyzing the command sequence in a session, it can flag entire sessions as suspicious.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Domain Controllers
      - Application Servers
    range: last 90 days
    queries:
      - machine_learning: APPLY sequence_analysis_model ON user_command_sessions. ALERT IF session_is_classified_as 'malicious_recon'.
  - question: Are non-interactive service accounts or server application processes executing location discovery commands?
    context: Server applications (like web servers, databases) and system service accounts have no legitimate reason to query the system's geographic location. Such activity is a very strong indicator of compromise, suggesting an adversary has gained control of that process or account to perform reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Privileged Access Workstations
      - Critical Servers
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_logs WHERE parent_process IN (server_app_list) OR user IN (system_account_list) AND child_process_command_line CONTAINS (location_discovery_strings).
  - question: Is a user executing location discovery commands at an anomalous time or with anomalous frequency?
    context: Adversaries often operate outside of normal business hours to avoid detection. By creating separate baselines for on-hours and off-hours activity, we can more accurately detect unusual behavior. A user suddenly running many discovery commands, especially at night or on a weekend, is highly suspicious and would be flagged by this statistical Z-score check.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Privileged Access Workstations
      - Critical Servers
    range: last 90 days
    queries:
      - statistical: CALCULATE baseline_discovery_command_count PER user FOR business_hours AND non_business_hours. ALERT IF current_count > (mean + 3 * std_dev) of_corresponding_baseline.
  - question: Can we identify outlier hosts that exhibit unusual location discovery command patterns compared to their peers?
    context: This approach uses unsupervised machine learning to find hosts that behave differently from the entire population. By clustering hosts based on features like command counts, parent processes, and time of day, we can identify small groups or individual hosts (outliers) whose activity patterns are unique and warrant investigation.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Privileged Access Workstations
      - Critical Servers
    range: last 90 days
    queries:
      - machine_learning: APPLY clustering_algorithm (e.g., DBSCAN) ON hosts. FEATURES = (discovery_cmd_count, parent_process_entropy, time_of_day). ALERT ON hosts identified_as_outliers.
  - question: Is a host connecting to a known-bad or suspicious new domain shortly after executing a location discovery command?
    context: This is a classic "recon followed by C2 beacon" pattern. An adversary discovers information about the system and then immediately beacons out to a command-and-control server. Correlating the on-host command execution with an outbound network connection to a suspicious destination within a short time window provides a high-fidelity alert.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - User Workstations
      - Servers with Internet Access
    range: last 90 days
    queries:
      - symbolic: JOIN process_logs ON host WITH network_logs ON host WHERE process_log.command CONTAINS (location_discovery_strings) AND network_log.timestamp IS_within 5_mins_after process_log.timestamp AND network_log.destination_ip IS_on_threat_intel_list.
  - question: Does a host show a statistically significant increase in connections to new, unseen IP addresses immediately following a location discovery command?
    context: This statistical method looks for a change in behavior. A sudden burst of connections to new IPs right after reconnaissance is anomalous. By comparing the rate of new IP connections in the 5-minute window post-discovery to the host's overall baseline, we can quantify this suspicion and alert on significant deviations.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - User Workstations
      - Servers with Internet Access
    range: last 90 days
    queries:
      - statistical: CALCULATE baseline_rate_of_new_ip_connections PER host. CALCULATE rate_of_new_ip_connections_within_5_mins_post_discovery_command. ALERT IF post_discovery_rate >> baseline_rate.
  - question: Is there a strong, time-lagged correlation between location discovery events and outbound connections exhibiting C2-like characteristics?
    context: This advanced technique treats discovery commands and suspicious outbound connections as two separate time series. Cross-correlation analysis can mathematically determine if a spike in one stream is consistently followed by a spike in the other after a short delay. A strong correlation is a powerful indicator of an automated tool performing recon and then phoning home.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - User Workstations
      - Servers with Internet Access
    range: last 90 days
    queries:
      - machine_learning: CALCULATE cross_correlation between time_series(discovery_commands) and time_series(c2_like_connections). ALERT IF strong_positive_correlation_at_short_time_lag.
  - question: Are unapproved processes on cloud instances querying the metadata service for location information?
    context: In cloud environments, the metadata service (169.254.169.254) is a primary target for reconnaissance. Adversaries query it to learn the instance's region and availability zone. Legitimate access is typically limited to specific startup scripts. Any other process accessing location-specific metadata endpoints is highly suspicious.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Cloud Compute Instances (e.g., AWS EC2, Azure VM)
      - Cloud Network Flow Logs
    range: last 90 days
    queries:
      - symbolic: SEARCH network_logs WHERE destination_ip = '169.254.169.254' AND source_process NOT_IN (whitelist) AND http_path CONTAINS ('/placement/', '/location').
  - question: Is a cloud instance accessing the metadata service with unusual frequency or requesting paths that are abnormal for its role?
    context: Different types of cloud instances have predictable patterns of interaction with the metadata service. By baselining this behavior per role (e.g., web server), we can detect an instance that starts making an excessive number of requests or queries a path it or its peers has never touched before, indicating a potential compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Cloud Compute Instances (e.g., AWS EC2, Azure VM)
      - Cloud Network Flow Logs
    range: last 90 days
    queries:
      - statistical: BASELINE metadata_access_patterns PER instance_role. ALERT IF instance_access_count > 99th_percentile_of_role_baseline OR instance_accesses_new_path_for_role.
  - question: Can a machine learning model classify metadata service access as malicious based on the context of the request?
    context: This ML approach provides a nuanced detection by considering a rich set of features around a metadata query. A legitimate request from a known script at boot time looks very different from a request made by a reverse shell hours later. A trained classifier can learn these distinctions and flag anomalous requests with high confidence.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Cloud Compute Instances (e.g., AWS EC2, Azure VM)
      - Cloud Network Flow Logs
    range: last 90 days
    queries:
      - machine_learning: APPLY ML_model ON metadata_service_requests. FEATURES = (URI, user-agent, parent_process, time_since_boot). ALERT IF model_prediction IS 'malicious'.