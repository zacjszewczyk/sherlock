name: T1608.005: Link Target
id: f2c1b3a0-667d-4a8b-9d1c-8e4a7b9f1d2e
description: This playbook helps investigate whether an adversary has staged web content on newly acquired or compromised infrastructure to be used as link targets. This is achieved by monitoring for several key indicators: connections from internal systems to destinations on high-confidence threat intelligence feeds; traffic to newly registered or typosquatted domains that mimic the organization's domains; the presence of phishing kit signatures (HTML, CSS, JS) in downloaded web content; patterns of brief, low-byte connections to newly registered domains indicative of reconnaissance; and anomalous high-entropy URI paths in requests to legitimate cloud services, suggesting their use for malicious hosting.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
investigative_questions:
- question: Are there any internal systems connecting to external destinations that are on a high-confidence threat intelligence feed?
  context: This question aims to identify direct communication from internal assets to known malicious infrastructure (phishing, malware, C2). By triggering an alert when Zeek's intel.log reports a match from a high-confidence feed and enriching it with asset and user data, analysts can quickly identify the compromised host and user, assess the immediate risk, and begin containment procedures. This is a primary indicator of a successful phish or malware infection.
  answer_sources:
  - Zeek intel.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Network Egress Points
  - Web Proxies
  - Endpoint Devices
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH zeek_intel_logs WHERE notice_type = 'policy' AND source_ip is_internal | JOIN source_ip with asset_database, user_database | OUTPUT source_ip, hostname, user, department, destination_indicator
- question: Has there been a statistically significant spike in threat intelligence hits from a single feed, suggesting a targeted campaign?
  context: This question seeks to detect coordinated, large-scale attacks that might otherwise be lost in the noise of individual alerts. A sudden increase in hits from a specific threat feed can indicate a campaign targeting the organization with the same set of indicators. By baselining normal activity and alerting on deviations (three standard deviations above the mean), security teams can proactively identify and investigate potential widespread campaigns instead of reacting to single events.
  answer_sources:
  - Zeek intel.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Network Egress Points
  - Web Proxies
  - Endpoint Devices
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE baseline for intel_hits_per_day per feed over 90 days (mean, stddev) | SEARCH daily intel_hits_per_day per feed | IF daily_hits > (mean + 3*stddev) THEN ALERT
- question: Can we use machine learning to automatically prioritize threat intelligence hits that are most likely to be true positives?
  context: This question addresses the challenge of alert fatigue from threat intelligence feeds. By training a classification model on various contextual features (e.g., indicator type, host criticality, time of day), the system can learn the patterns of both true and false positives. Applying this model to new events provides a probability score, allowing analysts to focus their efforts on the highest-risk alerts (e.g., score > 0.85), improving efficiency and response time.
  answer_sources:
  - Zeek intel.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Network Egress Points
  - Web Proxies
  - Endpoint Devices
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each new intel_hit | EXTRACT features (confidence, type, age, criticality, time) | APPLY logistic_regression_model | IF probability > 0.85 THEN ESCALATE_ALERT
- question: Are internal systems communicating with suspected typosquatted or homoglyph domains mimicking our organization's domains?
  context: This question aims to proactively detect phishing or malware delivery attempts that use deceptive domains visually similar to legitimate corporate domains. By pre-generating a list of these lookalike domains (typosquats and homoglyphs) and creating a watchlist, the SIEM can immediately alert on any DNS or HTTP traffic to these high-risk destinations, enabling rapid investigation before a user is successfully phished.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - External Certificate Transparency Logs
  - External WHOIS data feeds
  - Internal DNS Resolvers
  - Certificate Transparency Log Monitors
  - Web Proxies
  - External Passive DNS Databases
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH zeek_dns_logs OR zeek_http_logs WHERE query_domain OR host_header IN typosquat_watchlist | ALERT
- question: Is there an anomalous volume of DNS queries to domains that are computationally similar (Levenshtein distance 1-2) to our organization's domains?
  context: This question provides a statistical method to detect potential typosquatting campaigns without relying solely on a pre-generated watchlist. It identifies domains that are 'close' in spelling to legitimate ones. By baselining the normal daily volume of such queries and alerting on significant increases (exceeding the 95th percentile), security teams can spot emerging campaigns that might use previously unknown typosquatted domains.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - External Certificate Transparency Logs
  - External WHOIS data feeds
  - Internal DNS Resolvers
  - Certificate Transparency Log Monitors
  - Web Proxies
  - External Passive DNS Databases
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE daily_count of queries to domains with Levenshtein distance 1-2 to allowlist | CALCULATE 95th_percentile of daily_count over 30 days | IF daily_count > 95th_percentile THEN ALERT
- question: Is there an unexpected spike in DNS queries to newly registered, typosquatted domains, as predicted by a time-series model?
  context: This question uses advanced anomaly detection to identify sophisticated, coordinated attacks. It focuses on the high-risk intersection of two characteristics: newly registered domains (NRDs) and typosquatting. A time-series model (like ARIMA) learns the normal rhythm of this specific type of traffic. An alert is triggered only when the actual traffic volume significantly exceeds the model's forecast, indicating a deviation from the norm that is highly likely to be a targeted attack.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - External Certificate Transparency Logs
  - External WHOIS data feeds
  - Internal DNS Resolvers
  - Certificate Transparency Log Monitors
  - Web Proxies
  - External Passive DNS Databases
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL daily volume of DNS queries for NRDs with Levenshtein distance 1-2 using ARIMA | FORECAST expected volume and confidence_interval | IF actual_volume > upper_confidence_interval THEN ALERT
- question: Are we detecting known phishing kits by scanning extracted web content with YARA rules?
  context: This question focuses on identifying phishing attacks by inspecting the actual content of web traffic. By deploying a set of YARA rules designed to find signatures of known phishing kits within HTML and JavaScript files extracted from the network, security teams can detect threats even if the domain or IP is not yet on a threat list. A YARA match is a strong indicator of a malicious page and warrants a high-severity alert.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Web Proxies
  - Network TAPs at Internet Gateway
  - Content Delivery Networks
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SCAN extracted_files (HTML, JS) from zeek_files_log with phishing_kit_yara_rules | ON MATCH, ALERT with rule_name, source_ip, dest_ip
- question: Can we identify potentially malicious web forms by scoring their legitimacy?
  context: This question aims to detect credential-stealing phishing pages by analyzing the structure and behavior of web forms. A 'form legitimacy score' is calculated based on features like whether the form submits data to a different domain, the complexity of its submission script, and the ratio of password to text fields. By baselining scores from known-good login pages, we can alert on forms that deviate significantly, indicating a likely attempt to harvest credentials.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Web Proxies
  - Network TAPs at Internet Gateway
  - Content Delivery Networks
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each webpage with a form | CALCULATE score(action_domain_mismatch, onsubmit_entropy, field_ratios) | IF score deviates > 3*stddev from baseline THEN ALERT
- question: Can we use an NLP model to classify and detect phishing pages based on their raw HTML content?
  context: This question proposes using a sophisticated, deep learning approach to identify phishing pages. By fine-tuning a transformer model like BERT on labeled examples of benign and phishing HTML, the system can learn the subtle textual and structural patterns of malicious pages. This allows for near-real-time classification of all downloaded HTML, triggering automated blocking and alerting workflows for pages classified as phishing with high confidence.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Web Proxies
  - Network TAPs at Internet Gateway
  - Content Delivery Networks
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each extracted HTML file | APPLY fine_tuned_BERT_model | IF classification is 'phishing' and confidence > 0.90 THEN TRIGGER workflow (block_domain, alert_team)
- question: Are internal hosts making suspicious, brief connections to newly registered domains (NRDs)?
  context: This question seeks to identify potential C2 check-ins or reconnaissance activity masquerading as web traffic. The logic correlates a DNS query for an NRD with a subsequent, very short TCP connection with minimal data sent from the same host. This pattern is atypical for normal web browsing and can indicate automated beaconing from malware. An alert on this specific sequence of events provides a high-fidelity signal of a potential compromise.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS data
  - Internal DNS Resolvers
  - Network Egress Points
  - Core Network Switches
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN zeek_dns_log with zeek_conn_log on source_ip | TRIGGER if dns_query is for NRD AND (conn_state is 'S0'/'REJ' OR (duration < 2s AND sent_bytes < 512)) within 5s
- question: Is there a widespread campaign involving multiple internal hosts making unusually brief connections to the same NRD?
  context: This question looks for coordinated, low-and-slow activity across the enterprise. It first identifies individual connections to NRDs that are statistical outliers in terms of their short duration and low data volume (e.g., below the 5th percentile). It then aggregates these events to see if multiple hosts are exhibiting the same behavior towards the same NRD within a 24-hour period. This aggregation turns weak individual signals into a strong indicator of a potential campaign.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS data
  - Internal DNS Resolvers
  - Network Egress Points
  - Core Network Switches
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE 5th percentile for duration and sent_bytes to NRDs | FLAG connections below threshold | AGGREGATE by NRD | IF unique_internal_hosts > 10 in 24h THEN ALERT
- question: Can we use clustering to discover anomalous, coordinated connections to NRDs?
  context: This question applies unsupervised machine learning to find hidden patterns of malicious activity. A clustering algorithm like DBSCAN groups all connections to NRDs based on features like duration, bytes sent, and user-agent. It automatically separates large clusters of 'normal' browsing from small, dense clusters of anomalous connections. These small clusters represent coordinated, non-standard activity that is highly suspicious and requires investigation.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS data
  - Internal DNS Resolvers
  - Network Egress Points
  - Core Network Switches
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY DBSCAN to connections to NRDs with features (duration, bytes, port, user_agent) | INVESTIGATE small, dense outlier clusters
- question: Are internal systems accessing high-risk file types on commonly abused cloud platforms?
  context: This question provides a simple but effective way to detect malware downloads from legitimate cloud services. It uses a watchlist of domains for services like AWS S3, Azure Blob Storage, and GitHub Pages, which are often abused by adversaries. A rule alerts on any HTTP request to these domains where the file being accessed has a high-risk extension (like .exe, .ps1, .dll), indicating a probable malware staging attempt.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxies
  - Egress Firewalls
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH zeek_http_logs WHERE host_header IN abused_services_watchlist AND uri_path ENDS WITH ('.exe', '.dll', '.ps1') | ALERT
- question: Are there requests to commonly abused cloud platforms with anomalously high-entropy URI paths?
  context: This question aims to detect the use of legitimate cloud services for C2 or data exfiltration, where adversaries often use long, randomized strings in the URI path. By establishing a baseline for the normal Shannon entropy of URI paths for each cloud service domain, we can create a rule that alerts when a request's URI entropy exceeds a high threshold (e.g., the 99th percentile). This points to non-standard, likely programmatic access that warrants investigation.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxies
  - Egress Firewalls
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each domain in abused_services_watchlist, CALCULATE 99th_percentile of URI_entropy | SEARCH zeek_http_logs | IF host_header IN watchlist AND URI_entropy > 99th_percentile THEN ALERT
- question: Can we detect anomalous requests to abused cloud services using an Isolation Forest model?
  context: This question uses an anomaly detection model tailored for identifying outliers. An Isolation Forest is trained on various features of HTTP requests to abused cloud services (URI entropy, user-agent, etc.). The model learns what 'normal' traffic to these services looks like and assigns an anomaly score to each new request. Requests with a very high score (e.g., in the top 1%) are flagged as outliers that are structurally different from the norm and should be reviewed by an analyst.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxies
  - Egress Firewalls
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: TRAIN Isolation Forest model on HTTP requests to abused_services_watchlist | APPLY model to new requests | IF anomaly_score in top 1% THEN FLAG for review