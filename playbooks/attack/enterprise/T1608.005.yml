name: T1608.005: Link Target
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary has staged web content on newly acquired or compromised infrastructure to be used as link targets. It focuses on detecting communications with known malicious destinations from threat intelligence, identifying connections to newly registered or typosquatted domains that mimic the organization's own, scanning web content for signatures of known phishing kits, detecting suspicious short-lived connections to newly registered domains, and analyzing requests to cloud services and CDNs for high-entropy URI paths indicative of malicious payloads.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has an internal system connected to an external destination identified as malicious by a high-confidence threat intelligence feed?
  context: This question aims to detect direct communication with known malicious infrastructure, such as phishing sites, malware C2 servers, or other adversary-controlled systems. A positive match from a high-confidence threat intelligence feed is a strong indicator of compromise. Correlating the source IP with internal asset and identity data is crucial for rapid response, allowing analysts to immediately identify the affected user and system.
  answer_sources:
  - Zeek intel.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Network Egress Points
  - Web Proxies
  - Endpoint Devices
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Zeek intel.log WHERE notice_type = 'policy' AND source_feed = 'high-confidence-feed' | JOIN source_ip WITH asset_database, identity_database TO GET hostname, user, department
- question: Has there been a statistically significant spike in threat intelligence hits from a single feed, potentially indicating a targeted campaign?
  context: This question seeks to identify anomalies in the volume of threat intelligence matches. A sudden increase in hits from one feed, exceeding a statistical baseline (e.g., three standard deviations above the moving average), could signal a coordinated attack against the organization rather than random, opportunistic encounters. This provides an early warning of a more focused threat.
  answer_sources:
  - Zeek intel.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Network Egress Points
  - Web Proxies
  - Endpoint Devices
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: CALCULATE daily hit count for each threat_feed over 90 days | CALCULATE moving average and standard deviation | ALERT if today's count > (moving_average + 3 * std_dev)
- question: Can we automatically prioritize threat intelligence alerts based on their likelihood of being a true positive?
  context: This question addresses the challenge of alert fatigue from threat intelligence feeds. By training a machine learning model (like logistic regression) on historical data, we can score new alerts based on a variety of features (e.g., threat feed confidence, indicator type, host criticality). This allows analysts to focus on the highest-risk events, such as those with a true positive probability score above a high threshold (e.g., 0.85).
  answer_sources:
  - Zeek intel.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Network Egress Points
  - Web Proxies
  - Endpoint Devices
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each new intel_hit | EXTRACT features (feed_confidence, indicator_type, host_criticality, etc.) | APPLY logistic_regression_model | IF probability_score > 0.85, ESCALATE alert
- question: Has an internal system attempted to connect to a suspected typosquatted or homoglyph domain?
  context: This question focuses on detecting attempts to lure users to malicious sites that visually impersonate legitimate corporate domains. Adversaries register domains that are misspellings (typosquatting) or use visually similar characters (homoglyphs). Proactively generating a list of these variations and alerting on any network traffic to them is a highly effective way to catch phishing and malware delivery attempts early.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - External Certificate Transparency Logs
  - External WHOIS data feeds
  - Internal DNS Resolvers
  - Certificate Transparency Log Monitors
  - Web Proxies
  - External Passive DNS Databases
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: GENERATE typosquat_watchlist from corporate_domains | SEARCH Zeek dns.log, http.log WHERE destination_domain IN typosquat_watchlist | ALERT on match
- question: Is there an anomalous increase in connections to domains that are very similar to our corporate domains?
  context: This question provides a broader, behavior-based approach to detecting typosquatting, complementing a static watchlist. By calculating the Levenshtein distance (a measure of string similarity) for all non-allowlisted domains, we can monitor for a surge in traffic to domains that are just one or two character changes away from our own. An alert on a significant increase (e.g., exceeding the 95th percentile) can reveal a typosquatting campaign that a static list might have missed.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - External Certificate Transparency Logs
  - External WHOIS data feeds
  - Internal DNS Resolvers
  - Certificate Transparency Log Monitors
  - Web Proxies
  - External Passive DNS Databases
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each DNS query to non-allowlisted domain | CALCULATE Levenshtein distance to nearest corporate domain | COUNT daily queries with distance 1 or 2 | ALERT if daily_count > 95th percentile of last 30 days
- question: Is there a forecasted spike in traffic to newly registered domains that are also typosquats?
  context: This question uses predictive modeling to get ahead of potential attacks. By focusing on a high-risk subset of traffic—DNS queries for domains that are both very new and very similar to corporate domains—a time-series model (like ARIMA) can learn the normal baseline volume. If the actual traffic significantly exceeds the model's forecast, it provides a strong, proactive signal of a potential attack campaign being staged or activated.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - External Certificate Transparency Logs
  - External WHOIS data feeds
  - Internal DNS Resolvers
  - Certificate Transparency Log Monitors
  - Web Proxies
  - External Passive DNS Databases
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL daily volume of DNS queries to (newly_registered_domains AND typosquat_domains) with ARIMA | FORECAST expected volume | ALERT if actual_volume > 99% confidence_interval of forecast
- question: Has any downloaded web content matched signatures of known phishing kits?
  context: This question aims to identify phishing attacks by inspecting the content of web pages themselves. Adversaries often reuse phishing kits which contain unique code artifacts. By using YARA rules to scan HTML and JavaScript files extracted from network traffic, we can detect these kits with high fidelity. A YARA match provides strong evidence that a user has visited a phishing page.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Web Proxies
  - Network TAPs at Internet Gateway
  - Content Delivery Networks
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each HTML/JS file from Zeek files.log | SCAN with phishing_kit_YARA_rules | ON match, ALERT with rule_name, src_ip, dst_ip
- question: Have any visited web pages exhibited characteristics of a phishing form?
  context: This question provides a heuristic-based method to detect phishing pages, especially those from unknown kits. By scoring web forms based on suspicious attributes (e.g., posting data to a different domain, using obfuscated submission scripts, unusual field ratios), we can identify potentially malicious forms. A form that scores as a significant outlier compared to a baseline of legitimate login pages warrants investigation as a likely credential theft attempt.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Web Proxies
  - Network TAPs at Internet Gateway
  - Content Delivery Networks
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each webpage with a <form> | CALCULATE score based on (action_domain, script_entropy, field_ratios) | ESTABLISH baseline from known-good pages | ALERT if score deviates > 3 standard deviations from baseline
- question: Can we use a machine learning model to classify downloaded HTML pages as benign or phishing?
  context: This question leverages advanced natural language processing (NLP) to detect phishing pages based on their entire HTML structure. A fine-tuned transformer model (like BERT) can learn the subtle patterns and code structures inherent in phishing pages, providing a more robust and adaptable detection method than static signatures or simple heuristics. Classifying pages in near-real-time and alerting on high-confidence 'phishing' classifications enables rapid response.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Web Proxies
  - Network TAPs at Internet Gateway
  - Content Delivery Networks
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each HTML file from Zeek files.log | CLASSIFY with fine-tuned_BERT_model | IF classification is 'phishing' AND confidence > 0.90, TRIGGER alert and block workflow
- question: Has an internal host made a suspicious, short-lived connection to a newly registered domain (NRD)?
  context: This question aims to detect potential command-and-control (C2) check-ins or reconnaissance activity that adversaries try to hide. A common pattern is a DNS lookup for a newly registered domain followed immediately by a very brief connection that transfers little to no data, or a connection that is immediately rejected. Correlating DNS and network connection logs to find this specific sequence of events is a strong indicator of malicious activity.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS data
  - Internal DNS Resolvers
  - Network Egress Points
  - Core Network Switches
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: JOIN Zeek dns.log and conn.log on source_ip | ALERT IF dns_query is for NRD AND conn_state is 'S0'/'REJ' OR (duration < 2s AND bytes < 512B) within 5s of query
- question: Are multiple internal hosts making unusually brief connections to the same newly registered domain (NRD)?
  context: This question looks for widespread, coordinated beaconing activity. While a single host making a brief connection might be an anomaly, multiple hosts exhibiting the same behavior to the same NRD is highly suspicious. By baselining normal connection characteristics and flagging outliers (e.g., connections in the bottom 5th percentile for duration and data volume), we can aggregate these events and alert when a threshold of affected internal hosts is crossed, indicating a possible widespread compromise.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS data
  - Internal DNS Resolvers
  - Network Egress Points
  - Core Network Switches
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FIND connections to NRDs with duration and bytes < 5th percentile | AGGREGATE by destination_NRD | ALERT if unique_source_hosts > 10 within 24 hours
- question: Can we identify clusters of anomalous, coordinated network activity to newly registered domains (NRDs)?
  context: This question uses unsupervised machine learning to find "needles in a haystack." Most traffic to NRDs might be legitimate, but malicious C2 traffic will likely have different characteristics (duration, bytes, port, user agent). A clustering algorithm like DBSCAN can automatically group all connections by these features, isolating small, dense clusters of anomalous activity that represent coordinated, non-standard behavior, which can then be prioritized for investigation.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS data
  - Internal DNS Resolvers
  - Network Egress Points
  - Core Network Switches
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: APPLY DBSCAN clustering on connections to NRDs using features (duration, bytes, port, user_agent) | INVESTIGATE small, dense clusters identified as anomalies
- question: Has an internal system downloaded a high-risk file type from a commonly abused cloud platform?
  context: Adversaries frequently use legitimate Platform-as-a-Service (PaaS) or Software-as-a-Service (SaaS) providers (like cloud storage services) to host malicious payloads, helping them bypass reputation-based filtering. This question focuses on detecting the download of high-risk executable or script files from a curated watchlist of these abused services, providing a simple yet effective way to catch malware delivery.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxies
  - Egress Firewalls
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Zeek http.log WHERE host IN abused_service_watchlist AND uri_path ENDS WITH ('.exe', '.dll', '.ps1', '.vbs') | ALERT on match
- question: Has a request been made to a commonly abused cloud platform with an unusually random-looking URI?
  context: This question seeks to identify malicious content hosted on legitimate services by analyzing the URI path. Adversaries often use algorithmically generated or random-looking paths to store payloads. A URI with a high Shannon entropy score is more likely to be machine-generated than human-readable. By establishing a normal entropy baseline for each cloud service and alerting on requests that exceed the 99th percentile, we can detect these suspicious URIs.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxies
  - Egress Firewalls
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each domain in abused_service_watchlist, CALCULATE 99th percentile of URI path entropy | FOR each new request, CALCULATE URI entropy | ALERT if entropy > 99th percentile for that domain
- question: Can we detect anomalous requests to abused cloud platforms using a multi-featured anomaly detection model?
  context: This question proposes a comprehensive machine learning approach to find malicious activity within traffic to legitimate cloud services. An Isolation Forest model can analyze multiple features simultaneously—such as URI entropy, number of parameters, user agent, and request method—to identify requests that are outliers from the norm. Flagging requests with the highest anomaly scores (e.g., the top 1%) allows analysts to focus on the most unusual and potentially malicious traffic that might otherwise be missed.
  answer_sources:
  - Zeek http.log
  - Zeek dns.log
  - Web Proxies
  - Egress Firewalls
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: TRAIN Isolation Forest model on requests to abused_service_watchlist using features (URI_entropy, param_count, user_agent, etc.) | APPLY model to new requests | FLAG requests with anomaly score in top 1% for review