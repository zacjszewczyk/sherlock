name: "T1203: Exploitation for Client Execution"
id: b4c9a8d7-e6f5-4a3b-2c1d-0e9f8a7b6c5d
description: This playbook helps investigate whether an adversary has executed code on client systems by exploiting vulnerabilities. It focuses on detecting signs of exploitation such as client applications making outbound connections to malicious domains, spawning suspicious child processes like command-line interpreters with obfuscated commands, creating statistically rare parent-child process relationships, writing files with mismatched extensions or to unusual locations, and initiating network connections with anomalous characteristics (e.g., to raw IPs or using non-standard ports).
type: technique
related:
  - "TA0002: Execution"
contributors:
  - "Zachary Szewczyk"
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Has a client application made a network connection to a known malicious indicator associated with exploit kits, malware, or phishing?"
    context: "This question seeks to identify the initial compromise vector. When a client application like a browser or document reader connects to a domain or IP address flagged by threat intelligence, it's a strong indicator that the user has encountered a malicious link or file, potentially leading to an exploit kit or drive-by download."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Internet gateway"
      - "Forward proxy servers"
      - "DNS resolvers"
      - "User workstations"
    range: "last 90 days"
    queries:
      - "SEARCH network_logs (conn, http) JOIN threat_intel WHERE destination_ip = threat_intel.indicator OR http_host = threat_intel.indicator AND threat_intel.category IN ('exploit kit', 'malware C2', 'phishing')"
  - question: "Have any client applications connected to statistically rare domains, potentially indicating a newly created malicious site?"
    context: "Adversaries often use newly registered or algorithmically generated domains (DGAs) for their infrastructure, which will not have a long history of legitimate traffic. By identifying connections to domains that are rarely visited across the enterprise, we can uncover potential C2 channels or exploit kit landing pages that haven't been blacklisted yet. This is particularly suspicious if a high-risk file is downloaded concurrently."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Internet gateway"
      - "Forward proxy servers"
      - "DNS resolvers"
      - "User workstations"
    range: "last 90 days"
    queries:
      - "CALCULATE domain_frequency from dns_logs over 30 days. SEARCH network_logs (conn) WHERE destination_domain IN (domains with frequency < 5th percentile). CORRELATE with file_logs for high-risk file downloads."
  - question: "Has a user's device shown an anomalous spike in connections to new or previously unseen domains?"
    context: "A sudden increase in a user's connections to new domains can signal a drive-by compromise, where a compromised website redirects the browser through a series of malicious sites. This question uses a time-series model to establish a baseline of normal 'new domain' activity for each user and flags significant deviations from that baseline, which could indicate a successful exploitation event."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Internet gateway"
      - "Forward proxy servers"
      - "DNS resolvers"
      - "User workstations"
    range: "last 90 days"
    queries:
      - "MODEL user_connections_to_new_domains over time. FORECAST expected_connections. ALERT if observed_connections > forecast_confidence_interval. CORRELATE with file_logs for high-risk file downloads."
  - question: "Has a common client application (e.g., Word, Chrome) spawned a command-line interpreter (e.g., cmd.exe, powershell.exe) with a suspicious command?"
    context: "Legitimate client applications like web browsers or document readers rarely need to spawn command shells or scripting engines. This behavior is a classic post-exploitation pattern where an attacker, having gained initial code execution within the application's process, uses a shell to download and run additional payloads. The query looks for specific keywords and patterns indicative of this activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "User workstations"
      - "Virtual Desktop Infrastructure (VDI) instances"
      - "Remote Desktop Session Hosts"
    range: "last 90 days"
    queries:
      - "SEARCH process_creation_logs WHERE parent_process IN ('WINWORD.EXE', 'chrome.exe', ...) AND child_process IN ('cmd.exe', 'powershell.exe', ...) AND command_line CONTAINS ('-enc', 'DownloadString', 'certutil', etc.)"
  - question: "Has a command-line interpreter, launched by a client application, been executed with a highly obfuscated or randomized command?"
    context: "To evade simple keyword-based detections, adversaries often obfuscate their commands using techniques like Base64 encoding or custom encryption. These obfuscated commands typically have a high degree of randomness, or Shannon entropy, compared to normal commands. This question aims to detect this obfuscation by flagging command lines with unusually high entropy for a given parent-child process pair."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "User workstations"
      - "Virtual Desktop Infrastructure (VDI) instances"
      - "Remote Desktop Session Hosts"
    range: "last 90 days"
    queries:
      - "FOR EACH process_creation_event (e.g., WINWORD.EXE -> powershell.exe), CALCULATE entropy of command_line. ALERT if entropy > 99th_percentile_for_pair."
  - question: "Can a machine learning model classify any command lines spawned from client applications as malicious?"
    context: "This question leverages advanced machine learning to move beyond simple regex or entropy heuristics. A model trained on a massive dataset of malicious and benign command lines can learn the complex patterns and structures of attacker techniques, even novel ones. It provides a more sophisticated and adaptable method for detecting malicious commands spawned by exploited applications."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "User workstations"
      - "Virtual Desktop Infrastructure (VDI) instances"
      - "Remote Desktop Session Hosts"
    range: "last 90 days"
    queries:
      - "INPUT command_lines from process_creation_logs (where parent is client app) INTO ML_model. ALERT if classification is 'malicious' with confidence > 0.9."
  - question: "Has a client application spawned a child process that is explicitly forbidden or known to be associated with malicious activity?"
    context: "Certain process relationships are almost always indicative of malicious intent (e.g., Adobe Reader spawning a disk partitioning tool). This question uses a high-confidence, low-false-positive approach by checking against a curated list of known-bad parent-child process pairs. An alert from this rule warrants immediate investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Zeek conn.log"
      - "User workstations"
      - "Application servers (e.g., Citrix)"
      - "DNS resolvers"
      - "Internet gateway"
    range: "last 90 days"
    queries:
      - "SEARCH process_creation_logs. ALERT if (parent_process, child_process) MATCHES entry in forbidden_pairs_list."
  - question: "Has a client application spawned a child process that is statistically rare or has never been seen before in the environment?"
    context: "Beyond a static 'bad' list, this question aims to find anomalous behavior specific to the organization's environment. By baselining all normal parent-child process relationships, we can flag any new pairing that deviates significantly from the established norm. This can uncover novel attacker techniques or living-off-the-land binaries (LOLBins) being used in unusual ways."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Zeek conn.log"
      - "User workstations"
      - "Application servers (e.g., Citrix)"
      - "DNS resolvers"
      - "Internet gateway"
    range: "last 90 days"
    queries:
      - "CALCULATE historical probability P(Child | Parent) from process_creation_logs over 30 days. ALERT on new event if P(Child | Parent) < 0.001 or is new."
  - question: "Can a graph-based analysis of process creation events reveal anomalous relationships indicative of exploitation?"
    context: "This question models the system's activity as a complex graph of process interactions. Graph-based machine learning algorithms can learn the normal structure of this graph and identify anomalous 'edges' (process creations) that don't fit the learned pattern. This approach is powerful because it considers the broader context of a process's lineage and can be enriched by correlating with network anomalies."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Zeek conn.log"
      - "User workstations"
      - "Application servers (e.g., Citrix)"
      - "DNS resolvers"
      - "Internet gateway"
    range: "last 90 days"
    queries:
      - "BUILD process creation graph from logs. APPLY graph anomaly detection model. IDENTIFY anomalous edges (process creations). CORRELATE child process with anomalous network logs."
  - question: "Has a client application written an executable file to a non-standard or suspicious directory?"
    context: "After exploitation, an adversary often needs to drop a payload (e.g., a second-stage implant) onto the disk. Client applications like browsers or Office products should not be writing executable files to user-writable locations like C:\\Users\\Public or Temp directories. This question looks for this highly suspicious activity."
    answer_sources:
      - "Sysmon Event ID 11"
      - "Zeek files.log"
      - "User workstations"
      - "Network file shares"
      - "Web content filters"
    range: "last 90 days"
    queries:
      - "SEARCH file_creation_logs WHERE process_name IN (client_apps) AND file_extension IN ('.exe', '.dll', '.ps1', ...) AND file_path IN ('C:\\Users\\Public\\*', 'C:\\PerfLogs\\*', ...)"
  - question: "Has a client application created a file with a directory and extension combination that is rare for that specific application?"
    context: "This question establishes a behavioral baseline for file creation activities on a per-application basis. For example, Word commonly saves .docx files to the Documents folder. If Word is suddenly observed saving a .ps1 file to the Temp directory, this would be a rare combination flagged as anomalous, even if the location itself isn't on a static blocklist."
    answer_sources:
      - "Sysmon Event ID 11"
      - "Zeek files.log"
      - "User workstations"
      - "Network file shares"
      - "Web content filters"
    range: "last 90 days"
    queries:
      - "PROFILE common (process, directory, extension) tuples from file_creation_logs. ALERT on new file creation event if its (directory, extension) pair frequency for the process is < 1st percentile."
  - question: "Has a client application downloaded or created a file where its extension (e.g., .jpg) masks its true executable nature (e.g., a PE file)?"
    context: "A common evasion technique is to disguise a malicious executable file by giving it a benign extension like .jpg or .pdf. This question seeks to uncover this deception by inspecting the file's 'magic bytes' (the first few bytes of its content) to determine its true type and alerting when there is a mismatch with its declared extension, especially for files handled by client apps."
    answer_sources:
      - "Sysmon Event ID 11"
      - "Zeek files.log"
      - "User workstations"
      - "Network file shares"
      - "Web content filters"
    range: "last 90 days"
    queries:
      - "FOR each file_creation or file_download event, CLASSIFY file_type from magic_bytes. ALERT if predicted_type != file_extension AND process is a client_app."
  - question: "Has a client application made a direct-to-IP network connection without a preceding DNS lookup?"
    context: "Most legitimate user-driven network traffic begins with a DNS query to resolve a hostname. Adversary tools or shellcode, however, often have hardcoded IP addresses for C2 communication. A client application making a connection directly to an IP address (without a recent DNS lookup for a name resolving to that IP) is anomalous and suspicious, suggesting non-interactive, programmatic communication."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Sysmon Event ID 3"
      - "User workstations"
      - "Internet gateway"
      - "Egress firewalls"
      - "DNS resolvers"
    range: "last 90 days"
    queries:
      - "SEARCH network_connection_logs where process is client_app. CHECK for corresponding dns_query for destination_ip from same source_ip in last 5 mins. ALERT if no DNS query found."
  - question: "Has a client application connected to a non-standard port or communicated with a domain name that appears to be randomly generated?"
    context: "This question looks for two indicators of C2 communication. First, an application using a port it doesn't normally use (e.g., Chrome using port 3389) can indicate tunneling or a backdoor. Second, high-entropy domain names are characteristic of Domain Generation Algorithms (DGAs), which are used by malware to create a constant stream of new C2 domains. Combining these two checks can effectively identify covert communication channels."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Sysmon Event ID 3"
      - "User workstations"
      - "Internet gateway"
      - "Egress firewalls"
      - "DNS resolvers"
    range: "last 90 days"
    queries:
      - "BASELINE destination ports per application. ALERT if connection uses port outside 95th percentile. SEPARATELY, CALCULATE entropy of requested domains. ALERT if entropy > 4.0."
  - question: "Has a user's client application exhibited network behavior that is anomalous compared to its own established baseline?"
    context: "This question uses a sophisticated, user-and-application-specific approach to anomaly detection. By training a model on multiple network features (port, protocol, data volume, duration), it can learn a highly detailed profile of 'normal' for a specific user running a specific application. Any deviation from this granular baseline (e.g., a sudden long-duration connection, an unusual amount of data uploaded) is flagged as a potential indicator of compromise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Sysmon Event ID 3"
      - "User workstations"
      - "Internet gateway"
      - "Egress firewalls"
      - "DNS resolvers"
    range: "last 90 days"
    queries:
      - "MODEL network features for each (user, process) combo using Isolation Forest. ALERT if new connection is flagged as an outlier by the model."