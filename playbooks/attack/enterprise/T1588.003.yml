name: T1588.003: Code Signing Certificates
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: >
  This playbook helps determine if an adversary is acquiring and using stolen or deceptively obtained code signing certificates for targeting. 
  It focuses on detecting the malicious use of these certificates by identifying processes signed with known-bad certificates from threat intelligence, 
  detecting certificates with deceptive attributes like typosquatting, flagging certificates that are statistically rare in the environment, 
  monitoring for unauthorized installation of new certificates into system stores, and observing network traffic to unusual Certificate 
  Revocation List (CRL) or Online Certificate Status Protocol (OCSP) endpoints.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any processes being created or modules loaded that are signed with a certificate matching a known-malicious indicator from threat intelligence?
    context: >
      This question aims to detect the direct use of compromised or known-bad code signing certificates. Adversaries sign malware to bypass security controls that trust signed code. By correlating the certificate thumbprint, serial number, and issuer of every executed binary against a threat intelligence feed of malicious indicators, we can identify known threats with high confidence. A match indicates a likely malicious file that requires immediate investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 7
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - Domain Controllers
      - End-user Workstations
      - Application Servers
      - Network Egress Points
      - SIEM/Log Aggregator
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events (Sysmon 1, Win 4688) OR image_load_events (Sysmon 7)
          WHERE certificate_is_valid = true
          EXTRACT certificate_thumbprint, certificate_serial, certificate_issuer
          LOOKUP against threat_intelligence_feed_of_bad_certs
          RETURN matches with host, process, and certificate details
  - question: Are there any new code signing certificate issuers appearing in the environment that are unusually rare?
    context: >
      This question seeks to identify targeted attacks. Widespread software is typically signed by common, well-known certificate issuers. If an adversary uses a newly acquired or custom certificate for a targeted tool, its issuer will likely be new to the environment and appear on a very small number of hosts. By baselining common issuers and flagging new ones with low prevalence, we can uncover potentially malicious software that might otherwise go unnoticed.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 7
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - Domain Controllers
      - End-user Workstations
      - Application Servers
      - Network Egress Points
      - SIEM/Log Aggregator
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE_ISSUERS = SEARCH process_events in last 90 days | DEDUP certificate_issuer | STORE
          NEW_ISSUERS = SEARCH process_events in last 24 hours | DEDUP certificate_issuer | WHERE issuer NOT IN BASELINE_ISSUERS
          FOR each issuer in NEW_ISSUERS:
            CALCULATE host_count for issuer in last 24 hours
            IF host_count < (0.005 * TOTAL_HOSTS):
              ALERT on rare_new_issuer
  - question: Can machine learning models identify signed executables that have features similar to known malicious signed files?
    context: >
      This question leverages machine learning to proactively identify malicious signed binaries that don't match known bad indicators. By training a model on features extracted from the certificate itself (e.g., string entropy, validity period, key algorithm) and PE file headers, we can score newly observed executables for their likelihood of being malicious. This provides a powerful, scalable way to find novel threats that use valid but suspicious certificates, flagging high-scoring files for deeper analysis.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 7
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - Domain Controllers
      - End-user Workstations
      - Application Servers
      - Network Egress Points
      - SIEM/Log Aggregator
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_signed_executable:
            EXTRACT features (issuer_entropy, subject_entropy, validity_days, key_size, is_self_signed)
            INPUT features into pre-trained_binary_classifier_model
            GET malicious_probability_score
            IF score > 0.85:
              ALERT for investigation
  - question: Are any executables signed by certificates with typosquatted subject names or issued by an unexpected Certificate Authority?
    context: >
      This question aims to detect deceptive certificates. Adversaries create certificates with names that mimic legitimate software publishers (e.g., 'Mircosoft' instead of 'Microsoft') to fool users and analysts. They may also use a valid publisher name but have it issued by a low-reputation or unauthorized CA. By using regex to find typos and maintaining a mapping of trusted publishers to their authorized CAs, we can automatically flag these highly suspicious binaries.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - All Endpoints
      - Public-Facing Web Servers
      - Software Distribution Points
      - DNS Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_events | EXTRACT certificate_subject, certificate_issuer
          IF subject MATCHES regex_list_of_typosquats:
            ALERT on typosquatting
          LOOKUP subject in trusted_publisher_to_CA_map
          IF subject is trusted AND issuer NOT IN authorized_CAs_for_subject:
            ALERT on unauthorized_CA
  - question: Are there any certificates with subject names that are very similar, but not identical, to high-value brand names, especially if issued by a rare CA?
    context: >
      This question uses string distance metrics to find subtle forms of typosquatting that simple regex might miss. By calculating the Damerau-Levenshtein distance between a new certificate's subject name and a list of important brand names, we can quantify its "closeness." A low distance (e.g., 1-2 character difference) indicates a potential impersonation attempt. Combining this with the rarity of the issuing CA provides a powerful composite score for prioritizing investigations.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - All Endpoints
      - Public-Facing Web Servers
      - Software Distribution Points
      - DNS Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_certificate:
            CALCULATE min_levenshtein_distance from certificate_subject to list_of_brand_names
            CALCULATE rarity_score for certificate_issuer
            IF min_levenshtein_distance <= 2 AND rarity_score is high:
              ALERT on potential_impersonation
  - question: Can we use NLP models to assign a "deception score" to certificate strings to identify suspicious outliers?
    context: >
      This question applies advanced text analysis to identify deceptive certificate strings. Adversaries may use randomly generated or oddly constructed names that don't look like legitimate company names. An NLP model can be trained to recognize the patterns of normal vs. abnormal strings based on features like character frequencies, entropy, and word structures. By scoring all new certificates, we can surface outliers that warrant investigation, especially if they are also rare in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - All Endpoints
      - Public-Facing Web Servers
      - Software Distribution Points
      - DNS Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_certificate:
            EXTRACT certificate_subject, certificate_issuer
            INPUT strings into pre-trained_NLP_deception_model
            GET deception_score
            IF deception_score > threshold:
              ALERT for review
  - question: Are any executables signed by a certificate from a known low-reputation or free Certificate Authority?
    context: >
      This question focuses on the source of the certificate's trust. While free CAs like Let's Encrypt are legitimate for websites, they are highly unusual for signing enterprise-grade software executables. Adversaries may abuse these low-cost, easily accessible CAs to sign their tools. By maintaining a list of CAs not expected for commercial software and alerting when a binary is signed by one, we can quickly identify suspicious files that warrant scrutiny.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - Log Management Platform (for baselining)
      - All Enterprise Endpoints and Servers
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_events WHERE binary_is_signed
          EXTRACT certificate_issuer
          IF certificate_issuer IN list_of_low_reputation_CAs:
            ALERT on executable signed by low-reputation CA
  - question: Are any executables signed by a certificate whose issuer, subject, or validity period is a statistical outlier in the environment?
    context: >
      This question uses environmental baselining to find anomalies. Most software in an enterprise comes from a relatively small set of publishers, and their certificates have typical validity periods. An adversary's tool will likely be signed by a rare publisher and may have an unusually short or long validity period. By establishing a statistical baseline and alerting on deviations (e.g., issuer seen on <0.1% of hosts, validity >3 standard deviations from the mean), we can detect suspicious outliers without prior knowledge of the threat.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - Log Management Platform (for baselining)
      - All Enterprise Endpoints and Servers
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE prevalence (host percentage) for each certificate_issuer and subject over last 30 days
          CALCULATE mean and stddev of certificate_validity_period over last 30 days
          SEARCH process_events in last 24 hours
          IF issuer_prevalence < 0.1% OR subject_prevalence < 0.1% OR validity_period is outlier:
            ALERT on rare or outlier certificate
  - question: Is there an anomalous spike in the daily number of new, unique certificate issuers appearing in the environment?
    context: >
      This question looks for campaign-level activity using time-series analysis. A sophisticated adversary might use a wide range of newly acquired certificates to avoid single-point detection. This would manifest as a sudden, sharp increase in the number of new certificate issuers observed per day. By applying an anomaly detection algorithm to this metric, we can identify a deviation from the normal "background noise" of software updates, potentially indicating a coordinated attack campaign.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows AppLocker Event ID 8002
      - Windows Code Integrity Event ID 3076
      - Zeek ssl.log
      - Log Management Platform (for baselining)
      - All Enterprise Endpoints and Servers
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE daily_count_of_new_unique_issuers over time
          APPLY time-series anomaly detection model (e.g., Seasonal-Hybrid ESD)
          IF today's_count is flagged as anomalous_spike:
            TRIGGER investigation into the new issuers from today
  - question: Is a new root or trusted publisher certificate being installed by an unauthorized process?
    context: >
      This is a critical security question, as installing a malicious root certificate allows an adversary to completely compromise the trust model of a system. They can sign any malware and have it appear trusted, or perform man-in-the-middle attacks on TLS traffic. We must monitor for certificate store modifications and alert immediately if the process performing the action is not on a strict allowlist of approved system and software management tools (e.g., gpupdate.exe, certutil.exe with approved arguments).
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 16
      - Microsoft-Windows-CAPI2/Operational Event ID 41
      - Windows Security Event ID 4673
      - Domain Controllers
      - Certificate Authority Servers
      - Critical Application Servers
      - Developer Workstations
      - Change Management Database/System
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH certificate_store_modification_events (Sysmon 16, CAPI2 41)
          GET parent_process_name and command_line
          IF parent_process_name NOT IN approved_process_list
          OR (process is 'certutil.exe' AND command_line contains '-addstore'):
            ALERT on unauthorized certificate installation
  - question: Is a certificate installation being performed by a user or process that rarely or never performs this action on a given host type?
    context: >
      This question uses behavioral analytics to find anomalous certificate installations. Certificate management is typically a privileged and infrequent activity performed by specific administrative accounts or system processes. By creating a baseline of "who does what where," we can detect when an unusual actor performs this sensitive action. For example, a service account associated with a web application suddenly installing a certificate on a user workstation is highly suspicious and warrants an alert.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 16
      - Microsoft-Windows-CAPI2/Operational Event ID 41
      - Windows Security Event ID 4673
      - Domain Controllers
      - Certificate Authority Servers
      - Critical Application Servers
      - Developer Workstations
      - Change Management Database/System
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE user_process_pairs performing cert installs per host_type over last 90 days
          SEARCH new_cert_install_events
          EXTRACT user, process, host_type
          IF user_process_pair is statistically rare for that host_type in baseline:
            ALERT on anomalous user/process behavior
  - question: Does the process chain leading to a certificate installation deviate from known, legitimate patterns?
    context: >
      This question uses graph-based analysis to detect malicious execution chains. Legitimate certificate installations follow predictable process trees (e.g., a Group Policy update). Adversaries, however, often install certificates from unusual parent processes, such as a user opening a malicious document in Microsoft Word that launches PowerShell to install a root CA. By modeling the "graphs" of legitimate installations and alerting on deviations, we can detect these malicious chains with high fidelity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 16
      - Microsoft-Windows-CAPI2/Operational Event ID 41
      - Windows Security Event ID 4673
      - Domain Controllers
      - Certificate Authority Servers
      - Critical Application Servers
      - Developer Workstations
      - Change Management Database/System
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL legitimate process_ancestry_graphs for certificate installations
          FOR each new certificate installation:
            CONSTRUCT its process_ancestry_graph
            IF graph does not match any legitimate model (e.g., has 'WINWORD.EXE' as an ancestor):
              ALERT on anomalous process chain
  - question: Are there network connections to Certificate Revocation List (CRL) or OCSP endpoints that are not on an established enterprise allowlist?
    context: >
      This question aims to detect when a client tries to validate a certificate from an unknown or unauthorized Certificate Authority. An enterprise's legitimate software uses a predictable set of CAs, and therefore a predictable set of CRL/OCSP endpoints for validation. If a malicious binary signed by an unusual CA is executed, the OS may attempt to connect to that CA's validation endpoint. By allowlisting known-good endpoints and alerting on any deviation, we can detect the presence of suspicious software.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Firewall Logs
      - Proxy Logs
      - Network Egress Points
      - DNS Servers
      - Web Proxies
      - DNS Resolver Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BUILD allowlist of CRL/OCSP domains from observed network traffic over 30 days
          MONITOR outbound DNS queries and HTTP connections
          IF destination_domain is for CRL/OCSP AND NOT IN allowlist:
            ALERT on connection to unauthorized validation endpoint
  - question: Are there DNS requests for CRL/OCSP domains that are statistically rare or have high character entropy?
    context: >
      This question hunts for two types of malicious activity. First, similar to other rarity checks, a connection to a very infrequent validation domain suggests a rare and potentially malicious certificate is being checked. Second, high entropy in a domain name is a classic indicator of a Domain Generation Algorithm (DGA), which adversaries use for resilient command and control infrastructure. An adversary could host their own malicious CRL/OCSP service on a DGA domain, and flagging high-entropy requests helps detect this.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Firewall Logs
      - Proxy Logs
      - Network Egress Points
      - DNS Servers
      - Web Proxies
      - DNS Resolver Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE frequency of all CRL/OCSP domains over 30 days
          SEARCH DNS logs for CRL/OCSP requests
          IF domain_frequency is in bottom 0.5 percentile OR character_entropy of domain > high_entropy_threshold:
            ALERT on rare or high-entropy validation domain request
  - question: Is there a coordinated anomaly across multiple network indicators related to certificate validation?
    context: >
      This question uses a multivariate model to detect a more subtle, distributed attack. An adversary might use certificates that are just below individual alerting thresholds. However, their activity in aggregate might create a signal. By monitoring multiple related time-series metrics—such as the volume of requests to new CRL/OCSP domains, the number of unique server IPs for these services, and the connection failure rate—a multivariate anomaly detection model can spot a coordinated pattern (e.g., a simultaneous spike in all three) that indicates a widespread campaign using fake or revoked certificates.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Firewall Logs
      - Proxy Logs
      - Network Egress Points
      - DNS Servers
      - Web Proxies
      - DNS Resolver Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRACK time-series metrics:
          1. daily_volume_of_requests_to_new_crl_ocsp_domains
          2. daily_count_of_unique_crl_ocsp_server_ips
          3. daily_ratio_of_failed_to_successful_crl_ocsp_connections
          INPUT metrics into multivariate_anomaly_detection_model
          IF model flags a coordinated anomaly across features:
            ALERT on suspicious validation activity pattern