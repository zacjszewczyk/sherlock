name: 'T1036.009: Break Process Trees'
id: '5c9f5e1a-9c6b-4e0d-8a3d-4f1e5c2b0a9f'
description: This playbook helps investigate whether an adversary is evading defenses by breaking process tree ancestry. This involves techniques like PPID spoofing, process orphaning, and other methods to detach a malicious process from its true parent. The investigation focuses on identifying newly created processes that are known malicious files, launched from legitimate utilities with suspicious arguments, have an unexpected or non-existent parent, terminate their parent shortly after creation, or initiate suspicious outbound network connections after being created with anomalous ancestry.
type: technique
related:
  - 'TA0005: Defense Evasion'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: Are any newly created processes known malicious files based on their hash or filename?
    context: This question seeks to identify the execution of known malware by cross-referencing the file hash and name of every new process against a threat intelligence feed. A match is a high-fidelity indicator that a recognized malicious file is active on a host, which is a common starting point for an attack chain.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All enterprise endpoints and servers, including Domain Controllers and critical application servers.'
    range: last 90 days
    queries:
      - symbolic: 'SEARCH process_creation_events | JOIN threat_intelligence_feeds ON (process_hash OR process_name) | WHERE match_found'
  - question: Are any newly created processes statistically rare within the environment based on their image hash?
    context: This question aims to uncover novel or targeted malware by identifying processes whose file hash is uncommon across the enterprise. Rarity can indicate a tool that is not part of the standard software baseline, such as a custom-compiled malicious payload or a niche hacking tool.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All enterprise endpoints and servers, including Domain Controllers and critical application servers.'
    range: last 90 days
    queries:
      - statistical: 'SEARCH process_creation_events | GROUP_BY process_hash | CALCULATE prevalence | WHERE prevalence < threshold (e.g., 5 hosts)'
  - question: Do any rare processes exhibit features characteristic of malware according to a machine learning model?
    context: This question provides a deeper analysis of rare processes identified previously. By extracting structural features from the executable file (e.g., PE header, sections, imports) and feeding them into a trained classifier, we can assign a maliciousness score. This helps prioritize investigation on files that are not only rare but also structurally suspicious.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All enterprise endpoints and servers, including Domain Controllers and critical application servers.'
    range: last 90 days
    queries:
      - machine_learning: 'SEARCH rare_process_events | EXTRACT PE_features | APPLY ML_model (e.g., RandomForest) | WHERE score > 0.90'
  - question: Are legitimate system utilities being launched with suspicious command-line arguments indicative of obfuscation or in-memory execution?
    context: Adversaries frequently abuse trusted system utilities (e.g., powershell.exe, rundll32.exe) to execute malicious code, a technique known as living-off-the-land. This question uses regular expressions to find known suspicious patterns, such as encoded commands (-enc) or in-memory execution flags (IEX), within the command line of these utilities.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations and servers where administrative or development tools like PowerShell are commonly used.'
    range: last 90 days
    queries:
      - symbolic: 'SEARCH process_creation_events WHERE process_name IN (powershell.exe, mshta.exe, etc.) | APPLY regex_patterns ON command_line | WHERE match_found'
  - question: Do the command lines of monitored system utilities show an unusually high level of entropy compared to their baseline?
    context: Obfuscated commands and scripts, often used by attackers to hide their actions, tend to have a higher degree of randomness (entropy) than legitimate commands. This question aims to detect this obfuscation by calculating the entropy of command lines and flagging any that are statistical outliers for that specific utility.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations and servers where administrative or development tools like PowerShell are commonly used.'
    range: last 90 days
    queries:
      - statistical: 'SEARCH process_creation_events WHERE process_name IN (monitored_utilities) | CALCULATE shannon_entropy(command_line) | WHERE entropy > 98th_percentile_baseline'
  - question: Can the command-line arguments of monitored utilities be classified as malicious by a machine learning model?
    context: This question moves beyond simple pattern matching or entropy analysis. By converting command-line arguments into numerical vectors and using a trained machine learning model, it can score the likelihood of malicious intent, enabling the detection of more sophisticated or novel obfuscation techniques.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'User workstations and servers where administrative or development tools like PowerShell are commonly used.'
    range: last 90 days
    queries:
      - machine_learning: 'SEARCH process_creation_events WHERE process_name IN (monitored_utilities) | VECTORIZE command_line | APPLY ML_model (e.g., SVM) | WHERE score > 0.85'
  - question: Are there instances of processes being created with an unexpected, non-existent, or recently terminated parent process?
    context: This question looks for direct evidence of process tree manipulation, such as PPID Spoofing. It checks for processes spawning from parents that should never have children (e.g., lsass.exe) or where the parent process ID has already terminated, effectively orphaning the child process to hide its origin.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.'
    range: last 90 days
    queries:
      - symbolic: 'SEARCH process_creation_events (4688) | IF parent_process_name IN (unexpected_parents) ALERT | JOIN process_termination_events (4689) ON parent_process_id | IF parent_terminated_before_child ALERT'
  - question: Are there any parent-child process relationships that are historically rare or unprecedented in the environment?
    context: This question establishes a behavioral baseline of normal parent-child process relationships across the environment. By flagging any new pairing that is statistically improbable (e.g., Microsoft Word spawning a PowerShell process), it can effectively detect anomalous execution chains that may indicate malicious activity.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.'
    range: last 90 days
    queries:
      - statistical: 'BUILD baseline_model of parent_child_pairs | SEARCH process_creation_events | COMPARE pair to baseline | WHERE pair_frequency < 1st_percentile'
  - question: Can anomalous process ancestry patterns be identified as outliers using graph-based clustering algorithms?
    context: This question models process creation events and their relationships as a large-scale graph. By applying clustering algorithms, it can identify common, legitimate behavioral clusters. Events that do not fit into any cluster are flagged as outliers, representing highly anomalous ancestry patterns that warrant investigation.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.'
    range: last 90 days
    queries:
      - machine_learning: 'CONVERT process_events to graph_nodes | APPLY clustering_algorithm (e.g., DBSCAN) | IDENTIFY outlier_nodes for investigation'
  - question: Are processes with recently terminated parents (orphaned processes) being created in untrusted directories?
    context: This question creates a high-confidence alert by correlating two distinct suspicious behaviors. It looks for processes where the parent terminates almost immediately after the child is created (a sign of orphaning) and where the child process is executed from a non-standard, low-trust location like a temp folder.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.'
    range: last 90 days
    queries:
      - symbolic: 'CORRELATE process_creation (4688) and termination (4689) | WHERE (parent_term_time - child_create_time < 2s) AND (child_path IN low_trust_dirs) | ALERT'
  - question: Are there parent processes that terminate statistically faster after child creation than is typical for the environment?
    context: This question seeks to identify process orphaning by focusing on 'quick-exit' parents. It calculates the time delta between a child's creation and its parent's termination for all processes and flags events in the lowest percentile of that distribution, indicating an abnormally fast termination that is statistically significant.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.'
    range: last 90 days
    queries:
      - statistical: 'CALCULATE time_delta for all parent-child create/terminate pairs | FIND distribution of deltas | WHERE delta < 1st_percentile'
  - question: Is there an anomalous spike in the rate of 'quick-exit parent' events on any given host?
    context: This question applies time series analysis to monitor the rate of process orphaning on a per-host basis. By tracking the count of 'quick-exit' events over time, an anomaly detection algorithm can identify a sudden burst of this activity, which could indicate a malware infection or lateral movement attempt.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.'
    range: last 90 days
    queries:
      - machine_learning: 'CREATE time_series of ''quick-exit'' counts per host | APPLY anomaly_detection_model (e.g., SARIMA) | ALERT on significant spikes'
  - question: Are processes with anomalous ancestry making outbound network connections to known malicious IP addresses?
    context: This is a critical correlation question that connects internal host behavior with external network activity. It takes processes already flagged for suspicious ancestry (e.g., orphaned, reparented) and checks if they are initiating connections to IP addresses on a C2 blocklist. A match provides strong evidence of an active compromise.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek ssl.log'
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'Windows Event ID 5156'
      - 'Network egress points (for Zeek data), and all enterprise endpoints and servers (for process and Windows Filtering Platform logs).'
    range: last 90 days
    queries:
      - symbolic: 'SEARCH for anomalously-parented processes | CORRELATE PID with network_connection_events | JOIN destination_ip with C2_blocklist | ALERT on match'
  - question: Are TLS connections from anomalously-parented processes using rare JA3/JA3S hashes?
    context: The JA3/JA3S hash is a fingerprint for a TLS client/server negotiation. Many malware families have unique fingerprints. This question looks for connections from anomalously-parented processes that use a JA3/JA3S hash that is rare in the environment, which is a strong indicator of a non-standard or malicious C2 channel.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek ssl.log'
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'Windows Event ID 5156'
      - 'Network egress points (for Zeek data), and all enterprise endpoints and servers (for process and Windows Filtering Platform logs).'
    range: last 90 days
    queries:
      - statistical: 'SEARCH for TLS connections from anomalously-parented processes | EXTRACT JA3/JA3S hash | CALCULATE prevalence of hash | WHERE prevalence < 1% AND NOT in allowlist'
  - question: Can network connections from anomalously-parented processes be classified as malicious based on a combination of network and process features?
    context: This question uses a machine learning model to score the maliciousness of network connections originating from processes with suspicious ancestry. It builds a rich feature set including destination port, JA3 rarity, requested domain entropy, and data transfer volume to provide a sophisticated, high-confidence assessment of whether the connection is part of a C2 channel.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek ssl.log'
      - 'Windows Event ID 4688'
      - 'Windows Event ID 4689'
      - 'Windows Event ID 5156'
      - 'Network egress points (for Zeek data), and all enterprise endpoints and servers (for process and Windows Filtering Platform logs).'
    range: last 90 days
    queries:
      - machine_learning: 'SEARCH network_connections from anomalous processes | CREATE feature_set (port, JA3 rarity, domain entropy, etc.) | APPLY ML_model (e.g., XGBoost) | WHERE score > 0.85'