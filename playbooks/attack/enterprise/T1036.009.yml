name: T1036.009: Break Process Trees
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps investigate if an adversary is evading defenses by breaking process tree ancestry. This involves looking for new processes that are known malware, legitimate utilities being used with obfuscated or malicious command-line arguments, processes with unexpected or non-existent parent processes (indicating PPID spoofing), parent processes that terminate immediately after creating a child to orphan it, and processes with anomalous ancestry that subsequently initiate outbound network connections.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any newly created processes whose filename or image hash match known malicious indicators from threat intelligence feeds?
  context: |
    This question seeks to identify adversaries using known malware or tools. By comparing the filenames and, more reliably, the SHA256 hashes of newly created processes against a curated list of malicious indicators, analysts can quickly detect the execution of known threats. A match provides a high-confidence starting point for an investigation.
  answer_sources:
  - Windows Event ID 4688
  - All enterprise endpoints and servers, including Domain Controllers and critical application servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process creation events (EID 4688). FOR each event, GET NewProcessName and ImageHash. COMPARE NewProcessName and ImageHash against threat intelligence lists. ALERT on match.
- question: Have any rare processes, based on the global prevalence of their image hash, been executed in the environment?
  context: |
    This question helps uncover novel or targeted malware that may not yet be in threat intelligence feeds. Adversaries often use custom tools that will appear as rare in a specific environment. By establishing a baseline of common process hashes and flagging outliers (e.g., seen on very few hosts), analysts can identify potentially suspicious activity that warrants further scrutiny.
  answer_sources:
  - Windows Event ID 4688
  - All enterprise endpoints and servers, including Domain Controllers and critical application servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process creation events (EID 4688) over last 30 days. FOR each ImageHash, COUNT unique hosts. IDENTIFY hashes seen on < 5 hosts. SEARCH for execution of these rare hashes in the last 90 days. FLAG as rare.
- question: Have any rare processes been classified as malicious by a machine learning model based on their Portable Executable (PE) header features?
  context: |
    This question leverages machine learning to automatically assess the maliciousness of rare processes, reducing analyst workload. By analyzing structural features of the executable file (PE header), a trained model can predict if a file is likely malicious, even if its hash is unknown. A high score from the model on a rare process is a strong indicator of a potential threat.
  answer_sources:
  - Windows Event ID 4688
  - All enterprise endpoints and servers, including Domain Controllers and critical application servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: IDENTIFY rare processes using statistical method. FOR each rare process, EXTRACT PE header features. INPUT features into ML classifier. IF maliciousness score > 0.90, ESCALATE for investigation.
- question: Are legitimate system utilities being run with suspicious command-line arguments indicative of in-memory execution or obfuscation?
  context: |
    This question aims to detect fileless malware and living-off-the-land techniques where adversaries abuse legitimate tools like PowerShell or rundll32. By using regular expressions to search for known suspicious patterns (e.g., encoded commands, download strings), analysts can identify when these tools are being used for malicious purposes.
  answer_sources:
  - Windows Event ID 4688
  - User workstations and servers where administrative or development tools like PowerShell are commonly used.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process creation events for monitored utilities (powershell.exe, mshta.exe, etc.). APPLY regex library to CommandLine field to find patterns like '-enc', 'IEX', 'DownloadString'. ALERT on match.
- question: Are there any command lines for monitored system utilities with anomalously high entropy scores?
  context: |
    This question helps find obfuscated commands that might be missed by specific pattern matching. Highly obfuscated or encrypted scripts often have a higher Shannon entropy than normal commands. By establishing a baseline entropy for each utility's command lines, analysts can flag significant deviations that suggest obfuscation, even if the specific technique is novel.
  answer_sources:
  - Windows Event ID 4688
  - User workstations and servers where administrative or development tools like PowerShell are commonly used.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR each monitored utility, CALCULATE baseline for command-line entropy. SEARCH for new process creations involving these utilities. CALCULATE entropy of command line. IF entropy > 98th percentile of baseline, FLAG for review.
- question: Has a machine learning model classified any command lines as malicious based on their content and structure?
  context: |
    This question uses machine learning to score the maliciousness of command lines, providing a more robust detection method than simple pattern matching or entropy alone. By vectorizing command-line arguments and using a trained classifier, this approach can identify complex malicious patterns and reduce false positives by correlating high-risk scores with other indicators like high entropy.
  answer_sources:
  - Windows Event ID 4688
  - User workstations and servers where administrative or development tools like PowerShell are commonly used.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR command lines of monitored utilities, VECTORIZE arguments (e.g., TF-IDF). INPUT vector into a trained classifier (e.g., SVM). IF maliciousness score > 0.85, CORRELATE with high entropy and ALERT.
- question: Have any processes been spawned by an unexpected parent process or a parent that terminated immediately before creation?
  context: |
    This question looks for direct evidence of process tree manipulation, such as Parent Process ID (PPID) spoofing. Certain system processes like 'lsass.exe' or 'services.exe' should not be spawning child processes. An alert on such an event, or on a child process whose parent appears to have terminated just before its creation, is a strong indicator of defense evasion.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process creation events (4688). IF ParentProcessName is in a blocklist (lsass.exe, smss.exe), ALERT. Also, CORRELATE ParentProcessId with recent termination events (4689) to check for pre-creation termination.
- question: Are there any historically unprecedented or rare parent-child process relationships observed in the environment?
  context: |
    This question helps to baseline normal system behavior and identify anomalies. By building a statistical model of common parent-child process pairings (e.g., 'winword.exe' spawning 'eqnedt32.exe'), analysts can automatically flag new or extremely infrequent pairings. This can uncover novel adversary techniques that abuse legitimate software in unusual ways.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: BUILD a frequency distribution model of parent-child process pairs over a baseline period. FOR each new process creation event, CHECK if the parent-child pair is new or below the 1st percentile of frequency. FLAG as anomalous.
- question: Has a clustering algorithm identified any anomalous process ancestry patterns as outliers?
  context: |
    This question applies unsupervised machine learning to discover complex, anomalous process behaviors without relying on pre-defined rules. By representing process creation events as a graph and using a clustering algorithm like DBSCAN, normal activity forms dense clusters. Events that fall outside these clusters are marked as noise or outliers, representing highly unusual ancestry patterns that warrant investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: REPRESENT process creation events as graph nodes with features (parent name, child name, user). APPLY density-based clustering (e.g., DBSCAN). INVESTIGATE events marked as outliers by the algorithm.
- question: Has a parent process terminated very quickly (e.g., less than 2 seconds) after creating a child process located in a low-trust directory?
  context: |
    This question targets a specific technique known as process orphaning, where a parent process quickly exits to detach its child from the original process tree, often to evade detection. Correlating this quick-exit behavior with the child process running from a non-standard or temporary location (e.g., %APPDATA%, C:\Windows\Temp) creates a high-confidence indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: CORRELATE process creation (4688) and termination (4689) events on ProcessId. IF parent termination occurs < 2 seconds after child creation AND child path is in a low-trust directory, GENERATE high-severity alert.
- question: Have there been any parent-child process pairs where the parent's termination time is a statistical outlier?
  context: |
    This question provides a statistical method to detect process orphaning without a fixed time threshold. By calculating the distribution of time deltas between a child's creation and its parent's termination across the enterprise, any event with a delta in the extreme low end of the distribution (e.g., 1st percentile) can be flagged as a 'quick-exit' parent, indicating potentially evasive behavior.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: CALCULATE time delta between all parent terminations (4689) and their child creations (4688). COMPUTE the distribution over a 30-day window. FLAG any event pair with a delta below the 1st percentile of the distribution.
- question: Has a time series anomaly detection algorithm detected a spike in 'quick-exit parent' events on any single host?
  context: |
    This question aims to detect a burst of process orphaning activity on a compromised host. A single 'quick-exit' event might be noise, but a sudden increase in these events on one machine is highly suspicious. By tracking the rate of these events over time and applying an anomaly detection algorithm, analysts can automatically identify hosts that may be undergoing active exploitation or post-exploitation activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: CREATE a per-host time series of 'quick-exit parent' event counts per hour. APPLY a time series anomaly detection algorithm (e.g., SARIMA). A significant spike in the count TRIGGERS an alert.
- question: Has a process with previously flagged anomalous ancestry made an outbound network connection to a known malicious IP address?
  context: |
    This question correlates internal host-based indicators of process tree manipulation with network-based indicators of command-and-control (C2) activity. A process that was already flagged as suspicious (e.g., orphaned, reparented) that then communicates with a known C2 server is a critical, high-confidence alert that requires immediate incident response.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Windows Event ID 5156
  - Network egress points and all enterprise endpoints and servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: TAG processes with anomalous ancestry. CORRELATE tagged processes by PID with network connection events (EID 5156 or Zeek conn.log). IF destination IP is on a C2 blocklist, GENERATE critical alert.
- question: Has a process with anomalous ancestry initiated a TLS connection that uses a rare JA3/JA3S hash?
  context: |
    This question helps to identify potentially malicious encrypted C2 traffic from a suspicious process, even if the destination IP is not on a blocklist. The JA3/JA3S hash fingerprints a TLS client/server communication. Adversary tools often have unique or rare fingerprints. A rare hash originating from an anomalously-parented process is a strong signal of suspicious C2 communication.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Windows Event ID 5156
  - Network egress points and all enterprise endpoints and servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR TLS connections (Zeek ssl.log) from anomalously-parented processes, EXTRACT JA3/JA3S hash. CALCULATE prevalence of hash across enterprise. IF hash is rare (<1% of connections) and not on an allowlist, FLAG as suspicious.
- question: Has a machine learning model classified any network connections originating from an anomalously-parented process as malicious?
  context: |
    This question provides a comprehensive, automated assessment of network traffic from a suspicious process. By feeding a rich feature set (port, JA3 rarity, domain entropy, connection duration, bytes transferred) into a trained model, the system can score the likelihood that the connection is malicious. This helps analysts prioritize the most significant threats by combining host and network artifacts into a single, high-fidelity signal.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Windows Event ID 5156
  - Network egress points and all enterprise endpoints and servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR network connections from anomalously-parented processes, BUILD feature set (port, JA3 rarity, domain entropy, etc.). INPUT into a pre-trained ML model. IF score > 0.85, ESCALATE for review.