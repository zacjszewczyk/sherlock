name: "T1098.004: SSH Authorized Keys"
id: "f4b3c2d1-8e9a-4f0c-8b5d-9c3e2a1b0d6f"
description: "This playbook helps analysts investigate whether an adversary is maintaining persistence or escalating privileges by modifying SSH authorized_keys files. It provides questions to detect this activity by analyzing SSH login events for anomalies (e.g., logins from malicious IPs, new geographic locations), monitoring for direct file modifications (e.g., from web shells), tracking suspicious parent processes, correlating file changes with subsequent logins using new keys, and monitoring for insecure SSH daemon configurations or cloud API calls that inject SSH keys."
type: "technique"
related:
  - "TA0003: Persistence"
  - "TA0004: Privilege Escalation"
contributors:
  - "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are there successful inbound SSH public key authentications originating from known malicious IP addresses?"
    context: "This question aims to detect adversaries using compromised credentials from known malicious infrastructure. It involves continuously querying inbound SSH logs and correlating the source IP address against high-confidence threat intelligence feeds (e.g., C2 servers, TOR exit nodes). A match is a high-priority indicator of compromise."
    answer_sources: "Zeek ssh.log, Zeek conn.log, Threat intelligence feeds of known malicious IPs. Relevant assets include SSH bastion hosts, Critical Linux/macOS servers, Internet gateways, VPN concentrators, and Centralized log repositories."
    range: "last 90 days"
    queries:
      - "Symbolic: Search Zeek ssh.log for successful inbound public key authentications. For each event, correlate the source IP ('orig_h') with a threat intelligence feed. Alert on any match."
  - question: "Has a user authenticated via SSH from a geographic location or Autonomous System (AS) that is anomalous compared to their historical activity?"
    context: "This question seeks to identify logins from unusual locations, which may indicate account takeover. It involves building a historical baseline of source countries and ASNs for each user's successful logins. An alert is triggered if a login occurs from a location not seen in the user's recent history (e.g., last 90 days), representing a rare and suspicious event."
    answer_sources: "Zeek ssh.log, Zeek conn.log, Geolocation data. Relevant assets include SSH bastion hosts, Critical Linux/macOS servers, Internet gateways, VPN concentrators, and Centralized log repositories."
    range: "last 90 days"
    queries:
      - "Statistical: For each user, join Zeek ssh.log and conn.log to build a 90-day baseline of source countries and ASNs. Monitor new successful logins and alert if a login's source country or ASN is not in the user's baseline."
  - question: "Does a user's successful SSH login exhibit characteristics that are significant outliers from their normal activity profile, as identified by a machine learning model?"
    context: "This question uses machine learning to detect subtle anomalies in user login behavior. An unsupervised anomaly detection model (e.g., Isolation Forest) is trained for each user on features like time of day, source ASN, source country, and SSH client version. The model flags logins that deviate significantly from the established normal pattern, suggesting a potential compromise."
    answer_sources: "Zeek ssh.log, Zeek conn.log. Relevant assets include SSH bastion hosts, Critical Linux/macOS servers, Internet gateways, VPN concentrators, and Centralized log repositories."
    range: "last 90 days"
    queries:
      - "Machine Learning: Train a per-user anomaly detection model on features from successful SSH logins. Score new logins against the model and alert on those identified as significant outliers."
  - question: "Is a process like 'echo', 'cat', 'curl', or 'wget' being used to redirect output into an '.ssh/authorized_keys' file, especially by a non-interactive user?"
    context: "This question aims to detect a common method of installing a malicious SSH key, often executed via a web shell. It involves monitoring process creation logs for command lines that show output being redirected to an authorized_keys file. This activity is highly suspicious, particularly if initiated by a web service user account (e.g., 'www-data'), and should trigger a high-priority alert."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Linux Auditd logs (syscall=execve). Relevant assets include Critical Linux servers, Developer workstations, Web servers, Application servers, and Containerized environments."
    range: "last 90 days"
    queries:
      - "Symbolic: Monitor process creation logs for command lines matching regex like '(echo|cat|curl|wget).*>>.*\\.ssh/authorized_keys'. Generate a high-priority alert on any match, especially if run by a web service user."
  - question: "Does a command line modifying an 'authorized_keys' file exhibit unusually high entropy, suggesting obfuscation?"
    context: "This question seeks to identify attempts to hide a malicious SSH key by encoding it. It involves calculating the Shannon entropy for any command that modifies an authorized_keys file. A command with an entropy score significantly higher than the historical baseline can indicate that an attacker is using encoding (e.g., base64), warranting an alert."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Linux Auditd logs (syscall=execve). Relevant assets include Critical Linux servers, Developer workstations, Web servers, Application servers, and Containerized environments."
    range: "last 90 days"
    queries:
      - "Statistical: For commands modifying 'authorized_keys', calculate the Shannon entropy of the command string. Establish a baseline entropy score and alert on commands with scores that are significant positive deviations (e.g., >95th percentile)."
  - question: "Has there been a sudden, enterprise-wide spike in the rate of 'authorized_keys' file modifications?"
    context: "This question aims to detect large-scale, automated attacks. It involves using a time-series anomaly detection model to monitor the aggregate rate of authorized_keys modifications per hour across all hosts. A sudden, coordinated spike across multiple systems, flagged as an anomaly, could signal a widespread campaign to establish persistence."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Linux Auditd logs (syscall=execve). Relevant assets include Critical Linux servers, Developer workstations, Web servers, Application servers, and Containerized environments."
    range: "last 90 days"
    queries:
      - "Machine Learning: Aggregate the count of 'authorized_keys' modifications per hour across the enterprise. Apply a time-series anomaly detection model to this data and alert on detected spikes."
  - question: "Was an 'authorized_keys' file modified by a process whose parent is not a typical shell or approved configuration management tool?"
    context: "This question aims to find modifications originating from illegitimate processes, such as web shells. It involves creating an allow-list of legitimate parent processes (e.g., 'bash', 'ansible-playbook') expected to modify authorized_keys files. An alert is generated if the modification is performed by a process whose parent is not on this list, such as 'httpd' or 'nginx'."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Linux Auditd logs. Relevant assets include Web servers, Application servers, Containerized environments, and Jump boxes."
    range: "last 90 days"
    queries:
      - "Symbolic: Define an allow-list of legitimate parent process names for 'authorized_keys' modifications. Monitor process creation events modifying the file and alert if the parent process name is not on the allow-list."
  - question: "Has a statistically rare parent-child process relationship resulted in the modification of an 'authorized_keys' file?"
    context: "This question seeks to identify novel or unusual methods of compromise. It involves calculating the historical frequency of every parent-child process pair that modifies an authorized_keys file. An alert is triggered for pairs that are statistically rare (e.g., occurring for the first time or in the bottom 1st percentile of frequency)."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Linux Auditd logs. Relevant assets include Web servers, Application servers, Containerized environments, and Jump boxes."
    range: "last 90 days"
    queries:
      - "Statistical: Log all parent-child process pairs that modify 'authorized_keys' files. Calculate the frequency of each pair over a 90-day baseline and alert on pairs that are statistically rare."
  - question: "Can a machine learning model classify a file modification event on an 'authorized_keys' file as malicious based on its context?"
    context: "This question leverages a supervised model to distinguish between benign and malicious activity. A classification model (e.g., Random Forest) is trained to differentiate between legitimate administrative actions and suspicious modifications using features like the parent process, user context, command line arguments, and process tree depth."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Linux Auditd logs. Relevant assets include Web servers, Application servers, Containerized environments, and Jump boxes."
    range: "last 90 days"
    queries:
      - "Machine Learning: Train a classification model on features of file modification events. Classify new 'authorized_keys' modification events and alert when an event is classified as malicious."
  - question: "Has there been a successful SSH login for a user with a new, previously unseen public key?"
    context: "This question provides situational awareness of key changes that could be part of an attack. It involves maintaining a stateful database of all known user-to-public-key pairings. A medium-priority alert is generated the first time any user successfully authenticates with a new public key, prompting a review of the change."
    answer_sources: "Zeek ssh.log, Windows Event ID 4688, Sysmon for Linux Event ID 1, File Integrity Monitoring (FIM) logs. Relevant assets include All SSH-enabled systems, Authentication servers, Centralized log repositories, and File servers hosting user home directories."
    range: "last 90 days"
    queries:
      - "Symbolic: Maintain a stateful database of known (user, public_key) pairs from Zeek ssh.log. Monitor successful SSH authentications and generate a medium-priority alert on the first use of a new public key for any user."
  - question: "Did a successful SSH login with a new public key occur for a user shortly after their 'authorized_keys' file was modified?"
    context: "This question provides a high-fidelity detection by correlating two distinct events. A rule triggers if a file modification on a user's authorized_keys file is followed by a successful SSH login by that user with a new key within a short time window (e.g., 15 minutes). This strong temporal proximity is a powerful statistical indicator of a compromise."
    answer_sources: "Zeek ssh.log, Windows Event ID 4688, Sysmon for Linux Event ID 1, File Integrity Monitoring (FIM) logs. Relevant assets include All SSH-enabled systems, Authentication servers, Centralized log repositories, and File servers hosting user home directories."
    range: "last 90 days"
    queries:
      - "Statistical: Monitor for file modification events on any user's 'authorized_keys' file. Correlate with successful SSH logins using new public keys. Alert if a new key login for a user occurs within 15 minutes of their file being modified."
  - question: "Can a sequence analysis model detect the specific pattern of an 'authorized_keys' file modification followed by a login with a new key?"
    context: "This question uses advanced modeling to detect a high-risk attack sequence while filtering out noise. A sequence analysis model (e.g., LSTM) is trained to recognize the specific pattern of [file modification of authorized_keys] -> [successful SSH login with new public key] as a high-risk, anomalous sequence, providing a very high-confidence alert."
    answer_sources: "Zeek ssh.log, Windows Event ID 4688, Sysmon for Linux Event ID 1, File Integrity Monitoring (FIM) logs. Relevant assets include All SSH-enabled systems, Authentication servers, Centralized log repositories, and File servers hosting user home directories."
    range: "last 90 days"
    queries:
      - "Machine Learning: Stream security events for each host into a sequence analysis model. Train the model to recognize the high-risk sequence of an 'authorized_keys' modification followed by a new key login, and alert when detected."
  - question: "Has a high-privilege account (e.g., root) been accessed via SSH from a known malicious IP address?"
    context: "This question aims to detect critical compromises of privileged accounts. It involves filtering SSH logs for successful logins to a defined list of high-privilege accounts and correlating the source IP with a CTI feed. A match indicates that a privileged account is being accessed from a known malicious source, requiring an immediate response."
    answer_sources: "Zeek ssh.log, Zeek conn.log, Threat intelligence feeds. Relevant assets include Domain controllers, Root-enabled servers, Cloud IAM infrastructure, Database administrator hosts, and ESXi hypervisors."
    range: "last 90 days"
    queries:
      - "Symbolic: Define a list of high-privilege accounts. Filter Zeek ssh.log for successful logins to these accounts. Correlate the source IP with a CTI feed and generate a critical alert on any match."
  - question: "Has a high-privilege account been accessed from a source that is outside its strictly defined baseline of allowed locations?"
    context: "This question enforces strict access control for sensitive accounts. Due to the nature of privileged accounts, this approach uses a strict, manually defined allow-list of source subnets, ASNs, and countries. Any successful login to a privileged account from a source not on this explicit allow-list is treated as a high-severity anomaly requiring immediate investigation."
    answer_sources: "Zeek ssh.log, Zeek conn.log. Relevant assets include Domain controllers, Root-enabled servers, Cloud IAM infrastructure, Database administrator hosts, and ESXi hypervisors."
    range: "last 90 days"
    queries:
      - "Statistical: For each privileged account, create a strict allow-list of source IP subnets, ASNs, and countries. Monitor successful logins and generate a high-severity alert for any login from a source not on the allow-list."
  - question: "Does a machine learning model, trained specifically on privileged account login data, detect an anomalous SSH login?"
    context: "This question uses a specialized model to achieve high-fidelity detection for privileged access abuse. By training an unsupervised anomaly detection model exclusively on historical login data for privileged accounts, it can detect subtle deviations in login patterns (e.g., unusual time, source IP) that a general-purpose model might miss."
    answer_sources: "Zeek ssh.log, Zeek conn.log. Relevant assets include Domain controllers, Root-enabled servers, Cloud IAM infrastructure, Database administrator hosts, and ESXi hypervisors."
    range: "last 90 days"
    queries:
      - "Machine Learning: Train a specialized anomaly detection model on historical login data for privileged accounts. Score new privileged account logins against this model and alert on significant outliers."
  - question: "Has the SSH daemon configuration file ('sshd_config') been modified to permit root login or password authentication?"
    context: "This question aims to detect insecure configuration changes that facilitate privilege escalation. It involves monitoring file integrity logs or process command lines for any modifications to '/etc/ssh/sshd_config'. A high-priority alert is generated for changes that enable less secure configurations, such as setting 'PermitRootLogin' to 'yes'."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Zeek ssh.log, File Integrity Monitoring (FIM) logs. Relevant assets include All SSH-enabled systems, System configuration management servers, and Git repositories storing infrastructure-as-code."
    range: "last 90 days"
    queries:
      - "Symbolic: Monitor FIM or process logs for modifications to '/etc/ssh/sshd_config'. Create a high-priority alert if the change contains 'PermitRootLogin yes' or 'PasswordAuthentication yes'."
  - question: "Was a change to 'sshd_config' that enabled root login immediately followed by a successful root login?"
    context: "This question uses temporal correlation to detect privilege escalation with high confidence. It looks for a file modification event on '/etc/ssh/sshd_config' that enables root login, followed by a successful SSH login to the 'root' account within a short time window (e.g., 10 minutes). This sequence is highly indicative of an attack."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Zeek ssh.log, File Integrity Monitoring (FIM) logs. Relevant assets include All SSH-enabled systems, System configuration management servers, and Git repositories storing infrastructure-as-code."
    range: "last 90 days"
    queries:
      - "Statistical: Monitor for modifications to '/etc/ssh/sshd_config' that enable root login. Correlate these events with successful 'root' logins. Alert if a root login occurs within 10 minutes of the configuration change."
  - question: "Can a sequence analysis model detect the multi-stage attack pattern of 'sshd_config' modification, SSH service restart, and subsequent root login?"
    context: "This question uses a sophisticated model to detect a full attack chain with high fidelity. A sequence analysis model is trained to recognize the pattern: [1] modification of sshd_config to allow root login, followed by [2] a process execution restarting the SSH service (e.g., 'systemctl restart sshd'), followed by [3] a successful root login from a new location. Detecting this entire sequence provides a very strong signal."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Zeek ssh.log, File Integrity Monitoring (FIM) logs. Relevant assets include All SSH-enabled systems, System configuration management servers, and Git repositories storing infrastructure-as-code."
    range: "last 90 days"
    queries:
      - "Machine Learning: Use a sequence model to monitor for the pattern: 'sshd_config' modification -> SSH service restart -> successful root login. Alert when the full sequence is detected."
  - question: "Was the 'authorized_keys' file for a privileged account (e.g., root) modified, and was this immediately followed by a login to that account using a new public key?"
    context: "This question identifies a critical indicator of an adversary gaining persistent, privileged access. A rule triggers when two events occur in a tight sequence (e.g., within 5 minutes): 1) a file modification to '/root/.ssh/authorized_keys', and 2) a successful SSH login to the 'root' account using a public key never before seen for that account. This warrants a critical-priority alert."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Zeek ssh.log, File Integrity Monitoring (FIM) logs. Relevant assets include Critical servers with privileged accounts, Database servers, Virtualization hypervisors (ESXi), and Cloud compute instances with root access."
    range: "last 90 days"
    queries:
      - "Symbolic: Create a rule that triggers if a file modification on '/root/.ssh/authorized_keys' is followed by a successful 'root' login with a new key within a 5-minute window. Generate a critical-priority alert."
  - question: "Has there been any new public key added to a privileged account's 'authorized_keys' file, which is a severe statistical outlier?"
    context: "This question treats any new key for a privileged account as a potential incident. It establishes that the baseline rate of new public key additions for accounts like 'root' is effectively zero. Therefore, any event involving a modification to a privileged authorized_keys file followed by a login with a new key is considered a severe statistical anomaly and should be treated as a confirmed incident pending investigation."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Zeek ssh.log, File Integrity Monitoring (FIM) logs. Relevant assets include Critical servers with privileged accounts, Database servers, Virtualization hypervisors (ESXi), and Cloud compute instances with root access."
    range: "last 90 days"
    queries:
      - "Statistical: Establish a baseline rate of new key additions for privileged accounts as zero. Treat any event involving a modification to a privileged 'authorized_keys' file followed by a new key login as a severe outlier and generate a critical alert."
  - question: "Does graph-based anomaly detection reveal a new, high-risk privilege escalation path involving an SSH key?"
    context: "This question uses graph analysis to find hidden relationships indicating privilege escalation. Users, hosts, and public keys are modeled as nodes in a graph. An anomaly, such as a public key from a low-privilege user being added to a high-privilege account (like 'root'), creates a new, high-risk 'path' in the graph that can be automatically detected and flagged."
    answer_sources: "Windows Event ID 4688, Sysmon for Linux Event ID 1, Zeek ssh.log, File Integrity Monitoring (FIM) logs. Relevant assets include Critical servers with privileged accounts, Database servers, Virtualization hypervisors (ESXi), and Cloud compute instances with root access."
    range: "last 90 days"
    queries:
      - "Machine Learning: Model users, hosts, and keys as a graph. Use algorithms to detect structural anomalies, such as a new edge creating a high-risk path (e.g., low-privilege key used for high-privilege account), and alert on detection."
  - question: "Has a cloud provider API call been used to add an SSH key to a compute instance, especially if initiated by an unusual user or from an untrusted network?"
    context: "This question targets abuse of cloud administrative functions. It involves monitoring cloud audit logs (e.g., AWS CloudTrail) for API calls that modify SSH keys on VMs. An alert is triggered if the call is made by a user or role that does not normally manage instance credentials, or if the API call originates from an IP address on an untrusted network."
    answer_sources: "AWS CloudTrail logs, Azure Activity Logs, Google Cloud Audit Logs, Zeek ssh.log, Zeek conn.log. Relevant assets include Cloud provider audit logs, Cloud virtual machines, Developer workstations with cloud CLI tools installed, and IAM services."
    range: "last 90 days"
    queries:
      - "Symbolic: Monitor cloud audit logs for API calls that modify SSH keys (e.g., AWS 'ModifyInstanceAttribute'). Alert if the API call is from an unexpected user/role or an untrusted source IP."
  - question: "Was a cloud API call that modified a VM's SSH keys immediately followed by a successful SSH login to that VM from a new source IP?"
    context: "This question links a cloud administrative action to subsequent network activity. It looks for a cloud audit log event where an SSH key is modified on a VM, followed by a successful SSH login to that VM's public IP from a new source address within a short time window (e.g., 5 minutes). This strong temporal link is a significant indicator of this specific technique."
    answer_sources: "AWS CloudTrail logs, Azure Activity Logs, Google Cloud Audit Logs, Zeek ssh.log, Zeek conn.log. Relevant assets include Cloud provider audit logs, Cloud virtual machines, Developer workstations with cloud CLI tools installed, and IAM services."
    range: "last 90 days"
    queries:
      - "Statistical: Correlate cloud audit log events for VM SSH key modification with Zeek network logs. Alert if a successful SSH login to the target VM from a new source IP occurs within 5 minutes of the API call."
  - question: "Can a machine learning model, trained on combined cloud and network logs, differentiate between legitimate and malicious SSH key injection?"
    context: "This question uses a classifier to distinguish between benign operations and attacks in a cloud environment. By training on a rich dataset combining cloud audit logs and network logs (using features like IAM principal, permissions, source IPs, etc.), the model can learn to differentiate legitimate key updates from malicious key injections used for privilege escalation."
    answer_sources: "AWS CloudTrail logs, Azure Activity Logs, Google Cloud Audit Logs, Zeek ssh.log, Zeek conn.log. Relevant assets include Cloud provider audit logs, Cloud virtual machines, Developer workstations with cloud CLI tools installed, and IAM services."
    range: "last 90 days"
    queries:
      - "Machine Learning: Train a classifier on combined cloud audit and network log features. Use the model to classify new key injection events and alert when an event is classified as malicious."