name: T1070.009: Clear Persistence
id: a3f5c79e-8b1a-4f9d-9c0e-7d6a5b4c3d2e
description: This playbook helps investigate whether an adversary is attempting to evade defenses by clearing persistence artifacts. This involves detecting the deletion of known malicious persistence objects identified via threat intelligence, the use of system utilities (schtasks.exe, sc.exe, reg.exe) with deletion arguments, the rapid removal of multiple distinct persistence mechanisms in a short timeframe, and the quick creation and deletion of persistence artifacts that were used for suspicious activities.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a user or process deleting a file, registry key, or user account that is a known malicious persistence artifact?
    context: This question aims to detect the removal of known malware persistence by comparing deletion events against a threat intelligence feed. A match is a strong indicator that an adversary is trying to cover their tracks by removing a known bad file, registry key, or back-door user account they previously established.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4657
      - Windows Event ID 4726
      - Domain Controllers
      - Critical Application Servers
      - Endpoints of privileged users
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH deletion events (EID 4663, 4657, 4726) | JOIN object_name with threat_intel_feed | WHERE match_found | ALERT high_severity
  - question: Is a user deleting an unusually high number of files or registry keys from common persistence locations?
    context: This question focuses on identifying anomalous behavior by establishing a baseline of normal deletion activity for each user in sensitive system areas. A significant deviation from this baseline, such as a sudden spike in deletions within persistence locations (like Run keys or AppData), could indicate a cleanup script or manual removal of multiple persistence mechanisms.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4657
      - Windows Event ID 4726
      - Domain Controllers
      - Critical Application Servers
      - Endpoints of privileged users
      - User Workstations
    range: last 30 days for baseline, last 24 hours for detection
    queries:
      - technology: pseudocode
        query: SEARCH deletion events in persistence locations | GROUPBY user | CALCULATE 30-day avg/stddev | COMPARE to last 24-hour count | ALERT if count > (avg + 3*stddev)
  - question: Does a deletion event exhibit characteristics associated with malicious cleanup activity based on a machine learning model?
    context: This question uses a machine learning model to score the risk of a deletion event. By analyzing a combination of features like the process performing the deletion, time of day, and the entropy of the object path, the model can identify subtle, complex patterns of malicious cleanup that might be missed by simpler rules. A high-risk score suggests the deletion is part of an intrusion.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4657
      - Windows Event ID 4726
      - Domain Controllers
      - Critical Application Servers
      - Endpoints of privileged users
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each deletion event | EXTRACT features (process, parent_process, user_privilege, path_entropy, time) | INPUT to ML model | IF risk_score > threshold | ALERT
  - question: Is a system utility like schtasks.exe, sc.exe, or reg.exe being used with a 'delete' command?
    context: Adversaries often use legitimate system tools to remove their persistence mechanisms (scheduled tasks, services, registry keys). This question looks for the specific execution of these tools with deletion arguments. The context of the execution, such as the parent process or the user's administrative rights, can help distinguish malicious use from benign administrative activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Domain Controllers
      - Tier 0/1 Servers
      - Endpoint devices of privileged users
      - DNS Servers
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process creation (EID 4688) | WHERE process_name IN (schtasks.exe, sc.exe, reg.exe) AND command_line CONTAINS 'delete' | ESCALATE if parent_process is not admin_tool OR user is not admin | ALERT
  - question: Is a host executing persistence deletion commands with an unusual frequency or with an abnormally structured command line?
    context: This question seeks to find outliers in how system utilities are used for deletion. A host that suddenly starts running many more `schtasks /delete` commands than it normally does, or runs a command with unusually high or low complexity (entropy), may be compromised. This helps detect automated cleanup scripts or manual but atypical activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Domain Controllers
      - Tier 0/1 Servers
      - Endpoint devices of privileged users
      - DNS Servers
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH deletion utility executions | GROUPBY host | CALCULATE baseline frequency and command_entropy | ALERT if current_frequency > 95th_percentile OR current_entropy is anomalous
  - question: Does a sequence of command-line activities, including a persistence deletion, deviate from learned benign patterns for a user session?
    context: This question uses an advanced machine learning model to understand the normal "flow" of command-line actions during a user session. A persistence deletion command appearing in an unusual context will be flagged as anomalous because the entire sequence does not match learned benign administrative workflows.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Domain Controllers
      - Tier 0/1 Servers
      - Endpoint devices of privileged users
      - DNS Servers
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each user session sequence of commands | INPUT sequence to autoencoder model | CALCULATE reconstruction_error | IF error is high for a sequence containing a deletion | ALERT
  - question: Has a single user session been observed deleting multiple types of persistence mechanisms within a short time frame?
    context: This question aims to detect a coordinated cleanup effort by an adversary. It is uncommon for a legitimate administrator to delete a scheduled task, a service, and a registry run key all within a five-minute window as part of a single session. Correlating these distinct deletion events to a single Logon ID strongly suggests a malicious script or actor is systematically removing their footprint.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4701
      - Windows Event ID 4657
      - Windows Event ID 4726
      - Windows Event ID 4697
      - All Windows Endpoints and Servers
      - Active Directory Domain Controllers
    range: last 5 minutes
    queries:
      - technology: pseudocode
        query: SEARCH deletion events (4701, 4697, 4657, 4726) | GROUPBY LogonID in 5-min windows | COUNT distinct persistence_types | IF count >= 2 | ALERT high_priority
  - question: Is a single process on a host responsible for deleting multiple categories of persistence mechanisms?
    context: Similar to the previous question, this focuses on a single process as the actor. If one process ID is seen deleting a service, then a task, then a registry key, it's highly likely to be a malicious cleanup tool. This approach is effective for identifying automated scripts that perform cleanup operations under a single process.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4701
      - Windows Event ID 4657
      - Windows Event ID 4726
      - Windows Event ID 4697
      - All Windows Endpoints and Servers
      - Active Directory Domain Controllers
    range: last 5 minutes
    queries:
      - technology: pseudocode
        query: SEARCH deletion events | GROUPBY host, ProcessID in 5-min intervals | COUNT distinct persistence_categories | IF count > 99th_percentile_baseline | ALERT
  - question: Can persistence deletion events be clustered together in a way that indicates a coordinated cleanup by a single actor on a specific host?
    context: This question uses clustering analysis to find dense groups of related deletion events. A cluster of events that involves many different persistence mechanisms but is tied to a single user and host is a strong signal of a targeted cleanup operation. DBSCAN is effective at finding these dense, isolated groups in a sea of otherwise normal activity.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4701
      - Windows Event ID 4657
      - Windows Event ID 4726
      - Windows Event ID 4697
      - All Windows Endpoints and Servers
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT all deletion events with features (time, host, user, mechanism_type) into DBSCAN | ANALYZE clusters | ALERT on clusters with high mechanism_type diversity and low user/host diversity
  - question: Was a recently created persistence mechanism, which was associated with suspicious activity, deleted shortly after its creation?
    context: This question looks for "burn-after-use" persistence. An adversary might create a user account or scheduled task, use it to connect to a C2 server or run malware, and then quickly delete it to evade detection. This query links the creation, suspicious usage, and rapid deletion of a persistence artifact, providing a high-fidelity indicator of compromise.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4726
      - Windows Event ID 4698
      - Windows Event ID 4701
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Authentication Servers (Domain Controllers)
      - Internet Gateway
      - DNS Servers
      - Endpoint devices
    range: last 72 hours
    queries:
      - technology: pseudocode
        query: ON persistence_creation | TRACK associated activity (processes, netconns) | IF activity matches IOC | ON deletion within 72 hours | ALERT critical
  - question: Was a persistence artifact deleted significantly faster than is typical for the organization?
    context: This question identifies artifacts with an abnormally short lifespan. By establishing a baseline for how long persistence mechanisms (like user accounts or services) normally exist before being deleted, we can flag those that are removed unusually quickly. A very short Time-To-Deletion (TTD) is suspicious and could indicate temporary, malicious persistence.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4726
      - Windows Event ID 4698
      - Windows Event ID 4701
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Authentication Servers (Domain Controllers)
      - Internet Gateway
      - DNS Servers
      - Endpoint devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE TTD for all persistence lifecycles | BUILD ECDF of TTDs | FOR each new deletion, calculate TTD | IF TTD < 5th_percentile | ALERT medium
  - question: Does the entire lifecycle of a persistence mechanism, from creation through usage to deletion, match a graph pattern indicative of malicious activity?
    context: This question uses advanced graph-based machine learning to model the entire lifecycle of a persistence object as a subgraph of system activity. The model learns what benign lifecycles look like and can then identify malicious patterns, such as 'unknown process creates task -> task connects to rare domain -> task is deleted hours later', by flagging subgraphs with anomalous structures.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4726
      - Windows Event ID 4698
      - Windows Event ID 4701
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Authentication Servers (Domain Controllers)
      - Internet Gateway
      - DNS Servers
      - Endpoint devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BUILD activity graph (nodes=entities, edges=interactions) | EXTRACT persistence lifecycle subgraphs | INPUT subgraphs to GNN model | IF subgraph embedding is anomalous | ALERT