name: T1021.004: SSH
id: f8d9e0c1-3b4a-4e5f-b6c7-d8e9f0a1b2c3
description: This playbook helps determine if an adversary has moved laterally through the network using SSH. It focuses on identifying malicious SSH client strings or server host keys, suspicious command-line arguments indicative of automation or evasion, anomalous connection pathways or geolocations not seen in historical baselines, fan-out activity where one host connects to many, and session characteristics like port forwarding or unusually high data volumes that suggest data tunneling rather than interactive use.
type: technique
related:
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are we observing SSH connections using client software versions or server host keys known to be malicious?
  context: This question aims to identify SSH sessions initiated by or to infrastructure with known malicious signatures. Adversaries may use custom or compromised SSH clients (like PuTTY_KiTTY) or connect to compromised servers. Matching client version strings or host key hashes against a threat intelligence feed provides a high-fidelity signal of malicious activity.
  answer_sources:
  - Zeek ssh.log
  - Network traffic inspection points (e.g., Zeek sensors), Bastion hosts, Internet gateways
  range: last 90 days
  queries:
  - symbolic: 'SEARCH Zeek ssh.log WHERE client_string IN [known_bad_clients] OR host_key_hash IN [known_bad_hashes]'
- question: Are there any rare or unusual SSH client versions being used across the enterprise?
  context: This question helps uncover potentially malicious or unauthorized SSH clients by focusing on statistical rarity. Adversaries might use niche or custom tools that are uncommon in the environment. By calculating the frequency of client strings, we can flag those that fall below a certain threshold, indicating they are outliers worthy of investigation.
  answer_sources:
  - Zeek ssh.log
  - Network traffic inspection points (e.g., Zeek sensors), Bastion hosts, Internet gateways
  range: last 30 days
  queries:
  - statistical: 'CALCULATE frequency of all client_strings in Zeek ssh.log over 30 days. FLAG client_strings with frequency < 0.01% or seen on < 3 hosts.'
- question: Can we predict if a new, unseen SSH client version string is malicious based on its characteristics?
  context: This question uses a machine learning approach to proactively identify malicious SSH clients, even if they aren't on a known-bad list. By training a model on features like string length and character patterns of both good and bad client strings, the system can score new strings for their likelihood of being malicious, catching novel threats.
  answer_sources:
  - Zeek ssh.log
  - Network traffic inspection points (e.g., Zeek sensors), Bastion hosts, Internet gateways
  range: last 90 days
  queries:
  - machine_learning: 'SCORE new client_strings from Zeek ssh.log using a classification model. ALERT if maliciousness_score > threshold.'
- question: Are there any SSH processes being executed with command-line arguments designed for automation or evasion?
  context: This question looks for specific command-line flags used with SSH clients that indicate malicious intent. Arguments that bypass host key checks ('-o StrictHostKeyChecking=no'), use null known hosts files ('-o UserKnownHostsFile=/dev/null'), or enable non-interactive batch mode ('-batch') are often used in automated scripts for lateral movement, allowing an adversary to connect to many hosts without manual intervention.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - All Windows and Linux endpoints and servers, especially Domain Controllers, Developer Workstations, and management servers
  range: last 90 days
  queries:
  - symbolic: 'SEARCH process creation logs FOR (ssh.exe OR plink.exe OR ssh) WITH command_line CONTAINS (''-o StrictHostKeyChecking=no'' OR ''-o UserKnownHostsFile=/dev/null'' OR ''-batch'').'
- question: Is any user executing SSH commands with arguments that are statistically rare for their own baseline behavior?
  context: This question aims to detect anomalous SSH usage on a per-user basis. An adversary who has compromised a user account may use SSH commands and arguments differently than the legitimate user. By baselining normal activity for each user and flagging significant deviations, we can spot account misuse, even if the arguments themselves aren't overtly malicious.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - All Windows and Linux endpoints and servers, especially Domain Controllers, Developer Workstations, and management servers
  range: last 90 days
  queries:
  - statistical: 'FOR each user, BASELINE SSH command arguments over 90 days. SCORE new SSH executions based on argument rarity. ALERT if risk_score > 99th percentile for that user.'
- question: Can we automatically identify clusters of suspicious SSH command-line patterns that deviate from known-good administrative scripts?
  context: This question uses unsupervised machine learning to discover novel or suspicious command-line patterns without pre-existing rules. By clustering all observed SSH command lines, the system can identify groups of commands that are outliers or do not match patterns from approved, legitimate automation. This helps find new attack techniques or unauthorized scripting.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - All Windows and Linux endpoints and servers, especially Domain Controllers, Developer Workstations, and management servers
  range: last 90 days
  queries:
  - machine_learning: 'VECTORIZE and CLUSTER all SSH command lines. IDENTIFY outlier clusters not containing known-good scripts. ALERT on new commands matching outlier clusters.'
- question: Has a new, never-before-seen SSH connection pathway between a user and a destination host been established?
  context: This question focuses on identifying the first instance of a user connecting to a specific host via SSH. Adversaries moving laterally often create new connection paths that deviate from established, legitimate access patterns. By maintaining a state table of known-good user-to-host pairs, we can immediately flag any new pair as a potential lateral movement event.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication servers (e.g., Active Directory), Critical servers (Linux/Windows), Network choke points, VPN concentrators, Zeek sensors
  range: last 30 days
  queries:
  - symbolic: 'MAINTAIN state table of (user, destination_host) pairs from last 30 days. ALERT on any new successful SSH login not in the state table.'
- question: Has a user successfully authenticated via SSH from an anomalous geolocation or at an unusual time?
  context: This question seeks to identify logins that are inconsistent with a user's established patterns of behavior regarding location and time. An attacker logging in from a different country or in the middle of the night for that user is a strong indicator of a compromised account. By scoring logins based on deviations from the user's normal profile, we can detect high-risk authentication events.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication servers (e.g., Active Directory), Critical servers (Linux/Windows), Network choke points, VPN concentrators, Zeek sensors
  range: last 90 days
  queries:
  - statistical: 'FOR each user, MODEL typical source IP geolocation and login times. SCORE new logins based on deviation (new country, new ASN, off-hours). ALERT if risk_score > 98th percentile.'
- question: Is there a sudden spike in the number of new SSH connection pathways being created across the network, suggesting an automated campaign?
  context: This question uses time series analysis to detect a sudden burst of lateral movement activity. A single new connection might be legitimate, but a large number of new user-host connections appearing in a short period is highly indicative of an automated attack script spreading through the network. This model forecasts the normal rate of new connections and alerts when the actual rate significantly exceeds the prediction.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication servers (e.g., Active Directory), Critical servers (Linux/Windows), Network choke points, VPN concentrators, Zeek sensors
  range: last 90 days
  queries:
  - machine_learning: 'FORECAST hourly count of ''first-seen'' SSH user-host pairs. ALERT if observed count significantly exceeds the forecast''s upper confidence interval.'
- question: Is a single source host or user account attempting to connect to an abnormally high number of distinct hosts via SSH in a short time frame?
  context: This question aims to detect 'SSH spraying,' a common lateral movement technique where an attacker uses a compromised host or account to attempt connections to many different destinations. This is often done to find other systems where the same credentials are valid. A simple rule that triggers on a high count of distinct destinations from a single source within a small time window is effective at catching this behavior.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Internal network segments, Server subnets, Data center core switches, Zeek sensors monitoring east-west traffic
  range: last 90 days
  queries:
  - symbolic: 'ALERT if a single source_ip OR user establishes successful SSH connections to > 10 distinct destination_ips within a 15-minute window.'
- question: Is any source IP or user account connecting to a statistically significant number of distinct SSH destinations compared to the network baseline?
  context: This question provides a more dynamic way to detect SSH spraying by comparing a source's activity to the overall network behavior. Instead of a fixed threshold, it identifies sources whose connection fan-out (number of distinct destinations) is a statistical outlier (e.g., more than 3 standard deviations from the mean). This adapts to changing network conditions and can be more sensitive than a static rule.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Internal network segments, Server subnets, Data center core switches, Zeek sensors monitoring east-west traffic
  range: last 90 days
  queries:
  - statistical: 'IN a 1-hour window, COUNT distinct destinations per source. CALCULATE mean and stddev. FLAG any source with a count > (mean + 3 * stddev).'
- question: Can we use graph analysis to identify network activity patterns that resemble a fan-out or spray attack?
  context: This question models the network as a graph to find topological patterns indicative of an attack. A spray attack creates a 'star-shaped' pattern in the graph, with one central node (the attacker's machine) connecting to many peripheral nodes (the targets). Graph analysis algorithms can automatically detect these structures, providing a powerful way to visualize and alert on lateral movement.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Internal network segments, Server subnets, Data center core switches, Zeek sensors monitoring east-west traffic
  range: last 90 days
  queries:
  - machine_learning: 'MODEL SSH connections as a graph. USE community detection to find star-shaped subgraphs. FLAG the central node of such graphs as a potential attacker.'
- question: Are any SSH sessions being used for port forwarding?
  context: This question directly checks for SSH tunneling (port forwarding), a technique adversaries use to bypass firewalls and exfiltrate data or pivot to other network segments. Zeek logs explicitly flag when port forwarding is requested in an SSH session, making this a high-fidelity indicator of non-standard SSH usage that requires investigation.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Network traffic inspection points (e.g., Zeek sensors), DMZ, Internet gateways, internal network taps
  range: last 90 days
  queries:
  - symbolic: 'SEARCH Zeek ssh.log WHERE fwd_requested = ''T'' OR remote_fwd_requested = ''T''.'
- question: Are there any SSH sessions with unusually high data volumes or long durations, suggesting data tunneling instead of interactive use?
  context: This question identifies SSH sessions that don't look like typical interactive command-line use. A legitimate interactive session usually involves small amounts of data and can be short or long. In contrast, tunneling a file transfer or another protocol (like RDP) over SSH results in a session with both high data volume and significant duration. Flagging sessions that are outliers in both metrics can uncover covert data movement.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Network traffic inspection points (e.g., Zeek sensors), DMZ, Internet gateways, internal network taps
  range: last 90 days
  queries:
  - statistical: 'FROM completed SSH sessions, PLOT total_bytes vs duration. FLAG sessions that are outliers in the top percentile for both dimensions.'
- question: Can we detect SSH tunneling by identifying real-time traffic patterns that deviate from a model of a normal interactive session?
  context: This question applies machine learning to the fine-grained, second-by-second traffic flow of an SSH session. An autoencoder model is trained to 'learn' the bursty, low-volume pattern of a person typing commands. When it sees a different pattern, like the steady, high-throughput flow from a tunneled file transfer, it fails to reconstruct it accurately, resulting in a high anomaly score. This allows for real-time detection of protocol tunneling.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Network traffic inspection points (e.g., Zeek sensors), DMZ, Internet gateways, internal network taps
  range: last 90 days
  queries:
  - machine_learning: 'TRAIN LSTM autoencoder on legitimate interactive SSH traffic patterns. IN real-time, feed session byte-per-second data to the model. ALERT if reconstruction_error > threshold.'