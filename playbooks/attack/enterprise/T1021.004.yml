name: T1021.004: SSH
id: a1b9e8d5-3c7f-4b0a-9d6e-8c5f7a1b3d9c
description: This playbook helps determine if an adversary has moved laterally through the network using SSH. It focuses on identifying malicious activity by analyzing SSH connections for known-bad client signatures or host keys, spotting suspicious command-line arguments used for automation or evasion, detecting anomalous connection pathways and geolocations, identifying fan-out activity (SSH spraying), and flagging sessions with characteristics of data tunneling, such as port forwarding or unusually high data volumes.
type: technique
related:
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
- none
questions:
- question: Are there any SSH connections using client version strings or host key hashes that match a known-bad threat intelligence feed?
  context: This question seeks to identify adversaries using known malicious SSH clients or connecting to servers with compromised host keys. By matching client version strings (e.g., 'PuTTY_KiTTY') and host key hashes from network traffic against a list of malicious indicators, analysts can quickly spot the use of adversary tools for lateral movement.
  answer_sources:
  - Zeek ssh.log
  - Network traffic inspection points (e.g., Zeek sensors)
  - Bastion hosts
  - Internet gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH ssh_logs
      WHERE client_version IN (known_bad_versions_list) OR host_key IN (known_bad_hashes_list)
      RETURN count by source_ip, destination_ip, client_version
- question: Have any rare or statistically uncommon SSH client version strings been observed across the enterprise?
  context: Adversaries may use custom or obscure SSH clients to evade signature-based detections. This question helps identify such outliers by calculating the frequency of all SSH client strings seen over a 30-day period. Client versions that are extremely rare (e.g., seen on only a few hosts) are flagged as suspicious, as they deviate from the established baseline of commonly used software.
  answer_sources:
  - Zeek ssh.log
  - Network traffic inspection points (e.g., Zeek sensors)
  - Bastion hosts
  - Internet gateways
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE frequency of all client_versions in ssh_logs over 30d.
      FLAG versions with frequency < 0.01% or seen on < 3 hosts for review.
- question: Can a machine learning model classify any new, unseen SSH client version strings as potentially malicious?
  context: To proactively detect novel threats, this question involves using a trained machine learning model to analyze SSH client version strings. The model, trained on features like string length and character entropy from known-good and known-bad examples, can score new strings in real-time. A high maliciousness score suggests the string may belong to a previously unknown malicious tool, warranting an immediate investigation.
  answer_sources:
  - Zeek ssh.log
  - Network traffic inspection points (e.g., Zeek sensors)
  - Bastion hosts
  - Internet gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      APPLY classification_model to new ssh_client_version_strings.
      ALERT if malicious_score > threshold.
- question: Have any SSH client processes been executed with command-line arguments indicative of automation or evasion?
  context: Adversaries often use specific command-line arguments to automate SSH connections or bypass security controls. This question looks for process creation events (like 'ssh.exe' or 'plink.exe') containing suspicious flags such as '-o StrictHostKeyChecking=no' (to suppress host key warnings) or '-batch' (to disable interactive prompts), which are strong indicators of scripted, non-interactive lateral movement.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - All Windows and Linux endpoints and servers
  - Domain Controllers
  - Developer Workstations
  - management servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name IN ('ssh.exe', 'plink.exe', 'ssh')
      AND command_line contains ('-o StrictHostKeyChecking=no', '-o UserKnownHostsFile=/dev/null', '-batch')
- question: Has any user executed an SSH command with arguments that are statistically rare for their own established baseline of activity?
  context: This question focuses on behavioral anomalies at the user level. By establishing a baseline of typical SSH command-line arguments for each user over a 90-day period, the system can detect deviations. When a user runs an SSH command with arguments they rarely or have never used before, it generates a risk score. A high score suggests a potential account compromise or an unusual, possibly malicious, action by the user.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - All Windows and Linux endpoints and servers
  - Domain Controllers
  - Developer Workstations
  - management servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each user, BASELINE normal ssh command arguments over 90d.
      SCORE new ssh executions based on rarity of arguments.
      ALERT if score > 99th_percentile for that user.
- question: Are there clusters of SSH command-line usage patterns that are anomalous and do not align with known-good administrative scripts?
  context: This question uses unsupervised machine learning to discover suspicious patterns in how SSH is used. By clustering all observed SSH command lines, the system can automatically group similar usage patterns. Clusters that do not contain known, legitimate scripts are marked as suspicious. Any new command that falls into one of these outlier clusters is flagged, potentially revealing a new malicious TTP.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - All Windows and Linux endpoints and servers
  - Domain Controllers
  - Developer Workstations
  - management servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CLUSTER all ssh command lines using DBSCAN.
      MARK clusters without known-good scripts as suspicious.
      ALERT on new commands in suspicious clusters.
- question: Has a successful SSH authentication created a new connection pathway (user-to-host) that has not been seen before?
  context: Adversaries moving laterally often create connections between systems that do not normally communicate. This question identifies such behavior by maintaining a state table of all legitimate, observed 'user-to-destination-host' SSH connections over the last 30 days. Any new successful SSH login that forms a pair not in this table is flagged as a 'first-seen' pathway, which is a key indicator of lateral movement.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication servers (e.g., Active Directory)
  - Critical servers (Linux/Windows)
  - Network choke points
  - VPN concentrators
  - Zeek sensors
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      MAINTAIN state table of (user, dest_host) pairs from successful SSH logs over 30d.
      ALERT on any new successful SSH login that forms a pair not in the table.
- question: Did a successful SSH authentication originate from a geolocated IP address or occur at a time that is anomalous for the authenticating user?
  context: This question detects account compromise by looking for logins that defy the user's established patterns. It models each user's typical source IP geolocation (country, ASN) and login times. A new login is scored based on how much it deviates from this baseline (e.g., a login from a new country at 3 AM). A high risk score indicates a possible impossible travel scenario or off-hours activity, suggesting the user's credentials may be compromised.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication servers (e.g., Active Directory)
  - Critical servers (Linux/Windows)
  - Network choke points
  - VPN concentrators
  - Zeek sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL each user's typical source_geo and login_time.
      SCORE new logins based on deviation (new country, new ASN, off-hours).
      ALERT if risk_score > 98th_percentile.
- question: Has the rate of newly established SSH connection pathways significantly exceeded the forecasted norm?
  context: Automated lateral movement tools can create many new user-host connections in a short period. This question uses a time series forecasting model to predict the normal hourly rate of 'first-seen' SSH pathways. An alert is triggered if the actual number of new pathways in an hour dramatically exceeds the model's prediction, suggesting a widespread, automated lateral movement campaign is underway.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Authentication servers (e.g., Active Directory)
  - Critical servers (Linux/Windows)
  - Network choke points
  - VPN concentrators
  - Zeek sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FORECAST hourly count of new (user, dest_host) pairs using ARIMA/Prophet.
      ALERT if observed count > upper_confidence_bound of forecast.
- question: Has a single source host or user account initiated SSH connections to an unusually high number of distinct destinations in a short time?
  context: This question aims to detect 'SSH spraying' attacks, where an adversary uses a single compromised host or account to attempt connections to many other hosts on the network. A simple rule alerts if any single source IP or user establishes successful SSH connections to more than a fixed number of unique destinations (e.g., >10) within a short window (e.g., 15 minutes), indicating a fan-out pattern typical of lateral movement.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Internal network segments
  - Server subnets
  - Data center core switches
  - Zeek sensors monitoring east-west traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ALERT if a single source_ip OR user establishes > 10 successful SSH connections to distinct destinations within 15 minutes.
- question: Is any source host or user connecting to a statistically anomalous number of distinct SSH destinations compared to its peers?
  context: This provides a more dynamic way to detect SSH spraying. Instead of a fixed threshold, it calculates the mean and standard deviation for the number of distinct SSH destinations per source over a 1-hour window. Any source whose connection count exceeds a statistical threshold (e.g., 3 standard deviations above the mean) is flagged. This method adapts to changing network behavior and is more resilient to low-and-slow attacks.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Internal network segments
  - Server subnets
  - Data center core switches
  - Zeek sensors monitoring east-west traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      IN 1-hour window, CALCULATE mean and std_dev of distinct_ssh_destinations_per_source.
      ALERT if any source > (mean + 3*std_dev).
- question: Does network graph analysis reveal any 'star-shaped' communities indicative of an SSH spray attack?
  context: This question models the network as a graph where hosts are nodes and SSH connections are edges. By applying community detection algorithms, it can identify patterns of activity. A pattern where one central node (the attacker's machine) connects to many other nodes (the targets) forms a 'star-shaped' community. Identifying such a topology with a high centrality score for the source node provides strong, visual evidence of an SSH spray attack.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Internal network segments
  - Server subnets
  - Data center core switches
  - Zeek sensors monitoring east-west traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL SSH connections as a graph.
      USE community detection (e.g., Louvain) to find star-shaped subgraphs.
      FLAG source node with high centrality in such a subgraph.
- question: Is there any evidence of SSH sessions being used for port forwarding (tunneling)?
  context: Adversaries use SSH tunneling to encapsulate and hide other malicious traffic (like RDP or C2 communications) within an encrypted SSH connection. This question directly checks for network traffic logs (like Zeek's ssh.log) where the 'fwd_requested' flag is set to true, providing a clear, high-fidelity indicator that an SSH session is being used as a tunnel.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Network traffic inspection points (e.g., Zeek sensors)
  - DMZ
  - Internet gateways
  - internal network taps
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH ssh_logs WHERE fwd_requested == true OR remote_fwd_requested == true.
      CORRELATE with connection logs to identify tunneled traffic.
- question: Have any SSH sessions exhibited unusually high data volumes or long durations, suggesting data exfiltration or tunneling rather than interactive use?
  context: Typical interactive SSH sessions (like an admin managing a server) involve low data volume and variable duration. In contrast, tunneling data or exfiltrating large files results in sessions with high byte counts and potentially long, stable durations. This question identifies statistical outliers by plotting all SSH sessions based on their total data transferred and duration, flagging those in the top percentiles for both metrics as suspicious.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Network traffic inspection points (e.g., Zeek sensors)
  - DMZ
  - Internet gateways
  - internal network taps
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FROM ssh connection logs, PLOT total_bytes vs duration.
      FLAG sessions that are outliers in both dimensions (e.g., top 5th percentile).
- question: Does the real-time traffic pattern of any SSH session deviate from the learned model of a normal interactive session?
  context: This question uses a sophisticated anomaly detection model (like an LSTM Autoencoder) trained on the byte-per-second traffic patterns of legitimate, interactive SSH sessions. The model learns what 'normal' looks like. When it observes a live session's traffic, it tries to reconstruct it. A high reconstruction error means the live pattern doesn't match the learned normal patterns, indicating anomalous activity like the steady, high-throughput flow of a tunneled file transfer.
  answer_sources:
  - Zeek ssh.log
  - Zeek conn.log
  - Network traffic inspection points (e.g., Zeek sensors)
  - DMZ
  - Internet gateways
  - internal network taps
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN LSTM Autoencoder on byte-per-second patterns of normal interactive SSH.
      FEED live session traffic into model.
      ALERT if reconstruction_error > threshold.