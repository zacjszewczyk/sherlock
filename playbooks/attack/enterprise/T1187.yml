name: T1187: Forced Authentication
id: b5d9c2a8-5c8e-4a6c-8f4b-3d6e1f9a7b1c
description: This playbook helps investigate whether an adversary is attempting to gather credentials using forced authentication. This technique involves tricking a user or system into connecting to an adversary-controlled system, causing the victim's machine to automatically send NTLM or other authentication material. This can be achieved through outbound SMB or WebDAV connections to malicious IPs, malicious shortcut files (.lnk, .scf, .url) pointing to external UNC paths, Office or HTML documents with embedded resources linking to external SMB shares, an unusual volume of connections to external destinations, or internal scanning from one workstation to many others.
type: technique
related: "TA0006: Credential Access"
contributors: "Zachary Szewczyk, Ask Sage"
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is there any outbound SMB or WebDAV traffic from internal hosts to known malicious IP addresses?
    context: This question aims to detect direct communication with adversary infrastructure. An internal host connecting to an IP address on a threat intelligence feed, especially over ports associated with authentication leakage like SMB (139, 445) or WebDAV (80, 443 with specific methods), is a strong indicator of a forced authentication attempt.
    answer_sources: Zeek conn.log, Zeek dns.log, Zeek http.log, Threat intelligence feeds, Internet gateways, DNS resolvers, Perimeter firewalls, Web proxies.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH conn.log
          WHERE (id.resp_p == 445 OR id.resp_p == 139) OR
                (id.resp_p == 80 OR id.resp_p == 443 AND http.log.method IN ["PROPFIND", "OPTIONS"])
          AND is_internal(id.orig_h) AND is_external(id.resp_h)
          JOIN on id.resp_h with threat_intel_feed
          RETURN alert
  - question: Are internal hosts making outbound SMB or WebDAV connections to geographically or organizationally rare destinations?
    context: Adversaries often use infrastructure in locations or Autonomous Systems (ASNs) that are not typically accessed during normal business operations. By baselining normal connection patterns over a 30-day period, we can identify statistically rare destinations. An alert on such a connection could indicate a forced authentication attempt to a new or unusual adversary-controlled server.
    answer_sources: Zeek conn.log, Zeek dns.log, Zeek http.log, GeoIP/ASN enrichment data, Internet gateways, DNS resolvers, Perimeter firewalls, Web proxies.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          // Baseline phase (last 30 days)
          BASELINE outbound_connections (ports 139, 445, 80, 443) by destination_country, destination_asn
          CALCULATE frequency_distribution

          // Detection phase
          SEARCH new_outbound_connections
          IF connection.destination_country OR connection.destination_asn in bottom_5_percent(frequency_distribution)
          RETURN alert
  - question: Can we use a machine learning model to predict if an outbound connection is a forced authentication attempt?
    context: This question explores a proactive, predictive approach. By training a model on various features like IP reputation, ASN, country, connection duration, and DNS query details, we can score new connections in real-time. This allows for the detection of sophisticated attempts that might evade simpler rule-based or statistical methods.
    answer_sources: Zeek conn.log, Zeek dns.log, Zeek http.log, Labeled historical data, Internet gateways, DNS resolvers, Perimeter firewalls, Web proxies.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model training
          FEATURES = [dest_ip_rep, asn, country, duration, service, is_newly_registered_domain]
          MODEL = train_random_forest(labeled_data, FEATURES)

          // Real-time scoring
          FOR each new_outbound_connection:
            SCORE = MODEL.predict(new_outbound_connection)
            IF SCORE > high_probability_threshold:
              RETURN alert
  - question: Has a shortcut or link file (.lnk, .scf, .url) been created on an endpoint that points to an external UNC path?
    context: Adversaries create these files to trick users into clicking them. When accessed, the file attempts to resolve the UNC path, which points to an adversary-controlled server, forcing the user's system to send authentication credentials. Monitoring file creation events for these specific file types and target paths is a direct way to detect this TTP.
    answer_sources: Windows Event ID 4688, Sysmon Event ID 11, Sysmon Event ID 1, User workstations, Shared network drives, Publicly accessible file shares, Terminal servers, Domain Controllers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Sysmon EventID 11
          WHERE TargetFilename ENDS WITH ('.lnk', '.scf', '.url')
          EXTRACT TargetPath from file_content
          IF TargetPath STARTS WITH '\\' AND server_is_external(TargetPath)
          RETURN alert
  - question: Has a newly created link file pointed to a statistically rare server name compared to historical data?
    context: Most link files in a corporate environment point to a common set of internal servers. By baselining the destination servers found in .lnk, .scf, and .url files over 90 days, we can identify when a new file points to an unusual or never-before-seen server. This anomaly is a strong indicator of a potential forced authentication lure.
    answer_sources: Windows Event ID 4688, Sysmon Event ID 11, Sysmon Event ID 1, User workstations, Shared network drives, Publicly accessible file shares, Terminal servers, Domain Controllers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Baseline phase (last 90 days)
          BASELINE server_names from target_paths of .lnk, .scf, .url files
          CALCULATE frequency_distribution

          // Detection phase
          SEARCH new_file_creation (Sysmon EventID 11)
          EXTRACT server_name from target_path
          IF server_name NOT IN top_99_percent(frequency_distribution)
          RETURN alert
  - question: Can a machine learning model classify the target paths of link files as malicious?
    context: This question applies natural language processing and text classification to the problem. Malicious UNC paths often have distinct characteristics (e.g., raw IP addresses, high entropy, suspicious TLDs). A trained model can analyze the text of the path itself to predict maliciousness, catching novel threats that might not appear on static indicator lists.
    answer_sources: Windows Event ID 4688, Sysmon Event ID 11, Sysmon Event ID 1, Labeled historical data, User workstations, Shared network drives, Publicly accessible file shares, Terminal servers, Domain Controllers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model training
          FEATURES = [path_length, entropy, has_ip, tld, keywords]
          MODEL = train_transformer_model(labeled_paths, FEATURES)

          // Real-time scanning
          FOR each new_link_file:
            PATH = extract_target_path(file)
            SCORE = MODEL.predict(PATH)
            IF SCORE is "malicious":
              RETURN alert
  - question: Have any Office documents or HTML files transferred over the network contained embedded links to external SMB shares?
    context: Adversaries embed hidden resources in seemingly benign documents. When a user opens the document, the application (e.g., Microsoft Word) tries to fetch the resource from the specified UNC path, triggering a forced authentication event. Scanning file contents at the network gateway for `file://` or `\\` patterns is an effective way to intercept these malicious documents before or as they reach the endpoint.
    answer_sources: Zeek files.log, Sysmon Event ID 1, Windows Event ID 4688, Email gateways, Web proxies, Endpoint download directories, Network file shares.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Zeek files.log
          WHERE file_mime_type IN ('application/msword', 'text/html', etc.)
          SCAN file_content for regex `(file:|\\\\)\\\\\\\\[^\\\\]+`
          IF match_found:
            CORRELATE with Sysmon EventID 1 to find parent_process
            RETURN alert
  - question: Are documents containing `file://` URIs pointing to destinations that are statistically rare or new?
    context: Similar to baselining connection destinations, we can baseline the destinations found within documents themselves. Most legitimate `file://` links will point to known internal file servers. A document containing a link to a destination that has never been seen before, or is seen very infrequently, is highly suspicious and warrants investigation.
    answer_sources: Zeek files.log, Sysmon Event ID 1, Windows Event ID 4688, Email gateways, Web proxies, Endpoint download directories, Network file shares.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          // Baseline phase (last 30 days)
          BASELINE destinations from `file://` URIs inside documents
          CALCULATE frequency_distribution

          // Detection phase
          SEARCH new_documents
          EXTRACT destination from `file://` URI
          IF destination is_rare_or_new(frequency_distribution) AND NOT is_internal(destination)
          RETURN alert
  - question: Can a machine learning model be used to assign a malice score to documents based on their content and metadata?
    context: This question proposes a holistic analysis of documents. Instead of relying on a single indicator, a model can weigh multiple features together, such as the number of `file://` links, whether the link is hidden, the presence of macros, and the source of the file. This provides a more robust and context-aware method for detecting malicious documents designed for forced authentication.
    answer_sources: Zeek files.log, Sysmon Event ID 1, Windows Event ID 4688, Labeled historical data, Email gateways, Web proxies, Endpoint download directories, Network file shares.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Model training
          FEATURES = [count_file_links, is_external_ip, is_link_hidden, has_macros, file_source]
          MODEL = train_gradient_boosting(labeled_documents, FEATURES)

          // Real-time scoring
          FOR each new_document:
            SCORE = MODEL.predict(document)
            IF SCORE > high_malice_threshold:
              RETURN alert
  - question: Has any single internal host connected to an abnormally high number of distinct external destinations via SMB or WebDAV in a short time frame?
    context: This is a simple threshold-based approach to detect anomalous fan-out activity. A compromised host might be used to probe or connect to a wide array of external servers. A sudden burst of more than 10 unique connections within an hour is unusual for most user workstations and could indicate a scripted attack. The threshold should be tuned to the specific environment.
    answer_sources: Zeek conn.log, Zeek smb.log, Zeek http.log, Network egress points, Internet gateways, Firewall logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH conn.log over 60-minute window
          GROUP BY id.orig_h
          COUNT distinct id.resp_h WHERE is_external(id.resp_h) AND (id.resp_p IN (139, 445) OR is_webdav_traffic)
          IF distinct_count > 10
          RETURN alert for id.orig_h
  - question: Is any host's daily count of unique external SMB/WebDAV destinations a statistical anomaly compared to its own history?
    context: This method adapts to each host's specific behavior. By calculating a rolling 30-day baseline for each host, we can use standard deviation or percentile-based alerting to detect significant changes in behavior, which is a strong indicator of compromise or misuse.
    answer_sources: Zeek conn.log, Zeek smb.log, Zeek http.log, Network egress points, Internet gateways, Firewall logs.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          // Baseline phase (last 30 days, per host)
          FOR each host:
            BASELINE daily_unique_external_dest_count
            CALCULATE mean, std_dev

          // Detection phase (daily)
          FOR each host:
            current_count = get_today_unique_dest_count(host)
            IF current_count > (mean + 3 * std_dev)
            RETURN alert for host
  - question: Can a time-series model detect anomalous spikes in the hourly count of unique outbound SMB/WebDAV destinations for a host?
    context: This approach accounts for periodicity and seasonality in a host's behavior. A time-series anomaly detection algorithm can learn these complex patterns. When a host's activity deviates from its learned normal rhythm, the model flags it as an anomaly, providing a highly sensitive method for detecting unusual fan-out behavior.
    answer_sources: Zeek conn.log, Zeek smb.log, Zeek http.log, Network egress points, Internet gateways, Firewall logs.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          // Model training (last 30+ days, per host)
          FOR each host:
            MODEL = train_seasonal_esd(hourly_unique_dest_count_timeseries)

          // Real-time detection
          FOR each new hourly_count:
            IS_ANOMALY = MODEL.predict(new_hourly_count)
            IF IS_ANOMALY:
              RETURN alert for host
  - question: Is a user workstation attempting to connect via SMB to a large number of other workstations?
    context: Workstation-to-workstation SMB traffic is typically rare. A sudden fan-out from one workstation to over 50 others within an hour is a classic sign of lateral movement or worm-like activity. Using asset inventory to distinguish workstations from servers makes this detection highly effective.
    answer_sources: Zeek conn.log, Zeek smb.log, Windows Event ID 4624, Asset inventory, Internal network segments, VLANs for user workstations, Domain Controller security logs, Core network switches.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH conn.log over 1-hour window
          WHERE source_ip IN workstation_subnet AND dest_ip IN workstation_subnet AND dest_port == 445
          AND source_ip NOT IN admin_systems_allowlist
          GROUP BY source_ip
          COUNT distinct dest_ip
          IF distinct_count > 50
          RETURN alert for source_ip
  - question: Is any workstation's SMB communication pattern an outlier when compared to all other workstations?
    context: This question uses graph analysis to find anomalous network behavior. By modeling internal SMB traffic as a graph, we can calculate the 'out-degree' (number of unique connections) for each workstation. A workstation whose out-degree is in the top 1% of all workstations is behaving very differently from its peers, which is a strong signal for investigation.
    answer_sources: Zeek conn.log, Zeek smb.log, Windows Event ID 4624, Internal network segments, VLANs for user workstations, Domain Controller security logs, Core network switches.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Analysis phase (daily)
          CREATE daily_smb_communication_graph
          CALCULATE out_degree for all workstation_nodes
          CALCULATE 99th_percentile_out_degree

          // Detection
          FOR each workstation_node:
            IF node.out_degree > 99th_percentile_out_degree
            RETURN alert for node
  - question: Can unsupervised machine learning (clustering) identify workstations with anomalous SMB behavior?
    context: This technique creates a behavioral profile for each workstation based on its SMB activity. A clustering algorithm like DBSCAN can then group hosts with similar profiles. Hosts that don't fit into any cluster ('noise points') are, by definition, behaving uniquely and are prime candidates for investigation as they represent a significant deviation from normal activity.
    answer_sources: Zeek conn.log, Zeek smb.log, Windows Event ID 4624, Internal network segments, VLANs for user workstations, Domain Controller security logs, Core network switches.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Analysis phase (daily)
          FOR each workstation:
            CREATE feature_vector = [outbound_smb_count, failed_smb_count, dest_ip_entropy]
          
          // Clustering
          CLUSTERS = DBSCAN(all_feature_vectors)
          NOISE_POINTS = identify_noise_points(CLUSTERS)
          
          // Detection
          FOR each host in NOISE_POINTS:
            RETURN alert for host