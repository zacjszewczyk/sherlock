name: T1218.003: CMSTP
id: a7e8f0b2-4d9c-4e8a-9f0b-3b1c8d7e6f0a
description: This playbook helps investigate whether an adversary has abused the Microsoft Connection Manager Profile Installer (cmstp.exe) for defense evasion. The investigation focuses on identifying cmstp.exe executions that exhibit suspicious behaviors, such as initiating network connections to malicious destinations, using specific command-line arguments for UAC bypass, running from non-standard locations or with unusual parent processes, spawning malicious child processes, or utilizing short-lived, temporary .inf configuration files to execute code.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is cmstp.exe making network connections to known malicious IP addresses or domains?
    context: This question aims to identify instances where the Microsoft Connection Manager Profile Installer (cmstp.exe) is being used to communicate with command and control (C2) infrastructure. Adversaries may abuse this legitimate Windows binary to proxy execution of malicious code, which often involves establishing a network connection to a server under their control. By joining process execution logs with network logs and comparing the destination against threat intelligence feeds, we can detect this specific abuse pattern.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 3: Network Connection
      - Sysmon Event ID 7: Image Loaded
      - Zeek conn.log
      - Zeek dns.log
      - User Workstations
      - Network Egress Points/Gateways
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - search: Pseudocode - SELECT process.name, destination.ip, dns.question.name FROM process_events JOIN network_events WHERE process.name = 'cmstp.exe' AND (destination.ip IN (threat_feed) OR dns.question.name IN (threat_feed))
  - question: Is cmstp.exe communicating with newly registered or rarely seen domains?
    context: Adversaries frequently use newly registered domains (NRDs) for their C2 infrastructure to evade reputation-based blocking. This question focuses on identifying cmstp.exe network activity directed towards domains that are both very new and uncommon across the enterprise. Such domains have a higher likelihood of being malicious. This analytic method moves beyond static indicators to detect potentially emergent threats.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 3: Network Connection
      - Sysmon Event ID 7: Image Loaded
      - Zeek conn.log
      - Zeek dns.log
      - User Workstations
      - Network Egress Points/Gateways
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - search: Pseudocode - FOR domain IN (domains_from_cmstp_dns_logs): IF (domain.age < 30_days AND domain.frequency_rank < 1st_percentile): ALERT
  - question: Can machine learning classify cmstp.exe executions as malicious based on their runtime characteristics?
    context: This question uses a supervised classification model to score cmstp.exe behavior based on features like command-line entropy, parent process reputation, and the reputation of network destinations. This provides a probabilistic assessment of maliciousness that can uncover novel or complex variations of the technique.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 3: Network Connection
      - Sysmon Event ID 7: Image Loaded
      - Zeek conn.log
      - Zeek dns.log
      - User Workstations
      - Network Egress Points/Gateways
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - search: Pseudocode - SCORE process_event for cmstp.exe using ML_model(cmd_length, cmd_entropy, parent_process, destination_rep). ALERT if score > 0.9
  - question: Has a UAC bypass been attempted using cmstp.exe with the '/au' switch and subsequent access to specific COM objects?
    context: This question looks for a known UAC bypass technique where 'cmstp.exe /au' is used to execute code with elevated privileges. The detection is confirmed by correlating the initial process execution with either a subsequent process access event targeting CMLUA.dll or a registry modification involving specific CMSTPLUA/CMLUAUTIL COM object CLSIDs within a short time window.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 10: Process Access
      - Sysmon Event ID 12: Registry Event (Create and Delete)
      - Sysmon Event ID 13: Registry Event (Value Set)
      - User Workstations
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - search: Pseudocode - CORRELATE (Sysmon1: cmstp.exe /au) FOLLOWED BY (Sysmon10: TargetImage='CMLUA.dll' OR Sysmon12/13: TargetObject CONTAINS '3E5FC7F9-...' OR '3E000D72-...') within 60s
  - question: Has cmstp.exe been executed with the '/au' switch for the first time on a host or by a user?
    context: This question establishes a baseline of command-line arguments used with cmstp.exe on a per-user and per-host basis. An alert is generated if the '/au' switch is observed for the first time within the baseline period (e.g., 90 days), as this represents a significant deviation from normal behavior and is a strong indicator of a potential UAC bypass attempt.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 10: Process Access
      - Sysmon Event ID 12: Registry Event (Create and Delete)
      - Sysmon Event ID 13: Registry Event (Value Set)
      - User Workstations
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - search: Pseudocode - SEARCH for cmstp.exe with '/au'. IF user OR host is new in 90-day baseline for this argument THEN ALERT
  - question: Can a sequence mining model detect the specific series of events corresponding to the cmstp.exe UAC bypass?
    context: This question proposes applying a sequence mining algorithm to ordered host event logs. The model can be trained to recognize the specific multi-event pattern of the UAC bypass (e.g., cmstp.exe /au -> ProcessAccess CMLUA.dll). This provides a more robust and adaptable detection method than a static correlation rule by identifying the malicious sequence even with minor variations.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 10: Process Access
      - Sysmon Event ID 12: Registry Event (Create and Delete)
      - Sysmon Event ID 13: Registry Event (Value Set)
      - User Workstations
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - search: Pseudocode - APPLY sequence_mining_model to Sysmon events (1, 10, 12, 13). ALERT if host events match UAC_bypass_sequence with high probability.
  - question: Is cmstp.exe being executed from an unusual file path or by a non-standard parent process?
    context: The legitimate cmstp.exe binary resides in C:\Windows\System32 and is typically launched by standard shells like explorer.exe or cmd.exe. This question seeks to identify executions where the binary path is different (e.g., C:\Users\Public\cmstp.exe) or the parent process is not on an approved list, as these are strong indicators of malicious use.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - User Workstations
      - Application Servers
      - Terminal Servers
    range: last 90 days
    queries:
      - search: Pseudocode - ALERT on Sysmon1 WHERE process.path != 'C:\Windows\System32\cmstp.exe' OR parent.process NOT IN ('explorer.exe', 'cmd.exe', 'mmc.exe')
  - question: Is cmstp.exe being spawned by a parent process that is statistically rare across the enterprise?
    context: This question uses statistical analysis to find outliers in process relationships. By tabulating all parent processes that spawn cmstp.exe over a period, any parent that is exceptionally uncommon (e.g., accounts for less than 1% of all executions) should be flagged for investigation as a potential indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - User Workstations
      - Application Servers
      - Terminal Servers
    range: last 90 days
    queries:
      - search: Pseudocode - CALCULATE frequency of each parent_process for cmstp.exe. ALERT if parent_frequency < 1%
  - question: Does an anomaly detection model identify any cmstp.exe executions as highly unusual?
    context: This question leverages an unsupervised machine learning model, such as an Isolation Forest, to score all cmstp.exe process creation events. By using features like the parent process name, execution path, user context, and command-line entropy, the model can flag executions that deviate significantly from the learned norm, without relying on pre-defined rules or signatures.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - User Workstations
      - Application Servers
      - Terminal Servers
    range: last 90 days
    queries:
      - search: Pseudocode - APPLY IsolationForest(parent, path, user, cmd_entropy) to cmstp.exe process events. REVIEW events with high anomaly scores.
  - question: Is cmstp.exe spawning suspicious child processes like PowerShell or rundll32.exe?
    context: After being used to bypass a defense or execute initial code, cmstp.exe is often used to launch a subsequent payload. This question looks for the creation of common scripting engines or shell-related processes (e.g., powershell.exe, cmd.exe, rundll32.exe) as children of cmstp.exe, which is a strong indicator of malicious follow-on activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 3: Network Connection
      - Zeek conn.log
      - User Workstations
      - Domain Controllers
      - Network Egress Points/Gateways
    range: last 90 days
    queries:
      - search: Pseudocode - ALERT on Sysmon1 WHERE parent.process.name = 'cmstp.exe' AND process.name IN ('powershell.exe', 'cmd.exe', 'rundll32.exe', 'mshta.exe')
  - question: Are network connections from cmstp.exe exhibiting beaconing behavior?
    context: Command and control implants often communicate with their server using a regular 'heartbeat' or beacon. This question analyzes the network traffic originating from the cmstp.exe process to detect this highly structured, non-human pattern of communication, characterized by highly regular time intervals and consistent data packet sizes.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 3: Network Connection
      - Zeek conn.log
      - User Workstations
      - Domain Controllers
      - Network Egress Points/Gateways
    range: last 90 days
    queries:
      - search: Pseudocode - ANALYZE network traffic from cmstp.exe. IF stddev(time_delta) < 2s AND stddev(packet_size) < 10bytes THEN ALERT
  - question: Does a graph-based analysis of process execution chains reveal cmstp.exe in an anomalous role?
    context: This question involves modeling system activity as a graph of process relationships. Graph-based anomaly detection algorithms can then identify nodes (like cmstp.exe) that have unusual connections, such as spawning an abnormal number or type of child processes, when compared to a learned baseline graph of normal system activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 3: Network Connection
      - Zeek conn.log
      - User Workstations
      - Domain Controllers
      - Network Egress Points/Gateways
    range: last 90 days
    queries:
      - search: Pseudocode - MODEL process chains as graphs. USE graph anomaly detection to find unusual cmstp.exe node activity (e.g., high out-degree, unusual children).
  - question: Is cmstp.exe being used with a temporary '.inf' file that is created and deleted in a short time frame?
    context: Adversaries may drop a malicious .inf file, use cmstp.exe to execute its contents, and then immediately delete the file to clean up their tracks and evade detection. This stateful detection looks for this specific sequence of file creation, process execution referencing the file, and file deletion, all occurring for the same file path within a short window (e.g., 60 seconds).
    answer_sources:
      - Sysmon Event ID 11: File Create
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 23: File Delete
      - User Workstations
      - Terminal Servers
    range: last 90 days
    queries:
      - search: Pseudocode - CORRELATE (FileCreate *.inf) -> (ProcessCreate cmstp.exe with *.inf) -> (FileDelete *.inf) for same file path within 60s
  - question: Are there any '.inf' files being used by cmstp.exe that have an unusually short lifetime?
    context: This question analyzes the time between file creation and file deletion for all .inf files used by cmstp.exe. Files that exist for an extremely short period (e.g., in the bottom 1st percentile of all file lifetimes) are highly suspicious, as this is characteristic of an adversary's "living off the land" cleanup techniques.
    answer_sources:
      - Sysmon Event ID 11: File Create
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 23: File Delete
      - User Workstations
      - Terminal Servers
    range: last 90 days
    queries:
      - search: Pseudocode - CALCULATE lifetime for INF files (delete_time - create_time). INVESTIGATE files in 1st percentile, especially if used by cmstp.exe.
  - question: Can a machine learning model distinguish between benign and malicious sequences involving temporary '.inf' files?
    context: This question proposes building a classifier that learns from known benign (e.g., legitimate software installers) and malicious event sequences (File Create, Process Create, File Delete). By training on features like file path, process command line, and the time deltas between events, the model can automatically flag suspicious triplets that match the pattern of an adversary using an ephemeral .inf file with cmstp.exe.
    answer_sources:
      - Sysmon Event ID 11: File Create
      - Sysmon Event ID 1: Process Creation
      - Sysmon Event ID 23: File Delete
      - User Workstations
      - Terminal Servers
    range: last 90 days
    queries:
      - search: Pseudocode - TRAIN classifier on (FileCreate, ProcessCreate, FileDelete) event triplets. APPLY model to new triplets to detect malicious sequences.