name: T1218.003: CMSTP
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: Has an adversary abused the Microsoft Connection Manager Profile Installer (CMSTP.exe) for defense evasion on the enterprise network? This involves looking for executions of cmstp.exe that reference malicious INF files or connect to suspicious network locations, use the '/au' switch for UAC bypass, run from non-standard file paths or with unusual parent processes, spawn suspicious child processes, or involve the rapid creation and deletion of temporary INF files.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Is cmstp.exe making network connections to known malicious IPs or domains?
  context: This question aims to identify the direct use of cmstp.exe for command and control (C2) or to download further payloads. By joining process execution events with network logs and comparing against threat intelligence, analysts can quickly spot high-fidelity indicators of compromise.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 3: Network Connection'
  - 'Sysmon Event ID 7: Image Loaded'
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Network Egress Points/Gateways
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process creation events where process_name = "cmstp.exe"
      JOIN with network connection events on process_id
      WHERE destination_ip in (threat_intel_feed) OR destination_domain in (threat_intel_feed)
      RETURN host, user, destination_ip, destination_domain
- question: Is cmstp.exe communicating with newly registered or exceptionally rare domains?
  context: Adversaries often use newly created domains for their campaigns. These domains are unlikely to have been seen before in the enterprise. This question helps uncover potential C2 infrastructure by flagging domains that are both very new and very rare, which is a strong indicator of suspicious activity.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 3: Network Connection'
  - 'Sysmon Event ID 7: Image Loaded'
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Network Egress Points/Gateways
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH DNS queries from "cmstp.exe" over last 90 days
      ENRICH query_name with registration_date and enterprise_query_frequency
      FILTER where registration_date < 30 days ago AND enterprise_query_frequency is in bottom 1%
      RETURN host, query_name, registration_date
- question: Can machine learning models identify malicious cmstp.exe executions based on their characteristics?
  context: This question leverages machine learning to automate the detection of malicious cmstp.exe behavior that might be missed by simple rules. By analyzing features like command-line parameters, parent processes, and network reputation, a model can assign a risk score to each execution, allowing analysts to focus on the most likely threats.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 3: Network Connection'
  - 'Sysmon Event ID 7: Image Loaded'
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Network Egress Points/Gateways
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT process creation events for "cmstp.exe" into ML model
      FEATURES = command_line_length, command_line_entropy, parent_process_name, network_destination_reputation
      ALERT where model_prediction = "malicious" AND confidence_score > 0.9
      RETURN host, user, command_line, score
- question: Has cmstp.exe been used with the '/au' switch to perform a UAC bypass, indicated by subsequent access to specific DLLs or COM object registry keys?
  context: Adversaries can use 'cmstp.exe /au' to install a malicious INF file, which can lead to a UAC bypass. This question looks for the specific sequence of events associated with this technique: the initial process execution followed closely by process access to CMLUA.dll or modification of specific COM object registry keys, confirming the bypass attempt.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 10: Process Access'
  - 'Sysmon Event ID 12: Registry Event (Create and Delete)'
  - 'Sysmon Event ID 13: Registry Event (Value Set)'
  - User Workstations
  - Privileged Access Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRIGGER on process creation of "cmstp.exe" with command_line containing "/au"
      CORRELATE within 60 seconds for same host:
        (process_access event where target_image contains "CMLUA.dll")
        OR (registry_event where target_object contains "3E5FC7F9-9A51-4367-9063-A120244FBEC7" or "3E000D72-A845-4CD9-BD83-80C07C3B881F")
      ALERT on successful correlation
- question: Is the '/au' switch for cmstp.exe being used for the first time on a specific host or by a specific user?
  context: Legitimate use of 'cmstp.exe /au' is rare. By baselining its usage, this question identifies the first occurrence of this command on a host or by a user, which is a strong anomaly signal. This helps detect adversaries attempting to use the UAC bypass technique in an environment where it has not been seen before.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 10: Process Access'
  - 'Sysmon Event ID 12: Registry Event (Create and Delete)'
  - 'Sysmon Event ID 13: Registry Event (Value Set)'
  - User Workstations
  - Privileged Access Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH for process creation of "cmstp.exe" with "/au"
      COMPARE against 90-day baseline of (host, user, command_line) tuples
      ALERT if the tuple is new
      RETURN host, user
- question: Can a sequence analysis model detect the multi-event pattern indicative of a cmstp.exe UAC bypass?
  context: This question applies advanced analytics to detect the UAC bypass technique. A sequence mining model can learn the specific order of process creation, process access, and registry events that constitute the attack, allowing it to identify the entire attack chain even with slight variations, providing a more robust detection than a simple correlation rule.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 10: Process Access'
  - 'Sysmon Event ID 12: Registry Event (Create and Delete)'
  - 'Sysmon Event ID 13: Registry Event (Value Set)'
  - User Workstations
  - Privileged Access Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT event logs (Sysmon 1, 10, 12, 13) into sequence mining model
      MODEL is trained to find sequences like: (cmstp.exe /au) -> (access CMLUA.dll) -> (registry mod for COM CLSID)
      ALERT when model identifies a malicious sequence with high probability
- question: Is cmstp.exe being executed from a non-standard directory or by an unusual parent process?
  context: The legitimate cmstp.exe binary resides in C:\Windows\System32 and is typically launched by a standard user shell like explorer.exe or cmd.exe. An execution from another location (e.g., a temp folder) or by an unusual parent (e.g., an Office application) is a strong indicator that an adversary has dropped a copy of the binary or is using process injection to evade defenses.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - User Workstations
  - Application Servers
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process creation events for "cmstp.exe"
      FILTER where (process_path is not "C:\Windows\System32\cmstp.exe")
        OR (parent_process_name not in ["explorer.exe", "cmd.exe", "mmc.exe"])
      ALERT on any results
- question: Are there any rare parent processes launching cmstp.exe across the enterprise?
  context: This question uses frequency analysis to find outliers in process relationships. By identifying parent processes that rarely launch cmstp.exe, analysts can uncover anomalous behavior that might indicate a compromised process is being used to initiate defense evasion techniques.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - User Workstations
  - Application Servers
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      AGGREGATE parent/child process relationships for "cmstp.exe" over 7 days
      CALCULATE frequency of each parent_process
      FLAG parent_process where frequency < 1% of total
      INVESTIGATE flagged relationships
- question: Can an anomaly detection model identify unusual cmstp.exe executions based on process context?
  context: This question uses an unsupervised machine learning model (Isolation Forest) to find outliers without pre-existing labels. By considering features like the parent process, execution path, user, and command-line characteristics, the model can flag cmstp.exe executions that deviate significantly from the established norm, which may indicate malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - User Workstations
  - Application Servers
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT all process creation events into Isolation Forest model
      FEATURES = parent_process_name, process_path, user, command_line_entropy
      REVIEW all "cmstp.exe" executions with a high anomaly score
- question: Is cmstp.exe launching suspicious child processes like PowerShell or rundll32.exe?
  context: Legitimate use of cmstp.exe typically does not involve spawning command-line interpreters or script hosts. This question creates a high-fidelity alert for instances where cmstp.exe is observed launching processes commonly used by adversaries for subsequent actions, such as executing code, running scripts, or connecting to C2 infrastructure.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 3: Network Connection'
  - Zeek conn.log
  - User Workstations
  - Domain Controllers
  - Network Egress Points/Gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process creation events
      WHERE parent_process_name = "cmstp.exe"
        AND process_name in ["powershell.exe", "cmd.exe", "wscript.exe", "cscript.exe", "rundll32.exe", "mshta.exe"]
      ALERT on any results
- question: Are network connections from cmstp.exe exhibiting highly regular timing and data sizes, indicative of C2 beaconing?
  context: Command and control (C2) beaconing is often automated, resulting in network traffic with very consistent time intervals and packet sizes. This question applies statistical analysis to network flow data originating from cmstp.exe to detect this regularity, which is a strong sign of a C2 channel.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 3: Network Connection'
  - Zeek conn.log
  - User Workstations
  - Domain Controllers
  - Network Egress Points/Gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      GROUP network connections from "cmstp.exe" by destination over 1 hour
      CALCULATE stdev(time_between_connections) and stdev(bytes_sent)
      ALERT where stdev(time) < 2s AND stdev(bytes) < 10
      RETURN destination_ip, host
- question: Does graph analysis reveal that cmstp.exe is part of an anomalous process execution chain?
  context: This question models system activity as a graph of process relationships to find structural anomalies. A cmstp.exe process that spawns an unusually high number of children, or spawns children that are themselves unusual, would stand out in the graph. This approach can detect complex, multi-stage attacks that might otherwise be missed.
  answer_sources:
  - Windows Event ID 4688
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 3: Network Connection'
  - Zeek conn.log
  - User Workstations
  - Domain Controllers
  - Network Egress Points/Gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL process creation events as a graph
      APPLY graph anomaly detection algorithm
      FLAG "cmstp.exe" nodes with unusual child processes or high out-degree compared to baseline
- question: Is a temporary INF file being created, used by cmstp.exe, and then quickly deleted?
  context: To hide their tracks, adversaries often create a malicious INF file, use it with cmstp.exe, and then immediately delete it. This question uses a stateful rule to look for this specific 'create-use-delete' sequence within a short time window, which is a hallmark of this evasive technique.
  answer_sources:
  - 'Sysmon Event ID 11: File Create'
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 23: File Delete'
  - User Workstations
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRIGGER on FileCreate event for *.inf in temp dir
      CORRELATE within 60 seconds:
        (ProcessCreate of cmstp.exe with *.inf in command line)
        AND (FileDelete of same *.inf file)
      ALERT on successful correlation
- question: Are there any INF files with an unusually short lifetime on the system, especially if referenced by cmstp.exe?
  context: Legitimate INF files used for installation typically persist for some time. Malicious INF files used for execution are often ephemeral. This question uses statistical analysis to find INF files that are created and deleted very quickly (e.g., in a few seconds), flagging them as suspicious and worthy of investigation.
  answer_sources:
  - 'Sysmon Event ID 11: File Create'
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 23: File Delete'
  - User Workstations
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN FileCreate and FileDelete events for *.inf files on file_path
      CALCULATE lifetime = delete_timestamp - create_timestamp
      FLAG INF files where lifetime is in bottom 1% of all INF lifetimes
      INVESTIGATE, prioritizing those used by cmstp.exe
- question: Can a machine learning model be trained to distinguish between benign and malicious sequences of file creation, process execution, and file deletion involving INF files?
  context: This question proposes a sophisticated machine learning approach to formalize the detection of ephemeral script execution. By training a model on features of the 'create-use-delete' event sequence, the system can learn to automatically classify these patterns as malicious or benign, reducing false positives from legitimate software installers and focusing analyst attention on true threats.
  answer_sources:
  - 'Sysmon Event ID 11: File Create'
  - 'Sysmon Event ID 1: Process Creation'
  - 'Sysmon Event ID 23: File Delete'
  - User Workstations
  - Terminal Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT event triplets (FileCreate, ProcessCreate, FileDelete) into ML model
      FEATURES = file_path, process_name, command_line, time_deltas
      ALERT when model classifies a triplet involving cmstp.exe as "malicious"