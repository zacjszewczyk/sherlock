name: T1505.004: IIS Components
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary is maintaining persistence on web servers by installing malicious Internet Information Services (IIS) components. The investigation focuses on identifying unusual outbound network connections from the IIS worker process (w3wp.exe), suspicious command-line executions related to IIS configuration, unauthorized file modifications in sensitive IIS directories, anomalous child processes spawned by w3wp.exe, and the loading of suspicious DLLs into the IIS worker process.
type: technique
related:
- TA0003: Persistence
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is the IIS worker process (w3wp.exe) making outbound network connections to known malicious IP addresses or domains?
  context: A core function of a malicious IIS component is to establish a command and control (C2) channel. This question aims to detect this C2 communication by correlating network traffic originating specifically from the IIS worker process with high-confidence threat intelligence. A match is a strong indicator of compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - Windows Event ID 3 (Sysmon)
  - IIS Web Servers
  - DMZ Network Segment
  - Network Egress Points
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_network_events WHERE process_name = 'w3wp.exe' | JOIN network_flow_data AND dns_logs | LOOKUP destination against threat_intelligence_feed | ALERT on match
- question: Is there a sudden increase in the entropy of domain names requested by the IIS worker process (w3wp.exe), potentially indicating DGA activity?
  context: Adversaries use Domain Generation Algorithms (DGA) to create a large number of potential C2 domains, making blocklisting difficult. A malicious IIS component may use DGA for resilient C2. A sharp, anomalous increase in the variety and randomness (entropy) of FQDNs resolved by w3wp.exe can uncover this specific C2 technique.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - Windows Event ID 3 (Sysmon)
  - IIS Web Servers
  - DMZ Network Segment
  - Network Egress Points
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH dns_logs related to 'w3wp.exe' | BUCKET by 1_hour_window | CALCULATE FQDN_entropy | ALERT if entropy > 99th_percentile_of_baseline
- question: Is the IIS worker process (w3wp.exe) initiating an anomalously high volume of outbound connections compared to its historical baseline?
  context: This question uses time-series analysis to model the normal rhythm of a web server's external communications. A malicious module might cause a sudden spike in connections for tasks like data exfiltration or mass C2 check-ins. Flagging significant deviations from the predicted norm helps detect this unusual behavior.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - Windows Event ID 3 (Sysmon)
  - IIS Web Servers
  - DMZ Network Segment
  - Network Egress Points
  - DNS Resolvers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL time_series_forecast on w3wp_outbound_connections_per_hour | COMPARE current_connection_count to predicted_upper_bound | ALERT if current > predicted
- question: Are commands like AppCmd.exe or PowerShell IIS cmdlets being used to install or modify IIS components?
  context: Adversaries must use legitimate administrative tools to install their malicious IIS modules. This question focuses on detecting the specific command-line arguments and PowerShell cmdlets used for this purpose. Monitoring for the exact syntax of these installation commands provides a high-fidelity signal of this persistence technique being implemented.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1 (Sysmon)
  - Windows PowerShell Event ID 4104
  - Windows PowerShell Event ID 800
  - IIS Web Servers
  - Administrator Workstations
  - Jump Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_command_lines OR powershell_logs FOR ('AppCmd.exe' AND ('install module' OR 'add module')) OR ('New-IISModule' OR 'Set-WebConfigurationProperty')
- question: Is any user account executing IIS configuration commands (AppCmd.exe, PowerShell cmdlets) at a rate that is statistically unusual for them or their peers?
  context: While legitimate administrators use IIS configuration tools, their usage is typically infrequent and planned. An adversary who has compromised an account may execute these commands repeatedly or during odd hours. This question seeks to find anomalous frequency patterns, flagging users whose activity deviates significantly from their own or their peers' established baseline.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1 (Sysmon)
  - Windows PowerShell Event ID 4104
  - Windows PowerShell Event ID 800
  - IIS Web Servers
  - Administrator Workstations
  - Jump Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH iis_config_commands | GROUP BY user, 24_hour_window | CALCULATE command_count | COMPARE count to user_baseline + 3*std_dev | ALERT on outlier
- question: Are the command-line arguments used with IIS configuration tools being classified as malicious by a machine learning model?
  context: Adversaries often use obfuscated, complex, or unusual combinations of parameters that may not be caught by simple keyword matching. This question leverages a machine learning model trained to recognize the characteristics of malicious command lines, allowing for the detection of novel or evasive variations of IIS module installation commands.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1 (Sysmon)
  - Windows PowerShell Event ID 4104
  - Windows PowerShell Event ID 800
  - IIS Web Servers
  - Administrator Workstations
  - Jump Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PIPE all_iis_config_command_lines to classification_model | ALERT if maliciousness_score > high_threshold
- question: Has a new DLL been created in a sensitive IIS directory by an unauthorized process, or has the main IIS configuration file been modified outside of a change window?
  context: This question targets the two primary methods of installing a malicious module: dropping a new DLL into a monitored directory or directly editing the IIS configuration file (applicationhost.config). Alerting on file creation by non-installer processes or on config file changes outside of approved maintenance periods provides a direct detection of the core components of this attack.
  answer_sources:
  - Windows Event ID 11 (Sysmon)
  - Windows Event ID 1 (Sysmon)
  - Windows Event ID 4663
  - File Integrity Monitoring (FIM) Logs
  - File systems of IIS Web Servers
  - '%windir%\System32\inetsrv\'
  - '%windir%\assembly\'
  - application-specific 'bin' folders
  - '%windir%\System32\inetsrv\config\'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation (Sysmon EID 11) WHERE path IN (iis_dirs) AND file_ext = 'dll' AND process NOT IN (allow_list) | UNION | SEARCH fim_logs WHERE file = 'applicationhost.config' AND time NOT IN (change_window)
- question: Is a statistically rare process, such as w3wp.exe or cmd.exe, writing new DLL files into IIS-related directories?
  context: Typically, only trusted installers or deployment services should write new DLLs to core IIS directories. If a web server process (w3wp.exe) or a command shell (cmd.exe) performs this action, it is a strong statistical anomaly. This behavior often indicates that an exploit or webshell is being used to drop the persistence payload.
  answer_sources:
  - Windows Event ID 11 (Sysmon)
  - Windows Event ID 1 (Sysmon)
  - Windows Event ID 4663
  - File Integrity Monitoring (FIM) Logs
  - File systems of IIS Web Servers
  - '%windir%\System32\inetsrv\'
  - '%windir%\assembly\'
  - application-specific 'bin' folders
  - '%windir%\System32\inetsrv\config\'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ANALYZE file_creation_events in iis_dirs | CREATE frequency_table of (process_name, file_extension) | ALERT on event WHERE process_name is rare AND file_extension = 'dll'
- question: Are there clusters of anomalous file modification events in IIS directories that deviate from normal administrative activity?
  context: This question uses unsupervised machine learning to find unusual patterns of activity without pre-defined rules. A malicious actor's actions—such as modifications by an odd process, at a strange time, to a specific set of files—will form a distinct cluster away from the dense clusters of routine, legitimate administrative work, allowing for their discovery.
  answer_sources:
  - Windows Event ID 11 (Sysmon)
  - Windows Event ID 1 (Sysmon)
  - Windows Event ID 4663
  - File Integrity Monitoring (FIM) Logs
  - File systems of IIS Web Servers
  - '%windir%\System32\inetsrv\'
  - '%windir%\assembly\'
  - application-specific 'bin' folders
  - '%windir%\System32\inetsrv\config\'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER file_modification_events in iis_dirs using features (process, user, path, time) | ALERT on events in small, distant clusters
- question: Has the IIS worker process (w3wp.exe) spawned a suspicious child process, such as a command shell or a reconnaissance tool?
  context: The IIS worker process is designed to handle web requests and should not normally spawn command shells or system utilities. Such an event is a very strong indicator that code execution has been achieved (e.g., via a webshell or malicious module) and the attacker is now attempting to interact with the underlying operating system for reconnaissance or lateral movement.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1 (Sysmon)
  - Process execution environment on all IIS Web Servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events WHERE parent_process = 'w3wp.exe' AND child_process IN ('cmd.exe', 'powershell.exe', 'whoami.exe', 'net.exe')
- question: Has the IIS worker process (w3wp.exe) spawned a child process that is rare or has never been seen before in the environment?
  context: Instead of relying on a fixed list of suspicious processes, this question establishes a baseline of all normal child processes for w3wp.exe across the environment. It then flags any process that is statistically rare or has never been seen before. This allows for the detection of custom or uncommon tools an attacker might use.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1 (Sysmon)
  - Process execution environment on all IIS Web Servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events WHERE parent_process = 'w3wp.exe' | LOOKUP child_process against historical_baseline_frequency | ALERT if frequency is low or not_found
- question: Does the sequence of process executions originating from the IIS worker process (w3wp.exe) deviate from learned normal patterns?
  context: This question analyzes the entire chain of process activity, not just a single event. A malicious module might spawn a shell, which then runs a tool (e.g., w3wp.exe -> cmd.exe -> whoami.exe). A sequence analysis model can learn what normal process chains look like and flag these multi-step malicious sequences as a significant deviation from the norm.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1 (Sysmon)
  - Process execution environment on all IIS Web Servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL process_execution_sequences with HMM or LSTM | FEED live_sequences starting with w3wp.exe to model | ALERT on sequences with low probability
- question: Is the IIS worker process (w3wp.exe) making outbound connections to non-standard ports or to raw IP addresses without a preceding DNS query?
  context: Legitimate web applications typically communicate over standard ports (80, 443) to named destinations. Adversaries often use non-standard ports and direct-to-IP connections for C2 to evade detection and bypass some logging mechanisms. This question specifically hunts for these classic indicators of covert C2 channels.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Windows Event ID 3 (Sysmon)
  - DMZ Network Segment
  - Network Egress Points
  - IIS Web Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH w3wp_network_events | ALERT WHERE destination_port NOT IN (80, 443, ...) OR (destination_is_ip AND no_recent_dns_query_for_ip)
- question: Are there statistical outliers in the volume of data transferred or the periodicity of connections from the IIS worker process (w3wp.exe)?
  context: Malicious activity often manifests as statistical anomalies in network traffic. An unusually large data transfer from w3wp.exe could be data exfiltration. Highly regular, periodic connections (beaconing) to the same destination are a hallmark of C2 heartbeats. This question seeks to identify these outliers in data volume and connection timing.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Windows Event ID 3 (Sysmon)
  - DMZ Network Segment
  - Network Egress Points
  - IIS Web Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH w3wp_network_connections | 1) CALCULATE IQR of bytes_transferred, ALERT on outliers. 2) CALCULATE variance of inter_arrival_times, ALERT on low_variance
- question: Are there new clusters of network traffic from the IIS worker process (w3wp.exe) with unusual characteristics (e.g., destination ASN, port, JA3 hash)?
  context: This question uses clustering to group network connections by multiple features simultaneously. A new C2 channel will likely form a new, small cluster with a unique combination of attributes (e.g., long-lived connection on a high port to a residential ISP). This approach can uncover novel threats that don't match any single pre-defined rule.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Windows Event ID 3 (Sysmon)
  - DMZ Network Segment
  - Network Egress Points
  - IIS Web Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER w3wp_network_connections on features (port, protocol, bytes, ASN, JA3) | ALERT on new, small, or unusual clusters
- question: Has the IIS worker process (w3wp.exe) loaded a DLL module that is unsigned or located in an unusual file path?
  context: Legitimate, third-party IIS modules are almost always digitally signed by a trusted vendor. Furthermore, they reside in protected system directories. An unsigned DLL, or one loaded from a temporary or user-writable location like C:\Temp, is a very strong indicator of a malicious module.
  answer_sources:
  - Windows Event ID 7 (Sysmon)
  - Windows Event ID 11 (Sysmon)
  - Process memory space and file system of all IIS Web Servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH image_load_events WHERE process = 'w3wp.exe' AND (is_signed = false OR path IN ('C:\\Temp\\', 'C:\\Windows\\Temp\\'))
- question: Has the IIS worker process (w3wp.exe) loaded a DLL that is rare across the environment, especially if it was recently created?
  context: Commodity malware can be detected by signatures, but custom malware requires behavioral analysis. This question identifies custom malicious modules by finding DLLs that have a very low prevalence (i.e., are running on very few servers). If a rare DLL was also created on disk very recently, it is highly suspicious and likely part of a new attack.
  answer_sources:
  - Windows Event ID 7 (Sysmon)
  - Windows Event ID 11 (Sysmon)
  - Process memory space and file system of all IIS Web Servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH image_load_events WHERE process = 'w3wp.exe' | LOOKUP dll_hash in prevalence_db | ALERT if prevalence < 5% AND (load_time - file_create_time) < 24_hours
- question: Is a DLL loaded by the IIS worker process (w3wp.exe) being classified as malicious by a machine learning model based on its metadata and properties?
  context: This question uses a machine learning model to synthesize multiple weak signals (e.g., unsigned, high entropy name, low prevalence, suspicious import hash) into a single, high-confidence maliciousness score. This provides a more robust and nuanced detection capability than relying on any single characteristic alone.
  answer_sources:
  - Windows Event ID 7 (Sysmon)
  - Windows Event ID 11 (Sysmon)
  - Process memory space and file system of all IIS Web Servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PIPE w3wp_image_load_events to classification_model using features (IsSigned, Signer, path_entropy, imphash, prevalence) | ALERT if malicious_score > high_threshold