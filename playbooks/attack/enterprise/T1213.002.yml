name: T1213.002: Sharepoint
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: 'This playbook helps to determine if an adversary is collecting sensitive information from internal SharePoint repositories. It looks for indicators such as: anomalous access to documents with sensitive keywords by unauthorized or unusual users; HTTP requests or PowerShell commands that suggest the use of reconnaissance tools; statistically significant access to a large number of unique files indicative of bulk collection; access by highly privileged accounts that should not be interacting with SharePoint; access to sensitive files followed by suspicious network connections to internal or external destinations; and anomalous download volumes followed by the use of archival utilities or large outbound data transfers, suggesting data staging and exfiltration.'
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are users who are not in pre-approved groups accessing documents with sensitive keywords?
    context: This question aims to detect policy violations by creating a watchlist of sensitive keywords (e.g., 'password', 'secret') and approved Active Directory groups. It queries SharePoint audit logs for read events on documents matching these keywords and alerts if the accessing user is not part of the corresponding pre-approved group, indicating potential unauthorized access to sensitive data.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Windows Event ID 4624
      - Zeek conn.log
      - SharePoint Farm Servers
      - Domain Controllers
      - Internet Gateway/VPN Concentrators
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE watchlist_keywords = ['password', 'secret', 'API_key', 'network_diagram', 'credentials']
          DEFINE approved_groups = {'credentials': 'AD_GROUP_CREDS_ACCESS'}
          FOR event in sharepoint_audit_logs:
            IF event.action == 'read' AND any(kw in event.document.metadata for kw in watchlist_keywords):
              user_groups = get_user_groups(event.user)
              required_group = approved_groups.get(matched_keyword)
              IF required_group AND required_group NOT IN user_groups:
                ALERT("Unauthorized user accessed sensitive keyword document")
  - question: Is any user accessing documents with sensitive keywords at a rate that is anomalously high compared to their own history or their peers?
    context: This question uses statistical baselining to identify behavioral outliers. For each user, it establishes a 30-day rolling baseline (mean and standard deviation) of their access frequency to files with sensitive keywords. An alert is triggered if a user's daily count exceeds their personal baseline by a significant margin (e.g., 3 standard deviations) or surpasses the 95th percentile of their departmental peer group's activity, suggesting abnormal interest in sensitive information.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Windows Event ID 4624
      - Zeek conn.log
      - SharePoint Farm Servers
      - Domain Controllers
      - Internet Gateway/VPN Concentrators
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user:
            baseline = calculate_30day_baseline(user, 'sensitive_keyword_access')
            peer_group_baseline = calculate_peer_group_baseline(user.department, 'sensitive_keyword_access')
            IF user.today_count > (baseline.mean + 3 * baseline.std_dev) OR user.today_count > peer_group_baseline.95_percentile:
              ALERT("Anomalous sensitive keyword access for user")
  - question: Can machine learning classify sensitive document access as 'benign' or 'suspicious' in real-time based on user and access context?
    context: This question proposes using a supervised machine learning model (e.g., Random Forest) to proactively identify suspicious access. The model is trained on labeled data (benign vs. malicious access) using features like user role, source IP reputation, time of day, and historical access patterns. Once deployed, it classifies each new sensitive document access in real-time, allowing for high-confidence alerts on events deemed 'suspicious'.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Windows Event ID 4624
      - Zeek conn.log
      - SharePoint Farm Servers
      - Domain Controllers
      - Internet Gateway/VPN Concentrators
      - User Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each sensitive_access_event:
            features = extract_features(event.user, event.source_ip, event.time)
            prediction = classification_model.predict(features)
            IF prediction == 'suspicious':
              ALERT("ML model detected suspicious sensitive file access")
  - question: Are there any network requests or PowerShell commands indicative of known SharePoint reconnaissance tools or enumeration techniques?
    context: This question focuses on detecting the use of specific adversary tools. It involves using regular expression rules against network logs (e.g., Zeek http.log) to find signatures in User-Agent strings and URIs (e.g., `/_vti_bin/usergroup.asmx`). It also involves searching PowerShell script block logs (Event ID 4104) for the execution of enumeration cmdlets (e.g., `Get-SPOSite`) by non-administrative users or outside of normal scripts.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4104
      - SharePoint Web Front-End Servers
      - User Workstations
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE tool_signatures = [/SharePointMapper/, /_vti_bin\/usergroup\.asmx/]
          FOR http_request in zeek_http_logs:
            IF any(re.search(sig, http_request.uri) for sig in tool_signatures):
              ALERT("SharePoint recon tool signature detected in HTTP request")
          FOR powershell_log in event_logs(4104):
            IF "Get-SPOSite" in powershell_log.script_block AND powershell_log.user NOT IN admin_users:
              ALERT("SharePoint enumeration cmdlet detected from non-admin")
  - question: Are any source IPs generating SharePoint API requests with an unusually high degree of randomness in their parameters, suggesting scanning or fuzzing?
    context: This question aims to detect automated scanning activity by analyzing the complexity of API requests. It calculates the Shannon entropy of URI query parameters for each source IP within a sliding time window (e.g., 5 minutes). An alert is generated if the entropy score for an IP significantly deviates from a global baseline, as high entropy can indicate the randomized or unpredictable patterns characteristic of fuzzing or enumeration tools.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4104
      - SharePoint Web Front-End Servers
      - User Workstations
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          baseline_entropy = calculate_global_baseline_entropy('sharepoint_api_queries')
          FOR each source_ip in 5_minute_window:
            window_queries = get_queries(source_ip, window)
            current_entropy = calculate_shannon_entropy(window_queries)
            IF current_entropy > (baseline_entropy.mean + 3 * baseline_entropy.std_dev):
              ALERT("High entropy in SharePoint API queries detected, possible scanning")
  - question: Are there anomalous sequences or volumes of API calls from a user or IP that deviate from normal, learned behavior?
    context: This question leverages time-series anomaly detection to identify unusual patterns of API interaction. A model, such as an LSTM Autoencoder, is trained on historical network data to learn the normal sequences and frequencies of API calls (e.g., to `/_api/` and `/_vti_bin/`). The model can then flag live sessions from a user or IP that exhibit anomalous patterns, such as an unusual order of calls or a sudden spike in volume.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4104
      - SharePoint Web Front-End Servers
      - User Workstations
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user_session:
            api_call_sequence = get_api_calls(user_session)
            reconstruction_error = lstm_autoencoder.evaluate(api_call_sequence)
            IF reconstruction_error > anomaly_threshold:
              ALERT("Anomalous sequence of SharePoint API calls detected")
  - question: Has any user accessed an egregious number of unique SharePoint documents in a short time frame (e.g., >1000/hour)?
    context: This question acts as a simple but effective tripwire for blatant data harvesting. It implements a high-threshold rule that generates a critical alert if a single user account is observed accessing an extremely large number of unique document URLs within a one-hour window. This method is designed to catch unsophisticated, high-volume data collection attempts with a low false-positive rate.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Active Directory Logs
      - SharePoint Farm Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE threshold = 1000
          FOR each user in 1_hour_window:
            unique_docs_accessed = count_unique(user.document_access_urls)
            IF unique_docs_accessed > threshold:
              ALERT("High volume of unique document access detected")
  - question: Is a user accessing a number of unique documents that is statistically anomalous compared to their own history and their departmental peers?
    context: This question provides a more nuanced approach to detecting bulk data access by using multi-layered statistical analysis. It calculates a 30-day baseline of unique documents accessed per hour for each user and their department. An alert is triggered only if a user's activity exceeds their personal baseline by a significant statistical measure (Z-score > 3) AND also surpasses the 99th percentile for their peer group, effectively filtering out users who are naturally high-activity.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Active Directory Logs
      - SharePoint Farm Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user:
            user_baseline = calculate_30day_baseline(user, 'unique_docs_per_hour')
            peer_baseline = calculate_peer_group_baseline(user.department, 'unique_docs_per_hour')
            IF (user.hourly_count > user_baseline.zscore_3_threshold) AND (user.hourly_count > peer_baseline.99_percentile):
              ALERT("Statistically anomalous unique document access detected")
  - question: Can users be clustered based on their access patterns to identify outliers engaging in unusual data gathering behavior?
    context: This question uses unsupervised machine learning to find anomalous users. A clustering algorithm like DBSCAN is applied to features such as the number of unique files accessed, the diversity of SharePoint sites visited, and the ratio of off-hours access. Users who do not fall into the main 'normal user' cluster are classified as outliers, highlighting individuals whose access patterns are fundamentally different from their peers and warrant investigation.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Active Directory Logs
      - SharePoint Farm Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          user_features = []
          FOR each user:
            features = extract_features(user.access_logs) # num_files, site_diversity, etc.
            user_features.append(features)
          clusters = dbscan_model.fit_predict(user_features)
          FOR user, cluster_id in zip(users, clusters):
            IF cluster_id == -1: # DBSCAN outlier label
              ALERT("User identified as access pattern outlier by clustering model")
  - question: Has a highly privileged account (e.g., Domain Admin) accessed SharePoint resources, in violation of security policy?
    context: This question enforces a critical security policy by monitoring for any SharePoint activity from highly privileged Active Directory accounts. A watchlist of these accounts (e.g., 'Domain Admins', 'Enterprise Admins') is maintained, and any access event (read, write, etc.) attributed to a user on this list triggers an immediate, high-priority alert. Such activity is almost always forbidden and is a strong indicator of privilege abuse or account compromise.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Windows Event ID 4624
      - Active Directory Logs
      - SharePoint Farm Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE privileged_accounts = get_members('Domain Admins', 'Enterprise Admins')
          FOR event in sharepoint_audit_logs:
            IF event.user in privileged_accounts:
              ALERT("CRITICAL: Privileged account accessed SharePoint")
  - question: If a privileged account has legitimate reasons for SharePoint access, has it deviated from its narrowly defined, approved activity profile?
    context: For the rare cases where a privileged account must access SharePoint, this question enforces a principle of least privilege. A very specific baseline is created that documents the exact approved activity (e.g., specific file paths, source workstations, times). Any access event from that account that deviates from this narrowly defined, pre-approved profile will trigger a high-priority alert, ensuring that any unexpected action is immediately investigated.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Windows Event ID 4624
      - Active Directory Logs
      - SharePoint Farm Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE approved_activity = {'AdminUser1': {'path': '/sites/admin/script.aspx', 'source': 'admin_workstation'}}
          FOR event in sharepoint_audit_logs:
            IF event.user in approved_activity:
              IF event.path != approved_activity[event.user].path OR event.source != approved_activity[event.user].source:
                ALERT("Privileged account deviated from approved activity baseline")
  - question: Can a machine learning model, trained only on legitimate privileged access, detect any anomalous access by those accounts?
    context: This question uses one-class anomaly detection to police privileged account activity. A model, such as a One-Class SVM, is trained exclusively on data representing documented, legitimate administrative access patterns. This creates a tight boundary of "normal." Any new SharePoint access by a privileged account that the model classifies as an anomaly (i.e., falls outside this boundary) triggers an immediate alert for investigation.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Windows Event ID 4624
      - Active Directory Logs
      - SharePoint Farm Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          legit_admin_data = get_legit_admin_access_logs()
          one_class_svm.fit(legit_admin_data)
          FOR new_event in privileged_account_access_logs:
            IF one_class_svm.predict(new_event) == 'anomaly':
              ALERT("ML model detected anomalous privileged account activity")
  - question: After accessing a sensitive SharePoint document, did the user's machine immediately connect to an internal file share or an external destination?
    context: This question uses event correlation to detect potential data staging or exfiltration. It creates a rule that, upon detecting a 'sensitive SharePoint document access' alert, searches for subsequent network connections from the same source IP within a 30-minute window. If a connection to an internal file share (SMB/port 445) or any external IP is found, the priority of the original alert is escalated, as this sequence strongly suggests follow-on malicious activity.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Zeek conn.log
      - Windows Event ID 5145
      - Zeek dns.log
      - SharePoint Farm Servers
      - Internal File Servers
      - User Workstations
      - Network Core Switches
      - DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON event "sensitive_sharepoint_access" (user, source_ip):
            SEARCH network_logs for 30 mins:
              WHERE ip == source_ip AND (dest_port == 445 OR is_external(dest_ip))
            IF found:
              ESCALATE_ALERT("Potential exfiltration after sensitive file access")
  - question: Following a sensitive file access, did the user connect to an internal host or query an external domain that is new or rare for them?
    context: This question aims to detect anomalous network behavior by baselining a user's typical network "neighborhood." For each user, a profile of common internal destination IPs and queried DNS domains is established. If, after accessing a sensitive SharePoint file, the user's machine connects to an internal IP or queries a domain they have never (or rarely) interacted with before, the sequence is flagged for review as it could indicate lateral movement or C2 communication.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Zeek conn.log
      - Windows Event ID 5145
      - Zeek dns.log
      - SharePoint Farm Servers
      - Internal File Servers
      - User Workstations
      - Network Core Switches
      - DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON event "sensitive_sharepoint_access" (user, source_ip):
            user_baseline = get_user_network_baseline(user)
            SEARCH network_logs for 30 mins WHERE ip == source_ip:
              IF connection.dest_ip NOT IN user_baseline.common_ips OR connection.dns_query NOT IN user_baseline.common_domains:
                ALERT("Anomalous network connection following sensitive file access")
  - question: Did the user perform a sequence of actions (e.g., 'access sensitive file' then 'connect to new share') that is highly improbable based on models of normal behavior?
    context: This question applies sequence analysis to detect suspicious workflows. A model, like a Hidden Markov Model (HMM), is trained on normal user behavior to learn the probabilities of transitioning between different states (e.g., 'browse SharePoint', 'access sensitive file'). An observed sequence of events, such as 'access sensitive file' immediately followed by 'connect to new internal share', would have a very low probability under the model, thus triggering a high-confidence alert.
    answer_sources:
      - SharePoint Audit Logs (AuditData.Read)
      - Zeek conn.log
      - Windows Event ID 5145
      - Zeek dns.log
      - SharePoint Farm Servers
      - Internal File Servers
      - User Workstations
      - Network Core Switches
      - DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          normal_sequences = train_hmm_on_user_behavior()
          observed_sequence = ['access_sensitive_file', 'connect_new_internal_share']
          probability = normal_sequences.score(observed_sequence)
          IF probability < low_prob_threshold:
            ALERT("Low-probability sequence of user actions detected")
  - question: Following a large SharePoint download, was an archival tool (like 7z.exe or rar.exe) executed on the user's machine?
    context: This question correlates two distinct events to identify data staging. It creates a rule that first detects a large download from SharePoint (e.g., >500MB in an hour) by a user. It then monitors the user's endpoint for a process creation event (Windows Event ID 4688) for a known archival utility (`7z.exe`, `rar.exe`, etc.) within the next hour. This combination of events is a strong indicator that the user is compressing collected data for exfiltration.
    answer_sources:
      - SharePoint Audit Logs (FileDownloaded)
      - Windows Event ID 4688
      - Zeek conn.log
      - SharePoint Farm Servers
      - User Workstations
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON event "large_sharepoint_download" (user, workstation, size > 500MB):
            SEARCH process_logs on workstation for 1 hour:
              WHERE process_name IN ['7z.exe', 'rar.exe', 'tar.exe']
            IF found:
              ALERT("Archival utility run after large SharePoint download")
  - question: Has a user downloaded a volume of data from SharePoint that is statistically anomalous compared to their own history?
    context: This question uses statistical baselining to detect unusual data download volumes. It calculates a rolling 30-day baseline (mean, standard deviation, and 98th percentile) for the total data volume downloaded from SharePoint per day for each user. An alert is generated if a user's daily download volume significantly exceeds their own historical norms, which could indicate a bulk data collection effort.
    answer_sources:
      - SharePoint Audit Logs (FileDownloaded)
      - Windows Event ID 4688
      - Zeek conn.log
      - SharePoint Farm Servers
      - User Workstations
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user:
            baseline = calculate_30day_baseline(user, 'daily_download_volume')
            IF user.today_volume > baseline.98_percentile:
              ALERT("Anomalous daily download volume for user")
  - question: After recent SharePoint download activity, is the user's machine transferring an unexpectedly large volume of data to external networks?
    context: This question uses a regression model to detect potential exfiltration following data collection. The model is trained to predict a user's expected daily outbound data transfer volume based on factors like their role and recent SharePoint download activity. If the actual outbound data transfer from the user's machine significantly exceeds the model's prediction (i.e., there is a large residual error), it is flagged as a potential exfiltration event.
    answer_sources:
      - SharePoint Audit Logs (FileDownloaded)
      - Windows Event ID 4688
      - Zeek conn.log
      - SharePoint Farm Servers
      - User Workstations
      - Network Egress/Ingress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user with recent_sharepoint_downloads:
            features = [user.role, user.recent_download_volume]
            predicted_outbound = regression_model.predict(features)
            actual_outbound = get_outbound_traffic(user.ip, today)
            IF (actual_outbound - predicted_outbound) > residual_threshold:
              ALERT("Anomalous outbound traffic detected after SharePoint downloads")