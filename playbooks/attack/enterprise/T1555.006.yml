name: T1555.006: Cloud Secrets Management Stores
id: f8c9d0b6-7a1e-4d5c-8b2f-9a3c1d4e0f6b
description: This playbook helps identify adversarial access to credentials stored in cloud secrets management stores. It focuses on detecting suspicious secret retrieval API calls, such as those from known malicious IP addresses, unauthorized principals, or contexts (geolocation, user-agent) that are statistical outliers compared to a user's baseline. The playbook also addresses the use of cloud CLI tools for secret enumeration and bulk retrieval, unusually high volumes of secret access requests from a single source, and scenarios where secret retrieval is immediately followed by network connections to suspicious or previously unseen destinations, which could indicate data exfiltration.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a secret been accessed from a known malicious IP address or by a principal not explicitly authorized to access it?
  context: This question aims to identify clear-cut policy violations or high-confidence threats. Access from an IP on a threat intelligence feed is a strong indicator of compromise. Similarly, access by a user or role that is not on a pre-defined allow-list for a specific secret suggests either a misconfiguration or an adversary moving laterally with compromised credentials.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - Cloud provider control plane API endpoints
  - Network egress points
  - Virtual Private Cloud (VPC) flow logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH cloud_audit_logs WHERE event_name='GetSecretValue' | JOIN source_ip ON threat_intel_feed | ALERT if match OR (principal_id, secret_arn) NOT IN allow_list
- question: Is a principal accessing secrets from a network (ASN) that is statistically rare for their historical activity?
  context: Adversaries often operate from infrastructure that is different from a user's normal working environment. By baselining the typical Autonomous System Numbers (ASNs) a principal uses to access secrets, we can detect deviations. An access attempt from a very rare or never-before-seen ASN for that specific user is a strong indicator of a potential account takeover or compromised session.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - Cloud provider control plane API endpoints
  - Network egress points
  - Virtual Private Cloud (VPC) flow logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH cloud_audit_logs WHERE event_name='GetSecretValue' | LOOKUP asn_for_ip | CALCULATE historical_asn_frequency_per_principal | ALERT if current_asn_frequency < 5th_percentile
- question: Does a machine learning model, trained on multiple access features, classify a recent secret access event as suspicious?
  context: Simple rules can miss nuanced attacks. A machine learning model can analyze multiple features simultaneously—such as the time of day, day of the week, rarity of the source network, and user agent—to build a comprehensive picture of normal behavior. This approach can detect sophisticated attacks that blend in by flagging events that, in aggregate, deviate significantly from the established norm, even if no single feature is overtly anomalous.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - Cloud provider control plane API endpoints
  - Network egress points
  - Virtual Private Cloud (VPC) flow logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM cloud_audit_logs WHERE event_name='GetSecretValue' | ENRICH with features (is_weekend, user_agent_rarity, etc.) | PREDICT is_suspicious with ML_model | ALERT if prediction_score > 0.9
- question: Has a process been created using a cloud CLI tool with command-line arguments indicating secret enumeration or scripting?
  context: Adversaries often use native cloud command-line interface (CLI) tools to discover and exfiltrate secrets. This question looks for process creation events (like Windows Event ID 4688) where the command line contains patterns associated with enumeration (e.g., 'list-secrets') or scripting logic (e.g., 'ForEach-Object', '--query') used for bulk retrieval. Detecting these patterns on endpoints can reveal hands-on-keyboard activity aimed at credential theft.
  answer_sources:
  - Windows Event ID 4688
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Developer workstations
  - CI/CD servers
  - Cloud-hosted virtual machines
  - Container orchestration platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs | REGEX command_line on '(aws|az|gcloud).*(list-secrets|--query|ForEach-Object)' | ALERT on match
- question: Is there an abnormally high ratio of secret enumeration API calls to secret retrieval calls for any user or host?
  context: Before stealing secrets, an adversary must first discover what secrets are available. This often results in a flurry of enumeration API calls (e.g., ListSecrets) followed by targeted retrieval calls (e.g., GetSecretValue). By establishing a baseline ratio of these two activities per user/host, a significant spike in this ratio (measured by a Z-score) can indicate a reconnaissance phase preceding credential theft.
  answer_sources:
  - Windows Event ID 4688
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Developer workstations
  - CI/CD servers
  - Cloud-hosted virtual machines
  - Container orchestration platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE ratio of ListSecrets to GetSecretValue per user per hour | BASELINE ratio over 30 days | ALERT if current_ratio_zscore > 3
- question: Has a sequence analysis model detected an improbable or malicious sequence of command-line executions involving cloud CLI tools?
  context: Legitimate use of cloud CLI tools often follows predictable patterns. A sequence analysis model (like an LSTM) can learn these legitimate workflows. An adversary's actions—such as listing secrets, retrieving them in a loop, and then exfiltrating them with a tool like 'curl' or 'powershell -enc'—would likely form a command sequence that the model flags as having a very low probability, thus identifying it as anomalous and potentially malicious.
  answer_sources:
  - Windows Event ID 4688
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Developer workstations
  - CI/CD servers
  - Cloud-hosted virtual machines
  - Container orchestration platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM process_creation_logs per user | APPLY sequence_model | ALERT if sequence_probability is low AND contains 'list-secrets' -> 'get-secret-value' -> 'curl'
- question: Has any principal (user or role) accessed a specific secret for the very first time?
  context: While not always malicious, a principal accessing a particular secret for the first time is a noteworthy event that warrants investigation. It could be part of a legitimate workflow, but it could also indicate that an attacker, having compromised a set of credentials, is now using them to access new resources as part of lateral movement or privilege escalation. Maintaining a stateful record of who has accessed what allows for the immediate detection of these novel interactions.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Windows Event ID 4688
  - Cloud provider control plane
  - Authentication logs
  - Developer workstations
  - CI/CD servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR EACH secret_access_event | CHECK if (principal_id, secret_arn) exists in historical_access_table | IF NOT, ALERT and add to table
- question: Did a secret access event occur with a combination of contextual attributes that deviate from the principal's established profile?
  context: This question moves beyond single indicators to a composite risk score. By profiling a principal's normal access patterns—including source countries, user agents, and typical hours of operation—we can detect suspicious activity that might otherwise be missed. An event that triggers multiple deviations (e.g., access from a new country, using a new user-agent, during off-hours) accumulates a high risk score, signaling a likely compromise.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Windows Event ID 4688
  - Cloud provider control plane
  - Authentication logs
  - Developer workstations
  - CI/CD servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR EACH secret_access_event | CALCULATE risk_score based on deviations (new country, off-hours, etc.) from principal's historical profile | ALERT if risk_score > 95th_percentile
- question: Has an unsupervised anomaly detection model flagged a secret access event as anomalous?
  context: This question leverages machine learning to find the "unknown unknowns." An unsupervised model, like an Isolation Forest, can learn the complex characteristics of normal secret access by analyzing multiple features (principal, secret, source subnet, user agent, time) together. It can then identify new events that do not conform to this learned pattern, flagging them as anomalies without relying on pre-defined rules or signatures, which is effective against novel attack techniques.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Windows Event ID 4688
  - Cloud provider control plane
  - Authentication logs
  - Developer workstations
  - CI/CD servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM secret_access_events | APPLY isolation_forest_model on features (principal, secret, source_ip, etc.) | ALERT if model_output is 'anomaly'
- question: Has a single principal or source IP address accessed an unusually high number of secrets in a short time window?
  context: Adversaries often perform "smash and grab" operations, attempting to retrieve as many credentials as possible in a short period before being detected. This question seeks to identify such behavior by using a simple but effective sliding-window counter. An alert is triggered if a single source (principal or IP) exceeds a tuned, static threshold of secret retrieval calls, indicating potential bulk exfiltration.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - Cloud provider control plane
  - VPC flow logs
  - Network egress points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: COUNT GetSecretValue events per principal_id per 10_minutes | ALERT if count > 20
- question: Is a principal accessing a number of distinct secrets that is statistically significant compared to their own baseline?
  context: This approach refines the simple volume-based detection by creating a personalized baseline for each principal. Some service accounts or applications may legitimately access many secrets, which would trigger a static threshold. By calculating the historical average and standard deviation of distinct secrets accessed per hour for each principal, we can use a Z-score to detect when a principal's activity significantly deviates from *their own* normal behavior, reducing false positives.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - Cloud provider control plane
  - VPC flow logs
  - Network egress points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE distinct_secrets_accessed per principal per hour | BASELINE hourly count over 30 days | ALERT if current_hour_count_zscore > 3
- question: Is the minute-by-minute rate of secret access for a principal exceeding the forecast of a time-series model?
  context: For principals with high-volume, predictable access patterns (like CI/CD systems), a time-series model can provide highly accurate anomaly detection. By learning the normal seasonality of access (e.g., higher on weekdays, lower at night), the model can forecast an expected range of activity. An observed access count that breaks through the upper bound of this forecast is a strong statistical signal of an anomalous spike in activity that warrants investigation.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - Cloud provider control plane
  - VPC flow logs
  - Network egress points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FORECAST secret_access_rate per minute using time_series_model | ALERT if actual_rate > forecasted_upper_bound
- question: Was a secret retrieval event followed by an outbound network connection from the source host to a known malicious destination?
  context: This is a high-fidelity detection that directly links credential access to potential exfiltration. By correlating cloud audit logs (showing the secret access) with network logs (showing outbound connections) on the source IP and time, we can spot a classic attack pattern: an adversary gains access to a secret and immediately uses it or sends it to their command and control server. A connection to an IP on a threat intelligence feed is a strong indicator of malicious activity.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Windows Event ID 4688
  - Windows Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Developer workstations
  - CI/CD servers
  - Cloud-hosted virtual machines
  - Network egress points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN cloud_audit_logs on event='GetSecretValue' with network_logs on source_ip within 5 mins | JOIN network_logs.dest_ip with threat_intel_feed | ALERT on match
- question: Following a secret retrieval, did the source host connect to a network destination it has never connected to before?
  context: Adversaries often exfiltrate data to staging servers or C2 infrastructure that the compromised host has no legitimate reason to communicate with. This question establishes a baseline of "normal" network destinations for each host. When a secret is accessed, any subsequent connection from that host to a destination *not* in its historical baseline is flagged as suspicious. This "first time seen" logic is effective at catching connections to newly stood-up attacker infrastructure.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Windows Event ID 4688
  - Windows Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Developer workstations
  - CI/CD servers
  - Cloud-hosted virtual machines
  - Network egress points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ON secret_access_event for source_ip | MONITOR subsequent outbound connections for 10 mins | IF connection_dest NOT IN historical_destinations_for_source_ip, ALERT
- question: Has a graph-based anomaly detection model identified a rare or unseen sequence of interactions involving secret access?
  context: This advanced technique models the relationships between entities (users, hosts, secrets, destinations) as a graph. Legitimate activity forms common, recurring patterns or subgraphs. An attack, such as a compromised user accessing a secret and then connecting to a pastebin site, would create a rare or entirely new subgraph. Graph-based models excel at identifying these anomalous structural patterns that are difficult to define with traditional rules.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Windows Event ID 4688
  - Windows Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Developer workstations
  - CI/CD servers
  - Cloud-hosted virtual machines
  - Network egress points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL interactions as a graph (User -> Host -> GetSecret -> ConnectToIP) | APPLY graph_anomaly_detection_model | ALERT on rare subgraph patterns