name: "T1059: Command and Scripting Interpreter"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook focuses on detecting adversaries executing commands and scripts on target systems using built-in interpreters like PowerShell, Command Prompt, and WScript. It provides investigative questions to identify malicious activity through various analytical methods. These include matching command-line arguments against threat intelligence for known indicators of compromise (IOCs); analyzing commands for high entropy or unusual patterns indicative of obfuscation; identifying suspicious parent-child process relationships, such as an Office application spawning a command shell; detecting 'write-then-execute' behavior in temporary directories; and flagging anomalous outbound network connections initiated by script interpreters."
type: "technique"
related:
  - "TA0002: Execution"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are script interpreters executing commands containing known malicious indicators (IPs, domains, or file hashes)?"
    context: "This question aims to identify the most direct evidence of malicious activity by matching artifacts from command-line executions against curated threat intelligence. A match provides a high-confidence signal that an adversary is using a known command-and-control (C2) address, a malicious domain, or a known malicious script. This is a foundational step in detecting 'living-off-the-land' attacks where adversaries use legitimate system tools."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688, Windows Event ID 4104, Zeek conn.log, Zeek dns.log from User Workstations, Application Servers, Domain Controllers, Network Egress Points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH process creation events OR script block logs
          WHERE process_name IN ('powershell.exe', 'cmd.exe', 'wscript.exe')
          EXTRACT indicators (IPs, domains, file_hashes) from command_line OR script_block_text
          LOOKUP indicators against threat intelligence feeds
          RETURN events where a match is found
  - question: "Are script interpreters executing commands containing unusually rare domains or IP addresses within the enterprise?"
    context: "Adversaries often use newly registered or bespoke domains for C2 that will not appear on standard threat intelligence feeds. This question identifies such activity by flagging domains and IPs that are statistically rare within the environment. A very low prevalence suggests the destination is not part of normal business operations and warrants investigation, especially when initiated by a scripting tool."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688, Windows Event ID 4104, Zeek conn.log, Zeek dns.log from User Workstations, Application Servers, Domain Controllers, Network Egress Points"
    range: "last 30 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH process creation and script block logs over last 30 days
          EXTRACT domains and IPs from command lines
          CALCULATE frequency of each domain/IP across the enterprise
          RETURN events where frequency is below a defined low-prevalence threshold (e.g., 5th percentile)
  - question: "Can a machine learning model identify malicious command-line executions based on their structural and contextual features?"
    context: "This question leverages machine learning to move beyond simple IOCs or statistical rarity. By training a classifier on features like command length, character entropy, and the presence of suspicious keywords, the model can learn to identify complex malicious patterns that may not be caught by other methods. This provides a probabilistic scoring mechanism to prioritize the most suspicious command-line activity for analyst review."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688, Windows Event ID 4104, Zeek conn.log, Zeek dns.log from User Workstations, Application Servers, Domain Controllers, Network Egress Points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          FOR each new process creation event:
            EXTRACT features (length, entropy, keywords, domain/IP rarity) from command_line
            INPUT features into pre-trained classification model
            SCORE the event for maliciousness
          RETURN events with a score above a defined high-probability threshold
  - question: "Are command lines exhibiting patterns of known malicious tools or obfuscation techniques?"
    context: "This question uses regular expressions to detect specific, known-bad patterns within command-line arguments or script block content. This includes signatures for common download cradles (e.g., 'IEX(New-Object Net.WebClient).DownloadString'), Base64 encoding flags, and structures specific to offensive frameworks like Metasploit, providing a high-fidelity method for catching common attack tools."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Web Servers, Mail Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH process creation and script block logs
          APPLY regex library for known malicious patterns (download cradles, encoding flags, tool syntax) to command_line and script_block_text
          RETURN events with one or more regex matches
  - question: "Are there command-line executions with unusually high character entropy or length for a given process on a specific host?"
    context: "This question aims to identify obfuscation and embedded payloads by establishing a baseline for normal command-line length and entropy for each process on each host. Adversaries often embed encoded scripts or long, complex commands, which cause these values to deviate significantly from the norm. Flagging executions that exceed a high percentile (e.g., 98th) of the historical baseline is an effective way to spot these anomalies."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Web Servers, Mail Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          FOR each process execution event:
            CALCULATE entropy and length of command_line
            COMPARE against historical baseline for the same process on the same host
            RETURN events where entropy or length exceeds a high percentile threshold (e.g., 98th)
  - question: "Are there command-line executions with anomalous character sequences not typical for the environment?"
    context: "This question uses n-gram analysis to model 'normal' command-line syntax. By building a model on a large corpus of benign commands, it can calculate the probability of any new command sequence. Commands with a high perplexity score are structurally different from anything seen before and are likely to be malicious or obfuscated, allowing for the detection of novel attack syntax."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Web Servers, Mail Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          FOR each new command-line execution:
            CALCULATE perplexity score using a pre-trained character-level n-gram model
            RETURN events where the perplexity score is above a defined anomaly threshold
  - question: "Are script interpreters being spawned by unusual parent processes like Office applications or web browsers?"
    context: "This question aims to detect a common attack vector where an adversary uses a document macro or browser exploit to launch a command interpreter. By maintaining a blacklist of illogical or known-bad parent-child relationships (e.g., WINWORD.EXE spawning cmd.exe), security teams can generate high-priority alerts for these highly suspicious execution chains."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688 from User Workstations, Remote Desktop Servers, Mail Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH process creation events
          WHERE (parent_process, child_process) tuple matches a known-bad blacklist (e.g., 'winword.exe' -> 'cmd.exe')
          RETURN all matching events
  - question: "Are there any newly observed parent-child process relationships involving script interpreters?"
    context: "This question helps detect novel execution chains by tracking every unique parent-child process pair observed in the environment. When a new pair involving a script interpreter appears for the first time, it is flagged as a potential threat. This is effective for catching new malware or attack techniques that don't match any pre-defined rules."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688 from User Workstations, Remote Desktop Servers, Mail Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          FOR each process creation event:
            CREATE tuple of (ParentProcessName, ChildProcessName)
            CHECK if tuple has been seen before in the environment
            IF child is a script interpreter AND tuple is new:
              RETURN the event as a first-seen anomaly
  - question: "Do process execution chains involving script interpreters deviate from the normal activity graph?"
    context: "This question models process activity as a graph to find anomalous execution pathways. By establishing a baseline of normal process flows, this method can identify entire subgraphs of activity that are abnormal, such as a short, unusual chain originating from an Office application and terminating in a script interpreter. This provides a more holistic view of an attack than looking at single parent-child pairs."
    answer_sources:
      - "Sysmon Event ID 1, Windows Event ID 4688 from User Workstations, Remote Desktop Servers, Mail Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          INGEST process creation events into a graph database
          MODEL normal process execution flows
          IDENTIFY and return subgraphs that deviate significantly from the established baseline, especially those involving script interpreters
  - question: "Are scripts being written to temporary or world-writable directories and then executed immediately?"
    context: "This question targets a classic malware staging technique. Adversaries often drop a script file into a common location like %TEMP% and then immediately execute it. By creating a correlation rule that looks for a file creation event followed closely by a process creation event for that same file path, analysts can detect this high-fidelity 'write-then-execute' pattern."
    answer_sources:
      - "Sysmon Event ID 11, Sysmon Event ID 1 from User Workstations, File Servers, Web Application Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          CORRELATE file creation events (Event ID 11) with process creation events (Event ID 1)
          WHERE file_path is the same in both events
          AND file has script extension (.ps1, .bat, etc.)
          AND directory is world-writable (e.g., %TEMP%)
          AND time difference is less than 10 seconds
          RETURN correlated events
  - question: "Are scripts being executed from statistically rare or unusual directory paths?"
    context: "This question helps find adversaries staging scripts in non-standard locations to evade simple rules that only monitor common temporary directories. By calculating the execution frequency for every directory path across the enterprise, scripts running from locations in the bottom percentile can be flagged as suspicious, revealing attempts to hide in plain sight."
    answer_sources:
      - "Sysmon Event ID 11, Sysmon Event ID 1 from User Workstations, File Servers, Web Application Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH process creation events for script executions
          PARSE the directory path from the command line
          CALCULATE the frequency of each directory path across the enterprise
          RETURN events where the directory path frequency is in the bottom 5th percentile
  - question: "Is there an anomalous spike in the rate of script file creation in critical system directories?"
    context: "This question uses time-series analysis to detect abnormal file writing activity in sensitive locations like C:\\Windows\\System32. A sudden, sharp increase in the number of script files being created could indicate a large-scale malware deployment, a worm propagating, or an adversary attempting to replace legitimate system utilities with malicious versions ('living-off-the-land' binary replacement)."
    answer_sources:
      - "Sysmon Event ID 11, Sysmon Event ID 1 from User Workstations, File Servers, Web Application Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          MODEL the rate of script file creation events (Event ID 11) over time for critical directories
          USE a time-series anomaly detection algorithm (e.g., SARIMA, LSTM)
          RETURN alerts for time windows with anomalous spikes in file creation rates
  - question: "Are script interpreters making outbound network connections to known malicious IPs or domains?"
    context: "This question directly links script execution on a host with potential command-and-control (C2) activity. By correlating network connection events initiated by script interpreters with threat intelligence feeds, analysts can find high-confidence evidence that a script is communicating with malicious infrastructure."
    answer_sources:
      - "Sysmon Event ID 3, Zeek conn.log, Zeek dns.log, Zeek ssl.log from Network Egress Points, DNS Servers, User Workstations, DMZ Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH network connection events (Sysmon Event ID 3)
          WHERE process_name is a script interpreter
          LOOKUP DestinationIp and associated DNS domain against threat intelligence feeds
          RETURN events with a match
  - question: "Are script interpreters using rare TLS fingerprints (JA3/JA3S) or uncommon destination ports for network connections?"
    context: "Malware often uses custom-coded network libraries that produce different TLS fingerprints (JA3/JA3S) than standard, legitimate applications. This question identifies these non-standard clients by flagging connections from script interpreters that use a JA3 hash or destination port that is statistically rare in the environment, indicating a likely malicious tool."
    answer_sources:
      - "Sysmon Event ID 3, Zeek conn.log, Zeek dns.log, Zeek ssl.log from Network Egress Points, DNS Servers, User Workstations, DMZ Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          SEARCH network connections from script interpreters
          EXTRACT JA3/JA3S hash and destination port
          CALCULATE rarity of each JA3 hash and port for that specific process
          RETURN connections with a JA3 hash or port that is highly infrequent (e.g., <1% of connections)
  - question: "Do network connections from script interpreters exhibit anomalous behavior patterns like C2 beaconing or data exfiltration?"
    context: "This question uses unsupervised machine learning to find malicious network patterns without relying on signatures. By clustering connection metrics (bytes sent, duration, frequency), it can automatically group behaviors. Connections that don't fit into a 'normal' cluster are flagged as outliers, which can represent C2 heartbeats (regular, small packets) or data exfiltration (large, sustained transfers)."
    answer_sources:
      - "Sysmon Event ID 3, Zeek conn.log, Zeek dns.log, Zeek ssl.log from Network Egress Points, DNS Servers, User Workstations, DMZ Servers"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: |
          FOR each process-destination pair, track connection metrics (bytes, duration, frequency) over time
          USE a clustering algorithm (e.g., DBSCAN) to group connections into normal behavior clusters
          RETURN connections that are flagged as noise or fall into outlier clusters