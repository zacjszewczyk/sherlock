name: T1596.003: Digital Certificates
id: a1b9c8d0-f7e6-4d5c-b4a3-2e1f0a9b8c7d
description: This playbook helps investigate if an adversary is performing reconnaissance by searching public digital certificate data against the organization. This involves looking for signs like internal hosts connecting to certificate reconnaissance services (e.g., crt.sh, censys.io) or adversary C2 infrastructure; internal hosts making HTTP/S requests to Certificate Transparency (CT) log domains with signs of automation (non-standard User-Agents, high frequency); internal hosts generating anomalous volumes and diversity of DNS queries for CT log domains; or a single external IP establishing an unusually high number of SSL/TLS sessions to public-facing servers with a wide variety of Server Name Indication (SNI) requests.
type: technique
related:
- TA0043: Reconnaissance
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is an internal host connecting to known certificate reconnaissance domains or adversary infrastructure?
  context: This question seeks to identify direct communication from within the network to external services known to be used for certificate reconnaissance (like crt.sh or censys.io) or to known malicious command-and-control (C2) servers. A match against a threat intelligence feed is a strong indicator of potential adversary activity, as it shows a host is interacting with infrastructure linked to malicious operations. Correlating this network activity with the process that initiated it helps pinpoint the specific software or script responsible for the reconnaissance attempt.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows Event ID 4688
  - Internal DNS Resolvers
  - Network Egress Points (e.g., Firewalls, Proxies)
  - Endpoints
  range: last 90 days
  queries:
  - pseudocode: SEARCH network logs (DNS, connections) and process logs WHERE destination_domain OR destination_ip IN threat_intel_list AND correlate by source_ip and timestamp to find initiating process
- question: Is an internal host contacting an anomalous number of unique reconnaissance domains compared to its own history and its peer group?
  context: This question uses statistical analysis to find outliers. Instead of relying on a fixed list of malicious domains, it detects unusual behavior. A host suddenly contacting many more reconnaissance-related domains than it normally does, and more than similar hosts (its peers), suggests a deviation from normal activity that could be caused by an automated reconnaissance tool. This approach helps find new or unknown threats that aren't yet on intelligence feeds.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Internal DNS Resolvers
  - Network Egress Points (e.g., Firewalls, Proxies)
  - Endpoints
  range: last 90 days
  queries:
  - pseudocode: FOR each_host, CALCULATE hourly_unique_recon_domains. COMPARE to host's 30-day baseline AND peer_group's 30-day baseline. ALERT if count > 98th_percentile of both.
- question: Is there an anomalous spike in the overall volume of network traffic from our internal network to known reconnaissance domains?
  context: This question focuses on the aggregate network behavior rather than individual hosts. A sudden, unexpected increase in the total volume of connections to a watchlist of reconnaissance sites, which cannot be explained by normal daily or weekly patterns (seasonality), could indicate a coordinated or widespread reconnaissance effort across multiple internal systems. A time-series anomaly detection model is effective at spotting these significant, network-wide deviations from predictable traffic flows.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Internal DNS Resolvers
  - Network Egress Points (e.g., Firewalls, Proxies)
  - Endpoints
  range: last 90 days
  queries:
  - pseudocode: APPLY time-series_model (e.g., ESD) to total_connection_volume_to_recon_watchlist. ALERT on points flagged as anomalies by the model.
- question: Are internal hosts making HTTP/S requests to Certificate Transparency (CT) log domains using signatures of known automated tools?
  context: This question aims to identify reconnaissance activity by looking for specific fingerprints left by common scanning and enumeration tools in web traffic. Automated tools often use default or non-standard User-Agent strings (e.g., 'masscan', 'sublist3r') or construct predictable URI query patterns when searching CT logs. Detecting these specific signatures in decrypted HTTP traffic provides direct evidence that a tool, rather than a user in a web browser, is responsible for the activity.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek dns.log
  - Web Proxies with SSL/TLS Decryption
  - Network Egress Points
  - Endpoint Detection and Response (EDR) agents
  range: last 90 days
  queries:
  - pseudocode: SEARCH decrypted_http_logs WHERE destination in CT_log_domain_list AND (user_agent matches tool_regex OR uri matches tool_query_pattern_regex). ALERT on match.
- question: Is an internal host exhibiting unusually high variation in its User-Agent strings when communicating with Certificate Transparency (CT) log domains?
  context: This question is designed to detect evasion techniques used by sophisticated reconnaissance tools. To avoid being detected by simple signature matching, a tool might randomize or cycle through multiple User-Agent strings. This results in a high degree of randomness, or entropy. A sudden spike in the entropy of User-Agent strings from a single host suggests an attempt to masquerade its identity and is a strong indicator of automated, potentially malicious, activity.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek dns.log
  - Web Proxies with SSL/TLS Decryption
  - Network Egress Points
  - Endpoint Detection and Response (EDR) agents
  range: last 90 days
  queries:
  - pseudocode: FOR each_host, CALCULATE shannon_entropy of user_agents in 1-hour_window for CT_log_traffic. ALERT if entropy > 3_std_dev from host's 30-day baseline.
- question: Can machine learning classify outbound traffic to Certificate Transparency (CT) log domains as malicious based on its characteristics?
  context: This question leverages a machine learning model to make a sophisticated judgment about whether traffic is benign (e.g., a security analyst using a browser) or malicious (e.g., an adversary's script). By training a classifier on a wide range of features—such as User-Agent characteristics, URI structure, and request timing—the model can learn the subtle patterns that differentiate normal user behavior from automated tool activity. This provides a more robust and adaptive detection method than static rules or simple statistical thresholds.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek dns.log
  - Web Proxies with SSL/TLS Decryption
  - Network Egress Points
  - Endpoint Detection and Response (EDR) agents
  range: last 90 days
  queries:
  - pseudocode: APPLY trained_ML_classifier (e.g., Random Forest) on features from HTTP_requests_to_CT_logs. ALERT if classification is 'malicious' with probability > 0.9.
- question: Is a host from a 'low-risk' user group, which should have no reason to, querying Certificate Transparency (CT) log domains?
  context: This question is based on the principle of least privilege and expected user behavior. Hosts used by employees in roles like finance or HR typically have no legitimate reason to access CT logs. Therefore, any such query from these hosts is inherently suspicious and a high-fidelity indicator of a potential compromise or insider threat. This simple rule-based approach can be very effective at detecting clear policy violations.
  answer_sources:
  - Zeek dns.log
  - Windows Event ID 5156
  - Windows Event ID 4688
  - Internal DNS Resolvers
  - Domain Controllers
  - Endpoint Devices
  range: last 90 days
  queries:
  - pseudocode: SEARCH dns_logs WHERE source_host IN low_risk_group AND query_domain IN CT_log_domain_list. ALERT on match and correlate with process/connection logs.
- question: Is an internal host generating both an anomalously high volume and high diversity of DNS queries for Certificate Transparency (CT) log domains?
  context: This question seeks to identify aggressive reconnaissance by looking for two simultaneous behavioral anomalies. A high volume of queries suggests intensity, while high diversity (entropy) of the domains being queried suggests a broad search. An adversary trying to discover a wide range of subdomains would trigger both metrics. Requiring both to exceed their historical baselines significantly reduces false positives that might be caused by a single, temporary spike in just one of the metrics.
  answer_sources:
  - Zeek dns.log
  - Windows Event ID 5156
  - Windows Event ID 4688
  - Internal DNS Resolvers
  - Domain Controllers
  - Endpoint Devices
  range: last 90 days
  queries:
  - pseudocode: FOR each_host, CALCULATE hourly_dns_query_count AND hourly_dns_domain_entropy for CT_log_traffic. ALERT if both metrics > 99th_percentile of their 30-day baselines.
- question: Is an internal host's DNS query pattern to Certificate Transparency (CT) log domains deviating from its own established normal behavior?
  context: This question uses a machine learning technique called one-class classification to create a highly specific behavioral profile for each host. The model learns what is 'normal' for a single host's DNS activity related to CT logs. Any activity that falls outside this learned boundary is flagged as an anomaly. This is a powerful method for detecting subtle changes in an individual host's behavior that might not be caught by peer group analysis or fixed thresholds.
  answer_sources:
  - Zeek dns.log
  - Windows Event ID 5156
  - Windows Event ID 4688
  - Internal DNS Resolvers
  - Domain Controllers
  - Endpoint Devices
  range: last 90 days
  queries:
  - pseudocode: APPLY one-class_SVM_model trained on host's historical DNS_patterns_to_CT_logs. ALERT on any new query pattern flagged as an outlier by the model.
- question: Is a known malicious external IP address attempting to connect to our public-facing servers?
  context: This question provides a high-confidence, first line of defense by checking all incoming SSL/TLS connection attempts against a list of known bad actors. If an IP address is already on a threat intelligence feed for participating in scanning or reconnaissance, any attempt to connect to the organization's infrastructure is immediately suspect. This allows for rapid alerting and potentially automated blocking, preventing the reconnaissance from even beginning.
  answer_sources:
  - Zeek ssl.log
  - Zeek conn.log
  - Network DMZ
  - Public-facing Web Servers
  - Edge Routers
  - Load Balancers
  - Cloud-hosted Application Frontends
  range: last 90 days
  queries:
  - pseudocode: SEARCH inbound_ssl_logs WHERE source_ip IN threat_intel_list. ALERT on match and consider automated block.
- question: Is a single external IP address requesting an anomalously high number of unique hostnames via Server Name Indication (SNI)?
  context: This question focuses on detecting external scanning activity by analyzing the Server Name Indication (SNI) field in SSL/TLS handshakes. An adversary attempting to discover all subdomains of an organization (e.g., app1.example.com, app2.example.com) will generate requests with many different SNI values from a single source IP. A sudden spike in the number of unique SNIs or unique destination hosts from one IP is a strong indicator of an active enumeration attempt.
  answer_sources:
  - Zeek ssl.log
  - Zeek conn.log
  - Network DMZ
  - Public-facing Web Servers
  - Edge Routers
  - Load Balancers
  - Cloud-hosted Application Frontends
  range: last 90 days
  queries:
  - pseudocode: FOR each_external_ip, COUNT unique_destination_hosts and unique_SNI_values in 5-min_window. ALERT if unique_SNI_count > 99.5th_percentile. Escalate ALERT if both counts > 99.5th_percentile.
- question: Can we identify anomalous external scanning activity by finding connection patterns that do not belong to any normal traffic cluster?
  context: This question uses an unsupervised machine learning algorithm, DBSCAN, to automatically group incoming traffic into clusters of similar behavior. Normal, high-volume traffic from sources like CDNs or search engine bots will form large, dense clusters. Malicious scanning, which is often sporadic or has unique characteristics, will not fit into these clusters and will be classified as 'noise'. This method excels at finding novel or unusual scanning techniques without prior knowledge of what they look like.
  answer_sources:
  - Zeek ssl.log
  - Zeek conn.log
  - Network DMZ
  - Public-facing Web Servers
  - Edge Routers
  - Load Balancers
  - Cloud-hosted Application Frontends
  range: last 90 days
  queries:
  - pseudocode: APPLY DBSCAN_clustering on features (source_ip, dest_port, unique_SNI_count, etc.) from external connection logs. FLAG all data points classified as 'noise' for investigation.