name: T1547.014: Active Setup
id: 5a4d6f8c-1e2b-4d9a-8c7f-3b6e9a1d0f2e
description: This playbook helps investigate whether an adversary is using the Active Setup registry feature for persistence or privilege escalation. Adversaries may modify the 'StubPath' value within 'HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\' to point to a malicious executable. This executable is then run with elevated privileges by 'runonce.exe' the next time a user logs on. The investigation focuses on identifying anomalous 'StubPath' modifications, such as those pointing to known malicious files, executables in non-standard locations, or those used to trigger UAC bypasses with auto-elevating binaries. It also aims to detect the subsequent execution of rare processes shortly after logon or the performance of privileged actions by processes originating from an Active Setup entry.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are newly created or modified Active Setup 'StubPath' registry values, or the files they point to, associated with known malicious indicators?
  context: Adversaries often use known malware or tools for persistence. This question aims to directly identify this activity by checking if the command or executable specified in a 'StubPath' registry value, or the hash of the executable file itself, is present on threat intelligence blocklists. A match provides a high-confidence indicator of compromise.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry hives (specifically HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\) on all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon Event ID 13 WHERE TargetObject ends with 'StubPath'
      EXTRACT new_path from Details
      GET hash of file at new_path
      LOOKUP new_path and hash against threat_intelligence_list
      ALERT on match
- question: Are there any rare or low-prevalence 'StubPath' values across the environment that could indicate targeted malicious activity?
  context: Unlike legitimate software which is installed widely, adversarial persistence is often targeted to a few machines. This question uses statistical analysis to find 'StubPath' values that are outliers. By identifying values that exist on only a small number of hosts, analysts can focus on unusual entries that are more likely to be malicious.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry hives (specifically HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\) on all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      GET all unique 'StubPath' values and their host counts over 30 days
      CALCULATE prevalence for each value (host_count / total_hosts)
      FLAG values where prevalence is below 0.1% or host_count is less than 5
- question: Can machine learning models identify malicious 'StubPath' values based on their string characteristics?
  context: This question explores a proactive detection method for finding novel threats that may not be on any blocklist. Malicious paths often have distinct characteristics (e.g., high entropy, unusual keywords, abnormal length). A machine learning model can be trained to recognize these patterns and predict the likelihood that a new or modified 'StubPath' value is malicious.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry hives (specifically HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\) on all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new/modified 'StubPath' value
      EXTRACT features (string_length, entropy, path_depth, keywords)
      INPUT features into trained Random Forest model
      ALERT if maliciousness_score > threshold
- question: Are any Active Setup 'StubPath' values being set to execute scripting interpreters or point to executables in unusual, user-writable locations?
  context: Adversaries frequently use scripting interpreters (like PowerShell) or place their payloads in user-writable directories (like C:\Users\Public or %TEMP%) to bypass security controls. This question uses regular expressions to specifically search for these suspicious patterns in 'StubPath' registry modifications, which are strong indicators of malicious persistence.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry and process execution logs on all Windows endpoints, with a focus on standard user workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon Event ID 13 WHERE TargetObject ends with 'StubPath'
      APPLY regex to Details field to find paths containing ('powershell', 'cmd', 'wscript', 'C:\\Users\\', 'C:\\ProgramData\\')
      ALERT on match
- question: Are there new 'StubPath' modifications pointing to directories not previously seen for a specific host, especially if the path has high entropy?
  context: Systems tend to have stable sets of directories used for legitimate startup items. This question focuses on detecting anomalies by first building a baseline of normal 'StubPath' directories for each host. Any new modification that points to a directory not in that host's baseline, particularly if the path appears randomized (high entropy), is flagged as suspicious and requires investigation.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry and process execution logs on all Windows endpoints, with a focus on standard user workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each host, build baseline of known 'StubPath' directories
      ON new 'StubPath' modification:
        EXTRACT directory_path
        CALCULATE string_entropy of directory_path
        IF directory_path is not in host_baseline AND entropy is in top 5th percentile
          ALERT
- question: Are there anomalous or rare processes being executed by 'runonce.exe' shortly after user logon?
  context: Legitimate post-logon processes triggered by Active Setup are typically common and consistent. This question uses unsupervised machine learning (clustering) to group all processes spawned by 'runonce.exe'. Processes that do not fit into any large cluster are considered outliers or noise, making them highly suspicious and likely candidates for malicious payloads executed via Active Setup.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry and process execution logs on all Windows endpoints, with a focus on standard user workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      GATHER all processes spawned by 'runonce.exe' post-logon
      EXTRACT features (path, args, hash)
      APPLY DBSCAN clustering algorithm
      INVESTIGATE processes classified as noise or belonging to small clusters
- question: Is a rare or non-allowlisted process being executed by 'runonce.exe' or 'explorer.exe' within two minutes of a user logging on?
  context: Malicious Active Setup entries execute their payload shortly after a user logs in. This question aims to detect this by correlating logon events with process creation events that occur within a narrow time window. By filtering out common, expected startup processes using an allowlist, analysts can quickly identify unauthorized executions.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 1
  - Zeek conn.log
  - Process creation and user logon logs from all Windows endpoints, especially those of privileged users.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON Windows Event 4624 (LogonType 2 or 10):
        MONITOR for Sysmon Event 1 on same host within 2 minutes
        IF ParentProcess is 'runonce.exe' or 'explorer.exe' AND Process is NOT in allowlist
          ALERT
- question: Has a user recently executed a process shortly after logon that is historically rare for that specific user?
  context: Normal startup processes can vary between users and roles. This question moves beyond a global allowlist to a more nuanced, user-centric approach. It builds a historical profile of each user's typical startup processes and flags any new process that is statistically rare for that individual, providing a more accurate anomaly detection method.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 1
  - Zeek conn.log
  - Process creation and user logon logs from all Windows endpoints, especially those of privileged users.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each user, build profile of process execution frequency within 2 mins of logon
      ON new logon event for user:
        FOR each process launched in startup window:
          CALCULATE historical frequency for that user
          IF frequency is below 5th percentile
            ALERT
- question: Does the sequence of processes created after a user logon deviate from the established normal sequence?
  context: Adversarial actions can disrupt not only *what* processes run at startup, but also the *order* in which they run. This question proposes an advanced machine learning approach to model the normal sequence of post-logon process creations. A high reconstruction error from the model indicates that the observed sequence is abnormal and could be caused by a malicious Active Setup entry.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 1
  - Zeek conn.log
  - Process creation and user logon logs from all Windows endpoints, especially those of privileged users.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN LSTM autoencoder on sequences of benign post-logon process creations
      FOR each new logon session:
        FEED process sequence into trained model
        CALCULATE reconstruction_error
        IF reconstruction_error > threshold
          ALERT
- question: Is an Active Setup 'StubPath' being modified to execute a known auto-elevating binary with command-line arguments indicative of a UAC bypass?
  context: Adversaries abuse Active Setup's elevated execution context to trigger User Account Control (UAC) bypasses. This question looks for the setup phase of this attack by searching for 'StubPath' modifications that invoke known auto-elevating binaries (e.g., 'fodhelper.exe') with specific arguments or in conjunction with other changes known to be part of UAC bypass techniques.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry hives and process command-line logs on all Windows workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon Event 13 for 'StubPath' modifications AND Sysmon Event 1
      APPLY regex to find patterns like ('fodhelper.exe' and 'ms-settings') or ('cmstp.exe' and '.inf')
      ALERT on match
- question: Are auto-elevating binaries, launched via the Active Setup chain, being executed with unusually long or complex command-line arguments?
  context: UAC bypasses often require passing long, obfuscated, or complex commands to legitimate system binaries. This question aims to detect these anomalies by establishing a baseline for normal command-line length and entropy for these binaries. An execution traced back to Active Setup with command-line characteristics that far exceed the norm is a strong indicator of a bypass attempt.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry hives and process command-line logs on all Windows workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE command-line length and entropy for legitimate auto-elevating binaries
      MONITOR executions of these binaries from Active Setup chain
      IF command-line length or entropy > 99th percentile of baseline
        ALERT
- question: Can a machine learning model predict whether the use of an auto-elevating binary, initiated by Active Setup, is part of a UAC bypass attempt?
  context: To detect novel UAC bypass techniques, this question proposes using a supervised machine learning model. By training on a variety of features—such as the parent process, command-line content, and timing—the model can learn to distinguish between benign and malicious use of auto-elevating binaries, providing a more robust and forward-looking detection capability.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Registry hives and process command-line logs on all Windows workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each execution of auto-elevating binary from Active Setup:
        EXTRACT features (parent_process, args, timing, etc.)
        APPLY trained Gradient Boosting model
        ALERT if predicted class is 'malicious'
- question: Has a modification to an Active Setup 'StubPath' been followed shortly by the execution of an auto-elevating binary which then accesses the resource specified in the 'StubPath'?
  context: This question looks for a high-confidence chain of events that directly connects the persistence mechanism to the privilege escalation payload. By correlating the registry write, the process execution, and the subsequent file or registry access by that new process, analysts can confirm the entire attack sequence with very few false positives.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Correlated registry modification, process creation, and file/registry access logs from all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CREATE stateful rule:
      TRIGGER on Sysmon 13 (HKLM\...\StubPath set to 'resource_A')
      WITHIN 5 minutes, LOOK for Sysmon 1 (auto-elevating binary 'process_B' created)
      WITHIN 5 minutes, LOOK for Sysmon 11/13 (process_B accesses resource_A)
      ALERT if full sequence is observed
- question: Are there statistically improbable parent-child process relationships involving 'runonce.exe' and known auto-elevating binaries?
  context: System processes follow predictable execution flows. A UAC bypass via Active Setup creates an unusual parent-child relationship, such as 'runonce.exe' (the Active Setup executor) spawning a tool like 'fodhelper.exe'. This question aims to detect this anomaly by calculating the probability of process relationships and flagging those that are statistically rare.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Correlated registry modification, process creation, and file/registry access logs from all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE conditional probabilities for all parent-child process pairs in environment
      MONITOR for new process creations
      IF P(child_process | parent_process) is very low (e.g., P(fodhelper.exe | runonce.exe))
        ALERT
- question: Can graph-based analysis of user session activity identify anomalous subgraphs corresponding to privilege escalation via Active Setup?
  context: This question proposes viewing an entire user session as a graph of interconnected events (processes, files, registry keys). A Graph Neural Network (GNN) can learn the structure of normal session graphs. An attack, such as a logon leading to a specific registry write and an unusual process execution, will form an anomalous subgraph that the trained GNN can detect.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Correlated registry modification, process creation, and file/registry access logs from all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each user session, construct an event graph (nodes=entities, edges=interactions)
      APPLY pre-trained GNN model to the session graph
      FLAG sessions with anomalous subgraphs for investigation
- question: Is a process originating from an Active Setup execution subsequently performing high-privilege actions like creating a service, modifying a Run key, or writing to a system directory?
  context: The goal of privilege escalation is to perform actions that require elevated rights. This question focuses on the outcome by tracking the process spawned by Active Setup and its children. If any process in this lineage performs a sensitive action, such as creating a new service or writing to a protected directory, it is a strong indication that the Active Setup entry was malicious.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4657
  - Windows Event ID 7045
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - System service logs, process execution logs, and file/registry audit logs from critical system locations (e.g., C:\Windows\System32, HKLM\SYSTEM, HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run) on all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      IDENTIFY process_guid spawned by Active Setup
      CORRELATE process_guid with subsequent events
      IF process_guid generates Event 7045, or Sysmon 13 to a Run key, or Sysmon 11 to System32
        ALERT
- question: Do user sessions involving an Active Setup execution exhibit an anomalously high risk score based on the privileged actions performed?
  context: Rather than alerting on a single privileged action, this question proposes a risk-scoring model to quantify the overall maliciousness of a session. Different privileged actions are assigned different weights. The model aggregates the scores of all actions performed by a process spawned from Active Setup, allowing analysts to prioritize sessions that exceed a risk threshold and exhibit the most dangerous behavior.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4657
  - Windows Event ID 7045
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - System service logs, process execution logs, and file/registry audit logs from critical system locations (e.g., C:\Windows\System32, HKLM\SYSTEM, HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run) on all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE risk_weights for privileged actions (e.g., service_creation=10)
      FOR each process from Active Setup, track its actions and sum their weights
      BASELINE risk scores per user role
      ALERT if session_risk_score > 99th percentile for that role
- question: Does the sequence of system events generated by a process spawned via Active Setup appear anomalous when compared to normal process behaviors?
  context: Malicious processes often exhibit a sequence of behaviors (e.g., read registry, create file, launch service) that is different from benign processes. This question uses time-series anomaly detection to model the typical sequence of events for processes. A payload executed by Active Setup that generates an event sequence that deviates significantly from the learned norm will be flagged as anomalous.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4657
  - Windows Event ID 7045
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - System service logs, process execution logs, and file/registry audit logs from critical system locations (e.g., C:\Windows\System32, HKLM\SYSTEM, HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run) on all Windows endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process from Active Setup, create time-series of its event types
      APPLY trained Isolation Forest model to the time-series
      ALERT if sequence is classified as an anomaly