name: T1555.001: Keychain
id: 4e9a1b8c-3d2f-4e0a-8b1c-9d0a1b2c3d4e
description: This playbook focuses on detecting adversaries accessing or exfiltrating credentials from macOS Keychains. It addresses the threat of unauthorized network access resulting from compromised keychain data. Detections range from identifying the execution of known keychain theft tools (e.g., KeySteal), misuse of the built-in 'security' command-line utility, and anomalous API calls to keychain data by unsigned or suspicious applications. The playbook also extends to post-exploitation, looking for suspicious network authentications from unusual locations or subsequent lateral movement activities on Windows hosts, which could indicate the successful use of stolen credentials.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a known keychain theft tool or malware executing on a macOS endpoint?
  context: This question aims to detect the most direct evidence of keychain theft by identifying processes whose file hash or name matches a threat intelligence feed of known malicious tools like KeySteal or Chain-Reactor. A match is a high-confidence indicator of compromise.
  answer_sources:
  - Apple Endpoint Security Framework (ESF) process execution events
  - Sysmon for macOS Event ID 1
  - Antivirus/EDR detection logs
  - All corporate macOS endpoints, developer workstations
  - Threat intelligence feeds
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH process_execution_events | JOIN threat_intel_feed on process_hash or process_name | WHERE match_found
- question: Is a rare process accessing keychain-related files on macOS endpoints?
  context: This question looks for suspicious activity by identifying processes that are uncommon across the enterprise (low prevalence) but are observed accessing sensitive keychain database files. This can uncover novel or custom tools not yet present in threat intelligence feeds.
  answer_sources:
  - Apple Endpoint Security Framework (ESF) process execution events
  - Sysmon for macOS Event ID 1
  - Antivirus/EDR detection logs
  - All corporate macOS endpoints, developer workstations
  range: last 90 days
  queries:
  - technology: SIEM / EDR
    query: SEARCH process_execution_events AND file_access_events | WHERE file_path CONTAINS '~/Library/Keychains/login.keychain-db' | CALCULATE prevalence(process_hash) across all hosts | FILTER prevalence < 1%
- question: Does a process execution on a macOS endpoint exhibit characteristics of malicious keychain access tools based on a machine learning model?
  context: This question uses a predictive model to score process executions based on various features (e.g., parent process, code signature, file entropy). It aims to proactively identify potentially malicious activity that might not be caught by signature-based or simple statistical methods.
  answer_sources:
  - Apple Endpoint Security Framework (ESF) process execution events
  - Sysmon for macOS Event ID 1
  - Antivirus/EDR detection logs
  - All corporate macOS endpoints, developer workstations
  range: last 90 days
  queries:
  - technology: Machine Learning Platform
    query: INPUT process_metadata (parent_process, path, signature, entropy) | APPLY ML_model_keychain_theft | FILTER prediction_score > threshold
- question: Is the 'security' command-line utility being used to dump keychain credentials from an unusual parent process?
  context: This question focuses on detecting the misuse of a legitimate macOS utility. Adversaries often use `security dump-keychain` to steal credentials. By filtering for executions spawned by non-interactive or unexpected parent processes (e.g., a web browser), we can isolate suspicious activity from legitimate administrative use.
  answer_sources:
  - Apple Endpoint Security Framework (ESF) process execution events with command-line arguments
  - Sysmon for macOS Event ID 1
  - All corporate macOS endpoints, particularly those of privileged users
  range: last 90 days
  queries:
  - technology: SIEM / EDR
    query: SEARCH process_execution_events | WHERE process_name == 'security' AND command_line CONTAINS ('dump-keychain' OR 'find-generic-password') AND parent_process NOT IN (allowlist)
- question: Has there been an unusual spike in the execution of keychain dumping commands on any single macOS host?
  context: This question aims to find hosts exhibiting anomalous behavior. A sudden increase in the frequency of `security` dump commands on a single machine, compared to its own baseline, can indicate an adversary actively enumerating credentials on that specific system.
  answer_sources:
  - Apple Endpoint Security Framework (ESF) process execution events with command-line arguments
  - Sysmon for macOS Event ID 1
  - All corporate macOS endpoints, particularly those of privileged users
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH process_execution_events for 'security dump-keychain' | AGGREGATE count by host, hour | COMPARE current_count to 30_day_baseline | ALERT if current_count > 99th_percentile
- question: Is there a fleet-wide, anomalous spike in the execution of 'security dump-keychain' commands?
  context: This question looks for widespread campaigns. An anomaly detected in the aggregate count of dump commands across all macOS devices suggests a coordinated attack or a worm-like propagation, rather than an isolated incident.
  answer_sources:
  - Apple Endpoint Security Framework (ESF) process execution events with command-line arguments
  - Sysmon for macOS Event ID 1
  - All corporate macOS endpoints, particularly those of privileged users
  range: last 90 days
  queries:
  - technology: Machine Learning Platform
    query: SEARCH process_execution_events for 'security dump-keychain' | AGGREGATE count by time_interval | APPLY time_series_anomaly_model | ALERT on significant deviation
- question: Is an unsigned, non-standard, or non-allowlisted application making API calls to access keychain data?
  context: This question identifies suspicious processes that interact with the keychain programmatically. Legitimate applications that access the keychain are typically signed, run from standard locations, and can be allowlisted. This query filters for the outliers that meet multiple suspicious criteria.
  answer_sources:
  - macOS API Monitoring logs (e.g., from an EDR agent)
  - macOS Unified Log events for `Security` and `SecurityAgent` subsystems
  - All corporate macOS endpoints
  range: last 90 days
  queries:
  - technology: EDR
    query: SEARCH api_calls for 'SecItemCopyMatching' | FILTER process_is_unsigned AND process_path IN ('/tmp/', '~/Downloads/') AND process_name NOT IN (allowlist)
- question: Is an application that normally does not access the keychain suddenly attempting to do so?
  context: This question detects behavioral changes in applications. An application like a text editor suddenly making keychain API calls is highly anomalous and could indicate process injection or that the application itself has been compromised.
  answer_sources:
  - macOS API Monitoring logs (e.g., from an EDR agent)
  - macOS Unified Log events for `Security` and `SecurityAgent` subsystems
  - All corporate macOS endpoints
  range: last 90 days
  queries:
  - technology: SIEM / EDR
    query: SEARCH api_calls for keychain_access | CALCULATE prevalence(api_call) by application_name | ALERT where prevalence < 0.5%
- question: Does a process accessing the keychain have a high suspicion score from a machine learning model based on its attributes?
  context: This question uses a machine learning model to score the risk of each keychain access event. By considering a combination of features like parent process, name entropy, and network activity, it can detect sophisticated threats that might evade simpler rules.
  answer_sources:
  - macOS API Monitoring logs (e.g., from an EDR agent)
  - macOS Unified Log events for `Security` and `SecurityAgent` subsystems
  - All corporate macOS endpoints
  range: last 90 days
  queries:
  - technology: Machine Learning Platform
    query: INPUT process_metadata (parent, entropy, age, network_connections) for keychain_access_event | APPLY ML_classifier | ALERT where classification == 'suspicious'
- question: Did a successful network authentication for a macOS user originate from a known malicious IP address or TOR exit node?
  context: This question aims to detect the use of stolen credentials. If credentials exfiltrated from a macOS keychain are used to log in from an IP address associated with malicious infrastructure, it is a strong indicator of a successful compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek kerberos.log
  - VPN logs
  - Domain Controllers, Network Gateway, VPN Concentrators, RADIUS servers
  - Threat intelligence feeds
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH successful_logon_events (Type 3 or 10) | JOIN threat_intel_feed on source_ip | ALERT on match
- question: Has a successful network authentication for a macOS user occurred with multiple deviations from their normal behavior baseline?
  context: This question looks for impossible travel or uncharacteristic login patterns. By scoring deviations in geography, ISP, and time of day, it can flag high-risk logins that suggest an adversary is using stolen credentials from a different location or at an odd hour.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek kerberos.log
  - VPN logs
  - Domain Controllers, Network Gateway, VPN Concentrators, RADIUS servers
  range: last 90 days
  queries:
  - technology: SIEM / UEBA
    query: FOR each successful_login | COMPARE source_country, source_ASN, time_of_day to user_90_day_baseline | CALCULATE risk_score | ALERT if score > threshold
- question: Did a successful network authentication for a macOS user fall outside their normal clusters of login behavior?
  context: This question uses unsupervised machine learning to define a user's normal activity. A login that doesn't fit into any established cluster (e.g., "office network during work hours") is treated as an outlier and flagged for investigation, indicating potential credential abuse.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek kerberos.log
  - VPN logs
  - Domain Controllers, Network Gateway, VPN Concentrators, RADIUS servers
  range: last 90 days
  queries:
  - technology: Machine Learning Platform / UEBA
    query: INPUT historical_login_data (ASN, service, time) for user | APPLY DBSCAN_model | FOR new_login | CLASSIFY as in-cluster or outlier | ALERT on outlier
- question: Was a successful network logon from a macOS user's account immediately followed by the execution of lateral movement tools on the target host?
  context: This question links credential abuse to subsequent malicious action. The sequence of a network logon followed quickly by tools like PsExec or obfuscated PowerShell is a classic pattern for lateral movement, indicating an adversary is actively expanding their foothold.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows PowerShell Script Block Logging (Event ID 4104)
  - Zeek dce_rpc.log
  - Windows Servers, Windows Endpoints, Domain Controllers
  range: last 90 days
  queries:
  - technology: SIEM
    query: TRIGGER on successful_network_logon (Event 4624) | SEARCH for process_creation (Event 4688) on same_host within 5_minutes | WHERE process_name IN (psexec.exe, wmic.exe) OR (process_name == 'powershell.exe' AND command_line CONTAINS '-enc')
- question: Did a PowerShell script with unusually high entropy execute on a host shortly after a network logon from a macOS user's account?
  context: This question aims to detect obfuscated PowerShell payloads. High entropy often indicates packed or encoded scripts used by adversaries to evade signature-based detections. Correlating this with a recent logon helps pinpoint the initial point of execution for lateral movement.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows PowerShell Script Block Logging (Event ID 4104)
  - Zeek dce_rpc.log
  - Windows Servers, Windows Endpoints, Domain Controllers
  range: last 90 days
  queries:
  - technology: SIEM
    query: TRIGGER on successful_network_logon | SEARCH for PowerShell_script_block (Event 4104) on same_host within 10_minutes | CALCULATE entropy(script_content) | ALERT if entropy > baseline_mean + 2*std_dev
- question: Did the sequence of processes executed after a network logon from a macOS user's account have a low probability of being normal?
  context: This question models the 'normal' sequence of actions a user or system takes after logging in. A sequence that deviates significantly from this learned model (e.g., svchost.exe spawning cmd.exe which spawns powershell.exe) is flagged as a low-probability, high-suspicion event.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows PowerShell Script Block Logging (Event ID 4104)
  - Zeek dce_rpc.log
  - Windows Servers, Windows Endpoints, Domain Controllers
  range: last 90 days
  queries:
  - technology: Machine Learning Platform / UEBA
    query: INPUT sequence of process_creations post-login | APPLY HMM_sequence_model | CALCULATE sequence_probability | ALERT if probability < threshold