name: T1070.003: Clear Command History
id: f8a1b2c3-d4e5-4f6a-b7c8-d9e0f1a2b3c4
description: This playbook helps investigate whether an adversary is attempting to evade defenses by clearing command history. This involves detecting explicit commands to clear history files (e.g., 'history -c'), modifications to shell environment variables to disable history logging (e.g., 'HISTSIZE=0'), anomalous processes deleting or modifying history files (e.g., a non-shell process deleting .bash_history), or the act of clearing history immediately following a remote login.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation or script block events that contain explicit commands to clear command history?
    context: This question looks for literal command strings used to erase command-line history. Detecting these commands is a high-fidelity indicator that an adversary is actively trying to cover their tracks by removing evidence of their activity from shell history files.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek conn.log
      - Linux auditd logs
      - Syslog from network devices
      - Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts, ESXi Hosts, Network Switches and Routers
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH process_creation_logs OR script_block_logs
          WHERE command_line CONTAINS ('history -c', 'Clear-History', 'rm ~/.bash_history', 'rm ~/.zsh_history', 'del ConsoleHost_history.txt', 'cat /dev/null > ~/.bash_history', 'clear logging')
  - question: Is any user or host exhibiting an anomalously high frequency of command history clearing events compared to their baseline?
    context: This question aims to detect adversaries who may be repeatedly clearing history as part of their routine operations. By establishing a baseline of normal behavior (which is typically zero or very low), any significant spike (e.g., >3 standard deviations above the mean) can indicate malicious activity, even if the commands themselves are known.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek conn.log
      - Linux auditd logs
      - Syslog from network devices
      - Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts, ESXi Hosts, Network Switches and Routers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          CALCULATE 30-day rolling average and stddev of history-clearing commands per user/host.
          ALERT if current_day_count > (average + 3 * stddev) OR if host_count > 99th_percentile_of_all_hosts.
  - question: Can we detect novel or obfuscated command history clearing commands using a machine learning model?
    context: Adversaries may use obfuscation or unknown techniques to clear history, which bypasses simple string matching. This question involves using a supervised machine learning model to identify suspicious commands that are likely attempts to clear history, even if the exact command isn't in a known list.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek conn.log
      - Linux auditd logs
      - Syslog from network devices
      - Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts, ESXi Hosts, Network Switches and Routers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SCORE command_line_executions using a pre-trained classification model (e.g., Random Forest) with features like n-grams, parent process, and user.
          INVESTIGATE commands with a high probability score for history clearing.
  - question: Are there any commands being executed that attempt to disable history logging by modifying shell environment variables?
    context: This question focuses on another method of defense evasion where history is prevented from being recorded. This is done by looking for commands that set variables like 'HISTSIZE' to 0, 'HISTFILE' to '/dev/null', or use PowerShell options like 'HistorySaveStyle SaveNothing'.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Linux auditd logs
      - Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts, Linux/Unix Servers
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH process_creation_logs OR script_block_logs
          WHERE command_line MATCHES REGEX ('/HISTSIZE=0/i', '/unset HISTFILE/i', '/HISTFILE=\\/dev\\/null/i', '/HistorySaveStyle.*SaveNothing/i')
  - question: Are there any command-line executions with unusually high entropy that might indicate obfuscated attempts to disable history logging?
    context: Obfuscated commands often have higher entropy (randomness) than normal commands. This question involves calculating the entropy of command-line strings and flagging those that are significantly higher than a user's or process's normal baseline, especially if they contain keywords related to history.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Linux auditd logs
      - Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts, Linux/Unix Servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          CALCULATE Shannon entropy for command_lines per user and parent process.
          ALERT if entropy > (baseline_entropy + 3 * stddev) AND command_line CONTAINS ('history', 'HIST', 'PSReadline').
  - question: Is there an anomalous frequency of commands that modify critical shell environment variables on any given host?
    context: This question uses time-series analysis to model the normal frequency of modifications to shell environment variables. An alert is generated if the observed frequency deviates significantly from the model's forecast, which could indicate a malicious actor systematically disabling security or logging features.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Linux auditd logs
      - Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts, Linux/Unix Servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          MONITOR frequency of shell environment variable modifications (e.g., 'HISTSIZE', 'PSReadlineOptions') per host using a time-series model (e.g., ARIMA).
          ALERT on significant deviation from forecast.
  - question: Are known shell history files being deleted or modified by unexpected processes?
    context: Shell history files should typically only be accessed by the shell process itself. This question aims to detect when a non-standard process (e.g., 'winword.exe') or a process with an anomalous parent (e.g., 'services.exe') modifies or deletes files like '.bash_history', which requires file system auditing to be enabled.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - Sysmon Event ID 23
      - Sysmon Event ID 26
      - Linux auditd logs
      - User home directories on file servers, Local user profiles on endpoints and servers, Administrator Bastion Hosts, ESXi Hosts, Linux/Unix Servers
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH file_audit_logs
          WHERE target_file IN ('.bash_history', 'ConsoleHost_history.txt', '/var/log/shell.log') AND (event_type IS 'delete' OR event_type IS 'write')
          AND process_name NOT IN ('bash', 'powershell.exe', 'zsh', 'sh', 'trusted_admin_tool.exe')
  - question: Is a process with a rare or anomalous parent-child relationship modifying or deleting a history file?
    context: Malicious activity often creates unusual process lineages (e.g., Microsoft Word spawning PowerShell). This question involves analyzing parent-child process relationships. If a history file is modified by a process that was spawned by an unusual parent, it is highly suspicious and should be investigated.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - Sysmon Event ID 23
      - Sysmon Event ID 26
      - Linux auditd logs
      - User home directories on file servers, Local user profiles on endpoints and servers, Administrator Bastion Hosts, ESXi Hosts, Linux/Unix Servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          For events modifying history files, LOOKUP parent-child process relationship probability from a pre-built graph.
          ALERT if probability < threshold (e.g., 0.01%).
  - question: Can we use a machine learning model to identify anomalous file modification or deletion events related to history files?
    context: This question proposes using an anomaly detection model (e.g., One-Class SVM) that learns what 'normal' interactions with history files look like based on features like process name, user, and time of day. Any activity that falls outside this learned boundary is flagged as a potential threat.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - Sysmon Event ID 23
      - Sysmon Event ID 26
      - Linux auditd logs
      - User home directories on file servers, Local user profiles on endpoints and servers, Administrator Bastion Hosts, ESXi Hosts, Linux/Unix Servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SCORE file modification/deletion events on history files using a One-Class SVM model.
          INVESTIGATE events classified as anomalies.
  - question: Is command history being cleared immediately following a remote login to a host?
    context: A common pattern for attackers is to log in remotely, perform actions, and then immediately clear their tracks. This question involves creating a correlation rule that looks for a history-clearing event occurring within a short time window (e.g., 5 minutes) after a successful remote login (RDP, SSH) by the same user on the same host.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek conn.log
      - Linux auditd logs
      - Internet-facing servers, VPN gateways, Domain Controllers, Administrator Bastion Hosts, Network perimeter firewalls
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          CORRELATE (successful_remote_login_events with Logon Type 3 or 10) with (history_clearing_events)
          ON (user, destination_host)
          WHERE time_difference < 5 minutes.
  - question: Is command history being cleared after an anomalous remote login?
    context: This question adds more context to the previous one by first identifying if the remote login itself is anomalous (e.g., from a new country, at an unusual time). A history-clearing event following a high-risk login is a much stronger indicator of malicious activity than one following a routine login.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek conn.log
      - Linux auditd logs
      - Internet-facing servers, VPN gateways, Domain Controllers, Administrator Bastion Hosts, Network perimeter firewalls
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SCORE remote logins for risk based on anomalous features (source geo, time, logon type).
          CORRELATE logins with risk_score > 95th_percentile with subsequent history-clearing events within 10 minutes.
  - question: Does a user session contain a low-probability sequence of events that includes history clearing?
    context: This question uses sequence analysis to model entire user sessions. The model learns common, benign sequences of actions. An alert is triggered if a rare sequence is detected, such as [Anomalous Login -> History Deletion -> Network Connection to Rare ASN], which strongly indicates a malicious kill chain.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek conn.log
      - Linux auditd logs
      - Internet-facing servers, VPN gateways, Domain Controllers, Administrator Bastion Hosts, Network perimeter firewalls
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          ANALYZE user session event sequences using a sequence analysis model (e.g., HMM).
          ALERT on low-probability sequences that include a history clearing event.