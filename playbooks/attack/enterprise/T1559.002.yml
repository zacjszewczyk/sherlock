name: T1559.002: Dynamic Data Exchange
id: f3b1b3a0-6b6a-4b0a-9e1e-2a2b2c2d2e2f
description: This playbook helps investigate whether an adversary is executing commands or payloads using Dynamic Data Exchange (DDE). This technique involves embedding commands in Office files that are executed when the file is opened. Indicators include the presence of DDE syntax in files transferred over the network, Office applications spawning command-line interpreters like cmd.exe or powershell.exe, a rapid sequence of file creation followed by process creation and network activity, and anomalous network connections originating from Office processes.
type: technique
related:
- TA0002: Execution
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are files transferred over the network being scanned for specific DDE syntax to identify malicious documents?
  context: This question seeks to identify malicious documents containing DDE payloads by inspecting file content. Adversaries embed keywords like 'DDEAUTO' or formulas starting with '=cmd|' into Office files. Proactively scanning for these patterns at network ingress points or on file shares can detect and neutralize the threat before a user opens the malicious file and triggers the payload execution.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek smb_files.log
  - Zeek smtp.log
  - Network egress/ingress points (e.g., internet gateway, email gateway)
  - internal file servers
  - cloud storage repositories (e.g., SharePoint, OneDrive) accessible by end-users.
  range: last 90 days
  queries:
  - technology: File Content Scanner / YARA
    query: SCAN file_streams WHERE file_type IN (docx, xlsx, csv, rtf) FOR regex('DDEAUTO|\\sDDE\\s|=cmd\\||=powershell\\||=mshta\\|') | ALERT (file_hash, src_ip, dst_ip, user)
- question: Is the entropy of CSV file cells being analyzed to detect obfuscated DDE formulas?
  context: This question addresses the detection of obfuscated DDE payloads, which may not be caught by simple keyword matching. Adversaries can hide malicious code within CSV files, leading to unusually high character randomness (entropy) in a specific cell. By establishing a baseline for normal entropy in legitimate CSVs, analysts can flag files with anomalously high-entropy cells as suspicious, potentially indicating obfuscated DDE commands.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek smb_files.log
  - Zeek smtp.log
  - Network egress/ingress points (e.g., internet gateway, email gateway)
  - internal file servers
  - cloud storage repositories (e.g., SharePoint, OneDrive) accessible by end-users.
  range: last 90 days
  queries:
  - technology: Data Analytics / Scripting
    query: FOR each csv_file, PARSE cells; CALCULATE entropy for each cell_content; IF any cell_entropy > baseline_99.5_percentile THEN ALERT (file_name, cell_content)
- question: Is a machine learning model being used to classify Office documents as benign or malicious based on DDE-related features?
  context: This question explores a more advanced, model-based approach to detecting DDE. A supervised classification model can learn complex patterns from various features, including keyword frequency, file metadata, and structural properties. This allows for the detection of novel or sophisticated DDE-based attacks that might evade simpler rule-based methods, providing a higher-fidelity signal by scoring documents based on their likelihood of being malicious.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek smb_files.log
  - Zeek smtp.log
  - Network egress/ingress points (e.g., internet gateway, email gateway)
  - internal file servers
  - cloud storage repositories (e.g., SharePoint, OneDrive) accessible by end-users.
  range: last 90 days
  queries:
  - technology: Machine Learning Platform
    query: FOR each office_document, EXTRACT features (keyword_freq, metadata, structure, ngrams); SCORE with classification_model; IF score > 0.9 THEN ALERT (file_name, score)
- question: Are there alerts for instances where Microsoft Office applications spawn command-line interpreters or scripting hosts?
  context: This question targets a direct indicator of DDE execution, a legitimate Office application (e.g., WINWORD.EXE) launching a child process like cmd.exe or powershell.exe. This behavior is highly irregular for normal user activity and is a classic sign that an embedded command within the document has been executed. A high-severity alert on this specific parent-child relationship is crucial for rapid incident response.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - terminal servers (e.g., Citrix)
  - Microsoft Office 365 servers
  - application servers.
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH process_creation_events WHERE parent_process IN ('WINWORD.EXE', 'EXCEL.EXE', 'POWERPNT.EXE', 'OUTLOOK.EXE') AND child_process IN ('cmd.exe', 'powershell.exe', 'mshta.exe', 'rundll32.exe', 'wscript.exe', 'cscript.exe') | ALERT (hostname, user, parent_process, child_process, command_line)
- question: Are statistically rare parent-child process relationships involving Office applications being identified and flagged?
  context: This question aims to find unusual DDE execution by looking for outliers in process creation behavior. While some legitimate plugins or macros might cause Office to spawn other processes, DDE-based attacks often create parent-child pairings that are statistically rare across the entire enterprise. By baselining all normal process relationships, analysts can automatically flag any new, low-probability pairing as suspicious, even if the child process isn't a standard command interpreter.
  answer_sources:
  - Sysmon Event ID 1
  - User workstations
  - terminal servers (e.g., Citrix)
  - Microsoft Office 365 servers
  - application servers.
  range: last 90 days
  queries:
  - technology: SIEM / Data Analytics
    query: COMPARE new_process_pair (Parent=OfficeApp, Child=X) AGAINST historical_frequency_table; IF probability(OfficeApp -> X) < 5th_percentile THEN ALERT (hostname, user, parent_process, child_process)
- question: Is an anomaly detection model used to score process creation events from Office applications based on features like command-line entropy?
  context: This question proposes using an unsupervised model to detect abnormal process creation events without relying on predefined rules. An Isolation Forest or similar model can learn what 'normal' looks like based on features like the parent/child names, user context, and characteristics of the command line itself (e.g., length, entropy). This method is effective at finding obfuscated or novel DDE attacks that use unusual command-line arguments to evade signature-based detections.
  answer_sources:
  - Sysmon Event ID 1
  - User workstations
  - terminal servers (e.g., Citrix)
  - Microsoft Office 365 servers
  - application servers.
  range: last 90 days
  queries:
  - technology: Machine Learning Platform
    query: FOR each office_process_creation_event, EXTRACT features (parent, child, user, cmd_line_length, cmd_line_entropy); SCORE with isolation_forest_model; IF anomaly_score is high THEN ALERT (event_details)
- question: Is a correlation rule in place to detect the sequence of a malicious Office file creation, followed by a suspicious process creation, and then external network activity?
  context: This question addresses the full DDE attack chain on an endpoint. A typical attack involves a user receiving a file, the file being opened (creating it on disk), the DDE payload executing (spawning a new process), and that new process calling out to a command-and-control server. Correlating these three events (file write, process creation, network connection) from the same host in a short time window provides a very high-confidence indicator of a successful compromise.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - User workstations
  - DMZ web servers
  - email servers
  - the network perimeter.
  range: last 90 days
  queries:
  - technology: SIEM
    query: CORRELATE events on same host within 60s (1. Sysmon_EID11 for Office file) FOLLOWED BY (2. Sysmon_EID1 where Parent=OfficeApp, Child=Shell) FOLLOWED BY (3. Sysmon_EID3 where ProcessId=Child from #2 AND DstIP is not private) | ALERT (hostname, user, full_event_chain)
- question: Are alerts for suspicious DDE-related event chains being automatically enriched with threat intelligence and risk-scored for prioritization?
  context: This question focuses on making alerts more actionable for analysts. Once a suspicious event chain is detected, automatically enriching the destination IP with threat intelligence (is it a known C2 server?) and geolocation data, then calculating a risk score based on factors like time of day or destination ASN, helps analysts quickly prioritize the most critical threats. This moves beyond simple detection to automated triage.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Threat Intelligence Feeds
  - User workstations
  - DMZ web servers
  - email servers
  - the network perimeter.
  range: last 90 days
  queries:
  - technology: SOAR / SIEM
    query: ON correlated_alert, GET DstIP; ENRICH with TI_feed, GeoIP; CALCULATE risk_score (weights for country, ASN, time); IF risk_score > 20 THEN ESCALATE to Tier2
- question: Is a sequence analysis model, like a Hidden Markov Model, being used to identify anomalous chains of user and system events?
  context: This question describes a sophisticated behavioral analytics approach. By modeling the normal sequences of events (file, process, network) for benign user activity, a Hidden Markov Model can calculate the probability of any new observed sequence. An attack chain involving DDE will likely represent a low-probability sequence that deviates from learned normal behavior, allowing it to be flagged as anomalous even if individual events in the chain do not appear malicious on their own.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - User workstations
  - DMZ web servers
  - email servers
  - the network perimeter.
  range: last 90 days
  queries:
  - technology: Machine Learning / Behavioral Analytics Platform
    query: FOR each sequence_of_events (file, process, network) on host, CALCULATE probability using HMM_model; IF probability < 0.01_percentile THEN ALERT (hostname, user, event_sequence)
- question: Are alerts generated when a Microsoft Office application initiates a network connection over a non-standard port?
  context: This question targets a simple but effective indicator of compromise. Office applications typically communicate over standard web ports (80, 443) for updates or cloud services. A connection to a non-standard port (e.g., 4444, 8080) from WINWORD.EXE is highly suspicious and could indicate a direct C2 channel established by a DDE payload, bypassing the need to spawn a separate process. This rule must include exceptions for known good corporate services to reduce false positives.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 1
  - Zeek conn.log
  - All endpoints and servers running Microsoft Office
  - the network gateway.
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH network_connection_events WHERE process_name IN ('WINWORD.EXE', 'EXCEL.EXE') AND destination_port NOT IN (80, 443, 53) AND destination_ip NOT IN (corp_safe_list) | ALERT (hostname, process_name, destination_ip, destination_port)
- question: Is the network behavior of Office applications being baselined to detect deviations in data volume, destination ports, or subnets?
  context: This question focuses on detecting subtle anomalies in network traffic from Office processes. By creating a multi-dimensional profile of what is 'normal' for each Office application (e.g., typical destination ports, average data sent/received), analysts can detect deviations that might signal malicious activity. For example, a DDE payload exfiltrating a large file would cause a spike in data volume that would be flagged as an anomaly against the established baseline.
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - All endpoints and servers running Microsoft Office
  - the network gateway.
  range: last 90 days
  queries:
  - technology: UEBA / Data Analytics
    query: FOR each new_office_app_connection, COMPARE connection_features (port, data_volume, subnet) TO historical_baseline; IF data_volume > 4_std_dev_from_mean OR port NOT IN baseline_port_set THEN ALERT (event_details)
- question: Is an unsupervised clustering algorithm being used to identify anomalous network connections from Office applications?
  context: This question proposes using clustering (e.g., DBSCAN) to automatically group similar, legitimate network connections from Office apps into clusters. Any connection that does not fit into an existing cluster is labeled as 'noise' or an outlier. These outliers are prime candidates for investigation, as they represent novel network behavior that has not been seen before. This approach can uncover new attack patterns without prior knowledge or labeling.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 1
  - Zeek conn.log
  - All endpoints and servers running Microsoft Office
  - the network gateway.
  range: last 90 days
  queries:
  - technology: Machine Learning Platform
    query: INPUT network_connections from Office apps TO DBSCAN_model; FOR each event classified as 'noise', ALERT (hostname, user, process_name, destination_ip, destination_port)