name: T1556.003: Pluggable Authentication Modules
id: 0c2f8d1a-4b9e-4f7c-8a3d-1e5b6f0a9b2c
description: This playbook focuses on detecting malicious activity resulting from the compromise and modification of Pluggable Authentication Modules (PAM) on Linux systems. Since a compromised PAM module can be used to steal credentials, bypass security controls, or establish persistence, this playbook primarily identifies the downstream effects of such a compromise. This includes observing anomalous authentication patterns against Windows environments using stolen credentials, detecting network traffic indicative of command and control or data exfiltration originating from Linux hosts, and identifying behaviors like MFA bypass or network policy violations that suggest a compromised authentication chain.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are successful Windows authentications occurring with usernames known to be hardcoded in PAM backdoor malware?
  context: Certain malware variants that modify PAM modules for persistence use hardcoded, non-obvious usernames and passwords as a backdoor. A successful authentication using one of these known usernames is a high-fidelity indicator that a Linux host with a compromised PAM module is accessing the Windows environment.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints, Identity and Access Management Systems
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH Windows_Event_ID=4624 AND username IN (pam_backdoor_watchlist) | ALERT on results
- question: Is there a successful login using a rare username from a source IP with a low historical login count for that user?
  context: Adversaries may use credentials stolen via a PAM module from a new location. This question helps identify anomalous successful logins where the username itself is rarely seen, and the source IP address has little to no history of being used by that account, suggesting a potential compromise.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints, Identity and Access Management Systems
  range: last 90 days
  queries:
  - technology: UBA
    query: FIND successful logins WHERE username_frequency < 1st_percentile AND source_ip_history_for_user < 5_logins_in_90_days
- question: Is there an anomalous spike in login failures followed by a success from a single source IP, suggesting credential testing?
  context: After obtaining credentials via a compromised PAM module, an attacker might test them. This often manifests as a burst of failed login attempts (Event ID 4625) followed by a successful one (Event ID 4624) from their host. Detecting a sharp, unusual spike in this pattern can indicate the testing of a backdoor.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints, Identity and Access Management Systems
  range: last 90 days
  queries:
  - technology: ML/Anomaly Detection
    query: MODEL login_failure_then_success_volume per source_ip | ALERT on anomalous spikes
- question: Is a Linux host IP performing successful Windows logins at highly regular, machine-like intervals?
  context: Automated persistence mechanisms, using credentials stolen from a compromised PAM module, often exhibit machine-like regularity. This question looks for a sequence of successful Windows logins from a Linux server where the time between each login is almost exactly the same, which is highly indicative of a scripted backdoor or beacon.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors monitoring Linux server subnets
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH Windows_Event_ID=4624 AND source_ip IN (linux_server_list) | GROUPBY source_ip, destination_host | FIND sequences of 5+ events WHERE time_delta between 298s and 302s
- question: Does the timing of successful Windows authentications from a single source IP show an abnormally low standard deviation or low entropy, indicating automated activity?
  context: Human-driven activity is typically random, while automated scripts are regular. This question analyzes the time between successful logins from a single source. A very low standard deviation or low entropy in these time deltas suggests a non-random, scheduled process, such as a persistence script using stolen credentials.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors monitoring Linux server subnets
  range: last 90 days
  queries:
  - technology: SIEM/Analytics
    query: For each source_ip, CALCULATE stdev(time_delta(successful_logins)) over 1_hour_windows | ALERT where stdev < 5_seconds for 5+ logins
- question: Are we observing a pattern of highly periodic login spikes from Linux subnets that deviates from forecasted models?
  context: This question uses predictive modeling to establish a baseline of expected login volume and timing from Linux subnets. An observed pattern of highly regular, repeating spikes in login activity that the model did not predict can reveal a hidden, automated persistence mechanism operating across one or more compromised hosts.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors monitoring Linux server subnets
  range: last 90 days
  queries:
  - technology: ML/Time-Series Forecasting
    query: FORECAST login_volume from linux_subnets to windows_hosts | ALERT on observed periodic patterns that are significant deviations from forecast
- question: Are user accounts primarily associated with Linux systems logging into Windows from unusual geolocations and at off-hours?
  context: When credentials of a Linux-centric user are stolen via a compromised PAM module, they may be used by an attacker from a geographically distinct location and outside the user's normal working hours. This combination of anomalies for a user who rarely uses Windows is a strong indicator of account compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, Windows Servers, VPN Concentrators, DNS Servers, Internet Gateway
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH Windows_Event_ID=4624 AND user IN (linux_primary_users) AND logon_hour NOT BETWEEN 0500-2200 AND source_country NOT IN (approved_countries)
- question: Do recent Windows logins for a user have a high aggregate risk score based on deviations from their baseline activity (e.g., rare ASN, logon type, off-hours)?
  context: A single anomaly might be dismissed, but multiple simultaneous anomalies are highly suspicious. This question involves building a baseline of normal login behavior for each user and then scoring new logins based on how much they deviate across multiple factors. A login with a high cumulative risk score suggests a potential compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, Windows Servers, VPN Concentrators, DNS Servers, Internet Gateway
  range: last 90 days
  queries:
  - technology: UBA
    query: For each user_login, CALCULATE risk_score (rare_asn_points + rare_logon_type_points + off_hours_points) | ALERT if score > 95th_percentile_for_user_population
- question: Are there user logins that are classified as outliers or noise points when clustered with the user's normal historical login behavior?
  context: This question uses unsupervised machine learning to group a user's logins into clusters of normal behavior based on features like location, time, and target system. Any login that does not fit into an established cluster is considered an outlier and represents a significant deviation that warrants investigation for account compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, Windows Servers, VPN Concentrators, DNS Servers, Internet Gateway
  range: last 90 days
  queries:
  - technology: ML/Clustering
    query: For each user, CLUSTER historical_logins using features (geolocation, time, logon_type) | ALERT on new logins classified as noise/outliers
- question: Has a user account logged in from two distinct geolocations in a timeframe that would be physically impossible?
  context: This is a classic detection for simultaneous credential use. If an account logs in from New York and then from London five minutes later, it indicates that the credentials have been compromised and are being used by two separate entities, one of whom is likely an attacker leveraging credentials stolen from a central source like a compromised Linux jump box.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
  range: last 90 days
  queries:
  - technology: SIEM
    query: For each successful_login, CACHE user, time, location | On next login for same user, CALCULATE travel_speed | ALERT if travel_speed > 1000_kmh
- question: Are any user accounts triggering impossible travel alerts at a persistently high frequency compared to their peers?
  context: A single impossible travel alert could be a false positive (e.g., rapid VPN switching). However, an account that repeatedly triggers these alerts suggests a persistent, ongoing abuse of its credentials from multiple locations, which is a stronger signal of a significant compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
  range: last 90 days
  queries:
  - technology: Analytics
    query: COUNT impossible_travel_alerts by user over 30_days | ALERT on users in top 5th_percentile
- question: Can we classify impossible travel events as malicious based on features like ISP consistency and post-login behavior?
  context: To reduce false positives from benign causes like VPNs, this question aims to enrich impossible travel events. A machine learning model can be trained to distinguish malicious events by looking at features like whether the source ISP is consistent with a data center (malicious) versus a residential provider (less so), and what actions the user took immediately after logging in.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
  range: last 90 days
  queries:
  - technology: ML/Classification
    query: PREDICT is_malicious for impossible_travel_events using features (source_isp, post_login_actions) | ALERT on high_probability_malicious
- question: Following an 'Impossible Travel' or 'Anomalous Login' alert, did the user execute suspicious reconnaissance utilities (e.g., whoami, net.exe) on the target host?
  context: An attacker's first step after gaining access is often to perform local reconnaissance to understand the system and network. This question correlates a high-risk login event with the immediate execution of common recon tools, which strongly indicates that the anomalous login was malicious.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
  range: last 90 days
  queries:
  - technology: SIEM
    query: TRIGGER on 'Impossible Travel' alert | SEARCH for process_executions by same user on target_host within 5_minutes WHERE process_name IN (recon_tool_watchlist)
- question: Following a high-risk login, did the user execute processes that are rare for that specific user on that specific host?
  context: Every user has a pattern of normal activity on the systems they access. This question establishes a baseline of common processes for each user-host pair. After a suspicious login, the execution of a process that is highly unusual for that user on that machine is a strong indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
  range: last 90 days
  queries:
  - technology: UBA
    query: TRIGGER on high_risk_login | ANALYZE subsequent process_executions | ALERT if process_frequency for user-host pair < 5th_percentile
- question: Did a user's post-login activity sequence have a very low probability when compared to a model of their normal behavior?
  context: Beyond single actions, attackers follow a sequence of steps (the "grammar" of an attack). This question uses a model to learn the common sequences of actions a user performs after logging in. A session where the sequence of activities is highly improbable according to the model suggests a deviation from normal user behavior and a potential compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
  range: last 90 days
  queries:
  - technology: ML/Sequence Analysis
    query: MODEL user post-login action sequences | For new sessions, CALCULATE probability_of_sequence | ALERT on very low probability sequences
- question: Is a Linux host communicating with external IPs, domains, or JA3/JA3S hashes known to be C2 infrastructure for PAM-modifying malware?
  context: Malware that modifies PAM modules often needs to communicate with a command-and-control (C2) server. This question uses threat intelligence to check if any Linux hosts are making network connections to destinations known to be associated with this specific type of malware, which is a direct indicator of compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Internet Gateway, Core network switches, DNS resolvers, Linux server subnets
  range: last 90 days
  queries:
  - technology: SIEM/Threat Intel
    query: SEARCH network_logs from linux_hosts WHERE destination_ip OR destination_domain OR ja3_hash IN (pam_malware_c2_intel)
- question: Is a Linux server communicating with an external destination that is exceptionally rare across the enterprise?
  context: Adversary infrastructure is often unique and not widely used by legitimate services. This question identifies when a Linux server connects to a destination IP or domain that very few, if any, other hosts in the organization have ever contacted. This rarity makes the connection suspicious and worthy of investigation for potential C2 traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Internet Gateway, Core network switches, DNS resolvers, Linux server subnets
  range: last 90 days
  queries:
  - technology: Analytics
    query: For connections from linux_servers, CALCULATE frequency of destination_ip across enterprise | ALERT if frequency < 1st_percentile
- question: Does network traffic from a Linux host exhibit C2-like characteristics, such as high-entropy DNS queries or long-lived connections with heartbeat patterns?
  context: Even without known threat intelligence, C2 traffic has common characteristics. This question uses a machine learning model to find traffic patterns like long-running connections with small, periodic data transfers (heartbeats) or DNS queries for random-looking domains, which are hallmarks of C2 channels.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Internet Gateway, Core network switches, DNS resolvers, Linux server subnets
  range: last 90 days
  queries:
  - technology: ML/Classification
    query: SCORE network connections from linux_hosts for C2-like behavior using features (duration, byte_patterns, dns_entropy) | ALERT on high scores
- question: Are there successful RADIUS-based Windows logins that lack a corresponding successful MFA event for the same user within a short time window?
  context: A key goal of modifying PAM on a Linux-based RADIUS client (like a VPN server) is to bypass MFA. This question directly checks for this bypass by correlating successful Windows logins from a RADIUS server with MFA logs. A successful login without a preceding successful MFA event is a critical indicator of a defense evasion.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms, VPN Concentrators
  range: last 90 days
  queries:
  - technology: SIEM
    query: For each successful_RADIUS_login, SEARCH for successful_MFA_log for same_user within last 3_minutes | ALERT if no MFA log is found
- question: Does a specific user or RADIUS client (e.g., Linux VPN server) show a statistically significant lower ratio of successful MFA events to successful logins compared to the baseline?
  context: A systematic MFA bypass will create a statistical anomaly. This question calculates the normal ratio of MFA successes to logins for all users and clients. A user or a specific Linux VPN server whose ratio is a significant outlier (much lower than average) may be subject to a persistent MFA bypass mechanism.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms, VPN Concentrators
  range: last 90 days
  queries:
  - technology: Analytics
    query: CALCULATE ratio (successful_mfa / successful_radius_logins) per user, per client | ALERT if ratio is >2 stdev below the mean
- question: Do any users fall into a behavioral cluster characterized by an anomalously low or non-existent MFA-to-login ratio?
  context: This question uses clustering to group users based on their authentication patterns. It can automatically identify a small group of users who behave differently from the norm, such as a group that consistently logs in without generating corresponding MFA events. These users are prime candidates for investigation.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms, VPN Concentrators
  range: last 90 days
  queries:
  - technology: ML/Clustering
    query: CLUSTER users based on (mfa_to_login_ratio, other_auth_features) | INVESTIGATE users in the 'low-ratio' or 'no-mfa' cluster
- question: Is there a successful Windows authentication session that violates established network segmentation policies (e.g., dev subnet to prod subnet)?
  context: An attacker with stolen credentials may try to pivot across network segments that should be separated. This question checks if a successful login creates a network connection that violates a predefined security policy (e.g., a host from the developer network authenticating to a production database server), suggesting a compromised credential is being used to bypass controls.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Internal network sensors, Domain Controllers, Critical Server VLANs, Network Taps
  range: last 90 days
  queries:
  - technology: SIEM
    query: JOIN successful_logins with network_connections | CHECK against network_segmentation_rules_lookup | ALERT on violations
- question: Are successful authentications occurring between source and destination subnets that rarely or have never communicated before?
  context: This question builds a graph of normal authentication pathways in the network. A successful authentication between two subnets that have historically never had authentication traffic between them represents a new, anomalous path. This could indicate an adversary using a compromised account to pivot to a new area of the network.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Internal network sensors, Domain Controllers, Critical Server VLANs, Network Taps
  range: last 90 days
  queries:
  - technology: Analytics
    query: For successful_authentications, CALCULATE frequency of source_subnet to destination_subnet path | ALERT if path_frequency < 1st_percentile
- question: Do graph analytics reveal new authentication paths (edges) being formed between previously disconnected network communities, suggesting a pivot?
  context: This question applies graph theory to model the network as communities of hosts that normally interact. A new authentication path that bridges two previously separate communities is a powerful indicator of a pivot. This could be an attacker on a compromised Linux host in one community using stolen credentials to access a server in another.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Internal network sensors, Domain Controllers, Critical Server VLANs, Network Taps
  range: last 90 days
  queries:
  - technology: ML/Graph Analytics
    query: MODEL authentication_network_graph and IDENTIFY communities | ALERT on new edges that connect two previously separate communities
- question: Is a source IP generating a series of failed logins with non-password-related error codes (e.g., account disabled) immediately followed by a successful login?
  context: Before using a valuable stolen credential, an attacker may probe the environment to understand account policies. This behavior looks for an attacker testing various accounts and receiving failures due to policies (like disabled account or wrong logon hours), and then, once they have gathered information, using a valid credential successfully.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS Servers, Edge Authentication Gateways
  range: last 90 days
  queries:
  - technology: SIEM
    query: DETECT sequence from one source_ip within 1_minute: (5+ failed_logins with status_code != 'bad_password') FOLLOWED BY (1 successful_login)
- question: Are any source IPs exhibiting a pattern of a sudden, volatile spike in their failed-to-successful login ratio followed by a successful login?
  context: This question looks for the statistical pattern of policy probing. A source IP that is behaving normally will have a relatively stable ratio of failed to successful logins. An attacker probing the network will cause a sudden, sharp spike in this ratio, which then drops to zero upon a successful login. This volatility is a strong anomaly.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS Servers, Edge Authentication Gateways
  range: last 90 days
  queries:
  - technology: Analytics
    query: For each source_ip, CALCULATE ratio(failed_logins / successful_logins) in 5_min_windows | ALERT if ratio_volatility > 98th_percentile
- question: Does a sequence of login events from a source IP match known malicious patterns, such as policy probing followed by successful access?
  context: Attackers often follow a predictable script. This question uses sequence matching algorithms to compare incoming streams of login events against a library of known malicious sequences. This can detect variations of an attack, like different forms of probing, that a rigid rule might miss.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS Servers, Edge Authentication Gateways
  range: last 90 days
  queries:
  - technology: ML/Sequence Analysis
    query: MATCH login_event_sequences from source_ips against known_attack_signatures | ALERT on match
- question: Is a multi-user Linux host connecting to an external destination known for credential theft malware exfiltration?
  context: Multi-user systems like jump boxes are prime targets for PAM modification to harvest credentials. This question checks if such a high-value Linux host is making network connections to an IP or domain known to be used by malware for exfiltrating stolen data, providing a direct link between the host and a potential credential theft campaign.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Internet Gateway, DNS Resolvers, Core network sensors monitoring Linux server subnets
  range: last 90 days
  queries:
  - technology: SIEM/Threat Intel
    query: SEARCH network_logs from multi_user_linux_hosts WHERE destination IN (credential_theft_exfil_intel)
- question: Has a Linux server shown a statistically significant spike in data uploaded to a rare external destination?
  context: Exfiltrating a large volume of harvested credentials will cause a noticeable spike in outbound data transfer. This question baselines the normal upload volume for each Linux server and alerts when a server sends an unusually large amount of data, especially if the destination is one it rarely communicates with.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Internet Gateway, DNS Resolvers, Core network sensors monitoring Linux server subnets
  range: last 90 days
  queries:
  - technology: Analytics
    query: For each linux_server, BASELINE daily_upload_bytes | ALERT if daily_upload > 4_stdev_above_average AND destination_is_rare
- question: Are Linux hosts making DNS queries to domains that are flagged by a DGA detection model and then establishing a connection?
  context: To hide their exfiltration points, malware often uses Domain Generation Algorithms (DGAs) to create random-looking domain names. This question identifies when a Linux host queries for a domain that a model flags as DGA-generated, which is a strong indicator of malware attempting to resolve its C2 or exfiltration server.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Internet Gateway, DNS Resolvers, Core network sensors monitoring Linux server subnets
  range: last 90 days
  queries:
  - technology: ML/DGA Detection
    query: ANALYZE dns_queries from linux_hosts with dga_model | ALERT if dga_detected=true AND a connection follows the query
- question: Are Linux servers making DNS queries with unusually long subdomains, especially for TXT or CNAME records?
  context: DNS tunneling is a common technique for exfiltrating data covertly. Attackers encode stolen data into long subdomains or the content of TXT record queries. This question looks for these specific DNS query patterns originating from Linux servers, which are highly indicative of data exfiltration.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - DNS Resolvers, Internet Gateway, Network Taps
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH dns_logs from linux_servers WHERE (record_type='TXT' OR record_type='CNAME') AND query_label_length > 100
- question: Are DNS queries from Linux hosts exhibiting high Shannon entropy or an anomalous ratio of non-A/AAAA record types, suggesting DNS tunneling?
  context: Encoded data looks random. This question statistically analyzes DNS queries to find those with high entropy (randomness), which suggests encoded data. It also looks for hosts making an unusually high number of query types used for tunneling (like TXT) compared to normal lookup queries (A/AAAA), flagging anomalous DNS usage patterns.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - DNS Resolvers, Internet Gateway, Network Taps
  range: last 90 days
  queries:
  - technology: Analytics
    query: For dns_queries from linux_hosts, CALCULATE shannon_entropy(query_label) | ALERT if entropy > 99th_percentile
- question: Does a machine learning model classify DNS traffic from a Linux host as probable exfiltration based on features like query length, entropy, and record type?
  context: This question uses a dedicated machine learning model trained to recognize the subtle characteristics of DNS tunneling. By analyzing a combination of features, it can provide a probabilistic score of whether a DNS session is being used for exfiltration, allowing for more accurate detection than single-indicator rules.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - DNS Resolvers, Internet Gateway, Network Taps
  range: last 90 days
  queries:
  - technology: ML/Classification
    query: SCORE dns_traffic from linux_hosts for exfiltration_probability | ALERT on high probability scores
- question: Is a single source IP generating a high volume of failed logins across many accounts, followed by at least one success, indicative of a password spray?
  context: After harvesting a list of usernames and a few common passwords from a compromised PAM module, an attacker may launch a password spray attack. This question identifies the classic pattern: one IP trying a single password against many different accounts, resulting in many failures and potentially a few successes.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS servers, Internet Gateway
  range: last 90 days
  queries:
  - technology: SIEM
    query: From a single source_ip within 1_hour, ALERT if count(failed_logins) > 100 AND distinct_count(username) > 20 AND count(successful_logins) >= 1
- question: Does a source IP have a statistically anomalous ratio of unique accounts attempted to successful logins?
  context: A password spray attack is characterized by a "wide and shallow" pattern. This question quantifies that pattern by calculating the ratio of unique accounts an IP attempts to authenticate as, versus how many it successfully authenticates. A very high ratio (e.g., 100 attempted accounts for 1 success) is a strong statistical indicator of a password spray.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS servers, Internet Gateway
  range: last 90 days
  queries:
  - technology: Analytics
    query: For each source_ip, CALCULATE ratio(distinct_accounts_attempted / successful_logins) in 10_min_windows | ALERT if ratio > 3_stdev_above_mean
- question: Does a source IP's login behavior fall into a cluster characterized by high-volume, low-success, multi-account attempts typical of password spraying?
  context: This question uses clustering to automatically group source IPs by their authentication behavior. It can identify a cluster of IPs that all exhibit the hallmarks of password spraying (many attempts, many targets, few successes), separating them from normal user behavior and brute-force attacks against a single account.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS servers, Internet Gateway
  range: last 90 days
  queries:
  - technology: ML/Clustering
    query: CLUSTER source_ips using features (total_attempts, success_ratio, unique_target_count) | INVESTIGATE IPs in the 'password_spray' cluster
- question: Following a successful password spray or impossible travel login, was the compromised account used to execute known credential dumping tools like Mimikatz?
  context: After gaining initial access with a stolen credential, a common next step for an attacker is to dump more credentials from the compromised machine. This question creates a high-confidence alert by correlating a successful high-risk login with the subsequent execution of a known credential dumping tool on the target system.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Domain Controllers, Member Servers, High-value user endpoints
  range: last 90 days
  queries:
  - technology: SIEM
    query: TRIGGER on 'Password Spray Success' alert | SEARCH for process_execution by same_user within 1_hour WHERE command_line CONTAINS 'sekurlsa::logonpasswords' OR (process_name='procdump.exe' AND command_line CONTAINS 'lsass.exe')
- question: Following a suspicious login, did the user account initiate a statistically rare parent-child process relationship on the target host?
  context: Normal software operations create predictable process trees. Attackers often create anomalous ones, for example, a web server process spawning a PowerShell shell. This question baselines normal parent-child process relationships and flags any new, rare relationship that appears after a high-risk login, suggesting malicious execution.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Domain Controllers, Member Servers, High-value user endpoints
  range: last 90 days
  queries:
  - technology: UBA
    query: TRIGGER on high_risk_login | For subsequent process_creations, CHECK rarity of (parent_process, child_process, user) triplet | ALERT on triplets in bottom 1st_percentile
- question: Does a process command line, executed by a user from a high-risk login, match a machine learning model for obfuscated credential dumping?
  context: Attackers heavily obfuscate their commands to evade simple signature matching. This question uses a machine learning model trained on command-line features (like character randomness, argument structure, and encoded strings) to detect suspicious commands, even when they are obfuscated, providing a more robust way to find post-compromise activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Domain Controllers, Member Servers, High-value user endpoints
  range: last 90 days
  queries:
  - technology: ML/Classification
    query: TRIGGER on high_risk_login | SCORE subsequent command_lines with obfuscation_model | ALERT on high scores for credential_dumping_class