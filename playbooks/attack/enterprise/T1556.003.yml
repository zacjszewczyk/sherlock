name: T1556.003: Pluggable Authentication Modules
id: 5a9e1b2c-8d3f-4e6a-9b1c-7f8d9e0a1b2c
description: This playbook focuses on detecting malicious modifications to Pluggable Authentication Modules (PAM) on Linux systems, a technique used by adversaries for persistence, defense evasion, and credential access. It outlines investigative methods to identify signs of compromise, such as the use of hardcoded backdoor credentials for Windows logins, automated beaconing from Linux hosts, MFA bypasses, impossible travel scenarios, network segmentation violations, and credential exfiltration. The playbook leverages various data sources including Windows event logs and Zeek network data to apply symbolic, statistical, and machine learning-based analytics for detection.
type: technique
related:
  - "TA0003: Persistence"
  - "TA0005: Defense Evasion"
  - "TA0006: Credential Access"
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there successful Windows authentications using usernames from a watchlist of known PAM backdoor credentials?
    context: This question tries to detect the direct use of hardcoded credentials embedded in specific Pluggable Authentication Module (PAM) malware variants. A successful Windows login (Event ID 4624) using a username from a watchlist of known backdoor accounts is a high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Identity and Access Management Systems
      - Threat intelligence feeds for known PAM backdoor credentials
      - Relevant Systems: Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints
    range: last 90 days
    queries:
      - Pseudocode: SEARCH successful authentications (Event ID 4624) WHERE username IN watchlist_pam_backdoor_users.
  - question: Has a successful login occurred from a rare username and a new source IP address?
    context: This question identifies anomalous logins that could indicate the use of a stolen or newly created backdoor credential. By baselining username login frequency and source IP history, it flags successful logins that are statistically rare, such as a username seen for the first time or one originating from an IP with no prior history for that user.
    answer_sources:
      - Windows Event ID 4624
      - Historical authentication logs
      - Relevant Systems: Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints, Identity and Access Management Systems
    range: last 90 days
    queries:
      - Pseudocode: FOR each successful login (Event ID 4624), CHECK if username_frequency < 1st_percentile AND source_ip_history_for_user < 5 logins.
  - question: Is there an anomalous spike in login failures followed immediately by a success from a single source IP?
    context: This question aims to detect credential guessing or the testing of a backdoor. An attacker might try several incorrect passwords or usernames before succeeding. A time-series model can detect a sharp, unusual spike in the volume of login failures (Event ID 4625) followed by a success (Event ID 4624) from one IP, which is a strong indicator of this activity.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Relevant Systems: Domain Controllers, Member Servers, VPN Concentrators, All Windows Endpoints
    range: last 90 days
    queries:
      - Pseudocode: MODEL login failure volume (Event ID 4625) per source_ip. ALERT on anomalous spike followed by a success (Event ID 4624).
  - question: Is a Linux server generating successful Windows logins at highly regular, machine-like intervals?
    context: This question looks for automated persistence mechanisms. A compromised PAM module on a Linux host might be used to maintain access by having a script or tool perform regular logins to a Windows host. A sequence of logins occurring at precise intervals (e.g., every 300 +/- 2 seconds) is indicative of automated beaconing, not human behavior.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Asset database to identify Linux servers
      - Relevant Systems: Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors
    range: last 90 days
    queries:
      - Pseudocode: FROM a known Linux IP, DETECT >= 5 successful logins (Event ID 4624) WHERE time_delta_between_logins is consistently between 298 and 302 seconds.
  - question: Is a source IP exhibiting login patterns with an unusually low deviation in timing?
    context: This question aims to statistically identify automated authentication activity. By analyzing the inter-arrival time of successful logins from a source IP, a very low standard deviation (e.g., under 5 seconds for a series of logins) suggests the timing is machine-generated. Similarly, low entropy in the minute-of-the-hour for logins indicates non-random, scheduled activity.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Relevant Systems: Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors
    range: last 90 days
    queries:
      - Pseudocode: CALCULATE stdev of inter-arrival times for successful logins per source_ip. ALERT if stdev < 5 seconds for 5+ logins.
  - question: Does the observed login volume from Linux subnets deviate significantly from forecasted patterns?
    context: This question uses predictive modeling to find hidden, automated login patterns. A time-series forecasting model can predict the normal volume and timing of logins from Linux subnets. If the observed login activity shows highly periodic spikes that consistently deviate from the forecast, it suggests a potential automated persistence mechanism that is not part of normal operations.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Network topology data for subnet identification
      - Relevant Systems: Domain Controllers, Authentication servers (NPS/RADIUS)
    range: last 90 days
    queries:
      - Pseudocode: FORECAST login volume from Linux subnets. ALERT where observed volume shows periodic spikes that deviate from the forecast.
  - question: Is a 'Linux-primary' user logging into Windows systems from an unapproved country or during off-hours?
    context: This question establishes a behavioral baseline for users who primarily work on Linux systems. A successful Windows login from such an account is already uncommon, but one that occurs from a foreign country not on an approved list and outside standard business hours is a significant anomaly that warrants investigation for credential compromise.
    answer_sources:
      - Windows Event ID 4624
      - Identity Management System with user role tags
      - Geolocation IP database
      - Relevant Systems: Domain Controllers, Windows Servers, VPN Concentrators
    range: last 90 days
    queries:
      - Pseudocode: FOR users tagged 'Linux-primary', ALERT on successful Windows login (Event ID 4624) IF (time is off-hours) AND (source_ip_country is not in approved_list).
  - question: Has a user's login activity generated an anomalously high risk score based on deviations from their normal profile?
    context: This question seeks to quantify the risk of a login by comparing it to the user's established behavioral baseline. By creating a profile of a user's common source ASNs, logon types, and hours, each new login can be scored based on its deviation from this norm. A login exceeding a high-percentile risk score indicates a significant departure from normal activity.
    answer_sources:
      - Windows Event ID 4624
      - Historical authentication logs
      - Geolocation and ASN databases
      - Relevant Systems: Domain Controllers, Windows Servers, VPN Concentrators
    range: last 90 days
    queries:
      - Pseudocode: FOR each user login, CALCULATE risk_score based on deviation from baseline (ASN, logon type, hour). ALERT if risk_score > 95th_percentile.
  - question: Is a user's login behavior an outlier when compared to their established activity clusters?
    context: This question uses unsupervised machine learning to identify anomalous logins without pre-defined rules. By clustering a user's historical logins based on features like geolocation, time, and logon type, we can define their "normal" behavior. Any new login that does not fit into an existing cluster (a 'noise' point) represents a significant anomaly that could indicate credential abuse.
    answer_sources:
      - Windows Event ID 4624
      - Historical authentication logs
      - Geolocation database
      - Relevant Systems: Domain Controllers, Windows Servers, VPN Concentrators
    range: last 90 days
    queries:
      - Pseudocode: CLUSTER user logins with DBSCAN. ALERT on any new login identified as a 'noise' point (not belonging to an established cluster).
  - question: Has a user account logged in from two locations in a time-frame that would be physically impossible?
    context: This question aims to detect 'Impossible Travel,' a classic indicator of simultaneous credential use. If a user successfully authenticates from one location and then again from a distant location in less time than it would take to travel between them (e.g., speed > 1000 km/h), it strongly suggests that the credentials have been compromised and are being used by multiple parties.
    answer_sources:
      - Windows Event ID 4624
      - Geolocation IP database
      - Relevant Systems: Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway
    range: last 90 days
    queries:
      - Pseudocode: ON successful login, CACHE user, time, location. ON next login for same user, CALCULATE speed = distance / time_diff. ALERT if speed > 1000.
  - question: Are certain users persistently triggering impossible travel alerts?
    context: This question differentiates between a one-off anomaly (like rapid VPN switching) and persistent, malicious activity. While a single impossible travel alert can be a false positive, a user who repeatedly triggers such alerts with high frequency is more likely to have their credentials compromised and actively used by an adversary.
    answer_sources:
      - Impossible Travel alerts
      - Historical authentication logs
      - Relevant Systems: Domain Controllers, VPN Concentrators, Cloud Authentication Services
    range: last 30 days
    queries:
      - Pseudocode: AGGREGATE impossible travel alerts by user. IDENTIFY users with alert frequency in top 5th percentile.
  - question: Can machine learning distinguish between benign and malicious impossible travel events?
    context: This question seeks to reduce false positives from impossible travel detection. A classifier can be trained on features like ISP/ASN consistency, post-login behavior, and time of day to learn the difference between benign events (e.g., a user switching between corporate VPNs) and malicious ones (e.g., logins from two distinct, non-corporate networks).
    answer_sources:
      - Windows Event ID 4624
      - Geolocation and ASN databases
      - Post-login process and network data
      - Relevant Systems: Domain Controllers, VPN Concentrators, Cloud Authentication Services
    range: last 90 days
    queries:
      - Pseudocode: TRAIN classifier on impossible travel events using features (ISP, ASN, post-login activity). PREDICT if new events are malicious.
  - question: Did a suspicious login event immediately precede the execution of known reconnaissance tools?
    context: This question correlates a high-risk login with immediate post-compromise activity. An attacker who gains access via a stolen credential will often perform local reconnaissance. This query looks for a direct link between an 'Impossible Travel' or 'Anomalous Login' alert and the execution of tools like `whoami.exe` or `net.exe` on the target host.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688 (Process Creation)
      - Custom alert feeds (Impossible Travel, Anomalous Login)
      - Relevant Systems: Domain Controllers, Member Servers, High-value user endpoints
    range: last 90 days
    queries:
      - Pseudocode: IF 'Anomalous Login' alert for user, THEN SEARCH for process execution (Event ID 4688) by same user on target host within 5 minutes for suspicious utilities.
  - question: Following a high-risk login, did the user execute a process that is rare for that user on that specific host?
    context: This question uses statistical rarity to detect anomalous post-login behavior. By baselining the processes each user normally runs on each host, the execution of a process that is statistically rare for that user-host combination (e.g., in the bottom 5th percentile of frequency) after a risky login is highly suspicious.
    answer_sources:
      - Windows Event ID 4688 (Process Creation)
      - Historical process execution data
      - Custom alert feeds (Impossible Travel, Anomalous Login)
      - Relevant Systems: Domain Controllers, Member Servers, High-value user endpoints
    range: last 90 days
    queries:
      - Pseudocode: AFTER high-risk login, FLAG subsequent process executions (Event ID 4688) that are in the bottom 5th percentile of frequency for that user-host pair.
  - question: Was a user's post-login activity sequence highly improbable compared to their normal behavior?
    context: This question models entire user sessions to detect anomalous chains of activity. A sequence analysis model can learn the common sequences of process executions and network connections that follow a user's login. A session where the observed sequence of actions has a very low probability according to the model indicates a significant deviation from normal behavior.
    answer_sources:
      - Windows Event ID 4688 (Process Creation)
      - Zeek conn.log
      - Historical user activity data
      - Relevant Systems: Domain Controllers, Member Servers, High-value user endpoints
    range: last 90 days
    queries:
      - Pseudocode: MODEL common post-login action sequences (processes, network connections). FLAG sessions where the observed sequence has a very low probability.
  - question: Is a Linux host communicating with a known command-and-control (C2) server associated with PAM-modifying malware?
    context: This question uses threat intelligence to detect known malicious activity. By matching outbound network traffic from Linux hosts against a feed of C2 indicators (IPs, domains, JA3/JA3S hashes) known to be used by malware that modifies PAM, we can get a high-confidence alert that a host is compromised.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat intelligence feeds
      - Relevant Systems: Internet Gateway, Core network switches, DNS resolvers, Linux server subnets
    range: last 90 days
    queries:
      - Pseudocode: SEARCH Zeek logs for connections from Linux hosts to destinations (IP, domain, JA3/JA3S hash) on PAM malware C2 watchlist.
  - question: Is a Linux server connecting to statistically rare external destinations?
    context: This question hunts for unknown or new C2 infrastructure by focusing on statistical rarity. Most servers have a predictable pattern of external connectivity. A connection from a Linux server to a destination IP or domain that is very rarely contacted by other servers in the environment is anomalous and could represent a C2 channel.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Historical network traffic data
      - Relevant Systems: Internet Gateway, Core network switches, DNS resolvers, Linux server subnets
    range: last 90 days
    queries:
      - Pseudocode: PROFILE destination rarity across all Linux servers. FLAG connections to destinations in the bottom 1st percentile of frequency.
  - question: Does outbound traffic from Linux hosts exhibit characteristics of C2 communication?
    context: This question uses machine learning to identify C2-like behavior based on network metadata, even without a known malicious signature. Features like long-lived connections with periodic, low-volume "heartbeats" or connections to domains queried via high-entropy DNS requests can be used to score and flag potential C2 channels.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Relevant Systems: Internet Gateway, Core network switches, DNS resolvers, Linux server subnets
    range: last 90 days
    queries:
      - Pseudocode: CLASSIFY Zeek connection metadata to identify C2-like traffic, using features like connection duration, byte patterns, and DNS query entropy.
  - question: Are there successful RADIUS-based Windows logins that are missing a corresponding MFA log?
    context: This question is designed to detect MFA bypass. If a Linux-based VPN or RADIUS client is compromised with a modified PAM, it might allow authentication to proceed without triggering the MFA step. This analytic correlates successful Windows logins from a RADIUS server with MFA logs, alerting when a login occurs without a recent, successful MFA event for that user.
    answer_sources:
      - Windows Event ID 4624
      - MFA platform logs (e.g., Duo, Okta)
      - RADIUS server logs
      - Relevant Systems: Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms, VPN Concentrators
    range: last 90 days
    queries:
      - Pseudocode: FOR each successful RADIUS login (Event ID 4624), REQUIRE a successful MFA log for the same user within the last 3 minutes. ALERT if missing.
  - question: Is the ratio of MFA successes to RADIUS logins for any user or client anomalously low?
    context: This question statistically identifies systematic MFA bypass. By calculating the ratio of successful MFA events to successful RADIUS logins over a period, we can find outliers. A user or a specific RADIUS client (e.g., a Linux VPN server) with a ratio significantly lower than the average suggests a persistent bypass mechanism is in place.
    answer_sources:
      - Windows Event ID 4624
      - MFA platform logs
      - Relevant Systems: Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms
    range: last 90 days
    queries:
      - Pseudocode: CALCULATE ratio of (MFA successes / RADIUS logins) per user and per client. ALERT if ratio is >2 standard deviations below the mean.
  - question: Are certain users being clustered into a 'no-MFA' or 'low-MFA' group based on their authentication behavior?
    context: This question uses unsupervised learning to find users who are bypassing MFA without relying on fixed thresholds. A clustering model can group users based on their authentication patterns. Users who consistently fall into a cluster characterized by a low or non-existent MFA-to-login ratio represent a behavioral anomaly compared to their peers and warrant investigation.
    answer_sources:
      - Windows Event ID 4624
      - MFA platform logs
      - Historical authentication data
      - Relevant Systems: Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms
    range: last 90 days
    queries:
      - Pseudocode: CLUSTER users based on MFA-to-login ratios and other auth features. INVESTIGATE users falling into a 'low-ratio' cluster.
  - question: Has a successful Windows login occurred that violates network segmentation policies?
    context: This question detects lateral movement that should have been blocked by network controls. If an attacker uses credentials stolen via a PAM compromise, they might try to pivot across network segments. This query codifies segmentation rules (e.g., developer subnets cannot access production databases) and alerts when a successful login is observed on a connection that violates these rules.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Network segmentation policy documentation
      - Relevant Systems: Internal network sensors, Domain Controllers, Critical Server VLANs, Network Taps
    range: last 90 days
    queries:
      - Pseudocode: JOIN Zeek conn.log and Windows login data. ALERT on successful logins where source/destination pair violates codified segmentation rules.
  - question: Is there a successful authentication across a statistically rare network path?
    context: This question uses graph analysis to find anomalous lateral movement. By modeling the network of normal authentications (which subnets/hosts log into which others), we can identify connection paths that are rarely used. A successful authentication across a very infrequent path (e.g., bottom 1st percentile) could indicate an attacker using a compromised account to pivot in an unusual way.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Historical network authentication data
      - Relevant Systems: Internal network sensors, Domain Controllers, Critical Server VLANs
    range: last 90 days
    queries:
      - Pseudocode: MODEL the authentication network graph. FLAG successful authentications that occur on a source-destination path with a frequency in the bottom 1st percentile.
  - question: Have new authentication pathways formed between previously disconnected network communities?
    context: This question uses graph analytics to find compromised assets being used as pivot points. Community detection algorithms can identify clusters of hosts that frequently interact. A new, successful authentication that forms an edge between two previously separate communities is a strong indicator that a compromised host in one community is being used to access another.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Historical network authentication data
      - Relevant Systems: Internal network sensors, Domain Controllers, Critical Server VLANs
    range: last 90 days
    queries:
      - Pseudocode: APPLY community detection to the authentication graph. ALERT on new authentication edges that bridge previously disconnected communities.
  - question: Is an attacker probing account policies with specific failed logins before a successful login?
    context: This question detects a specific attack pattern where an adversary first enumerates account policies before using a known-good credential. The pattern involves a series of failed logins with non-password-related errors (e.g., account disabled, logon hours) followed by a successful login. This suggests the attacker is testing the waters before striking.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Relevant Systems: Domain Controllers, ADFS Servers, Edge Authentication Gateways
    range: last 90 days
    queries:
      - Pseudocode: DETECT sequence from one IP: 5+ failed logins (Event ID 4625) with non-password errors, followed by 1 successful login (Event ID 4624) within 1 minute.
  - question: Is a source IP showing a sudden spike in its failed-to-successful login ratio?
    context: This question statistically identifies hosts that are performing reconnaissance or brute-force attempts. By monitoring the ratio of failed-to-successful logins from each source IP, a sudden, sharp spike in this ratio followed by a drop to zero (indicating a success) is an anomalous pattern that exceeds normal user behavior and may indicate an attack.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Relevant Systems: Domain Controllers, ADFS Servers, Edge Authentication Gateways
    range: last 90 days
    queries:
      - Pseudocode: CALCULATE rolling 5-min ratio of (failed logins / successful logins) per IP. ALERT on IPs whose ratio volatility exceeds the 98th percentile.
  - question: Does a login sequence from a source IP match a known attack signature for policy probing?
    context: This question uses sequence matching to detect variations of known attack patterns that symbolic rules might miss. An algorithm like Dynamic Time Warping can compare a sequence of login events (failures with specific error codes, followed by success) from a source IP against a library of known attack signatures, providing a more flexible detection method.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Relevant Systems: Domain Controllers, ADFS Servers, Edge Authentication Gateways
    range: last 90 days
    queries:
      - Pseudocode: USE a sequence-matching algorithm to find login patterns that are similar to known attack signatures (e.g., policy probing).
  - question: Is a Linux server connecting to an external destination known for credential exfiltration?
    context: This question uses threat intelligence to detect the exfiltration of credentials harvested by malware. A connection or DNS query from a multi-user Linux host (like a jump box) to an IP or domain on a threat feed for credential theft exfiltration points is a high-severity indicator that the host is compromised and data is being stolen.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Threat intelligence feeds
      - Relevant Systems: Internet Gateway, DNS Resolvers, Core network sensors monitoring Linux server subnets
    range: last 90 days
    queries:
      - Pseudocode: ALERT on any DNS query or network connection from a Linux server to an indicator on a credential exfiltration threat feed.
  - question: Has a Linux server shown a sudden, anomalous increase in its daily data upload volume?
    context: This question aims to detect bulk data exfiltration by monitoring for unusual data transfer volumes. By baselining the normal daily upload traffic for each Linux server, an alert can be triggered if the volume exceeds a high statistical threshold (e.g., 4 standard deviations above the average), especially if the destination is also statistically rare for that server.
    answer_sources:
      - Zeek conn.log
      - Historical network traffic data
      - Relevant Systems: Internet Gateway, Core network sensors monitoring Linux server subnets
    range: last 90 days
    queries:
      - Pseudocode: FOR each Linux server, ALERT if daily_upload_bytes > (30_day_avg + 4 * stdev), especially if destination is rare.
  - question: Are outbound DNS queries from Linux hosts indicative of a Domain Generation Algorithm (DGA)?
    context: This question seeks to identify malware preparing to exfiltrate data. Many malware families use DGAs to generate a large number of domain names for C2 or exfiltration. A DGA detection model that flags a DNS query from a Linux host, which is then resolved and connected to, is a strong indicator of compromise by a credential harvester.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Relevant Systems: DNS Resolvers, Internet Gateway
    range: last 90 days
    queries:
      - Pseudocode: APPLY DGA detection model to DNS queries from Linux hosts. ALERT on positive match followed by a successful connection.
  - question: Are Linux hosts making DNS queries with unusually long or high-entropy labels?
    context: This question is designed to detect DNS tunneling, a common technique for exfiltrating data covertly. Credentials or other stolen data can be encoded into long subdomains or TXT record queries. A rule that detects DNS queries with abnormally long labels or high character entropy can effectively uncover this exfiltration channel.
    answer_sources:
      - Zeek dns.log
      - Relevant Systems: DNS Resolvers, Internet Gateway, Network Taps
    range: last 90 days
    queries:
      - Pseudocode: ALERT on DNS queries from Linux servers WHERE query_label_length > 100 characters OR query_type is TXT.
  - question: Is a host exhibiting anomalous DNS behavior, such as high label entropy or an unusual ratio of query types?
    context: This question statistically identifies hosts using DNS for purposes other than standard resolution, such as C2 or exfiltration. By calculating the entropy of DNS query labels and the ratio of standard (A/AAAA) to non-standard (TXT, CNAME) queries, we can flag hosts whose DNS usage patterns are statistical outliers and indicative of tunneling.
    answer_sources:
      - Zeek dns.log
      - Historical DNS query data
      - Relevant Systems: DNS Resolvers, Internet Gateway, Network Taps
    range: last 90 days
    queries:
      - Pseudocode: FOR each host, CALCULATE entropy of DNS labels and ratio of A/AAAA to other query types. FLAG hosts in the 99th percentile for entropy or with a very low ratio.
  - question: Can machine learning identify DNS tunneling traffic?
    context: This question leverages a classifier to provide a high-confidence score for DNS exfiltration activity. By training a model on features like query length, record type, frequency, label entropy, and domain reputation, it can learn to distinguish legitimate DNS traffic from tunneling, providing a more robust detection capability than simple rules.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Domain reputation feeds
      - Relevant Systems: DNS Resolvers, Internet Gateway
    range: last 90 days
    queries:
      - Pseudocode: TRAIN a classifier on DNS query features to produce a probability score for exfiltration via tunneling.
  - question: Is a single source IP conducting a password spraying attack?
    context: This question looks for the specific pattern of a password spray: one or a few passwords being tried against many different user accounts. A rule that alerts when a single IP generates a high number of failed logins across a high number of unique accounts, followed by at least one success, can detect the culmination of this attack.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Relevant Systems: Domain Controllers, ADFS servers, Internet Gateway
    range: last 90 days
    queries:
      - Pseudocode: ALERT when a single source_ip has >100 failed logins (Event ID 4625) across >20 unique accounts, followed by a success (Event ID 4624) within 1 hour.
  - question: Is a source IP exhibiting a high ratio of attempted accounts to successful logins?
    context: This question statistically identifies password spraying behavior. A normal user has a low ratio of attempted accounts to successes (usually 1:1). An attacker spraying a password will have a very high ratio (e.g., 50:1 or more). Flagging source IPs with a ratio that is a statistical outlier is an effective way to detect this attack.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Relevant Systems: Domain Controllers, ADFS servers, Internet Gateway
    range: last 90 days
    queries:
      - Pseudocode: CALCULATE ratio of (unique accounts attempted / successful logins) per source_ip. FLAG IPs with a ratio >3 standard deviations above the mean.
  - question: Does a source IP's login behavior fall into a cluster associated with password spraying?
    context: This question uses machine learning to identify password spraying activity based on a combination of behavioral metrics. By clustering source IPs based on features like total attempts, failure/success ratio, and number of unique targets, IPs that group into a 'high-volume, low-success, high-target-count' cluster can be identified as likely attackers.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Relevant Systems: Domain Controllers, ADFS servers, Internet Gateway
    range: last 90 days
    queries:
      - Pseudocode: CLUSTER source IPs using login behavior features. INVESTIGATE IPs in the 'password spray' cluster.
  - question: Following a suspicious login, was a known credential dumping tool executed?
    context: This question links a successful intrusion to the next logical step: credential access on the compromised host. It creates a correlation rule that looks for the execution of tools like Mimikatz or `procdump.exe` targeting the LSASS process, but only when run by a user account that was just flagged in a 'Password Spray Success' or 'Impossible Travel' alert.
    answer_sources:
      - Windows Event ID 4688 (Process Creation)
      - Windows Event ID 4624
      - Custom alert feeds
      - Relevant Systems: Domain Controllers, Member Servers, High-value user endpoints
    range: last 90 days
    queries:
      - Pseudocode: IF 'Password Spray Success' alert for user, THEN search for subsequent execution of Mimikatz or procdump on lsass.exe by that user within 1 hour.
  - question: Following a suspicious login, was an anomalous parent-child process relationship observed?
    context: This question aims to detect unusual process chains that indicate malicious activity. Attackers often use legitimate processes to spawn malicious ones (e.g., `services.exe` spawning `powershell.exe`). By baselining normal parent-child process relationships, we can flag rare combinations, especially when they are initiated by a user account recently involved in a high-risk login.
    answer_sources:
      - Windows Event ID 4688 (Process Creation)
      - Historical process execution data
      - Relevant Systems: Domain Controllers, Member Servers, High-value user endpoints
    range: last 90 days
    queries:
      - Pseudocode: AFTER a high-risk login, FLAG anomalous parent-child process relationships (e.g., services.exe -> powershell.exe) initiated by the user.
  - question: Were obfuscated credential dumping commands executed after a suspicious login?
    context: This question seeks to find credential dumping attempts that use obfuscation to evade simple signature matching. A machine learning model can be trained on process command-line arguments to identify characteristics of obfuscation, such as high character entropy or base64-encoded strings, to flag suspicious commands that follow a high-risk login.
    answer_sources:
      - Windows Event ID 4688 (Process Creation)
      - Sysmon Event ID 1 (Process Creation)
      - Relevant Systems: Domain Controllers, Member Servers, High-value user endpoints
    range: last 90 days
    queries:
      - Pseudocode: TRAIN a classifier on command-line arguments to detect obfuscation. APPLY model to processes run by users after a high-risk login event.