name: T1556.006: Multi-Factor Authentication
id: f3b1c2a0-4d5e-4f6a-8b7c-9d0e1f2a3b4c
description: This playbook focuses on detecting adversarial attempts to achieve persistence, evade defenses, and access credentials by modifying, tampering with, or bypassing Multi-Factor Authentication (MFA) controls. It covers investigative paths for identifying malicious MFA configuration changes, such as removing users from MFA-enforcing security groups, registering unauthorized MFA devices followed by suspicious logins, or modifying the hosts file to redirect MFA services. The playbook also addresses techniques like using specific command-line tools to alter MFA policies, detecting anomalous network connections from critical processes like LSASS, monitoring for unauthorized access to third-party MFA agent files, identifying MFA fatigue attacks through login failure analysis, and detecting Adversary-in-the-Middle (AiTM) session hijacking via threat intelligence and TLS fingerprinting.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a user been removed from a critical Active Directory group used for MFA enforcement?
  context: This question is crucial for detecting persistence attempts where an adversary weakens security by removing a user from an MFA-protected group. Monitoring for specific member removal events (Windows Event IDs 4729, 4733, 4757) against a predefined list of critical MFA enforcement groups allows for the immediate identification of potentially malicious changes to security posture.
  answer_sources:
  - Windows Event ID 4729
  - Windows Event ID 4733
  - Windows Event ID 4757
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (EventID:4729 OR EventID:4733 OR EventID:4757) AND GroupSID IN (critical_mfa_group_sids) | RETURN SubjectUser, TargetUser, GroupName
- question: Is an administrator removing an unusually high number of users from MFA enforcement groups compared to their baseline?
  context: This question aims to detect anomalous administrative behavior that might indicate a compromised administrator account or an insider threat. By baselining normal activity and alerting on significant deviations (e.g., exceeding three standard deviations), security teams can identify bulk changes that could be part of a broader attack to weaken MFA across multiple accounts.
  answer_sources:
  - Windows Event ID 4729
  - Windows Event ID 4733
  - Windows Event ID 4757
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (EventID:4729 OR EventID:4733 OR EventID:4757) AND GroupSID IN (critical_mfa_group_sids) | STATS count BY Administrator, week | COMPARE count TO baseline_per_admin | WHERE deviation > 3_std_dev
- question: Has a privileged user's security posture been significantly weakened by their removal from an MFA group, as identified by a graph-based anomaly detection model?
  context: This question leverages advanced analytics to understand the contextual impact of a group membership change. Instead of just flagging a removal, it assesses whether the change significantly degrades a user's security standing (e.g., moving from a highly secured context to a less secure one). This helps prioritize alerts based on the actual risk introduced by the change.
  answer_sources:
  - Windows Event ID 4729
  - Windows Event ID 4733
  - Windows Event ID 4757
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT AD_change_logs | MODEL GraphAnomalyDetection | FIND events WHERE event_type='member_removal' AND security_score_decrease > threshold
- question: Was a new MFA device registered for a user, immediately followed by a login from a geographically inconsistent location?
  context: This question helps detect account takeovers where an attacker registers their own MFA device and immediately uses it. Correlating the registration event with a login from a different country within a short time window (e.g., 5 minutes) is a strong indicator of malicious activity, as legitimate users are unlikely to travel between countries that quickly.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4624
  - Zeek conn.log
  - Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN on User WHERE event_type='mfa_registration' AND event_type='successful_login' | WHERE login_time - registration_time < 5_minutes AND registration_country != login_country | ALERT
- question: Following a new MFA device registration, did the user log in from a location that is statistically rare for them?
  context: This question identifies suspicious logins that may not be as obvious as impossible travel between countries. By baselining a user's typical login locations (countries, ASNs), a login from a novel or highly infrequent location immediately after an MFA device change can be flagged. This helps detect attackers who are attempting to blend in by using proxies within the user's home country but from an unusual network.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4624
  - Zeek conn.log
  - Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH event_type='mfa_registration' | FOLLOWED BY event_type='successful_login' for same user | COMPARE login_location to user_location_history | WHERE location_frequency < 5th_percentile OR location_is_new
- question: Did a user's activity follow a high-risk sequence of MFA registration, login from a new network, and sensitive data access, as identified by a behavioral model?
  context: This question moves beyond single events to analyze the entire chain of user actions. A sequence-based model can learn normal user workflows. A sequence like registering a new MFA device, immediately logging in from an unfamiliar network (ASN), and then accessing critical assets is a highly suspicious pattern that a model can flag as a high-confidence anomaly, indicating a potential account takeover in progress.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4624
  - Zeek conn.log
  - Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT user_activity_logs | MODEL SequenceAnomalyDetection | FIND sequences matching ['mfa_registration', 'login_from_new_asn', 'sensitive_data_access'] with high_reconstruction_error
- question: Was the system's hosts file modified by an unauthorized or suspicious process?
  context: This question addresses a classic technique for redirecting traffic. Adversaries modify the hosts file to point an MFA service domain to a malicious server or a null address to bypass the check. Monitoring for file writes to this critical file and scrutinizing the parent process (e.g., 'echo', 'powershell' used interactively) can detect this tampering attempt.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User Endpoints and Critical Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (EventID:4663 AND ObjectName='...\\etc\\hosts') OR (EventID:4688 AND CommandLine CONTAINS '...\\etc\\hosts') | WHERE ProcessName NOT IN (approved_installers) | ALERT
- question: Has the hosts file on an endpoint been modified, resulting in a hash mismatch with the approved baseline, or is it being changed with unusual frequency?
  context: This question provides a high-fidelity way to detect unauthorized changes using file integrity monitoring (FIM). By comparing the hash of the current hosts file against a known-good baseline, any modification can be immediately detected. Additionally, tracking the rate of change can uncover anomalous activity where an attacker might be repeatedly modifying the file.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User Endpoints and Critical Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_monitoring_event for '...\\etc\\hosts' | WHERE current_hash != baseline_hash | OR | STATS count by host, day | WHERE daily_change_count > 99th_percentile
- question: Has a change to the hosts file been classified as malicious by a machine learning model?
  context: This question applies machine learning to FIM to reduce false positives. A model can be trained to distinguish between legitimate changes (e.g., from a software installer) and malicious ones (e.g., a single-line addition from a command shell) based on features like the process making the change, the user context, and the nature of the change itself.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User Endpoints and Critical Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT hosts_file_change_events | MODEL FIM_Classifier | FIND events WHERE classification='malicious'
- question: Have PowerShell cmdlets or command-line tools known to modify MFA configurations been executed?
  context: This question directly targets the tools an adversary would use to weaken or disable MFA policies programmatically. By monitoring for specific, sensitive keywords in command lines and PowerShell scripts, security teams can detect unauthorized changes to ADFS, Azure AD, or other identity systems, especially when these actions are not correlated with a legitimate change ticket.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - ADFS Servers, Domain Controllers, and Administrator Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (EventID:4688 OR EventID:4104) AND (CommandLine CONTAINS 'Set-MsolUser' OR ScriptBlock CONTAINS '-StrongAuthenticationRequirements') | WHERE ChangeRequestID IS NULL | ALERT
- question: Has a PowerShell command with unusually high entropy, potentially indicating obfuscation, been used to modify MFA settings?
  context: Adversaries often obfuscate their commands to evade simple keyword-based detection. This question uses Shannon entropy as a proxy for randomness to identify such obfuscated commands. A command with abnormally high entropy is likely packed or encoded and warrants investigation, as it is a common tactic for hiding malicious PowerShell payloads.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - ADFS Servers, Domain Controllers, and Administrator Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH EventID:4688 AND ProcessName='powershell.exe' | CALCULATE entropy(CommandLine) | WHERE entropy > 99th_percentile_baseline | ALERT
- question: Has a structurally anomalous PowerShell command, dissimilar to known legitimate administrative commands, been executed?
  context: This question uses a deep learning model to detect novel or malformed commands that may not be caught by signature or entropy checks. An autoencoder learns the "normal" structure of administrative commands. A malicious command, even if not highly obfuscated, will likely have a different structure and thus a high reconstruction error, flagging it as a potential threat.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - ADFS Servers, Domain Controllers, and Administrator Workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT powershell_script_blocks | MODEL Seq2SeqAutoencoder | FIND commands WHERE reconstruction_error > threshold
- question: Has the LSASS process initiated an outbound network connection to an external IP address?
  context: The LSASS process should generally not make outbound connections to the internet. Such a connection is a very strong indicator of credential theft activity, such as an attacker using a tool like Mimikatz to exfiltrate credentials. Alerting on any external connection from lsass.exe is a critical, high-fidelity detection.
  answer_sources:
  - Windows Event ID 5156
  - Zeek conn.log
  - Domain Controllers and User Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH EventID:5156 AND Application='...\\lsass.exe' AND DestinationAddress NOT IN (internal_ip_ranges, trusted_ip_ranges) | ALERT
- question: Has the LSASS process connected to a rare or previously unseen destination IP address and port?
  context: While LSASS external connections are almost always suspicious, this question adds a layer of statistical analysis to find the needle in the haystack. By baselining the (hopefully non-existent) legitimate connections, any deviation, such as a connection to a novel IP/port combination, can be immediately flagged as anomalous, pointing to a potential command-and-control (C2) channel or data exfiltration point.
  answer_sources:
  - Windows Event ID 5156
  - Zeek conn.log
  - Domain Controllers and User Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Application='...\\lsass.exe' | COMPARE (DestinationIP, DestinationPort) TO baseline_lsass_connections | WHERE connection_is_new OR connection_frequency < 1st_percentile
- question: Has a network connection from the LSASS process been classified as an outlier by a machine learning model?
  context: This question uses an unsupervised machine learning model (One-Class SVM) to define a boundary of "normal" network behavior for critical processes. Any connection from lsass.exe that falls outside this learned boundary is automatically classified as an anomaly. This provides a robust detection method that can adapt to the environment and identify sophisticated attacker C2 communications.
  answer_sources:
  - Windows Event ID 5156
  - Zeek conn.log
  - Domain Controllers and User Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT network_connection_logs | MODEL OneClassSVM | FIND connections WHERE ProcessName='lsass.exe' AND classification='outlier'
- question: Has a process not on the approved allowlist attempted to access files or registry keys belonging to an MFA agent?
  context: This question aims to detect direct tampering with third-party MFA solutions. By defining a strict allowlist of processes that can legitimately interact with MFA agent files and registry keys, any access from an unauthorized process (like 'powershell.exe' or a custom malware executable) can be treated as a high-severity security event, indicating an attempt to disable or bypass the agent.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (EventID:4663 OR EventID:4656) AND (ObjectName CONTAINS 'MFA_Agent_Path' OR ObjectName CONTAINS 'MFA_Agent_Registry') | WHERE ProcessName NOT IN (mfa_agent_allowlist) | ALERT
- question: Has a sensitive MFA agent file or registry key been accessed by an unusual process or with an anomalous frequency?
  context: This question uses statistical baselining to detect subtle tampering attempts. An attacker might use a legitimate-looking process to interact with MFA files. By profiling which processes normally access these resources and how often, a rare access event (e.g., PowerShell accessing a config file it never touches) or a sudden burst of activity can be flagged as anomalous and potentially malicious.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH object_access_logs for MFA_assets | COMPARE ProcessName to historical_access_baseline | WHERE ProcessName is rare OR access_count_per_hour > 3_std_dev
- question: Did a sequence of process and file interactions involving MFA agent resources violate a learned model of normal system behavior?
  context: This question looks for suspicious chains of events rather than single access attempts. A behavioral model can learn that a specific installer process normally writes to an MFA configuration file. A sequence where a command prompt spawns a different process that then modifies that same file would be a low-probability event under the model, indicating a deviation from normal behavior that could be an attack.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT process_and_file_access_sequences | MODEL HMM_Behavioral | FIND sequences involving MFA_assets WHERE probability < threshold
- question: Has a user account experienced a burst of MFA denial failures followed by a successful login from the same IP address?
  context: This question is designed to detect a classic MFA fatigue or "push bombing" attack. The adversary spams login attempts, flooding the user with MFA push notifications, hoping the user will eventually approve one by mistake. A pattern of many MFA failures followed by a sudden success is a strong signature for this type of attack.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Authentication Servers and Cloud Identity Providers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH EventID:4625 AND MfaStatus='denied' | STATS count BY user, source_ip, 5_minutes | WHERE count > 10 | FOLLOWED BY EventID:4624 for same user, source_ip | ALERT
- question: Is a user experiencing a statistically unusual rate of failed login attempts?
  context: This question provides a broader, statistical approach to detecting pressure tactics like MFA fatigue. Even if an attack doesn't fit a rigid rule, a significant spike in failed logins for a single user compared to their own history or their peers is a strong anomaly. This can detect slower-paced attacks or other authentication issues that warrant investigation.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Authentication Servers and Cloud Identity Providers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH EventID:4625 | STATS count by user, hour | COMPARE hourly_failures TO user_baseline, peer_baseline | WHERE hourly_failures > 99th_percentile
- question: Has a time-series model detected an anomalous spike in failed MFA attempts for a user?
  context: This question applies time-series analysis to authentication data to automatically detect unusual patterns. A model can learn a user's normal login rhythm. A sudden, sharp, and uncharacteristic burst of failed attempts would be flagged as a temporal anomaly, providing a more sophisticated way to detect MFA fatigue attacks without relying on fixed thresholds.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Authentication Servers and Cloud Identity Providers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT authentication_logs_timeseries per user | MODEL SARIMA_Anomaly_Detection | FIND events WHERE event_type='failed_mfa' AND anomaly_score > threshold
- question: Did a successful remote login originate from a known Adversary-in-the-Middle (AiTM) IP address or use a malicious TLS fingerprint (JA3/JA3S)?
  context: This question leverages threat intelligence to detect known AiTM infrastructure. By comparing the source IP of logins and the TLS fingerprint of the connection against feeds of known malicious indicators, security teams can identify session hijacking attempts with high confidence. This is a crucial check as AiTM attacks can successfully steal session cookies even when MFA is enabled.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek ssl.log
  - Internet Gateway, VPN Concentrators, and Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH EventID:4624 AND LogonType:10 | JOIN with network_logs on source_ip, timestamp | WHERE source_ip IN (aitm_threat_feed) OR ja3_hash IN (malicious_ja3_feed) | ALERT
- question: Did a successful login occur over a TLS session with a rare or unusual client fingerprint (JA3/JA3S)?
  context: This question helps detect unknown or novel AiTM toolkits that aren't yet in threat intelligence feeds. AiTM tools often have unique TLS implementations that produce a distinct JA3/JA3S fingerprint. By baselining the common fingerprints from legitimate corporate browsers and clients, any login from a session with a rare fingerprint can be flagged as suspicious and potentially indicative of an AiTM proxy.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek ssl.log
  - Internet Gateway, VPN Concentrators, and Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH successful_logins | LOOKUP ja3_hash from network_logs | COMPARE ja3_hash to organization_wide_ja3_baseline | WHERE ja3_frequency < 1st_percentile
- question: Has a machine learning model assigned a high risk score to a remote login session, suggesting a potential AiTM attack?
  context: This question uses a supervised ML model to provide a holistic risk assessment for each login. The model can consider dozens of features simultaneously (IP reputation, ASN, user agent, JA3 hash, time of day, user's login history) to calculate a risk score. This is more powerful than any single rule and can detect complex AiTM attacks that subtly deviate from normal behavior across multiple dimensions.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek ssl.log
  - Internet Gateway, VPN Concentrators, and Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT login_session_features | MODEL XGBoost_Risk_Classifier | FIND sessions WHERE risk_score > threshold