name: T1564.010: Process Argument Spoofing
id: 5a1b3c4d-8e9f-4a5b-6c7d-8e9f0a1b2c3d
description: This playbook helps investigate whether an adversary is evading defenses by spoofing process arguments to make malicious activity appear benign. Adversaries use this technique to hide their actions by making processes look like legitimate system operations. This can involve a process with a benign-appearing command line initiating malicious network connections, spawning high-risk child processes, exhibiting anomalous network behavior (e.g., unusual data volumes or ports), or creating persistence mechanisms like scheduled tasks or registry run keys.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a process with a seemingly benign command line making a network connection to a known malicious IP or domain?
  context: Adversaries spoof command line arguments to make malicious processes look like legitimate system processes (e.g., 'svchost.exe -k netsvcs'). This question aims to unmask this deception by correlating process creation with outbound network connections and checking the destination against threat intelligence. A match indicates a high probability of a spoofed process communicating with a C2 server.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Threat Intelligence Feed
  - User Workstations
  - Application Servers
  - Internet Gateway
  - SIEM
  range: last 90 days
  queries:
  - pseudocode: JOIN process_creation_events ON host WITH network_connection_events ON host WHERE time_diff < 60s AND process_command IN benign_allowlist; ENRICH destination_ip/domain WITH threat_intel; ALERT if threat_intel_match == true.
- question: Is a commonly abused process making a network connection to a geographically rare destination?
  context: This question uses behavioral analytics to spot anomalies. Even if a destination is not on a threat list, a connection to a country where the organization rarely conducts business, initiated by a process often used by malware (like svchost.exe), is highly suspicious. It helps detect novel C2 infrastructure not yet included in threat intelligence feeds.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - GeoIP database
  - User Workstations
  - Application Servers
  - Internet Gateway
  - SIEM
  range: last 90 days
  queries:
  - pseudocode: FOR each process in abused_process_list, BASELINE destination_country_frequency from historical_network_logs; FOR new_network_connections from process, ALERT if destination_country_frequency < 5th_percentile.
- question: Can a machine learning model identify a process with a benign-appearing command line as malicious based on its network behavior and other features?
  context: This question leverages machine learning to find subtle patterns that rule-based detections might miss. By training a model on features like command line length, argument count, and network metrics, it can learn to distinguish between genuinely benign activity and malicious activity disguised with a spoofed command line, providing a more sophisticated layer of detection.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Labeled training dataset
  - User Workstations
  - Application Servers
  - Internet Gateway
  - SIEM
  range: last 90 days
  queries:
  - pseudocode: SCORE new process_and_network_events using pre-trained_ML_model; ALERT if model_prediction == 'malicious' AND confidence_score > 0.9 AND process_command appears benign.
- question: Has a common system process with a benign command line spawned a high-risk child process like PowerShell or Command Prompt?
  context: This is a classic defense evasion pattern where a legitimate-looking parent process (e.g., 'svchost.exe') is used to launch tools ('powershell.exe', 'cmd.exe') for subsequent malicious actions. This question aims to detect this anomalous parent-child relationship, which is a strong indicator of compromise.
  answer_sources:
  - Windows Event ID 4688
  - User Workstations
  - Domain Controllers
  - Application Servers
  range: last 90 days
  queries:
  - pseudocode: FOR new_process_creation_events, ALERT if parent_process IN common_parents_list AND parent_command IN benign_allowlist AND child_process IN high_risk_child_list.
- question: Has a process spawned a child process that is statistically rare for that parent-child relationship?
  context: This question uses statistical baselining to find unusual execution chains. While a parent like 'explorer.exe' spawns many processes, it might be extremely rare for it to spawn 'cscript.exe'. By identifying these statistically infrequent pairs, analysts can uncover malicious activity that deviates from established normal behavior in their specific environment.
  answer_sources:
  - Windows Event ID 4688
  - User Workstations
  - Domain Controllers
  - Application Servers
  range: last 90 days
  queries:
  - pseudocode: BASELINE frequency of all historical parent-child_process pairs; FOR new_process_creation_event, ALERT if parent-child_pair_frequency < 5th_percentile.
- question: Can an unsupervised machine learning model identify anomalous parent-child process relationships as outliers from normal activity clusters?
  context: This question employs an unsupervised learning approach (clustering) to group normal process execution chains. Any new process creation event that doesn't fit into an existing "normal" cluster is flagged as an outlier. This is powerful for detecting novel or environment-specific attacks without needing pre-labeled data or predefined rules.
  answer_sources:
  - Windows Event ID 4688
  - User Workstations
  - Domain Controllers
  - Application Servers
  range: last 90 days
  queries:
  - pseudocode: CLUSTER historical process_creation_events based on parent_name, parent_command_pattern, child_name; FOR new_process_creation_event, ALERT if event is an outlier to all existing clusters.
- question: Is a process with a benign-looking command line connecting to a non-standard or unapproved network port?
  context: Adversaries may use non-standard ports for C2 communication. This question focuses on detecting when a process, which appears to be running non-maliciously (e.g., PowerShell without encoded commands), communicates over a port that is unusual for that application or is on a list of known C2 ports. This is a strong indicator of covert communication.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - User Workstations
  - Application Servers
  - Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: FOR new_network_connections from process with benign_command, ALERT if destination_port NOT IN allowed_ports_for_process OR destination_port IN known_c2_ports.
- question: Is a process exhibiting anomalous network behavior, such as unusually high data transfer or long connection duration, compared to its historical baseline?
  context: This question aims to detect C2 activity or data exfiltration by looking for statistical deviations in network traffic. A process like 'svchost.exe' might normally have very consistent network patterns. A sudden, drastic change in data transfer or connection duration can signal that the process has been compromised or is a masquerading threat.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - User Workstations
  - Application Servers
  - Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: FOR each process_name, BASELINE mean and std_dev of network_metrics (bytes, duration); FOR new_network_connection from process_name, ALERT if metric > (mean + 3 * std_dev).
- question: Did a process with a benign command line launch just before a significant, anomalous spike in outbound network traffic from a host?
  context: This question approaches the problem from the network traffic side. It starts with a network anomaly (e.g., a sudden spike in data) and works backward to find the potential cause. Correlating this spike with recently created processes, especially those with deceptively simple command lines, can pinpoint the malicious actor.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - User Workstations
  - Application Servers
  - Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: MONITOR host outbound_traffic with time_series_model; ON anomaly_detection, QUERY processes created on host in preceding 5 minutes; FLAG for investigation any process with a benign command line.
- question: Has a common application process, after being launched with a benign command line, created a persistence mechanism like a scheduled task or a registry run key?
  context: Standard applications like browsers or office products do not typically create scheduled tasks or modify registry run keys. This question looks for this suspicious sequence of events, which is a strong indicator that the process was exploited or is a masquerading threat establishing long-term access.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 12
  - Windows Event ID 13
  - Windows Event ID 4698
  - User Workstations
  - Critical Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: JOIN process_creation_events WITH persistence_events (task_creation, run_key_modify) ON ProcessID WHERE time_diff < 5 minutes; ALERT on match.
- question: Has a common application performed a sequence of actions (e.g., creating a persistence mechanism) that it has never or very rarely performed before in the environment?
  context: This question uses historical frequency analysis to define "normal" for a given application. If 'winword.exe' has never been observed to create a scheduled task in the last year, and it suddenly does, this is a major anomaly. This method is highly effective for detecting deviations from established behavior that may indicate a compromise.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 12
  - Windows Event ID 13
  - Windows Event ID 4698
  - User Workstations
  - Critical Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: BASELINE frequency of event_sequences from common_apps; FOR new sequence, ALERT if historical_frequency is near zero.
- question: Can a machine learning sequence model identify an illegitimate chain of events, such as a browser modifying a run key, as a low-probability anomaly?
  context: This question applies advanced machine learning to model the entire lifecycle of a process as a sequence of events. The model learns what "normal" sequences look like. When it encounters an unlikely sequence, like a web browser creating a process that then modifies a persistence key, it flags it as anomalous, which can detect complex, multi-step attack chains.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 12
  - Windows Event ID 13
  - Windows Event ID 4698
  - User Workstations
  - Critical Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: SCORE new event_sequences using pre-trained sequence_model (e.g., LSTM); ALERT if sequence_probability is below a learned threshold.