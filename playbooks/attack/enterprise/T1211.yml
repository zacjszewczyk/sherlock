name: "T1211: Exploitation for Defense Evasion"
id: "f4d8c1b0-6b7e-4b0d-8c1a-9f0e2d3c4b5a"
description: "This playbook helps investigate whether an adversary is exploiting software vulnerabilities to disable or bypass defensive security controls. This involves looking for several key indicators: anomalous network connections to or from security agent management ports that may indicate a known exploit; the creation of processes with command-line arguments specifically designed to stop, disable, or terminate security services; unexpected security service crashes that are temporally correlated with subsequent reconnaissance or C2 activity; instances where an indicator previously blocked by a security tool is later observed in an 'allow' event, signifying a control failure; and scenarios where a process handling untrusted content writes a file that is then loaded by a security process, suggesting a successful exploit and module injection."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are there network connections to or from our security agents that match known exploit signatures or indicators of compromise (IOCs)?"
    context: "This question seeks to identify direct attacks against security infrastructure. Adversaries may use known exploits for vulnerabilities in security products or connect from malicious infrastructure to manipulate or disable agents. Detecting this involves querying logs for specific signatures (e.g., from ET Pro, Suricata) or connections matching IP addresses and domains associated with active exploit campaigns."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Zeek files.log"
      - "Zeek notice.log"
      - "Network egress points, VPN concentrators, internal network segments monitoring security tool management servers, and Cloud VPC flow logs monitoring traffic to/from security service management planes."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          SEARCH Zeek notice.log WHERE notice.note MATCHES 'known_exploit_signatures'
          SEARCH Zeek conn.log, http.log WHERE destination_ip OR destination_domain IN 'active_exploit_campaign_iocs'
  - question: "Have any security agents exhibited anomalous network communication patterns, such as unusually large or high-entropy payloads?"
    context: "This question aims to find subtle signs of compromise that don't match known signatures. An attacker might inject shellcode or use obfuscated commands, which can alter the size and randomness (entropy) of the data being sent. By baselining normal communication and alerting on significant deviations (e.g., above the 99.5th percentile), we can detect these potentially malicious payloads."
    answer_sources:
      - "Zeek conn.log"
      - "Network egress points, VPN concentrators, internal network segments monitoring security tool management servers, and Cloud VPC flow logs monitoring traffic to/from security service management planes."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          FOR each security_agent:
            BASELINE = CALCULATE 30-day baseline of payload_size and entropy from Zeek conn.log
            ALERT if new_connection.payload_size > 99.5th_percentile(BASELINE.payload_size) OR new_connection.entropy > 99.5th_percentile(BASELINE.entropy)
  - question: "Can a machine learning model identify abnormal network behavior from security agents that might indicate compromise or disablement?"
    context: "This question uses advanced anomaly detection to spot complex patterns indicative of an exploit. A compromised agent might be used for data exfiltration, leading to unusually high traffic volumes, or it could be disabled, resulting in a sudden drop in communication. A multivariate time-series model can learn the normal relationships between features like bytes sent/received and connection duration, flagging significant deviations as potential security incidents."
    answer_sources:
      - "Zeek conn.log"
      - "Network egress points, VPN concentrators, internal network segments monitoring security tool management servers, and Cloud VPC flow logs monitoring traffic to/from security service management planes."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          MODEL = TRAIN multivariate time-series anomaly detection model (e.g., VAR, LSTM) on features (bytes_sent, bytes_received, duration) from Zeek conn.log
          APPLY MODEL to new traffic
          ALERT on high anomaly_score
  - question: "Are processes being created with command-line arguments intended to stop, delete, or disable our security services?"
    context: "This question looks for explicit attempts by an adversary to disable defenses using built-in system utilities like 'sc.exe' or 'powershell.exe'. The query searches for process creation events where the command line contains keywords like 'stop' or 'disable' paired with the names of known security services (e.g., 'WinDefend', 'Sense'), or the execution of known security bypass tools."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Endpoint workstations and servers, particularly those hosting security management consoles, critical applications, and Domain Controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          SEARCH Windows Event 4688, Sysmon Event 1 WHERE process_name IN ('sc.exe', 'powershell.exe', etc.) AND command_line CONTAINS ('stop', 'delete', 'config', 'disable') AND command_line CONTAINS ('WinDefend', 'Sense', etc.)
          SEARCH for execution of known bypass tools ('zemana.exe', 'av_killer.exe')
  - question: "Have legitimate system utilities like 'sc.exe' or 'powershell.exe' been used to interact with security services in a statistically rare or unusual way?"
    context: "This question aims to find abuse of legitimate tools that might not be caught by specific keyword matching. By analyzing the frequency of all command-line arguments used with these utilities across the enterprise, we can identify commands that are rarely ever used. A command targeting a security service that falls into a low-frequency bucket (e.g., bottom 1%) is highly suspicious and likely represents malicious activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Endpoint workstations and servers, particularly those hosting security management consoles, critical applications, and Domain Controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          CALCULATE frequency of all unique command-line combinations for ('sc.exe', 'net.exe', 'powershell.exe') interacting with services.
          ALERT if a command targets a security_service AND its frequency is in the bottom 1%.
  - question: "Can a machine learning model classify command lines targeting security processes as malicious?"
    context: "This question leverages supervised machine learning to distinguish between benign and malicious command-line activity. By training a model on features like character entropy, length, obfuscation patterns (e.g., base64), and argument structure, it can learn to identify malicious commands even if they are novel or heavily obfuscated. Applying this model to new process creation events provides a probabilistic score of maliciousness."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Endpoint workstations and servers, particularly those hosting security management consoles, critical applications, and Domain Controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          MODEL = TRAIN classification model (e.g., Random Forest) on labeled benign/malicious command lines.
          APPLY MODEL to new Sysmon Event 1 data.
          ALERT if model_prediction is 'malicious' with high probability AND command targets a security process.
  - question: "Has a security service unexpectedly crashed or terminated, followed shortly by suspicious reconnaissance or network activity on the same host?"
    context: "This question seeks to connect the dots between a potential defense evasion event (a service crash) and subsequent malicious actions. A successful exploit might cause the security tool to terminate, giving the attacker a window to perform discovery (e.g., running `whoami.exe`) or establish a C2 connection. This query correlates a service termination event with subsequent process creation or network connections to unknown destinations within a short time frame (e.g., 5 minutes)."
    answer_sources:
      - "Windows Event ID 1000"
      - "Windows Event ID 1001"
      - "Windows Event ID 4688"
      - "Windows Event ID 7034"
      - "Zeek conn.log"
      - "Sysmon Event ID 3"
      - "Endpoint workstations and servers, especially Domain Controllers and other high-value assets."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          TRIGGER on security service crash/termination (Event ID 7034, 1000, 1001).
          WITHIN 5 minutes on same host, CHECK FOR:
            a) Process creation (Event ID 4688) of recon tools ('whoami.exe', 'net.exe')
            OR
            b) Network connection (Sysmon Event 3) to an IP not seen in last 30 days.
          ALERT on match.
  - question: "Is there a statistically significant spike in security service crash events on any single host?"
    context: "This question aims to detect repeated, potentially unsuccessful attempts to exploit a security service. A brute-force or unstable exploit might cause the target service to crash multiple times in a short period. By tracking the rolling average of crash events per host, we can alert when the number of crashes in a given window exceeds a statistical threshold (e.g., 3 standard deviations above the mean), indicating an abnormal and suspicious pattern."
    answer_sources:
      - "Windows Event ID 1000"
      - "Windows Event ID 1001"
      - "Windows Event ID 7034"
      - "Endpoint workstations and servers, especially Domain Controllers and other high-value assets."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          FOR each host:
            CALCULATE 24-hour rolling average and std_dev of security service crashes (Event ID 7034, 1000).
            ALERT if crash_count in a 1-hour window > (average + 3 * std_dev).
  - question: "Can a sequence analysis model detect abnormal event sequences that include a security process termination?"
    context: "This question uses machine learning to understand the normal 'story' of events on a host and identify deviations. A typical exploit chain might involve a security process terminating, followed by a file being written to a temporary directory, and then a new outbound network connection. A sequence analysis model (like a Markov chain or LSTM) can learn normal event sequences and flag these low-probability, multi-stage attack chains as highly anomalous."
    answer_sources:
      - "Windows Event ID 1000"
      - "Windows Event ID 1001"
      - "Windows Event ID 4688"
      - "Windows Event ID 7034"
      - "Zeek conn.log"
      - "Sysmon Event ID 3"
      - "Endpoint workstations and servers, especially Domain Controllers and other high-value assets."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          MODEL = TRAIN sequence analysis model (e.g., LSTM autoencoder) on normal host event sequences (Sysmon, Windows Events).
          APPLY MODEL to new event sequences.
          ALERT on low-probability sequences, especially those containing: security_process_termination -> file_creation -> new_external_network_connection.
  - question: "Have we observed a successful process execution or network connection involving an indicator (file hash, IP, domain) that was previously blocked by one of our security tools?"
    context: "This question looks for direct evidence of a security control failure or bypass. If a firewall blocks a malicious IP but a host is later seen communicating with it, the control has been evaded. This query involves checking all successful activity logs (process execution, network connections) in real-time against a cached list of indicators that have recently triggered a 'block' alert."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Security tool alert logs"
      - "Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          CACHE 'block' alerts from all security tools (EDR, firewall, etc.)
          FOR each new successful process (Sysmon EID 1) or network connection (Zeek conn.log):
            CHECK if indicator (hash, IP, domain) exists in CACHE.
            ALERT on match.
  - question: "Has there been a sudden and sustained drop in the alert volume for a specific, previously active security rule?"
    context: "This question tries to detect a disabled security control by observing its silence. If a rule that consistently generates alerts suddenly stops, it may have been disabled or bypassed by an adversary. Using a change point detection algorithm on the time-series data of alert counts for each rule can automatically identify the exact moment such a significant drop occurs, pointing to a potential evasion."
    answer_sources:
      - "Security tool alert logs"
      - "Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          STREAM alert counts for each security rule into a time-series database.
          APPLY change point detection algorithm (e.g., PELT) to the time-series.
          ALERT on a detected change point that corresponds to a sudden, sustained drop in alert volume.
  - question: "Are there any high-volume security alerts whose current counts have fallen significantly below their forecasted levels?"
    context: "This question uses forecasting to predict the expected number of alerts and identify 'silent failures'. A time-series forecasting model can learn the normal patterns of alert volumes, including daily and weekly seasonality. If the actual number of alerts drops below the model's predicted lower bound for a sustained period, it suggests that the control is no longer functioning as expected, possibly due to adversary interference."
    answer_sources:
      - "Security tool alert logs"
      - "Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          MODEL = TRAIN time-series forecasting model (e.g., Prophet) for each high-volume alert type.
          ALERT if actual_alert_count falls below model's forecasted lower confidence interval for a sustained period.
  - question: "Has a process handling external content, like an email client or browser, written a file that was then loaded as a module by a security process?"
    context: "This question targets a specific exploitation technique where an attacker tricks a user into opening a malicious document or visiting a webpage, which then drops a malicious file (e.g., a DLL). This malicious file is subsequently loaded by a trusted security process, effectively bypassing application controls. The query correlates a file creation event from a process like Outlook or Chrome with a subsequent module load event of that same file by a security tool process."
    answer_sources:
      - "Sysmon Event ID 7"
      - "Sysmon Event ID 11"
      - "Endpoint workstations and servers, user home directories, temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp), and the C:\\ProgramData folder."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          JOIN events on the same host within 1 minute:
            1. File creation (Sysmon EID 11) by parent process ('WINWORD.EXE', 'CHROME.EXE') in a world-writable path.
            2. Image load (Sysmon EID 7) where loaded_image_path from Event 2 matches created_file_path from Event 1, AND loading_process is a known security tool.
          ALERT on match.
  - question: "Has any security process loaded a DLL from a statistically rare or suspicious file path?"
    context: "This question focuses on identifying anomalous module loading behavior based on file location. Security tools typically load their modules from protected system directories (e.g., Program Files). A security process loading a DLL from a user's temporary folder or download directory is extremely unusual and a strong indicator of compromise. This query involves baselining legitimate module load paths and alerting on any load from a statistically improbable location."
    answer_sources:
      - "Sysmon Event ID 7"
      - "Endpoint workstations and servers, user home directories, temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp), and the C:\\ProgramData folder."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          BASELINE legitimate DLL paths loaded by each security process from Sysmon Event 7.
          CALCULATE rarity of each loaded DLL's path.
          ALERT if a security process loads a DLL from a path with near-zero legitimate frequency (e.g., 'C:\\Users\\*\\AppData\\Local\\Temp\\*').
  - question: "Can a graph-based anomaly detection model identify event chains corresponding to a security tool being exploited?"
    context: "This question models host activity as an event graph to uncover complex attack paths. A sequence like an Office application creating a DLL, which is then loaded by an anti-virus engine, which then makes a new external network connection, forms a highly suspicious subgraph. Graph-based anomaly detection can automatically surface these improbable event chains, providing strong evidence of a successful exploit and bypass."
    answer_sources:
      - "Sysmon Event ID 7"
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Endpoint workstations and servers, user home directories, temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp), and the C:\\ProgramData folder."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |-
          CONSTRUCT a process-file-module-network event graph for each host.
          APPLY graph-based anomaly detection to identify improbable subgraphs.
          ALERT on high-scoring anomalous subgraphs, e.g., 'OUTLOOK.EXE -> creates -> payload.dll -> loaded by -> MsMpEng.exe -> connects to -> [Rare External IP]'.