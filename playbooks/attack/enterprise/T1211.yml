name: 'T1211: Exploitation for Defense Evasion'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: 'This playbook helps investigate whether an adversary is exploiting software vulnerabilities to disable or bypass defensive security controls. This can manifest as anomalous network traffic to or from security tools, direct command-line manipulation of security services, unexpected security software crashes followed by suspicious activity, evidence of blocked indicators later being allowed, or security tools loading malicious files written by other processes.'
type: 'technique'
related:
  - 'TA0005: Defense Evasion'
contributors:
  - 'Zachary Szewczyk'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: "Are there any network logs indicating known exploit signatures against our security software, or traffic to/from security management servers matching known malicious IOCs?"
    context: "This question looks for direct, signature-based evidence of an attack. It checks for alerts from network monitoring tools (like Zeek with ET Pro rules) that specifically identify exploits against security products. It also hunts for connections to or from our security management infrastructure that involve IP addresses or domains known to be used in active exploit campaigns. A positive match is a strong indicator of a targeted attempt to compromise our defenses."
    answer_sources:
      - "Zeek conn.log, Zeek http.log, Zeek files.log, Zeek notice.log. Data should be collected from Network egress points, VPN concentrators, internal network segments monitoring security tool management servers, and Cloud VPC flow logs monitoring traffic to/from security service management planes."
    range: "last 90 days"
    queries:
      - "pseudocode: search Zeek notice.log WHERE notice.note MATCHES [known security software exploit signatures] OR search Zeek conn.log, http.log WHERE (destination_ip IN [security management server IPs] OR source_ip IN [security management server IPs]) AND (destination_ip IN [malicious IOCs] OR source_ip IN [malicious IOCs])"
  - question: "Have any security agent management communications exhibited statistically anomalous payload sizes or data entropy levels compared to their historical baseline?"
    context: "This question seeks to find hidden or unknown exploits by looking for statistical deviations in network traffic. Legitimate management communication tends to be consistent. A sudden, significant increase in the size of a data packet or its entropy (randomness) can suggest that an attacker has injected a payload, like shellcode or an obfuscated command, into what would otherwise be normal traffic. This method can detect novel attacks that don't have a known signature."
    answer_sources:
      - "Zeek conn.log, Zeek http.log, Zeek files.log, Zeek notice.log. Data should be collected from Network egress points, VPN concentrators, internal network segments monitoring security tool management servers, and Cloud VPC flow logs monitoring traffic to/from security service management planes."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each security_agent_process: baseline = calculate_baseline(payload_size, entropy) from Zeek conn.log over last 30 days. SEARCH Zeek conn.log for new connections WHERE payload_size > 99.5th_percentile(baseline.payload_size) OR entropy > 99.5th_percentile(baseline.entropy)"
  - question: "Has a machine learning model detected anomalous network traffic patterns (e.g., unusual data volume, connection duration) for any security agent, suggesting it may be compromised or disabled?"
    context: "This question uses a machine learning model to understand the complex, normal behavior of a security agent's network activity over time. The model learns the typical relationships between features like data volume, connection length, and protocol usage. An alert is triggered if current activity significantly deviates from this learned norm. For example, a sudden spike in data sent could indicate exfiltration through a compromised agent, while a complete drop-off in traffic might mean the agent has been disabled."
    answer_sources:
      - "Zeek conn.log, Zeek http.log, Zeek files.log, Zeek notice.log. Data should be collected from Network egress points, VPN concentrators, internal network segments monitoring security tool management servers, and Cloud VPC flow logs monitoring traffic to/from security service management planes."
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY time-series anomaly detection model to Zeek conn.log features (bytes_sent, bytes_received, duration) for each security_agent. ALERT on high anomaly scores."
  - question: "Are there any process creation events showing command-line arguments used to directly stop, delete, or disable known security services or processes?"
    context: "This is a direct hunt for 'living-off-the-land' techniques where an adversary uses built-in system utilities (like sc.exe or powershell.exe) to tamper with security software. The query looks for specific commands that explicitly target security services by name (e.g., 'WinDefend', 'Sense'). It also checks for the execution of known tools designed specifically to kill antivirus or EDR products. A match is a high-confidence indicator of active defense evasion."
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1. Data collected from Endpoint workstations and servers, particularly those hosting security management consoles, critical applications, and Domain Controllers."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH Sysmon EID 1, Win EID 4688 WHERE command_line CONTAINS ('stop', 'delete', 'config', 'disable') AND command_line CONTAINS [security_service_names] OR process_name IN [security_bypass_tool_list]"
  - question: "Have any legitimate system utilities (like sc.exe or powershell.exe) been used to interact with security services in a statistically rare or unusual way?"
    context: "This question aims to find abuse of legitimate tools by identifying uncommon behavior. While an administrator might occasionally interact with a security service using sc.exe, certain command combinations are extremely rare in normal operations. By baselining all command-line usage across the enterprise, we can flag commands targeting security services that are statistically infrequent (e.g., in the bottom 1% of usage). This could indicate an adversary using a legitimate tool for a malicious purpose that deviates from standard administrative practice."
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1. Data collected from Endpoint workstations and servers, particularly those hosting security management consoles, critical applications, and Domain Controllers."
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE frequency of all command_line arguments for ('sc.exe', 'net.exe', 'powershell.exe'). ALERT if command_line targets a security_service AND its frequency is in the bottom 1% enterprise-wide."
  - question: "Has a machine learning model classified any command lines targeting security processes as likely malicious based on features like entropy, length, and obfuscation?"
    context: "This question uses a classification model trained to distinguish between good and bad command lines. The model analyzes various features, not just keywords. It looks at the command's length, character randomness (entropy), structural patterns, and signs of obfuscation (like Base64 encoding). When applied to new process creation events, if the model assigns a high probability of maliciousness to a command that interacts with a security process, it signals a likely evasion attempt, even if the command uses novel syntax."
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1. Data collected from Endpoint workstations and servers, particularly those hosting security management consoles, critical applications, and Domain Controllers."
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY command-line classification model to Sysmon EID 1 events. ALERT if prediction is 'malicious' AND command_line targets a security_process."
  - question: "Have any security services crashed or terminated unexpectedly, followed shortly thereafter on the same host by reconnaissance activity or network connections to new destinations?"
    context: "This question looks for a classic attack chain: exploit, disable, act. It correlates an event indicating a security service failure (like a crash or unexpected stop) with subsequent suspicious activity on the same machine. This follow-on activity could be the execution of discovery tools (e.g., whoami.exe) or an outbound network connection to a destination never seen before. The tight time window (5 minutes) makes a coincidental link unlikely, suggesting the service termination was a prerequisite for the adversary's next step."
    answer_sources:
      - "Windows Event ID 1000, Windows Event ID 1001, Windows Event ID 4688, Windows Event ID 7034, Zeek conn.log, Sysmon Event ID 3. Data collected from Endpoint workstations and servers, especially Domain Controllers and other high-value assets."
    range: "last 90 days"
    queries:
      - "pseudocode: CORRELATE (Win EID 7034, 1000, 1001 for security_service) with (Win EID 4688 for recon_tool OR Sysmon EID 3 to new_IP) on same host within 5 minutes."
  - question: "Has there been a statistically significant spike in the number of security service crashes or terminations on any single host?"
    context: "This question is designed to detect brute-force or repeated exploit attempts that may not succeed on the first try. By monitoring the rate of security service crash events on a per-host basis, we can establish a normal baseline of instability. A sudden burst of crashes that significantly exceeds this baseline (e.g., more than 3 standard deviations above the average) suggests that an automated exploit or tool is repeatedly trying to disable the service, causing it to crash over and over."
    answer_sources:
      - "Windows Event ID 1000, Windows Event ID 1001, Windows Event ID 4688, Windows Event ID 7034, Zeek conn.log, Sysmon Event ID 3. Data collected from Endpoint workstations and servers, especially Domain Controllers and other high-value assets."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each host: CALCULATE rolling_average and std_dev of security_service_crash_events (Win EID 7034, 1000) over 24 hours. ALERT if count in 1-hour window > (average + 3 * std_dev)."
  - question: "Has a machine learning model identified an improbable sequence of events on a host, such as a security process termination followed by file creation and a new external network connection?"
    context: "This question uses machine learning to understand the 'grammar' of normal host activity. A sequence analysis model learns which event sequences are common and which are not. It can then flag a series of actions that, while individually benign, are highly improbable in combination. A classic example of an anomalous sequence is: security process stops -> a new file is written to a temporary directory -> a new network connection is made to an external IP. This sequence strongly suggests a successful exploit, payload drop, and C2 beacon."
    answer_sources:
      - "Windows Event ID 1000, Windows Event ID 1001, Windows Event ID 4688, Windows Event ID 7034, Zeek conn.log, Sysmon Event ID 3. Data collected from Endpoint workstations and servers, especially Domain Controllers and other high-value assets."
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY sequence analysis model to host event logs (Sysmon, Windows Events, Zeek). ALERT on low-probability sequences containing a security_process_termination event."
  - question: "Have we observed a successful process execution or network connection involving an indicator (hash, IP, domain) that one of our security tools has recently reported as 'blocked'?"
    context: "This question seeks to find direct evidence of a security control failure or bypass. It operates on a simple but powerful premise: if one tool (like a firewall) says it blocked an IP address, another data source (like Zeek or Sysmon) should not see a successful connection to that same IP moments later. By correlating 'block' logs with 'allow' logs in near real-time, we can immediately detect when a control is not working as intended, indicating it has been disabled, misconfigured, or bypassed."
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, Sysmon Event ID 3, Zeek conn.log, Security tool alert logs. Data collected from Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies)."
    range: "last 90 days"
    queries:
      - "pseudocode: CACHE all 'block' indicators from security_tool_logs. FOR every new success event (Sysmon EID 1, Zeek conn.log), CHECK if indicator is in the block_cache. ALERT on match."
  - question: "Has there been a sudden and sustained drop in the alert volume for any of our major security rules, suggesting the control may have been disabled?"
    context: "This question looks for 'silent failures' by monitoring the health of security rules themselves. A rule that frequently triggers (e.g., 'Malicious Macro Blocked') and then suddenly stops generating alerts for a prolonged period may have been disabled or bypassed. Using a change point detection algorithm on the alert volume time-series can automatically identify the exact moment when the rule's behavior changed, pointing to a potential defense evasion event."
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, Sysmon Event ID 3, Zeek conn.log, Security tool alert logs. Data collected from Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies)."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each security_rule: STREAM alert_counts to time-series DB. APPLY change point detection algorithm. ALERT on detected change point that corresponds to a sustained drop in volume."
  - question: "Has the actual alert count for any high-volume security rule fallen significantly below its forecasted volume for a sustained period?"
    context: "This question uses a forecasting model to predict the expected number of alerts for a given security rule, accounting for normal fluctuations like time of day or day of the week. If the actual number of alerts received drops and stays below the model's predicted minimum (the lower confidence bound), it triggers an alert. This method is effective for detecting 'silent failures' where a control has been bypassed, as the absence of expected alerts becomes the signal of a problem."
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, Sysmon Event ID 3, Zeek conn.log, Security tool alert logs. Data collected from Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies)."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each security_alert_type: TRAIN forecasting model on historical alert counts. ALERT if actual_count falls below forecasted_lower_bound for a sustained period."
  - question: "Has a security tool process loaded a DLL or other module that was recently created on disk by a browser, email client, or office application?"
    context: "This question targets a specific vulnerability exploitation technique known as DLL side-loading or phantom DLL hijacking, where an attacker tricks a legitimate, trusted application into loading a malicious library. The query looks for a specific, high-risk chain of events: an internet-facing application (like Outlook or Chrome) writes a file (e.g., a DLL) to disk, and shortly after, a security process on the same machine loads that exact file into its memory space. This is highly anomalous and strongly indicates the security process has been compromised."
    answer_sources:
      - "Sysmon Event ID 7, Sysmon Event ID 11. Data collected from Endpoint workstations and servers, user home directories, temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp), and the C:\\ProgramData folder."
    range: "last 90 days"
    queries:
      - "pseudocode: CORRELATE (Sysmon EID 11 from browser/office_app) with (Sysmon EID 7 where loading_process is security_tool AND ImageLoaded matches TargetFilename) on same host within 1 minute."
  - question: "Have any security processes loaded a DLL from a statistically rare or suspicious file path, such as a user's temporary directory?"
    context: "This question leverages the fact that security software is typically rigid in its operation, loading its required modules from predictable, protected locations (like C:\\Program Files). By baselining all legitimate module loads for each security tool, we can easily spot outliers. A security process loading a DLL from a user's download folder, a temporary directory, or any other world-writable location is an extremely rare event and a powerful indicator of compromise."
    answer_sources:
      - "Sysmon Event ID 7, Sysmon Event ID 11. Data collected from Endpoint workstations and servers, user home directories, temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp), and the C:\\ProgramData folder."
    range: "last 90 days"
    queries:
      - "pseudocode: BASELINE legitimate DLL paths for each security_process from Sysmon EID 7. ALERT if a security_process loads a DLL from a path NOT in baseline (e.g., 'C:\\Users\\*\\AppData\\Local\\Temp\\*')."
  - question: "Has a graph-based anomaly detection model identified an improbable chain of events, such as an office application creating a file that is loaded by a security process which then makes a rare external network connection?"
    context: "This question uses a sophisticated graph-based model to connect disparate host and network events into a single narrative. The model builds a graph of all interactions (process-creates-file, process-loads-module, process-makes-connection). It then searches for subgraphs or paths that are highly improbable based on learned normal activity. An anomalous path like OUTLOOK.EXE -> creates -> payload.dll -> loaded by -> MsMpEng.exe -> connects to -> rare-IP provides a complete, high-confidence picture of a successful exploit, from initial entry to C2 communication, all linked through the compromised security tool."
    answer_sources:
      - "Sysmon Event ID 7, Sysmon Event ID 11. Data collected from Endpoint workstations and servers, user home directories, temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp), and the C:\\ProgramData folder."
    range: "last 90 days"
    queries:
      - "pseudocode: CONSTRUCT event graph from Sysmon and Zeek data. APPLY graph anomaly detection. ALERT on improbable subgraphs like (process -> creates -> file -> loaded by -> security_tool -> connects to -> rare_IP)."