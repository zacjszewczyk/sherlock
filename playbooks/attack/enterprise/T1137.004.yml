name: T1137.004: Outlook Home Page
id: 5698b63e-6380-4560-845b-389f53833d77
description: Investigates if an adversary is maintaining persistence using Outlook Home Pages. This involves looking for outbound network connections from OUTLOOK.EXE to malicious or rare domains, anomalous network activity patterns, modifications to the Outlook WebView registry key (especially by suspicious processes), the spawning of script interpreters or shells from Outlook with malicious command-line arguments, connections to newly registered domains, and the creation of unexpected child processes by Outlook.exe.
type: technique
related:
  - TA0003: Persistence
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Has the OUTLOOK.EXE process made a network connection to a known malicious IP or domain?
    context: This question aims to detect direct command and control (C2) or data exfiltration channels established by a compromised Outlook Home Page. By correlating outbound connections from Outlook with high-confidence threat intelligence, we can quickly identify connections to known malicious infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - Windows Event ID 4688
      - User workstations
      - Network egress points (e.g., firewalls, proxies)
      - DNS resolvers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH host_logs (WinEventID:3)
          WHERE process_image ENDS_WITH "OUTLOOK.EXE"
          JOIN destination_ip, destination_hostname WITH threat_intelligence_feed
          RETURN matches
  - question: Is the OUTLOOK.EXE process connecting to an unusually rare domain compared to the rest of the enterprise?
    context: Adversaries often use unique or newly created domains for C2 that are not visited by other users in the organization. Identifying connections from Outlook to domains that are statistical outliers (i.e., very rarely visited) can uncover these suspicious channels, even if the domain is not yet on a threat intelligence feed.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - Windows Event ID 4688
      - User workstations
      - Network egress points (e.g., firewalls, proxies)
      - DNS resolvers
    range: Last 30 days
    queries:
      - search_technology: pseudocode
        query: |
          BASELINE = SEARCH network_connections (last 30 days) WHERE process_name == "OUTLOOK.EXE" | COUNT by destination_domain
          SEARCH network_connections WHERE process_name == "OUTLOOK.EXE" AND destination_domain IN 5th_percentile(BASELINE)
          RETURN rare_connections
  - question: Is there an anomalous spike in the number of network connections from a user's OUTLOOK.EXE process?
    context: A compromised Outlook Home Page might initiate a large number of network connections for tasks like data exfiltration or downloading additional payloads. This question uses time-series analysis to model a user's normal Outlook network activity and flags significant deviations that could indicate malicious behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - Windows Event ID 4688
      - User workstations
      - Network egress points (e.g., firewalls, proxies)
      - DNS resolvers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each_user:
            MODEL = train_timeseries_model(user_outlook_connections_per_hour)
            CURRENT_COUNT = count_user_outlook_connections(last_hour)
            IF CURRENT_COUNT > MODEL.predict_upper_bound()
              ALERT user, CURRENT_COUNT
  - question: Was the Outlook Home Page URL registry key modified by a suspicious process like a script interpreter?
    context: The Outlook Home Page is configured via a specific registry key. Legitimate modifications are typically performed by Office updaters or installers. This question focuses on identifying modifications made by untrusted processes, such as PowerShell or cscript, which is a strong indicator that an adversary is attempting to establish persistence.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 13
      - User workstations
      - Citrix/VDI servers
      - Microsoft Exchange Servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH registry_events (WinEventID:4657 OR SysmonID:13)
          WHERE object_name CONTAINS "\\Outlook\\WebView\\" AND value_name == "URL"
          AND process_name IN ("powershell.exe", "cscript.exe", "mshta.exe") OR process_name NOT IN (trusted_installer_list)
          RETURN suspicious_modifications
  - question: Has the Outlook Home Page URL registry key been modified by a process that rarely performs this action across the organization?
    context: This question uses rarity analysis to find unusual behavior. Even if a process isn't inherently malicious, it may be suspicious if it modifies the Outlook Home Page registry key on only one or two machines in the entire enterprise. This approach helps find custom malware or tools that are not widely distributed.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 13
      - User workstations
      - Citrix/VDI servers
      - Microsoft Exchange Servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          PROCESS_PREVALENCE = CALCULATE prevalence of processes modifying "\\Outlook\\WebView\\" key
          SEARCH registry_events WHERE object_name CONTAINS "\\Outlook\\WebView\\"
          AND PREVALENCE(process_name) < 1%
          RETURN rare_process_modifications
  - question: Can machine learning classify a modification to the Outlook Home Page URL registry key as malicious?
    context: This question applies a supervised machine learning model to distinguish between benign and malicious registry modifications. By training a classifier on features like the modifying process, its parent, and the time of day, the system can learn to identify complex malicious patterns that simple rules might miss.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 13
      - User workstations
      - Citrix/VDI servers
      - Microsoft Exchange Servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each_registry_modification_event:
            FEATURES = extract_features(process_name, parent_process, file_path, time_of_day)
            SCORE = random_forest_model.predict(FEATURES)
            IF SCORE == "malicious"
              ALERT event
  - question: Has OUTLOOK.EXE spawned a script interpreter with suspicious command-line arguments?
    context: It is highly irregular for Outlook to launch a command shell or script interpreter. When it does, and the command line contains keywords associated with downloading or executing code (like 'IEX' or '-enc' for encoded PowerShell), it is a very strong signal of malicious activity, likely triggered by the compromised Home Page.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH process_creation_events (WinEventID:4688 OR SysmonID:1)
          WHERE parent_process == "OUTLOOK.EXE" AND child_process IN ("powershell.exe", "cmd.exe", "mshta.exe")
          AND command_line CONTAINS ("DownloadString", "-enc", "IEX", "http:")
          RETURN suspicious_child_processes
  - question: Did OUTLOOK.EXE spawn a process with a highly randomized or obfuscated command line?
    context: Adversaries often obfuscate or encode their command-line payloads to evade simple keyword-based detection. These obfuscated commands typically have high entropy (a measure of randomness). This question aims to detect such commands by flagging any child process of Outlook whose command line is statistically more random than usual.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH process_creation_events WHERE parent_process == "OUTLOOK.EXE"
          CALCULATE entropy(command_line)
          IF entropy > 99th_percentile_of_baseline
            ALERT event
  - question: Did OUTLOOK.EXE spawn a process with a command line that is anomalous compared to a baseline of normal activity?
    context: This question uses an unsupervised machine learning model (One-Class SVM) to identify anomalous command lines without needing pre-labeled malicious examples. The model learns what "normal" command lines from Outlook's child processes look like and then flags any new command that deviates significantly from that learned norm.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each_new_process_from_outlook:
            VECTOR = tf_idf_vectorize(command_line)
            ANOMALY_SCORE = one_class_svm_model.predict(VECTOR)
            IF ANOMALY_SCORE == "outlier"
              ALERT event
  - question: Is OUTLOOK.EXE connecting to a newly registered domain or a dynamic DNS provider?
    context: Adversaries frequently use newly registered domains (NRDs) or dynamic DNS (DDNS) services for their C2 infrastructure because they are cheap and disposable. This question checks the registration date and hosting provider for every domain contacted by Outlook, flagging connections to these high-risk categories of domains.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - User workstations
      - Network egress points
      - DNS resolvers
      - Threat intelligence platforms (for domain enrichment)
    range: Last 30 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH dns_logs WHERE process_name == "OUTLOOK.EXE"
          FOR each_queried_domain:
            DOMAIN_INFO = enrich_with_whois(queried_domain)
            IF DOMAIN_INFO.creation_date < 30_days_ago OR DOMAIN_INFO.is_ddns == TRUE
              ALERT connection
  - question: Has the set of domains contacted by a user's OUTLOOK.EXE process changed significantly from their historical baseline?
    context: Users typically have a relatively stable pattern of network activity from Outlook. A sudden, drastic change in the domains being contacted can indicate a compromise. This question uses the Jaccard similarity index to quantify this change, alerting when a user's daily domain activity becomes highly dissimilar to their historical activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - User workstations
      - Network egress points
      - DNS resolvers
      - Threat intelligence platforms (for domain enrichment)
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each_user:
            HISTORICAL_DOMAINS = get_outlook_domains_for_user(last 90 days)
            DAILY_DOMAINS = get_outlook_domains_for_user(last 24 hours)
            SIMILARITY = jaccard_index(HISTORICAL_DOMAINS, DAILY_DOMAINS)
            IF SIMILARITY < 0.2
              ALERT user, SIMILARITY
  - question: Is a network connection from OUTLOOK.EXE anomalous based on a machine learning model of the user's typical behavior?
    context: This question builds a sophisticated behavioral baseline for each user's Outlook network activity using a machine learning model. It considers features like destination port, protocol, and data volume. The model can then identify new connections that are outliers compared to this multi-faceted baseline, catching suspicious activity that might not be captured by simpler rules.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - User workstations
      - Network egress points
      - DNS resolvers
      - Threat intelligence platforms (for domain enrichment)
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each_user:
            MODEL = train_one_class_svm(user_historical_connections)
            FOR each_new_connection:
              ANOMALY_SCORE = MODEL.predict(new_connection_features)
              IF ANOMALY_SCORE == "outlier"
                ALERT new_connection
  - question: Did OUTLOOK.EXE create a child process that is not on the approved allowlist?
    context: Outlook typically only spawns a limited and predictable set of child processes (e.g., Word, Excel, a web browser) when a user opens attachments or links. This question leverages a simple but highly effective allowlist to detect any unexpected or unauthorized process being launched by Outlook, which is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          ALLOWLIST = ["WINWORD.EXE", "EXCEL.EXE", "msedge.exe", "acrord32.exe"]
          SEARCH process_creation_events WHERE parent_process == "OUTLOOK.EXE"
          AND child_process NOT IN ALLOWLIST
          RETURN suspicious_child_process
  - question: Has OUTLOOK.EXE spawned a child process that is statistically rare across the enterprise?
    context: This question extends the allowlist concept by using enterprise-wide data to find rare parent-child process relationships. Instead of a manually curated list, it identifies processes launched by Outlook that are uncommon across all monitored endpoints. This can help detect targeted attacks or tools that are not part of a standard software suite.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          PREVALENCE = calculate_prevalence_of_outlook_child_processes()
          SEARCH process_creation_events WHERE parent_process == "OUTLOOK.EXE"
          AND PREVALENCE(child_process) < 0.5%
          RETURN rare_child_process
  - question: Is a process creation event from OUTLOOK.EXE a statistical outlier when compared to normal activity clusters?
    context: This question uses an unsupervised clustering algorithm (DBSCAN) to automatically group similar, legitimate process creation events from Outlook into clusters. Any event that doesn't fit into a dense cluster is flagged as noise or an outlier. This is a powerful method for detecting novel or unusual malicious activity without prior knowledge or explicit rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: Last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          EVENTS = get_outlook_process_creation_events()
          FEATURES = extract_features(EVENTS)
          CLUSTERS, OUTLIERS = dbscan_cluster(FEATURES)
          RETURN OUTLIERS