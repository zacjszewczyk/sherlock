name: T1195.003: Compromise Hardware Supply Chain
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps to identify if an adversary has gained initial access via a compromised hardware supply chain. It focuses on detecting several key indicators of compromise, including network connections from newly provisioned assets to known or statistically rare command and control (C2) infrastructure; the execution or network transfer of files whose hashes match known firmware-level malware; network traffic exhibiting strong, automated beaconing characteristics or using suspicious TLS/DNS patterns; network activity occurring after a system boot but before the first user logon; logged boot integrity failures (such as Secure Boot or BitLocker errors), especially on new devices; and time-correlated sequences of events involving a boot error, the execution of an unsigned process, and a subsequent network connection to a suspicious destination.
type: technique
related:
  - TA0001: Initial Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are newly provisioned assets communicating with known hardware implant C2 infrastructure?
    context: This question focuses on identifying high-confidence threats early in a device's lifecycle. Compromised hardware often 'calls home' shortly after being powered on and connected to a network. By correlating network logs from new assets (e.g., deployed within 30 days) against a curated threat intelligence list of C2 indicators, we can detect potential hardware implants before they can be used for further malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Asset Inventory Database
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - type: pseudocode
        query: SEARCH network_logs AND asset_inventory WHERE asset.provision_date < 30_days_ago AND (network.destination_ip IN threat_intel_c2_ips OR network.dns_query IN threat_intel_c2_domains)
  - question: Are newly provisioned assets communicating with statistically rare destinations (ASNs or countries)?
    context: This question uses anomaly detection to find suspicious connections that might not appear on known threat intelligence feeds. Hardware implants may use novel C2 infrastructure. By establishing a baseline of normal network destinations and flagging connections from new assets to exceptionally rare locations (based on ASN or geography), we can uncover these unknown C2 channels.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Asset Inventory Database
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - type: pseudocode
        query: SEARCH network_logs FROM new_assets; ENRICH destination_ip with ASN/geo; CALCULATE baseline frequency for all ASN/geo; ALERT if connection_destination_rarity < 0.01%
  - question: Can a machine learning model identify outbound connections from new assets that have a high probability of being C2 traffic?
    context: This question leverages machine learning to automate the detection of complex C2 patterns that are difficult to define with simple rules. By training a model on various network connection features (port, protocol, TLS fingerprints, reputation, rarity), it can learn to distinguish between benign and malicious traffic from new hardware, providing a sophisticated method for flagging suspicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Asset Inventory Database
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - type: pseudocode
        query: SCORE network_connections from new_assets using ML_model(features=[port, protocol, ja3, ip_rep, asn_rarity, etc.]); ALERT if score > threshold
  - question: Are any files being executed or transferred on the network that match known hashes for firmware malware or supply chain attack tools?
    context: This is a direct threat intelligence matching approach. Firmware-level malware or tools used in supply chain attacks often have known file hashes. By continuously monitoring process creation events (on endpoints) and network file transfers for these specific hashes, we can detect the presence of known malicious components with high confidence.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek files.log
      - Endpoint Devices (Workstations, Servers)
    range: last 90 days
    queries:
      - type: pseudocode
        query: SEARCH process_creation_logs OR network_file_logs WHERE file_hash IN threat_intel_supply_chain_hashes; ALERT on match
  - question: Are any extremely rare and unsigned files being executed from high-entropy file paths?
    context: This question seeks to identify previously unknown malware by focusing on anomalous characteristics. Malware is often not signed, is unique to a small number of hosts, and may reside in obfuscated or randomized file paths (high entropy). Combining these three weak signals—rarity, lack of a digital signature, and high path entropy—creates a stronger indicator of potentially malicious activity that warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek files.log
      - Endpoint Devices (Workstations, Servers)
    range: last 90 days
    queries:
      - type: pseudocode
        query: SEARCH process_creation_logs WHERE file.is_signed=false; CALCULATE file_hash_prevalence AND file_path_entropy; ALERT if prevalence < 3_hosts AND path_entropy > 95th_percentile
  - question: Can a machine learning model predict if a file execution event is malicious based on its characteristics?
    context: This question aims to create a predictive risk model for file executions. By training a classifier on features like hash prevalence, signer validity, and file/path entropy, the model can learn to score the risk of any new file execution. This automates the process of identifying suspicious executions that might otherwise be missed by signature-based or simple rule-based detection.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek files.log
      - Endpoint Devices (Workstations, Servers)
    range: last 90 days
    queries:
      - type: pseudocode
        query: SCORE file_execution_events using ML_model(features=[hash_prevalence, signer_validity, path_entropy, parent_process, etc.]); ALERT if score > threshold
  - question: Is any network traffic using TLS fingerprints (JA3/JA3S) or making DNS queries associated with known firmware implant C2 frameworks?
    context: This question provides a method for identifying specific malware families or C2 frameworks based on their unique network signatures. Certain malicious tools use specific TLS libraries or DNS query patterns. Matching JA3/JA3S hashes or DNS queries against a curated watchlist of these indicators can reveal the presence of a known threat.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress Points, DNS Resolvers, SSL/TLS Inspection Points
    range: last 90 days
    queries:
      - type: pseudocode
        query: SEARCH network_ssl_logs OR network_dns_logs WHERE (ssl.ja3 IN ja3_watchlist OR ssl.ja3s IN ja3s_watchlist OR dns.query IN dns_watchlist); ALERT on match
  - question: Is any host exhibiting highly regular, automated network communication indicative of beaconing?
    context: This question seeks to identify C2 communication by its non-human, automated behavior. Malicious implants often check in with their C2 server at fixed intervals with similar amounts of data. By calculating the standard deviation of time between connections and bytes sent for each source-destination pair, we can flag communication that is exceptionally periodic and consistent, which is a strong sign of automated beaconing.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress Points, DNS Resolvers, SSL/TLS Inspection Points
    range: last 90 days
    queries:
      - type: pseudocode
        query: FOR each source-destination_pair over 24h, CALCULATE stdev(time_delta) AND stdev(bytes_sent); ALERT if stdev(time_delta) < 1st_percentile AND stdev(bytes_sent) < 1st_percentile
  - question: Can we identify small clusters of devices communicating in a similar, anomalous, and periodic manner?
    context: This question uses advanced analytics to find coordinated C2 activity. A Fast Fourier Transform (FFT) can detect periodic signals (beaconing) in a host's network traffic. By then clustering hosts based on these beaconing features (e.g., frequency, payload size, JA3), we can identify small groups of devices that have likely been compromised by the same threat actor and are communicating in concert.
    answer_sources:
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress Points, DNS Resolvers, SSL/TLS Inspection Points
    range: last 90 days
    queries:
      - type: pseudocode
        query: APPLY FFT to host_traffic to get beaconing_features; CLUSTER hosts using DBSCAN on beaconing_features; ALERT on small, anomalous clusters
  - question: Is any host making external network connections on non-standard ports after booting but before a user logs in?
    context: This question targets malware designed to activate at boot time, before user activity or some security controls are fully engaged. Legitimate pre-logon network activity is typically predictable (e.g., DHCP, NTP). An alert for any connection to an external IP on an unusual port during this specific time window can be a high-fidelity indicator of a boot-persistent implant.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 6005
      - Windows Event ID 4624
      - Sysmon Event ID 3
      - Endpoint devices, Servers, Network Egress Points, Domain Controller Authentication Logs
    range: last 90 days
    queries:
      - type: pseudocode
        query: DETECT time_window between boot_event (EID 6005) and logon_event (EID 4624); SEARCH for external_network_connection (Sysmon EID 3) within this window WHERE port NOT IN (80, 443, 53, 123); ALERT on match
  - question: Is any host exhibiting pre-logon network activity that significantly deviates from its established baseline?
    context: This question uses behavioral baselining to detect anomalous pre-logon activity. By creating a profile of normal network behavior (ports, protocols, data volume) for different asset groups before a user logs on, we can use statistical methods (like Z-score) to detect significant deviations. A host sending an unusually large amount of data externally before logon, for example, is highly suspicious.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 6005
      - Windows Event ID 4624
      - Sysmon Event ID 3
      - Endpoint devices, Servers, Network Egress Points, Domain Controller Authentication Logs
    range: last 90 days
    queries:
      - type: pseudocode
        query: ESTABLISH baseline of pre-logon_network_activity per asset_group; FOR each host, CALCULATE z_score(pre-logon_data_volume) against group_mean; ALERT if z_score > 3
  - question: Can a neural network model detect anomalous pre-logon network sessions?
    context: This question applies unsupervised machine learning to detect novel threats. An autoencoder neural network can be trained to 'learn' the complex patterns of normal pre-logon network sessions. When a new session occurs that the model cannot accurately reconstruct, it signals a high reconstruction error, indicating the session is anomalous and does not conform to legitimate pre-boot activity.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 6005
      - Windows Event ID 4624
      - Sysmon Event ID 3
      - Endpoint devices, Servers, Network Egress Points, Domain Controller Authentication Logs
    range: last 90 days
    queries:
      - type: pseudocode
        query: TRAIN autoencoder on normal_pre-logon_session_vectors; SCORE new pre-logon sessions; ALERT if reconstruction_error > threshold
  - question: Has a boot integrity failure occurred on a device that recently had a hardware change?
    context: This question directly links a potential hardware compromise with a symptom of that compromise. A Secure Boot failure or BitLocker recovery event indicates the boot process has been tampered with. Correlating this event with a recent hardware change (e.g., new component installed in the last 90 days) provides strong, contextual evidence of a potential hardware supply chain attack.
    answer_sources:
      - Microsoft-Windows-CodeIntegrity/Operational Event ID 3077
      - Microsoft-Windows-BitLocker-Driver/Operational Event ID 24620
      - System Log TPM Event ID 15
      - Endpoint Device Event Logs, Server Event Logs, Physical Asset Management Database
    range: last 90 days
    queries:
      - type: pseudocode
        query: SEARCH for boot_integrity_failure_events (e.g., CodeIntegrity 3077); ENRICH alert with asset_inventory_data; ALERT if host had hardware_change in last 90 days
  - question: Is there a statistically significant spike in boot integrity errors across the enterprise or for a specific hardware model?
    context: This question looks for widespread issues by monitoring boot error trends. A sudden increase in boot integrity failures across the entire organization, or concentrated on a specific hardware model, could indicate a bad batch of components or a large-scale, targeted supply chain attack. This provides an early warning at a macro level.
    answer_sources:
      - Microsoft-Windows-CodeIntegrity/Operational Event ID 3077
      - Microsoft-Windows-BitLocker-Driver/Operational Event ID 24620
      - System Log TPM Event ID 15
      - Endpoint Device Event Logs, Server Event Logs, Physical Asset Management Database
    range: last 90 days
    queries:
      - type: pseudocode
        query: CALCULATE daily count of boot_integrity_errors; APPLY time-series anomaly detection; ALERT if daily_count > 3 standard_deviations from moving_average
  - question: Is a time-series model detecting an abnormal increase in boot errors for any specific hardware model?
    context: This question provides a more sophisticated approach to trend analysis for specific asset groups. By applying a dedicated time-series anomaly detection algorithm (like Seasonal Hybrid ESD) to the daily boot error counts for each major hardware model, we can more accurately identify statistically significant spikes that are specific to that model, pointing to a targeted supply chain issue.
    answer_sources:
      - Microsoft-Windows-CodeIntegrity/Operational Event ID 3077
      - Microsoft-Windows-BitLocker-Driver/Operational Event ID 24620
      - System Log TPM Event ID 15
      - Endpoint Device Event Logs, Server Event Logs, Physical Asset Management Database
    range: last 90 days
    queries:
      - type: pseudocode
        query: FOR each hardware_model, APPLY seasonal_esd_algorithm to daily_boot_error_counts; ALERT if statistically_significant_spike is detected
  - question: Has a host experienced a boot integrity error, followed by an unsigned process execution, and then a connection to a known-bad IP, all within minutes?
    context: This question uses event correlation to build a high-confidence attack narrative. A single one of these events might be benign, but their occurrence in a tight sequence on the same host—tampered boot, followed by execution of untrusted code, followed by a C2 connection—is a powerful indicator of a successful hardware-level compromise and subsequent malicious activity.
    answer_sources:
      - Microsoft-Windows-BitLocker-Driver Event ID 24620
      - Sysmon Event ID 1
      - Zeek conn.log
      - Threat Intelligence Feed
      - SIEM/Log Aggregator, Endpoint Device Logs, Network Sensor Logs
    range: last 90 days
    queries:
      - type: pseudocode
        query: SIEM_CORRELATION_RULE: TRIGGER if on same host, event_A (boot_error) is followed by event_B (unsigned_process_exec) within 5m, followed by event_C (connection_to_bad_ip) within 1m
  - question: Does any host have a composite risk score exceeding a high threshold based on a series of suspicious events?
    context: This question uses a risk scoring model to aggregate multiple weak signals into a stronger alert. Instead of a rigid correlation rule, this approach assigns points to various suspicious events (boot error, unsigned execution, rare destination) within a time window. If a host's total score surpasses a dynamic threshold, it suggests a confluence of suspicious activity that, taken together, is likely malicious.
    answer_sources:
      - Microsoft-Windows-BitLocker-Driver Event ID 24620
      - Sysmon Event ID 1
      - Zeek conn.log
      - Threat Intelligence Feed
      - SIEM/Log Aggregator, Endpoint Device Logs, Network Sensor Logs
    range: last 90 days
    queries:
      - type: pseudocode
        query: FOR each host, CALCULATE risk_score = (points_for_boot_error + points_for_unsigned_exec + ...); ALERT if risk_score > 99.9th_percentile_of_all_scores
  - question: Can a Hidden Markov Model detect a sequence of events indicating a transition from a benign to a compromised state?
    context: This question employs a sophisticated probabilistic model to understand the state of a system. A Hidden Markov Model (HMM) can be trained to recognize sequences of events (log entries) that correspond to a transition between hidden states (e.g., from 'Benign Boot' to 'Compromised Boot' to 'C2 Active'). Flagging a log sequence that has a high probability of matching this malicious state transition provides a high-confidence detection of a full compromise chain.
    answer_sources:
      - Microsoft-Windows-BitLocker-Driver Event ID 24620
      - Sysmon Event ID 1
      - Zeek conn.log
      - Threat Intelligence Feed
      - SIEM/Log Aggregator, Endpoint Device Logs, Network Sensor Logs
    range: last 90 days
    queries:
      - type: pseudocode
        query: PROCESS log_sequences with trained HMM; ALERT if sequence has high probability of 'Compromised Boot' -> 'C2 Active' state transition