name: T1547.001: Registry Run Keys - Startup Folder
id: f8a9b1c2-d3e4-4f5a-6b7c-8d9e0f1a2b3c
description: This playbook focuses on detecting adversaries who maintain persistence or escalate privileges by adding entries to Registry Run Keys or Startup Folders. These locations are automatically executed at boot or user logon. The playbook provides investigative questions to identify this activity through various means, including matching against threat intelligence, statistical analysis of rarity and entropy, machine learning models to classify maliciousness, and parsing command lines for obfuscation or LOLBAS usage. It also covers correlating startup events with suspicious network activity, monitoring for unauthorized modifications to legitimate startup items, and detecting privilege escalation scenarios where low-privilege users create items that are later executed by high-privilege accounts.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a new startup item a known indicator of compromise (IOC)?
  context: This is a high-fidelity check to determine if a newly created file, shortcut, or registry value in a startup location matches a known malicious hash, path, or value from threat intelligence feeds. A positive match is a strong indicator of compromise by a known threat actor or malware family.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - All workstations and servers; Registry hives including HKLM\Software\Microsoft\Windows\CurrentVersion\Run, HKCU\Software\Microsoft\Windows\CurrentVersion\Run; Filesystem paths including C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup, C:\Users\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
  range: last 90 days
  queries:
  - pseudocode: SEARCH (Sysmon EID 13 OR WinEvent 4657 OR Sysmon EID 11 OR WinEvent 4663) WHERE (target is Run/RunOnce key OR target is Startup folder) -> EXTRACT (file_hash OR registry_value) -> QUERY ThreatIntelAPI(extracted_value) -> ALERT IF match_confidence > 80%
- question: Is a new startup item statistically rare or does it have a high-entropy filename?
  context: Adversaries often use randomly generated or unique filenames and paths to evade signature-based detections. This question helps identify novel threats by flagging startup items that have a very low prevalence across the enterprise or that have complex, random-looking filenames, which are uncharacteristic of legitimate software.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - All workstations and servers; Registry hives including HKLM\Software\Microsoft\Windows\CurrentVersion\Run, HKCU\Software\Microsoft\Windows\CurrentVersion\Run; Filesystem paths including C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup, C:\Users\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
  range: last 90 days
  queries:
  - pseudocode: SEARCH new startup items -> CALCULATE prevalence(count(hosts)/total_hosts) and filename_entropy -> ALERT IF prevalence < 5th_percentile AND entropy > 95th_percentile
- question: Does a machine learning model classify a new startup item as malicious based on its features?
  context: This question leverages a data science approach to detect complex threats. By feeding a variety of features (e.g., file size, entropy, digital signature status, parent process) into a trained classification model, this method can identify malicious startup items that might not trigger simpler rule-based alerts.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - All workstations and servers; Registry hives including HKLM\Software\Microsoft\Windows\CurrentVersion\Run, HKCU\Software\Microsoft\Windows\CurrentVersion\Run; Filesystem paths including C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup, C:\Users\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
  range: last 90 days
  queries:
  - pseudocode: ON new startup item -> EXTRACT features (filesize, entropy, imphash, signature, parent_process, etc.) -> INPUT to ML_Model -> ALERT IF prediction_score > 0.85
- question: Does a new or modified startup item's command line contain signs of obfuscation or LOLBAS usage?
  context: Adversaries frequently use encoded commands (e.g., PowerShell -enc), hidden windows, and legitimate system utilities (Living-Off-the-Land Binaries, or LOLBAS) to execute malicious code while blending in. This question hunts for these specific patterns within the command lines of startup items.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 13
  - Zeek conn.log
  - Zeek dns.log
  - All corporate workstations and servers; User profile directories (e.g., C:\Users\Public, C:\Users\*\AppData\Local\Temp); System-wide temporary directories (e.g., C:\Windows\Temp); Network egress points
  range: last 90 days
  queries:
  - pseudocode: SEARCH (Sysmon EID 1 OR WinEvent 4688 OR Sysmon EID 13 OR WinEvent 4657) -> PARSE command_line/registry_value -> REGEX_MATCH for ('powershell -enc', 'certutil.exe', 'mshta.exe http:', etc.) -> ALERT IF match
- question: Is the command line of a startup process statistically anomalous in length or entropy, or was it created by an unusual parent process?
  context: Malicious command lines are often unusually long or contain randomized, high-entropy strings. Furthermore, a process like Microsoft Word creating a Run key is highly suspicious. This question combines statistical analysis of the command line with parent process monitoring to find outliers.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 13
  - Zeek conn.log
  - Zeek dns.log
  - All corporate workstations and servers; User profile directories (e.g., C:\Users\Public, C:\Users\*\AppData\Local\Temp); System-wide temporary directories (e.g., C:\Windows\Temp); Network egress points
  range: last 90 days
  queries:
  - pseudocode: SEARCH startup process command lines -> CALCULATE length and entropy -> ALERT IF length > 95th_percentile OR entropy > 95th_percentile -> ENRICH with parent process -> INCREASE_SCORE IF parent is rare (e.g., winword.exe)
- question: Does a clustering model identify a startup item's command line as a novel or outlier pattern?
  context: This analytic automatically groups common, legitimate command-line patterns together. Any command that doesn't fit into a known good cluster is flagged as an outlier or "noise point," which is an effective way to detect new or unusual adversary techniques without needing predefined signatures.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 13
  - Zeek conn.log
  - Zeek dns.log
  - All corporate workstations and servers; User profile directories (e.g., C:\Users\Public, C:\Users\*\AppData\Local\Temp); System-wide temporary directories (e.g., C:\Windows\Temp); Network egress points
  range: last 90 days
  queries:
  - pseudocode: INPUT all startup command lines (vectorized) into DBSCAN_model -> IDENTIFY noise points (outliers) -> ALERT on any new noise point
- question: Did a process launched from a startup location make a network connection to a known malicious destination shortly after execution?
  context: A common malware pattern is to establish persistence and then immediately call back to a command-and-control (C2) server. This question directly hunts for that behavior by correlating the startup event with subsequent network traffic and checking the destination against threat intelligence.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - All corporate workstations and servers; Network egress points (e.g., firewalls, proxies); DNS servers
  range: last 90 days
  queries:
  - pseudocode: CORRELATE (Sysmon EID 1 FROM startup_location) with (Sysmon EID 3 OR Zeek conn.log WITHIN 60s) -> EXTRACT destination_ip/domain -> QUERY ThreatIntelAPI(destination) -> ALERT IF match OR port is non-standard
- question: Is a rare startup process making a network connection to a geographically or organizationally unusual destination?
  context: This analytic combines two rarity factors. A process that is rarely seen in a startup location that also connects to a destination (e.g., a country or Autonomous System) that the host has never communicated with before is a very strong signal of a new C2 channel being established.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - All corporate workstations and servers; Network egress points (e.g., firewalls, proxies); DNS servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH startup processes -> CALCULATE process_prevalence -> IF prevalence < 5_hosts -> ANALYZE network connections -> CALCULATE destination_ASN/country_rarity -> ALERT IF combined_score is high
- question: Does the network traffic pattern of a startup process deviate from its established historical baseline?
  context: Legitimate startup processes that connect to the internet (e.g., for updates) usually have predictable patterns. This model learns that normal behavior and alerts on deviations, such as a sudden large data exfiltration or a change in C2 beaconing frequency, which could indicate active C2 communications.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - All corporate workstations and servers; Network egress points (e.g., firewalls, proxies); DNS servers
  range: last 90 days
  queries:
  - pseudocode: FOR each startup process -> MODEL network traffic (bytes_out, conn_frequency) using ARIMA -> ALERT IF current_activity significantly deviates from predicted_baseline
- question: Has a known-good startup item been modified, or have its permissions been changed to allow modification by standard users?
  context: Adversaries may hijack legitimate startup entries to evade detection. This question focuses on detecting the modification of these trusted items or the weakening of their permissions (DACLs), which could be a precursor to a hijack attempt.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4670
  - Sysmon Event ID 13
  - All corporate workstations and servers; Key registry hives (HKLM\Software, HKCU\Software); System-wide and user-specific startup folders (C:\ProgramData\...\Startup, C:\Users\...\Startup)
  range: last 90 days
  queries:
  - pseudocode: MONITOR for (WinEvent 4657 OR Sysmon EID 13) on allowlisted_startup_items -> ALERT IF change is not authorized. MONITOR for (WinEvent 4670) on startup_locations -> ALERT IF 'Write' permission is granted to non-admin groups
- question: Is a specific startup item changing more frequently than its historical norm?
  context: Some malware, particularly those using domain generation algorithms (DGAs) or updating their C2 information, may modify their persistence entries frequently. Tracking the rate of change for each startup item can uncover this suspicious behavior by flagging entries that change more often than their established baseline.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - All corporate workstations and servers; Key registry hives (HKLM\Software, HKCU\Software); System-wide and user-specific startup folders (C:\ProgramData\...\Startup, C:\Users\...\Startup)
  range: last 90 days
  queries:
  - pseudocode: SNAPSHOT startup items daily -> HASH configurations -> TRACK change_frequency per item -> ALERT IF current_frequency > (mean_frequency + 3 * std_dev)
- question: Has the runtime behavior (i.e., sequence of system calls) of a legitimate startup process deviated from its normal baseline?
  context: This is a sophisticated behavioral detection. Even if the startup file itself isn't changed, it could be hijacked in memory. By modeling the normal system call patterns of a process, this analytic can detect when it starts behaving abnormally, indicating a compromise.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - All corporate workstations and servers; Key registry hives (HKLM\Software, HKCU\Software); System-wide and user-specific startup folders (C:\ProgramData\...\Startup, C:\Users\...\Startup)
  range: last 90 days
  queries:
  - pseudocode: FOR monitored startup process -> CAPTURE system call sequence -> INPUT to autoencoder_model -> ALERT IF reconstruction_error > threshold
- question: Did a standard, non-administrative user write a new file or registry key to a system-wide startup location?
  context: System-wide startup locations (HKLM Run keys, All Users Startup folder) execute code for any user who logs in. A standard user should never have permissions to write to these locations. Such an event is a high-fidelity indicator of a successful privilege escalation exploit.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Multi-user servers (e.g., Citrix, RDS); Administrator workstations; Key registry hives (HKLM\Software\Microsoft\Windows\CurrentVersion\*); System-wide startup folder (C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup)
  range: last 90 days
  queries:
  - pseudocode: SEARCH (Sysmon EID 11 OR Sysmon EID 13) WHERE target is system-wide_startup_location -> CHECK user_privileges -> ALERT IF user is NOT an administrator
- question: Is a statistically anomalous process, run by a standard user, writing to a system-wide startup location?
  context: This builds on the previous question by adding another layer of anomaly detection. Not only is the action itself suspicious for a standard user, but if the process performing the write (e.g., powershell.exe) is also unusual for that user's typical activity, it strengthens the evidence of a compromise.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Multi-user servers (e.g., Citrix, RDS); Administrator workstations; Key registry hives (HKLM\Software\Microsoft\Windows\CurrentVersion\*); System-wide startup folder (C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup)
  range: last 90 days
  queries:
  - pseudocode: SEARCH (Sysmon EID 11 OR Sysmon EID 13) WHERE target is system-wide_startup_location AND user is standard -> CALCULATE process_rarity for that user -> ALERT with score based on process rarity
- question: Did a user perform a write to a system-wide startup location that is anomalous compared to the behavior of their peers?
  context: Peer group analysis helps define normal behavior for a given role (e.g., Sales, IT). No one in the 'Sales' peer group should ever write to a system-wide startup folder. This model automatically flags such behavior as a deviation from the established norm for that user's role, indicating a potential account compromise or insider threat.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Multi-user servers (e.g., Citrix, RDS); Administrator workstations; Key registry hives (HKLM\Software\Microsoft\Windows\CurrentVersion\*); System-wide startup folder (C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup)
  range: last 90 days
  queries:
  - pseudocode: ON write to system-wide_startup_location -> IDENTIFY user and user_peer_group -> COMPARE action to peer_group_baseline -> ALERT IF action is anomalous for peer group
- question: Was a startup item created by a low-privilege user and later executed by a high-privilege user on the same system?
  context: This is a classic privilege escalation technique where an attacker with standard access plants a malicious file in a startup location. When an administrator later logs into that machine, the file executes with their elevated privileges. This query specifically looks for this "user-hopping" sequence.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Multi-user servers (e.g., Citrix, RDS); Shared administrator workstations; Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: CORRELATE (Sysmon EID 11/13 by UserA) with subsequent (WinEvent 4624 for UserB) and (Sysmon EID 1 by UserB from same item) -> ALERT IF UserA != UserB AND UserB_privileges > UserA_privileges
- question: Has a new or rare pairing of a "creator user" and an "executor user" been observed for a startup item?
  context: This is a statistical approach to the previous question. By baselining all pairs of users who create startup items and users who execute them, the system can flag any new or uncommon pairs. A sales user creating an item that a domain admin runs is highly suspect and would be flagged as a rare event.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Multi-user servers (e.g., Citrix, RDS); Shared administrator workstations; Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: FOR each startup execution -> TRACE back to creation event -> IDENTIFY (creator_user, executor_user) pair -> CALCULATE pair_prevalence -> ALERT IF prevalence < 1%
- question: Can a graph analysis model identify a known malicious pattern of privilege escalation involving startup items?
  context: Graph databases are excellent at identifying complex relationships. This approach models the entire attack chain—a low-privilege user writing a file, a high-privilege user logging in, and that new file being executed by the high-privilege user—as a specific, searchable pattern.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4657
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Multi-user servers (e.g., Citrix, RDS); Shared administrator workstations; Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: SEARCH graph_database for pattern (UserA)-[WRITES]->(StartupItemX), (UserB)-[LOGS_ON]->(Host), (StartupItemX)-[EXECUTED_BY]->(UserB) WHERE UserA.priv < UserB.priv
- question: Has the critical 'BootExecute' registry value been modified to contain anything other than the system default?
  context: The 'BootExecute' registry value runs programs very early in the boot process, before most security tools are active. Modifying it is a powerful and stealthy persistence technique. Any change from the default 'autocheck autochk *' is a critical, high-fidelity indicator of compromise.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - All corporate workstations and servers, especially Domain Controllers and critical servers; Key system registry hives (HKLM\System\CurrentControlSet\Control\Session Manager)
  range: last 90 days
  queries:
  - pseudocode: MONITOR for writes to 'HKLM\\...\\BootExecute' -> ALERT IF new_value IS NOT 'autocheck autochk *'
- question: Does the 'BootExecute' registry value on any system deviate from the established enterprise-wide baseline?
  context: This serves as a configuration integrity check and a backup to real-time monitoring. By periodically scanning all systems for the correct 'BootExecute' value, you can identify compromised hosts that may have been offline during the attack or where real-time logging failed.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - All corporate workstations and servers, especially Domain Controllers and critical servers; Key system registry hives (HKLM\System\CurrentControlSet\Control\Session Manager)
  range: last 90 days
  queries:
  - pseudocode: SCHEDULED_JOB QUERY all hosts for 'BootExecute' value -> COMPARE to 'autocheck autochk *' -> ALERT ON any deviation
- question: Was the 'BootExecute' registry value modified by an anomalous or unexpected process?
  context: While legitimate processes like Windows Update might interact with the HKLM\System hive, a process like 'reg.exe' spawned from a user's PowerShell session should not be modifying the 'BootExecute' value. This model learns the normal "who" and flags the abnormal "who," providing context beyond just the modification itself.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - All corporate workstations and servers, especially Domain Controllers and critical servers; Key system registry hives (HKLM\System\CurrentControlSet\Control\Session Manager)
  range: last 90 days
  queries:
  - pseudocode: ON write to 'BootExecute' -> IDENTIFY process and parent_process -> INPUT to IsolationForest_model -> ALERT IF flagged as anomaly