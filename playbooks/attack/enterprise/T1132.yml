name: T1132: Data Encoding
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps identify attempts by an adversary to obfuscate command and control (C2) traffic using data encoding. Adversaries encode C2 communications to evade detection by signature-based network security controls. This playbook provides investigative questions to uncover this activity by searching for various indicators, including network connections to known malicious infrastructure with high-entropy payloads, the presence of long or Base64-encoded strings in DNS or HTTP traffic, statistical outliers in payload characteristics on common ports, anomalous communication patterns like high data-sent-to-received ratios, and network connections initiated by unusual processes.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any network connections to destination IPs or domains known to be malicious C2 infrastructure?
    context: This question seeks to identify direct communication with known adversary command and control servers by matching outbound network connections against a threat intelligence feed. A positive match is a strong indicator of compromise. The associated evidence suggests that such traffic may also have a high Shannon entropy score (>6.0), indicating the use of encoding to obfuscate the C2 channel.
    answer_sources: Zeek conn.log, Zeek dns.log, Zeek http.log, Zeek ssl.log, Internet gateway, DNS resolvers, Proxy servers, Threat intelligence platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_logs (conn, dns, http, ssl)
          JOIN with threat_intelligence_c2_feed ON destination_ip OR destination_domain
          RETURN matching_connections
  - question: Are any outbound network connections exhibiting unusually high payload entropy compared to their historical baseline for a given port and protocol?
    context: This question aims to detect encoded or encrypted traffic by identifying statistical outliers in payload randomness (Shannon entropy). Adversaries often use non-standard encoding on common ports to blend in. By establishing a rolling 30-day baseline of normal entropy for each port/protocol combination, we can flag new connections that exceed the 99th percentile, indicating a high probability of anomalous encoding.
    answer_sources: Zeek conn.log, Zeek dns.log, Zeek http.log, Zeek ssl.log, Internet gateway, DNS resolvers, Proxy servers, Threat intelligence platform
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_connection:
            CALCULATE payload_entropy
            GET historical_99th_percentile_entropy FOR connection_port, connection_protocol
            IF payload_entropy > historical_99th_percentile_entropy:
              ALERT "Anomalous high entropy detected"
  - question: Can any new network connections be classified as malicious C2 traffic using a machine learning model trained on flow characteristics?
    context: This question involves using a supervised machine learning model (like Random Forest) to proactively classify network traffic. The model is trained on a labeled dataset of benign and malicious flows, using features like payload entropy, byte ratios, and connection duration. This allows for real-time identification of new connections that fit the profile of encoded C2 traffic, even if the destination is not yet on a threat intelligence list.
    answer_sources: Zeek conn.log, Zeek dns.log, Zeek http.log, Zeek ssl.log, Internet gateway, DNS resolvers, Proxy servers, Threat intelligence platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_network_flow:
            EXTRACT features (entropy, byte_ratio, duration, port, protocol)
            PREDICT classification using trained_ml_model
            IF prediction is "malicious_c2":
              ALERT "ML model classified flow as malicious C2"
  - question: Are there any long, Base64-encoded strings present in DNS queries or HTTP headers?
    context: This question looks for data encoding in DNS and HTTP traffic, a common technique for C2 communication and data exfiltration. By scanning for long strings (e.g., >50 characters) composed of the Base64 character set in DNS query names or HTTP headers (like User-Agent, URI, or Cookie), we can identify potential C2 channels that are attempting to hide within legitimate-looking application layer protocols.
    answer_sources: Zeek dns.log, Zeek http.log, DNS resolvers, Web proxies, Application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dns_logs.query, http_logs.user_agent, http_logs.uri, http_logs.cookie
          WHERE field MATCHES regex '(^[A-Za-z0-9+/]{50,}[=]{0,2}$)'
          RETURN matching_events
  - question: Do any DNS queries or HTTP headers show a character frequency that deviates significantly from the established norm?
    context: This question seeks to identify encoded data by analyzing its statistical properties. Normal, human-readable text has a predictable character frequency distribution. Encoded data often does not. By creating a baseline of normal character frequencies for DNS queries and specific HTTP headers, we can use a Chi-squared test to find new requests that are statistical outliers, suggesting they may contain encoded C2 data.
    answer_sources: Zeek dns.log, Zeek http.log, DNS resolvers, Web proxies, Application servers
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_request (dns_query or http_header):
            CALCULATE character_frequency_distribution
            COMPARE to baseline_distribution using Chi_squared_test
            IF p_value < 0.01:
              ALERT "Statistically significant character frequency deviation"
  - question: Can an anomaly detection model identify any outlier DNS queries or HTTP header values?
    context: This question leverages an unsupervised machine learning approach to find anomalous data without pre-existing labels. A model like a One-Class SVM or an autoencoder is trained on a large volume of legitimate DNS and HTTP traffic to learn what "normal" looks like. It can then be used to flag any new traffic that deviates from this learned norm, identifying potential novel or unknown C2 encoding techniques.
    answer_sources: Zeek dns.log, Zeek http.log, DNS resolvers, Web proxies, Application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_data_point (dns_query or http_header):
            CALCULATE anomaly_score using trained_autoencoder_model
            IF anomaly_score > threshold:
              ALERT "Anomaly detection model flagged outlier"
  - question: Is there any network traffic on cleartext ports that exhibits unusually high entropy?
    context: This question aims to find obviously misplaced encoding or encryption. Protocols that typically operate in cleartext (e.g., FTP, Telnet, SMTP) should not have high-entropy payloads. A rule that detects high Shannon entropy (e.g., >6.5) on these ports can be a very high-fidelity indicator that an adversary is tunneling encoded C2 traffic over an unexpected port.
    answer_sources: Zeek conn.log, Zeek http.log, Zeek dns.log, Internet gateway, Core network switches, Servers hosting critical applications
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_connections
          WHERE destination_port IN (21, 23, 25, 110)
          AND payload_entropy > 6.5
          RETURN suspicious_connections
  - question: Are there any network connections on common ports with payload entropy scores that are statistical outliers compared to the historical baseline?
    context: This question focuses on finding anomalous encoding within high-volume, common ports like 53 (DNS), 80 (HTTP), and 443 (HTTPS). Since some legitimate traffic on these ports can be noisy, this method uses a statistical approach. By maintaining a rolling 30-day baseline of entropy scores, we can generate alerts for connections that exceed the 95th or 99th percentile, indicating a deviation from normal traffic patterns that could be encoded C2.
    answer_sources: Zeek conn.log, Zeek http.log, Zeek dns.log, Internet gateway, Core network switches, Servers hosting critical applications
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_connection on port (53, 80, 443):
            CALCULATE payload_entropy
            GET historical_percentiles (95th, 99th) for port
            IF payload_entropy > 99th_percentile:
              ALERT (High Severity) "Entropy exceeds 99th percentile"
            ELSE IF payload_entropy > 95th_percentile:
              ALERT (Medium Severity) "Entropy exceeds 95th percentile"
  - question: Does the average payload entropy for a specific host or service deviate significantly from its forecasted, seasonal trend?
    context: This question applies time-series analysis to detect subtle changes in a host's communication patterns. A forecasting model (like SARIMA or Prophet) can learn the daily and weekly seasonality of a host's average payload entropy. An alert is generated when the observed entropy significantly deviates from the model's prediction, which could indicate that a compromised host has begun communicating with a C2 server using encoded data.
    answer_sources: Zeek conn.log, Zeek http.log, Zeek dns.log, Internet gateway, Core network switches, Servers hosting critical applications
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each time_window and host:
            GET observed_average_entropy
            GET forecasted_entropy and confidence_interval from time_series_model
            IF observed_average_entropy is outside confidence_interval:
              ALERT "Significant deviation from forecasted entropy"
  - question: Are there any DNS queries that violate RFC standards for length?
    context: This question uses protocol violations as an indicator of abuse. DNS has length limits for query names (255 bytes) and legacy TXT record responses (512 bytes). Adversaries using DNS for C2 tunneling may inadvertently or deliberately violate these limits. Monitoring for such violations provides a simple but effective way to detect this specific type of encoded C2 channel.
    answer_sources: Zeek dns.log, Zeek http.log, Zeek conn.log, DNS resolvers, Web proxies, Endpoints making external connections
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dns_logs
          WHERE query_length > 255 OR (query_type == 'TXT' AND response_size > 512)
          RETURN dns_events_violating_rfc
  - question: Are any network connections exhibiting a client-to-server byte ratio that is a statistical outlier?
    context: This question looks for imbalances in data transfer that may indicate C2 activity. For example, a compromised host may send small 'beacons' and receive large 'commands', or exfiltrate large amounts of data while receiving little. By calculating the mean and standard deviation of the sent-to-received byte ratio for each destination, we can flag new connections where this ratio is anomalous (e.g., >3 standard deviations from the mean), pointing to potential C2 data transfer.
    answer_sources: Zeek dns.log, Zeek http.log, Zeek conn.log, DNS resolvers, Web proxies, Endpoints making external connections
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_connection to destination_server:
            CALCULATE byte_ratio = sent_bytes / received_bytes
            GET historical_mean, historical_std_dev of byte_ratio for destination_server
            IF byte_ratio > (historical_mean + 3 * historical_std_dev):
              ALERT "Anomalous client-to-server byte ratio"
  - question: Can network connections be grouped into anomalous clusters characterized by high sent-to-received byte ratios?
    context: This question uses unsupervised clustering (like K-Means or DBSCAN) to find pockets of anomalous activity within vast amounts of network data. By grouping connections based on features like bytes sent, bytes received, duration, and service, we can isolate small, dense clusters that do not fit with the larger, benign groups. Clusters characterized by high byte ratios and non-standard ports are highly suspicious and warrant investigation as potential encoded C2 channels.
    answer_sources: Zeek dns.log, Zeek http.log, Zeek conn.log, DNS resolvers, Web proxies, Endpoints making external connections
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER connection_logs on features (sent_bytes, received_bytes, duration, service)
          ANALYZE resulting clusters
          IDENTIFY small, dense clusters with high sent/received byte ratios
          RETURN anomalous_clusters
  - question: Has a process that should not make network connections been observed initiating an outbound connection?
    context: This question aims to detect when legitimate, non-networked applications (like notepad.exe or calc.exe) are compromised and used to initiate C2 communication. By maintaining a watchlist of such processes and monitoring for network connection creation events (Windows Event ID 5156) associated with them, we can generate a high-fidelity alert for this suspicious behavior.
    answer_sources: Windows Event ID 4688, Windows Event ID 5156, Zeek conn.log, User workstations, Domain controllers, Critical application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE non_networked_processes = ['notepad.exe', 'calc.exe', ...]
          SEARCH network_creation_events (EID 5156)
          WHERE application_name IN non_networked_processes AND destination_is_external
          RETURN suspicious_events
  - question: Has a process been observed making a network connection to a port that is rare for that specific process?
    context: This question establishes a baseline of normal network behavior for every process on a system. By profiling which destination ports each process typically connects to, we can use anomaly detection to flag new connections to ports that are historically rare (e.g., below the 1st percentile of usage) for that specific process. This can uncover a compromised process being used for C2 on an unusual port to evade port-based security rules.
    answer_sources: Windows Event ID 4688, Windows Event ID 5156, Zeek conn.log, User workstations, Domain controllers, Critical application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_network_connection_event (EID 5156):
            GET process_path, destination_port
            CALCULATE rarity_score of destination_port for process_path based on historical data
            IF rarity_score < 1st_percentile:
              ALERT "Process connecting to a rare port"
  - question: Is a process that is part of an anomalous execution chain initiating an external network connection?
    context: This question links process execution analysis with network monitoring to add valuable context. First, a process ancestry graph is built from process creation events (Event ID 4688) to identify anomalous execution chains (e.g., Microsoft Word spawning PowerShell). If a process within such a suspicious chain is then observed making an external network connection (Event ID 5156), the event is elevated to a high-priority incident, as it strongly indicates a successful compromise followed by C2 establishment.
    answer_sources: Windows Event ID 4688, Windows Event ID 5156, Zeek conn.log, User workstations, Domain controllers, Critical application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE anomaly_score for all process_creation_chains (EID 4688)
          SEARCH network_creation_events (EID 5156)
          WHERE initiating_process is part of a chain with high anomaly_score
          AND destination_is_external
          ELEVATE to high-priority incident