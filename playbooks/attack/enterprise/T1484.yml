name: T1484: Domain or Tenant Policy Modification
id: 8a1b9c2d-3e4f-4a5b-8c9d-0e1f2a3b4c5d
description: An adversary may escalate privileges or evade defenses by modifying domain or tenant policies. This can involve updating Group Policy Objects (GPOs) with malicious scripts or tasks, granting sensitive user rights like SeBackupPrivilege to unauthorized accounts, modifying critical GPOs like the Default Domain Policy, or altering federation settings in Azure AD or ADFS. Defense evasion techniques include adding exclusions for security tools, disabling security features via scripts, or suppressing audit logging. This playbook provides investigative questions to detect these activities through symbolic, statistical, and machine learning-based analysis of GPO modification events, Azure AD audit logs, and related data sources.
type: technique
related:
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have GPO modification events been analyzed to identify embedded file paths, domains, IPs, or commands that match known malicious indicators?
    context: This question aims to detect the direct insertion of malicious content into Group Policy Objects. Adversaries may modify GPO scripts or scheduled tasks to execute malware or connect to command-and-control infrastructure. By parsing the contents of modified GPOs and comparing extracted indicators against a threat intelligence feed, analysts can quickly identify known-bad activity and generate a high-severity alert, indicating a likely compromise.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5137
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_modification_events (5136, 5137) | EXTRACT observables (file_paths, domains, ips, commands) FROM script_content OR scheduled_task_xml | JOIN observables with threat_intelligence_feed | WHERE match_found
  - question: Has the entropy of new or modified GPO scripts been analyzed to detect potential obfuscation or packing?
    context: This question seeks to identify malicious scripts hidden within GPOs through statistical analysis. Adversaries often obfuscate or pack their scripts to evade signature-based detection. These techniques typically increase the script's Shannon entropy. By establishing a baseline entropy for legitimate scripts and alerting on new scripts with an abnormally high score (e.g., above the 95th percentile), analysts can uncover potentially malicious code that would otherwise be missed.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5137
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_modification_events | EXTRACT script_content | CALCULATE shannon_entropy | WHERE entropy_score > baseline_95th_percentile
  - question: Has a machine learning model been used to classify GPO modifications as malicious based on their features?
    context: This question leverages machine learning to provide a probabilistic assessment of GPO modification risk. By training a model on features like script length, keyword frequency (e.g., 'Invoke-Expression'), entropy, and metadata (modifying account, time of day), the system can learn the characteristics of both benign and malicious changes. Flagging modifications that the model classifies as malicious with a high confidence score helps focus analyst attention on the most suspicious events.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5137
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each GPO_modification | EXTRACT features (script_length, keyword_frequency, entropy, account, time) | PREDICT is_malicious with classification_model | WHERE prediction_confidence > 0.85
  - question: Has a GPO modification been detected that grants a sensitive user right to a principal not on an approved administrator list?
    context: This question targets a direct method of privilege escalation where an adversary modifies a GPO to grant powerful rights (e.g., SeBackupPrivilege, SeDebugPrivilege) to a compromised or newly created account. By monitoring GPO modification events for changes to the 'gPCUserRightsAssignment' attribute and comparing the assigned principal against a watchlist of approved administrators, security teams can immediately detect unauthorized grants of high-level permissions.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - Organizational Units (OUs) containing high-value systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_modification_events (5136) | WHERE attribute='gPCUserRightsAssignment' | EXTRACT principal, granted_right | WHERE principal NOT IN approved_admin_list AND granted_right IN sensitive_rights_watchlist
  - question: Has an anomalous increase been observed in the number of principals assigned a sensitive user right?
    context: This question uses statistical baselining to detect unusual trends in privilege assignment. A sudden, widespread granting of a sensitive user right, even if to seemingly legitimate accounts, can be an indicator of a misconfiguration or a sophisticated attack. By tracking the count of users and groups assigned to each sensitive right and alerting when that count exceeds a statistical threshold (e.g., two standard deviations above a moving average), analysts can identify potentially malicious, large-scale privilege changes.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - Organizational Units (OUs) containing high-value systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each sensitive_right | BASELINE count of assigned_principals over time | CALCULATE moving_average and standard_deviation | ALERT if current_count > (moving_average + 2 * standard_deviation)
  - question: Has a graph-based anomaly detection model identified a non-standard user being granted high privileges via a GPO?
    context: This question applies machine learning to the structure of Active Directory to find anomalous relationships. AD can be modeled as a graph where users, groups, and GPOs are nodes. Legitimate privilege grants form predictable patterns. An adversary granting a powerful right to an unusual account (e.g., a standard user account) creates a low-probability structural anomaly in the graph. A graph-based model can detect this new, unlikely relationship (edge) as a significant deviation requiring investigation.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - Organizational Units (OUs) containing high-value systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL Active_Directory as a graph | DETECT low-probability structural anomalies (new edges) | ALERT on new edge representing non-standard user granted high_privilege via GPO
  - question: Has a critical GPO been modified, created, or linked by an account not on an authorized allow-list?
    context: This question focuses on protecting the most critical GPOs, such as the Default Domain Policy. Unauthorized changes to these policies can have a catastrophic impact on domain security. By defining a watchlist of critical GPO GUIDs and an allow-list of authorized administrative accounts, security teams can generate a high-priority alert for any modification, creation, or linking event performed by an unauthorized user, indicating a serious security event.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5137
      - Windows Event ID 5139
      - Windows Event ID 5141
      - Domain Controllers
      - Administrative Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_events (5136, 5137, 5139, 5141) | WHERE GPO_guid IN critical_gpo_watchlist AND user NOT IN authorized_user_allowlist
  - question: Has an authorized administrator modified a GPO at an unusual time of day or day of the week?
    context: This question aims to detect potential account compromise by analyzing the timing of administrative actions. Even legitimate administrators have typical working patterns. An adversary who has compromised an admin account may use it outside of normal hours. By baselining the activity times for each administrator and flagging modifications that occur at statistically unusual times (e.g., outside the 5th-95th percentile), analysts can identify suspicious activity that may indicate an account takeover.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5137
      - Windows Event ID 5139
      - Windows Event ID 5141
      - Domain Controllers
      - Administrative Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each admin_user | BASELINE GPO_modification_activity by hour_of_day, day_of_week | FOR each new_modification | ALERT if timestamp is outside 5th-95th_percentile of historical activity
  - question: Has a machine learning model identified a GPO modification as an outlier from normal administrative behavior?
    context: This question uses an anomaly detection model (One-Class SVM) to identify GPO modifications that deviate from established patterns of legitimate activity. The model is trained exclusively on known-good events, learning the complex relationships between the modifying account, the target GPO, the OU it's linked to, and the time of day. Any new modification that does not conform to this learned normal behavior is flagged as an outlier, providing a powerful way to detect novel or sophisticated attacks.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5137
      - Windows Event ID 5139
      - Windows Event ID 5141
      - Domain Controllers
      - Administrative Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN one-class_SVM_model on legitimate_GPO_modification_events | FOR each new_modification_event | PREDICT is_outlier with model | WHERE prediction is outlier
  - question: Has an Azure AD or on-premise ADFS federation setting been modified?
    context: This question targets a highly critical and rare administrative action that can lead to a full tenant compromise. Adversaries can modify federation settings to add a malicious identity provider, allowing them to forge tokens for any user. Due to the high impact of these changes (e.g., 'Set federation settings on domain' in Azure AD or creating a new Claims Provider Trust on ADFS), any occurrence is considered a high-severity event that warrants immediate investigation.
    answer_sources:
      - Windows Event ID 307
      - Windows Event ID 510
      - Azure AD Audit Logs
      - Active Directory Federation Services (ADFS) Servers
      - Identity Provider (IdP) infrastructure
      - Azure AD Tenant
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH AzureAD_AuditLogs WHERE ActivityType IN ('Set federation settings on domain', 'Set domain authentication') OR SEARCH Windows_Events WHERE EventID=510
  - question: Has a domain authentication method change been detected, or has a new identity provider been added without authorization?
    context: This question establishes a strict statistical baseline for changes to domain authentication. In a stable environment, these changes should not occur outside of planned projects. A baseline of zero changes per month should be established. Any deviation from this zero baseline, or the addition of a new, unplanned identity provider URI to the trust settings, is a critical anomaly and a strong indicator of a potential compromise of identity infrastructure.
    answer_sources:
      - Windows Event ID 307
      - Windows Event ID 510
      - Azure AD Audit Logs
      - Active Directory Federation Services (ADFS) Servers
      - Identity Provider (IdP) infrastructure
      - Azure AD Tenant
    range: last 90 days
    queries:
      - technology: pseudocode
        query: COUNT domain_authentication_changes per month | ALERT if count > 0 OR SEARCH for new_identity_provider_uri | ALERT if uri NOT IN planned_change_list
  - question: Has an unauthorized state change in domain authentication settings been detected by a state-change model?
    context: This question models the domain's authentication configuration as a finite state machine to detect unauthorized changes. The legitimate states ('Managed', 'Federated') and the set of trusted providers are known. Any transition between these states that does not correlate with an approved change request from a change management system is flagged as a high-confidence anomaly. This provides an automated way to verify that high-impact identity changes are authorized, catching malicious alterations that bypass process.
    answer_sources:
      - Windows Event ID 307
      - Windows Event ID 510
      - Azure AD Audit Logs
      - Active Directory Federation Services (ADFS) Servers
      - Identity Provider (IdP) infrastructure
      - Azure AD Tenant
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MONITOR domain_authentication_state | ON state_transition | CHECK for corresponding approved_change_request_id within 1_hour_window | ALERT if no matching change_request_id is found
  - question: Has a GPO modification added a security tool exclusion for a known malicious path, process, or file extension?
    context: This question seeks to detect adversaries attempting to blind security tools by adding exclusions via Group Policy. An adversary may push a GPO that instructs antivirus or EDR solutions to ignore a specific directory (e.g., C:\Users\Public\) or process where they plan to stage their malware. By parsing GPO modifications that alter exclusion-related registry keys and matching the new exclusion against a threat intelligence feed of malicious indicators, analysts can detect this defense evasion technique.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_modification_events (5136) | PARSE changes to security_tool_exclusion_keys | EXTRACT exclusion_value | JOIN exclusion_value with malicious_indicator_feed | WHERE match_found
  - question: Has an anomalous number of GPO-based security exclusion modifications occurred?
    context: This question uses statistical baselining to identify unusual patterns of security exclusion changes. In a well-managed environment, modifications to security tool exclusions via GPO should be rare. A sudden spike in these modifications, even for seemingly benign items, is anomalous. Alerting when the count of these events exceeds a statistical threshold (e.g., more than 3 standard deviations above the mean, or any at all in a 24-hour period) can draw attention to an adversary's attempt to weaken security controls.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: COUNT GPO_exclusion_modifications per 24_hours | BASELINE count over time | CALCULATE mean and standard_deviation | ALERT if count > (mean + 3 * standard_deviation)
  - question: Has a machine learning model classified a new security exclusion path as suspicious?
    context: This question applies text classification to differentiate between legitimate and suspicious exclusion paths. Benign exclusions often point to specific enterprise application directories (e.g., 'C:\Program Files\App'), while malicious exclusions frequently target user-writable, temporary, or generic system paths (e.g., '%TEMP%', 'C:\Users\Public\'). A model trained on these characteristics can classify a newly added path as 'suspicious' with high confidence, flagging it for analyst review.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_exclusion_path | EXTRACT features (path_depth, is_user_writable, character_distribution) | PREDICT is_suspicious with text_classification_model | WHERE prediction_confidence > threshold
  - question: Has a GPO script been modified to include content that matches YARA rules for defense evasion techniques?
    context: This question uses YARA, a tool for pattern matching, to find known defense evasion techniques within GPO scripts. Adversaries embed code to disable security tools, such as commands to bypass AMSI ('AmsiUtils'), stop Event Tracing for Windows (ETW), or disable security logging ('wevtutil cl Security'). By scanning the content of modified GPO scripts with a curated set of YARA rules, analysts can precisely identify these malicious payloads.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Windows Event ID 4104
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_modification_events OR PowerShell_script_block_logs (4104) | EXTRACT script_content | SCAN content with defense_evasion_yara_rules | ALERT on rule_match
  - question: Has a new GPO script been identified as highly dissimilar from the baseline of known-good administrative scripts?
    context: This question seeks to find malicious scripts by identifying how different they are from normal scripts. Legitimate administrative scripts within an organization often share common functions, variables, and structure. A malicious script introduced by an adversary is likely to be very different. By calculating the Jaccard similarity between a new script and the established baseline of good scripts, analysts can flag those with very low similarity scores as outliers that warrant further inspection.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Windows Event ID 4104
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TOKENIZE new_gpo_script | CALCULATE jaccard_similarity against baseline_of_good_scripts | WHERE similarity_score < 10th_percentile
  - question: Has an NLP-based classifier identified a GPO script as having a high probability of malicious 'defense evasion' intent?
    context: This question uses Natural Language Processing (NLP) to understand the likely intent of a script. By training a model on a large, labeled dataset of benign and malicious PowerShell scripts, it can learn the sequences of cmdlets, arguments, and obfuscation patterns associated with specific malicious activities, such as defense evasion. When a GPO is modified to include a script, this model can analyze it and generate an alert if it's classified as having malicious intent with high probability.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Windows Event ID 4104
      - Domain Controllers
      - All Domain-joined Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_gpo_script | PREDICT script_intent with NLP_classifier_model | WHERE intent is 'defense evasion' AND probability > threshold
  - question: Has a GPO modification altered the audit policy to deviate from a defined 'Golden Configuration'?
    context: This question aims to detect an adversary's attempt to disable security logging. Organizations can define a 'Golden Configuration' for audit policy settings on critical systems, specifying which subcategories must be logged. An adversary might try to disable logging for 'Process Creation' or 'Security Group Management' to hide their activities. By monitoring GPO modifications and alerting on any change that deviates from this required baseline, security teams can immediately detect attempts to tamper with audit policies.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - Organizational Units (OUs) with sensitive systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH GPO_modification_events (5136) | PARSE audit_policy_changes | COMPARE new_configuration with golden_configuration | ALERT on any deviation
  - question: Has a GPO audit policy change been correlated with a subsequent, statistically significant drop in security event volume?
    context: This question links the action of changing an audit policy with its effect: a reduction in security logs. An adversary who successfully disables auditing for an event like process creation (Event ID 4688) will cause the volume of those logs from the targeted systems to drop. By monitoring for a GPO audit policy change and then looking for a statistically significant drop (e.g., >3 standard deviations below the mean) in expected log volume from the affected OU, analysts can confirm the impact of the tampering.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - Organizational Units (OUs) with sensitive systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON GPO_audit_policy_change_event | MONITOR log_volume for affected_OU | BASELINE log_volume with moving_average | ALERT if subsequent_log_volume < (moving_average - 3 * standard_deviation)
  - question: Has a time-series model detected an unexplainable drop in log volume that is correlated with a recent GPO modification?
    context: This question uses advanced time-series analysis to detect subtle log tampering. Security log volumes have natural daily and weekly seasonal patterns. A multivariate anomaly detection model can learn these complex patterns. If a GPO modification event is followed by a drop in log volume that the model cannot explain based on historical seasonality, it flags a correlated anomaly. This provides a high-fidelity signal that the GPO change likely caused the drop, indicating successful log tampering.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
      - Organizational Units (OUs) with sensitive systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL log_volumes with multivariate_time_series_model | DETECT anomalous drops in volume | IF anomaly_detected, CORRELATE with GPO_modification_events in preceding_window | ALERT on correlation
  - question: Has a 'Flash GPO Modification' been detected, where a GPO is modified and then quickly reverted?
    context: This question targets a specific adversary technique to make changes temporarily. An adversary might modify a GPO to perform a malicious action (like running a script) and then immediately change it back to its original state to evade detection. This creates two modification events for the same GPO in a short time window, with the version number changing and then reverting. Detecting this rapid modification-reversion sequence is a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CACHE GPO_modification_events (GUID, version_number) | FOR each new_modification_event | IF event_GUID exists in cache AND time_delta < 30_minutes AND version_number reverts to previous_value, ALERT 'Flash GPO Modification'
  - question: Has a GPO modification and reversion occurred in a time frame that is statistically unusual for normal administrative activity?
    context: This question adds a statistical lens to the 'Flash GPO Modification' concept. By analyzing the time delta between all consecutive modifications to the same GPO, analysts can build a distribution of normal change cycles. An adversary's rapid modify-and-revert action will likely have a time delta that is an outlier, falling into the lowest percentile (e.g., <5th percentile) of the normal distribution. This statistical approach helps distinguish malicious, rapid changes from more paced, legitimate administrative workflows.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR all GPOs, CALCULATE time_delta between consecutive_modifications | BASELINE distribution of time_deltas | FOR each new modification-reversion pair | ALERT if time_delta < 5th_percentile_of_baseline
  - question: Has a sequence analysis model detected an anomalous pattern of GPO-related administrative actions, such as a rapid modify-revert sequence?
    context: This question uses machine learning to understand the normal *sequences* of administrative actions. Legitimate GPO changes might follow a pattern like 'modify -> link -> wait 24 hours'. An adversary's actions might look very different, such as 'modify -> wait 5 minutes -> revert'. A sequence analysis model, like an LSTM autoencoder, can be trained on normal sequences of GPO events. It can then flag a new, anomalous sequence as a deviation from learned behavior, catching suspicious workflows that simpler rules might miss.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 5141
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN LSTM_autoencoder_model on normal_sequences_of_GPO_events | FOR each new_sequence_of_events | CALCULATE reconstruction_error | ALERT if error > threshold