name: T1098.007: Additional Local or Domain Groups
id: 1e9f8b0c-5a3d-4e7f-9b6c-2d8a0f1e4c5a
description: |
  This playbook addresses the adversary technique of adding accounts to local or domain groups to achieve persistence and/or privilege escalation. Adversaries may add a user account to groups like 'Remote Desktop Users' or 'Server Operators' to ensure continued access. This activity is often characterized by the modifying user's session originating from a high-risk or unusual IP address. They may also leverage command-line tools like `net.exe` or PowerShell cmdlets spawned by non-standard parent processes (e.g., Office applications) to perform the modification. Another indicator is when a non-administrative or service account, which is not on an authorized allowlist, adds a member to a sensitive group, or when such a change occurs at a statistically unusual time. To escalate privileges, adversaries may add users to high-privilege groups such as 'Administrators' or 'Domain Admins', sometimes using accounts with suspicious or algorithmically generated names. These actions can be part of a rapid, automated sequence where an account is added and then immediately used to access credentials (e.g., from LSASS), create new persistence mechanisms (scheduled tasks, services), or conduct widespread lateral movement.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are user accounts being added to persistence-enabling groups by a user whose session originates from a known malicious IP address or a high-risk Autonomous System Number (ASN)?
    context: |
      This question aims to detect adversaries who have compromised a legitimate user account and are using it from a malicious external location to establish persistence. By correlating the group modification event with the logon session of the modifying user and enriching the source IP with threat intelligence, we can identify changes made from infrastructure associated with known threat actors. This is a high-fidelity indicator of an external attacker manipulating internal account privileges.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Internet Gateway/Firewall
      - VPN Concentrators
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH Windows Events (4732, 4728, 4756)
          JOIN with Windows Event 4624 on SubjectUserName
          ENRICH IpAddress with Threat Intelligence Feed
          WHERE IpAddress or ASN is malicious
          RETURN time, SubjectUserName, TargetGroupName, IpAddress, ASN
  - question: Has a user modified a group from an IP address with an ASN or source country that is historically rare for that specific user?
    context: |
      This question helps identify anomalous behavior by baselining each user's typical logon locations. An adversary compromising an account is likely to use it from a location (and thus a different ASN or country) that is unusual for the legitimate user. By flagging modifications that occur from IP addresses in the bottom percentile of a user's historical logon locations, we can detect account takeovers used for persistence.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Internet Gateway/Firewall
      - VPN Concentrators
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each user
            PROFILE historical source ASNs and countries from logon events (4624) over 90 days.
          SEARCH group modification events (4732, 4728, 4756)
          GET source IP of modifying user from logon event (4624).
          IF source ASN/country pair is in bottom 5% frequency for that user
            ALERT
  - question: Can we predict whether a group modification is malicious based on features like IP geolocation, time, and user history?
    context: |
      This question explores using machine learning to proactively identify malicious group modifications. A classification model can learn the complex patterns of benign and malicious changes, considering various contextual features. By generating a probability score, this approach can surface high-risk events that might be missed by simpler, rule-based detections, allowing for more nuanced and effective threat hunting.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Internet Gateway/Firewall
      - VPN Concentrators
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN Random Forest classifier on labeled group modification events.
          FEATURES = [IP_geolocation, time_of_day, day_of_week, target_group, is_new_IP_for_user]
          FOR each new group modification event
            CALCULATE probability_score using model.
            IF probability_score > 0.90
              ALERT
  - question: Is a group modification command being executed by a non-standard parent process like an Office application or web server process?
    context: |
      This question helps detect when an adversary uses a compromised application to escalate privileges or establish persistence. Legitimate group modifications are typically performed from administrative consoles or scripts, not from applications like Word, Excel, or a web server. Seeing `net.exe` or `powershell.exe` spawned from such a parent is a strong indicator of a process injection or remote code execution attack.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Devices
      - Member Servers (Web, Application)
    range: last 30 days
    queries:
      - pseudocode: |
          SEARCH process creation events (4688)
          WHERE (NewProcessName is 'net.exe' or 'net1.exe' or 'powershell.exe')
          AND (CommandLine contains 'localgroup' or 'group' or 'Add-LocalGroupMember' or 'Add-ADGroupMember')
          AND (ParentProcessName is 'winword.exe' or 'excel.exe' or 'outlook.exe' or 'w3wp.exe' or 'httpd.exe')
          ALERT on match
  - question: Has the diversity of parent processes for `net.exe` or `powershell.exe` on a host suddenly increased, or has a rare parent process appeared?
    context: |
      This question aims to detect anomalous process relationships using information theory. On a stable system, administrative tools are typically launched by a predictable set of parent processes. A sudden spike in the entropy (randomness) of these parent processes, or the appearance of a new, rare parent, suggests that an attacker is using a novel execution chain to perform group modifications, deviating from the established baseline.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Devices
      - Member Servers (Web, Application)
    range: last 30 days
    queries:
      - pseudocode: |
          FOR each host
            PROFILE historical parent processes for 'net.exe' and 'powershell.exe' over 30 days.
            CALCULATE Shannon entropy of parent process distribution.
          SEARCH for group modification commands.
          IF entropy spikes OR parent process is rare (< 5 occurrences)
            ALERT
  - question: Does a group modification event originate from a process execution chain that is anomalous compared to a baseline of normal activity?
    context: |
      This question leverages graph-based analysis to identify sophisticated attack chains. By modeling all normal parent-child process relationships on a host as a graph, we can spot when a group modification command is part of an unusual sequence. This method is effective at detecting fileless malware or living-off-the-land techniques where the individual processes are legitimate, but their sequence and relationship are not.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Devices
      - Member Servers (Web, Application)
    range: last 30 days
    queries:
      - pseudocode: |
          MODEL normal process parent-child relationships as a baseline graph.
          FOR each new process chain leading to a group modification
            CALCULATE anomaly score against baseline graph.
            IF score is high
              ALERT
  - question: Has a sensitive group been modified by a user account that is not on an explicit allowlist of authorized administrators?
    context: |
      This question enforces a zero-trust policy for privileged operations. By maintaining a strict list of who is allowed to modify critical groups, any modification by an account not on that list is an immediate and high-confidence indicator of a security breach or misconfiguration. This is a simple but highly effective control for protecting sensitive groups.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Tier 0 Assets
      - Change Management Systems
    range: last 90 days
    queries:
      - pseudocode: |
          MAINTAIN allowlist of authorized users for sensitive groups.
          SEARCH group modification events (4732, 4728, 4756) for sensitive groups.
          IF SubjectUserName is NOT IN allowlist for TargetGroupName
            ALERT
  - question: Was a sensitive group modified at a time of day or day of the week that is statistically unusual?
    context: |
      This question uses time-series analysis to detect changes that occur outside of normal business operations. Adversaries often operate after hours to avoid detection. By baselining the timing of legitimate changes, we can flag modifications that occur during anomalous time windows (e.g., 3 AM on a Sunday) as suspicious, even if the user is technically authorized.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Tier 0 Assets
      - Change Management Systems
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each sensitive group
            CALCULATE historical hourly modification counts for the past 90 days (mean, stddev).
          FOR each new modification event
            IF count for the current hour is > (mean + 3 * stddev)
              ALERT
  - question: Is a user modifying a group that has never been modified by anyone in their peer group (e.g., their department or role)?
    context: |
      This question uses peer group analysis to spot outliers in user behavior. Users in similar roles typically perform similar actions. If an accountant suddenly modifies an IT administrative group, and no other accountant has ever done so, this action deviates from the established norm for their peer group. This is a strong signal of either privilege misuse or account compromise.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Tier 0 Assets
      - Change Management Systems
    range: last 90 days
    queries:
      - pseudocode: |
          CLUSTER users into peer groups based on AD attributes (department, role).
          FOR each user, PROFILE historical group modifications made by their peer group.
          FOR each new group modification event by a user
            IF TargetGroupName has never been modified by their peer group
              ALERT
  - question: Did an account, shortly after being added to a sensitive group, proceed to create a new scheduled task, service, or persistence-related registry key?
    context: |
      This question detects a common adversary pattern: gain privilege, then immediately create a persistence mechanism. By placing a newly-privileged account on a short-term watchlist, we can correlate the group addition with subsequent suspicious actions. This chained behavior is a high-confidence indicator of an attacker solidifying their foothold in the environment.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4657
      - Domain Controllers
      - Endpoint Devices
      - Member Servers
    range: last 24 hours
    queries:
      - pseudocode: |
          ON group add event (4732, 4728) to sensitive group
            ADD TargetUserName to watchlist for 24 hours.
          MONITOR for events (4698, 7045, 4657) where SubjectUserName is on watchlist.
          IF match found
            ALERT
  - question: Is the time between a user being added to a group and that user creating a persistence mechanism unusually short?
    context: |
      This question helps differentiate between automated attacks and normal administrative activity. A human administrator might be added to a group and create a scheduled task hours or days later. An automated script will perform these actions in seconds or minutes. By identifying events where this time delta is extremely small (e.g., in the 1st percentile), we can pinpoint scripted adversary behavior.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4657
      - Domain Controllers
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE time delta between group add events (4732, 4728) and subsequent persistence events (4698, 7045, 4657) for the same user.
          IF delta is in the 1st percentile of all observed deltas
            ALERT
  - question: Is a user's sequence of actions, such as being added to a group and then immediately creating a new service, part of a rare and potentially malicious chain of events?
    context: |
      This question uses sequence analysis to understand the narrative of an attack. Certain sequences of events, like 'Group Add -> Service Create', are rare during benign operations but common in attacks. A Hidden Markov Model (HMM) can be trained to learn normal event sequences and will assign a low probability (high anomaly score) to a sequence indicative of an attack, allowing for detection of the entire attack chain.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4657
      - Domain Controllers
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN HMM on normal sequences of user security events.
          FOR each new event sequence (e.g., group add -> service create)
            CALCULATE probability of sequence using HMM.
            IF probability is low
              ALERT
  - question: Has a machine account, after being added to a group, been used for an interactive logon?
    context: |
      This question identifies a highly anomalous and suspicious event. Machine accounts (ending in '$') are used by computers for service-to-service authentication and should never be used for interactive logons (i.e., a human logging in at a console or via RDP). If a machine account is added to a group and then used for an interactive logon, it is a strong indicator that an attacker has compromised the account's credentials and is using it to move laterally.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Domain Controllers
      - Endpoint Devices
      - Key Distribution Center (KDC)
    range: last 24 hours
    queries:
      - pseudocode: |
          SEARCH for group add events (4728, 4756) where MemberName ends in '$'.
          IF found, MONITOR for logon events (4624) where TargetUserName is the same machine account.
          IF LogonType is 2 (Interactive) or 10 (RemoteInteractive)
            ALERT
  - question: After being added to a group, did a machine account request a Kerberos ticket for a service it does not normally use, like `krbtgt`?
    context: |
      This question helps detect when a compromised machine account is being prepared for a Kerberos-based attack. By baselining the normal Service Principal Names (SPNs) that a machine account interacts with, we can spot deviations. A request for a ticket to `krbtgt` (the Kerberos Ticket Granting Ticket service) or a host SPN for a workstation is particularly suspicious and may indicate an impending Golden Ticket or Silver Ticket attack.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Domain Controllers
      - Endpoint Devices
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each machine account, BASELINE the set of normal SPNs requested (from 4769 or Zeek).
          AFTER a machine account is added to a new group
            MONITOR Kerberos ticket requests (4769).
            IF a requested SPN is statistically rare or known-sensitive (e.g., 'krbtgt')
              ALERT
  - question: Did a machine account's network logon behavior significantly change after it was added to a new group?
    context: |
      This question uses unsupervised machine learning to detect anomalous behavior without pre-defined rules. An Isolation Forest model can learn the multi-dimensional profile of a machine account's normal network activity (source, destination, time, etc.). If, after being added to a group, the account's activity pattern deviates significantly from this learned norm, the model will flag it as an anomaly, indicating a potential compromise and misuse.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek kerberos.log
      - Domain Controllers
      - Endpoint Devices
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN Isolation Forest model on normal network logon behavior of machine accounts.
          AFTER a machine account is added to a new group
            FEED its subsequent logon activity into the model.
            IF logon is classified as an anomaly
              ALERT
  - question: Has a high-privilege group been modified by an account with a suspicious or algorithmically generated name?
    context: |
      This question helps detect the use of throwaway or purpose-built accounts by adversaries. Attackers may create accounts with generic names like 'test' or 'backup', or use scripts to generate random-looking usernames, to perform malicious actions. Checking the name of the account that modifies a privileged group against a list of suspicious patterns is a simple but effective way to catch these attacker-created accounts.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Endpoint Devices
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH for modifications (4732, 4728, 4756) to high-privilege groups.
          CHECK if SubjectUserName matches a watchlist of patterns (e.g., 'test', 'backup', '*admin*', random strings).
          IF match found
            ALERT
  - question: Was a privileged group modified by a user whose account name has an unusually high degree of randomness?
    context: |
      This question uses character-level entropy to mathematically identify algorithmically generated account names (DGAs). Human-chosen usernames typically have lower entropy (more predictable patterns) than long, random strings of characters generated by a script. A high entropy score for the modifying user's name is a strong statistical indicator that the account was not created by a person and is likely malicious.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Endpoint Devices
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE baseline Shannon entropy for all usernames.
          FOR each privileged group modification
            CALCULATE entropy of SubjectUserName.
            IF entropy > 99th percentile of baseline
              ALERT
  - question: Does the name of the user modifying a privileged group appear to be machine-generated rather than human-generated?
    context: |
      This question applies Natural Language Processing (NLP) techniques to the problem of identifying malicious accounts. A model can be trained to distinguish the linguistic patterns of human names from the random patterns of machine-generated names. Scoring the 'human-likeness' of a username provides a more sophisticated method than simple pattern matching for detecting adversary-created accounts used in privilege escalation.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Endpoint Devices
    range: last 90 days
    queries:
      - pseudocode: |
          USE pre-trained NLP model to score usernames on 'human-likeness'.
          FOR each privileged group modification
            SCORE SubjectUserName with the model.
            IF score is low
              ALERT
  - question: Did a suspicious process, a group modification command, and the confirmation of the modification all occur on the same host within a few seconds?
    context: |
      This question identifies a rapid, automated attack chain at the endpoint level. An adversary leveraging an exploit might trigger a script that spawns a shell, which in turn runs a command to add a user to the local administrators group. Correlating these events (suspicious parent, command execution, and resulting group change) within a very short time window (e.g., 5 seconds) provides a high-confidence alert for an active compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Endpoint Devices
      - Member Servers
    range: last 5 seconds
    queries:
      - pseudocode: |
          CORRELATE events on the same host within a 5-second window:
          1. Event 4688 from suspicious parent (e.g., wscript.exe)
          2. Event 4688 for 'net.exe' or 'powershell.exe' with group mod args
          3. Event 4732/4728 confirming the modification
          IF all three occur in sequence
            ALERT
  - question: Was the time between a process starting and a group modification event occurring from that same process extremely short?
    context: |
      This question hones in on the speed of execution to differentiate automated attacks from manual administration. When a script runs, the time between a process being created and it executing its malicious action is often in the sub-second range. Measuring this delta and alerting on extremely low values (e.g., below the 1st percentile) is an effective way to detect the execution of automated privilege escalation exploits.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR events on the same host:
            CALCULATE time delta between process creation (4688) and group modification (4732/4728) from the same Process ID.
          IF delta is sub-second (or in 1st percentile)
            ALERT
  - question: Did a host experience a sudden burst of critical security events, including process creation and group modification, in a single second?
    context: |
      This question looks for anomalies in the rate of events on a host. A system under attack often generates a flurry of security-relevant events in a very short period as an exploit chain runs. Applying a time-series anomaly detection model to the event rate can identify these bursts, which stand out against the normal, much slower background rate of events, indicating a potential automated attack in progress.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - pseudocode: |
          MODEL normal rate of security events per host per second.
          MONITOR for sudden bursts of events (process creation, group modification).
          IF burst is classified as an anomaly by the model
            ALERT
  - question: Was a Tier 0 group, like 'Domain Admins', modified by any account not on a minimal, strictly-enforced allowlist?
    context: |
      This question implements a critical security control for the most powerful groups in Active Directory. Modification of Tier 0 assets should be an extremely rare and highly controlled event. By creating a rule that alerts on any modification to these groups by a user not on a pre-approved, minimal list, security teams can immediately detect and respond to the most critical type of privilege escalation.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Change Management Systems
      - Tier 0 Assets
    range: current
    queries:
      - pseudocode: |
          MAINTAIN strict allowlist for Tier 0 groups (e.g., Domain Admins).
          SEARCH for modification events (4728, 4756) to these groups.
          IF SubjectUserName is NOT IN allowlist
            GENERATE CRITICAL ALERT
  - question: Did a modification to a privileged group occur outside of established change windows, and how risky is the timing?
    context: |
      This question provides a risk-based approach to evaluating the timing of privileged changes. While a simple rule can check for 'after-hours' activity, a risk scoring model can add more nuance. A change made on a Saturday night or a national holiday is inherently riskier than one made an hour after the close of business. Alerting on a cumulative risk score allows analysts to focus on the most suspiciously timed events.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Change Management Systems
      - Tier 0 Assets
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE change windows (e.g., 9-5 M-F) and risk scores for deviations.
          FOR each privileged group modification outside the window
            CALCULATE risk score based on time/day/holiday status.
            IF score > threshold
              ALERT
  - question: Based on historical data, what is the probability that a specific privileged group modification was unauthorized?
    context: |
      This question uses a probabilistic model to assess the legitimacy of a change. A Bayesian model can incorporate multiple pieces of evidence—who made the change, what group was changed, when it happened, from where—and compare them to historical patterns to calculate the probability of the event being unauthorized. This provides a more holistic and data-driven assessment than single-factor rules.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Change Management Systems
      - Tier 0 Assets
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN Bayesian model on historical changes to calculate P(Unauthorized | User, Group, Time, IP).
          FOR each new privileged group modification
            CALCULATE posterior probability of being unauthorized.
            IF probability is high
              ALERT
  - question: Did an account, within an hour of being added to a privileged group, attempt to dump credentials from LSASS or access the SAM database?
    context: |
      This question detects the immediate weaponization of newly acquired privileges. A common adversary goal after privilege escalation is to dump credentials for lateral movement. By putting newly privileged accounts on a short-term, high-risk watchlist, we can create a high-priority alert if that account is immediately used to execute known credential dumping tools or techniques (e.g., running `mimikatz`, `ntdsutil`, or saving the SAM registry hive).
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4688
      - Domain Controllers
      - Endpoint Devices
      - LSASS Process Memory
    range: last 1 hour
    queries:
      - pseudocode: |
          ON privileged group add (4732, 4728)
            ADD TargetUserName to high-risk watchlist for 1 hour.
          MONITOR for process creation (4688) by user on watchlist.
          IF CommandLine indicates credential dumping (mimikatz, ntdsutil, reg save SAM)
            GENERATE CRITICAL ALERT
  - question: What is the 'privilege-to-action' latency, and is it short enough to indicate an automated attack?
    context: |
      This question quantifies the speed of an attacker's post-privilege-escalation actions. The time between an account gaining privileges and using them to perform a sensitive action like running `ntdsutil` is a key indicator. A very short latency (seconds to minutes) strongly suggests a pre-planned, scripted attack, as opposed to a human administrator exploring their new permissions. Flagging events in the 1st percentile of this latency metric helps pinpoint these automated attacks.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4688
      - Domain Controllers
      - Endpoint Devices
      - LSASS Process Memory
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE latency between privilege gain (4732/4728) and sensitive action (4688 with credential dumping commands) for the same user.
          IF latency is in the bottom 1st percentile
            ALERT
  - question: Has a user session rapidly transitioned from a standard state to a 'Privilege Gained' state and then to a 'Credential Access' state?
    context: |
      This question models an attack as a sequence of states. A user session can be tracked as it moves through different phases of an attack. A state-machine model can formally define these states and the valid transitions between them. A rapid transition from gaining privilege to accessing credentials is an abnormal and highly suspicious sequence that can be identified by the model as a high-confidence indicator of attack.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4688
      - Domain Controllers
      - Endpoint Devices
      - LSASS Process Memory
    range: last 90 days
    queries:
      - pseudocode: |
          MODEL user sessions as a state machine (e.g., Standard -> Privilege Gained -> Credential Access).
          TRACK user sessions as they transition between states.
          IF a session transitions from 'Privilege Gained' to 'Credential Access' in a very short time
            CLASSIFY session as malicious and ALERT.
  - question: Shortly after being added to a domain-privileged group, did an account request a Kerberos ticket for the `krbtgt` service?
    context: |
      This question is designed to detect a key step in a Golden Ticket attack. To create a Golden Ticket, an attacker needs information from the `krbtgt` account. After compromising an account and adding it to 'Domain Admins', their next step is often to request a Kerberos ticket for the `krbtgt` service to interact with it. Detecting this specific sequence of events provides a very early and critical warning of an impending domain-wide compromise.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Domain Controllers
      - Key Distribution Center (KDC)
    range: last 1 hour
    queries:
      - pseudocode: |
          ON 'Domain Admins' group add (4728/4756)
            MONITOR Kerberos ticket requests (4769 or Zeek) from that account.
            IF Service Name is 'krbtgt'
              GENERATE CRITICAL ALERT
  - question: After being added to a privileged group, did an account begin logging into an anomalously high number of distinct hosts?
    context: |
      This question helps detect when a newly compromised privileged account is being used for mass lateral movement or 'spraying'. A legitimate administrator might log into a few servers, but an attacker will often try to access hundreds of machines in a short period. By counting the number of unique destination hosts for network logons within an hour of a privilege gain and comparing it to a baseline, we can detect this anomalous spraying behavior.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Endpoint Subnets
    range: last 1 hour
    queries:
      - pseudocode: |
          AFTER an account is added to a privileged group
            COUNT distinct destination hosts for its network logons (Event 4624 Type 3) in the next hour.
            IF count > 99th percentile for all users in a 1-hour window
              ALERT for anomalous lateral movement.
  - question: Are the lateral movement logon patterns of a newly privileged user topologically anomalous compared to normal privileged access patterns?
    context: |
      This question uses advanced graph analytics to detect sophisticated lateral movement. A Graph Neural Network (GNN) can learn the complex, non-linear patterns of how legitimate privileged users typically move through the network. When a newly privileged user starts making connections, their activity can be evaluated by the model. If their logon path creates a subgraph that is structurally different from the learned norm, it can be flagged as anomalous, catching attackers who try to blend in.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Endpoint Subnets
    range: last 90 days
    queries:
      - pseudocode: |
          MODEL normal privileged logon patterns as a graph network.
          TRAIN a GNN to learn these patterns.
          FOR a newly privileged user
            EVALUATE their subsequent logon activity graph with the GNN.
            IF the activity is flagged as topologically anomalous
              ALERT.