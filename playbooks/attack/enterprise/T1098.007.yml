name: T1098.007: Additional Local or Domain Groups
id: f8d2b1a0-9c3e-4f5d-8a1b-7c6d5e4f3a2b
description: >
  Investigates whether an adversary is maintaining persistence or elevating privileges by adding accounts to sensitive local or domain groups. This playbook looks for signs of abuse such as a user account being added to a persistence-enabling group (e.g., 'Remote Desktop Users') from a suspicious IP address; command-line tools like net.exe or PowerShell being used to modify groups from an unusual parent process (e.g., an Office application); unauthorized or service accounts making changes at unusual times; an account immediately creating a new persistence mechanism (like a scheduled task or service) after being added to a group; or a machine account being added to a group and then used for interactive logons or to request unusual Kerberos tickets.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Was a group modification event correlated with a logon from a known malicious IP address or Autonomous System Number (ASN)?
    context: >
      Adversaries often use compromised infrastructure or anonymous proxies to hide their true location. Correlating a group modification, which is a key persistence action, with a logon from an IP or ASN known to be associated with malicious activity provides a strong signal that the change was illegitimate and part of an attack.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Internet Gateway/Firewall
      - VPN Concentrators
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          SEARCH (EventID 4732 OR 4728 OR 4756) as group_mod
          JOIN (EventID 4624) as logon ON group_mod.SubjectUserName = logon.SubjectUserName
          ENRICH logon.IpAddress with ThreatIntelFeed
          WHERE ThreatIntelFeed.IsMaliciousASN = true OR ThreatIntelFeed.IsMaliciousIP = true
          RETURN group_mod, logon
  - question: Did a user modify a group from an IP address whose ASN or country is historically rare for that user?
    context: >
      Users typically log in from a predictable set of geographic locations and network providers (ASNs). A group modification originating from a source that is a statistical outlier for that specific user (e.g., from an ASN they've never used before) could indicate their credentials have been compromised and are being used by an adversary from a different location.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Internet Gateway/Firewall
      - VPN Concentrators
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          FOR each User:
            PROFILE logon history (EventID 4624) over 90 days to get frequency of Source_ASN/Country pairs.
          SEARCH (EventID 4732 OR 4728 OR 4756) as group_mod
          JOIN logon event for group_mod.SubjectUserName
          IF logon.Source_ASN/Country_pair_frequency < 5th_percentile for User:
            ALERT
  - question: Has a machine learning model identified a group modification event as having a high probability of being malicious?
    context: >
      A binary classification model can learn the complex, non-linear patterns that differentiate benign administrative changes from malicious ones. By analyzing features like IP reputation, time of day, and the user's history, the model can assign a risk score to each event, allowing analysts to focus on the most likely threats that might be missed by simple rules.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Internet Gateway/Firewall
      - VPN Concentrators
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          FOR each group modification event:
            EXTRACT features (IP_geolocation, time_of_day, day_of_week, target_group, is_new_ip_for_user)
            INPUT features into trained Random Forest model
            IF model.output_probability > 0.90:
              ALERT
  - question: Was a group modification performed by net.exe or PowerShell spawned by a non-standard parent process like an Office application or web server?
    context: >
      Administrative tools like net.exe and PowerShell are typically run from an administrator's interactive shell (explorer.exe) or a management script. When these tools are launched by a user-facing application like Word or a web server process like w3wp.exe, it is highly suspicious and often indicates that an exploit or web shell is being used to execute commands.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Devices
      - Member Servers (Web, Application)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          SEARCH EventID 4688
          WHERE (NewProcessName = 'net.exe' OR 'net1.exe' OR 'powershell.exe')
          AND (CommandLine CONTAINS 'localgroup' OR 'group' OR 'Add-LocalGroupMember' OR 'Add-ADGroupMember')
          AND (ParentProcessName IN ['winword.exe', 'excel.exe', 'outlook.exe', 'w3wp.exe', 'httpd.exe'])
          ALERT
  - question: Did the parent process for a group modification command have an unusually high entropy or low frequency on the affected host?
    context: >
      On a given host, administrative commands are usually spawned by a small, predictable set of parent processes. Profiling these relationships can establish a baseline. A sudden spike in the entropy (randomness) of parent process names or the appearance of a very rare parent process for `net.exe` or `powershell.exe` suggests a deviation from normal activity, possibly due to malware or a living-off-the-land technique.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Devices
      - Member Servers (Web, Application)
    range: last 30 days
    queries:
      - search: Pseudocode
        query: >
          FOR each host:
            PROFILE historical parent-child relationships for 'net.exe' and 'powershell.exe' over 30 days.
          ON new group modification event from 'net.exe' or 'powershell.exe':
            CALCULATE Shannon entropy of parent process distribution.
            IF entropy spikes OR parent process frequency < threshold:
              ALERT
  - question: Did a graph-based anomaly detection model flag a group modification's process execution chain as anomalous?
    context: >
      Process execution events can be modeled as a large graph where nodes are processes and edges represent parent-child relationships. A graph-based model can learn the normal structure of these process trees. A group modification command that originates from a process chain with an unusual structure (e.g., abnormal depth, rare parent-child combination) will have a high anomaly score, indicating a likely exploit chain.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Devices
      - Member Servers (Web, Application)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          MODEL all process trees from EventID 4688 into a baseline graph.
          FOR new process chain leading to group modification:
            CALCULATE anomaly score against baseline graph.
            IF anomaly_score > threshold:
              ALERT
  - question: Was a sensitive group modified by a user account that is not on the authorized allowlist for that group?
    context: >
      For critical, sensitive groups, access control should be strictly enforced using the principle of least privilege. Maintaining an explicit allowlist of accounts authorized to make changes and alerting on any modification by an account not on that list is a direct and effective way to detect unauthorized attempts to gain or grant persistence.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Tier 0 Assets
      - Change Management Systems
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          DEFINE SensitiveGroupAllowlist = { 'GroupA': ['user1', 'user2'], 'GroupB': ['user3'] }
          SEARCH (EventID 4732 OR 4728 OR 4756) as group_mod
          IF group_mod.TargetGroupName IN SensitiveGroupAllowlist
          AND group_mod.SubjectUserName NOT IN SensitiveGroupAllowlist[group_mod.TargetGroupName]:
            ALERT
  - question: Did a modification to a sensitive group occur at a statistically unusual time of day or day of the week?
    context: >
      Legitimate administrative changes often follow a pattern, typically occurring during business hours or defined maintenance windows. An adversary, however, may operate at any time. By creating a historical baseline of when changes normally occur, it's possible to detect modifications at anomalous times (e.g., 3 AM on a Sunday) as outliers that warrant investigation.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Tier 0 Assets
      - Change Management Systems
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          FOR each sensitive group:
            CREATE hourly time series of modification counts over 90 days.
            CALCULATE mean and stddev for each hour of the week.
          ON new modification event:
            IF event_count_for_hour > (mean + 3 * stddev) for that hour:
              ALERT
  - question: Did a user modify a group that no one in their organizational peer group has ever modified before?
    context: >
      Users in similar roles (e.g., all helpdesk staff, all database administrators) tend to perform similar actions. By clustering users into peer groups, we can establish a behavioral baseline for each group. If a user modifies a sensitive group that is completely outside the norm for their peers, it suggests either a misconfiguration or that the user's account is being used for an unauthorized purpose.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Tier 0 Assets
      - Change Management Systems
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          CLUSTER users into peer groups based on AD attributes.
          FOR each peer group:
            PROFILE historical group modification behavior.
          ON new group modification by a user:
            IF modified_group has never been modified by user's peer group:
              ALERT
  - question: Was an account observed creating a scheduled task, new service, or Run key shortly after being added to a sensitive group?
    context: >
      This is a classic attacker pattern: gain privilege by being added to a group, then immediately use that privilege to establish a more durable form of persistence. Chaining these two events—the group addition and the subsequent creation of a task, service, or registry run key—within a short time window is a high-confidence indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4657
      - Domain Controllers
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          ON (EventID 4732 OR 4728) as group_add:
            ADD group_add.TargetUserName to Watchlist for 24 hours.
          SEARCH (EventID 4698 OR 7045 OR 4657) as persistence_event
          WHERE persistence_event.SubjectUserName IN Watchlist
          ALERT
  - question: Was the time between a user being added to a group and their creation of a new persistence mechanism unusually short?
    context: >
      Automated attack scripts execute sequences of commands much faster than a human administrator. By measuring the time delta between a group addition and a subsequent persistence action (like creating a service), we can identify activity that is too fast to be manual. An extremely short delta (e.g., in the bottom 1st percentile) strongly suggests scripted, malicious behavior.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4657
      - Domain Controllers
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          CALCULATE distribution of time deltas between (group add event) and (persistence creation event) for the same user.
          ON new chained event:
            IF time_delta < 1st_percentile_of_all_deltas:
              ALERT
  - question: Has a sequence analysis model identified a chain of events, such as 'Group Add' followed by 'Service Create', as likely malicious?
    context: >
      User activity can be viewed as a sequence of security events. A Hidden Markov Model (HMM) or other sequence analysis model can be trained on vast amounts of data to learn which sequences are normal and which are rare and indicative of an attack. The model can flag a sequence like 'User Added to Group -> New Service Created by User' as having a high probability of being malicious, even if the individual events seem benign.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4657
      - Domain Controllers
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          TRAIN HMM on sequences of user security events.
          FOR new sequence of events for a user:
            IF HMM identifies sequence (e.g., Group Add -> Service Create) as a high-probability malicious chain:
              ALERT
  - question: Was a machine account used for an interactive or remote interactive logon after being added to a sensitive group?
    context: >
      Machine accounts (ending in '$') are intended for service-to-service authentication and should almost never be used for interactive logons (where a user sits at a keyboard or uses RDP). An adversary might add a machine account to a group to gain privileges and then use it interactively for lateral movement. Detecting this type of logon is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek kerberos.log
      - Domain Controllers
      - Endpoint Devices
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          ON (EventID 4728 OR 4756) WHERE MemberName ENDS WITH '$':
            WATCH MemberName for interactive logons.
          SEARCH EventID 4624
          WHERE TargetUserName is the watched machine account
          AND (LogonType = 2 OR LogonType = 10)
          ALERT
  - question: Did a machine account request a Kerberos ticket for a rare or unusual Service Principal Name (SPN) after being added to a group?
    context: >
      Machine accounts typically request Kerberos tickets for a predictable set of services (SPNs) required for their function. After an adversary compromises a machine account and adds it to a privileged group, they might use it to request tickets for sensitive services they don't normally access, such as 'krbtgt' (for Golden Ticket attacks) or services on other workstations. This deviation from the baseline is highly suspicious.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Domain Controllers
      - Endpoint Devices
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          BASELINE normal SPNs requested by machine accounts.
          ON machine account added to group:
            MONITOR Kerberos ticket requests (EventID 4769) from that account.
            IF requested SPN is statistically rare for machine accounts (e.g., 'krbtgt'):
              ALERT
  - question: Did an anomaly detection model flag a machine account's network logon behavior as abnormal after it was added to a new group?
    context: >
      The network logon behavior of machine accounts is usually highly predictable. An unsupervised model like an Isolation Forest can learn this normal profile. If, after being added to a new group, a machine account suddenly starts logging on from different sources, to different destinations, or at different times, the model will flag this as a significant anomaly, suggesting it has been compromised and is being used for lateral movement.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek kerberos.log
      - Domain Controllers
      - Endpoint Devices
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          TRAIN Isolation Forest model on normal machine account logon features (source, dest, type, time).
          ON machine account added to group:
            FEED subsequent logon activity into model.
            IF model classifies activity as an anomaly:
              ALERT
  - question: Was a user added to a high-privilege group by an account with a suspicious name pattern (e.g., 'test', 'backup', or algorithmically generated)?
    context: >
      Adversaries may create or use accounts with generic or nonsensical names to perform actions, hoping they blend in with temporary or test accounts. A rule that checks the name of the administrator performing a privileged group addition against a list of common suspicious patterns or randomly generated strings can help catch these attempts at privilege escalation.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          SEARCH (EventID 4732 OR 4728 OR 4756) for additions to high-privilege groups.
          WHERE SubjectUserName MATCHES regex_pattern_for_suspicious_names
          ALERT
  - question: Did the username that performed a privileged group modification have an unusually high character-level entropy?
    context: >
      Legitimate usernames usually have low character entropy (randomness) because they are based on human names or roles. Algorithmically Generated Account (AGA) names, often used by attackers, have high entropy. Calculating the entropy of the username that performed a sensitive action and flagging those with statistically high scores is an effective way to detect AGAs being used for privilege escalation.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          SEARCH (EventID 4732 OR 4728 OR 4756) for privileged group modifications.
          CALCULATE character-level Shannon entropy of SubjectUserName.
          IF entropy > 99th_percentile_of_all_usernames:
            ALERT
  - question: Did an NLP model classify the username that performed a privileged group modification as likely machine-generated?
    context: >
      More advanced than simple entropy, a Natural Language Processing (NLP) model can be trained to distinguish between human-like names and machine-generated ones. Using such a model to score the "human-likeness" of the administrator's username for a privileged change provides a sophisticated method for detecting algorithmically generated accounts used in attacks.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          FOR privileged group modification event:
            INPUT SubjectUserName into pre-trained NLP name classifier.
            IF model_score for 'human-likeness' < threshold:
              ALERT
  - question: Did a suspicious process, a group modification command, and a group change confirmation all occur on the same host within seconds?
    context: >
      This sequence of events occurring in a very tight time window is a strong fingerprint of an automated exploit chain. A suspicious script (e.g., wscript.exe) executes, which in turn spawns a command-line tool to add a user, and the system logs the successful change. Correlating these three events on the same host within a few seconds provides high-confidence detection of active privilege escalation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          CORRELATE events on the same host within a 5-second window:
          1. Event 4688 from suspicious parent (e.g., wscript.exe)
          2. Event 4688 for net.exe/powershell.exe with group mod args
          3. Event 4732/4728 confirming the modification
          IF all three occur in sequence: ALERT
  - question: Was the time delay between a process creation and a resulting group modification extremely short (sub-second)?
    context: >
      Human-driven actions have a natural latency. An automated script does not. Measuring the time between a process starting (Event 4688) and the group modification it causes (Event 4732/4728) can reveal this. A sub-second delay is physically impossible for a human typing a command and indicates with high certainty that the action was scripted and likely malicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          JOIN Event 4688 with subsequent Event 4732/4728 from the same Process ID.
          CALCULATE time_delta = event_time(4732) - event_time(4688).
          IF time_delta is in the sub-second range (e.g., < 1st percentile):
            ALERT
  - question: Did a time-series model detect a sudden burst in the rate of critical security events on a host?
    context: >
      An automated attack often involves a rapid succession of actions, causing a "storm" of security events on the target host. A time-series anomaly detection model monitoring the rate of events per second can easily identify these bursts. A sudden, anomalous spike in the event rate, especially involving process creation and group modifications, is a strong indicator of an ongoing compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Endpoint Devices
      - Member Servers
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          MODEL the rate of security events per host per second.
          IF model flags a sudden burst of events (process create, group mod) as an anomaly:
            ALERT
  - question: Was a Tier 0 group like 'Domain Admins' modified by an account not on the strict, minimal allowlist?
    context: >
      Tier 0 assets, such as Domain Admin groups, are the keys to the kingdom. Access to modify them should be restricted to an absolute minimum number of highly-vetted administrative accounts. Any modification to these groups by an account not on this explicit, strictly-enforced allowlist should be treated as a critical security incident, as it directly indicates a compromise of the highest-level privileges.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Change Management Systems
      - Tier 0 Assets
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          DEFINE Tier0Allowlist = ['DA_admin1', 'DA_admin2']
          SEARCH (EventID 4728 OR 4756) for modifications to 'Domain Admins', 'Enterprise Admins', etc.
          IF SubjectUserName NOT IN Tier0Allowlist:
            CRITICAL_ALERT
  - question: Did a privileged group modification occur outside of a normal change window, resulting in a high risk score?
    context: >
      While legitimate changes can happen off-hours, they are less common. By assigning a risk score based on how far a change deviates from established change windows (e.g., business hours, weekdays vs. weekends, holidays), we can systematically prioritize events for review. A change at 3 AM on a holiday would receive a high score, warranting immediate attention.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Change Management Systems
      - Tier 0 Assets
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          DEFINE change_windows and risk_scores.
          ON privileged group modification:
            CALCULATE risk_score based on event time.
            IF risk_score > threshold:
              ALERT
  - question: Did a Bayesian model calculate a high probability that a privileged group modification was unauthorized?
    context: >
      A Bayesian model can incorporate multiple pieces of evidence (the 'who', 'what', 'where', and 'when') to calculate the probability of an event being unauthorized, given historical data. This provides a more nuanced assessment than a simple rule. If the model determines a high posterior probability of a change being illegitimate, it can be flagged for review with a quantifiable confidence level.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Domain Controllers
      - Change Management Systems
      - Tier 0 Assets
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          TRAIN Bayesian model on historical changes.
          FOR new privileged group modification:
            INPUT features (user, group, time, source_ip) into model.
            IF model.output_probability(unauthorized) > threshold:
              ALERT
  - question: Did a newly privileged account immediately attempt to dump credentials using tools like mimikatz or ntdsutil?
    context: >
      A common attacker goal after gaining administrative privileges is to dump credentials to facilitate further lateral movement. This involves accessing the LSASS process memory or the NTDS.dit database. Detecting an account that was just added to a privileged group immediately attempting these specific actions is a very strong, actionable indicator of an active attack.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4688
      - Domain Controllers
      - Endpoint Devices
      - LSASS Process Memory
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          ON (EventID 4732 OR 4728) as group_add:
            ADD group_add.TargetUserName to Watchlist for 1 hour.
          SEARCH EventID 4688
          WHERE SubjectUserName IN Watchlist
          AND CommandLine CONTAINS 'mimikatz' OR 'ntdsutil' OR 'reg save HKLM\\SAM'
          CRITICAL_ALERT
  - question: Was the latency between an account gaining privilege and using it for a sensitive action (like running ntdsutil) extremely low?
    context: >
      This 'privilege-to-action' latency is a key indicator of automation. An adversary's script will escalate privilege and then immediately use it, resulting in a time delay of seconds or minutes. A legitimate administrator is unlikely to act this quickly. Flagging events where this latency falls into the 1st percentile provides a powerful method for distinguishing automated attacks from manual administration.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4688
      - Domain Controllers
      - Endpoint Devices
      - LSASS Process Memory
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          CALCULATE distribution of 'privilege-to-action' latencies.
          ON new chained event (group add -> sensitive action):
            IF latency < 1st_percentile:
              ALERT
  - question: Did a state-machine model detect a user session rapidly transitioning from 'Privilege Gained' to 'Credential Access' state?
    context: >
      Modeling user sessions as a state machine (e.g., 'Standard' -> 'Privilege Gained' -> 'Credential Access') allows for the identification of malicious state transitions. A legitimate session might transition to 'Privilege Gained' and stay there for a while, but a rapid transition to 'Credential Access' is highly anomalous and characteristic of an attack script executing its pre-programmed steps.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4688
      - Domain Controllers
      - Endpoint Devices
      - LSASS Process Memory
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          MODEL user sessions with a state machine.
          IF a session transitions from 'Privilege Gained' to 'Credential Access' in a very short time:
            CLASSIFY session as malicious and ALERT.
  - question: After being added to a 'Domain Admins' group, did an account immediately request a Kerberos ticket for 'krbtgt'?
    context: >
      This is a textbook indicator of a Golden Ticket attack. The `krbtgt` account's hash is required to forge Kerberos Ticket-Granting Tickets (TGTs). An adversary who has just gained Domain Admin privileges will often immediately try to get this hash. An account being added to Domain Admins and then requesting a ticket for `krbtgt` should be treated as a critical, active attack.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Domain Controllers
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          ON (EventID 4728 OR 4756) where TargetGroupName is 'Domain Admins':
            MONITOR Kerberos requests from SubjectUserName.
          SEARCH (EventID 4769 OR Zeek kerberos.log)
          WHERE AccountName is the monitored user AND ServiceName is 'krbtgt'
          CRITICAL_ALERT
  - question: Did a newly privileged account initiate network logons to an anomalously high number of distinct hosts within one hour?
    context: >
      After gaining domain privileges, an adversary may 'spray' logon attempts across the network to discover other systems or deploy malware. This behavior results in one account logging into an unusually high number of distinct hosts in a short period. Comparing this count to a baseline of normal user behavior (e.g., the 99th percentile) can effectively detect this form of rapid lateral movement.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Endpoint Subnets
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          ON account added to domain privileged group:
            COUNT distinct destination hosts for network logons (Event 4624 Type 3) from that account in the next 1 hour.
            IF count > 99th_percentile for all users in a 1-hour window:
              ALERT
  - question: Did a graph neural network (GNN) model flag the lateral movement path of a newly privileged user as topologically anomalous?
    context: >
      Lateral movement can be visualized as a graph. A Graph Neural Network (GNN) can learn the complex topological patterns of normal privileged access (e.g., which servers admins typically connect to, in what order). When a newly privileged account starts moving through the network in a way that creates an anomalous path or subgraph structure, the GNN can flag this as a deviation from the learned norm, indicating potential malicious activity.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4756
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Endpoint Subnets
      - Key Distribution Center (KDC)
    range: last 90 days
    queries:
      - search: Pseudocode
        query: >
          TRAIN GNN on graph of normal privileged user logon paths.
          ON newly privileged user logon:
            ADD new logon path to graph.
            IF GNN model identifies the new path/subgraph as topologically anomalous:
              ALERT