name: T1531: Account Access Removal
id: 622f988c-7f5b-417d-8153-625d97f6c3d5
description: This playbook helps investigate whether an adversary has attempted to remove user account access. This is typically an Impact tactic used to disrupt operations or prevent legitimate users and administrators from accessing systems, potentially hindering incident response. Detection focuses on identifying suspicious account modification events, anomalous command-line or script execution, unusual spikes in account lockouts or deletions, deviations from established user behavior baselines, and temporal correlations between account changes and subsequent authentication failures.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage, Inc.
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is an account modification event being initiated by a known malicious or compromised user or host?
  context: This question seeks to identify high-confidence threats by correlating account modification activity with existing threat intelligence. Adversaries often use compromised accounts or infrastructure to perform malicious actions. By maintaining a watchlist of known-bad or suspicious user accounts and IP addresses, any account modification (password change, deletion, disablement) originating from these entities can be immediately flagged as a high-priority event, as it directly links a disruptive action to a known threat.
  answer_sources:
  - Windows Event ID 4723
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Windows Event ID 4740
  - Domain Controllers, Active Directory Federation Services (ADFS) Servers, Member Servers, User Workstations
  - Threat Intelligence Watchlist
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH account_modification_events WHERE (subject_user IN threat_intel_watchlist OR source_ip IN threat_intel_watchlist)
- question: Can we prioritize account modification events from watchlisted entities based on risk and rarity?
  context: Not all malicious actions are equal. This question aims to add a layer of risk-based alerting to reduce noise and focus on the most critical events. By assigning a higher risk score to more destructive actions (e.g., account deletion) and combining it with the reputation of the source, analysts can prioritize. Furthermore, by tracking the frequency of actions performed by watchlisted entities, a rare, high-impact action (e.g., a compromised account that normally performs reconnaissance suddenly deletes an admin account) can be identified as a significant anomaly requiring immediate attention.
  answer_sources:
  - Windows Event ID 4723
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Windows Event ID 4740
  - Domain Controllers, Active Directory Federation Services (ADFS) Servers, Member Servers, User Workstations
  - Threat Intelligence Watchlist
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH account_modification_events | WHERE (subject_user IN threat_intel_watchlist OR source_ip IN threat_intel_watchlist) | CALCULATE risk_score(action_type, source_reputation) | CALCULATE frequency(action, source) over last 30d | ALERT if risk_score > high_threshold AND frequency < low_percentile
- question: Can a machine learning model predict if an account modification is malicious based on contextual features?
  context: This question explores a predictive approach to detection. Instead of relying solely on static rules or watchlists, a supervised machine learning model can be trained to recognize the subtle, combined characteristics of malicious account modifications. By feeding the model features like the source's presence on a watchlist, the type of modification, the target account's privilege level, and the time of day, it can learn complex patterns and assign a probability score of maliciousness to new events, enabling the detection of threats that might not trigger simpler rules.
  answer_sources:
  - Windows Event ID 4723
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Windows Event ID 4740
  - Domain Controllers, Active Directory Federation Services (ADFS) Servers, Member Servers, User Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: STREAM account_modification_events | ENRICH with features (source_on_watchlist, target_privilege, time_of_day) | SCORE with ML_model | ALERT if probability_malicious > 0.9
- question: Are command-line utilities or PowerShell scripts being executed to remove account access?
  context: This question focuses on detecting the specific tools and commands adversaries use to perform account removal. By monitoring process creation events and PowerShell script block logs for command-line arguments and script content matching known patterns (e.g., `net user /del`, `Disable-ADAccount`, `Remove-LocalUser`), analysts can directly observe the execution of the technique. This method provides strong evidence of intent to disrupt access.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Privileged Access Workstations (PAWs), Management Servers, User Workstations, Exchange Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation_logs OR powershell_script_logs WHERE command_line MATCHES REGEX ('net user .* /del', 'Disable-ADAccount', etc.)
- question: Is an unusual or unexpected process spawning commands related to account modification?
  context: Adversaries may execute legitimate administrative tools from illegitimate parent processes to evade detection (e.g., a web server process spawning `net.exe`). This question aims to uncover such anomalies by profiling normal parent-child process relationships. An alert is triggered when a process that rarely or never spawns command-line utilities is observed executing an account modification command, indicating potential process injection or misuse of a compromised application for malicious purposes.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Privileged Access Workstations (PAWs), Management Servers, User Workstations, Exchange Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation_logs WHERE command_line MATCHES account_modification_pattern | CALCULATE frequency(parent_process) | ALERT if parent_process_frequency < percentile_5
- question: Can we use Natural Language Processing (NLP) to detect novel or obfuscated command-line variations for account removal?
  context: Standard regular expressions can be brittle and easily bypassed by adversaries using simple obfuscation techniques. This question proposes a more resilient approach using machine learning. By training an NLP model on a large corpus of both benign and malicious commands, the model can learn to classify the *intent* of a command line rather than just matching its syntax. This allows for the detection of novel or obfuscated variations of account removal commands that would otherwise be missed.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Privileged Access Workstations (PAWs), Management Servers, User Workstations, Exchange Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: STREAM process_creation_logs | EXTRACT command_line | CLASSIFY intent with NLP_model | ALERT if intent == 'Malicious Account Removal'
- question: Has there been a mass account deletion or lockout event across the enterprise?
  context: This question aims to detect large-scale, disruptive activity. While a single account deletion or lockout can be a normal administrative task, a large number of these events occurring in a short period is a strong indicator of a widespread attack. This is a simple but effective detection that uses a sliding window and fixed thresholds (e.g., more than 5 deletions or 50 lockouts in 10 minutes) to identify a sudden, abnormal burst of activity that warrants immediate investigation.
  answer_sources:
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Windows Event ID 4740
  - Domain Controllers, Centralized Log Aggregator (SIEM), Active Directory Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH account_deletion_or_lockout_events | COUNT distinct_users over 10m_window | ALERT if distinct_user_count > threshold
- question: Is the current rate of account deletions, disablements, or lockouts statistically anomalous compared to a historical baseline?
  context: This question refines the detection of mass account removal by replacing fixed thresholds with dynamic, statistical baselining. This method is more adaptive to the natural ebb and flow of an organization's activity. By calculating a moving average and standard deviation of event counts over time, the system can identify a current spike that is a statistically significant outlier (e.g., a Z-score > 3), providing a more reliable signal that the observed activity is abnormal and potentially malicious.
  answer_sources:
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Windows Event ID 4740
  - Domain Controllers, Centralized Log Aggregator (SIEM), Active Directory Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH account_modification_events | TIMESERIES count by 5m | CALCULATE moving_avg, moving_std_dev over 24h | ALERT if current_count > (moving_avg + 3 * moving_std_dev)
- question: Can a time-series model predict and detect anomalous spikes in account modification events, accounting for seasonality?
  context: This is an advanced analytical approach to anomaly detection that can understand complex temporal patterns. A time-series model (like an LSTM Autoencoder) learns the normal rhythm of business, including daily and weekly cycles (e.g., fewer events on weekends). It then predicts the expected number of events for the next time interval. When the actual observed count significantly differs from the prediction, it generates an alert. This method is highly effective at finding anomalies that simpler statistical methods might miss because they do not account for seasonality.
  answer_sources:
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Windows Event ID 4740
  - Domain Controllers, Centralized Log Aggregator (SIEM), Active Directory Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: STREAM account_modification_event_counts | PREDICT expected_count with LSTM_model | CALCULATE residual = (observed - predicted) | ALERT if residual is outlier
- question: Is an unauthorized user, service account, or system from an unusual location performing account modifications?
  context: This question focuses on policy enforcement and identifying actions that violate established security boundaries. Account modifications should typically only be performed by designated administrators from specific management workstations. This analytic checks if a modification event was initiated by a non-administrative user, a service account (which should rarely perform such interactive tasks), or from an IP address outside of a defined privileged subnet. Any such event is a strong anomaly and a potential indicator of privilege abuse or a compromised account.
  answer_sources:
  - Windows Event ID 4723
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Management Servers, Cloud Identity and Access Management (IAM) Systems, DNS Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH account_modification_events | ALERT if (subject_user NOT IN admin_list) OR (subject_user_type == 'service_account') OR (source_ip NOT IN management_subnets)
- question: Is a user performing account modifications in a way that deviates from their own established behavioral baseline?
  context: This User and Entity Behavior Analytics (UEBA) question focuses on identifying anomalous behavior at the individual user level. Rather than comparing an action to a global rule, it compares a user's current activity to their own historical patterns. The system profiles each user's typical working hours, source locations (subnets, ASNs), and types of actions. An alert is triggered when a user performs an account modification that significantly deviates from their established norm (e.g., at an unusual time or from a new country), which could indicate that their account has been compromised.
  answer_sources:
  - Windows Event ID 4723
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Management Servers, Cloud Identity and Access Management (IAM) Systems, DNS Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH account_modification_events | PROFILE user_behavior (hours, source_asn) | CALCULATE deviation_score for current_event | ALERT if score > threshold
- question: Can we use unsupervised machine learning to identify anomalous account modification events that don't fit normal patterns?
  context: This question seeks to find novel or unknown threats without relying on pre-defined rules or signatures. An unsupervised clustering algorithm (like DBSCAN or Isolation Forest) is used to analyze historical account modification events based on multiple features (e.g., user privilege levels, source network, time of day). The algorithm automatically groups "normal" activities into dense clusters. Any event that does not fit into a cluster is flagged as an outlier or anomaly, representing a deviation from all previously observed normal behavior and warranting investigation.
  answer_sources:
  - Windows Event ID 4723
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Windows Event ID 4738
  - Zeek conn.log
  - Domain Controllers, VPN Concentrators, Management Servers, Cloud Identity and Access Management (IAM) Systems, DNS Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH historical_account_modification_events | CLUSTER using DBSCAN on features (privilege, source_asn, time_of_day) | STREAM new_events | ALERT if event is classified as an outlier
- question: Are we observing a direct correlation between an account modification and subsequent authentication failures for that same account?
  context: This question aims to confirm the immediate impact of an account modification. When an adversary deletes an account or resets a password, the legitimate user will be unable to log in, generating authentication failures. This stateful detection rule looks for this specific sequence of events: an account modification (like deletion or password reset) for a specific user, followed by multiple authentication failures for that same user within a short time window (e.g., 15 minutes). This correlation provides strong evidence of a successful and impactful attack.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4771
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Zeek conn.log
  - Zeek rdp.log
  - Zeek smb_mapping.log
  - Domain Controllers, Network TAPs/SPANs monitoring server segments, Application Servers, File Servers, VPN Gateways
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: ON account_modification(user) | TRIGGER stateful_rule | MONITOR for auth_failures(user) within 15m | ALERT if failure_count > 3
- question: Is there a widespread pattern of users having their accounts modified and then immediately failing to authenticate?
  context: This question scales the previous correlation logic to detect a widespread, coordinated attack rather than a single targeted one. It aggregates data across the enterprise to count how many distinct users experience both an account modification and a subsequent authentication failure within the same short time interval. A sudden spike in this correlated count, exceeding a historical baseline, would strongly indicate a large-scale campaign to lock out numerous users simultaneously, signifying a major security incident.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4771
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Zeek conn.log
  - Zeek rdp.log
  - Zeek smb_mapping.log
  - Domain Controllers, Network TAPs/SPANs monitoring server segments, Application Servers, File Servers, VPN Gateways
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH events in 1m_intervals | COUNT distinct_users with (account_modification AND subsequent_auth_failure) | COMPARE count to 30d_baseline | ALERT if count > percentile_99
- question: Can we automatically discover malicious event sequences related to account access removal?
  context: This question proposes using advanced data mining to automatically identify malicious attack chains. A sequence pattern mining algorithm can analyze vast amounts of event logs to discover frequently occurring, ordered patterns of activity. For example, it might learn that the sequence of (Event 4724: Password Reset) -> (Event 4625: Logon Failure) within a short window is a common pattern. By classifying these discovered patterns, the system can learn to recognize and alert on complex, multi-step malicious behaviors without them being explicitly pre-programmed.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4771
  - Windows Event ID 4724
  - Windows Event ID 4726
  - Zeek conn.log
  - Zeek rdp.log
  - Zeek smb_mapping.log
  - Domain Controllers, Network TAPs/SPANs monitoring server segments, Application Servers, File Servers, VPN Gateways
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MINE event_logs for frequent_sequences | IDENTIFY sequences like (event_A -> event_B) | CLASSIFY sequences as benign or malicious | ALERT on new malicious_sequence_detection