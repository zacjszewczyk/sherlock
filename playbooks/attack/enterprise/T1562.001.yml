name: T1562.001: Disable or Modify Tools
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has attempted to disable or modify security tools (e.g., antivirus, EDR, Sysmon) to evade detection. Indicators of this activity include the execution of known security tool disablers, the use of specific command-line arguments to stop or reconfigure security services, the correlation of unsigned process execution with security service interruptions, direct registry modifications to security tool configurations, and the clearing of event logs or a suspicious drop in log volume.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a process been executed whose file hash or name matches a known security tool disabler from our threat intelligence feed?
    context: This question aims to identify the direct execution of known malicious tools designed to disable security software. By continuously monitoring process creation events and comparing them against a curated list of indicators from threat intelligence, we can achieve early detection of an adversary's attempt to weaken our defenses. A match indicates a high-confidence threat that requires immediate attention.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek software.log
      - All enterprise workstations and servers, with heightened monitoring on administrative jump boxes, domain controllers, and security infrastructure servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH process_creation_events WHERE (process_hash IN CTI_feed_hashes OR process_name IN CTI_feed_names)
  - question: Was a known security tool disabler spawned by an unusual or statistically rare parent process?
    context: Adversaries often use non-standard processes (like a Word document spawning PowerShell) to launch malicious tools. By analyzing the parent process of a detected tool disabler and comparing it to a baseline of normal activity, we can identify anomalous execution chains. A rare parent-child relationship significantly increases the likelihood of malicious intent and helps prioritize the investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek software.log
      - All enterprise workstations and servers, with heightened monitoring on administrative jump boxes, domain controllers, and security infrastructure servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FIND process_from_previous_query. | GET parent_process. | COMPARE parent_process against baseline_frequency_for_child. | ALERT if parent_process_frequency < 5th_percentile.
  - question: Has a machine learning model identified a newly executed process as having a high probability of being a security tool disabler, even if its hash is unknown?
    context: This question leverages machine learning to proactively identify novel or unknown security tool disablers that would be missed by signature-based detection. By scoring new processes based on a variety of behavioral features (parent process, command-line structure, user context), the model can flag suspicious activity that deviates from benign norms, allowing for the discovery of zero-day threats or custom adversary tools.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek software.log
      - All enterprise workstations and servers, with heightened monitoring on administrative jump boxes, domain controllers, and security infrastructure servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each new_process_event | SCORE with ML_model(features: parent_process, cmd_entropy, user, file_path). | ALERT if score > high_probability_threshold.
  - question: Has a process been executed with command-line arguments containing patterns known to disable or reconfigure security tools?
    context: This question seeks to detect defense evasion by inspecting the command-line arguments of executed processes. Adversaries frequently use built-in system utilities like `net`, `sc`, `taskkill`, or PowerShell cmdlets to directly manipulate security services. Searching for specific command strings and patterns via regular expressions is an effective method for detecting these explicit tampering attempts.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Command-line and script block logs from all enterprise workstations and servers, especially domain controllers and administrative hosts.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH process_creation_events WHERE command_line MATCHES REGEX ('net stop WinDefend', 'sc config ... start= disabled', 'taskkill /IM msmpeng.exe', etc.)
  - question: Did a command targeting a known security tool exhibit unusually high command-line entropy, suggesting obfuscation?
    context: Adversaries often obfuscate or encode their commands to bypass simple string-based detections. High Shannon entropy in a command-line string can be an indicator of this obfuscation. By baselining normal entropy levels for processes and alerting on significant deviations, we can uncover suspicious commands that might otherwise go unnoticed, even if they target legitimate system tools.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Command-line and script block logs from all enterprise workstations and servers, especially domain controllers and administrative hosts.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each process_event | CALCULATE entropy(command_line). | COMPARE against baseline_entropy_for_process. | ALERT if entropy > 95th_percentile.
  - question: Has a machine learning model detected a sequence of commands within a user session that is highly indicative of a malicious attack chain involving security tool disablement?
    context: Individual commands may appear benign in isolation, but their sequence can reveal a malicious narrative. This question uses a sequence-to-sequence model to analyze the full context of a user's session. By training the model on known benign and malicious command sequences, it can identify patterns—such as reconnaissance, followed by privilege escalation, and then defense evasion—that are characteristic of an attack, providing a holistic view of adversary behavior.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Command-line and script block logs from all enterprise workstations and servers, especially domain controllers and administrative hosts.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each user_session | ANALYZE sequence_of_commands with Seq2Seq_model. | ALERT if session_sequence_probability > malicious_threshold.
  - question: Was a security service stopped or a security process terminated within five minutes of a process being created from an unsigned binary or a non-standard file path?
    context: This question establishes a time-based correlation between two suspicious events. Adversaries often drop tools into temporary or user-writable directories and then immediately use them to disable defenses. By linking a process execution from an unusual location (like %TEMP%) or an unsigned binary with the subsequent termination of a security service on the same host, we can detect this common attack pattern.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 7036
      - Sysmon Event ID 5
      - Process, service control manager, and process termination logs from all enterprise workstations, servers, and domain controllers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CORRELATE (process_creation where path IN ('%TEMP%', '%APPDATA%') OR is_signed=false) with (service_stop where service_name IN ('WinDefend', 'Sysmon')) on same host within 5 minutes.
  - question: Has there been a statistical anomaly in the rate of security service stop events on any single host?
    context: This question moves from individual events to statistical trends. A sudden spike in the number of times a security service is stopped on a host, compared to its historical baseline, can indicate a persistent or repeated attempt by an adversary to disable defenses. This is especially useful for detecting automated scripts or attacker tools that repeatedly try to kill security processes.
    answer_sources:
      - Windows Event ID 7036
      - Process, service control manager, and process termination logs from all enterprise workstations, servers, and domain controllers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each host | CALCULATE hourly_rate(service_stop_events). | COMPARE against 30-day_moving_average. | ALERT if current_rate > (average + 3 * stdev).
  - question: Has a sequence of system events been identified by a Hidden Markov Model as having a high probability of representing tampering activity?
    context: This question applies a probabilistic model to detect complex attack chains that might be missed by simple correlation rules. A Hidden Markov Model can learn the underlying states of a system ('Benign Operation' vs. 'Tampering Activity') based on observable event sequences (process creations, service stops, etc.). This allows it to flag a series of events as malicious even if no single event is definitively so.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 7036
      - Sysmon Event ID 5
      - Process, service control manager, and process termination logs from all enterprise workstations, servers, and domain controllers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each sequence of host_events | CALCULATE probability with HMM. | ALERT if sequence has high probability of being from 'Tampering Activity' state.
  - question: Has a registry key critical to a security tool's configuration been modified or deleted by a non-approved process?
    context: This question focuses on a direct method of disabling security tools by altering their configuration in the Windows Registry. By monitoring a specific watchlist of critical registry keys and alerting on any modification by a process not on an approved allowlist, we can quickly detect unauthorized and malicious configuration changes.
    answer_sources:
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - Sysmon Event ID 14
      - Windows Registry modification logs from all enterprise workstations and servers, with a focus on keys related to security product configuration.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH registry_events WHERE (target_key IN critical_key_watchlist) AND (process_name NOT IN allowlist).
  - question: Has a statistically rare process modified a critical security tool's registry key?
    context: This question adds a layer of behavioral analysis to registry monitoring. Even if a process is not explicitly malicious, its modification of a sensitive security key may be anomalous. By baselining which processes normally interact with these keys, we can flag modifications made by rare or never-before-seen processes as highly suspicious.
    answer_sources:
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - Sysmon Event ID 14
      - Windows Registry modification logs from all enterprise workstations and servers, with a focus on keys related to security product configuration.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each registry_modification_event on a critical_key | GET modifying_process. | COMPARE process against 30-day_baseline_of_modifiers. | ALERT if process is statistically rare.
  - question: Has an anomaly detection model flagged a registry modification event as a deviation from normal administrative behavior?
    context: This question uses machine learning to identify unusual combinations of features in registry modification events. An Isolation Forest or similar model can learn what normal administrative activity looks like (e.g., which user, from which parent process, modifies which key) and then score new events for their deviation from this norm. This helps detect novel tampering techniques that do not match predefined rules.
    answer_sources:
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - Sysmon Event ID 14
      - Windows Registry modification logs from all enterprise workstations and servers, with a focus on keys related to security product configuration.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each registry_event | SCORE with Isolation_Forest(features: process, parent_process, user, target_key). | ALERT if score indicates anomaly.
  - question: Has a Windows Event Log been explicitly cleared?
    context: This question targets a classic and high-confidence indicator of compromise. The clearing of a security or system log (Event ID 1102) is a deliberate act to erase evidence and is almost always malicious outside of highly controlled, documented administrative procedures. Any such event requires immediate investigation to determine the responsible user and process.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Log aggregation platform (SIEM), Windows Security/System event logs on endpoints, and network traffic logs from network sensors.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH for EventID=1102. | ENRICH with user and process context. | CORRELATE with change_management_records.
  - question: Has the log volume from a critical source dropped significantly below its statistical baseline, outside of a maintenance window?
    context: This question aims to detect a more subtle form of log tampering or tool disablement. Instead of clearing a log, an adversary might stop the logging service or disable the sensor. This would manifest as a sudden, sustained drop in log volume. By monitoring the time series of log counts and alerting on statistically significant negative deviations, we can detect potential sensor tampering.
    answer_sources:
      - Zeek conn.log
      - Sysmon logs
      - Log aggregation platform (SIEM), Windows Security/System event logs on endpoints, and network traffic logs from network sensors.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each log_source | MONITOR log_count_per_minute. | ALERT if current_count < (30-day_average - 3 * stdev) for >10 minutes.
  - question: Has the observed log volume from a key source fallen significantly below its forecasted level?
    context: This question enhances simple baseline alerting with a more sophisticated forecasting model. A time series model like SARIMA or Prophet can predict expected log volume while accounting for complex seasonal patterns (like time of day or day of week). An alert is generated when the actual volume falls outside the model's predicted confidence interval, providing a more accurate way to detect anomalous drops in logging.
    answer_sources:
      - Zeek conn.log
      - Sysmon logs
      - Log aggregation platform (SIEM), Windows Security/System event logs on endpoints, and network traffic logs from network sensors.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each log_source | FORECAST expected_volume with SARIMA_model. | ALERT if observed_volume is below predicted_confidence_interval.