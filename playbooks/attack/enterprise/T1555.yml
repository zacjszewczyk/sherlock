name: T1555: Credentials from Password Stores
id: 9a8f7c6e-5d4b-4a3c-8b2a-1f0e9d8c7b6a
description: This playbook helps investigate whether an adversary is attempting to obtain credentials from password stores. This involves detecting the use of known credential dumping tools by their file hash, identifying suspicious command-line arguments used to target credential stores, monitoring for unauthorized processes reading credential store files or LSASS memory, and correlating these host-based events with subsequent anomalous network activity that could indicate exfiltration.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation events where the executable's hash matches a known credential dumping tool?
    context: This is a high-fidelity method to detect the execution of well-known credential dumping utilities like Mimikatz or LaZagne. By comparing the hash of every new executable against a threat intelligence feed of known malicious hashes, analysts can quickly identify the presence of common adversary tools.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Threat intelligence feed of known credential dumper hashes
      - Endpoints (workstations, servers), with high priority on Tier 0 assets like Domain Controllers, Active Directory Federation Services (ADFS), and Privileged Access Workstations (PAWs).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_creation_events | join with threat_intel_hashes on executable_hash | where match_found
  - question: Have any unsigned executables with low prevalence across the enterprise been executed?
    context: This statistical approach helps find unknown or modified credential dumpers by identifying executables that are rare within the environment. Adversary tools are often not digitally signed and are typically found on only a small number of compromised hosts, whereas legitimate software is usually signed and widespread.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Code signing certificate information
      - Endpoints (workstations, servers), with high priority on Tier 0 assets like Domain Controllers, Active Directory Federation Services (ADFS), and Privileged Access Workstations (PAWs).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_creation_events | calculate prevalence of executable_hash | filter prevalence < 1% and is_signed = false
  - question: Has a machine learning model identified any process creation events as highly likely to be a credential dumper?
    context: This question leverages a machine learning model that analyzes multiple features of a process event (e.g., parent process, command-line entropy, PE header data) to classify it as benign or malicious. This method can detect novel or obfuscated credential dumping tools that evade signature-based and simple statistical detections.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Machine learning model scores/alerts
      - Endpoints (workstations, servers), with high priority on Tier 0 assets like Domain Controllers, Active Directory Federation Services (ADFS), and Privileged Access Workstations (PAWs).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_creation_events | enrich with ml_model_score | filter score > 0.9
  - question: Have any processes been executed with command-line arguments matching known credential dumping patterns?
    context: Adversaries often use specific commands, arguments, or target file paths when using credential dumping tools. This query searches process command-line logs for these tell-tale strings (e.g., `sekurlsa::logonpasswords`, `lsadump::sam`, or paths to browser login databases) to identify malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoints (workstations, servers), with high priority on Tier 0 assets like Domain Controllers, ADFS, and Privileged Access Workstations (PAWs).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_creation_events | filter command_line matches regex('sekurlsa::logonpasswords', 'lsadump::sam', etc.)
  - question: Have any script interpreters or common utilities been executed with unusually long or complex command lines?
    context: Adversaries frequently use obfuscation or long, complex commands within legitimate interpreters like PowerShell or CMD to hide their actions. This statistical method establishes a baseline for normal command-line length and entropy for these processes and flags significant deviations that could indicate malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Historical command-line execution data for baselining
      - Endpoints (workstations, servers), with high priority on Tier 0 assets like Domain Controllers, ADFS, and Privileged Access Workstations (PAWs).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_creation_events for powershell.exe, cmd.exe | calculate entropy(command_line) | filter entropy > baseline_mean + 3*stddev
  - question: Has a machine learning model classified any executed command lines as malicious or anomalous?
    context: This question relies on an advanced language model that can understand the structure and intent of command lines beyond simple keyword matching or statistical measures. This allows it to detect novel and heavily obfuscated attack patterns that other methods might miss.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Machine learning model scores/alerts for command lines
      - Endpoints (workstations, servers), with high priority on Tier 0 assets like Domain Controllers, ADFS, and Privileged Access Workstations (PAWs).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_creation_events | enrich command_line with ml_model_score | filter score > threshold
  - question: Has a process not on the approved allowlist attempted to read a known credential store file?
    context: This is a high-fidelity detection that requires configuring specific audit policies (SACLs) on sensitive files like browser password databases or KeePass vaults. An alert is triggered if any process not explicitly approved (e.g., chrome.exe, keepass.exe) tries to read one of these protected files.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Allowlist of legitimate applications for credential stores
      - User profile directories on workstations (e.g., `%APPDATA%`, `%LOCALAPPDATA%`) and server directories containing application configuration or credential files.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search file_access_events for credential_store_paths | filter process_name not in allowlist
  - question: Has a statistically rare or previously unseen process accessed a credential store file?
    context: This approach identifies suspicious access to credential stores without relying on a predefined allowlist. It builds a baseline of which processes normally access these sensitive files and flags any access by a process that is uncommon or has never been observed accessing that specific file before.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Historical file access data for baselining
      - User profile directories on workstations (e.g., `%APPDATA%`, `%LOCALAPPDATA%`) and server directories containing application configuration or credential files.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search file_access_events for credential_store_paths | calculate frequency of process_name | filter frequency < 5th_percentile
  - question: Has a machine learning model detected an anomalous sequence of file access events involving a credential store?
    context: This advanced technique models the normal behavioral patterns of users and their applications. It learns the typical sequence of events (e.g., a user logs in, then chrome.exe reads the 'Login Data' file). The model flags deviations from these learned normal sequences, which could indicate an adversary hijacking a session or running a tool out of context.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Machine learning model for user file access sequences
      - User profile directories on workstations (e.g., `%APPDATA%`, `%LOCALAPPDATA%`) and server directories containing application configuration or credential files.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: stream file_access_events | feed to rnn_autoencoder_model | alert on high_reconstruction_error
  - question: Has an unauthorized process attempted to read memory from the LSASS process?
    context: Accessing the memory of the Local Security Authority Subsystem Service (LSASS) is a classic technique for dumping credentials. This query specifically looks for processes requesting read access to `lsass.exe` and filters out known-good processes (like EDR or antivirus) that are on an allowlist to perform this action for legitimate security purposes.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4656
      - Allowlist of authorized processes for LSASS access
      - All Windows endpoints, with the highest priority on Tier 0 assets including Domain Controllers and ADFS servers, where LSASS memory contains high-value domain credentials.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_access_events where target_process='lsass.exe' and access_mask='0x1010' | filter source_process not in allowlist
  - question: Has a rare or unsigned process attempted to read memory from the LSASS process?
    context: This method hunts for unknown LSASS dumping tools by identifying source processes that are uncommon across the enterprise or are not digitally signed. Legitimate tools that access LSASS are typically widespread and signed, whereas malicious tools are often not.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4656
      - Code signing certificate information
      - All Windows endpoints, with the highest priority on Tier 0 assets including Domain Controllers and ADFS servers, where LSASS memory contains high-value domain credentials.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_access_events where target_process='lsass.exe' | calculate prevalence(source_process) | filter prevalence < 1% or is_signed = false
  - question: Has a machine learning model identified an anomalous LSASS memory access event as an outlier?
    context: This unsupervised learning approach groups all LSASS access events into clusters based on multiple features (source process, parent process, user, etc.). Normal, routine access by EDRs will form dense clusters. Any event that doesn't fit into a normal cluster is flagged as an outlier, representing a potentially malicious and novel attack.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4656
      - Clustering model for LSASS access events
      - All Windows endpoints, with the highest priority on Tier 0 assets including Domain Controllers and ADFS servers, where LSASS memory contains high-value domain credentials.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search process_access_events where target_process='lsass.exe' | feed features to dbscan_model | alert on events classified as noise/outlier
  - question: Following a read of a credential store file, did the host make a network connection to a known malicious IP address?
    context: This question links two distinct events to uncover a full attack chain: credential theft followed by exfiltration. It specifically looks for a file read on a password store, followed within a short time window by a network connection from the same host to an IP address found on a threat intelligence blocklist.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Threat intelligence IP blocklist
      - SIEM or data lake where host and network logs are correlated, endpoint file systems, network egress points (e.g., firewalls, proxies), and DNS servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search file_read on credential_store | correlate with network_connection within 5_mins on same_host | where destination_ip in blocklist
  - question: Following a read of a credential store file, did the host make an anomalous network connection (e.g., to a rare destination or with an unusually large payload)?
    context: This statistical correlation helps find exfiltration to unknown command-and-control infrastructure. After a credential store is read, it looks for subsequent network connections that are statistically unusual for that host, such as connecting to a very rare IP address or sending an abnormally large amount of data.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Historical network connection data for baselining
      - SIEM or data lake where host and network logs are correlated, endpoint file systems, network egress points (e.g., firewalls, proxies), and DNS servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: search file_read on credential_store | correlate with network_connection within 5_mins on same_host | filter destination_ip_rarity > 99th_percentile or outbound_bytes > 95th_percentile
  - question: Has a machine learning model detected an anomalous sequence of events involving a credential store read followed by a suspicious network connection?
    context: This advanced correlation method uses a model trained on normal sequences of host and network activity. It can flag complex, multi-stage attack patterns—such as a credential store read followed by a connection to a domain with high entropy—as a significant deviation from learned benign behavior.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Sequence-based anomaly detection model
      - SIEM or data lake where host and network logs are correlated, endpoint file systems, network egress points (e.g., firewalls, proxies), and DNS servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: stream host_and_network_events | feed to sequence_model | alert on anomalous_sequence matching 'read -> exfil' pattern