name: T1078: Valid Accounts
id: f8e2e7b4-1b3c-4d5a-8e9f-0a1b2c3d4e5f
description: Adversaries may gain initial access, maintain persistence, escalate privileges, or evade defenses by using legitimate credentials that have been stolen or are otherwise accessible. This playbook helps identify various forms of valid account abuse, including the use of breached credentials, password spraying attacks, statistically anomalous logins (e.g., impossible travel, unusual hours), first-time access to critical systems, use of dormant accounts, abuse of service accounts for interactive logins, and compromise via SIM swaps. It covers detection across multiple stages of an attack, from initial compromise via external services to lateral movement and persistence within the network.
type: technique
related:
  - TA0001: Initial Access
  - TA0003: Persistence
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
  - TA0027: Initial Access
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a successful remote login occurred using a known breached credential?
    context: This question aims to detect the most direct form of credential compromise, where an attacker uses a username and password combination found in a public or private breach dataset. A successful remote authentication (Logon Type 3 or 10) using a username from a known breach is a high-confidence indicator that a valid account is being used for malicious access.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways)
      - Domain Controllers
      - Cloud identity providers
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_remote_login (EID 4624, LogonType 3 or 10) | CHECK username against breached_credential_database | IF match, ALERT.'
  - question: Has a user on a breach list successfully logged in from a new location after a period of failed attempts, indicating a potential credential stuffing success?
    context: Credential stuffing attacks often involve many failed logins before a success. This question seeks to identify that pattern by looking for a statistically significant drop in a user's login failure rate from a high level to zero, especially when the successful login comes from a new or unusual network location (ASN or geolocation). This pinpoints the moment an automated attack succeeds.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways)
      - Domain Controllers
      - Cloud identity providers
    range: last 90 days
    queries: 'pseudocode: FOR user in breach_list | CALCULATE baseline_failure_rate | IF new_location_login (EID 4624) occurs AND short_term_failure_rate drops to 0 | ALERT.'
  - question: Does a remote login have a high probability of being malicious based on a combination of risk factors?
    context: This question uses a machine learning approach to score remote logins. Instead of relying on a single indicator, it combines multiple weak signals—such as the user being on a breach list, the login originating from a new location, and occurring at an unusual time—to produce a single, high-confidence score. This helps detect sophisticated attacks that might evade simpler rules.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways)
      - Domain Controllers
      - Cloud identity providers
    range: last 90 days
    queries: 'pseudocode: FOREACH remote_login | SCORE login with classification_model(features: is_breached, is_new_geo, is_new_asn, time_anomaly) | IF score > 0.85, ALERT.'
  - question: Has a single source IP address generated a high number of failed logins across many different user accounts, indicating a password spraying attack?
    context: Password spraying is a brute-force technique where an attacker tries a few common passwords against many different user accounts. This question aims to detect this "low and slow" attack by looking for a single IP address generating failed authentications (Logon Type 3 or 10) for an abnormally high number of distinct users within a short time frame.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways)
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: FROM failed_logins (EID 4625) | GROUPBY source_ip, time_window(5min) | COUNT distinct usernames | IF count > 20, ALERT.'
  - question: Is the ratio of distinct usernames to source IPs in failed logins statistically anomalous, suggesting a password spraying attack?
    context: This provides a more dynamic way to detect password spraying. Instead of a static threshold, it establishes a baseline for the normal ratio of users to IPs in failed logins. A significant deviation from this baseline (e.g., many users from one IP) is a strong statistical indicator of a password spraying attack.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways)
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: OVER rolling_window(10min) | CALCULATE ratio = distinct_users(failed_logins) / distinct_ips(failed_logins) | IF ratio > (baseline_mean + 3*std_dev), ALERT.'
  - question: Can failed login events be clustered to identify a dense group originating from a single IP targeting multiple users, indicative of password spraying?
    context: This question uses an unsupervised machine learning model (DBSCAN) to find anomalous clusters in authentication data. A password spraying attack will naturally form a dense cluster of failed logins when plotted with features like source IP and time, allowing the model to identify it without pre-defined rules or thresholds.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., VPN gateways, OWA, RDP gateways)
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: INPUT failed_login_events(features: source_ip, timestamp, username) to DBSCAN_model | IDENTIFY anomalous_clusters | ALERT on clusters matching spray_pattern.'
  - question: Has a user account logged in from two locations where the travel time between them is physically impossible?
    context: This is a classic and effective detection for account compromise. By tracking the time and location of consecutive logins, it's possible to calculate the required travel speed. If this speed is impossible (e.g., > 600 mph), it's a very strong signal that two different individuals are using the account from different locations simultaneously.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud identity providers
      - User workstations
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_login | CACHE user, location, time | ON next_login by user | CALCULATE speed = distance(loc1, loc2) / time_delta | IF speed > 600 mph, ALERT.'
  - question: Has a successful login accumulated a high risk score based on multiple simultaneous deviations from the user's normal behavior?
    context: This question seeks to identify high-risk logins by combining several behavioral anomalies. A single anomaly (like a new ASN) might be benign, but multiple anomalies occurring together (e.g., new ASN, new country, unusual time of day) for a single login event greatly increase the likelihood of a compromise.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud identity providers
      - User workstations
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_login | CALCULATE risk_score based on deviations from user_profile (ASN, country, hours) | IF risk_score >= 3, ALERT.'
  - question: Has an unsupervised machine learning model identified a user's login as a significant outlier compared to their historical behavior?
    context: This question leverages an Isolation Forest model (or similar) to learn a user's unique login patterns. The model can then score new logins based on how well they fit this learned profile. Logins that are easily "isolated" by the model are considered anomalous and are flagged for review, allowing for detection of novel or subtle attack patterns.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud identity providers
      - User workstations
    range: last 90 days
    queries: 'pseudocode: FOREACH new_login | SCORE login with user_specific_isolation_forest_model | IF score is in top_percentile_of_anomalies, ALERT.'
  - question: Has a user account logged into a critical asset for which they are not authorized according to a defined access control list?
    context: This is a rule-based check to enforce access control policy at the detection layer. By maintaining a clear mapping of which user roles can access which critical systems, any login that violates this policy can be immediately flagged as a potential security incident, indicating either a misconfiguration or an adversary abusing an account.
    answer_sources:
      - Windows Event ID 4624
      - Critical application servers (e.g., HR, Finance)
      - Domain Controllers
      - Code repositories
      - Infrastructure management consoles
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_login to critical_asset | CHECK if user_role is in asset_ACL | IF not, ALERT.'
  - question: Has a non-administrative user account successfully logged into a critical asset for the very first time?
    context: Even if a user has legitimate privileges, their first-ever access to a sensitive system is a noteworthy event that warrants scrutiny. This question aims to flag such events, as they could represent an adversary who has compromised an account and is now beginning to explore and access valuable targets.
    answer_sources:
      - Windows Event ID 4624
      - Critical application servers (e.g., HR, Finance)
      - Domain Controllers
      - Code repositories
      - Infrastructure management consoles
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_login to critical_asset | CHECK against user''s historical_host_access_list | IF host is not in list, ALERT.'
  - question: Has a user login created a new, statistically improbable link between a user and a critical asset in the network graph?
    context: This question models the network as a graph of users and assets. Link prediction algorithms can learn which connections are "normal" or expected based on the existing graph structure. A new login that creates a highly unexpected link (i.e., one with a very low prediction score) is flagged as anomalous, suggesting an adversary is forging new access paths.
    answer_sources:
      - Windows Event ID 4624
      - Critical application servers (e.g., HR, Finance)
      - Domain Controllers
      - Code repositories
      - Infrastructure management consoles
    range: last 90 days
    queries: 'pseudocode: FOREACH new_login (user-to-asset_link) | SCORE link with link_prediction_model | IF score is very low, ALERT.'
  - question: Has a successful remote login originated from an IP address known to be malicious?
    context: This question checks the source IP of every successful remote login against a high-fidelity list of known bad IPs (e.g., C2 servers, TOR nodes, malicious proxies). A match is a high-confidence indicator that a compromised account is being used for persistent access by an adversary.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - VPN Concentrators
      - RDP Gateways
      - Firewall and proxy servers
      - Network egress points
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_remote_login | CHECK source_ip against threat_intel_feed | IF match, ALERT.'
  - question: Has a successful login originated from an Autonomous System Number (ASN) with a historically low login success rate?
    context: Attackers often use infrastructure in ASNs that are not typically used by legitimate users. This question identifies successful logins from such statistically rare ASNs. While not definitive on its own, it serves as a valuable indicator of potentially malicious persistence.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - VPN Concentrators
      - RDP Gateways
      - Firewall and proxy servers
      - Network egress points
    range: last 90 days
    queries: 'pseudocode: ON successful_login | GET source_asn | IF historical_success_rate for ASN is in bottom 5th percentile, ALERT.'
  - question: Does the source IP of a successful remote login have a high maliciousness score from a reputation model?
    context: This question leverages a machine learning model that scores IP addresses for their likelihood of being malicious. This provides a more nuanced signal than a simple blocklist, allowing for the detection of IPs that exhibit malicious characteristics but are not yet on a formal threat feed.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - VPN Concentrators
      - RDP Gateways
      - Firewall and proxy servers
      - Network egress points
    range: last 90 days
    queries: 'pseudocode: FOREACH successful_remote_login | SCORE source_ip with ip_reputation_model | IF score > 90, ALERT.'
  - question: Has a new scheduled task or service been created with a command-line that matches known malicious patterns?
    context: Adversaries frequently create scheduled tasks or services to maintain persistence. This question uses regular expressions to scan the command-lines of these new persistence mechanisms for tell-tale signs of abuse, such as PowerShell encoding ('-enc'), use of 'rundll32.exe javascript:', or execution from temporary directories.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4688
      - Zeek dns.log
      - User workstations
      - Application servers
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: ON new_task (EID 4698) or new_service (EID 7045) | APPLY regex_library to command_line | IF match, ALERT.'
  - question: Does the command-line of a new scheduled task or service have unusually high entropy, suggesting obfuscation?
    context: To evade simple signature-based detections, attackers often obfuscate or encode the commands used in their persistence mechanisms. This results in a command-line string with high character randomness, or entropy. This question flags new tasks or services with abnormally high entropy as suspicious.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4688
      - Zeek dns.log
      - User workstations
      - Application servers
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: ON new_task or new_service | CALCULATE shannon_entropy of command_line | IF entropy > 98th percentile of historical values, ALERT.'
  - question: Has an NLP model classified the command-line of a new persistence mechanism as malicious?
    context: This question uses a sophisticated Natural Language Processing (NLP) model trained to understand the structure and content of command-lines. The model can distinguish between benign administrative scripts and malicious commands, allowing it to detect novel or complex attack techniques that might not match simple patterns or entropy checks.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 7045
      - Windows Event ID 4688
      - Zeek dns.log
      - User workstations
      - Application servers
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: ON new_task or new_service | CLASSIFY command_line with NLP_model | IF classification is ''malicious'' with high confidence, ALERT.'
  - question: Has a dormant account (inactive for over 90 days) suddenly been used to log in?
    context: User or service accounts that have been inactive for a long period (e.g., > 90 days) are sometimes targeted by adversaries because their activity is less likely to be monitored. A sudden, successful login from such an account is highly suspicious and could indicate that a forgotten or old credential has been compromised and is being used for persistence.
    answer_sources:
      - Windows Event ID 4624
      - Domain Controllers
      - Legacy application servers
      - HR systems
    range: last 90 days
    queries: 'pseudocode: MAINTAIN watchlist of accounts with lastLogon > 90 days | ON successful_login (EID 4624) | IF user is on watchlist, ALERT.'
  - question: After a dormant account became active, did its subsequent logins occur at machine-like intervals, suggesting automated beaconing?
    context: Once an adversary compromises a dormant account, they may use it for automated C2 beaconing. This question looks for that pattern by analyzing the time intervals between logins for a newly-active dormant account. A very low standard deviation in these time deltas suggests a scripted, non-human process.
    answer_sources:
      - Windows Event ID 4624
      - Domain Controllers
      - Legacy application servers
      - HR systems
    range: last 90 days
    queries: 'pseudocode: AFTER dormant_account_login_alert | CAPTURE next 5-10 login timestamps | CALCULATE std_dev of time_deltas | IF std_dev is near zero, ALERT.'
  - question: Has a time-series analysis detected a sudden state change for an account from prolonged inactivity to active logins?
    context: This question uses a more formal statistical method, change point detection, to identify when an account's behavior fundamentally shifts. It models daily login counts as a time series and automatically detects the point where an account transitions from a long period of zero activity to a new state of regular activity, which is a strong anomaly signal.
    answer_sources:
      - Windows Event ID 4624
      - Domain Controllers
      - Legacy application servers
      - HR systems
    range: last 90 days
    queries: 'pseudocode: FOR each user | MODEL daily login counts as time_series | APPLY change_point_detection | IF change from zero-activity to active state is detected, ALERT.'
  - question: Has a single non-administrative user account initiated an unusually high number of remote connections to distinct hosts?
    context: This question aims to detect lateral movement. When an adversary compromises a standard user account, they often use it as a pivot point to connect to many other systems on the network. This behavior creates a "hub-and-spoke" pattern, which is abnormal for most non-administrative users and can be detected by counting distinct remote connections from a single source.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4648
      - User workstations
      - Jump servers
      - Internal network segments
    range: last 90 days
    queries: 'pseudocode: FROM a single workstation, for a single user | COUNT distinct remote hosts logged into (Type 3/10) within 1 hour | IF count > 10, ALERT.'
  - question: Has a user's daily count of new remote host connections exceeded their own established statistical baseline?
    context: This is a user-centric, statistical approach to detecting lateral movement. Instead of a global threshold, it establishes a personal baseline for each user's normal "exploration" behavior. An alert is triggered only when a user connects to significantly more new hosts than they typically do, making the detection more tailored and reducing false positives.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4648
      - User workstations
      - Jump servers
      - Internal network segments
    range: last 90 days
    queries: 'pseudocode: FOR each user | CALCULATE 99th percentile of distinct_hosts_per_day | IF daily_count exceeds personal_threshold, ALERT.'
  - question: Has a user's 'out-degree' centrality in the network login graph suddenly and sharply increased?
    context: This question applies graph theory to detect lateral movement. A user's "out-degree" represents the number of other hosts they connect to. By modeling user-to-host logins as a graph, a sudden spike in a user's out-degree centrality compared to their history is a strong mathematical indicator that their account is being used to rapidly expand access across the network.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4648
      - User workstations
      - Jump servers
      - Internal network segments
    range: last 90 days
    queries: 'pseudocode: MODEL user-to-host logins as a directed graph | FOREACH user, track out-degree over time | IF sudden sharp increase in out-degree, ALERT.'
  - question: Has a default, vendor, or service account been used for an interactive login?
    context: Service accounts and default vendor accounts are intended for automated, non-interactive processes (e.g., Logon Type 5). An adversary may abuse these accounts for an interactive (Logon Type 2) or remote interactive (Logon Type 10) session to hide their activity. Such a login is a direct violation of the account's intended purpose and a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4624
      - Domain Controllers
      - Application servers
      - Network appliances
      - Virtualization infrastructure
    range: last 90 days
    queries: 'pseudocode: MAINTAIN watchlist of service/default accounts | ON successful_login (EID 4624) | IF user is on watchlist AND LogonType is 2 or 10, ALERT.'
  - question: Has a service account, which historically only uses non-interactive logon types, suddenly performed an interactive login?
    context: This is a statistical confirmation of service account abuse. For a legitimate service account, the historical frequency of interactive logon types (2 or 10) should be zero. Therefore, any observed instance of such a login is a "zero-frequency event" — a high-confidence statistical anomaly that warrants an immediate alert.
    answer_sources:
      - Windows Event ID 4624
      - Domain Controllers
      - Application servers
      - Network appliances
      - Virtualization infrastructure
    range: last 90 days
    queries: 'pseudocode: FOR accounts on service_watchlist | PROFILE historical logon types | IF LogonType 2 or 10 occurs (a zero-frequency event), ALERT.'
  - question: Has a machine learning model classified an account as a service account, which was then used for an interactive login?
    context: This question automates the process of identifying service accounts. A model can be trained to classify accounts based on features like naming conventions and group memberships. This allows for the automatic application of the rule that flags any interactive login from an account the model has tagged as a "service account."
    answer_sources:
      - Windows Event ID 4624
      - Domain Controllers
      - Application servers
      - Network appliances
      - Virtualization infrastructure
    range: last 90 days
    queries: 'pseudocode: CLASSIFY accounts as ''user'' or ''service'' with ML model | IF account classified as ''service'' performs LogonType 2 or 10 login, ALERT.'
  - question: Was a user added to a privileged group and then immediately used that account to log in?
    context: This question looks for the immediate abuse of newly granted privileges. Adversaries who escalate privileges by adding an account to a group like Domain Admins will often use those privileges right away. This rule detects that sequence by correlating a group membership change event with a subsequent login event within a very short time window.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: ON add_to_privileged_group (EID 4728/4732) for User X | IF successful_login (EID 4624) by User X occurs within 10 minutes, ALERT.'
  - question: Did the time between a user being added to a privileged group and their next login fall into a statistically anomalous low percentile?
    context: This question provides a statistical baseline for a common administrative action. By measuring the normal delay between privilege grants and usage during change windows, it can identify when this action happens suspiciously fast (e.g., within seconds), which is more indicative of an automated attack script than a human administrator's workflow.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: MEASURE baseline time_delta between privilege_add and next_login | IF a new instance of time_delta is an outlier (< 1st percentile), ALERT.'
  - question: Has a rare or known-malicious sequence of administrative events, such as privilege addition followed by login, been detected?
    context: This question uses sequence mining to identify chains of events that match known attack patterns. An adversary's actions often follow a logical progression. By modeling these progressions, the system can flag a sequence like [User A adds User B to Admins] -> [User B logs into DC] as malicious, especially if User A is not a designated admin.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries: 'pseudocode: USE sequence_mining to find rare or known-bad event chains | IF chain [add_to_admin -> admin_login] is detected, ALERT.'
  - question: Following a credential dumping alert on a host, was the associated user account then used for remote logins to new systems?
    context: This question correlates two distinct attack phases: credential dumping and lateral movement. An alert for an activity like accessing lsass.exe indicates credentials may have been stolen. This rule looks for the immediate follow-on action: the user account from that compromised host being used to log into other systems, confirming the stolen credentials are being abused.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4648
      - User workstations
      - Domain Controllers
      - Member servers
    range: last 90 days
    queries: 'pseudocode: ON credential_dump_alert for User X on Host A | IF remote_login by User X to Host B occurs within 24 hours, ALERT.'
  - question: After a credential dumping alert for a user, did that user's rate of 'first time' remote logins spike?
    context: This question provides a statistical method for confirming the abuse of dumped credentials. After credentials are stolen, an attacker will likely use them to access many new systems. This rule detects that behavior by monitoring for a statistically significant increase in the rate at which a user makes "first time" connections to new hosts shortly after a credential dumping alert.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4648
      - User workstations
      - Domain Controllers
      - Member servers
    range: last 90 days
    queries: 'pseudocode: ON credential_dump_alert for User X | MONITOR rate of first-time_logins_to_new_hosts | IF rate exceeds 99th percentile of user''s baseline, ALERT.'
  - question: Did a Bayesian model's probability of lateral movement cross a threshold after observing a credential dumping event?
    context: This question uses a probabilistic model (a Bayesian network) to formally link related events. The model is structured so that a "Credential Dump" event significantly raises the probability of a "Lateral Movement" event. When the evidence of a dump is observed, the model updates its belief, and if the calculated probability of lateral movement becomes high enough, it triggers an alert.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4648
      - User workstations
      - Domain Controllers
      - Member servers
    range: last 90 days
    queries: 'pseudocode: UPDATE Bayesian_network with evidence of credential_dump_event | IF posterior_probability(lateral_movement) > threshold, ALERT.'
  - question: Have an unusually high number of distinct user accounts logged into a single host that is not a designated multi-user server?
    context: Standard user workstations are typically used by one, or very few, individuals. An adversary may use a compromised workstation as a jump box or staging area, causing many different compromised accounts to log into it. This rule detects this anomaly by alerting when the number of distinct users on a non-terminal server exceeds a low threshold.
    answer_sources:
      - Windows Event ID 4624
      - User workstations
      - Member servers
    range: last 90 days
    queries: 'pseudocode: FOR hosts not on multi-user_list | COUNT distinct users with successful logins in 24h | IF count > 3, ALERT.'
  - question: Has a host's daily count of distinct user logins deviated significantly from its established median?
    context: This question establishes a behavioral baseline for each individual host. Using robust statistics like the median absolute deviation (MAD), it can detect when a host's daily distinct user count becomes anomalous compared to its own history. This is effective for identifying when a single-user workstation suddenly starts behaving like a multi-user server.
    answer_sources:
      - Windows Event ID 4624
      - User workstations
      - Member servers
    range: last 90 days
    queries: 'pseudocode: FOR each host | CALCULATE baseline of distinct_daily_users (median, MAD) | IF daily_count > median + 3.5 * MAD, ALERT.'
  - question: Has a clustering algorithm detected that a host has moved from a 'single-user' cluster to a 'multi-user' cluster?
    context: This question uses machine learning to automatically group hosts into behavioral clusters (e.g., 'workstations', 'servers'). If a host that has always been in the 'single-user workstation' cluster suddenly has login patterns that cause it to move to the 'multi-user server' cluster, this state change is flagged as a significant and suspicious anomaly.
    answer_sources:
      - Windows Event ID 4624
      - User workstations
      - Member servers
    range: last 90 days
    queries: 'pseudocode: PERIODICALLY run clustering on hosts based on login features | IF a host changes from ''single-user'' cluster to ''multi-user'' cluster, ALERT.'
  - question: Did a process created under a valid user's context have a file hash matching a known piece of malware?
    context: This is a fundamental detection method for defense evasion. Adversaries may use a valid account to run malicious code. This question checks the hash (SHA256 or MD5) of every newly created process against a threat intelligence database of known malware. A match is a definitive indicator of malicious code execution.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Servers
    range: last 90 days
    queries: 'pseudocode: ON process_creation (EID 4688) | LOOKUP executable_hash in malware_hash_database | IF match, ALERT.'
  - question: Was a process executed that has a globally rare hash and is not signed by a trusted publisher?
    context: This question identifies potentially malicious files that are not yet in a threat database. The logic is that most legitimate software is widely distributed and digitally signed. A file that is very rare across the entire environment and lacks a valid signature is statistically suspicious and should be investigated further, for example, by sending it to a sandbox for analysis.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Servers
    range: last 90 days
    queries: 'pseudocode: ON process_creation | GET hash and signature_status | IF prevalence(hash) < 0.01% AND is_unsigned, FLAG for analysis.'
  - question: Does a newly executed file receive a high maliciousness score from a static analysis machine learning model?
    context: This question provides an automated method for assessing unknown files. Instead of relying on signatures or prevalence, it uses a machine learning model trained on the features of portable executable (PE) files. The model can predict the likelihood that a new or rare file is malicious, enabling detection of novel malware.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Servers
    range: last 90 days
    queries: 'pseudocode: FOR new or rare hashes | SCORE hash with static_analysis_ML_model | IF score is high, ALERT.'
  - question: Was a legitimate, signed Windows binary executed with a command-line structure indicative of malicious activity (LOLBAS)?
    context: Adversaries "live off the land" by abusing legitimate system tools for malicious purposes. This question uses a library of regular expressions to find known abuse patterns for binaries like certutil.exe (for downloading files) or rundll32.exe (for executing scriptlets), allowing detection of malicious activity even when the binary itself is trusted.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Servers
    range: last 90 days
    queries: 'pseudocode: ON process_creation (EID 4688) | MATCH command_line against LOLBAS_regex_library | IF match, ALERT.'
  - question: Was a high-risk system utility (e.g., powershell.exe) executed with a statistically rare combination of command-line switches?
    context: This question establishes a baseline of how system utilities are normally used in the environment. Adversaries often use specific combinations of switches for malicious purposes (e.g., 'powershell -w hidden -enc'). The use of a historically rare switch or combination of switches for a given utility is a statistical anomaly that can indicate abuse.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Servers
    range: last 90 days
    queries: 'pseudocode: FOR high-risk binaries | BASELINE frequency of command-line switches | IF rare switch or combination is used, ALERT.'
  - question: Has a deep learning model classified a command-line string as malicious based on its structure and tokens?
    context: This question uses a sophisticated character-level Convolutional Neural Network (CNN) to analyze command-line strings. This model can learn subtle, complex patterns from vast datasets of benign and malicious commands, enabling it to classify novel and obfuscated attack commands that would evade traditional signature- or rule-based methods.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Servers
    range: last 90 days
    queries: 'pseudocode: FEED command_line_string into character-level_CNN_model | IF classification is ''malicious'' with high confidence, ALERT.'
  - question: Is a non-browser process making a network connection to a newly registered domain?
    context: Adversaries frequently use newly registered domains (NRDs) for command and control, as they are less likely to be on reputation blocklists. This question focuses on the highest-risk activity: connections to NRDs from processes that are not web browsers, as this is highly uncharacteristic of normal user activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network egress points
      - DNS servers
      - User workstations
    range: last 90 days
    queries: 'pseudocode: ON DNS_request to domain with creation_date < 30 days | IDENTIFY source_process | IF process is not a browser, ALERT.'
  - question: Does a network connection show signs of C2 beaconing (low-variance intervals) or Domain Generation Algorithms (high-entropy DNS queries)?
    context: This question looks for two classic signatures of C2 traffic. First, it analyzes the time between connections to a destination to find the machine-like, periodic pattern of beaconing. Second, it calculates the character randomness (entropy) of DNS queries to detect the algorithmically generated domains often used by malware to find C2 servers.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network egress points
      - DNS servers
      - User workstations
    range: last 90 days
    queries: 'pseudocode: CALCULATE std_dev of inter-arrival_times for connections to find beaconing | CALCULATE entropy of DNS query names to find DGA | ALERT on anomalies.'
  - question: Has a host's network traffic pattern been flagged as anomalous by an LSTM autoencoder model?
    context: This question uses a sophisticated time-series anomaly detection model (an LSTM autoencoder) to learn a host's normal network behavior. The model learns to "reconstruct" benign traffic patterns. When it encounters C2-like activity that deviates from this norm, it will have a high reconstruction error, which triggers an alert.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network egress points
      - DNS servers
      - User workstations
    range: last 90 days
    queries: 'pseudocode: MODEL host network traffic as multivariate time series | USE LSTM_autoencoder to learn normal behavior | ALERT on high reconstruction error.'
  - question: Has a successful remote login to an external service been made by a service, privileged, or dormant account for the first time?
    context: This question identifies high-risk remote access. Service accounts, privileged accounts, and long-dormant accounts should rarely, if ever, be used to log in from outside the network. A successful first-time remote login by any of these account types is a significant anomaly and could indicate an adversary is using a compromised, high-value account for persistence.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Authentication Servers
      - VPN Concentrators
      - Domain Controllers
      - SIEM
    range: last 90 days
    queries: 'pseudocode: MAINTAIN watchlists for service, privileged, and dormant accounts | IF account on watchlist performs first-time remote login, ALERT.'
  - question: Did a remote access session exhibit non-human characteristics, such as an abnormally long duration or precise, repeating connection interval?
    context: Adversaries using valid accounts for persistence often establish automated connections that differ from human behavior. This question seeks to identify these non-human patterns by looking for remote sessions that last for an unusually long time (e.g., > 48 hours) or that reconnect with a machine-like, periodic interval, which is a strong sign of C2 beaconing.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Zeek conn.log
      - Authentication Servers
      - VPN Concentrators
      - Network Gateway
      - SIEM
    range: last 90 days
    queries: 'pseudocode: ANALYZE remote sessions | IF duration > 48 hours OR reconnect_interval is highly periodic, ALERT.'
  - question: Has a user's remote session duration or time between sessions deviated by more than 3 standard deviations from their personal baseline?
    context: This question creates a personalized statistical profile for each user's remote access habits. By calculating the user's normal session length and time between sessions, it can flag any new session that is a significant statistical outlier from their own established pattern, indicating a potential hijacking of their remote access session.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Zeek conn.log
      - Authentication Servers
      - VPN Concentrators
      - Network Gateway
      - SIEM
    range: last 90 days
    queries: 'pseudocode: FOR each user, baseline session_duration and inter-session_time | IF new session deviates > 3 std_dev from baseline, ALERT.'
  - question: Has a change-point detection algorithm identified a shift in a user's remote access patterns from sporadic to periodic?
    context: This question uses time-series analysis to detect a fundamental shift in a user's behavior. A human's remote access is typically sporadic. If an account is compromised for C2, its access pattern may shift to being regular and periodic. A change-point detection algorithm can automatically identify this shift, providing a high-confidence alert that the account's use has changed.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Zeek conn.log
      - Authentication Servers
      - VPN Concentrators
      - Network Gateway
      - SIEM
    range: last 90 days
    queries: 'pseudocode: MODEL user''s remote connection times as a time series | APPLY change-point detection | IF a shift from sporadic to periodic pattern is found, ALERT.'
  - question: Did a successful user authentication occur from a known anonymizing proxy within 4 hours of a SIM card change event for that user?
    context: This question targets a specific account takeover scenario: a SIM swap attack. The rule correlates two key events: an MDM log indicating a SIM card change (the takeover) and a subsequent successful login from a high-risk source like Tor or a proxy (the abuse). The tight time window (4 hours) makes this a high-confidence indicator of compromise.
    answer_sources:
      - MDM logs (IMSI/ICCID changes, SIM status, device compliance/enrollment status)
      - Windows Event ID 4624
      - Azure AD SignInLogs
      - VPN authentication logs
      - Zeek conn.log
      - Mobile Device Management (MDM) Platform
      - Corporate Authentication Servers (e.g., Active Directory)
      - Cloud Identity Providers (e.g., Azure AD, Okta)
      - VPN Concentrators
    range: last 90 days
    queries: 'pseudocode: ON MDM_SIM_change_event for user | IF successful_auth from user via anonymizing_proxy occurs within 4 hours, ALERT.'
  - question: Following a SIM swap, did a user authentication generate a high risk score based on multiple behavioral deviations?
    context: This question provides a robust, score-based method to detect SIM swap abuse. It first identifies a SIM change from MDM logs. Then, it scores any subsequent login against the user's established baseline, adding points for anomalies like a new country, a new ASN, or an unusual login time. A high cumulative score following a SIM swap is a strong signal of account takeover.
    answer_sources:
      - MDM logs (IMSI/ICCID changes, SIM status, device compliance/enrollment status)
      - Windows Event ID 4624
      - Azure AD SignInLogs
      - VPN authentication logs
      - Zeek conn.log
      - Mobile Device Management (MDM) Platform
      - Corporate Authentication Servers (e.g., Active Directory)
      - Cloud Identity Providers (e.g., Azure AD, Okta)
      - VPN Concentrators
    range: last 90 days
    queries: 'pseudocode: ON MDM_SIM_change_event for user | SCORE subsequent logins on deviations (new country, new ASN, odd hour) | IF total_score > 4, ALERT.'
  - question: Did an anomaly detection model flag a user login as a severe outlier shortly after an MDM-logged SIM change for that user?
    context: This question uses a sophisticated, per-user machine learning model (Isolation Forest) to detect SIM swap abuse. The model learns a user's unique multi-faceted login behavior. A login that occurs within 4 hours of a SIM change and is also flagged by the model as a top-percentile anomaly provides extremely high confidence that an account takeover has occurred, justifying an automated response like account suspension.
    answer_sources:
      - MDM logs (IMSI/ICCID changes, SIM status, device compliance/enrollment status)
      - Windows Event ID 4624
      - Azure AD SignInLogs
      - VPN authentication logs
      - Zeek conn.log
      - Mobile Device Management (MDM) Platform
      - Corporate Authentication Servers (e.g., Active Directory)
      - Cloud Identity Providers (e.g., Azure AD, Okta)
      - VPN Concentrators
    range: last 90 days
    queries: 'pseudocode: ON MDM_SIM_change_event for user | SCORE subsequent logins with user''s Isolation Forest model | IF score is top 1% anomaly AND within 4 hours of SIM change, ALERT.'