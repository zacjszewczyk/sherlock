name: T1564.004: NTFS File Attributes
id: 1e9d8f6c-8a7b-4b9c-9d0e-1f2a3b4c5d6e
description: This playbook helps investigate whether an adversary is evading defenses
  by hiding malicious code or tools in NTFS Alternate Data Streams (ADS). It provides
  methods to detect this activity by searching for command lines with ADS paths matching
  threat intelligence, identifying anomalous processes creating or accessing files
  with ADS syntax, detecting 'write-and-execute' patterns involving ADS, flagging
  suspicious parent-child process relationships (e.g., Office applications spawning
  processes that use ADS), and identifying network connections originating from processes
  running from an ADS.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Is a process being created with a command line containing an Alternate
    Data Stream (ADS) path that matches a known malicious indicator from a threat
    intelligence feed?
  context: This question focuses on detecting known threats with high confidence.
    Adversaries may reuse file paths and stream names across campaigns. By comparing
    command line arguments in process creation events against a list of known malicious
    ADS indicators, analysts can quickly identify and respond to recognized malware
    or tools. A match provides a strong signal of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  - Threat intelligence feeds
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events (E.g., WinEvent 4688)
      WHERE command_line CONTAINS ":" AND command_line IN known_malicious_ads_paths_from_threat_intel
      RETURN host, time, user, parent_process, process_name, command_line
- question: Is a process being created with a command line containing a statistically
    rare combination of a parent file path and an Alternate Data Stream (ADS) name?
  context: This question aims to uncover novel or unusual ADS usage that wouldn't
    be caught by signature-based detections. By tracking the frequency of parent
    file paths and their associated stream names, we can identify anomalous pairings.
    An event where both the file path and the stream name are rarely seen together
    suggests an attempt to hide activity in an unconventional way.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each process_creation_event (E.g., WinEvent 4688) with ":" in command_line:
        PARSE parent_path and stream_name from command_line
        CALCULATE frequency of parent_path over last 30 days
        CALCULATE frequency of stream_name over last 30 days
        IF frequency(parent_path) < 5th_percentile AND frequency(stream_name) < 5th_percentile:
          ALERT on the event
- question: Does a process creation command line involving an Alternate Data Stream
    (ADS) have features consistent with known malicious activity based on a machine
    learning model?
  context: This question applies machine learning to move beyond simple frequency
    analysis and detect sophisticated evasion attempts. Malicious command lines often
    have distinct characteristics (e.g., high entropy, specific keywords). By training
    a model on a labeled dataset of benign and malicious ADS usage, we can score
    new, unseen command lines for their probability of being malicious.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each process_creation_event (E.g., WinEvent 4688) with ":" in command_line:
        EXTRACT features (length, entropy, keywords, extensions, etc.)
        INPUT features into trained classification model
        IF model_score > malicious_threshold:
          ALERT on the event
- question: Is a process that is not on an approved allow-list creating or accessing
    a file using an Alternate Data Stream (ADS)?
  context: This question establishes a baseline of normalcy by defining which applications
    are expected to use ADS. Any process not on this explicit allow-list that is
    observed interacting with ADS is immediately suspicious. This method is effective
    for reducing noise from legitimate applications and focusing analyst attention
    on unexpected activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User Workstations, Web Servers, and Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation (4688) or file_access (4663) events
      WHERE (command_line CONTAINS ":" OR object_name CONTAINS ":")
      AND process_name NOT IN (ads_allow_list)
      RETURN host, time, user, process_name, command_line, object_name
- question: Is a specific process on a given host exhibiting an anomalously high
    number of Alternate Data Stream (ADS) related activities compared to its own
    historical baseline?
  context: This question focuses on detecting changes in the behavior of a single
    process. By establishing a per-process, per-host baseline of ADS activity, we
    can detect when a process suddenly starts using ADS far more than it usually
    does. Such a volumetric anomaly could indicate that the process has been compromised
    or exploited.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User Workstations, Web Servers, and Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each process_name on each host:
        CALCULATE daily_avg and daily_std_dev of ADS events over 30 days
        IF today_s_count > (daily_avg + 3 * daily_std_dev):
          ALERT on host, process_name
- question: Is an observed Alternate Data Stream (ADS) related event an outlier when
    compared to clusters of normal, routine ADS activity in the environment?
  context: This question uses unsupervised machine learning to find 'unknown unknowns'.
    By clustering all ADS-related events based on their contextual features (process,
    user, time, etc.), normal activities will form large clusters. Events that do
    not fit into any cluster are, by definition, anomalous and warrant investigation
    as they represent a significant deviation from established patterns.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User Workstations, Web Servers, and Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      VECTORIZE all ADS events using features (process, parent, user, target, hour)
      APPLY clustering algorithm (e.g., DBSCAN, Isolation Forest)
      FLAG events classified as noise/outliers for investigation
- question: Was a file written to an Alternate Data Stream (ADS) and then immediately
    executed from that same ADS path on the same host?
  context: This question targets a classic 'write-and-execute' pattern, which is
    a high-confidence indicator of compromise. By correlating a file write event
    to an ADS with a subsequent process creation from that exact ADS path within
    a short time window, we can detect this malicious sequence with very few false
    positives.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Critical System Directories (e.g., C:\Windows\System32), User Profile Directories,
    and Temporary File Directories
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      ON file_write event (4663) with ":" in object_name:
        WATCH for process_creation event (4688) from same host and path WITHIN 5 minutes
        IF found, GENERATE high-confidence alert
- question: Is the time delay between a file write to an Alternate Data Stream (ADS)
    and its subsequent execution an outlier compared to normal behavior?
  context: This question adds behavioral analysis to the 'write-and-execute' pattern.
    Adversaries might use immediate execution (very short delay) or scheduled execution
    (long delay). By baselining the time delta for known benign sequences, any significant
    deviation can be flagged as suspicious, helping to distinguish malicious activity
    from normal operations.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Critical System Directories (e.g., C:\Windows\System32), User Profile Directories,
    and Temporary File Directories
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      CALCULATE time_delta between write (4663) and execute (4688) for ADS paths
      ESTABLISH baseline distribution of these time_deltas
      ALERT if a new time_delta is an outlier (e.g., <1st or >99th percentile)
- question: Is there an anomalous spike in the overall number of 'write-and-execute'
    Alternate Data Stream (ADS) events occurring across the enterprise?
  context: This question aims to detect widespread attacks by monitoring the macro-level
    trend of 'write-and-execute' activity. A sudden increase in the total volume
    of these sequences is a strong indicator of a large-scale campaign. Time-series
    anomaly detection can automatically learn the normal rhythm of activity and alert
    on significant deviations.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Critical System Directories (e.g., C:\Windows\System32), User Profile Directories,
    and Temporary File Directories
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      AGGREGATE count of 'write-and-execute' ADS events per hour across enterprise
      APPLY time-series anomaly model (e.g., Prophet, LSTM)
      ALERT if observed count significantly deviates from model's prediction
- question: Is a high-risk parent process, such as an Office application or web server
    process, spawning a child process that utilizes an Alternate Data Stream (ADS)?
  context: This question focuses on suspicious process lineage. Applications like
    Microsoft Word or IIS worker processes ('w3wp.exe') should not spawn child processes
    that use ADS. Such an event strongly suggests a successful exploitation, for example,
    through a malicious document macro or a web shell.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Microsoft Office Servers (e.g., Exchange), Web Servers (e.g., IIS), and User
    Workstations running Office applications
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation events (4688)
      WHERE parent_process_name IN (high_risk_parents like 'WINWORD.EXE', 'w3wp.exe')
      AND child_command_line CONTAINS ":"
      ALERT on the event
- question: Has a rare or never-before-seen parent-child process relationship been
    observed where the child process interacts with an Alternate Data Stream (ADS)?
  context: This question aims to detect anomalous execution chains by baselining
    all parent-child relationships that involve ADS. A parent-child pairing that
    has rarely or never been seen before across the enterprise is highly suspicious
    and could represent a novel attack pathway.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Microsoft Office Servers (e.g., Exchange), Web Servers (e.g., IIS), and User
    Workstations running Office applications
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each ADS-related event, identify the (parent_process, child_process) tuple
      LOOKUP historical frequency of this tuple over the last 90 days
      IF frequency < a low_threshold (e.g., seen less than 5 times):
        ALERT as a rare process lineage
- question: Does a new process creation involving an Alternate Data Stream (ADS)
    create an unusual connection in the overall process lineage graph of the environment?
  context: This question uses graph analytics to model complex process relationships.
    Normal activity forms predictable patterns. An attack might create an unexpected
    link, for example, connecting a browser process to a system-level process via
    an ADS-based execution. Such a structurally significant event is a strong indicator
    of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Microsoft Office Servers (e.g., Exchange), Web Servers (e.g., IIS), and User
    Workstations running Office applications
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      MAINTAIN process lineage graph from all process events
      ON a new ADS-related process creation, add the new edge to the graph
      CALCULATE change in graph structure metrics (e.g., centrality, community)
      IF change is statistically significant, FLAG as a structural anomaly
- question: Is a process running from an Alternate Data Stream (ADS) making an outbound
    network connection to a known malicious IP address?
  context: This question correlates file-level evasion with network-level indicators
    to generate high-fidelity alerts. A process executing from a hidden ADS that
    is also communicating with a destination on a threat intelligence blacklist is
    a clear sign of command-and-control (C2) activity or data exfiltration.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek ssl.log
  - DMZ Servers, Internet Gateways, and Domain Controllers
  - Threat intelligence feeds
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      JOIN process_creation events (4688) with network_connection events (5156 or Zeek) on ProcessID
      ALERT if process_image_path CONTAINS ":"
      AND destination_ip IN threat_intel_blacklist
- question: Is a process running from an Alternate Data Stream (ADS) communicating
    over a non-standard or statistically rare destination port?
  context: This question seeks to identify covert C2 channels by analyzing port usage.
    While some malware uses common ports to blend in, others use non-standard ports
    to avoid inspection. By flagging connections from ADS-based processes to rarely
    used ports, analysts can uncover these hidden communication channels.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek ssl.log
  - DMZ Servers, Internet Gateways, and Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR connections from ADS-launched processes:
        BASELINE destination port usage across the enterprise
        ALERT if a connection uses a port in the <1st percentile of frequency
- question: Does the network traffic from a process running from an Alternate Data
    Stream (ADS) exhibit signs of beaconing or other anomalous characteristics (e.g.,
    rare JA3/JA3S hash)?
  context: This question employs advanced analysis of network traffic metadata to
    detect sophisticated C2 communications. A time-series model can detect the regular
    periodicity of C2 beaconing. Furthermore, an anomaly detection model using features
    like connection size and JA3S hash rarity can spot C2 activity that is not strictly
    periodic.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek ssl.log
  - DMZ Servers, Internet Gateways, and Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR connections from ADS-launched processes:
      1) ANALYZE time between connections and data size for beaconing patterns.
      2) APPLY anomaly detection model on features like duration, byte counts, and JA3/JA3S hash rarity.
      ALERT on any detected anomalies.