name: T1561: Disk Wipe
id: 9c6a8f8d-4b5a-4e2d-8f9a-1c2b3d4e5f6a
description: |
  This playbook addresses the MITRE ATT&CK technique T1561, Disk Wipe, where an adversary attempts to corrupt or destroy data to impact its availability. It provides investigative questions to detect this activity by monitoring for the execution of known disk-wiping malware, the misuse of built-in system utilities for destructive purposes, unauthorized raw disk access, anomalous rates of file deletion or modification, lateral movement via SMB following initial indicators, and the execution of destructive commands on network infrastructure. The goal is to identify if an adversary is trying to render data or systems inoperable.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a process been executed where its file hash matches a known disk-wiping malware signature?
    context: |
      This question focuses on detecting the direct execution of known disk-wiping malware, such as WhisperGate or NotPetya. By monitoring process creation events and correlating file hashes with a continuously updated threat intelligence feed, analysts can identify high-confidence indicators of an ongoing destructive attack. A match is a critical alert that requires immediate investigation and response.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - All Windows endpoints and servers, particularly Domain Controllers, file servers, and database servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events (EID 1, 4688) with process hash logging
          FOR each event
            IF process_hash IN known_wiper_hash_feed
              ALERT high_severity, "Known wiper malware detected"
              RETURN hostname, process_name, process_hash, parent_process, command_line
  - question: Has a known disk-wiping malware process been spawned by a parent process that is statistically rare for that child process across the enterprise?
    context: |
      This question aims to add contextual risk to the detection of known wiper malware. Adversaries may use legitimate processes (e.g., winword.exe) to launch malicious payloads. By analyzing the historical prevalence of parent-child process relationships, an analyst can identify anomalies. A wiper process spawned by a parent that has rarely or never spawned it before is highly suspicious and suggests process injection or another execution anomaly, justifying an increased risk score.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - All Windows endpoints and servers, particularly Domain Controllers, file servers, and database servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events (EID 1, 4688)
          WHERE process_hash IN known_wiper_hash_feed
          CALCULATE historical prevalence of (parent_process, process_name) relationship
          IF prevalence < 1st_percentile
            ALERT high_severity, "Wiper spawned by rare parent process"
            RETURN hostname, process_name, parent_process
  - question: Has a machine learning model identified a newly executed process as having a high probability of being disk-wiping malware?
    context: |
      This question leverages machine learning to detect novel or unknown disk-wiping threats that may not be present in signature-based threat intelligence feeds. A pre-trained classifier analyzes process metadata (like file path, parent process, signature status, and entropy) to assign a 'wiper-like' probability score. An alert is triggered when a process exceeds a high-confidence threshold, providing a proactive detection capability against zero-day wipers.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - All Windows endpoints and servers, particularly Domain Controllers, file servers, and database servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new process_creation_event
            EXTRACT features (file path, parent, signature, entropy)
            SCORE with pre-trained ML classifier
            IF probability_is_wiper > 0.9
              ALERT high_severity, "ML model detected probable wiper process"
              RETURN hostname, process_name, score, features
  - question: Has a built-in system utility been executed with command-line arguments known to perform destructive data wiping or overwrite operations?
    context: |
      Adversaries often abuse legitimate system utilities ("living off the land") to perform malicious actions. This question looks for the specific use of tools like `vssadmin.exe`, `cipher.exe`, or `format.exe` with command-line arguments that are explicitly destructive. Monitoring process command lines for these high-fidelity patterns can detect disk-wiping attempts without relying on malware signatures.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Critical infrastructure servers (e.g., virtualization hosts, backup servers), domain controllers, and standard user workstations.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events (EID 1, 4688)
          WHERE command_line MATCHES regex_list_of_destructive_commands
          (e.g., "vssadmin.*delete.*shadows.* /all", "cipher.* /w:", "format.* /p:")
          ALERT high_severity, "Destructive command-line utility usage detected"
          RETURN hostname, process_name, command_line, user
  - question: Has a destructive command been executed by a user or on a host for the first time or with unusual command-line entropy?
    context: |
      This question adds statistical analysis to the detection of destructive commands to reduce false positives and identify unusual behavior. By baselining normal command execution for each user and host, an analyst can flag the first-time use of a destructive command as highly suspicious. Additionally, analyzing the command-line string's entropy can detect obfuscation or randomization techniques that deviate from normal usage patterns.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Critical infrastructure servers (e.g., virtualization hosts, backup servers), domain controllers, and standard user workstations.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH destructive_command_events
          CALCULATE historical execution frequency for (user, host, command)
          IF frequency is zero or near-zero
            ALERT medium_severity, "First-time execution of destructive command"
          CALCULATE command_line_entropy_baseline for utility
          IF current_entropy deviates > 2 * std_dev from baseline
            ALERT medium_severity, "Anomalous entropy in destructive command"
  - question: Has a time-series anomaly detection model detected a sudden, coordinated spike in the execution of destructive utilities across the network?
    context: |
      This question seeks to identify large-scale, automated attacks where an adversary uses destructive utilities across many hosts simultaneously. A time-series model forecasts the expected volume of these utility executions network-wide. A sudden, sharp increase in observed executions that significantly exceeds the forecasted volume's confidence interval indicates a probable coordinated attack, even if individual executions might not seem suspicious on their own.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Critical infrastructure servers (e.g., virtualization hosts, backup servers), domain controllers, and standard user workstations.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR execution frequency of destructive utilities network-wide
          APPLY time-series forecasting model (e.g., ARIMA)
          IF observed_frequency > upper_confidence_bound_of_forecast
            ALERT high_severity, "Network-wide spike in destructive utility execution"
            RETURN utility_name, observed_count, expected_count
  - question: Has an unauthorized process, not on an established allow-list, attempted to perform raw disk access?
    context: |
      Raw disk access allows a process to bypass the file system and interact directly with the disk's sectors, which is a common technique for disk-wiping malware. This question focuses on monitoring for raw disk read events (e.g., Sysmon EID 9) and checking the initiating process against a strict allow-list of legitimate tools (e.g., backup or forensic software). Any process not on this list that attempts raw access is highly suspicious.
    answer_sources:
      - Windows Event ID 9 (Sysmon)
      - Boot drives of all Windows servers and endpoints, especially Domain Controllers and critical application servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH raw_disk_access_events (Sysmon EID 9)
          WHERE device_name CONTAINS "\\.\PhysicalDrive"
          IF process_hash_or_path NOT IN (raw_access_allow_list)
            ALERT high_severity, "Unauthorized process performed raw disk access"
            RETURN hostname, process_name, process_path, device_name
  - question: Has a process that is rare across the enterprise performed a raw disk access operation?
    context: |
      This question adds a prevalence-based risk score to the detection of unauthorized raw disk access. By performing a stack count to see how many other endpoints in the enterprise have the same process, an analyst can determine its rarity. A process that is present on very few hosts (e.g., <1%) and performs raw disk access is a strong indicator of a targeted, malicious tool.
    answer_sources:
      - Windows Event ID 9 (Sysmon)
      - Boot drives of all Windows servers and endpoints, especially Domain Controllers and critical application servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON raw_disk_access_event by process
          IF process NOT IN allow_list
            CALCULATE prevalence of process across all hosts
            IF prevalence < 5_hosts
              ALERT high_severity, "Enterprise-rare process performed raw disk access"
              RETURN hostname, process_name, prevalence_count
  - question: Has a machine learning model classified a process initiating raw disk access as likely malicious?
    context: |
      This question uses a machine learning model to enrich raw disk access events and identify malicious activity that might otherwise be missed. The model analyzes features of the process (file path, signature status, parent process, entropy) to determine its probability of being malicious. This can help distinguish between a legitimate but poorly-documented admin tool and a purpose-built malicious implant.
    answer_sources:
      - Windows Event ID 9 (Sysmon)
      - Boot drives of all Windows servers and endpoints, especially Domain Controllers and critical application servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON raw_disk_access_event by process
            EXTRACT features (path, signature, parent, entropy)
            SCORE with pre-trained ML classifier
            IF probability_is_malicious > 0.9
              ALERT high_severity, "ML model detected malicious process performing raw disk access"
              RETURN hostname, process_name, score
  - question: Has a process not on an allow-list deleted files in critical system directories or files with important extensions?
    context: |
      This question focuses on targeted file deletion as a precursor or component of a disk-wiping attack. By monitoring file delete events (Sysmon EID 23, 26) and focusing on critical locations (like C:\Windows\System32) or file types (like .bak, .vhd), analysts can detect suspicious activity. An alert is triggered if a process that is not an expected, legitimate utility performs these deletions.
    answer_sources:
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 23 (Sysmon)
      - Windows Event ID 26 (Sysmon)
      - File servers, document management systems, and developer workstations with access to source code repositories.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_delete_events (Sysmon EID 23, 26)
          WHERE (target_directory IN critical_system_dirs OR target_extension IN critical_extensions)
          AND process_name NOT IN allow_list
          ALERT high_severity, "Unauthorized deletion of critical files detected"
          RETURN hostname, process_name, target_file
  - question: Has a process exhibited a statistically significant spike in file write or delete operations compared to its historical baseline on the host?
    context: |
      This question aims to detect wiper activity by looking for anomalous volumes of file operations. For each host, a baseline of normal file write (EID 11) and delete (EID 23/26) counts per process is established. A sudden spike in these operations, exceeding a high percentile (e.g., 99th) of the historical norm, indicates that a process is behaving abnormally and may be performing a rapid wipe.
    answer_sources:
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 23 (Sysmon)
      - Windows Event ID 26 (Sysmon)
      - File servers, document management systems, and developer workstations with access to source code repositories.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host, per process
            MAINTAIN baseline of file_operation_counts_per_minute
          ON new_file_operations
            IF current_count > 99th_percentile_of_baseline
              ALERT high_severity, "Anomalous spike in file operations"
              RETURN hostname, process_name, operation_count, baseline_count
  - question: Has a time-series forecasting model detected a significant deviation in the volume of file deletions on a critical server?
    context: |
      This question applies time-series analysis to detect both fast and "low-and-slow" wiping activity on high-value assets like file servers. By creating a forecast model (e.g., ARIMA, Prophet) for the expected volume of file deletions, the system can alert when the observed volume significantly exceeds the model's prediction confidence interval. This method is effective at catching gradual data destruction that might not trigger simple threshold-based alerts.
    answer_sources:
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 23 (Sysmon)
      - Windows Event ID 26 (Sysmon)
      - File servers, document management systems, and developer workstations with access to source code repositories.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical server
            MONITOR file_deletion_volume
            APPLY time-series forecasting model
            IF observed_volume > upper_confidence_bound_of_forecast
              ALERT high_severity, "Anomalous file deletion volume detected on critical server"
              RETURN hostname, observed_volume, forecasted_volume
  - question: Within 10 minutes of a disk-wipe alert, has the source host been observed accessing administrative shares on more than five other hosts?
    context: |
      This question uses event correlation to detect the propagation phase of a wiper. If a host has already triggered an alert related to disk wiping, any subsequent attempt to connect to administrative shares (like ADMIN$ or C$) on other machines is a strong indicator of lateral movement. This rule looks for this specific sequence of events to identify a spreading threat.
    answer_sources:
      - Zeek smb_mapping.log
      - Zeek conn.log
      - Windows Event ID 5140
      - Internal network segments, monitoring East-West traffic between workstations and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          WHEN disk_wipe_alert for host H is triggered
          SEARCH SMB_connection_logs (Zeek, EID 5140) for the next 10 minutes
          WHERE source_host = H AND share_name IN ("ADMIN$", "C$")
          COUNT unique destination_hosts
          IF count > 5
            ALERT critical_severity, "Wiper propagation detected via SMB admin shares"
            RETURN source_host, destination_hosts_list
  - question: Has a host's "SMB fan-out" score, the number of unique destinations on port 445, exceeded its own established baseline?
    context: |
      This question seeks to identify worm-like propagation behavior by baselining normal SMB connection patterns for each host. The "SMB fan-out" score measures how many unique hosts a given machine connects to over SMB in a short time window. A host's score suddenly exceeding its own historical 99.9th percentile is a strong statistical indicator of abnormal scanning or spreading activity.
    answer_sources:
      - Zeek smb_mapping.log
      - Zeek conn.log
      - Windows Event ID 5140
      - Internal network segments, monitoring East-West traffic between workstations and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host
            MAINTAIN baseline of SMB_fan_out_score (unique IPs on port 445 per 5 mins)
          ON new_smb_connection
            RECALCULATE current_fan_out_score
            IF current_fan_out_score > 99.9th_percentile_of_baseline
              ALERT high_severity, "Anomalous SMB fan-out detected"
              RETURN hostname, current_score, baseline_score
  - question: Has a graph-based anomaly detection model identified a host as an outlier due to a sudden creation of numerous new, short-lived SMB connections?
    context: |
      This question models the network as a graph to find behavioral outliers. Hosts are nodes, and SMB connections are edges. An infected host attempting to spread will suddenly create many new, often short-lived, connections to hosts it hasn't communicated with before. Graph outlier or community detection algorithms can identify these nodes, flagging them as anomalous and indicative of a spreading threat.
    answer_sources:
      - Zeek smb_mapping.log
      - Zeek conn.log
      - Windows Event ID 5140
      - Internal network segments, monitoring East-West traffic between workstations and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL network SMB traffic as a graph (nodes=hosts, edges=connections)
          APPLY graph outlier detection algorithm
          IF host is flagged as a behavioral outlier (e.g., creating many new, short-lived edges)
            ALERT high_severity, "Graph anomaly detected, potential wiper propagation"
            RETURN hostname, anomaly_score, outlier_details
  - question: Have destructive commands, such as 'erase startup-config' or 'delete flash:', been executed on core network infrastructure devices?
    context: |
      This question targets attacks against the network infrastructure itself. Adversaries may try to wipe the configuration or firmware of routers, switches, and firewalls to cause a widespread outage. By ingesting syslog from these devices and searching for a watchlist of known destructive commands, analysts can detect a direct attack on network availability.
    answer_sources:
      - Network Device Syslog
      - Zeek conn.log
      - Core network switches, routers, firewalls, and security appliances.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_device_syslog
          WHERE command_log_entry MATCHES destructive_command_watchlist
          (e.g., "erase startup-config", "write erase", "delete flash:")
          ALERT critical_severity, "Destructive command executed on network device"
          RETURN device_name, command, user, source_ip
  - question: Has a user account executed destructive commands on a network device at a rate exceeding their personal baseline, or from an anomalous source IP?
    context: |
      This question adds statistical context to the execution of destructive commands on network devices. By baselining the frequency of command types per user, a sudden spike in destructive commands by a specific user is anomalous. Correlating this with the source IP of the session can further identify suspicious activity, such as commands originating from a non-corporate or geographically unusual location.
    answer_sources:
      - Network Device Syslog
      - Zeek conn.log
      - Core network switches, routers, firewalls, and security appliances.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each admin_user
            MAINTAIN baseline of destructive_command_frequency
          ON destructive_command_execution by user
            IF frequency > 2 * std_dev above baseline
              ALERT high_severity, "Anomalous frequency of destructive commands by user"
          CORRELATE with source IP from conn.log or syslog
          IF source_ip is non-corporate or anomalous
            INCREASE alert severity
  - question: Has a sequence of administrative commands on a network device, including a destructive one, been flagged as a sequential anomaly by a Markov chain model?
    context: |
      This question analyzes the *order* of commands, not just their individual execution. Normal administrative tasks follow predictable patterns. A Markov chain model can learn these normal sequences. A destructive command appearing in a sequence with a very low transition probability from the preceding command indicates a deviation from trained behavior, suggesting a hijacked session or malicious actor.
    answer_sources:
      - Network Device Syslog
      - Zeek conn.log
      - Core network switches, routers, firewalls, and security appliances.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each admin role/user
            TRAIN Markov chain model on normal command sequences
          ON new command sequence
            IF sequence contains a destructive command AND has a low transition probability
              ALERT high_severity, "Anomalous command sequence with destructive command detected"
              RETURN device_name, user, command_sequence, probability