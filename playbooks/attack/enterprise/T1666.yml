name: "T1666: Modify Cloud Resource Hierarchy"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook helps answer if an adversary is attempting to evade defenses by modifying the cloud resource hierarchy. This can involve several indicators, including: the use of known offensive cloud security tools followed by network connections to C2 infrastructure; the execution of sensitive hierarchy modification commands by unauthorized users; the use of cloud administrative tools from unusual geographic locations or IP addresses with low reputation; sequences of activity involving access to local cloud credential files followed by network connections to cloud APIs; and the co-occurrence of cloud hierarchy modification commands with commands designed to disable security services or clear logs."
type: "technique"
related: "TA0005: Defense Evasion"
contributors: "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "How can I create a correlation rule to detect the execution of a known offensive cloud tool followed by a connection to a known C2 server?"
    context: "This question aims to identify a common attack pattern where an adversary uses a specialized tool to interact with cloud environments and then communicates with their command-and-control infrastructure. By correlating endpoint process events with network connection logs within a short time frame, we can detect this specific sequence of malicious activity with high confidence."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Endpoint event logs from administrative workstations, developer workstations, and CI/CD servers"
      - "Network traffic logs from internet gateways and VPN concentrators"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH Windows Event ID 4688
        WHERE (ProcessHash IN offensive_tool_hashes OR CommandLine CONTAINS offensive_tool_strings)
        JOIN (SEARCH Zeek conn.log WHERE DestinationIP IN c2_watchlist)
        ON SourceHost
        WHERE time_difference <= 10 minutes
  - question: "How can I use statistical analysis to detect potential C2 communication via domain generation algorithms (DGA) when a cloud CLI tool is executed?"
    context: "This question focuses on detecting C2 channels that use domain generation algorithms (DGAs) to evade static blocklists. By baselining the normal DNS query entropy for hosts running cloud tools, we can spot statistical anomalies. A high-entropy domain query co-occurring with cloud tool usage is a strong indicator of an adversary using DGA for C2 communications."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Endpoint event logs from administrative workstations, developer workstations, and CI/CD servers"
      - "Network traffic logs from internet gateways and VPN concentrators"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH Zeek dns.log AND Windows Event ID 4688
        GROUP BY SourceHost
        CALCULATE baseline_entropy(domain) for each host
        ALERT WHEN event=cloud_cli_execution AND entropy(new_domain) > 98th_percentile(baseline_entropy)
  - question: "How can a machine learning model be used to predict malicious cloud activity based on process execution and network data?"
    context: "This question explores an advanced detection method using a Random Forest classifier. By training a model on various features from both endpoint process events and network connection logs, the system can learn the complex patterns of malicious behavior. This approach can identify novel or subtle attacks that may not match specific rules or statistical thresholds, triggering an alert when the model's confidence in a malicious prediction is high."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Endpoint event logs from administrative workstations, developer workstations, and CI/CD servers"
      - "Network traffic logs from internet gateways and VPN concentrators"
    range: "last 90 days"
    queries:
      pseudocode: |
        EXTRACT features from Windows Event ID 4688 and correlated Zeek conn.log
        INPUT features into trained_random_forest_model
        ALERT WHEN model_prediction_score > 0.9
  - question: "How can I create a SIEM rule to detect when a sensitive cloud hierarchy modification command is run by a user not in the 'Cloud Administrators' group?"
    context: "This question addresses the insider threat or privilege escalation scenario where a non-administrative user executes a powerful command to alter the cloud organization structure. By creating a high-severity alert that checks the command line against a watchlist and verifies the user's group membership, security teams can immediately respond to unauthorized and high-risk activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Active Directory Logs"
      - "Zeek conn.log"
      - "Administrative workstations, CI/CD pipeline servers, Bastion hosts, and servers with cloud management SDKs installed"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH Windows Event ID 4688
        WHERE CommandLine IN sensitive_cloud_command_list
        ENRICH with UserGroup from Active Directory
        ALERT WHEN UserGroup NOT IN ('Cloud Administrators')
  - question: "How can statistical analysis of command execution times identify anomalous behavior by authorized cloud administrators?"
    context: "This question aims to detect compromised administrator accounts. Even if a user is authorized, their behavior might be anomalous. By establishing a baseline of normal working hours and command frequency for each administrator, we can flag activity that deviates significantly, such as a command run late at night or an unusually high number of sensitive commands, which could indicate an account takeover."
    answer_sources:
      - "Windows Event ID 4688"
      - "Active Directory Logs"
      - "Zeek conn.log"
      - "Administrative workstations, CI/CD pipeline servers, Bastion hosts, and servers with cloud management SDKs installed"
    range: "last 90 days"
    queries:
      pseudocode: |
        FOR each user in 'Cloud Administrators'
        CALCULATE baseline_activity_hours and baseline_command_frequency
        SEARCH Windows Event ID 4688 for sensitive commands
        ALERT IF execution_time is > 3_std_dev from baseline_hours OR daily_frequency > 99th_percentile
  - question: "How can a sequence analysis model detect anomalous administrative command workflows?"
    context: "This question focuses on the context and order of operations. Benign administrative tasks often follow a predictable sequence. A machine learning model like an LSTM can be trained on these normal sequences. An alert for a sensitive command that appears in an unusual sequence (e.g., without preceding setup commands) can indicate that an adversary is executing it out of context as part of an attack."
    answer_sources:
      - "Windows Event ID 4688"
      - "Active Directory Logs"
      - "Zeek conn.log"
      - "Administrative workstations, CI/CD pipeline servers, Bastion hosts, and servers with cloud management SDKs installed"
    range: "last 90 days"
    queries:
      pseudocode: |
        CAPTURE command sequences from Windows Event ID 4688
        INPUT sequence into trained_LSTM_model
        ALERT IF probability of observed_sequence is below benign_threshold
  - question: "How can I implement a SIEM rule to detect cloud CLI tool execution following a login from an unapproved country?"
    context: "This question addresses the threat of account access from geographically suspicious locations. By correlating a cloud tool process execution with the user's most recent network logon event, we can check the source IP's geolocation. An execution following a login from a country not on the approved list for that user's role is a strong indicator of a compromised account or unauthorized remote access."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4624"
      - "Zeek conn.log"
      - "All corporate endpoints and servers with cloud SDKs/CLIs installed, VPN access logs, Domain Controllers, and network egress points"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH Windows Event ID 4688 for cloud_cli_tool
        GET user from event
        FIND latest Windows Event ID 4624 (Logon Type 3 or 10) for that user
        ENRICH with SourceIP and geo-location
        ALERT IF geo-location NOT IN approved_country_list for user's role
  - question: "How can I use statistical user profiling to detect cloud CLI usage following a login from an anomalous source or at an unusual time?"
    context: "This question provides a more nuanced approach than static country lists. By building a historical profile for each user's typical login sources (IP subnets/ASNs) and times, we can detect deviations. A cloud CLI command executed after a login from a never-before-seen network or at a time that is statistically abnormal for that user (e.g., 3 AM) raises a strong suspicion of account misuse."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4624"
      - "Zeek conn.log"
      - "All corporate endpoints and servers with cloud SDKs/CLIs installed, VPN access logs, Domain Controllers, and network egress points"
    range: "last 90 days"
    queries:
      pseudocode: |
        FOR each user
        PROFILE historical source ASNs and login times from Windows Event ID 4624
        ON cloud_cli_execution (EID 4688), check preceding login (EID 4624)
        ALERT IF login_ASN is new for user OR login_time is in bottom 5th percentile of activity
  - question: "How can a time-series model detect anomalous bulk operations against cloud management APIs?"
    context: "This question aims to detect large-scale, potentially malicious activity by monitoring network traffic volume. Adversaries modifying a cloud hierarchy might perform many actions in a short period. A time-series model can predict the expected volume of traffic to cloud management endpoints. A significant, unexplained spike in this traffic can trigger an alert for investigation, even if individual actions appear legitimate."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4624"
      - "Zeek conn.log"
      - "All corporate endpoints and servers with cloud SDKs/CLIs installed, VPN access logs, Domain Controllers, and network egress points"
    range: "last 90 days"
    queries:
      pseudocode: |
        AGGREGATE Zeek conn.log traffic to cloud_mgmt_endpoints by hour
        INPUT into trained_SARIMA_model
        ALERT IF observed_traffic > predicted_upper_confidence_interval
  - question: "How can I create a stateful correlation rule to detect credential access followed by scripted access to cloud APIs?"
    context: "This question identifies a common attacker workflow: steal credentials, then use them. This rule looks for a specific sequence: a process accessing local cloud credential files, followed by a scripting engine (like PowerShell or Python) starting up and making a network connection to a cloud API. Detecting this entire chain of events on one host within a short window provides strong evidence of a credential theft and use attack."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Developer workstations, Administrator workstations, servers hosting automation scripts, and CI/CD runners"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH for Event A: Windows EID 4688 with commandline accessing cloud_credential_paths
        IF found, SEARCH on same host for Event B: Windows EID 4688 for scripting_engine_process within 30 mins
        IF found, SEARCH on same host for Event C: Zeek conn.log to cloud_api_endpoint
        ALERT if all three events occur in sequence
  - question: "How can command line entropy be used to detect obfuscated or malicious scripts connecting to cloud APIs?"
    context: "This question focuses on identifying malicious scripts that are obfuscated to avoid signature-based detection. Legitimate scripts often have predictable, low-entropy command lines. Adversaries may use heavily obfuscated, randomized, or one-line commands, which have high entropy. By calculating the entropy of the command line for scripting processes that connect to cloud APIs and alerting on statistical outliers, we can uncover these hidden threats."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Developer workstations, Administrator workstations, servers hosting automation scripts, and CI/CD runners"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH Windows Event ID 4688 for scripting_engine processes
        CORRELATE with Zeek conn.log to cloud_api_endpoints
        CALCULATE shannon_entropy of CommandLine field
        ALERT IF entropy_score > 95th percentile
  - question: "How can a Hidden Markov Model (HMM) be used to detect a malicious sequence of administrative actions?"
    context: "This question proposes modeling administrative workflows as a sequence of states (e.g., 'Read Config', 'Run Script', 'Connect to API'). An HMM can be trained on countless benign sequences to learn the normal probability of transitioning from one state to another. When a new sequence of events is observed that has a very low probability of occurring under the benign model, it can be flagged as a potentially malicious and anomalous workflow."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Developer workstations, Administrator workstations, servers hosting automation scripts, and CI/CD runners"
    range: "last 90 days"
    queries:
      pseudocode: |
        MODEL event sequences (EID 4688, Zeek conn.log) as states
        INPUT observed sequence into trained_HMM
        ALERT IF probability of sequence < low_threshold
  - question: "How can I create a correlation rule to detect when cloud hierarchy modification is paired with defense evasion techniques?"
    context: "This question aims to detect an adversary who is actively trying to cover their tracks. The execution of a sensitive cloud command is suspicious, but its co-occurrence with actions like clearing event logs (Event ID 1102) or stopping security services (Event ID 7040) on the same host within minutes is a critical finding. This combination strongly indicates malicious intent and should trigger a high-priority alert."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1102"
      - "Windows Event ID 7040"
      - "Endpoint event logs on administrative workstations and servers, Domain Controller security logs, and centralized logging infrastructure"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH for Event A: EID 4688 with sensitive_cloud_command
        SEARCH on same host for Event B: EID 1102 OR EID 7040 (security service) OR EID 4688 (wevtutil.exe, sc.exe)
        ALERT IF Event B occurs within 5 minutes of Event A
  - question: "How can we use the statistical rarity of defense evasion commands to escalate the risk of subsequent cloud commands?"
    context: "This question uses defense evasion as a risk primer. Commands to clear logs or stop services are statistically very rare on normally functioning systems. Their execution should immediately elevate the risk score of a host. If a cloud hierarchy modification command is then executed from that same high-risk host within the next hour, the event should be escalated to a critical alert, as the context strongly suggests a malicious actor is at work."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1102"
      - "Windows Event ID 7040"
      - "Endpoint event logs on administrative workstations and servers, Domain Controller security logs, and centralized logging infrastructure"
    range: "last 90 days"
    queries:
      pseudocode: |
        SEARCH for defense_evasion_command (e.g., wevtutil cl)
        IF found, assign high_risk_score to host for 1 hour
        SEARCH for sensitive_cloud_command
        IF source host has high_risk_score, ESCALATE to critical alert
  - question: "How can a machine learning model classify a host as being in a 'Defense Evasion State' to prioritize subsequent alerts?"
    context: "This question proposes a proactive, state-based risk assessment. A classification model can be trained to recognize when a host is exhibiting a pattern of defense evasion activities. If the model classifies a host as being in this state, any subsequent administrative actions, particularly sensitive cloud commands, originating from it within a set time window can be automatically escalated. This allows analysts to focus on events that are already contextualized with a high degree of suspicion."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1102"
      - "Windows Event ID 7040"
      - "Endpoint event logs on administrative workstations and servers, Domain Controller security logs, and centralized logging infrastructure"
    range: "last 90 days"
    queries:
      pseudocode: |
        EXTRACT features (e.g., count of wevtutil, EID 1102) from host logs
        INPUT features into trained_classifier_model
        IF prediction is 'Host Defense Evasion State'
        THEN for next 60 mins, ESCALATE priority of all cloud admin commands from this host