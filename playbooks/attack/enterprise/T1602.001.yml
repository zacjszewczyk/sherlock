name: T1602.001: SNMP (MIB Dump)
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is collecting network information via SNMP MIB dumps. It focuses on identifying several key indicators, including SNMP traffic crossing network boundaries or involving known malicious IPs, the use of weak or default community strings, the execution of SNMP scanning tools on non-administrative hosts, an unusually high volume of SNMP requests from a single source to a single destination, and a single source scanning many destinations or requesting a high number of distinct OIDs.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any SNMP sessions (UDP port 161) occurring between the internal network and an external host, or involving a host listed on a threat intelligence feed?
    context: This question aims to detect policy violations or direct command and control activity. SNMP traffic should typically be restricted to internal management networks. Any communication with external entities, or with internal hosts flagged by threat intelligence, is highly suspicious and could indicate data exfiltration, reconnaissance by an external actor, or a compromised internal host communicating with a C2 server.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Threat intelligence feeds
      - Network egress/ingress points (monitored by Zeek), internal network segments (monitored by Zeek), integrated threat intelligence platform data feeds.
    range: last 90 days
    queries:
      - pseudocode: "SEARCH Zeek conn.log WHERE (proto='udp' AND port=161) AND ((src_ip IN internal_ranges AND dst_ip NOT IN internal_ranges) OR (src_ip NOT IN internal_ranges AND dst_ip IN internal_ranges)). CORRELATE src_ip, dst_ip with threat_intelligence_feed."
  - question: Is any internal host communicating via SNMP with a statistically unusual number of other internal hosts, suggesting an internal scan?
    context: This question helps identify internal reconnaissance. An adversary who has gained a foothold may use SNMP to scan the internal network to map devices, identify services, and gather information for lateral movement. By baselining normal SNMP 'fan-out' and looking for outliers, analysts can detect this scanning behavior early.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Threat intelligence feeds
      - Network egress/ingress points (monitored by Zeek), internal network segments (monitored by Zeek), integrated threat intelligence platform data feeds.
    range: last 90 days
    queries:
      - pseudocode: "FOR each src_ip in internal_hosts, COUNT unique dst_ip WHERE service='snmp' over 24h. COMPARE count against 95th percentile of historical fan-out distribution for all hosts. ALERT if current count > baseline."
  - question: Can a machine learning model classify new SNMP connections as malicious based on traffic features and correlation with threat intelligence?
    context: This question leverages machine learning to automate the detection of malicious SNMP traffic that may not be caught by simple rules. By training a model on features like traffic volume, ASN/geolocation data, and threat intelligence hits, it can learn the subtle characteristics of malicious activity and provide a probabilistic score, allowing for more nuanced and effective alerting.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Threat intelligence feeds
      - Network egress/ingress points (monitored by Zeek), internal network segments (monitored by Zeek), integrated threat intelligence platform data feeds.
    range: last 90 days
    queries:
      - pseudocode: "SCORE new SNMP connections using a trained classification model. FEATURES include duration, bytes, ASN, country, threat_intel_hit. ALERT if probability_score > threshold."
  - question: Are there any SNMP requests using weak, default, or denylisted community strings, especially from a non-authorized management host?
    context: This question targets a common misconfiguration that adversaries exploit. Default community strings like 'public' or 'private' provide an easy entry point. Detecting their use, and prioritizing alerts where the source is not an approved management station, helps identify both misconfigurations and active exploitation attempts.
    answer_sources:
      - Zeek snmp.log
      - Asset inventory of authorized management hosts
      - Centrally located network sensors (e.g., Zeek instances), asset management systems, and network devices themselves which respond to the requests.
    range: last 90 days
    queries:
      - pseudocode: "SEARCH Zeek snmp.log WHERE community_string IN weak_string_denylist. INCREASE_SEVERITY if src_ip NOT IN authorized_management_hosts_allowlist."
  - question: Is any host exhibiting a high entropy of SNMP community strings, suggesting a brute-force attempt?
    context: This question helps detect active brute-force attacks against SNMP services. A legitimate device will typically use one or a few community strings repeatedly, resulting in low entropy. An attacker trying to guess the string will use many different ones, resulting in high entropy. Monitoring for this statistical anomaly can reveal brute-force tools in action.
    answer_sources:
      - Zeek snmp.log
      - Asset inventory of authorized management hosts
      - Centrally located network sensors (e.g., Zeek instances), asset management systems, and network devices themselves which respond to the requests.
    range: last 90 days
    queries:
      - pseudocode: "FOR each src_ip, CALCULATE Shannon entropy of community_strings used over 24h. COMPARE entropy against 98th percentile of all SNMP-sending hosts. ALERT if current entropy > baseline."
  - question: Can an unsupervised clustering model identify groups of SNMP sessions indicative of scanning or brute-force activity?
    context: This question applies unsupervised machine learning to find 'unknown unknowns'. By clustering SNMP sessions based on features like the use of weak strings or non-standard source IPs, the model can automatically group suspicious activities together without prior labeling. Analysts can then investigate these clusters to identify new attack patterns.
    answer_sources:
      - Zeek snmp.log
      - Asset inventory of authorized management hosts
      - Centrally located network sensors (e.g., Zeek instances), asset management systems, and network devices themselves which respond to the requests.
    range: last 90 days
    queries:
      - pseudocode: "CLUSTER SNMP sessions using DBSCAN. FEATURES include weak_string_flag, non-allowlisted_src_flag, dst_ip. ANALYZE clusters and ALERT on new members of known-bad clusters."
  - question: Is a known SNMP scanning tool or script being executed on a host that is not an authorized network management station?
    context: This question provides high-fidelity alerts by looking for the direct execution of malicious or administrative tools on inappropriate systems. The presence of 'snmpwalk', 'nmap -sU', or related PowerShell commands on a standard user workstation is a strong indicator of compromise or insider threat activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Linux auditd logs
      - All endpoints and servers, particularly user workstations, jump servers, developer workstations, and application servers. Exclude pre-approved network management servers.
    range: last 90 days
    queries:
      - pseudocode: "SEARCH process creation logs (Sysmon EID 1, WEF 4688) WHERE (process_name IN snmp_tool_list OR command_line CONTAINS snmp_keywords) AND hostname NOT IN authorized_management_hosts. ALERT on match."
  - question: Has a process associated with SNMP scanning been executed for the first time on any given host?
    context: This question uses the statistical rarity of an event to detect threats. While an SNMP tool might be used legitimately, its first-ever appearance on a system, especially a non-administrative one, is highly anomalous. This 'first-occurrence' logic is effective for detecting the introduction of new tools by an adversary.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Linux auditd logs
      - All endpoints and servers, particularly user workstations, jump servers, developer workstations, and application servers. Exclude pre-approved network management servers.
    range: last 90 days
    queries:
      - pseudocode: "FOR each host, MAINTAIN baseline of executed process names. ALERT if a new process execution name is in snmp_tool_list and not in host's historical baseline."
  - question: Can a machine learning model identify anomalous process executions related to SNMP activity based on process metadata?
    context: This question aims to detect sophisticated adversaries who may rename tools or use custom scripts. By analyzing a richer feature set—including the parent process, command-line characteristics (length, entropy), and user context—a model can learn to identify anomalous behavior even when a simple keyword match would fail.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Linux auditd logs
      - All endpoints and servers, particularly user workstations, jump servers, developer workstations, and application servers. Exclude pre-approved network management servers.
    range: last 90 days
    queries:
      - pseudocode: "SCORE new process creation events using a trained classification model. FEATURES include process_name, parent_process, cmd_line_entropy, cmd_line_length, user_type. ALERT if score indicates anomaly."
  - question: Has any single host sent a very large number of SNMP requests (e.g., >1,000) to a single destination within a short time window (e.g., 5 minutes)?
    context: This question uses a simple, static threshold to detect a potential MIB dump. A full MIB dump involves querying a large number of OIDs, which translates to a high volume of requests in a short period. While this can have false positives, it's a straightforward way to catch blatant data collection attempts.
    answer_sources:
      - Zeek snmp.log
      - Network TAPs or SPAN ports feeding Zeek sensors. The targets are network devices (routers, switches) and servers with SNMP enabled.
    range: last 90 days
    queries:
      - pseudocode: "COUNT SNMP requests GROUP BY src_ip, dst_ip in 5-minute windows. ALERT if count > 1000."
  - question: Is any source-destination pair exhibiting a number of SNMP requests that is a statistical anomaly compared to its own historical baseline?
    context: This question refines the previous one by using dynamic, per-pair baselining. Instead of a single static threshold for all traffic, it learns what is 'normal' for each specific client-server interaction. An alert is triggered only when a host sends significantly more requests to a destination than it has in the past, leading to fewer false positives from legitimately chatty management servers.
    answer_sources:
      - Zeek snmp.log
      - Network TAPs or SPAN ports feeding Zeek sensors. The targets are network devices (routers, switches) and servers with SNMP enabled.
    range: last 90 days
    queries:
      - pseudocode: "FOR each src_ip, dst_ip pair, CALCULATE rolling 30-day baseline (mean, stddev) of SNMP request counts in 5-min windows. ALERT if current_count > (mean + 3*stddev)."
  - question: For high-value assets, does the volume of incoming SNMP requests deviate from the normal temporal pattern predicted by a time-series anomaly detection model?
    context: This question provides a highly sophisticated monitoring approach for critical infrastructure. By modeling the expected rhythm of SNMP traffic to a device (e.g., higher during business hours, lower at night), an LSTM or ARIMA model can detect deviations that signify an attack, even if the volume isn't extreme. This is useful for spotting 'low-and-slow' MIB dumps.
    answer_sources:
      - Zeek snmp.log
      - Network TAPs or SPAN ports feeding Zeek sensors. The targets are network devices (routers, switches) and servers with SNMP enabled.
    range: last 90 days
    queries:
      - pseudocode: "FOR high-value destination_ips, APPLY time-series anomaly detection model (e.g., LSTM autoencoder) to per-minute SNMP request volume. ALERT if observed volume significantly deviates from prediction."
  - question: Has any host sent SNMP requests to a large number of unique destinations (e.g., >20) or requested a large number of unique OIDs (e.g., >500) from one destination in a short time window?
    context: This question uses two distinct thresholds to differentiate between network scanning and MIB dumping. A high count of unique destinations indicates a horizontal scan for SNMP-enabled devices. A high count of unique OIDs to a single destination indicates a deep dive into that device's configuration, characteristic of a MIB dump.
    answer_sources:
      - Zeek snmp.log
      - Network-wide monitoring sensors (Zeek). Any host on the network can be a source, and any SNMP-enabled device can be a target.
    range: last 90 days
    queries:
      - pseudocode: "RULE 1 (SCAN): ALERT if a src_ip communicates with >20 unique dst_ips via SNMP in 10 mins. RULE 2 (DUMP): ALERT if a src_ip requests >500 unique OIDs from a single dst_ip in 10 mins."
  - question: Is any host exhibiting a statistically anomalous number of unique SNMP destinations or an unusually high entropy of requested OIDs compared to its peers?
    context: This question uses statistical baselining to identify outliers. Instead of fixed thresholds, it identifies hosts whose scanning (high destination count) or MIB exploration (high OID entropy) behavior is in the top percentile compared to all other hosts. This approach adapts to the network's normal behavior and is more resilient to environmental changes.
    answer_sources:
      - Zeek snmp.log
      - Network-wide monitoring sensors (Zeek). Any host on the network can be a source, and any SNMP-enabled device can be a target.
    range: last 90 days
    queries:
      - pseudocode: "FOR each src_ip in 10-min windows, CALCULATE unique_dst_count and OID_entropy. ALERT if src_ip's value for either metric is > 98th percentile of all hosts."
  - question: Can an unsupervised anomaly detection model, like Isolation Forest, identify hosts with anomalous SNMP activity patterns based on aggregated metrics?
    context: This question uses a multi-variate anomaly detection approach. By combining several metrics (total requests, unique destinations, unique community strings, OID entropy) into a single feature vector, an Isolation Forest model can identify hosts whose overall behavior pattern is rare and suspicious, even if no single metric crosses a threshold. This is effective at finding novel or complex attack techniques.
    answer_sources:
      - Zeek snmp.log
      - Network-wide monitoring sensors (Zeek). Any host on the network can be a source, and any SNMP-enabled device can be a target.
    range: last 90 days
    queries:
      - pseudocode: "FOR each src_ip, CREATE feature vector from 10-min window (total_req, unique_dst, unique_community, OID_entropy). SCORE vector with Isolation Forest model. ALERT on anomalous scores."