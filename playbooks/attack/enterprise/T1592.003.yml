name: T1592.003: Firmware
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps determine if an adversary is actively gathering information about an organization's host and device firmware. It looks for several indicators, including: inbound connections from known malicious scanners; HTTP/S requests with User-Agents or URIs indicative of fingerprinting tools; network scans (both horizontal and vertical) from a single external source; connection attempts to management-related ports (like IPMI, SNMP, RDP); and the use of local command-line tools or WMI queries to retrieve firmware details, which suggests post-compromise discovery.
type: technique
related:
- TA0043: Reconnaissance
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any inbound connections originated from IP addresses known for scanning or malicious reconnaissance?
  context: This question aims to identify direct connection attempts from known-bad actors. By cross-referencing inbound source IPs against a threat intelligence database, analysts can quickly detect and prioritize threats from adversaries who are actively scanning the network perimeter. Successful connections are of high concern, while even failed attempts indicate the organization is being targeted.
  answer_sources:
  - Zeek conn.log
  - Internet gateway firewalls
  - DMZ network sensors
  - public-facing application servers
  - cloud VPC internet gateways
  - VPN concentrators.
  range: last 90 days
  queries:
  - search: 'pseudocode: SEARCH Zeek conn.log | JOIN id.orig_h WITH threat_intelligence_db.ip | WHERE conn_state NOT IN (''S0'', ''REJ'', ''RSTO'') | ALERT severity=high | ELSE | ALERT severity=medium'
- question: Are any external IP addresses exhibiting anomalous scanning behavior, such as an unusually high number of connections or targeted ports?
  context: This question helps identify potential scanners that may not yet be on a threat intelligence list. By baselining normal connection patterns, analysts can spot outliers. An external IP making an abnormally high number of connections or probing a wide range of ports within a short period (e.g., 24 hours) is a strong indicator of a systematic scanning effort to map the organization's attack surface.
  answer_sources:
  - Zeek conn.log
  - Internet gateway firewalls
  - DMZ network sensors
  - public-facing application servers
  - cloud VPC internet gateways
  - VPN concentrators.
  range: last 24 hours
  queries:
  - search: 'pseudocode: SEARCH Zeek conn.log FOR last 24h | STATS count(connections), distinct_count(id.resp_p) BY id.orig_h | COMPARE counts TO historical_baseline | WHERE counts > 95th_percentile | ALERT'
- question: Can we proactively identify new or unknown scanning IPs by modeling the characteristics of their connection behavior?
  context: This question moves beyond simple heuristics to a machine learning-based approach. By training a classification model on the features of known-good and known-bad connections (e.g., protocol, duration, bytes transferred), analysts can create a system that scores and classifies new, unseen IP addresses in real-time. This allows for the proactive detection of sophisticated or novel scanners that would evade static signature-based or simple threshold-based methods.
  answer_sources:
  - Zeek conn.log
  - Internet gateway firewalls
  - DMZ network sensors
  - public-facing application servers
  - cloud VPC internet gateways
  - VPN concentrators.
  range: last 90 days
  queries:
  - search: 'pseudocode: MODEL train binary_classifier ON labeled_data(Zeek conn.log) WITH features(protocol, service, duration, bytes) | APPLY model TO new_inbound_connections | ALERT on high_probability_scanner_score'
- question: Are we observing HTTP/S requests containing user-agents or URIs associated with known firmware reconnaissance tools?
  context: This question focuses on identifying automated scanning tools by their specific signatures. Many reconnaissance tools use default User-Agent strings (e.g., 'Nmap', 'Nuclei') or probe for common firmware-related paths (e.g., '/firmware', '/.git/'). Searching for these explicit indicators in web and network logs is a direct and effective way to detect targeted fingerprinting attempts.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek ssl.log
  - Public-facing web servers
  - API gateways
  - management interfaces for network appliances
  - load balancers
  - Web Application Firewalls (WAFs).
  range: last 90 days
  queries:
  - search: 'pseudocode: SEARCH Zeek http.log | REGEX user_agent MATCHES scanner_list OR uri MATCHES firmware_patterns | ALERT'
- question: Are any external IPs using a single, non-diverse User-Agent string across many requests, suggesting automated activity?
  context: This question aims to identify automation by analyzing the diversity of User-Agent strings from a single source IP. Human users accessing a site through various devices and browsers will generate multiple User-Agents. In contrast, an automated script or tool typically uses the same User-Agent for every request, resulting in very low entropy. Flagging IPs with abnormally low User-Agent entropy can uncover scanners that use custom or less-common signatures.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek ssl.log
  - Public-facing web servers
  - API gateways
  - management interfaces for network appliances
  - load balancers
  - Web Application Firewalls (WAFs).
  range: last 1 hour
  queries:
  - search: 'pseudocode: SEARCH Zeek http.log FOR last 1h BY id.orig_h | CALCULATE shannon_entropy(user_agent) | WHERE entropy < 5th_percentile | ALERT'
- question: Can we identify clusters of anomalous HTTP/S requests that represent automated tools distinct from normal user traffic?
  context: This question applies unsupervised machine learning to find "unknown unknowns." By clustering HTTP requests based on features like URI structure and header counts, normal user traffic will form a large, dense cluster. Automated tools, with their repetitive and often unusual request patterns, will form small, distinct clusters that can be isolated and investigated by an analyst. This is powerful for detecting novel or customized scanning tools.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek ssl.log
  - Public-facing web servers
  - API gateways
  - management interfaces for network appliances
  - load balancers
  - Web Application Firewalls (WAFs).
  range: last 90 days
  queries:
  - search: 'pseudocode: MODEL train DBSCAN ON vectorized_http_features(uri_length, special_chars, etc.) | IDENTIFY small, dense clusters | ALERT'
- question: Has any single external IP connected to an excessive number of internal hosts or ports, indicating a network scan?
  context: This question seeks to detect overt scanning activity through simple, high-confidence thresholds. A horizontal scan (one source to many destinations) or a vertical scan (one source to many ports on one destination) are classic reconnaissance techniques. Implementing a real-time rule to alert when a source IP exceeds a reasonable threshold (e.g., >50 hosts or >100 ports in 5 minutes) provides an immediate warning of a potential breach attempt or network mapping.
  answer_sources:
  - Zeek conn.log
  - Perimeter firewalls
  - network tap at the internet edge
  - cloud VPC flow logs
  - cloud security group flow logs.
  range: last 5 minutes
  queries:
  - search: 'pseudocode: SEARCH Zeek conn.log IN 5min_window | STATS distinct_count(id.resp_h) AS hosts, distinct_count(id.resp_p) AS ports BY id.orig_h | WHERE hosts > 50 OR ports > 100 | ALERT'
- question: Are any external IPs exhibiting statistically anomalous scanning behavior when compared to historical data?
  context: This question provides a more nuanced approach than fixed thresholds by using historical data to define "normal." On an hourly or daily basis, the number of unique hosts and ports contacted by each external IP is calculated and compared against a long-term statistical baseline (e.g., 30 days). Any IP whose activity level falls into an extreme percentile (e.g., top 99.5%) is flagged. This method adapts to changing traffic patterns and is effective at finding significant deviations from the norm.
  answer_sources:
  - Zeek conn.log
  - Perimeter firewalls
  - network tap at the internet edge
  - cloud VPC flow logs
  - cloud security group flow logs.
  range: last 30 days
  queries:
  - search: 'pseudocode: SEARCH Zeek conn.log HOURLY | STATS distinct_count(id.resp_h), distinct_count(id.resp_p) BY id.orig_h | COMPARE counts TO 30_day_baseline | WHERE counts > 99.5th_percentile | ALERT'
- question: Can we detect 'low-and-slow' scanning by identifying machine-like, rhythmically consistent connection timing?
  context: This question addresses a sophisticated evasion technique where attackers spread out connection attempts over a long period to avoid threshold-based alerts. By analyzing the time between consecutive connections from a source IP (inter-arrival time), it's possible to detect machine-like precision. A time-series anomaly detection model can be trained to recognize the slightly irregular patterns of human traffic and flag the metronomic, rhythmic patterns characteristic of an automated 'low-and-slow' scanner.
  answer_sources:
  - Zeek conn.log
  - Perimeter firewalls
  - network tap at the internet edge
  - cloud VPC flow logs
  - cloud security group flow logs.
  range: last 90 days
  queries:
  - search: 'pseudocode: MODEL train ARIMA on benign_ip_inter_arrival_times | APPLY model to new_ip_time_series | ALERT on anomalous rhythm'
- question: Are external IPs attempting to connect to or query known management ports like SNMP, IPMI, or RDP?
  context: This question focuses on detecting attempts to find and exploit exposed management interfaces, which are high-value targets for accessing firmware. By maintaining a watchlist of common management ports (e.g., 161, 623, 3389), analysts can specifically monitor for external connection attempts to these sensitive services. Correlating a connection attempt with protocol-specific logs (like an SNMP `get-request`) confirms the intent and raises the severity of the event.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Zeek snmp.log
  - Zeek http.log
  - Zeek rdp.log
  - Network segments hosting IoT/OT devices
  - data center management networks
  - network appliance management interfaces
  - blade server chassis management interfaces.
  range: last 90 days
  queries:
  - search: 'pseudocode: SEARCH Zeek conn.log FOR external_ips TO management_port_list | CORRELATE with snmp.log, rdp.log | ALERT on confirmed connection'
- question: Are any external IPs disproportionately targeting management ports compared to standard web ports?
  context: This question helps differentiate between general internet scanners and attackers specifically targeting management infrastructure. An ordinary web crawler or benign scanner will primarily hit ports 80 and 443. An adversary looking for firmware access will show a much higher ratio of connections to management ports versus web ports. By calculating this ratio for each IP and flagging statistical outliers, analysts can focus on the most targeted threats.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Zeek snmp.log
  - Zeek http.log
  - Zeek rdp.log
  - Network segments hosting IoT/OT devices
  - data center management networks
  - network appliance management interfaces
  - blade server chassis management interfaces.
  range: last 90 days
  queries:
  - search: 'pseudocode: SEARCH Zeek conn.log | CALCULATE ratio(connections_to_mgmt_ports / connections_to_web_ports) BY id.orig_h | WHERE ratio > 98th_percentile | ALERT'
- question: Can anomalous network behavior, such as malformed packets, indicate firmware fingerprinting attempts?
  context: This question leverages network sensor logs that record protocol deviations and malformed packets (e.g., Zeek's weird.log). Attackers often send deliberately malformed packets to elicit specific responses from a device's network stack, helping them fingerprint the OS or firmware version. By using an anomaly detection model to identify unusual 'weird' events, analysts can uncover these subtle fingerprinting techniques that may not be visible in standard connection logs.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Zeek snmp.log
  - Zeek http.log
  - Zeek rdp.log
  - Network segments hosting IoT/OT devices
  - data center management networks
  - network appliance management interfaces
  - blade server chassis management interfaces.
  range: last 90 days
  queries:
  - search: 'pseudocode: MODEL train IsolationForest on baseline_weird_log_events | APPLY model to new_weird_log_events | ALERT on high_anomaly_score'
- question: Have any post-compromise commands or scripts been executed on hosts to retrieve firmware information?
  context: This question shifts focus from external reconnaissance to internal, post-compromise discovery. Once on a host, an adversary will try to gather information about the system, including its firmware. This is often done using built-in command-line tools (`systeminfo`, `wmic bios`) or PowerShell cmdlets (`Get-WmiObject win32_bios`). Searching for the execution of these specific commands in process and script logs is a critical way to detect an active intruder.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers
  - administrator workstations
  - virtualization hosts
  - critical application servers
  - endpoint devices.
  range: last 90 days
  queries:
  - search: 'pseudocode: SEARCH EventID 4688, 4104 | FILTER for command_line CONTAINS (''wmic bios'', ''Get-WmiObject win32_bios'', ''systeminfo'') | ALERT'
- question: Is there an anomalous frequency of firmware-querying commands being run on any single host?
  context: While a single firmware query might be legitimate administrative activity, a sudden burst of such queries is highly suspicious. This question aims to detect this by establishing a baseline for how often these commands are normally run on each host. Using a moving average and alerting when the command count exceeds a statistical threshold (e.g., 3 standard deviations above the mean) can effectively catch automated discovery scripts while minimizing false positives from normal activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers
  - administrator workstations
  - virtualization hosts
  - critical application servers
  - endpoint devices.
  range: last 90 days
  queries:
  - search: 'pseudocode: FOR each host, TRACK moving_average_and_std_dev of firmware_query_commands | ALERT if count in 1h_window > (baseline + 3*std_dev)'
- question: Can we detect firmware reconnaissance as part of a larger anomalous sequence of commands on a host?
  context: This is an advanced technique for detecting malicious intent by analyzing the context of a command. A firmware query by itself might be benign, but when it appears in a sequence like 'network download -> execute -> firmware query -> exfiltrate data', the context makes it malicious. By training a model (like an LSTM autoencoder) on normal command sequences, the system can learn legitimate workflows and flag any new sequence that deviates significantly, indicating a likely intrusion.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers
  - administrator workstations
  - virtualization hosts
  - critical application servers
  - endpoint devices.
  range: last 90 days
  queries:
  - search: 'pseudocode: MODEL train LSTM_autoencoder on normal_command_sequences | APPLY model to new_command_sequences | ALERT on high reconstruction_error'