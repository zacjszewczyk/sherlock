name: T1016: System Network Configuration Discovery
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is attempting to discover network configuration information. It focuses on detecting the execution of network discovery commands (e.g., ipconfig, arp, route) through various anomalous patterns. These include executions with known-malicious command-line arguments or output redirection; executions by non-standard parent processes like office applications; a rapid sequence of multiple, unique discovery commands from a single host; remote execution of discovery commands across numerous systems, indicating lateral movement; and anomalous network scanning behavior characterized by a high volume of connection attempts from a single source.
type: technique
related:
- TA0007: Discovery
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
- none
questions:
- question: Are network discovery commands being executed with command-line arguments or output redirection paths that match known malicious signatures?
  context: This question aims to identify high-confidence malicious activity by matching the command-line execution of common network discovery tools (like ipconfig, arp, route) against specific patterns derived from threat intelligence. For example, an adversary might redirect the output of `ipconfig /all` to a temporary file in a public directory for later exfiltration. Detecting these specific, known-bad patterns is a strong indicator of compromise.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Critical Application Servers
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH process_creation_logs WHERE (process_name IN ('ipconfig.exe', 'arp.exe', 'route.exe')) AND command_line MATCHES REGEX (known_malicious_patterns)
- question: Are network discovery commands being executed with statistically rare command-line arguments or output file paths?
  context: This question seeks to uncover novel or evasive malicious activity by identifying unusual usage of standard network discovery tools. Adversaries may use uncommon arguments or write to atypical file paths to avoid simple signature-based detection. By baselining normal usage across the enterprise and alerting on statistically significant deviations (e.g., the bottom 1st percentile of usage), analysts can detect suspicious commands that don't match any known-bad signature.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Critical Application Servers
  range: last 90 days
  queries:
  - technology: Data Analytics Platform
    query: CALCULATE frequency of command_line_arguments and output_paths for discovery_commands. ALERT where frequency is in bottom 1st percentile.
- question: Can machine learning models identify malicious executions of network discovery commands based on their features?
  context: This question explores using a supervised machine learning model (logistic regression) to score the likelihood that a given network discovery command execution is malicious. The model is trained on labeled data and considers various features like the command name, number of arguments, use of redirection operators, and file path characteristics (entropy). This approach provides a probabilistic assessment of malice, allowing analysts to prioritize the most suspicious events for investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Critical Application Servers
  range: last 90 days
  queries:
  - technology: Machine Learning Model
    query: SCORE process_creation_events using trained_classifier. FEATURES- command_name, arg_count, has_redirection, output_path_entropy. ALERT on high_maliciousness_score.
- question: Are network discovery utilities being launched by non-standard parent processes?
  context: This question focuses on identifying suspicious process ancestry. Legitimate execution of discovery tools like `ipconfig.exe` typically originates from standard shells (`cmd.exe`, `powershell.exe`) or `explorer.exe`. An execution spawned by an office application like `WINWORD.EXE` or a web browser like `CHROME.EXE` is highly anomalous and may indicate that a malicious document or exploit is performing reconnaissance on the compromised host.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Member Servers
  - Human Resources Systems
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH process_creation_logs WHERE process_name IN (discovery_utilities) AND parent_process_name NOT IN (allowlist_parents)
- question: Is any user executing network discovery commands at a rate that is anomalous for their role?
  context: This question aims to detect behavioral anomalies by comparing a user's activity against a baseline established for their specific role (e.g., Standard User, IT Admin). While an IT administrator frequently running discovery commands is normal, a user from the HR department doing so at a high frequency is suspicious. Alerting when a user's execution count exceeds a statistical threshold (e.g., 3 standard deviations above the mean for their role) can pinpoint compromised accounts being used for reconnaissance.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Member Servers
  - Human Resources Systems
  range: last 90 days
  queries:
  - technology: UEBA/SIEM
    query: BASELINE execution_count of discovery_commands per user_role. ALERT if user_execution_count > (role_baseline_mean + 3 * role_baseline_stddev) within 24h.
- question: Can anomalous clusters of activity involving network discovery commands be identified through unsupervised machine learning?
  context: This question uses unsupervised learning (like DBSCAN) to find groups of related, suspicious events without pre-existing labels. By clustering process executions based on features like user, host, parent process, and time of day, analysts can discover outliers. A small, isolated cluster containing network discovery commands alongside other rare or suspicious activities (e.g., occurring at 3 AM from a user's workstation) would be a strong candidate for investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Member Servers
  - Human Resources Systems
  range: last 90 days
  queries:
  - technology: Data Analytics Platform
    query: CLUSTER process_execution_events using DBSCAN. FEATURES- user, host, parent_process, command, time_of_day. INVESTIGATE outlier_clusters containing discovery_commands.
- question: Is any single host executing a rapid succession of multiple, different network discovery commands?
  context: This question seeks to detect an adversary's 'hands-on-keyboard' reconnaissance activity. A common pattern for an attacker who has just gained access to a host is to run a series of commands like `ipconfig`, `arp -a`, and `route print` in quick succession to map the local network environment. A correlation rule that detects three or more unique discovery commands from one host within a short window (e.g., 5 minutes) is a classic and effective detection for this stage of an attack.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Development Environments
  range: last 90 days
  queries:
  - technology: SIEM
    query: GROUP process_creation_events by host over 5min_window. ALERT if count(distinct discovery_commands) >= 3.
- question: Is there a sudden spike in the diversity of commands being executed on a host, characteristic of reconnaissance?
  context: This question uses information theory to detect unusual command-line activity. Normal system and user behavior often involves repetitive command usage, resulting in low command entropy. A burst of reconnaissance activity, where an attacker runs many different commands in a short period, will cause a sudden spike in the Shannon entropy of command names. Monitoring for a significant deviation from a host's historical entropy baseline can reveal these bursts of exploratory activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Development Environments
  range: last 90 days
  queries:
  - technology: Data Analytics Platform
    query: CALCULATE shannon_entropy of command_names per host over 10min_window. ALERT if entropy > (host_baseline_mean + 2.5 * host_baseline_stddev).
- question: Are hosts executing sequences of commands that are highly improbable based on models of normal behavior?
  context: This question leverages sequence analysis to identify anomalous chains of events. By training a model like an HMM on vast amounts of normal command execution data, the system learns which command sequences are common and which are rare. An attacker performing reconnaissance is likely to execute a sequence of commands (e.g., `whoami` -> `ipconfig /all` -> `net view`) that has a very low probability of occurring during normal operations. The model can flag these low-probability sequences for investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Sysmon Event ID 1
  - User Workstations
  - Domain Controllers
  - Development Environments
  range: last 90 days
  queries:
  - technology: Machine Learning Model
    query: MODEL command_sequences using HMM. SCORE new_sequences for probability. ALERT on low_probability_sequences containing discovery_commands.
- question: Is a single source host remotely logging into multiple systems and immediately running network discovery commands?
  context: This question is designed to detect lateral movement combined with reconnaissance. An attacker, having compromised one machine, will often use it as a pivot point to log into other systems and gather network information. This correlation rule specifically looks for this pattern- a successful remote login (Logon Type 3) from a source host, immediately followed by the execution of a discovery command on the destination host, repeated across multiple destinations. This is a strong indicator of an active attacker moving through the network.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Internal Network Segments
  - Internal Servers and Workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: SIEM
    query: CORRELATE (remote_logon_success from src_host to dest_host) with (discovery_command_execution on dest_host within 5min). ALERT if src_host targets > 5 distinct dest_hosts within 1hr.
- question: Is a host initiating an anomalously high number of remote administration connections, correlated with discovery command execution on the targets?
  context: This question uses network traffic analysis to identify a host that is acting as a hub for widespread reconnaissance. By baselining the normal number of outbound remote administration connections (e.g., RDP, WinRM, SMB) for each host, the system can detect when a host suddenly starts connecting to an unusually large number of other systems (e.g., exceeding the 99th percentile of its history). If this anomalous network activity is temporally correlated with discovery commands being run on the target systems, it strongly suggests a coordinated, remote reconnaissance effort.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Internal Network Segments
  - Internal Servers and Workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: Network Analysis/SIEM
    query: BASELINE unique outbound admin_connections per host from conn_log. ALERT if connection_count > 99th_percentile AND correlated with discovery_command_execution on targets.
- question: Is a host making remote administration connections that violate normal communication patterns or 'communities' within the network, followed by discovery activity?
  context: This advanced question uses graph analysis to model and detect abnormal network pathways. The network can be modeled as a graph where hosts are nodes and connections are edges. Community detection algorithms can identify normal clusters (e.g., workstations in one department communicating with each other). An alert is generated when a host makes a remote administration connection that crosses these community boundaries (e.g., a finance workstation connecting to a developer server) and is immediately followed by discovery commands on the target. This indicates a breach of normal network segmentation and behavior.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Internal Network Segments
  - Internal Servers and Workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: Graph Analytics Platform
    query: BUILD communication_graph from conn_log. DETECT communities. ALERT on remote_admin_connections that cross community boundaries AND are followed by discovery_command_execution on target.
- question: Is a host identified by Zeek as performing a network scan, and is this correlated with a spike in connection attempts from that host?
  context: This question leverages Zeek's built-in scan detection capabilities. Zeek's `notice.log` will generate a `Scan::Address_Scan` notice when it observes behavior indicative of a network scan. This provides a high-fidelity alert. The question adds a layer of confirmation by correlating this notice with a corresponding spike in connection attempts from the same source host in the `conn.log`, validating that a scanning event is indeed in progress.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek weird.log
  - Internal Network Segments
  - VLANs containing sensitive systems
  - Data Center Networks
  range: last 90 days
  queries:
  - technology: SIEM/Network Security Monitoring
    query: SEARCH notice_log for event='Scan::Address_Scan'. CORRELATE with spike in conn_log attempts from same source_ip to scanned_dest_ips within 5min.
- question: Is a host attempting to connect to an anomalously high number of unique IP addresses on its local subnet?
  context: This question aims to detect host discovery and network sweeps at the network level. A host attempting to map its local network segment will try to connect to many different IP addresses in a short time. By establishing a baseline for the normal number of unique IPs a host contacts within its subnet, analysts can detect when a host's behavior deviates significantly (e.g., exceeds 3 standard deviations from its own baseline or the baseline of its peers). This is a classic indicator of local network reconnaissance.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek weird.log
  - Internal Network Segments
  - VLANs containing sensitive systems
  - Data Center Networks
  range: last 90 days
  queries:
  - technology: Network Analysis/SIEM
    query: BASELINE unique_dest_ips_per_hour per host from conn_log. ALERT if unique_dest_count > (baseline_mean + 3 * baseline_stddev).
- question: Can a time-series anomaly detection model identify bursts of new connection attempts that indicate a network scan?
  context: This question applies a sophisticated machine learning approach to network traffic. An LSTM-based autoencoder is trained on the time-series data of new connection initiations per second for each host. The model learns the 'rhythm' of normal network traffic for each host. When a host initiates a network scan, it creates a sudden burst of connection attempts that the model, trained on normalcy, will recognize as a significant anomaly or a high reconstruction error. This can detect scanning behavior that might be too subtle for simple threshold-based rules.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek weird.log
  - Internal Network Segments
  - VLANs containing sensitive systems
  - Data Center Networks
  range: last 90 days
  queries:
  - technology: Machine Learning/Time-Series Analysis
    query: TRAIN LSTM_autoencoder on time-series of new_connections_per_second per host. ALERT on high reconstruction_error, indicating anomalous burst.