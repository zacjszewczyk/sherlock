name: T1071.002: File Transfer Protocols
id: a2c9b6f8-3e4d-4b1a-9c8d-7e6f5a4b3c2d
description: |
  This playbook helps investigate if an adversary is using file transfer protocols like FTP, SMB, or TFTP for command and control (C2) communications. It focuses on identifying suspicious network traffic patterns, such as connections to known malicious destinations, command sequences matching known C2 frameworks, anomalous data transfer volumes or ratios, periodic beaconing behavior, connections initiated by unusual processes, and the transfer of obfuscated or disguised executable files.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has an internal host established an FTP, SMB, or TFTP connection to an external destination listed on a high-confidence C2 threat intelligence feed?
    context: This question seeks to identify direct communication with known command and control infrastructure. By cross-referencing outbound file transfer protocol connections against a curated list of malicious IPs or domains, analysts can quickly detect high-fidelity indicators of compromise. A match suggests a host may be compromised and communicating with an adversary's C2 server.
    answer_sources:
      - Zeek conn.log
      - Zeek ftp.log
      - Zeek dns.log
      - Zeek notice.log
      - Internet Gateway Firewalls
      - DNS Resolvers
      - Network Egress Points
      - Cloud Access Security Brokers (CASB)
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek conn.log WHERE destination_port IN (21, 445, 69) AND destination_ip IS_EXTERNAL AND destination_ip IN threat_intel_feed(C2_servers) | GENERATE_ALERT
  - question: Are internal hosts making file transfer protocol connections to rare and newly registered external domains?
    context: Adversaries often use newly registered domains (NRDs) for C2 infrastructure to evade reputation-based blocking. These domains typically have a very low prevalence within an organization. This question identifies these statistical outliers by looking for file transfer connections to external domains that are both rarely seen across the enterprise and have been registered recently, which is a strong indicator of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek ftp.log
      - Zeek dns.log
      - Zeek notice.log
      - Internet Gateway Firewalls
      - DNS Resolvers
      - Network Egress Points
      - Cloud Access Security Brokers (CASB)
    range: last 90 days
    queries:
      - pseudocode: JOIN Zeek dns.log and conn.log ON ip | CALCULATE domain_prevalence and domain_age | FILTER domain_prevalence < 0.1% AND domain_age < 60_days | FLAG_CONNECTION
  - question: Can a machine learning model identify file transfer connections as malicious based on their network and DNS characteristics?
    context: This question leverages a machine learning model to score the likelihood that a file transfer connection is malicious. By training on a wide array of features—such as IP reputation, domain age, ASN details, and connection metadata—the model can identify complex, non-obvious patterns indicative of C2 activity that may be missed by simpler symbolic or statistical rules. Connections scoring above a high-probability threshold warrant immediate investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek ftp.log
      - Zeek dns.log
      - Zeek notice.log
      - Internet Gateway Firewalls
      - DNS Resolvers
      - Network Egress Points
      - Cloud Access Security Brokers (CASB)
    range: last 90 days
    queries:
      - pseudocode: EXTRACT features from Zeek conn.log and dns.log (ip_rep, asn, domain_age, etc.) | APPLY classification_model | IF prediction_score > 0.90, PROMOTE_FOR_INVESTIGATION
  - question: Are there sequences of FTP or SMB commands that match known malicious TTPs, like staging and executing a payload?
    context: This question aims to detect specific, high-confidence attack patterns. Adversaries often follow a predictable script when using file transfer protocols for C2, such as uploading a file, renaming it to an executable, and then triggering its execution. By creating rules that look for these specific sequences of events in a short timeframe, analysts can identify active intrusions.
    answer_sources:
      - Zeek ftp.log
      - Zeek smb_files.log
      - Zeek smb_mapping.log
      - Zeek smb_cmds.log
      - Internal File Servers
      - Domain Controllers
      - Endpoint Workstations
      - Network Segments with high-value assets
    range: last 90 days
    queries:
      - pseudocode: SEARCH for event_sequence('SMB Write to ADMIN$', 'Remote Service Creation') OR event_sequence('FTP PUT *.tmp', 'FTP RNTO *.exe') within short_time_window | GENERATE_ALERT
  - question: Has any user's FTP or SMB activity pattern significantly deviated from their established personal or peer group baseline?
    context: This question focuses on behavioral anomaly detection. Every user has a typical pattern of interacting with file shares and FTP servers. A sudden, statistically significant change in this behavior—for example, an administrative user who normally only reads files suddenly starting to write many new files—can indicate an account compromise or insider threat. Comparing activity to both the user's own history and their peers' activity helps identify these deviations.
    answer_sources:
      - Zeek ftp.log
      - Zeek smb_files.log
      - Zeek smb_mapping.log
      - Zeek smb_cmds.log
      - Internal File Servers
      - Domain Controllers
      - Endpoint Workstations
      - Network Segments with high-value assets
    range: last 90 days
    queries:
      - pseudocode: FOR each user | BASELINE 30-day FTP/SMB command distribution | COMPARE daily_activity to baseline and peer_group_baseline using Chi-squared_test | IF p_value < 0.01, FLAG_AS_ANOMALOUS
  - question: Can a sequence-based machine learning model detect anomalous FTP or SMB command sequences that deviate from normal user behavior?
    context: This question uses a sophisticated anomaly detection model to understand the *sequence* of commands, not just their frequency. Normal user activity follows certain logical workflows. A model like an LSTM Autoencoder learns these legitimate sequences. When an adversary uses an automated C2 tool, the sequence of commands will likely be different from a human's, resulting in a high reconstruction error from the model, thus flagging the session as anomalous.
    answer_sources:
      - Zeek ftp.log
      - Zeek smb_files.log
      - Zeek smb_mapping.log
      - Zeek smb_cmds.log
      - Internal File Servers
      - Domain Controllers
      - Endpoint Workstations
      - Network Segments with high-value assets
    range: last 90 days
    queries:
      - pseudocode: TRAIN LSTM Autoencoder on legitimate FTP/SMB command sequences | APPLY model to new command sequences | IF reconstruction_error > threshold, FLAG_SESSION_AS_ANOMALOUS
  - question: Is there an unusually high ratio of data sent versus data received in a file transfer session to an unapproved external destination?
    context: This question is designed to detect data exfiltration. While file transfers can involve both uploads and downloads, a C2 channel used for exfiltration will show a dramatically higher volume of data sent (originating from the internal host) than received. A simple rule that flags sessions with a very high send-to-receive ratio, excluding known services like cloud backups, can be an effective way to spot potential data theft.
    answer_sources:
      - Zeek conn.log
      - Zeek ftp.log
      - Internet Gateway
      - Core Network Switches
      - Endpoint Network Interfaces
      - VPN Concentrators
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek conn.log WHERE destination_ip IS_EXTERNAL AND destination_ip NOT IN allowlist AND sent_bytes > (received_bytes * 20) | GENERATE_ALERT
  - question: Has any host's daily file transfer data volume or send/receive ratio statistically deviated from its own historical baseline?
    context: This question identifies anomalous data transfer volumes on a per-host basis. Instead of a fixed threshold, it uses a host's own traffic history to define what is 'normal'. A host that suddenly starts sending or receiving a volume of data that is several standard deviations above its usual amount, or whose send/receive ratio changes drastically, could be compromised for data exfiltration or staging.
    answer_sources:
      - Zeek conn.log
      - Zeek ftp.log
      - Internet Gateway
      - Core Network Switches
      - Endpoint Network Interfaces
      - VPN Concentrators
    range: last 90 days
    queries:
      - pseudocode: FOR each host | COMPUTE 30-day rolling baseline (mean, stddev) for data_volume and send_receive_ratio | CALCULATE Z-score for current day's traffic | IF Z-score > 3, FLAG_AS_ANOMALOUS
  - question: Is a host's file transfer traffic volume significantly different from what a time series forecasting model would predict?
    context: This question employs a more advanced statistical method to account for natural rhythms in network traffic, such as weekly backup schedules or end-of-day reports. A time series model learns these seasonal patterns and predicts an expected range for traffic volume. An observed volume that falls outside this model's confidence interval is a high-quality anomaly, as it deviates not just from a simple average but from the expected pattern for that specific time and day.
    answer_sources:
      - Zeek conn.log
      - Zeek ftp.log
      - Internet Gateway
      - Core Network Switches
      - Endpoint Network Interfaces
      - VPN Concentrators
    range: last 90 days
    queries:
      - pseudocode: FOR each host and protocol | TRAIN time_series_model (e.g., Prophet) on historical traffic volume | FORECAST expected volume and confidence_interval | IF observed_volume is outside 99% confidence_interval, FLAG_AS_ANOMALOUS
  - question: Is any internal host making an excessive number of short, repeated connections to the same external destination over a file transfer port?
    context: This question aims to detect simple forms of C2 beaconing. Malware often 'calls home' at regular intervals to check for new commands. A simple rule that counts the number of connections from a single source to a single destination within a short time window can effectively detect this automated behavior, especially when the connections are very brief, indicating a simple check-in rather than a legitimate file transfer.
    answer_sources:
      - Zeek conn.log
      - Internet Egress Points
      - Firewall and Proxy Servers
      - DNS sinkholes
    range: last 90 days
    queries:
      - pseudocode: GROUP_BY source_ip, destination_ip, destination_port | COUNT connections in 5_minute_window WHERE duration < 10s and port IN (21, 69, 445) | IF count > 10, GENERATE_ALERT
  - question: Are there any file transfer connections that occur with a highly regular, machine-like periodicity (low jitter)?
    context: This question looks for the hallmark of automated C2 beaconing: regularity. Unlike human-initiated traffic, which is sporadic, automated malware beacons operate on a strict timer. By calculating the standard deviation of the time intervals between connections (jitter), we can identify traffic that is too 'perfect'. A very low jitter, especially to a destination that few other hosts are talking to, is a strong signal of C2 activity.
    answer_sources:
      - Zeek conn.log
      - Internet Egress Points
      - Firewall and Proxy Servers
      - DNS sinkholes
    range: last 90 days
    queries:
      - pseudocode: FOR each source-destination-port triplet | CALCULATE time_deltas between connections over 24h | COMPUTE stddev of deltas (jitter) | IF jitter < 3_seconds AND destination_prevalence is low, FLAG_AS_BEACONING
  - question: Can an unsupervised clustering model identify groups of connections that exhibit beaconing characteristics?
    context: This question uses unsupervised machine learning to find 'tribes' of similar network connections without prior labeling. By clustering connections based on features like destination, duration, data volume, and timing regularity (jitter), C2 beaconing activity will naturally form a small, dense cluster. These clusters represent groups of connections that are highly similar to each other but different from the bulk of normal traffic, making them prime candidates for investigation.
    answer_sources:
      - Zeek conn.log
      - Internet Egress Points
      - Firewall and Proxy Servers
      - DNS sinkholes
    range: last 90 days
    queries:
      - pseudocode: EXTRACT features from conn.log (dest_ip, port, duration, jitter, etc.) | APPLY DBSCAN clustering algorithm | INVESTIGATE small, dense clusters not matching known services
  - question: Is an unusual or suspicious process initiating outbound file transfer connections?
    context: This question provides crucial endpoint context to network alerts. Legitimate file transfers are typically initiated by known client applications (e.g., explorer.exe, ftp.exe). When a process like PowerShell, a script host, or an unsigned executable running from a temporary directory makes an FTP or SMB connection, it is highly suspicious. This rule correlates network events with process data to identify malware using living-off-the-land binaries or custom tools for C2.
    answer_sources:
      - Sysmon Event ID 3
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint Devices (Workstations and Servers)
      - Domain Controllers
      - Application Servers
    range: last 90 days
    queries:
      - pseudocode: JOIN Sysmon_EID3 and WinEvent_4688 | WHERE destination_port IN (21, 69, 445) AND (process_name IN watchlist OR is_unsigned OR path LIKE '%APPDATA%') | GENERATE_ALERT
  - question: Is a statistically rare process making outbound file transfer connections?
    context: This question moves beyond a static watchlist to find what is anomalous for a specific environment. By baselining all process-network connection pairs, you can identify true outliers. A process that has never before been seen making an FTP connection, or one that is seen doing so on only a tiny fraction of endpoints, is a statistical anomaly worth investigating. This can uncover novel or custom malware not on any watchlist.
    answer_sources:
      - Sysmon Event ID 3
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint Devices (Workstations and Servers)
      - Domain Controllers
      - Application Servers
    range: last 90 days
    queries:
      - pseudocode: BASELINE all processes initiating FTP/SMB/TFTP connections | CALCULATE prevalence for each process | IF prevalence is < 1% OR process is new, FLAG_CONNECTION
  - question: Can a machine learning model score the maliciousness of a process-network event by combining endpoint and network features?
    context: This question represents a holistic approach, combining a rich set of endpoint and network data into a single predictive model. The model can learn complex relationships between features, such as a specific parent process spawning a child that connects to a low-reputation IP. By generating a single 'maliciousness' score, it can effectively prioritize the most suspicious events for analysts, even if no single feature is damning on its own.
    answer_sources:
      - Sysmon Event ID 3
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint Devices (Workstations and Servers)
      - Domain Controllers
      - Application Servers
    range: last 90 days
    queries:
      - pseudocode: EXTRACT features from process and network logs (process_name, parent_process, cmd_line, dest_ip_rep, etc.) | APPLY classification_model | IF maliciousness_score > threshold, FLAG_FOR_REVIEW
  - question: Are files being transferred with mismatched extensions to hide their true type, or are executables being exfiltrated?
    context: This question targets two common adversary techniques: masquerading and exfiltration of tools. Adversaries often rename executables to benign extensions (e.g., .txt, .jpg) to evade simple filters. Network security sensors like Zeek can inspect file contents to identify their true type (MIME type). A mismatch is a strong indicator of maliciousness. Additionally, tracking the outbound transfer of any executable file is critical for detecting tool exfiltration.
    answer_sources:
      - Zeek files.log
      - Zeek pe.log
      - Network TAPs providing data to Zeek sensors
      - File Servers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek files.log WHERE (mime_type is 'executable' AND filename_ext NOT IN ['.exe', '.dll']) OR (filename_ext IN ['.exe', '.ps1'] AND destination is external) | GENERATE_ALERT
  - question: Are files being transferred that have unusually high entropy, suggesting they are packed or encrypted?
    context: This question uses information theory to detect obfuscated payloads. Entropy measures the randomness of data. Normal text or image files have relatively low entropy, while compressed or encrypted data (like packed malware) has very high entropy. By flagging files with an entropy value that is either anomalously high for their supposed file type or high in absolute terms, analysts can find hidden malware that might otherwise be missed.
    answer_sources:
      - Zeek files.log
      - Zeek pe.log
      - Network TAPs providing data to Zeek sensors
      - File Servers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: FOR each file in Zeek files.log | CALCULATE shannon_entropy | IF entropy > 7.5 OR entropy > 99th_percentile_for_mimetype, FLAG_FILE
  - question: Can a machine learning model accurately predict a file's true type based on its content, identifying masquerading attempts?
    context: This question enhances the symbolic MIME type check with a more robust, feature-based classification. A machine learning model can analyze dozens of content-based features (byte histograms, string statistics, etc.) to make a probabilistic prediction of the file's true type. This is more resilient to adversary evasion techniques than a simple magic number check. Flagging files where the model's prediction conflicts with the filename is a powerful way to unmask disguised malware.
    answer_sources:
      - Zeek files.log
      - Zeek pe.log
      - Network TAPs providing data to Zeek sensors
      - File Servers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: FOR each file in Zeek files.log | EXTRACT content_features (byte_histogram, entropy, etc.) | APPLY file_type_classifier_model | IF predicted_type != filename_extension_type, FLAG_FILE