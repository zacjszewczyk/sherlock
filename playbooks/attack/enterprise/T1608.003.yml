name: T1608.003: Install Digital Certificate
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps determine if an adversary is developing resources by acquiring and installing digital certificates for their infrastructure. It provides investigative steps to detect connections to servers with known-malicious certificates, identify suspicious certificate attributes (e.g., typosquatting, short validity, free CAs), find statistical outliers in certificate characteristics, flag internal hosts making anomalous connections, and detect unauthorized certificate installations on corporate servers.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are any outbound SSL/TLS connections being made to servers with certificates whose hash or server name matches a known-malicious indicator?
  context: |
    This question uses an Indicator of Compromise (IOC) matching approach. It aims to identify direct connections to known malicious infrastructure by cross-referencing observed certificate hashes (SHA1) and Server Name Indications (SNI) from network traffic against high-confidence threat intelligence feeds. An exact match provides a strong signal of a potential compromise or communication with an adversary's command and control (C2) server.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek conn.log
  - Network Egress/Ingress Points (Firewalls, Proxies)
  range: last 90 days
  queries:
  - pseudocode: SEARCH x509.log and ssl.log for cert_hash and server_name. JOIN with conn.log on UID. COMPARE cert_hash and server_name against threat_intel_feed. ALERT on match.
- question: For any connection matching a malicious indicator, how rare is communication with that destination across the enterprise?
  context: |
    This question adds statistical context to an IOC match to help prioritize alerts. An IOC match is significantly more concerning if the destination is new or rarely contacted by anyone in the organization. By calculating the historical frequency of connections to the matched IP or domain, we can distinguish between a potentially widespread, low-fidelity indicator and a highly targeted, suspicious connection. A match to a destination with very low or zero historical contact frequency dramatically increases the alert's severity.
  answer_sources:
  - Zeek conn.log
  - Network Egress/Ingress Points (Firewalls, Proxies)
  range: last 90 days
  queries:
  - pseudocode: ON IOC_match_alert. CALCULATE frequency of connections to destination_ip and destination_domain from conn.log over last 90 days. ENRICH alert with frequency score (e.g., percentile rank). PRIORITIZE alerts with low frequency scores.
- question: How reliable and relevant is the threat intelligence feed that produced a given IOC match?
  context: |
    This question aims to dynamically prioritize IOC-based alerts by evaluating the quality of the source threat intelligence. Not all threat feeds are equal. By using a machine learning model to score feeds based on factors like provider reputation, indicator age, and historical accuracy, we can assign a confidence score to each match. This allows analysts to focus on alerts originating from high-quality, relevant intelligence, reducing noise from less reliable feeds.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek conn.log
  - Network Egress/Ingress Points (Firewalls, Proxies)
  range: last 90 days
  queries:
  - pseudocode: FOR each threat_intel_feed. SCORE feed based on reputation, indicator_age, historical_accuracy. ON IOC_match_alert. APPLY feed_score to alert. PRIORITIZE alerts with high feed_scores.
- question: Are there any outbound SSL/TLS connections using certificates issued by a free Certificate Authority for a very recently registered domain, or where the certificate's common name mismatches the server's SNI?
  context: |
    This question seeks to identify suspicious certificates based on a set of symbolic rules. Adversaries often use free CAs (like Let's Encrypt) to quickly and cheaply acquire certificates for newly registered domains used in their campaigns. A mismatch between the certificate's Common Name (CN) and the Server Name Indication (SNI) is also a red flag, as it can indicate misconfiguration or malicious intent. Flagging these conditions helps detect adversary infrastructure that is attempting to appear legitimate.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek dns.log
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: SEARCH x509.log and ssl.log. RULE 1: ALERT if cert_issuer is 'Free CA' AND domain_registration_date < 30 days. RULE 2: ALERT if cert_cn != sni.
- question: Are any observed certificate subject domains potential typosquats of our organization's domains?
  context: |
    This question aims to detect typosquatting, a common adversary technique for phishing and C2 communication. By calculating the Damerau-Levenshtein distance between observed certificate domains and a list of legitimate corporate and partner domains, we can identify domains that are visually similar and likely created to deceive users. A small distance (e.g., 1 or 2) is highly suspicious, especially when combined with other factors like recent domain registration.
  answer_sources:
  - Zeek x509.log
  - Zeek dns.log
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: FOR each cert_subject_domain from x509.log. CALCULATE Damerau-Levenshtein distance against list_of_corp_domains. ALERT if distance is 1 or 2.
- question: Can we assign a 'suspicion score' to each observed SSL/TLS certificate based on its collective attributes?
  context: |
    This question moves beyond single rules to a holistic assessment of a certificate's legitimacy. By training a machine learning classification model on various features (e.g., validity period, key length, issuer, typosquatting score, domain age), we can generate a suspicion score for every certificate. This allows for more nuanced detection than simple rules, enabling analysts to prioritize investigation on certificates that a model has classified as having a high probability of being malicious based on a combination of factors.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek dns.log
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: FOR each certificate. EXTRACT features (validity, key_length, issuer, typosquat_score, domain_age). INPUT features into trained ML model. GENERATE suspicion_score. ALERT on high scores.
- question: Are we observing connections to servers using certificates or certificate issuers that have never been seen before in our environment?
  context: |
    This question uses a 'first-seen' logic to detect novelty, which is often an indicator of new adversary infrastructure. By maintaining a baseline of all certificate hashes and issuers observed over a period (e.g., 90 days), any new, previously unobserved certificate or issuer can be flagged. This simple but effective method can surface connections to newly stood-up C2 servers or phishing sites before they are added to threat intelligence feeds.
  answer_sources:
  - Zeek x509.log
  - Zeek ssl.log
  - SIEM/Data Lake
  range: last 90 days
  queries:
  - pseudocode: MAINTAIN lookup of seen cert_hashes and cert_issuers. ON new connection. CHECK if cert_hash or cert_issuer is in lookup. ALERT if not found. PRIORITIZE if other suspicious factors exist.
- question: Are any observed certificates using subject or issuer names with unusually low or high entropy?
  context: |
    This question analyzes the randomness of certificate names to find outliers. Legitimate certificates typically have descriptive, human-readable names with moderate entropy. Adversaries may use generic, low-entropy names (e.g., 'localhost') or, conversely, high-entropy, randomized names generated by Domain Generation Algorithms (DGAs). By calculating the Shannon entropy for subject/issuer strings and flagging those at the extremes of the normal distribution, we can identify certificates that don't fit the typical pattern.
  answer_sources:
  - Zeek x509.log
  - SIEM/Data Lake
  range: last 90 days
  queries:
  - pseudocode: FOR each cert_subject and cert_issuer string. CALCULATE Shannon entropy. ESTABLISH baseline distribution. ALERT on scores in bottom or top 5th percentile.
- question: Has there been a statistically anomalous spike in the number of new, first-seen certificate issuers on our network?
  context: |
    This question applies time-series anomaly detection to monitor the rate of new infrastructure appearing in the environment. Instead of looking at a single 'first-seen' event, it models the daily count of new issuers over time. A sudden, unexpected spike in this count, as detected by a model like SARIMA or Prophet, can indicate a large-scale adversary campaign deploying new resources. This provides a macroscopic view of potential threats.
  answer_sources:
  - Zeek x509.log
  - SIEM/Data Lake
  range: last 90 days
  queries:
  - pseudocode: MODEL daily count of new_cert_issuers as a time series. DETECT anomalies (e.g., observations outside 99% prediction interval). ALERT on detected spikes.
- question: Is any single internal host connecting to an unusually high number of distinct external destinations using self-signed certificates?
  context: |
    This question aims to detect a specific pattern of C2 beaconing. Adversaries may use self-signed certificates for their C2 infrastructure because they are free and easy to create. A compromised internal host beaconing out to a list of such C2 servers would generate a high number of connections to different destinations, all using self-signed certificates. By counting these connections from a single source over a short time window and alerting on a threshold, we can detect this suspicious beaconing behavior.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek x509.log
  - Core Network Switches (capturing East-West and North-South traffic)
  range: last 90 days
  queries:
  - pseudocode: FOR each internal_ip. COUNT distinct destination_ips over 1 hour where cert_status is 'self-signed'. ALERT if count > 10.
- question: Which internal hosts are statistical outliers in terms of the number of distinct, newly-observed domains they are contacting?
  context: |
    This question uses outlier detection to find compromised hosts communicating with a wide array of new adversary infrastructure. By counting the number of distinct 'first-seen' domains each internal host connects to over a 24-hour period, we can establish a baseline for normal behavior. A host that significantly exceeds the typical count (e.g., falls in the 99th percentile) is a high-risk outlier, potentially indicating it is scanning or beaconing to a large set of newly created C2 domains.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek x509.log
  - Core Network Switches (capturing East-West and North-South traffic)
  range: last 90 days
  queries:
  - pseudocode: FOR each internal_ip. COUNT distinct destination_domains where cert is first_seen_in_24h. CALCULATE 99th percentile for this count across all hosts. ALERT on hosts exceeding threshold.
- question: Are there small, distinct groups of internal hosts all communicating with a shared set of suspicious external servers?
  context: |
    This question uses graph analysis and community detection to uncover targeted intrusions. By modeling the relationships between internal hosts and the external certificates they connect to, we can identify clusters of activity. A small, tightly-knit community—where a few internal hosts are all connecting to the same set of suspicious certificates—is a powerful indicator of a coordinated C2 activity, suggesting those specific hosts are compromised as part of the same incident.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek x509.log
  - Core Network Switches (capturing East-West and North-South traffic)
  range: last 90 days
  queries:
  - pseudocode: CREATE bipartite graph of internal_hosts and external_cert_hashes. APPLY community detection algorithm. INVESTIGATE small, dense communities involving suspicious certificates.
- question: Are there any unauthorized certificate installations on corporate servers, detected via command line or PowerShell activity?
  context: |
    This question focuses on detecting the direct installation of a malicious or unauthorized certificate on a host, a key persistence or man-in-the-middle technique. By creating specific rules to monitor for the execution of `certutil.exe` with installation flags or the use of the `Import-Certificate` PowerShell cmdlet, we can catch this activity. Correlating these technical alerts with change management records is crucial; an installation without a corresponding change ticket is a high-priority incident requiring immediate investigation.
  answer_sources:
  - Windows Security Event ID 4688
  - Windows PowerShell Event ID 4104
  - Windows Security Event ID 4697
  - Public-facing Web Servers
  range: last 90 days
  queries:
  - pseudocode: RULE 1: ALERT on process_name 'certutil.exe' with '-addstore' or '-importpfx' in command_line. RULE 2: ALERT on PowerShell log containing 'Import-Certificate'. CORRELATE with change management tickets.
- question: Have any certificate installations occurred that are anomalous in terms of the user account, parent process, or time of day?
  context: |
    This question seeks to identify suspicious certificate installations by looking for behavioral anomalies. Legitimate certificate management is typically performed by specific administrator accounts, from standard processes, and during business hours. An installation performed by a non-administrative user, spawned by an unusual parent process (e.g., `winword.exe`), or occurring late at night deviates from this baseline and should be flagged as suspicious, even if the command itself is legitimate.
  answer_sources:
  - Windows Security Event ID 4688
  - Windows Security Event ID 4697
  - Public-facing Web Servers
  range: last 90 days
  queries:
  - pseudocode: BASELINE legitimate cert management activity (user, parent_process, time). ON cert installation event. ALERT if executing_user not in admin_group, or parent_process is unusual, or time is outside business hours.
- question: Does a User and Entity Behavior Analytics (UEBA) system detect any anomalous sequences of activity related to certificate installation?
  context: |
    This question leverages a UEBA system to detect sophisticated threats that might be missed by individual rules. A UEBA model learns the normal behavior profile for every user and server. It can then identify and alert on a sequence of events that, while individually might not be malicious, are highly anomalous when combined. For example, a user from HR RDP-ing to a web server and then running PowerShell certificate commands is a significant deviation from their normal profile and would be flagged by a UEBA system as a high-risk event.
  answer_sources:
  - Windows Security Event ID 4688
  - Windows PowerShell Event ID 4104
  - Windows Security Event ID 4697
  - Public-facing Web Servers
  range: last 90 days
  queries:
  - pseudocode: INGEST host logs (4688, 4104, 4697) into UEBA. UEBA MODEL learns user/entity behavior. ALERT on anomalous sequences of activity related to certificate management.