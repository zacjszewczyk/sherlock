name: T1037.001: Logon Script (Windows)
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook is designed to detect adversarial use of Windows Logon Scripts for persistence and privilege escalation, as defined by MITRE ATT&CK technique T1037.001. It addresses the primary information requirements: 'Is the adversary maintaining persistence using Windows logon scripts?' and 'Is the adversary attempting privilege escalation using Windows logon scripts?'. The playbook provides investigative questions and queries to identify various indicators of malicious activity. These include the creation or modification of scripts in common logon paths (e.g., user profiles, SYSVOL) that are known-malicious, statistically rare, or contain suspicious content; unauthorized or anomalous modifications to the HKCU\Environment\UserInitMprLogonScript registry key; network connections from script-spawned processes to malicious or rare destinations; modifications pointing to known privilege escalation tools; cross-user script modifications that violate administrative boundaries; scripts located in directories with insecure permissions; and child processes of scripts performing high-risk actions like creating services or accessing LSASS.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are newly created or modified logon scripts known to be malicious?
    context: This question uses an Indicator of Compromise (IOC) approach to find known threats. It involves monitoring for file creation or modification events in standard logon script directories, such as user profiles or the domain's SYSVOL share. The purpose is to automatically hash the new or modified script file and compare that hash against a threat intelligence feed of known malicious scripts. A match provides a high-confidence alert that a malicious file has been placed for persistence.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - User profile directories on endpoints
      - SYSVOL shares on Domain Controllers
      - File servers hosting scripts
    range: last 90 days
    queries:
      - "Pseudocode: SEARCH file creation events (Sysmon 11, Win 4663) in logon script paths. FOREACH event, HASH the file. QUERY hash against a threat intelligence feed. ALERT on match."
  - question: Is a new or modified logon script statistically unusual compared to historical enterprise norms?
    context: This question aims to detect outlier logon scripts that don't match known malicious signatures but are still suspicious. It involves establishing a baseline of normal script names, paths, and file extensions across the enterprise. The rationale is that adversaries may use unique filenames or place scripts in non-standard locations to evade detection. An alert is triggered if a script's properties are statistically rare (e.g., below the 5th percentile of frequency).
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - User profile directories on endpoints
      - SYSVOL shares on Domain Controllers
      - File servers hosting scripts
    range: last 90 days
    queries:
      - "Pseudocode: SEARCH historical file events to build a baseline of script names, paths, and extensions. FOREACH new script, CALCULATE a rarity score for its properties. ALERT if the score is below a defined threshold (e.g., 5th percentile)."
  - question: Does the content of a new or modified logon script exhibit features characteristic of malware?
    context: This question uses machine learning to analyze the content of scripts, moving beyond simple hashes or filenames. A classification model is trained to recognize patterns common in malicious scripts, such as high character entropy (obfuscation), the presence of suspicious API calls ('Invoke-Expression', 'DownloadString'), or unusual string length distributions. This allows for the detection of novel or heavily obfuscated malicious scripts that other methods might miss.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - User profile directories on endpoints
      - SYSVOL shares on Domain Controllers
      - File servers hosting scripts
    range: last 90 days
    queries:
      - "Pseudocode: ON new/modified script event, EXTRACT script content. GENERATE features (e.g., entropy, API calls, keywords). APPLY classification model. ALERT if script is classified as malicious with high confidence."
  - question: Has the UserInitMprLogonScript registry key been modified by an unauthorized user or process?
    context: This question focuses on a specific persistence mechanism: the 'HKCU\Environment\UserInitMprLogonScript' registry key. The goal is to detect when this key is changed by a process or user account that is not on a pre-approved watchlist of administrative tools and personnel. This is a high-fidelity indicator of an adversary attempting to establish persistence, as legitimate changes should only come from known, authorized sources.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - User endpoint and server registry hives, specifically HKCU\Environment for all user profiles.
    range: last 90 days
    queries:
      - "Pseudocode: SEARCH registry modification events (Sysmon 13) for 'UserInitMprLogonScript'. FOREACH event, CHECK if the modifying process and user are on an approved watchlist. ALERT if not on the watchlist."
  - question: Is the frequency of modifications to the UserInitMprLogonScript registry key anomalous for a specific user or host?
    context: This question seeks to find unusual patterns of activity related to the 'UserInitMprLogonScript' key, even if performed by an authorized account. By baselining the normal rate of change for each user and host over a rolling window, a sudden spike in modifications can be detected using time-series analysis. This could indicate an automated attack script or a compromised administrative account being used to rapidly alter persistence settings across multiple systems.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - User endpoint and server registry hives, specifically HKCU\Environment for all user profiles.
    range: last 90 days
    queries:
      - "Pseudocode: SEARCH historical registry modification events (Sysmon 13) for 'UserInitMprLogonScript' to build a baseline per user/host. FOR new modifications, CHECK if the 24-hour count exceeds N standard deviations from the mean. ALERT on anomaly."
  - question: Does a modification to the UserInitMprLogonScript registry key exhibit anomalous characteristics based on its context?
    context: This question uses machine learning to find outlier modifications based on a combination of features like the user account, the parent process, the process image name, and the time of day. The goal is to catch sophisticated attacks where legitimate tools might be used in an illegitimate context, such as 'powershell.exe' being spawned by 'winword.exe' to change the key, which is a highly abnormal process chain for this type of modification.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - User endpoint and server registry hives, specifically HKCU\Environment for all user profiles.
    range: last 90 days
    queries:
      - "Pseudocode: ON registry modification event (Sysmon 13), EXTRACT features (user, parent process, process, time). APPLY anomaly detection model (e.g., Isolation Forest). ALERT if the event is flagged as an outlier."
  - question: Is a process spawned by a logon script making a network connection to a known-malicious destination?
    context: This question investigates the follow-on activity of a logon script. The rationale is that a common goal of malicious scripts is to establish command and control (C2). This involves correlating process creation events with network connection events, specifically looking for children of script interpreters (e.g., cscript.exe, powershell.exe) connecting to IPs or domains on a threat intelligence list.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - User endpoints and servers
      - Network egress points
      - DNS servers
    range: last 90 days
    queries:
      - "Pseudocode: SEARCH for process creation (Sysmon 1) from script interpreters. CORRELATE with child process network connections (Sysmon 3, Zeek). ENRICH destination IP/domain with threat intel. ALERT on match."
  - question: Is a process spawned by a logon script connecting to a statistically rare domain for the enterprise?
    context: This question aims to detect connections to unknown or new malicious domains not yet on a threat list. By baselining all domains accessed across the enterprise, it's possible to identify when a script's child process connects to a domain that is exceptionally rare (e.g., in the bottom 5% of popularity based on inverse document frequency). This is a strong indicator of suspicious C2 activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - User endpoints and servers
      - Network egress points
      - DNS servers
    range: last 90 days
    queries:
      - "Pseudocode: BUILD a frequency table of all domains from DNS logs (Zeek dns.log). FOR network connections from logon script children, CALCULATE the rarity of the destination domain. ALERT if domain rarity is below a threshold."
  - question: Is the volume or frequency of outbound network traffic from a logon script's child process anomalous?
    context: This question uses a machine learning time-series model to understand the normal behavior of network traffic from logon scripts. The model learns the expected pattern of outbound data volume and connection frequency for each user. An alert is triggered on significant deviations from this baseline, which could indicate C2 heartbeat traffic (unusual frequency) or data staging and exfiltration (unusual volume).
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - User endpoints and servers
      - Network egress points
      - DNS servers
    range: last 90 days
    queries:
      - "Pseudocode: BUILD a time-series model (e.g., LSTM) of outbound data volume and connection frequency per user for logon script children. FOREACH new connection, COMPARE to the model's prediction. ALERT on significant deviation."
  - question: Has a logon script been modified to point to a known privilege escalation tool?
    context: This is an IOC-based check specifically for privilege escalation. It monitors changes to logon script configurations (in the registry or Group Policy files). When a change occurs, it hashes the newly referenced script file and compares this hash against a curated database of known privilege escalation tools like PowerSploit or Mimikatz. A match is a strong indicator of an impending privilege escalation attempt.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Domain Controller SYSVOL Shares
      - User Endpoint Registry Hives (HKCU\Environment)
      - File systems on endpoints and servers
    range: last 90 days
    queries:
      - "Pseudocode: ON logon script pointer change (Sysmon 11, 13), RETRIEVE the new script file. HASH the file. QUERY hash against a privesc tool threat database. ALERT on match."
  - question: Are the command-line arguments used by a logon script's child process statistically anomalous?
    context: This question focuses on command-line arguments, as adversaries often add malicious arguments to otherwise legitimate scripts. It involves profiling the normal arguments and combinations of arguments (n-grams) seen in an environment. An alert is triggered when a script executes with rare or unseen arguments, which could indicate malicious activity like reflective DLL loading or encoded command execution.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Domain Controller SYSVOL Shares
      - User Endpoint Registry Hives (HKCU\Environment)
      - File systems on endpoints and servers
    range: last 90 days
    queries:
      - "Pseudocode: BUILD a baseline of command-line argument n-grams from logon script child processes (Sysmon 1). FOREACH new process, ANALYZE its arguments for anomalous n-grams. ALERT on anomaly."
  - question: Does the content of a logon script contain features indicative of a privilege escalation attempt?
    context: This question uses a machine learning model to analyze script content for signs of privilege escalation. The model is trained to find features like obfuscation, specific API call invocations related to token manipulation ('CreateProcessAsUser', 'LsaGetLogonSessionData'), and keywords associated with credential theft ('mimikatz', 'SeDebugPrivilege'). This helps detect scripts specifically designed to escalate privileges.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Domain Controller SYSVOL Shares
      - User Endpoint Registry Hives (HKCU\Environment)
      - File systems on endpoints and servers
    range: last 90 days
    queries:
      - "Pseudocode: ON new/modified logon script, EXTRACT script content. GENERATE features (obfuscation, API calls, keywords). APPLY privesc classification model. ALERT if classified as malicious."
  - question: Is a privileged account modifying a logon script for a non-privileged user outside of a documented change process?
    context: This question targets the misuse of privileged accounts for privilege escalation. It checks who is modifying a script and for whom by checking Active Directory group memberships. An alert is generated if a privileged account (e.g., Domain Admin) modifies a standard user's script, especially if the action is not correlated with a change management ticket. This could indicate an adversary using a compromised admin account to set up future access or lateral movement.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Sysmon Event ID 13
      - Active Directory Logs
      - User Endpoint Registry Hives (HKCU\Environment)
      - Active Directory user/group objects
      - Domain Controller SYSVOL Shares
    range: last 90 days
    queries:
      - "Pseudocode: ON logon script modification (Sysmon 13), EXTRACT modifier and target user SIDs. QUERY AD for group memberships. ALERT if modifier is privileged and target is not, and no corresponding change ticket exists."
  - question: Has a logon script modification occurred that violates established administrative boundaries?
    context: This question models administrative relationships as a graph, where it learns which users or groups normally modify scripts for other users or Organizational Units (OUs). An alert is triggered when a modification occurs that crosses these learned boundaries (e.g., an administrator for the Finance OU modifies a script for a user in the Engineering OU), as this represents a statistically rare and suspicious event that could indicate a compromised account.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Sysmon Event ID 13
      - Active Directory Logs
      - User Endpoint Registry Hives (HKCU\Environment)
      - Active Directory user/group objects
      - Domain Controller SYSVOL Shares
    range: last 90 days
    queries:
      - "Pseudocode: BUILD a graph of 'who-modifies-whom' for logon scripts. FOREACH new modification, CHECK if the edge (modifier -> target) is anomalous or crosses known boundaries. ALERT on anomaly."
  - question: Is a cross-user logon script modification anomalous based on its contextual features?
    context: This question uses an ML anomaly detection model to find suspicious cross-user modifications. It considers a rich set of features including the privilege levels of the source and target users, their respective OUs, the time of day, and the source workstation name. The model learns the profile of normal administrative actions and can flag modifications that deviate significantly, potentially indicating a compromised admin account being used for lateral movement setup.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 4663
      - Sysmon Event ID 13
      - Active Directory Logs
      - User Endpoint Registry Hives (HKCU\Environment)
      - Active Directory user/group objects
      - Domain Controller SYSVOL Shares
    range: last 90 days
    queries:
      - "Pseudocode: ON cross-user logon script modification, EXTRACT features (source/target privileges, OUs, time, host). APPLY anomaly detection model. ALERT if flagged as an outlier."
  - question: Does a logon script reside in a location with insecure file permissions that allow tampering by low-privileged users?
    context: This question focuses on identifying a critical misconfiguration that enables privilege escalation. It involves actively querying the Access Control List (ACL) of logon script files and their parent directories. The goal is to find any instance where a script is writable by a broad, low-privilege group like 'Authenticated Users' or 'Everyone'. Such a condition allows any user to modify the script's content to execute arbitrary code with the privileges of the logging-on user.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File/Folder ACLs via PowerShell or API
      - File systems of Endpoints and Servers
    range: last 90 days
    queries:
      - "Pseudocode: ON new logon script path detection, QUERY the ACL of the file and its parent directory. ALERT if the ACL grants write/modify permissions to non-administrative groups (e.g., Everyone, Authenticated Users)."
  - question: Does a logon script have a permissions risk score that is anomalously high for the environment?
    context: This question quantifies the risk from file permissions by assigning weights to problematic Access Control Entries (ACEs), such as giving 'Everyone-Write' a high point value. By periodically scanning all logon script paths and calculating a 'permissions risk score' for each, a baseline can be established. An alert is triggered when a script's score exceeds a high percentile (e.g., 99th), indicating it is among the most dangerously misconfigured files in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File/Folder ACLs via PowerShell or API
      - File systems of Endpoints and Servers
    range: last 90 days
    queries:
      - "Pseudocode: PERIODICALLY scan all logon script paths. FOREACH script, calculate a weighted 'permissions risk score' based on its ACL. ALERT if the score exceeds the 99th percentile."
  - question: Can a logon script's location be predicted as vulnerable to tampering based on its path and ACL characteristics?
    context: This question uses a classification model to proactively identify vulnerable script locations. The model is trained on features such as the count of ACEs, presence of specific well-known SIDs, directory depth, and whether the path is in a standard protected location versus a user-writable area. It can then predict if a given script path is likely misconfigured and vulnerable, allowing security teams to proactively remediate misconfigurations before they are exploited.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File/Folder ACLs via PowerShell or API
      - File systems of Endpoints and Servers
    range: last 90 days
    queries:
      - "Pseudocode: PROACTIVELY scan logon script paths. EXTRACT features (ACLs, path depth, location type). APPLY vulnerability classification model. FLAG paths predicted as vulnerable for review."
  - question: Did a process spawned by a logon script perform a high-risk action such as creating a service, modifying a scheduled task, or accessing LSASS memory?
    context: This question looks for direct evidence of privilege escalation by a script's child process. It uses a correlation rule to link a process created by a script interpreter (identified by its parent process) to subsequent, highly suspicious system events. An alert is triggered if this child process creates a new service (Event ID 7045), creates a privileged scheduled task (Event ID 4698), or attempts to access the memory of lsass.exe (Sysmon Event ID 10). A match is a very strong signal of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Windows Event ID 4698
      - Windows Event ID 4656
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - User endpoints and servers
      - Security log event forwarders
    range: last 90 days
    queries:
      - "Pseudocode: CORRELATE process creation from a script interpreter (Sysmon 1) with subsequent high-risk events (Service creation 7045, Task creation 4698, LSASS access Sysmon 10) from the same ProcessGUID. ALERT on correlation."
  - question: Did a logon script execution result in a statistically rare sequence of follow-on system events?
    context: This question analyzes the behavioral flow after a script runs by profiling the normal sequences of events (e.g., 'ProcCreate -> FileRead') that follow legitimate script executions. An alert is triggered when a new execution produces a rare or never-before-seen chain of events (e.g., 'ProcCreate -> RegSet_HKLM -> SvcCreate'), which indicates a significant deviation from normal behavior and a potential threat.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Windows Event ID 4698
      - Windows Event ID 4656
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - User endpoints and servers
      - Security log event forwarders
    range: last 90 days
    queries:
      - "Pseudocode: PROFILE normal sequences of system events following logon script execution. FOREACH new execution, represent its event chain. ALERT if the chain has a very low probability of occurring based on historical data."
  - question: Is the sequence of operations following a logon script execution anomalous according to a sequence-based machine learning model?
    context: This is an advanced form of behavioral analysis using a sequence model like a Long Short-Term Memory (LSTM) autoencoder. The model learns the deep patterns of 'normal' event sequences following a logon script. It can detect anomalies even if the individual events are not suspicious, but their combination and order are. A high reconstruction error from the model signifies a highly anomalous sequence, strongly indicating a malicious script performing privilege escalation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Windows Event ID 4698
      - Windows Event ID 4656
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - User endpoints and servers
      - Security log event forwarders
    range: last 90 days
    queries:
      - "Pseudocode: TRAIN a sequence model (e.g., LSTM autoencoder) on normal event sequences post-logon-script. ON new execution, feed the event sequence to the model. ALERT if the model's reconstruction error is high."