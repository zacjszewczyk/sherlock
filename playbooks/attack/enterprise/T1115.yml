name: T1115: Clipboard Data
id: 9a8a7b6c-5d4e-4f3c-2b1a-0987654321fe
description: Investigates whether an adversary has collected data from local system clipboards. This playbook helps detect this activity by identifying known malicious tools via hash matching, analyzing command-line logs for misuse of native clipboard utilities like `clip.exe` or `Get-Clipboard`, flagging execution from unusual parent processes, monitoring for high-frequency access patterns, and correlating clipboard access with subsequent data staging or network exfiltration.
type: technique
related:
- TA0009: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any processes been created whose hash matches a known signature for clipboard-scraping malware?
  context: This question aims to identify the execution of known malicious tools designed to steal clipboard data. By comparing the hash of every new process against a threat intelligence feed, we can detect specific, previously identified malware families with high confidence. A match indicates a confirmed malicious presence on the endpoint.
  answer_sources: Windows Event ID 4688 logs from all user workstations and remote access servers (RDP/Citrix).
  range: Last 90 days
  queries:
  - query_name: Symbolic Hash Match for Clipboard Scrapers
    query: SEARCH process_creation_logs(EID: 4688) | JOIN process_hash with threat_intel_feed on hash | WHERE threat_intel_feed.category = 'clipboard_scraper' | ALERT
- question: If a known malicious clipboard scraper is found, is it being launched by a rare or unusual parent process?
  context: This question adds context to a known malware detection. Adversaries often use uncommon parent processes to evade simple detections. By calculating the enterprise-wide prevalence of the parent process that launched the malware, we can increase the risk score for detections originating from rare parents (e.g., <5% of endpoints), suggesting a more targeted or evasive attack.
  answer_sources: Windows Event ID 4688 logs from all user workstations and remote access servers (RDP/Citrix).
  range: Last 30 days
  queries:
  - query_name: Statistical Parent Process Rarity
    query: FOR each detection of known_clipboard_scraper | GET parent_process_name | CALCULATE prevalence of parent_process_name across all endpoints | IF prevalence < 5% THEN INCREASE_RISK
- question: Can we identify unknown or zero-day clipboard scrapers by analyzing process metadata with a machine learning model?
  context: This question seeks to detect novel clipboard-scraping malware that doesn't have a known hash. By feeding process metadata (like file path, parent process, user, signature status) into a trained classification model, we can identify processes that exhibit characteristics similar to known malware, even if the hash is new. This allows for the detection of emerging threats and variants.
  answer_sources: Windows Event ID 4688 logs from all user workstations and remote access servers (RDP/Citrix).
  range: Last 90 days
  queries:
  - query_name: ML Risk Scoring of Process Metadata
    query: FOR each process_creation_event | EXTRACT features (path, parent, user, signature) | SCORE with pre-trained_ML_model | IF score > threshold THEN ALERT
- question: Are there command-line executions that use native clipboard utilities to redirect output to a file or network connection?
  context: This question looks for direct evidence of an adversary capturing clipboard content. Searching for command-line patterns where utilities like 'Get-Clipboard' or 'clip.exe' are piped or redirected to a file or a networking tool (like netcat) can uncover blatant data collection attempts.
  answer_sources: Windows Event ID 4688 logs from all endpoints, particularly administrator workstations and developer jump boxes.
  range: Last 90 days
  queries:
  - query_name: Symbolic Clipboard Redirection
    query: SEARCH process_creation_logs(EID: 4688) | REGEX command_line for patterns like 'Get-Clipboard | Out-File', 'clip.exe >', 'pbpaste | nc' | ALERT
- question: Are there any command-line executions involving clipboard utilities that appear obfuscated or unusually complex?
  context: This question helps find attempts to hide clipboard collection. Adversaries may use complex or obfuscated commands to evade simple keyword-based searches. By calculating the Shannon entropy of command lines containing 'Get-Clipboard' or 'clip.exe' and flagging high-entropy outliers, we can identify commands that are abnormally complex and may be malicious.
  answer_sources: Windows Event ID 4688 logs from all endpoints, particularly administrator workstations and developer jump boxes.
  range: Last 90 days
  queries:
  - query_name: Statistical Entropy Analysis of Clipboard Commands
    query: SEARCH process_creation_logs(EID: 4688) where command_line contains 'Get-Clipboard' or 'clip.exe' | CALCULATE Shannon_entropy of command_line | IF entropy > 95th_percentile_baseline THEN ALERT
- question: Can we find novel or unique command-line patterns related to clipboard utility usage?
  context: This question aims to find unknown malicious command-line techniques. By vectorizing and clustering all command lines that use clipboard utilities, we can identify established patterns of benign use. Commands that do not fit into any cluster (outliers) are structurally unique and warrant investigation as they may represent a new or undiscovered attack method.
  answer_sources: Windows Event ID 4688 logs from all endpoints, particularly administrator workstations and developer jump boxes.
  range: Last 90 days
  queries:
  - query_name: ML Clustering for Anomalous Clipboard Commands
    query: SEARCH process_creation_logs(EID: 4688) where command_line contains clipboard_utility | VECTORIZE command_line arguments | APPLY DBSCAN clustering | INVESTIGATE outlier commands
- question: Has a native clipboard utility been executed by an unusual parent process not associated with interactive user sessions?
  context: This question helps detect when clipboard access is initiated programmatically or by a background process, which is highly suspicious. By maintaining an allow-list of typical parent processes for clipboard utilities (e.g., explorer.exe, cmd.exe), we can alert on any execution spawned by an unexpected parent like a web server (w3wp.exe) or system service (services.exe).
  answer_sources: Windows Event ID 4688 logs from application servers (e.g., IIS, Apache), Domain Controllers, and other critical infrastructure servers.
  range: Last 90 days
  queries:
  - query_name: Symbolic Unusual Parent Process for Clipboard Utility
    query: SEARCH process_creation_logs(EID: 4688) where process_name is 'clip.exe' or 'powershell.exe' | IF parent_process_name NOT IN (allow_list) THEN ALERT
- question: Has a common parent-child process pair shown an anomalous use of clipboard-related command-line arguments?
  context: This question identifies when a normally benign process relationship is exploited for malicious purposes. For a standard process pair (e.g., w3wp.exe -> powershell.exe), we can baseline the frequency of command-line arguments. A sudden or statistically rare appearance of 'Get-Clipboard' in the arguments would be an outlier, indicating a potential deviation from normal behavior.
  answer_sources: Windows Event ID 4688 logs from application servers (e.g., IIS, Apache), Domain Controllers, and other critical infrastructure servers.
  range: Last 30 days
  queries:
  - query_name: Statistical Anomaly in Command Arguments for Process Pair
    query: FOR each parent_child_pair | BASELINE frequency of command_line_arguments | IF 'Get-Clipboard' argument frequency is > 3 standard deviations from mean THEN FLAG as anomalous
- question: Can we detect when a non-standard or malicious parent process spawns a clipboard utility?
  context: This question uses machine learning to create a profile of legitimacy for parent processes that access the clipboard. By training a model (e.g., one-class SVM) on the features of normal parent processes, we can identify any new process-spawning events that deviate from this learned profile. This approach can detect novel or masquerading processes acting as malicious parents.
  answer_sources: Windows Event ID 4688 logs from application servers (e.g., IIS, Apache), Domain Controllers, and other critical infrastructure servers.
  range: Last 90 days
  queries:
  - query_name: ML Anomaly Detection for Parent Process
    query: TRAIN one-class_SVM_model on features of legitimate parent_processes | APPLY model to new parent-child events involving clipboard utilities | ALERT on anomalies
- question: Is there an unusually high frequency of clipboard utility executions from a single user, host, or process?
  context: This question helps detect automated clipboard scraping. A human user will access the clipboard intermittently, whereas a malicious script might poll it repeatedly in a short time. By setting a hard threshold (e.g., >10 executions in 1 minute), we can quickly identify this suspicious, high-frequency activity.
  answer_sources: Windows Event ID 4688 logs from all user workstations and shared terminal servers.
  range: Last 90 days
  queries:
  - query_name: Symbolic High-Frequency Clipboard Access
    query: COUNT executions of 'clip.exe' or 'Get-Clipboard' per user per host in 1_minute_window | IF count > 10 THEN ALERT
- question: Has any user exhibited a frequency of clipboard access that is anomalous compared to their own baseline behavior?
  context: This question provides a more tailored approach to detecting high-frequency access by comparing a user's activity against their own history. A user's baseline for clipboard utility usage is established over time. An alert is triggered when their current activity significantly deviates (e.g., >3 standard deviations) from this personal baseline, reducing false positives from users who legitimately use clipboard utilities frequently.
  answer_sources: Windows Event ID 4688 logs from all user workstations and shared terminal servers.
  range: Last 14 days
  queries:
  - query_name: Statistical User-Specific Baseline Anomaly
    query: FOR each user, calculate baseline frequency of clipboard_utility_executions per hour | IF current_hour_count > (baseline + 3 * std_dev) THEN ALERT
- question: Can we detect anomalous bursts of clipboard activity by modeling a user's normal daily and weekly rhythms?
  context: This question uses time-series analysis to find sophisticated, automated scraping that might be missed by simple thresholding. A machine learning model (like ARIMA or Prophet) learns the typical temporal patterns of a user's clipboard access. The model can then identify sudden bursts of activity that are inconsistent with the user's learned daily or weekly habits.
  answer_sources: Windows Event ID 4688 logs from all user workstations and shared terminal servers.
  range: Last 90 days
  queries:
  - query_name: ML Time-Series Anomaly Detection
    query: MODEL time_series of clipboard_utility_counts per user with Prophet/ARIMA | FLAG any activity burst identified by the model as an anomaly
- question: Is clipboard access by a process followed closely by an outbound network connection to a known-malicious or suspicious destination?
  context: This question directly links clipboard data collection with potential data exfiltration. A correlation rule can be created to detect when a clipboard access event is followed within a short window (e.g., 30 seconds) by a network connection from the same host to an IP on a threat intelligence blocklist. This sequence is a strong indicator of theft.
  answer_sources: Windows Event ID 4688, Zeek conn.log, and Zeek dns.log from network egress points and all endpoints.
  range: Last 90 days
  queries:
  - query_name: Symbolic Correlation of Clipboard Access and Network Exfil
    query: CORRELATE (Event A: clipboard_access) with (Event B: outbound_network_connection) on same host within 30s | IF destination_ip is on blocklist THEN ALERT
- question: If clipboard access is followed by a network connection, is the destination domain rare for the enterprise?
  context: This question helps risk-score the correlation between clipboard access and network activity. After linking clipboard access to an outbound connection, we can assess the destination. If the resolved domain is very rarely visited by anyone in the organization (e.g., in the bottom 1%), it is more likely to be a malicious command-and-control server or exfiltration point.
  answer_sources: Windows Event ID 4688, Zeek conn.log, and Zeek dns.log from network egress points and all endpoints.
  range: Last 90 days
  queries:
  - query_name: Statistical Rarity of Destination Domain
    query: ON correlated_event (clipboard_access -> network_conn) | GET destination_domain | CALCULATE prevalence of domain across enterprise | IF prevalence < 1% THEN INCREASE_RISK
- question: Can we identify anomalous sequences of user activity involving clipboard access followed by network connections?
  context: This question aims to detect exfiltration by identifying deviations from normal user workflow patterns. A sequence analysis model (like an HMM or LSTM) can be trained on typical sequences of process and network events. A rare sequence, such as 'clipboard access -> network connection to a new IP,' would be flagged by the model as a low-probability, anomalous event warranting investigation.
  answer_sources: Windows Event ID 4688, Zeek conn.log, and Zeek dns.log from network egress points and all endpoints.
  range: Last 90 days
  queries:
  - query_name: ML Sequence Analysis for Anomalous Workflow
    query: TRAIN LSTM model on normal sequences of process/network events | APPLY model to new event sequences | IF sequence 'clipboard_access -> new_network_connection' has low probability THEN ALERT
- question: Is there a sequence of events where a suspicious process accesses the clipboard and then stages a file or initiates a network connection?
  context: This question pieces together a full attack chain from execution to exfiltration. It uses a multi-event correlation rule to look for a specific, high-confidence pattern: 1) An unsigned process is created from an unusual location. 2) The same process accesses the clipboard. 3) The same process then either writes a file or makes a network connection. A complete A->B->C chain is a strong indicator of malicious activity.
  answer_sources: Windows Event ID 4688, Sysmon Event ID 11, and Zeek conn.log from user profile directories, endpoint file systems, and network egress points.
  range: Last 90 days
  queries:
  - query_name: Symbolic Correlation of Suspicious Process -> Clipboard -> Staging/Exfil
    query: CORRELATE (A: suspicious_process_creation) -> (B: clipboard_access by same PID within 60s) -> (C: file_creation or network_connection by same PID within 60s) | ALERT on completed chain
- question: Can we proactively identify high-risk processes and monitor them for subsequent clipboard access and data staging/exfiltration?
  context: This question describes a proactive threat hunting approach. Instead of waiting for a full chain, we can assign a composite risk score to every new process based on statistical features (e.g., path rarity, parent rarity, signature status). If a process's initial score is very high (e.g., 98th percentile), we can begin actively monitoring it for the later stages of the attack chain, allowing for earlier detection.
  answer_sources: Windows Event ID 4688, Sysmon Event ID 11, and Zeek conn.log from user profile directories, endpoint file systems, and network egress points.
  range: Last 90 days
  queries:
  - query_name: Statistical Proactive Monitoring of High-Risk Processes
    query: FOR each new_process | CALCULATE risk_score based on (path_rarity, parent_rarity, signature_status) | IF risk_score > 98th_percentile | MONITOR process for clipboard_access and file/network_writes
- question: Can we use a graph-based model to detect the entire clipboard data collection attack chain as a single anomalous structure?
  context: This question proposes an advanced detection method using graph analytics. System activity is modeled as a real-time graph where processes, files, and network connections are nodes. A graph-based anomaly detection algorithm can then identify suspicious subgraphs. A subgraph showing a low-prevalence process node connecting to the clipboard, then creating a file node, and finally connecting to an external IP node would represent the entire T1115 tactic and be flagged with high confidence.
  answer_sources: Windows Event ID 4688, Sysmon Event ID 11, and Zeek conn.log from user profile directories, endpoint file systems, and network egress points.
  range: Last 90 days
  queries:
  - query_name: ML Graph-Based Attack Chain Detection
    query: CONSTRUCT activity_graph (nodes=processes,files,IPs) | USE graph_anomaly_detection algorithm | IDENTIFY and ALERT on subgraphs matching the pattern [low_prevalence_process -> clipboard -> file/network_connection]