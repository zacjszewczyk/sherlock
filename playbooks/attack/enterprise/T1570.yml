name: T1570: Lateral Tool Transfer
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary is moving tools or other files laterally within the network. It provides investigative questions to detect this activity by analyzing file transfers for known malicious indicators, identifying transfers to unusual locations, spotting non-standard processes initiating transfers, detecting mass file deployments (fan-out), and flagging connections that violate network policies or exhibit anomalous data volumes.
type: technique
related:
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
- question: Is a file being transferred between internal systems that matches a known malicious hash or a filename associated with common adversary tools?
  context: This question aims to detect the transfer of known malicious tools or files. By calculating the hash of transferred files and comparing them against a threat intelligence feed of known-bad hashes, or by matching filenames against a watchlist of common adversary tooling (e.g., mimikatz.exe, psexec.exe), analysts can quickly identify confirmed malicious activity. This requires correlating network file transfer data with host-level process execution data.
  answer_sources:
  - Zeek files.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - All internal network segments, Domain Controllers, File Servers, Privileged Access Workstations (PAWs)
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each file in files.log
        CALCULATE file_hash (MD5/SHA256)
        JOIN with process creation events on filename
        IF file_hash IN threat_intel_hashes OR process_name IN adversary_tool_watchlist
          ALERT
- question: Is a file being transferred with a highly random filename, potentially to evade signature-based detection?
  context: Adversaries often use randomized filenames for their tools to bypass simple, signature-based detections that look for specific names. This question seeks to identify such evasion techniques by measuring the randomness (Shannon entropy) of filenames in transit. A filename with an entropy score significantly higher than the established network baseline suggests it may have been programmatically generated to avoid detection.
  answer_sources:
  - Zeek files.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - All internal network segments, Domain Controllers, File Servers, Privileged Access Workstations (PAWs)
  range: last 90 days
  queries:
  - pseudocode: |
      ESTABLISH baseline_entropy = 95th_percentile(shannon_entropy(filename)) over last 30 days
      FOR each file in files.log
        CALCULATE filename_entropy
        IF filename_entropy > baseline_entropy
          ALERT
- question: Can a machine learning model classify a file transfer as malicious based on its characteristics?
  context: This question proposes a more advanced detection method using supervised machine learning. By training a model (like Random Forest) on features from both network and host logs (e.g., file type, size, entropy, protocol, connection details, parent process), the system can learn the subtle characteristics of malicious transfers. This allows for the detection of novel threats that may not match known signatures or simple heuristics.
  answer_sources:
  - Zeek files.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - All internal network segments, Domain Controllers, File Servers, Privileged Access Workstations (PAWs)
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each file transfer event
        EXTRACT features (MIME type, size, entropy, protocol, etc.)
        APPLY trained_classification_model(features)
        GET malicious_probability_score
        IF malicious_probability_score > threshold
          ALERT
- question: Is a file being written to a suspicious directory (e.g., C:\Windows\Temp) on a host, where the source of the file is another internal system?
  context: Adversaries frequently place their tools in world-writable directories or temporary locations that are less likely to be scrutinized. This question focuses on detecting file creation events in a predefined list of such commonly abused directories. The alert is prioritized if the file write originated from another internal system, strongly suggesting a lateral tool transfer.
  answer_sources:
  - Zeek smb_files.log
  - Zeek ftp.log
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Workstation-to-workstation traffic, Server-to-server traffic, Critical application servers, File servers
  range: last 90 days
  queries:
  - pseudocode: |
      DEFINE watchlist_paths = ['C:\Windows\Temp', 'C:\Users\Public', ...]
      FOR each file_write_event (Sysmon 11, Win 4663) or smb_transfer (Zeek)
        IF event.destination_path IN watchlist_paths AND event.source_ip IS_INTERNAL
          ALERT
- question: Is a file being written to a directory that is statistically rare for that specific host?
  context: This question moves beyond static watchlists to a host-specific behavioral baseline. Normal system and application activity results in file writes to predictable locations. By profiling these locations for each host, this method can detect when a file is written to a path that is highly unusual for that particular system, even if the path itself is not on a universal watchlist. This helps find adversary activity tailored to a specific machine.
  answer_sources:
  - Zeek smb_files.log
  - Zeek ftp.log
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Workstation-to-workstation traffic, Server-to-server traffic, Critical application servers, File servers
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each host
        PROFILE write_path_frequency over 30 days
        CALCULATE frequency_threshold = 5th_percentile_frequency
      FOR each new file_write_event
        IF event.path_frequency < frequency_threshold for that host
          ALERT
- question: Can anomalous file creation events be identified by grouping them into clusters based on their attributes?
  context: This question applies unsupervised machine learning to find outliers in file creation activity. By clustering events using features like the creating process, file extension, and path depth, normal activities will form large, dense clusters. Anomalous events, such as a tool being dropped by an unusual process, will not fit these patterns and will be isolated as noise or small, distinct clusters, flagging them for investigation.
  answer_sources:
  - Zeek smb_files.log
  - Zeek ftp.log
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Workstation-to-workstation traffic, Server-to-server traffic, Critical application servers, File servers
  range: last 90 days
  queries:
  - pseudocode: |
      GATHER file creation events
      EXTRACT features (process, path_depth, extension, is_signed)
      APPLY DBSCAN_clustering(events)
      INVESTIGATE events classified as 'noise' or belonging to small clusters
- question: Is a process not typically used for file sharing (e.g., winword.exe, w3wp.exe) initiating a file transfer to another internal system?
  context: To evade detection, adversaries may use legitimate, non-administrative processes to perform network actions, a technique known as "living off the land." This question aims to detect this by monitoring for processes like Microsoft Office applications or web server worker processes that initiate outbound connections on common file sharing ports (e.g., 445/SMB, 21/FTP). Such behavior is highly anomalous and indicative of process hijacking for lateral movement.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek smb_files.log
  - Application servers (e.g., web servers, database servers), User workstations, Privileged access workstations (PAWs)
  range: last 90 days
  queries:
  - pseudocode: |
      DEFINE non_standard_processes = ['winword.exe', 'w3wp.exe', ...]
      DEFINE fileshare_ports = [445, 21, 22]
      FOR each network_connection (Sysmon 3, Zeek)
        IF connection.process_name IN non_standard_processes AND connection.dest_port IN fileshare_ports AND connection.dest_ip IS_INTERNAL
          ALERT
- question: Is a process spawning a child process or making a network connection that is statistically rare for that parent process?
  context: This question establishes a behavioral baseline for every process in the environment. It tracks the normal relationships between parent and child processes, as well as the typical network destinations for each process. An alert is triggered when a process exhibits a rare behavior, such as spawning a command shell when it normally doesn't, or connecting to a new port. This can detect process injection or misuse.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek smb_files.log
  - Application servers (e.g., web servers, database servers), User workstations, Privileged access workstations (PAWs)
  range: last 90 days
  queries:
  - pseudocode: |
      BASELINE frequency of (parent_process, child_process) and (process, dest_port) pairs
      FOR each new process or network event
        CALCULATE event_pair_frequency
        IF event_pair_frequency < 1st_percentile_threshold
          ALERT
- question: Does a sequence of process and network activities on a host deviate significantly from its learned normal behavior over time?
  context: This question uses a sophisticated time-series model (like an LSTM autoencoder) to understand the temporal context of events on a host. The model learns the normal sequences of process creation and network connections. When a new sequence of activity occurs that the model cannot accurately reconstruct (i.e., it has a high reconstruction error), it signals a significant deviation from the learned normal behavior, indicating a potential intrusion.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek smb_files.log
  - Application servers (e.g., web servers, database servers), User workstations, Privileged access workstations (PAWs)
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each host
        TRAIN LSTM_autoencoder on sequences of (parent_process, process, dest_port)
      FOR each new event sequence
        CALCULATE reconstruction_error using trained model
        IF reconstruction_error > threshold
          ALERT
- question: Is a single host transferring the same file to a large number of other hosts within a short period of time?
  context: This question seeks to identify the mass deployment of a tool or malware, a common step in widespread lateral movement. By creating a stateful rule that tracks file transfers, it can detect when a single source IP sends a file with the same hash or name to an abnormally high number of destinations (e.g., >10) in a brief time window (e.g., <30 minutes).
  answer_sources:
  - Zeek files.log
  - Zeek smb_files.log
  - Windows Event ID 4663
  - Entire internal network address space, Subnets containing high-value assets, Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each 30-minute window
        GROUP transfers by source_ip and file_hash/name
        COUNT distinct destination_ips
        IF count > 10
          ALERT
- question: Is a file being transferred to a number of destination hosts that exceeds the historically normal fan-out count for files on the network?
  context: This question improves on a static threshold by creating a dynamic baseline for "fan-out" activity. It analyzes file transfers over time to determine the normal distribution of how many hosts receive a single file. An alert is triggered only when a file's fan-out count exceeds a high percentile (e.g., the 99th) of this historical baseline, making the detection more robust and less prone to false positives from legitimate software updates.
  answer_sources:
  - Zeek files.log
  - Zeek smb_files.log
  - Windows Event ID 4663
  - Entire internal network address space, Subnets containing high-value assets, Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: |
      CALCULATE fanout_threshold = 99th_percentile of destination_count_per_file_hash over last 30 days
      FOR each 1-hour window
        GROUP transfers by file_hash
        COUNT distinct destination_hosts (fan-out_count)
        IF fan-out_count > fanout_threshold
          ALERT
- question: Can a sudden 'star' or 'broadcast' pattern in the network graph, representing a file transfer from one-to-many, be detected?
  context: This question models the network as a graph, where hosts are nodes and file transfers are edges. A one-to-many tool deployment visually creates a "star" pattern in the graph. This can be detected analytically by monitoring the "out-degree" (number of outgoing edges) of each node. A sudden, dramatic increase in a single node's out-degree, especially where all new edges share properties like the same file hash, is a strong indicator of lateral tool transfer.
  answer_sources:
  - Zeek files.log
  - Zeek smb_files.log
  - Windows Event ID 4663
  - Entire internal network address space, Subnets containing high-value assets, Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: |
      MODEL network as a graph (nodes=hosts, edges=transfers)
      MONITOR out-degree for each node
      IF a node's out-degree increases significantly in a short time with similar edge properties (e.g., same file_hash)
        ALERT
- question: Are two internal systems communicating over a port or protocol that is not on the approved allow-list for east-west traffic?
  context: Internal network traffic (east-west) is often less restricted than traffic entering or leaving the network (north-south). This question aims to enforce a stricter internal security posture by defining an explicit allow-list of ports and protocols for host-to-host communication. Any connection that violates this policy is flagged, which can uncover non-standard tool transfers, covert channels, or misconfigured services.
  answer_sources:
  - Zeek conn.log
  - East-west traffic between all internal subnets, Network traffic to/from bastion hosts, VPN user subnets
  range: last 90 days
  queries:
  - pseudocode: |
      DEFINE allowed_internal_traffic = [(protocol, port), ...]
      FOR each connection between two internal IPs
        IF (connection.protocol, connection.port) NOT IN allowed_internal_traffic
          ALERT
- question: Is the volume of data transferred between two internal systems a statistical outlier compared to their historical communication patterns?
  context: Even on an allowed port, an anomalous amount of data can indicate malicious activity. This question focuses on baselining the typical volume of data exchanged between any two internal systems. If a new connection's data volume exceeds the historical mean by a significant margin (e.g., 3 standard deviations), it could represent the transfer of a large payload, such as a toolkit or staged exfiltration data.
  answer_sources:
  - Zeek conn.log
  - East-west traffic between all internal subnets, Network traffic to/from bastion hosts, VPN user subnets
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each internal IP_pair
        CALCULATE baseline_mean and baseline_std_dev of bytes_transferred over 30 days
      FOR each new connection
        IF connection.total_bytes > (baseline_mean + 3 * baseline_std_dev)
          ALERT
- question: Can unsupervised machine learning identify internal network connections that are anomalous based on a combination of their features?
  context: This question uses a multi-variate approach to find anomalous connections without relying on predefined rules. An unsupervised model like an Isolation Forest analyzes connections based on a wide range of features (protocol, port, duration, bytes, flags, etc.). It assigns an anomaly score based on how much a connection deviates from the norm across all these dimensions at once. High-scoring connections are prioritized for investigation as they are the most unusual.
  answer_sources:
  - Zeek conn.log
  - East-west traffic between all internal subnets, Network traffic to/from bastion hosts, VPN user subnets
  range: last 90 days
  queries:
  - pseudocode: |
      GATHER all internal connection events
      EXTRACT features (protocol, port, duration, bytes, state, flags, etc.)
      APPLY Isolation_Forest_model(features)
      GET anomaly_score
      INVESTIGATE connections with the highest anomaly scores