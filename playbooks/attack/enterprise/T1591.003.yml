name: "T1591.003: Identify Business Tempo"
id: a8d5e2f1-c9b3-4f7a-9a1d-6c8b7e4d5f2a
description: >-
  This playbook helps determine if an adversary is conducting reconnaissance to identify an organization's business tempo or is leveraging this knowledge for malicious activity. It focuses on detecting evidence of adversaries identifying business tempo by monitoring for network communication with known reconnaissance tools, analyzing connection patterns to authentication services for periodic probing, detecting low-frequency port scanning, identifying privileged account activity during non-business hours, and spotting new scheduled tasks set to run during off-hours.
type: technique
related:
  - "TA0043: Reconnaissance"
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there network connections matching known reconnaissance infrastructure based on threat intelligence?
    context: This question seeks to identify direct evidence of reconnaissance by matching network logs (IPs, domains, JA3/JA3S hashes) against a curated list of indicators associated with known malicious tools or services. A match provides a high-confidence signal that an adversary is actively gathering information about the network.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Perimeter firewalls
      - forward/reverse proxies
      - public-facing DNS servers
      - external-facing web application firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: QUERY network logs WHERE (source_ip IN threat_intel_ips OR destination_ip IN threat_intel_ips OR requested_domain IN threat_intel_domains OR ja3_hash IN threat_intel_ja3 OR ja3s_hash IN threat_intel_ja3s)
  - question: Are any external IPs, previously flagged by threat intelligence, exhibiting low-and-slow connection patterns?
    context: This question aims to uncover stealthy reconnaissance activities that might be missed by simple volume-based alerting. By profiling the connection behavior of IPs already deemed suspicious, we can identify those that maintain a persistent, low-volume presence over several days, which is a common tactic for adversaries trying to avoid detection.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Perimeter firewalls
      - forward/reverse proxies
      - public-facing DNS servers
      - external-facing web application firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each flagged_ip in threat_intel_ips, COUNT connections over 7 days. IF connection_count < 10th_percentile_of_all_external_ips AND connection_days >= 3, FLAG as low-and-slow.
  - question: Can we use a machine learning model to predict if an inbound connection is likely part of a malicious reconnaissance campaign?
    context: This question leverages a supervised machine learning model to proactively score and classify inbound network connections. By training on features like connection duration, data volume, protocol, and threat intelligence matches, the model can learn the subtle characteristics of reconnaissance traffic and identify new, previously unseen malicious activity with a calculated probability score.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Perimeter firewalls
      - forward/reverse proxies
      - public-facing DNS servers
      - external-facing web application firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_connection, EXTRACT features (duration, bytes, protocol, threat_intel_match). PREDICT probability_is_reconnaissance using Random Forest model. ALERT if probability > threshold.
  - question: Are any external IPs repeatedly connecting to authentication services without attempting to log in?
    context: This question looks for a specific reconnaissance behavior where an adversary probes authentication portals to check for their existence or availability without triggering login failure alerts. By correlating network connection logs with a complete absence of authentication events from the same source IP, we can identify potential pre-attack enumeration.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4625
      - Windows Event ID 4624
      - VPN concentrators
      - Outlook Web Access (OWA) portals
      - single sign-on (SSO) platforms
      - other external-facing authentication gateways
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN network_logs with auth_logs on source_ip. FOR each source_ip, COUNT connections to auth_services in 14 days and COUNT auth_attempts in 14 days. IF connection_count > 20 AND auth_attempts == 0, ALERT.
  - question: Are any source IPs connecting to authentication services with an unusually regular, automated rhythm?
    context: This question aims to detect automated reconnaissance tools by analyzing the timing between connections. Human-driven activity typically has variable timing, whereas automated scripts often exhibit a highly consistent interval. A very low standard deviation in inter-arrival times for connections from a single IP is a strong indicator of a machine-generated pattern.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4625
      - Windows Event ID 4624
      - VPN concentrators
      - Outlook Web Access (OWA) portals
      - single sign-on (SSO) platforms
      - other external-facing authentication gateways
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each source_ip connecting to auth_services over 30 days, CALCULATE inter_arrival_times. CALCULATE standard_deviation of times. IF standard_deviation < 5th_percentile, FLAG as automated probing.
  - question: Can we detect anomalous connection patterns to high-value authentication services that deviate from normal user behavior?
    context: This question uses time series anomaly detection to learn the normal rhythm of connection activity for critical authentication services, including daily and weekly cycles. The model can then flag periods where connection volume deviates from this learned baseline, effectively identifying unusual activity like low-volume, persistent probing from unknown sources that might otherwise go unnoticed.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4625
      - Windows Event ID 4624
      - VPN concentrators
      - Outlook Web Access (OWA) portals
      - single sign-on (SSO) platforms
      - other external-facing authentication gateways
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL connection volume for each auth_service using LSTM autoencoder. FOR new connection events, CALCULATE anomaly_score. IF score > threshold, ALERT on deviation.
  - question: Are any external IPs scanning a wide variety of ports with very little data transfer?
    context: This question targets a classic 'low and slow' port scanning technique. This method involves an adversary checking many different ports over a long period while transferring minimal data, just enough to see if the port is open. This rule identifies IPs that exhibit this high-variety, low-traffic behavior, filtering out legitimate services and scanners.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network DMZ
      - public cloud subnets (VPCs/VNETs)
      - public-facing application servers
      - external DNS servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each external_source_ip over 30 days, COUNT unique_destination_ports and CALCULATE total_traffic_per_port. IF unique_destination_ports > 10 AND total_traffic_per_port < 1KB AND source_ip NOT IN allowlist, ALERT.
  - question: Are there any external IPs exhibiting high port entropy combined with a low total connection count?
    context: This question uses a statistical approach to find stealthy scanners. Shannon entropy is used to measure the randomness of ports being contacted. A scanner hitting many different ports has high entropy. By combining high port entropy with a low overall connection count, we can pinpoint IPs that are broadly exploring the network without generating significant traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network DMZ
      - public cloud subnets (VPCs/VNETs)
      - public-facing application servers
      - external DNS servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each external_source_ip over 30 days, CALCULATE shannon_entropy of destination_ports and COUNT total_connections. IF port_entropy > 98th_percentile AND total_connections < 25th_percentile, INVESTIGATE.
  - question: Can we use clustering to identify external IP addresses with anomalous connection behaviors?
    context: This question applies an unsupervised machine learning algorithm (DBSCAN) to group external IPs based on their connection characteristics. IPs that don't fit into any cluster (noise) or form very small, distinct clusters are anomalous and warrant investigation, as their behavior is unique and could represent targeted reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network DMZ
      - public cloud subnets (VPCs/VNETs)
      - public-facing application servers
      - external DNS servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features for all external_ips (connection_count, unique_ports, unique_dest_ips, avg_bytes). APPLY DBSCAN clustering. INVESTIGATE IPs classified as noise or belonging to small clusters.
  - question: Is a privileged account logging in interactively and running discovery tools during non-business hours?
    context: This question focuses on a high-fidelity indicator of compromise. It specifically looks for the combination of a privileged user logging on interactively outside of normal business hours and immediately running common reconnaissance commands. This sequence of events is highly suspicious and strongly suggests account misuse or a compromised credential.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - Domain Controllers
      - certificate authorities
      - critical file servers
      - privileged user workstations
      - database servers
      - hypervisor management consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON privileged_logon (Type 2 or 10) during non-business_hours, IF followed by process_creation for (net.exe, whoami.exe, nltest.exe, gpresult.exe), CREATE high_severity_alert.
  - question: Is a privileged user's activity significantly deviating from their established 90-day baseline?
    context: This question aims to detect anomalous behavior by comparing a user's current actions against their own historical patterns. By establishing a 'normal' baseline for each privileged user (e.g., typical login times, common processes, servers accessed), we can score new activities based on how much they deviate. An activity with a high cumulative risk score indicates a significant break from routine.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - Domain Controllers
      - certificate authorities
      - critical file servers
      - privileged user workstations
      - database servers
      - hypervisor management consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each privileged_user, CALCULATE baseline (mean, std_dev) for login_time, processes, servers_accessed. FOR new_activity, CALCULATE risk_score based on deviation from baseline. IF risk_score > threshold, ALERT.
  - question: Can we use a machine learning model to classify a privileged user's activities as normal or anomalous?
    context: This question employs a one-class SVM, a machine learning model designed for anomaly detection. A separate model is trained for each privileged user on their historical activity data to learn a complex definition of 'normal'. Any new activity that falls outside this learned boundary is flagged as an outlier for immediate investigation.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - Domain Controllers
      - certificate authorities
      - critical file servers
      - privileged user workstations
      - database servers
      - hypervisor management consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each privileged_user, TRAIN one-class SVM on historical activity features. FOR new_activity_event, CLASSIFY as 'inlier' or 'outlier'. INVESTIGATE all 'outlier' events.
  - question: Has a new scheduled task or service been created that is set to run during non-business hours and executes a suspicious or obfuscated command?
    context: This question targets a common persistence technique where adversaries schedule malicious code to run during off-hours to avoid detection. This rule looks for the combination of a task/service creation event, a trigger set for non-business hours, and a command line that uses script interpreters, suspicious binaries, or obfuscation methods.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Microsoft-Windows-TaskScheduler/Operational Event ID 106
      - Windows Event ID 4688
      - Windows Event ID 4697
      - All Windows endpoints and servers
      - Domain Controllers
      - application servers
      - administrator workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ALERT on new_task (4698) or new_service (4697) IF (trigger_is_off_hours) AND (command CONTAINS 'powershell.exe', 'cscript.exe', '-enc', '-w hidden' OR path is non-standard).
  - question: Is there an unusual frequency of scheduled task creation on a host, or are new tasks using highly entropic (obfuscated) commands?
    context: This question uses statistical methods to find anomalous persistence mechanisms. First, it identifies hosts where tasks or services are being created at an abnormally high rate. Second, it analyzes the command line of each new task, using Shannon entropy to measure its complexity. A high entropy score suggests the command may be randomized or obfuscated.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Microsoft-Windows-TaskScheduler/Operational Event ID 106
      - Windows Event ID 4688
      - Windows Event ID 4697
      - All Windows endpoints and servers
      - Domain Controllers
      - application servers
      - administrator workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, ALERT if task_creation_frequency > 99th_percentile. FOR each new_task, CALCULATE entropy of command_line. ALERT if entropy is significantly higher than host's historical average.
  - question: Can a machine learning model predict whether a newly created scheduled task or service is malicious?
    context: This question leverages a classification model (XGBoost) to make a predictive judgment on new persistence mechanisms. By engineering features that describe the context of the task creation—such as the user, trigger conditions, command line entropy, and executable rarity—the model can learn to distinguish between benign and malicious tasks.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Microsoft-Windows-TaskScheduler/Operational Event ID 106
      - Windows Event ID 4688
      - Windows Event ID 4697
      - All Windows endpoints and servers
      - Domain Controllers
      - application servers
      - administrator workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new task/service, EXTRACT features (user, trigger_details, command_entropy, executable_rarity, parent_process). PREDICT is_malicious using XGBoost model. INVESTIGATE if prediction is malicious.