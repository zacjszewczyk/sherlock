name: T1218.011: Rundll32
id: c1a2b3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook addresses the potential misuse of rundll32.exe for defense evasion. It provides investigative steps to determine if adversaries are executing malicious code via this legitimate Windows binary. Key indicators of compromise include rundll32.exe loading a malicious DLL or connecting to a malicious network destination, command lines containing suspicious patterns like 'javascript:' or ordinal function calls, execution from non-standard file paths (e.g., user directories), having an anomalous parent process (e.g., an Office application), or a sudden burst of rundll32.exe activity on a host.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has rundll32.exe been observed loading a known malicious DLL or connecting to a malicious network destination?
    context: |
      This question aims to identify high-confidence malicious activity by cross-referencing artifacts from rundll32.exe execution against external threat intelligence. A match on a DLL file hash or a network indicator (IP/domain) strongly suggests that the process is being used for malicious purposes, such as downloading a second-stage payload or communicating with a command-and-control server.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints and Servers, Domain Controllers, Internet Gateway/Egress Points
    range: last 90 days
    queries:
      - "Search process creation logs for rundll32.exe."
      - "For each event, extract DLL path and command line arguments."
      - "Calculate hash of the DLL."
      - "Correlate process ID with network logs to find destination IPs/domains."
      - "Query DLL hash, destination IP, and destination domain against threat intelligence feeds."
  - question: Is rundll32.exe loading a DLL that is statistically rare across the enterprise?
    context: |
      This question helps uncover previously unknown or targeted malware by focusing on rarity. Legitimate DLLs used by the operating system or common applications will be present on many hosts. A DLL loaded by rundll32.exe on only a very small number of machines is anomalous and could indicate a custom tool or a targeted attack.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, Domain Controllers, Internet Gateway/Egress Points
    range: last 90 days
    queries:
      - "Search process creation logs for rundll32.exe over the last 30 days."
      - "Group by DLL file hash and count distinct hosts."
      - "Filter out known-good/common DLL hashes."
      - "Alert on hashes seen on a number of hosts below a defined threshold (e.g., < 5)."
  - question: Does a machine learning model classify a specific rundll32.exe execution as malicious based on its characteristics?
    context: |
      This question leverages machine learning to detect complex patterns of malicious behavior that are difficult to define with simple rules. By training a model on features like the DLL's location, the parent process, and associated network activity, it can learn to identify subtle combinations of attributes that indicate malicious intent and flag new, suspicious executions.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints and Servers, Domain Controllers, Internet Gateway/Egress Points
    range: last 90 days
    queries:
      - "For new rundll32.exe execution events, gather features: DLL path, parent process, command line length, network connection details."
      - "Input features into the pre-trained classification model."
      - "Alert if the model's output score exceeds the maliciousness threshold."
  - question: Does the rundll32.exe command line contain known malicious patterns, such as invoking JavaScript or calling a function by its ordinal number?
    context: |
      This question looks for specific, well-documented malicious tradecraft. Adversaries often use rundll32.exe to proxy execution of scripts (like JavaScript via mshtml) or to run malicious Control Panel applets (.cpl files). Calling a DLL's function by its ordinal number (e.g., #1) instead of its name is another common obfuscation technique. Detecting these patterns provides a strong signal of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, User Workstations
    range: last 90 days
    queries:
      - "Search process creation logs for rundll32.exe."
      - "Apply regex to command line arguments to find patterns like 'javascript:', 'shell32.dll,Control_RunDLL', or ',#\\d+'."
      - "Alert on any match."
  - question: Is the command line of a rundll32.exe process unusually complex or random, suggesting obfuscation?
    context: |
      This question uses information theory to detect obfuscated commands. Legitimate command lines tend to have lower complexity (entropy). Adversaries often obfuscate or encode payloads directly in the command line, resulting in a high-entropy, random-looking string. Comparing the entropy of a command line to a baseline of normal activity can effectively identify these outliers.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, User Workstations
    range: last 90 days
    queries:
      - "For each rundll32.exe execution, calculate the Shannon entropy of the command line."
      - "Compare the entropy value against a pre-calculated baseline of normal activity."
      - "Alert if the entropy exceeds a high percentile threshold (e.g., 99th percentile)."
  - question: Does a natural language processing model classify the rundll32.exe command line text as malicious?
    context: |
      This question applies advanced text analysis to command lines to find malicious patterns that are too complex for simple regex. By using techniques like TF-IDF or word embeddings, a model can learn the "vocabulary" and "grammar" of malicious commands, enabling it to identify suspicious combinations of arguments, file paths, and function calls that indicate an attack.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, User Workstations
    range: last 90 days
    queries:
      - "For new rundll32.exe execution events, extract the full command line text."
      - "Input the command line text into a pre-trained text classification model."
      - "Alert if the model classifies the command as malicious with high confidence."
  - question: Is rundll32.exe being executed from an unusual location, loading a DLL from a suspicious path, or being launched by an unexpected parent process?
    context: |
      This question targets common evasion techniques based on location and parent-child relationships. The legitimate rundll32.exe binary resides in System32 or SysWOW64; an executable with the same name elsewhere is a masquerading threat. Similarly, legitimate processes rarely load DLLs from user-writable directories like AppData or Temp. Finally, rundll32.exe being spawned by an Office application or a script host is a classic sign of a malicious macro or script execution.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, File servers hosting user profiles or shared drives
    range: last 90 days
    queries:
      - "Search process creation logs for rundll32.exe."
      - "Rule 1: Alert if process path is not in System32 or SysWOW64."
      - "Rule 2: Alert if command line contains a DLL path in a user-writable directory (e.g., /Users/, /Temp/)."
      - "Rule 3: Alert if parent process is an Office app, script host, or other anomalous parent."
  - question: Is rundll32.exe being spawned by a parent process that is statistically rare across the enterprise?
    context: |
      This question aims to find anomalous execution chains by focusing on the rarity of the parent process. While some parent processes like svchost.exe are common, an adversary might use a custom or less common process to launch rundll32.exe. By identifying parent processes that rarely or never spawn rundll32.exe in a normal environment, analysts can pinpoint suspicious activity.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, File servers hosting user profiles or shared drives
    range: last 90 days
    queries:
      - "Search process creation logs for rundll32.exe over the last 30 days."
      - "Group by parent process name and count occurrences."
      - "Alert when a new rundll32.exe event has a parent process whose frequency is below a defined threshold (e.g., 1st percentile)."
  - question: Does an unsupervised machine learning model flag a rundll32.exe execution as an anomaly based on its context (parent process, DLL location)?
    context: |
      This question uses unsupervised learning to find "unknown unknowns" without relying on pre-labeled malicious data. The model learns what "normal" rundll32.exe execution looks like based on features like its parent process and the location of the DLL it's loading. Any new execution that significantly deviates from this learned norm is flagged as an anomaly for investigation.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, File servers hosting user profiles or shared drives
    range: last 90 days
    queries:
      - "For new rundll32.exe execution events, gather features: parent process name, loaded DLL directory, working directory."
      - "Input features into the pre-trained anomaly detection model."
      - "Alert if the model flags the event as an anomaly."
  - question: Has a single host generated a burst of multiple, distinct suspicious rundll32.exe alerts in a short time frame?
    context: |
      This question correlates multiple lower-fidelity signals into a single high-confidence incident. A single alert for a rare path or a suspicious pattern might be a false positive, but multiple different types of alerts occurring on the same host within minutes is a strong indicator of a complex, multi-stage attack. This helps prioritize alerts and focus analyst attention on the most critical events.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints and Servers, Network Egress Points, DNS Servers
    range: last 90 days
    queries:
      - "Create a correlation search that monitors for other rundll32.exe alerts."
      - "Count distinct alert types per host over a 10-minute window."
      - "If count > 5, generate a high-severity incident."
  - question: Is there a sudden, statistically significant spike in the number of rundll32.exe executions on a single host compared to its own recent history?
    context: |
      This question aims to detect a sudden burst of activity on a per-host basis. Many attacks or automated scripts may involve rapid, repeated execution of rundll32.exe. By establishing a rolling baseline of normal activity for each host, this method can detect a sudden deviation (e.g., more than 3 standard deviations above the average) that indicates a potential incident, while ignoring hosts that may normally have a high volume of executions.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, Network Egress Points, DNS Servers
    range: last 90 days
    queries:
      - "For each host, maintain a moving average and standard deviation of rundll32.exe execution counts over a 24-hour period."
      - "In 5-minute intervals, count new rundll32.exe executions."
      - "Alert if the count is > (moving average + 3 * standard deviation)."
  - question: Does a machine learning model detect anomalous time-series or network clustering behavior related to rundll32.exe execution?
    context: |
      This question uses advanced ML models to find sophisticated anomalies. A time-series model (like ARIMA) can predict the expected number of rundll32.exe executions and flag deviations that simple statistical methods might miss. For network traffic, a clustering algorithm (like DBSCAN) can group normal connections together based on features like port and data volume, automatically identifying outlier connections that don't fit any normal pattern and could represent C2 communication or data exfiltration.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints and Servers, Network Egress Points, DNS Servers
    range: last 90 days
    queries:
      - "Time-series model: Input per-host rundll32.exe execution counts into a pre-trained model (e.g., ARIMA) and alert on significant deviations from predicted values."
      - "Clustering model: For network connections from rundll32.exe, extract features (port, bytes, duration) and input into a pre-trained model (e.g., DBSCAN). Alert on connections classified as noise or outliers."