name: T1632.001: Code Signing Policy Modification
id: d8c9a0b1-e2f3-4a5b-8c6d-7e8f9a0b1c2d
description: |
  This playbook helps investigate whether an adversary has modified device security policies to evade defenses. This includes detecting when the 'REQUEST_INSTALL_PACKAGES' permission is granted to untrusted applications on Android, which allows them to sideload other apps. It also covers the detection of user-added, non-allowlisted CA certificates on Android, which could facilitate man-in-the-middle attacks. Finally, it addresses the identification of unapproved Configuration Profiles on iOS devices, which can alter security settings or redirect network traffic.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has the 'REQUEST_INSTALL_PACKAGES' permission been granted to an application not on the organizational allowlist?
    context: |
      This question aims to identify instances where an application has been granted the powerful 'REQUEST_INSTALL_PACKAGES' permission, which allows it to install other applications. If the application receiving this permission is not an organizationally approved installer (like the official app store), it could indicate a malicious app attempting to sideload further malware or bypass security controls. A high-severity alert is triggered for such events to enable rapid investigation and response.
    answer_sources:
      - MDM Log: ApplicationPermissionStateChange
      - MDM Asset Inventory: ApplicationList
      - Corporate-managed Android device fleet
      - MDM Management Server
      - Organizational App Store Servers
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH MDM logs FOR event='ApplicationPermissionStateChange' AND permission='REQUEST_INSTALL_PACKAGES' AND state='granted'
          FILTER package_name NOT IN allowlist.csv
          ALERT high_severity
  - question: Has an unusually rare application been granted permission to install other packages?
    context: |
      This question focuses on identifying installer applications that are not widely deployed across the organization. Malicious or unauthorized applications are often not part of standard software sets and will therefore have a low installation prevalence. By comparing the prevalence of an application granted the 'REQUEST_INSTALL_PACKAGES' permission against a 90-day rolling baseline, we can flag statistically rare applications (e.g., below the 5th percentile) for review, as they pose a higher risk of being unauthorized.
    answer_sources:
      - MDM Log: ApplicationPermissionStateChange
      - MDM Asset Inventory: ApplicationList
      - Corporate-managed Android device fleet
      - MDM Management Server
      - Organizational App Store Servers
    range: last 90 days
    queries:
      - technology: MDM/SIEM
        query: |
          FOREACH app WITH permission='REQUEST_INSTALL_PACKAGES'
          CALCULATE prevalence = (count(devices_with_app) / count(total_devices)) * 100
          COMPARE prevalence to 90-day_baseline
          IF prevalence < 5th_percentile THEN FLAG for_review
  - question: Does a machine learning model predict a high probability of malicious intent for an application granted package installation permissions?
    context: |
      This question leverages a logistic regression model to proactively assess the risk of an application being granted installer permissions. The model considers multiple features, such as the app's rarity, its category, where it was installed from, and the other permissions it holds. A high probability score (e.g., > 0.8) from the model serves as a strong, automated indicator of a potential threat, automatically triggering an investigation and providing analysts with pre-enriched device and user data.
    answer_sources:
      - MDM Log: ApplicationPermissionStateChange
      - MDM Asset Inventory: ApplicationList
      - Corporate-managed Android device fleet
      - MDM Management Server
      - Organizational App Store Servers
    range: last 90 days
    queries:
      - technology: Machine Learning/SOAR
        query: |
          ON event='REQUEST_INSTALL_PACKAGES' grant
          GATHER features (prevalence, category, source, permission_count, is_managed)
          PREDICT probability with logistic_regression_model
          IF probability > 0.8 THEN CREATE investigation_ticket AND ENRICH with_device_user_context
  - question: Is a non-allowlisted, user-added CA certificate installed on a device, and has it been used in recent network traffic?
    context: |
      This question seeks to detect the installation of unauthorized Certificate Authority (CA) certificates, which can be used to intercept secure (TLS/SSL) traffic. The playbook checks the device's installed user-added certificates against an organizational allowlist. If a non-approved certificate is found, it triggers a high-severity alert and automatically queries network logs to see if that certificate has been used to establish trust in recent TLS sessions, indicating active man-in-the-middle activity.
    answer_sources:
      - MDM Asset Inventory: DeviceCertificateList
      - MDM Compliance Log: CertificateInstallEvent
      - Zeek ssl.log
      - Zeek x509.log
      - Corporate-managed Android device fleet
      - MDM Management Server
      - Public Key Infrastructure (PKI) Servers
      - Network Egress/Inspection Points
    range: last 90 days
    queries:
      - technology: SIEM/SOAR
        query: |
          SEARCH MDM inventory FOR user_added_ca_certificates
          FILTER thumbprint NOT IN ca_allowlist.csv
          ALERT high_severity
          PIVOT to network logs FOR last 24h WHERE tls.issuer == alert.issuer OR tls.subject == alert.subject
  - question: Does a non-allowlisted CA certificate exhibit signs of being a targeted, non-standard certificate, such as high randomness and low prevalence?
    context: |
      This question provides a method for scoring the risk of a newly discovered, non-allowlisted CA certificate. Certificates used in targeted attacks often have randomly generated Subject and Issuer fields (high entropy) and are installed on very few devices (low prevalence). Identifying certificates with both of these characteristics helps prioritize investigations, as they are strong indicators of malicious activity rather than misconfiguration.
    answer_sources:
      - MDM Asset Inventory: DeviceCertificateList
      - MDM Compliance Log: CertificateInstallEvent
      - Zeek ssl.log
      - Zeek x509.log
      - Corporate-managed Android device fleet
      - MDM Management Server
      - Public Key Infrastructure (PKI) Servers
      - Network Egress/Inspection Points
    range: last 90 days
    queries:
      - technology: SIEM/Scripting
        query: |
          ON new_non_allowlisted_ca_detected
          CALCULATE entropy(certificate.subject), entropy(certificate.issuer)
          CALCULATE prevalence = (count(devices_with_cert) / count(total_devices))
          IF (entropy > 4.0 AND prevalence < 0.01) THEN ESCALATE for_immediate_investigation
  - question: Does a machine learning model identify a CA certificate as anomalous based on its metadata?
    context: |
      This question uses an Isolation Forest model, a type of anomaly detection algorithm, to identify unusual CA certificates. The model is trained on the characteristics of known-good certificates. When it encounters a new certificate, it evaluates its features (like validity period, key size, string lengths, etc.) and assigns an anomaly score. Certificates that score in the top percentile are flagged for immediate manual review, as they deviate significantly from the established baseline of normal, approved certificates.
    answer_sources:
      - MDM Asset Inventory: DeviceCertificateList
      - MDM Compliance Log: CertificateInstallEvent
      - Zeek ssl.log
      - Zeek x509.log
      - Corporate-managed Android device fleet
      - MDM Management Server
      - Public Key Infrastructure (PKI) Servers
      - Network Egress/Inspection Points
    range: last 90 days
    queries:
      - technology: Machine Learning
        query: |
          FOREACH new_ca_certificate
          GATHER features (validity, key_algo, key_size, subject_len, issuer_len, san_count, self_signed)
          CALCULATE anomaly_score with isolation_forest_model
          IF score IN top 1% THEN FLAG for_manual_review
  - question: Is an unapproved iOS Configuration Profile installed on a device, and can its download source be identified?
    context: |
      This question is designed to detect unauthorized iOS Configuration Profiles, which can be used to alter security settings, install root certificates, or configure VPNs to redirect traffic. The playbook checks installed profiles against an allowlist specific to the device's management group. If an unapproved profile is found, an alert is generated, and an automated pivot to network logs is performed to trace the download source of the malicious '.mobileconfig' file, providing crucial information about the attack vector.
    answer_sources:
      - MDM Asset Inventory: DeviceProfileList
      - MDM Compliance Log: ProfileInstallEvent
      - Zeek http.log
      - Zeek files.log
      - Corporate-managed iOS device fleet
      - MDM Management Server
      - Apple Push Notification service (APNs) infrastructure
      - Network Egress/Inspection Points
    range: last 90 days
    queries:
      - technology: SIEM/SOAR
        query: |
          SEARCH MDM inventory FOR installed_profiles
          FOREACH profile
          IF profile.PayloadIdentifier NOT IN allowlist[device.group] THEN ALERT high_severity AND CORRELATE device.ip with network_logs to FIND download_of_'.mobileconfig'
  - question: Was an iOS Configuration Profile installed at a statistically unusual time?
    context: |
      This question seeks to identify suspicious profile installations by analyzing their timing. Most legitimate administrative actions, like installing configuration profiles, occur during standard business hours. By establishing a baseline of normal installation times and using a statistical test (modified Z-score) to find outliers, we can flag installations that occur at highly unusual times (e.g., overnight or on a weekend). Such events deviate from normal activity and warrant further investigation.
    answer_sources:
      - MDM Asset Inventory: DeviceProfileList
      - MDM Compliance Log: ProfileInstallEvent
      - Zeek http.log
      - Zeek files.log
      - Corporate-managed iOS device fleet
      - MDM Management Server
      - Apple Push Notification service (APNs) infrastructure
      - Network Egress/Inspection Points
    range: last 90 days
    queries:
      - technology: SIEM/UBA
        query: |
          GET all_profile_installation_timestamps from MDM logs for last 90 days
          BUILD baseline of install_counts_per_hour_per_day
          FOREACH new_install
          CALCULATE modified_z_score(install_time)
          IF z_score > 3.5 THEN FLAG for_review
  - question: Has a time-series model detected an anomalous spike in iOS Configuration Profile installations across the fleet that does not correspond to a scheduled change?
    context: |
      This question aims to detect large-scale or widespread attacks involving iOS Configuration Profiles. It uses a time-series anomaly detection model (like ARIMA or Prophet) to monitor the rate of new profile installations across the entire device fleet. A sudden, statistically significant spike in installations that is not explained by a scheduled IT maintenance or deployment (as verified against the change management database) is a strong indicator of a coordinated attack campaign. This should trigger a high-severity, fleet-wide incident response.
    answer_sources:
      - MDM Asset Inventory: DeviceProfileList
      - MDM Compliance Log: ProfileInstallEvent
      - Zeek http.log
      - Zeek files.log
      - Corporate-managed iOS device fleet
      - MDM Management Server
      - Apple Push Notification service (APNs) infrastructure
      - Network Egress/Inspection Points
    range: last 90 days
    queries:
      - technology: Machine Learning/SIEM
        query: |
          AGGREGATE new_profile_installs_per_hour
          PREDICT anomaly with time_series_model
          IF anomaly_detected
          CHECK change_management_db for corresponding_change_request
          IF no_change_request THEN TRIGGER high_severity_incident_response