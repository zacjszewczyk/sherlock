name: T1590: Gather Victim Network Information
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps answer the Priority Intelligence Requirement (PIR) 'Is an adversary conducting active network reconnaissance against our external perimeter?'. It provides investigative questions and queries to detect various network reconnaissance techniques, such as identifying connections from known malicious IPs, detecting signatures of scanning tools like Nmap or Nuclei, identifying horizontal and vertical port scanning behavior, detecting web content discovery through high HTTP error rates, and identifying DNS-based reconnaissance like zone transfer attempts and subdomain enumeration.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known malicious IP addresses from threat intelligence feeds connecting to our external network?
    context: This question aims to provide the first line of defense by identifying initial contact from known adversaries. By joining real-time network connection logs with a high-confidence threat intelligence feed, we can proactively detect connections from IPs associated with malware, C2 servers, or scanning infrastructures. This provides an early warning of a targeted or opportunistic attack before it progresses further.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network perimeter firewalls
      - cloud security groups
      - web application firewalls
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH network_logs | JOIN threat_intel_feed ON source_ip | WHERE is_malicious = true | ALERT
  - question: Are any of the identified malicious IPs exhibiting scanning behavior by contacting an anomalous number of hosts or ports?
    context: This question moves beyond simple IP matching to behavioral analysis. A single connection from a 'malicious' IP could be a false positive, but if that same IP attempts to connect to numerous hosts or a wide range of ports, it strongly indicates active reconnaissance. By comparing connection counts to a pre-computed baseline, we can statistically identify and flag hostile scanning activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network perimeter firewalls
      - cloud security groups
      - web application firewalls
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH network_logs WHERE source_ip IN (malicious_ips) | BUCKET time=1h | STATS dc(dest_host) as host_count, dc(dest_port) as port_count BY source_ip | WHERE host_count > baseline_host_scan OR port_count > baseline_port_scan
  - question: Can we use a machine learning model to score and classify connections from known malicious IPs as reconnaissance?
    context: This question leverages machine learning for more sophisticated and automated detection. A classification model can analyze multiple features simultaneously (connection count, port diversity, packet sizes, protocol, threat intel category) to produce a probability score. This approach is more robust than simple thresholding, helping to reduce false positives and identify subtle or complex reconnaissance patterns that might otherwise be missed.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network perimeter firewalls
      - cloud security groups
      - web application firewalls
      - VPN concentrators
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: PIPE network_logs FROM malicious_ips | INVOKE ML_Model(features=*) | WHERE probability_reconnaissance > 0.85 | ALERT
  - question: Is network traffic from external sources showing user-agent strings or other artifacts associated with known reconnaissance tools?
    context: This question focuses on finding the 'fingerprints' of specific scanning tools like Nmap, Masscan, or Nuclei. Attackers often use these off-the-shelf tools for initial reconnaissance. By searching for their unique signatures (e.g., User-Agent strings, specific Zeek notices), we can directly identify the use of such tools against our perimeter, providing clear evidence of malicious intent.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek notice.log
      - Zeek ssl.log
      - Internet-facing web servers
      - application load balancers
      - reverse proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH web_logs OR network_notices | WHERE user_agent MATCHES (scanner_regex_list) OR notice_type MATCHES ('*Scan*') | ALERT
  - question: Are any external IPs generating a high ratio of scanner-like traffic compared to their total traffic?
    context: This question helps to distinguish between a potential false positive and a dedicated scanning effort. A single request with a matching signature might be incidental, but an IP where a high percentage of its traffic consists of scanner activity is almost certainly malicious. Tracking the number of unique tool signatures from a single IP can also reveal a more sophisticated actor trying different reconnaissance methods.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek notice.log
      - Zeek ssl.log
      - Internet-facing web servers
      - application load balancers
      - reverse proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH web_logs | BUCKET time=10m | STATS count() as total, count(eval(match(user_agent, scanner_regex))) as scanner_hits BY source_ip | EVAL ratio = scanner_hits / total | WHERE ratio > 0.5 AND total > 10
  - question: Is there an anomalous, network-wide spike in traffic matching scanner signatures, indicating a large-scale campaign?
    context: This question looks at the bigger picture. Instead of focusing on a single source IP, it analyzes the aggregate volume of all scanner-related activity across the entire network. A time series model learns the 'normal' ebb and flow of this background noise. A sudden, significant spike above the predicted norm can indicate a large, coordinated scanning campaign, possibly by multiple actors or a distributed botnet.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek notice.log
      - Zeek ssl.log
      - Internet-facing web servers
      - application load balancers
      - reverse proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH web_logs WHERE user_agent MATCHES (scanner_regex_list) | TIMECHART count() | INVOKE Time_Series_Model | WHERE actual > upper_bound | ALERT
  - question: Are we observing horizontal or vertical scanning patterns from any single external source IP?
    context: This question aims to detect classic scanning behaviors. A horizontal scan (one source IP to many destination IPs on the same port) seeks to find a specific vulnerable service across the network. A vertical scan (one source IP to many ports on a single destination IP) seeks to profile a single machine. Detecting these patterns provides concrete evidence of an adversary mapping out the network's services and topology.
    answer_sources:
      - Zeek conn.log
      - Zeek scan.log
      - All network egress and ingress points, including physical datacenter firewalls
      - cloud network boundaries (e.g., VPCs)
      - DMZ segments
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH zeek_scan_log WHERE notice IN ('Scan::Port_Scan', 'Scan::Address_Scan') OR (SEARCH zeek_conn_log | BUCKET 1m | STATS dc(dest_ip) as hosts, dc(dest_port) as ports BY src_ip | WHERE hosts > 20 OR ports > 50)
  - question: Can we use entropy calculations to identify scanning behavior based on the randomness of destination IPs or ports?
    context: This question applies a mathematical concept, Shannon entropy, to detect scanning. Normal traffic from a single source tends to go to a small, predictable set of destinations (low entropy). Scanning, by its nature, involves connecting to a wide and often random-seeming set of destinations or ports (high entropy). A sudden spike in the calculated entropy for an IP's connections is a strong statistical indicator of reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek scan.log
      - All network egress and ingress points, including physical datacenter firewalls
      - cloud network boundaries (e.g., VPCs)
      - DMZ segments
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH network_logs | BUCKET 5m | STATS shannon_entropy(dest_ip), shannon_entropy(dest_port) BY src_ip | WHERE shannon_entropy(dest_ip) > 3.0 OR shannon_entropy(dest_port) > baseline
  - question: Can a clustering algorithm like DBSCAN automatically identify scanning activity as anomalous outliers?
    context: This question uses an unsupervised machine learning approach to find the 'odd one out.' Normal user traffic patterns form dense clusters (e.g., many users accessing the same web server). Scanning activity, where one source connects to many disparate destinations, does not fit into these dense clusters and is identified by the algorithm as noise or an outlier. This allows for the automatic flagging of potential scanners without pre-defined rules.
    answer_sources:
      - Zeek conn.log
      - Zeek scan.log
      - All network egress and ingress points, including physical datacenter firewalls
      - cloud network boundaries (e.g., VPCs)
      - DMZ segments
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: PIPE network_connections(src_ip, dest_ip, dest_port) | INVOKE DBSCAN_Model | WHERE cluster_label = 'outlier' | ALERT
  - question: Are external IPs attempting to access sensitive or non-public files and directories on our web servers?
    context: This question addresses 'forced browsing' or 'content discovery,' a common reconnaissance technique where attackers guess file and directory names to find sensitive information (e.g., .git repositories, environment files, backups). By monitoring for requests to a known list of these sensitive paths, we can immediately detect and alert on attempts to uncover hidden or misconfigured resources.
    answer_sources:
      - Zeek http.log
      - Internet-facing web servers
      - APIs
      - content delivery networks (CDNs)
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH web_logs | WHERE uri MATCHES (sensitive_path_list) | ALERT
  - question: Is any external IP generating an unusually high ratio of client errors (4xx) to successful requests (2xx)?
    context: This question uses the server's response codes to infer attacker behavior. An attacker guessing file or directory names will generate a large number of '404 Not Found' or '403 Forbidden' errors. A very high ratio of these errors compared to successful '200 OK' responses is a strong indicator of a forced browsing or content discovery tool in action.
    answer_sources:
      - Zeek http.log
      - Internet-facing web servers
      - APIs
      - content delivery networks (CDNs)
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH web_logs | BUCKET 10m | STATS count(eval(status_code LIKE '4%')) as client_errors, count(eval(status_code LIKE '2%')) as successes BY src_ip | EVAL ratio = client_errors / successes | WHERE ratio > 5 AND (client_errors + successes) > 100
  - question: Is there a network-wide, anomalous spike in the rate of 4xx client errors?
    context: Similar to the question about scanner signatures, this question looks for large-scale campaigns by analyzing aggregate data. A time series model learns the normal baseline of 4xx errors across all web servers. A sudden, unexpected surge in these errors that breaches the model's predicted confidence interval can indicate a widespread, automated attack, such as a botnet attempting content discovery across multiple web properties.
    answer_sources:
      - Zeek http.log
      - Internet-facing web servers
      - APIs
      - content delivery networks (CDNs)
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH web_logs WHERE status_code LIKE '4%' | TIMECHART count() | INVOKE Time_Series_Model | WHERE actual > upper_bound | ALERT
  - question: Are unauthorized external systems attempting to perform DNS zone transfers (AXFR/IXFR) from our authoritative DNS servers?
    context: This question targets a specific, high-value reconnaissance technique. A DNS zone transfer provides an attacker with a complete list of all DNS records for a domain, effectively giving them a map of the organization's servers. These requests should only ever come from authorized, secondary DNS servers. Any attempt from an unauthorized IP is a serious and unambiguous indicator of reconnaissance.
    answer_sources:
      - Zeek dns.log
      - Authoritative external and internal DNS servers
      - recursive DNS resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH dns_logs WHERE query_type IN ('AXFR', 'IXFR') AND src_ip NOT IN (authorized_dns_servers) | ALERT
  - question: Is any external IP generating a high volume of DNS queries for non-existent domains (NXDOMAIN responses)?
    context: This question aims to detect subdomain enumeration or brute-forcing. Attackers use this technique to discover hidden or unlisted servers (e.g., dev.company.com, vpn.company.com). By generating a list of potential subdomain names and querying for them, they can identify valid hosts. A large number of NXDOMAIN (non-existent domain) responses from a single source is a tell-tale sign of this activity.
    answer_sources:
      - Zeek dns.log
      - Authoritative external and internal DNS servers
      - recursive DNS resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH dns_logs WHERE response_code = 'NXDOMAIN' | BUCKET 5m | STATS count() as nx_count BY src_ip | WHERE nx_count > dynamic_threshold_99_percentile
  - question: Can we use an unsupervised machine learning model to detect anomalous DNS query patterns indicative of reconnaissance?
    context: This question applies machine learning to DNS traffic for more advanced detection. An Isolation Forest or similar model can learn the characteristics of 'normal' DNS queries from external sources (e.g., query rate, query type distribution, name length). It can then assign an anomaly score to new traffic. Patterns consistent with subdomain brute-forcing (high query rate, high NXDOMAIN rate) will receive a high anomaly score and be flagged for investigation, catching attacks that might evade simple threshold-based rules.
    answer_sources:
      - Zeek dns.log
      - Authoritative external and internal DNS servers
      - recursive DNS resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: PIPE dns_logs | INVOKE ML_Model(features=*) | WHERE anomaly_score > threshold | ALERT