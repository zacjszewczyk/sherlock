name: T1590: Gather Victim Network Information
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: >
  This playbook helps determine if an adversary is conducting active network reconnaissance against the organization's external perimeter. It focuses on identifying various techniques used to gather information about the network, such as identifying active hosts, open ports, running services, and potential vulnerabilities. This is achieved by analyzing network traffic for connections from known malicious IP addresses, signatures of scanning tools (like Nmap or Nuclei), patterns of horizontal and vertical scanning, high rates of web server errors indicative of forced browsing, and DNS-based reconnaissance like unauthorized zone transfers or subdomain enumeration.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a known malicious IP address initiated a connection to our network?
    context: >
      A connection from an IP address listed on a high-confidence threat intelligence feed is a strong, direct indicator of potential malicious activity. This requires immediate investigation to understand the nature of the connection, the target, and the adversary's intent. It is the first line of defense in detecting targeted reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network perimeter firewalls, cloud security groups, web application firewalls, and VPN concentrators.
    range: last 90 days
    queries:
      - query: SEARCH conn.log | JOIN source_ip WITH threat_intel_feed ON ip_address | WHERE threat_intel_feed.ip_address IS NOT NULL
  - question: Is a known malicious IP address exhibiting scanning behavior by contacting an anomalous number of hosts or ports?
    context: >
      Adversaries often perform scans to discover open ports or vulnerable services across a network. By calculating the number of unique destinations (hosts or ports) contacted by a single source IP and comparing it to a baseline, we can distinguish between normal traffic and automated scanning activity. Exceeding a statistical threshold (like the 95th percentile) helps to automatically flag suspicious behavior that might otherwise be missed.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network perimeter firewalls, cloud security groups, web application firewalls, and VPN concentrators.
    range: last 90 days
    queries:
      - query: SEARCH conn.log WHERE source_ip IN malicious_ips | BUCKET time by 1h | STATS distinct_count(dest_port), distinct_count(dest_ip) BY source_ip | WHERE distinct_count(dest_port) > baseline_95_percentile OR distinct_count(dest_ip) > baseline_95_percentile
  - question: Do connection events from known malicious IPs classify as reconnaissance based on a machine learning model?
    context: >
      While simple rule-based alerts are useful, they can be prone to false positives. A machine learning classification model can provide a more nuanced risk assessment by analyzing multiple connection features simultaneously (e.g., connection count, port diversity, packet size, protocol). This approach allows for the scoring of connections, helping analysts prioritize the most probable and sophisticated reconnaissance attempts.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network perimeter firewalls, cloud security groups, web application firewalls, and VPN concentrators.
    range: last 90 days
    queries:
      - query: SEARCH conn.log WHERE source_ip IN malicious_ips | EVALUATE ml_model(features=*) | WHERE model_score > 0.85
  - question: Is network traffic from an external source showing signs of common reconnaissance tools?
    context: >
      Reconnaissance tools like Nmap, Masscan, and Nuclei often leave unique fingerprints in network traffic, such as specific User-Agent strings or protocol anomalies. Actively monitoring logs for these signatures provides a direct method for identifying the use of these tools against our perimeter, giving clear evidence of an adversary's reconnaissance phase.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek notice.log
      - Zeek ssl.log
      - Internet-facing web servers, application load balancers, and reverse proxies.
    range: last 90 days
    queries:
      - query: SEARCH http.log, notice.log | FILTER user_agent MATCHES scanner_regex_list OR notice_type IN ('Scan::Port_Scan', 'Nmap::OS_Scan')
  - question: Is a single external IP address exhibiting a high ratio of scanner-like activity compared to its total traffic?
    context: >
      An adversary might try to blend their scanning activity with legitimate-looking traffic. By calculating the ratio of requests with scanner signatures to the total number of requests from a single IP, we can identify sources that are predominantly engaged in reconnaissance. A high ratio, especially from an IP using multiple different scanner signatures, is a strong indicator of malicious intent.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek notice.log
      - Zeek ssl.log
      - Internet-facing web servers, application load balancers, and reverse proxies.
    range: last 90 days
    queries:
      - query: SEARCH http.log | BUCKET time by 10m | STATS count(requests) as total_req, count(IF(is_scanner, 1, 0)) as scanner_req BY source_ip | WHERE (scanner_req / total_req) > 0.5 AND total_req > 10
  - question: Is there an anomalous, network-wide spike in reconnaissance tool signatures?
    context: >
      A coordinated or large-scale scanning campaign can manifest as a sudden, sharp increase in the total number of scanner signatures detected across the entire network. Using a time series anomaly detection model allows us to establish a baseline of "normal" background noise and automatically alert when a statistically significant spike occurs, indicating a potential widespread attack.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek notice.log
      - Zeek ssl.log
      - Internet-facing web servers, application load balancers, and reverse proxies.
    range: last 90 days
    queries:
      - query: SEARCH all_logs | FILTER event_has_scanner_signature | TIME_SERIES_AGGREGATE count by 1m | APPLY anomaly_detection_model | WHERE is_anomaly = true
  - question: Is an external source IP conducting a horizontal or vertical port scan against our network?
    context: >
      Scanning is a fundamental reconnaissance technique. A horizontal scan (one port, many hosts) aims to find a specific vulnerable service across the network. A vertical scan (one host, many ports) aims to fingerprint a single machine. Detecting these specific patterns, either through built-in IDS alerts or manual log analysis, is crucial for identifying an adversary's initial foothold attempts.
    answer_sources:
      - Zeek conn.log
      - Zeek scan.log
      - All network egress and ingress points, including physical datacenter firewalls, cloud network boundaries (e.g., VPCs), and DMZ segments.
    range: last 90 days
    queries:
      - query: SEARCH scan.log FOR 'Scan::Port_Scan' OR 'Scan::Address_Scan' OR (SEARCH conn.log | BUCKET time by 1m | STATS distinct_count(dest_ip) by source_ip, dest_port | WHERE distinct_count(dest_ip) > 20)
  - question: Does the port and address distribution for an external IP show high entropy indicative of scanning?
    context: >
      Normal user traffic is typically targeted and has low randomness (low entropy). In contrast, scanning activity is inherently random as the attacker probes many different hosts or ports. Calculating the Shannon entropy of destination IPs and ports provides a mathematical way to measure this randomness. A high entropy score is a strong statistical indicator of a scan, even if it's slow or attempts to evade simple threshold-based rules.
    answer_sources:
      - Zeek conn.log
      - Zeek scan.log
      - All network egress and ingress points, including physical datacenter firewalls, cloud network boundaries (e.g., VPCs), and DMZ segments.
    range: last 90 days
    queries:
      - query: SEARCH conn.log | BUCKET time by 5m | CALCULATE shannon_entropy(dest_ip), shannon_entropy(dest_port) BY source_ip | WHERE entropy_dest_ip > 3.0 OR entropy_dest_port > threshold
  - question: Can we identify scanning activity as outlier behavior using clustering algorithms?
    context: >
      Machine learning offers a powerful way to find the "needle in the haystack." Density-based clustering algorithms like DBSCAN can automatically group normal, legitimate traffic patterns into dense clusters. Scanning activity, which involves a single source connecting to many disparate destinations, does not fit these patterns and will be flagged by the algorithm as noise or an outlier, providing a novel way to detect reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek scan.log
      - All network egress and ingress points, including physical datacenter firewalls, cloud network boundaries (e.g., VPCs), and DMZ segments.
    range: last 90 days
    queries:
      - query: SEARCH conn.log | SELECT source_ip, dest_ip, dest_port | APPLY DBSCAN | WHERE cluster_label = 'outlier'
  - question: Is an external IP searching for sensitive files or directories on our web servers?
    context: >
      Before exploitation, adversaries often search for exposed configuration files (e.g., .env, .git), backups, or known sensitive API endpoints. This is a form of "forced browsing." Monitoring for requests to a predefined watchlist of these sensitive paths allows for high-fidelity alerting on targeted attempts to discover information or configuration leaks.
    answer_sources:
      - Zeek http.log
      - Internet-facing web servers, APIs, and content delivery networks (CDNs).
    range: last 90 days
    queries:
      - query: SEARCH http.log | WHERE requested_uri MATCHES sensitive_path_list
  - question: Is an external IP generating an unusually high ratio of client errors (4xx) to successful requests (2xx)?
    context: >
      Forced browsing and content discovery tools work by making a large number of guesses for files and directories, most of which will not exist and will therefore generate a 404 Not Found or other 4xx error. A high ratio of errors to successes from a single IP is a classic sign of this activity. Monitoring this ratio and comparing it to a baseline helps detect such brute-force discovery attempts.
    answer_sources:
      - Zeek http.log
      - Internet-facing web servers, APIs, and content delivery networks (CDNs).
    range: last 90 days
    queries:
      - query: SEARCH http.log | BUCKET time by 10m | STATS count(IF(status_code>=400,1,0)) as errors, count(IF(status_code>=200 AND status_code<300,1,0)) as success BY source_ip | WHERE (errors/success) > 5 AND (errors+success) > 100
  - question: Is there a network-wide, anomalous spike in the volume of 4xx errors?
    context: >
      A large-scale or distributed forced browsing attack can cause a sudden, significant increase in the overall 4xx error rate across all web servers. A time series forecasting model can predict the expected volume of errors for any given time. An observed volume that dramatically exceeds the model's prediction is a strong indicator of an ongoing, widespread attack that might be missed if looking only at individual source IPs.
    answer_sources:
      - Zeek http.log
      - Internet-facing web servers, APIs, and content delivery networks (CDNs).
    range: last 90 days
    queries:
      - query: SEARCH http.log WHERE status_code >= 400 | TIME_SERIES_AGGREGATE count by 1m | APPLY forecasting_model | WHERE actual_count > upper_confidence_bound
  - question: Has an unauthorized host attempted a DNS zone transfer from our servers?
    context: >
      A DNS zone transfer (AXFR/IXFR) is a mechanism for replicating DNS databases. If successfully performed by an unauthorized actor, it can expose the entire list of an organization's internal hostnames and IP addresses, providing a complete map of the network. This is a critical reconnaissance technique, and any unauthorized attempt should be treated as a high-severity incident.
    answer_sources:
      - Zeek dns.log
      - Authoritative external and internal DNS servers, and recursive DNS resolvers.
    range: last 90 days
    queries:
      - query: SEARCH dns.log | WHERE query_type IN ('AXFR', 'IXFR') AND source_ip NOT IN authorized_server_list
  - question: Is an external IP generating a high volume of non-existent domain (NXDOMAIN) DNS responses?
    context: >
      To discover subdomains (e.g., test.example.com, dev.example.com), adversaries often use a brute-force approach, querying a long list of potential names. Most of these will not exist, resulting in a large number of NXDOMAIN responses for the attacker's source IP. Monitoring for a spike in these responses from a single source is an effective way to detect subdomain enumeration attempts.
    answer_sources:
      - Zeek dns.log
      - Authoritative external and internal DNS servers, and recursive DNS resolvers.
    range: last 90 days
    queries:
      - query: SEARCH dns.log WHERE response_code = 'NXDOMAIN' | BUCKET time by 5m | STATS count(query) as nx_count BY source_ip | WHERE nx_count > dynamic_threshold_99_percentile
  - question: Is an external source exhibiting anomalous DNS query patterns indicative of enumeration?
    context: >
      Sophisticated attackers may try to evade simple NXDOMAIN count thresholds by using slower, more complex query patterns. An unsupervised anomaly detection model (like Isolation Forest) can learn what "normal" DNS behavior looks like by analyzing multiple features (query rate, type distribution, etc.). It can then assign an anomaly score to new traffic, flagging unusual patterns that are consistent with reconnaissance even if they don't trigger a single specific rule.
    answer_sources:
      - Zeek dns.log
      - Authoritative external and internal DNS servers, and recursive DNS resolvers.
    range: last 90 days
    queries:
      - query: SEARCH dns.log | EXTRACT_FEATURES query_rate, qtype_dist, nxdomain_rate | APPLY isolation_forest_model | WHERE anomaly_score > threshold