name: T1498.002: Reflection Amplification
id: 5a9b8c7d-6e5f-4a3b-2c1d-0e9f8a7b6c5d
description: This playbook focuses on detecting reflection amplification attacks, a type of Distributed Denial of Service (DDoS) where an adversary attempts to impact network availability or functionality. The attack involves sending requests to a third-party server (a reflector) with a spoofed source IP address (the victim's IP). The server's response, which is much larger than the request, is then sent to the victim, overwhelming their network resources. Detection methods include identifying high connection rates from known open reflectors, spotting specific high-amplification commands (like DNS 'ANY', NTP 'monlist', or Memcached 'stats'), observing significant statistical deviations in traffic volume from historical baselines, flagging sessions with unusually high amplification factors (response bytes vs. request bytes), and detecting a sudden spike in the diversity (Shannon entropy) of source IP addresses targeting a service.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are we observing inbound connections on ports 53, 123, or 11211 from source IPs known to be open reflectors?
  context: This question helps to identify traffic originating from known malicious or misconfigured systems (open reflectors) that are commonly abused for reflection/amplification attacks. By ingesting a threat intelligence feed of these reflectors and creating a watchlist, we can create a high-fidelity alert for any inbound connection attempts from these sources to our critical UDP services (DNS, NTP, Memcached). This is a direct, symbolic way to detect the initial stages or active phase of a reflection attack.
  answer_sources:
  - Zeek conn.log
  - CTI feed of open reflectors
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Zeek conn.log WHERE destination_port IN (53, 123, 11211) AND source_ip IN (watchlist:open_reflectors) | RETURN count by source_ip, destination_ip
- question: Is there a statistically anomalous rate of connections from a single source IP to our DNS, NTP, or Memcached services?
  context: Even if a source IP is not on a known threat list, a sudden and significant increase in its connection rate can indicate that it is being used as a reflector in an attack against our services. This statistical approach helps detect potential zero-day reflectors or newly compromised systems by establishing a baseline of normal behavior and alerting on deviations. An alert based on exceeding the 99th percentile suggests a highly unusual traffic pattern that warrants investigation.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Zeek conn.log WHERE destination_port IN (53, 123, 11211) | CALCULATE connection_rate per minute per source_ip | COMPARE current_rate to 30-day baseline | ALERT if current_rate > 99th_percentile_of_baseline
- question: Can we classify inbound connections to ports 53, 123, or 11211 as malicious reflection traffic using a machine learning model?
  context: This question aims to apply machine learning to proactively identify malicious reflection traffic with high confidence. By training a model on various connection features (like ASN, duration, packet/byte counts), we can move beyond simple thresholds or known bad IPs. This model learns the subtle characteristics of malicious traffic, allowing for the detection of sophisticated or novel attacks that might evade symbolic or statistical methods. An alert with a high confidence score provides a strong signal for an active attack.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FROM Zeek conn.log WHERE destination_port IN (53, 123, 11211) | EXTRACT features (ASN, duration, packet_count, byte_count) | SCORE with Random_Forest_Classifier | ALERT if classification is 'malicious' AND confidence_score > 0.90
- question: Are we receiving high-amplification queries like DNS 'ANY', NTP 'monlist', or Memcached 'stats' from untrusted sources?
  context: This question focuses on identifying the specific commands used in reflection attacks. Attackers leverage queries that generate a response significantly larger than the request. By monitoring for these specific high-amplification queries (like DNS 'ANY', NTP 'monlist', or Memcached 'stats') and checking if they originate from sources not on an established allow-list, we can create high-fidelity alerts for likely attack reconnaissance or active exploitation.
  answer_sources:
  - Zeek dns.log
  - Zeek ntp.log
  - Zeek datagram.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH protocol logs (dns, ntp, memcached) WHERE (dns.qtype_name='ANY' OR ntp.mode=7 OR memcached.command='stats') AND source_ip NOT IN (allowlist:trusted_sources) | ALERT
- question: Is there a statistically significant increase in the ratio of high-amplification queries compared to normal queries for our DNS and NTP services?
  context: This question provides a statistical method to detect a shift in traffic patterns that might indicate an attack. Instead of just looking for a single malicious query, this approach analyzes the proportion of high-amplification queries to normal queries over a short time window. A sudden, sharp increase in this ratio, exceeding a baseline established from normal operational traffic, suggests that an attacker is attempting to use the service for amplification.
  answer_sources:
  - Zeek dns.log
  - Zeek ntp.log
  - Zeek datagram.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR services (DNS, NTP) | CALCULATE ratio of (high-amplification_queries / normal_queries) in 5-min windows | COMPARE to historical mean ratio | ALERT if current_ratio > (mean + 3 * std_dev)
- question: Can we use an anomaly detection model to identify unusual protocol interactions that may indicate reconnaissance or amplification attempts?
  context: This question leverages unsupervised machine learning to find attacks without prior knowledge of specific query types. By training an anomaly detection model on features like query type, request size, and source ASN, the model learns what constitutes 'normal' protocol behavior. Any interaction that significantly deviates from this learned profile is flagged as an outlier, which could represent a novel or obfuscated attempt at reconnaissance or amplification.
  answer_sources:
  - Zeek dns.log
  - Zeek ntp.log
  - Zeek datagram.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FROM protocol logs (dns, ntp) | EXTRACT features (query_type, request_size, source_ASN) | SCORE with Isolation_Forest_model | ALERT on sessions flagged as strong outliers
- question: Has the inbound traffic volume on our critical UDP services breached a pre-defined static threshold?
  context: This question provides a simple, fail-safe detection mechanism. While dynamic baselines are more sophisticated, a hard, static threshold for maximum tolerated traffic (e.g., 1 Gbps) serves as a critical last line of defense. If statistical or ML models fail or are too slow to react, breaching a high-water mark provides an unambiguous signal of a major volumetric event that requires immediate attention.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: AGGREGATE inbound traffic volume (bytes/sec, packets/sec) on ports 53, 123, 11211 | ALERT if volume > static_threshold (e.g., 1Gbps)
- question: Is there a statistically significant deviation (e.g., >4 sigma) in inbound traffic volume on ports 53, 123, or 11211 compared to the 30-day baseline?
  context: This question focuses on detecting volumetric anomalies using dynamic baselining. By continuously calculating a moving average and standard deviation of traffic volume, the system can adapt to normal fluctuations in traffic (e.g., time of day, day of week). An alert is triggered only when the traffic volume exceeds a highly significant statistical threshold (e.g., 4 standard deviations above the mean), indicating a probable DDoS attack rather than a benign traffic spike.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: AGGREGATE traffic volume (bytes, packets) in 1-min bins for ports 53, 123, 11211 | CALCULATE 30-day moving average and std_dev | ALERT if current_volume > (average + 4 * std_dev) for 2 consecutive bins
- question: Does the observed traffic volume on our critical UDP services significantly deviate from the volume predicted by a time series forecasting model?
  context: This question applies predictive analytics for earlier detection of volumetric attacks. A time series model (like ARIMA or Prophet) learns complex patterns, including seasonality, from historical traffic data to forecast the expected volume for the near future. An alert is generated when the actual observed traffic significantly deviates from the forecasted confidence interval. This can provide an earlier warning than methods that rely on baselines calculated from past data.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FORECAST expected traffic volume and confidence interval for next 5 mins using time_series_model (ARIMA/Prophet) | COMPARE observed_volume to forecast | ALERT if observed_volume > upper_bound_of_confidence_interval
- question: Are we observing connections on our UDP services with an amplification factor exceeding known malicious thresholds?
  context: This question seeks to identify a key physical characteristic of a reflection attack: the amplification factor (response size divided by request size). For certain protocols, legitimate amplification factors are well-understood. This symbolic rule flags any connection where the factor exceeds a known, pre-defined malicious threshold (e.g., >500 for DNS), providing a high-confidence indicator of attack activity.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Zeek conn.log WHERE destination_port IN (53, 123, 11211) | CALCULATE amp_factor = resp_ip_bytes / orig_ip_bytes | ALERT if amp_factor > known_malicious_threshold (e.g., 500 for DNS)
- question: Are there UDP connections exhibiting an amplification factor that is a statistical outlier compared to historical data?
  context: This question extends the concept of analyzing amplification factors by using a statistical approach. Instead of relying on fixed thresholds, it establishes a historical distribution of amplification factors for each service. It then alerts on any new connection where the factor is an extreme outlier (e.g., exceeds the 99.9th percentile). This allows the system to detect anomalous amplification even if it doesn't meet a known malicious threshold, adapting to the specific traffic profile of the monitored service.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each connection on ports 53, 123, 11211 | CALCULATE amp_factor | COMPARE to historical distribution of amp_factors | ALERT if current_amp_factor > 99.9th_percentile
- question: Can we use a clustering algorithm to automatically group and identify connections that exhibit characteristics of a potential reflection attack?
  context: This question applies unsupervised machine learning to group connections based on multiple features, including amplification factor, duration, and packet count. A clustering algorithm like K-Means or DBSCAN can automatically identify distinct groups of connections within the data. Connections that fall into a cluster characterized by high amplification, short duration, and low packet count can be flagged as 'potential reflection attacks' for automated investigation, discovering patterns without predefined labels.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FROM Zeek conn.log | EXTRACT features (amp_factor, duration, packet_count) | APPLY clustering algorithm (DBSCAN) | ALERT on connections assigned to 'potential reflection attack' cluster
- question: Are we seeing an unusually high number of unique source IPs from a single network block (/16) connecting to a specific service port?
  context: This question aims to detect a distributed attack that is sourced from a concentrated network location, such as a single cloud provider or a botnet subnet. By setting a threshold for the number of unique source IPs originating from a single /16 CIDR block within a short time frame, this symbolic rule can catch less sophisticated distributed attacks without needing to calculate complex entropy metrics.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: IN 1-min windows, for each destination_port | GROUP source_ips by /16 CIDR block | COUNT unique source_ips per block | ALERT if unique_count > 500
- question: Has there been a concurrent spike in both source IP entropy and traffic volume for a specific service, indicating a potential DRDoS attack?
  context: This question combines two key indicators of a Distributed Reflection Denial of Service (DRDoS) attack. A spike in traffic volume indicates a volumetric event, while a simultaneous spike in the Shannon entropy of source IP addresses indicates that the traffic is coming from a large and diverse set of sources. The combination of these two statistical anomalies provides a very strong signal that a distributed attack is underway.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: IN 1-min windows | CALCULATE shannon_entropy of source_ips and total_traffic_volume per destination_port | ESTABLISH baseline for entropy and volume | ALERT if entropy_spike AND volume_spike occur concurrently
- question: Can an ensemble machine learning model, combining multiple weak indicators, identify a high-probability DRDoS event?
  context: This question proposes the most advanced detection method, using an ensemble ML model to synthesize multiple, weaker signals into a single, high-confidence alert. Features like traffic volume, source IP entropy, and average amplification factor are fed into a model like XGBoost. The model learns to weigh these features appropriately to generate a unified risk score. A score exceeding a tuned threshold indicates a high probability of a DRDoS event, reducing false positives and increasing detection accuracy for complex attacks.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - DMZ Firewalls
  - Public-facing DNS/NTP/Memcached Servers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: IN 1-min windows | EXTRACT features (traffic_volume, source_ip_entropy, avg_amp_factor) | SCORE with XGBoost_ensemble_model | ALERT if risk_score > tuned_threshold