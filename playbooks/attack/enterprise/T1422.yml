name: T1422: System Network Configuration Discovery
id: f9a8b7c6-d5e4-4f32-8a1b-9c0d1e2f3a4b
description: This playbook helps investigate whether an adversary is discovering the network configuration of corporate mobile devices. It focuses on detecting unauthorized permission grants for sensitive phone state information, anomalous API call frequencies related to network interfaces, and suspicious outbound network connections immediately following new application installations. These activities could indicate an adversary's attempt to map the device's network environment for lateral movement, data exfiltration, or establishing command and control channels.
type: technique
related:
- TA0032: Discovery
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has an unauthorized application been granted the 'READ_PRIVILEGED_PHONE_STATE' permission on any Android device?
  context: This question aims to identify potentially malicious applications that have gained access to sensitive device and subscriber identifiers. The 'READ_PRIVILEGED_PHONE_STATE' permission is highly sensitive and should only be granted to a small, explicit set of trusted system or carrier applications. An alert for an unauthorized grant could be an early indicator of spyware or malware attempting to gather device-specific information for tracking or exploitation.
  answer_sources:
  - Mobile Threat Defense (MTD) Application Scan Logs
  - Mobile Device Management (MDM) Policy Compliance Logs
  - Zeek conn.log
  - Corporate-managed Android mobile device fleet
  - MDM/MTD management servers
  - Network egress points and VPN concentrators
  range: last 90 days
  queries:
  - technology: SIEM Pseudocode
    query: SEARCH MDM/MTD logs WHERE permission = 'READ_PRIVILEGED_PHONE_STATE' AND app_package_name NOT IN (allow_list) | RETURN device_id, app_package_name, timestamp
- question: Following an unauthorized 'READ_PRIVILEGED_PHONE_STATE' permission grant, did the affected device make any statistically rare or new outbound network connections?
  context: This question investigates whether the application that received the sensitive permission is exfiltrating data or communicating with a command-and-control (C2) server. By correlating the permission grant event with network logs and looking for anomalous destinations (low prevalence or entirely new), analysts can pinpoint potential C2 channels. A normal application is unlikely to connect to an endpoint that no other device in the fleet communicates with.
  answer_sources:
  - Mobile Threat Defense (MTD) Application Scan Logs
  - Mobile Device Management (MDM) Policy Compliance Logs
  - Zeek conn.log
  - Corporate-managed Android mobile device fleet
  - MDM/MTD management servers
  - Network egress points and VPN concentrators
  range: last 90 days
  queries:
  - technology: SIEM Pseudocode
    query: SEARCH Zeek conn.log WHERE device_ip = (alerted_device_ip) AND timestamp WITHIN 15m OF (alert_timestamp) | STATS prevalence(destination_ip) across_all_devices | FILTER prevalence < 0.01 OR is_new(destination_ip)
- question: Can we proactively identify high-risk applications requesting the 'READ_PRIVILEGED_PHONE_STATE' permission using a machine learning model?
  context: This question focuses on creating a proactive detection mechanism. Instead of just reacting to unauthorized grants, this approach uses machine learning to assign a risk score to any application requesting the sensitive permission. By analyzing features like developer reputation, install source, and the full set of requested permissions, the model can flag potentially malicious apps before or as they are granted access, allowing for pre-emptive sandboxed analysis.
  answer_sources:
  - Mobile Threat Defense (MTD) Application Scan Logs
  - Mobile Device Management (MDM) Policy Compliance Logs
  - Zeek conn.log
  - Corporate-managed Android mobile device fleet
  - MDM/MTD management servers
  - Network egress points and VPN concentrators
  range: last 90 days
  queries:
  - technology: ML Pseudocode
    query: SCORE application_metadata (category, developer, ratings, permissions) using trained_model | FILTER permission_request = 'READ_PRIVILEGED_PHONE_STATE' AND risk_score > 0.85 | TRIGGER investigation_workflow
- question: Is a known malicious application attempting to discover network interface information on a managed device?
  context: This question provides a high-fidelity, immediate detection opportunity. By checking every application that calls the 'java.net.NetworkInterface' API against a threat intelligence feed of known malware indicators (package names, certificate hashes), we can quickly identify and alert on confirmed malicious activity. This is a crucial first line of defense against known threats attempting to perform network discovery.
  answer_sources:
  - Mobile EDR/MTD API Call Monitoring Logs
  - Zeek conn.log
  - Mobile devices with EDR/MTD agents installed
  - EDR/MTD management servers
  - Network traffic monitoring points
  range: last 90 days
  queries:
  - technology: EDR/MTD Pseudocode
    query: SEARCH MTD API logs WHERE api_call = 'java.net.NetworkInterface' AND (app_package_name IN (threat_intel_list) OR app_cert_hash IN (threat_intel_list)) | ALERT
- question: Is any application exhibiting an anomalous frequency of calls to the 'java.net.NetworkInterface' API compared to its own baseline?
  context: This question seeks to detect novel or unknown malware by focusing on behavioral anomalies. A malicious application, upon execution, may rapidly enumerate all network interfaces to understand the device's connectivity. This would result in a sudden burst of calls to the 'java.net.NetworkInterface' API. By baselining the normal call frequency for each application, we can detect such bursts as statistical outliers, indicating a deviation from normal behavior that warrants investigation.
  answer_sources:
  - Mobile EDR/MTD API Call Monitoring Logs
  - Zeek conn.log
  - Mobile devices with EDR/MTD agents installed
  - EDR/MTD management servers
  - Network traffic monitoring points
  range: last 90 days
  queries:
  - technology: SIEM/Time-Series DB Pseudocode
    query: SEARCH MTD API logs for 'java.net.NetworkInterface' | AGGREGATE count by 1min_interval, app, device | COMPARE current_count to 30day_baseline(app) | ALERT if current_count > (mean + 3*stdev)
- question: For high-value targets, can we use an advanced time-series model to detect subtle, non-obvious deviations in network interface discovery behavior?
  context: This question applies a more sophisticated analytical technique for the most critical assets. A time-series model like an LSTM autoencoder can learn the normal 'rhythm' of API calls over extended periods. An alert is triggered when the current behavior doesn't match the learned normal pattern (high reconstruction error), indicating a sophisticated anomaly that simpler statistical methods might miss. This is valuable for protecting high-value targets from advanced threats.
  answer_sources:
  - Mobile EDR/MTD API Call Monitoring Logs
  - Zeek conn.log
  - Mobile devices with EDR/MTD agents installed
  - EDR/MTD management servers
  - Network traffic monitoring points
  range: last 90 days
  queries:
  - technology: ML Pseudocode
    query: INPUT real_time_api_call_frequency_stream to trained_LSTM_model | CALCULATE reconstruction_error | ALERT if reconstruction_error > dynamic_threshold
- question: Did a newly installed application immediately attempt to connect to a known malicious domain or IP address?
  context: This question looks for the classic 'install-and-callback' behavior of malware. By correlating application installation events with subsequent network traffic, we can check if the new app's first action is to contact a destination on a threat intelligence list. A match provides a very strong signal that the newly installed application is malicious and is attempting to establish a C2 channel.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - MDM/MTD Application Install Logs
  - Organization's network egress points
  - DNS resolvers
  - MDM management servers
  range: last 90 days
  queries:
  - technology: SIEM Pseudocode
    query: JOIN (MDM install logs) with (Zeek logs) on device_id, timestamp (within 5 mins) | CHECK destination_ip, destination_domain against threat_intel_feed | ALERT on match
- question: Following a new application installation, did the device connect to a destination characterized by both a algorithmically generated domain name and low prevalence across the enterprise?
  context: This question aims to detect connections to newly created or dynamically generated C2 infrastructure not yet on threat intelligence feeds. Adversaries often use Domain Generation Algorithms (DGAs), which produce high-entropy, random-looking domain names. The combination of a new app install, followed by a connection to a high-entropy domain and a rare IP, is a powerful heuristic for discovering emerging threats.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - MDM/MTD Application Install Logs
  - Organization's network egress points
  - DNS resolvers
  - MDM management servers
  range: last 90 days
  queries:
  - technology: SIEM Pseudocode
    query: JOIN (MDM install logs) with (Zeek logs) on device_id, timestamp (within 5 mins) | CALCULATE shannon_entropy(dns_query), prevalence(destination_ip) | ALERT if entropy > 3.5 AND prevalence < 0.01
- question: Can we identify anomalous network connections from mobile devices by clustering all connection metadata and flagging outliers?
  context: This question takes an unsupervised machine learning approach to find 'unknown unknowns' in network traffic. By clustering all connections based on features like port, protocol, and data volume, we can define what 'normal' network behavior looks like. Connections that do not fit into any normal cluster are flagged as outliers. These outliers represent statistically unusual activity that could correspond to C2 communication or data exfiltration.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - MDM/MTD Application Install Logs
  - Organization's network egress points
  - DNS resolvers
  - MDM management servers
  range: last 90 days
  queries:
  - technology: ML Pseudocode
    query: INPUT all_mobile_connections (port, protocol, duration, bytes) to DBSCAN_model | IDENTIFY outlier_connections | ALERT for investigation