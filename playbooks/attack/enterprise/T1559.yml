name: T1559: Inter-Process Communication
id: 5a8a1b9e-6b4f-4d8e-9c2a-1f6b8d7e4a3c
description: This playbook addresses the threat of adversaries executing code through various Inter-Process Communication (IPC) mechanisms. It provides investigative steps to detect malicious activity such as the use of suspicious named pipes (identified by name, entropy, or creating process), the spawning of command shells from unusual parent processes like Microsoft Office applications (indicative of DDE abuse), anomalous DCOM/RPC activity suggesting lateral movement, the instantiation of malicious or atypically used COM objects, and the presence of long-lived, low-data TCP connections that may represent custom C2 channels.
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a named pipe been created or connected to that matches a known malicious pipe name from our threat intelligence?
    context: This question aims to identify the use of named pipes with names that are already associated with known malware or adversary tools. Matching against a threat intelligence list is a high-fidelity way to detect specific, known threats that leverage named pipes for communication, command and control, or lateral movement.
    answer_sources:
      - Windows Sysmon Event ID 17
      - Windows Sysmon Event ID 18
      - User Workstations
      - Application Servers
      - Domain Controllers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon events 17, 18 WHERE PipeName IN threat_intel_list GROUP BY Host, Process, PipeName
  - question: Has a named pipe been created with a high-entropy name, especially by an unusual process?
    context: Adversaries often generate random pipe names to avoid static signatures and detection. High Shannon entropy can indicate a randomly generated string. Investigating high-entropy pipe names, particularly when created by processes not typically associated with this behavior (e.g., non-system processes), can uncover novel or obfuscated malware.
    answer_sources:
      - Windows Sysmon Event ID 17
      - User Workstations
      - Application Servers
      - Domain Controllers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon event 17 | CALCULATE entropy of PipeName | WHERE entropy > baseline_threshold AND Process NOT IN (svchost.exe, lsass.exe) | GROUP BY Host, Process, PipeName
  - question: Can machine learning models classify named pipe events as malicious based on features like process name, parent process, and pipe name entropy?
    context: This question explores a more advanced, behavioral approach to detection. By training a machine learning model on various features of named pipe events, we can move beyond simple rules and identify suspicious activity based on a combination of factors that, in isolation, might not be alarming. This helps detect previously unseen threats.
    answer_sources:
      - Windows Sysmon Event ID 17
      - Windows Sysmon Event ID 18
      - User Workstations
      - Application Servers
      - Domain Controllers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY classification model to Sysmon events 17, 18 | FILTER for events classified as 'suspicious' or 'malicious' | REVIEW Process, ParentProcess, PipeName, Entropy
  - question: Has a command shell or script interpreter been launched by a Microsoft Office application or PDF reader?
    context: This is a classic sign of Dynamic Data Exchange (DDE) abuse or malicious macro execution. Office applications and PDF readers should not typically spawn shells or script interpreters. This activity is highly suspicious and often indicates a user has opened a weaponized document.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) fleet
      - Remote Desktop Servers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process creation events WHERE ParentProcess IN (office_apps, pdf_readers) AND ChildProcess IN (shells, script_interpreters)
  - question: Have any statistically rare parent-child process relationships been observed?
    context: Beyond known-bad combinations, adversaries may use legitimate but uncommon processes to launch other tools. By baselining all parent-child process relationships in the environment, we can identify outliers that represent anomalous and potentially malicious execution chains that would be missed by static rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) fleet
      - Remote Desktop Servers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE frequency of all parent-child process pairs | ALERT on pairs with frequency in the bottom 1st percentile
  - question: Has there been an anomalous spike in the number of shell processes spawned by a specific parent process?
    context: This question uses time-series analysis to detect changes in behavior. A parent process that normally never spawns shells (like EXCEL.EXE) suddenly creating one or more is a significant anomaly. This method can detect attacks by focusing on changes from the established baseline for that specific parent.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) fleet
      - Remote Desktop Servers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY time-series model to count of shell processes per parent | ALERT on significant deviations from forecasted baseline
  - question: Is any single host attempting to connect to an unusually large number of other hosts over the DCOM/RPC port (135)?
    context: This behavior, often called "fan-out," is a strong indicator of lateral movement. An adversary who has compromised one host may use DCOM/RPC to scan for or connect to many other systems on the network. A fixed threshold (e.g., >20 hosts in 10 minutes) provides a simple but effective rule for detecting this initial reconnaissance or spread.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Windows Security Event ID 5156
      - East-West traffic between workstations
      - Server-to-workstation traffic lanes
      - Network egress points monitoring port 135
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH network connections on port 135 | COUNT unique destinations per source IP in 10min window | ALERT if count > 20 AND source NOT IN allowlist
  - question: Is any host exhibiting RPC connection behavior that is a statistical outlier compared to its own baseline?
    context: This improves upon a fixed threshold by creating a dynamic baseline for each host. A server that normally communicates with many hosts via RPC won't trigger an alert for a small increase, but a workstation that normally connects to few will trigger an alert if it suddenly connects to many. This tailored approach reduces false positives.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Windows Security Event ID 5156
      - East-West traffic between workstations
      - Server-to-workstation traffic lanes
      - Network egress points monitoring port 135
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: PROFILE hourly RPC fan-out per host | CALCULATE mean and stddev for each host's baseline | ALERT if current fan-out > (mean + 3*stddev)
  - question: Is there an anomalous volume of RPC traffic between network zones?
    context: This question moves the analysis from a per-host level to a network-segment level. A sudden, unexplained increase in RPC traffic between, for example, the workstation and server subnets, could indicate widespread lateral movement activity that might be missed when looking at individual hosts. Time-series forecasting can detect such deviations from the norm.
    answer_sources:
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Windows Security Event ID 5156
      - East-West traffic between workstations
      - Server-to-workstation traffic lanes
      - Network egress points monitoring port 135
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY time-series model to RPC traffic volume between zones | ALERT if observed volume significantly deviates from forecast
  - question: Has a process attempted to instantiate a COM object using a CLSID or DLL known to be malicious or commonly abused?
    context: Adversaries use specific COM objects to execute code, bypass security controls, or achieve persistence. Searching for command-line invocations (like rundll32.exe or PowerShell's New-Object) that reference these known-bad COM object identifiers (CLSIDs) is a direct way to detect their usage.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Windows Sysmon Event ID 10
      - Windows Sysmon Event ID 13
      - User Workstations
      - Application Servers
      - Windows Registry hives (HKCR\CLSID)
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH command lines for 'rundll32.exe' or 'New-Object -ComObject' | EXTRACT CLSID or DLL | ALERT if CLSID/DLL IN threat_intel_list
  - question: Has an execution-related COM object been instantiated by an unusual parent process or at an anomalous frequency?
    context: Certain COM objects are legitimately used for execution by specific processes (e.g., explorer.exe). This question focuses on identifying when these objects are used by an unexpected parent process (e.g., a Microsoft Word macro) or when a legitimate parent creates them at a much higher rate than normal.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Windows Sysmon Event ID 10
      - Windows Sysmon Event ID 13
      - User Workstations
      - Application Servers
      - Windows Registry hives (HKCR\CLSID)
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE parent processes for execution-related COM objects | ALERT if rare parent instantiates object OR if frequency > 99th percentile
  - question: Can a machine learning model identify malicious COM instantiation based on contextual features?
    context: This question proposes a holistic detection method using machine learning. By considering multiple features together—such as the parent process, target CLSID, user context, and command-line arguments—a model can learn the complex patterns of malicious COM abuse, enabling it to detect novel attacks that might not match any specific rule.
    answer_sources:
      - Windows Sysmon Event ID 1
      - Windows Event ID 4688
      - Windows Sysmon Event ID 10
      - Windows Sysmon Event ID 13
      - User Workstations
      - Application Servers
      - Windows Registry hives (HKCR\CLSID)
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY classification model to COM instantiation events | FILTER for events classified as 'malicious' | REVIEW parent process, CLSID, user
  - question: Are there any extremely long-lived, low-data TCP connections on non-standard ports between internal hosts?
    context: This is a classic indicator of a simple, socket-based command-and-control (C2) or IPC channel. Adversaries may establish a connection and keep it open for long periods, sending only small amounts of data. This rule-based approach provides a simple filter to find the most obvious examples of this behavior.
    answer_sources:
      - Zeek conn.log
      - Internal network segments (workstation-to-workstation, server-to-server)
      - DMZ-to-internal traffic
      - VPN user subnets
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH internal TCP connections on non-standard ports | ALERT where duration > 24 hours AND total_bytes < 1MB
  - question: Have any internal TCP connections been identified with a statistically anomalous (low) ratio of data transferred to connection duration?
    context: This question refines the previous one by using a statistical approach instead of fixed thresholds. By calculating a "data-to-duration" ratio for all connections, we can identify outliers that represent connections with unusually low data throughput for their lifespan. This can uncover more subtle C2 channels.
    answer_sources:
      - Zeek conn.log
      - Internal network segments (workstation-to-workstation, server-to-server)
      - DMZ-to-internal traffic
      - VPN user subnets
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE (bytes/duration) ratio for all internal TCP connections | ALERT on connections in the lowest 1st percentile
  - question: Can an unsupervised machine learning model identify anomalous network connections that may represent custom IPC channels?
    context: This is an advanced, unsupervised learning approach. By clustering all network connections based on multiple features (duration, bytes, port), the algorithm can automatically define "normal" traffic. Any connection that doesn't fit into a normal cluster is flagged as an anomaly, making this effective for finding unique adversary communication channels.
    answer_sources:
      - Zeek conn.log
      - Internal network segments (workstation-to-workstation, server-to-server)
      - DMZ-to-internal traffic
      - VPN user subnets
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY DBSCAN clustering to connections using features (duration, bytes, port) | ALERT on connections identified as noise/outliers