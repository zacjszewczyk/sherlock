name: T1583.006: Web Services
id: a2e8c1f0-1b2d-4c3e-a4b5-f6c7d8e9f0a1
description: |
  This playbook focuses on detecting adversaries developing or leveraging resources on external web services (e.g., GitHub, Pastebin, Discord) for malicious purposes. It provides investigative steps to identify suspicious activities such as connections to known malicious indicators on these services, anomalous URI structures, unusual data transfer volumes, suspicious account creation patterns, and access to newly observed, low-prevalence resources. The goal is to uncover malware staging, command and control (C2) channels, data exfiltration, and other resource development activities hosted on legitimate platforms.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any internal hosts connecting to web service URLs, domains, or IP addresses known to be malicious?
    context: |
      This question aims to identify direct connections to known-bad infrastructure hosted on legitimate web services. Correlating outbound network traffic against threat intelligence feeds is a high-fidelity method for detecting initial compromise, C2 communication, or tool retrieval from adversary-controlled accounts on platforms like GitHub or Pastebin. A match indicates a likely security incident requiring immediate investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          SEARCH outbound_network_logs (conn, dns, http) WHERE destination_ip OR destination_domain OR destination_uri IN known_malicious_indicator_feed AND alert_on_match
  - question: Are there any connections to common web services (e.g., GitHub, Pastebin) with unusually high URI entropy?
    context: |
      This question helps detect algorithmically generated domains (AGAs) or randomized URI paths often used by malware for command and control (C2) communications to evade simple blocklists. High entropy in a URI path or its parameters, compared to a baseline of normal traffic, can indicate that the connection is not user-generated and may be part of a C2 channel.
    answer_sources:
      - Zeek http.log
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          FOR EACH connection to common_web_service_domain, CALCULATE shannon_entropy(uri_path, query_params). IF entropy > 99th_percentile_baseline, THEN ALERT.
  - question: Have there been any anomalous spikes in traffic volume to popular web services?
    context: |
      This question seeks to identify significant deviations in the volume of data or number of connections to web services. A sudden, unexpected increase in traffic could signal the activation of a C2 channel, large-scale data staging for exfiltration, or the mass download of malicious tools. Time-series anomaly detection can flag these deviations from established patterns.
    answer_sources:
      - Zeek conn.log
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          MODEL traffic_volume (bytes, connections) to web_service_domains over time. IF actual_volume deviates_significantly from forecast, THEN ALERT.
  - question: Are there any outbound requests to web services with URIs matching known malware patterns or with malicious SSL/TLS fingerprints (JA3/JA3S)?
    context: |
      This question aims to identify C2 or malware staging activity by looking for specific, suspicious structures in URLs (e.g., paths used for raw file access on GitHub) and by fingerprinting the TLS client. Malware often uses predictable URI patterns and may employ non-standard TLS libraries, resulting in unique JA3/JA3S hashes that can be matched against known malicious fingerprints.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          SEARCH http_logs WHERE uri MATCHES regex_patterns_for_malware_staging. SEARCH ssl_logs WHERE ja3_hash OR ja3s_hash IN known_malicious_fingerprints. CORRELATE and ALERT.
  - question: Are users downloading file types from code or file hosting sites that are unusual for their job role?
    context: |
      This question helps detect the retrieval of malicious payloads or stagers. An adversary might trick a user into downloading an executable or script from a site like GitHub. By baselining expected file download activity per user role (e.g., developers download code, HR downloads documents), it becomes possible to flag anomalous behavior, such as an HR employee downloading a PowerShell script. Small file sizes are particularly suspicious as they may be initial stagers.
    answer_sources:
      - Zeek files.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          FOR EACH file_download from code_hosting_site, CHECK IF file_type is_inconsistent_with user_role_baseline. IF inconsistent, THEN ALERT, especially if file_size is small.
  - question: Can any connections to web services be classified as 'suspicious C2-like' based on a combination of network and host features?
    context: |
      This question leverages machine learning to identify complex patterns indicative of C2 activity that may be missed by simpler rules. By training a model on features like URI structure, user-agent rarity, TLS fingerprint, and the initiating parent process, the system can learn to distinguish legitimate traffic from malicious C2 communications that are designed to blend in with normal web service usage.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          EXTRACT features (uri_length, user_agent, ja3_hash, parent_process) for each connection. INPUT features into trained_classifier_model. IF classification is 'suspicious C2-like' with high_confidence, THEN ALERT.
  - question: Is any user rapidly accessing account creation or API key management pages across multiple different web services?
    context: |
      This question is designed to detect an adversary setting up infrastructure using a compromised internal account. A threat actor might register accounts on several services (e.g., a code repository, a cloud provider, a VPS host) in a short period to prepare for an attack. Alerting on this burst of setup activity can provide an early warning.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal Network Segments (User Workstations)
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          SEARCH http_logs FOR uris MATCHING resource_creation_keywords. IF user access > 3 distinct services with matching keywords within 1 hour, THEN ALERT.
  - question: Has any user shown a statistically significant increase in accessing pages related to resource creation compared to their own historical baseline?
    context: |
      This question aims to identify anomalous behavior on a per-user basis. Even if a user's role involves some resource creation, a sudden, sharp increase in this activity could indicate their account has been compromised and is being used by an adversary to build out operational infrastructure. Using a Z-score helps to statistically quantify this deviation from the user's normal behavior.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal Network Segments (User Workstations)
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          FOR EACH user, CALCULATE baseline of visits to resource_creation_pages. IF daily_count > 3 standard_deviations from baseline, THEN ALERT.
  - question: Is any user exhibiting web browsing behavior, specifically related to development or infrastructure services, that is inconsistent with their peer group?
    context: |
      This question uses peer group analysis to spot outliers. Users in similar roles (e.g., the finance team) tend to have similar web browsing patterns. If one user from the finance team suddenly starts accessing developer-focused web services like GitHub or cloud infrastructure portals, it's a strong anomaly that could signal account compromise or an insider threat.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal Network Segments (User Workstations)
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          CLUSTER users by web_browsing_habits. IDENTIFY users whose activity deviates from their cluster, especially with increased visits to dev/infra services. IF deviation is significant, THEN ALERT.
  - question: Has any host uploaded an unusually large file or a rapid succession of small files to a non-corporate web service?
    context: |
      This question targets data exfiltration. A single large upload could be an attempt to steal a large database or archive. Conversely, a series of small, rapid uploads can indicate an attempt to exfiltrate data in smaller chunks to avoid detection by simple volume-based thresholds. Both patterns are highly suspicious when directed at non-sanctioned services.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          SEARCH file_uploads to non-corp_services. IF file_size > 100MB OR upload_count > 10 in 5 minutes, THEN ALERT.
  - question: Are there any data transfers to or from web services that are anomalously large or have unusually high entropy compared to historical baselines?
    context: |
      This question refines data exfiltration and staging detection by creating specific baselines for each host-service interaction. A transfer that is normal for a developer's machine might be anomalous for a server. High data entropy (>7.5) in transferred files is also a strong indicator that the data is encrypted or compressed, a common tactic used by adversaries to obfuscate stolen data before exfiltration.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          FOR EACH host-service_pair, BASELINE transfer_sizes. IF transfer_size > 95th_percentile, THEN ALERT. FOR EACH file_transfer, CALCULATE entropy. IF entropy > 7.5, THEN ALERT.
  - question: Can connection patterns to web services be clustered into anomalous groups, such as 'short duration, high byte count' or 'long duration, low byte count'?
    context: |
      This question uses unsupervised machine learning (clustering) to find novel or unexpected patterns of malicious activity. For example, a 'short duration, high byte count' cluster could represent rapid tool downloads, while a 'long duration, low byte count' cluster is characteristic of a persistent, low-and-slow C2 beaconing channel. This approach can detect threats without prior knowledge of their specific signatures.
    answer_sources:
      - Zeek conn.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          CLUSTER connections to web_services using features (duration, bytes, protocol). IDENTIFY and ALERT on anomalous clusters like 'high-byte/short-duration' or 'low-byte/long-duration'.
  - question: Has a host connected to a URL or FQDN on a high-risk web service for the first time in the organization's history?
    context: |
      This question is based on the 'first seen' principle. Adversaries often set up new repositories, pastes, or subdomains for their campaigns. The very first time any host in an organization accesses such a resource is a moment of high suspicion, as it could be the initial vector for a targeted attack or the first C2 beacon.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          MAINTAIN historical_table of all accessed FQDNs/URLs. SEARCH new requests to high-risk_services. IF FQDN/URL not in historical_table, THEN ALERT.
  - question: For newly observed web service resources, what is the prevalence of access within the organization?
    context: |
      This question helps to filter out benign 'first seen' events (e.g., a popular new blog post) from targeted malicious ones. A legitimate resource is likely to be accessed by many users quickly, while a C2 server or targeted payload is often only accessed by one or a very small number of compromised hosts. Low prevalence is therefore a strong indicator of maliciousness.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          FOR EACH newly_observed_resource, COUNT distinct_internal_hosts accessing it in first 24 hours. IF count is between 1 and 3, THEN ALERT.
  - question: Is there an anomalous spike in the rate of discovery of new subdomains or URL paths for a given web service?
    context: |
      This question aims to detect adversary preparation activity at a macro level. If an attacker is setting up multiple malicious repositories or pages on a service like GitHub Pages, it will cause a surge in the number of 'first seen' URLs from that parent domain. A time-series model can detect this surge, flagging that an adversary may be building out infrastructure for a campaign.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - search: pseudocode
        query: |
          MODEL rate_of_new_resource_discovery per parent_domain over time. IF actual_rate significantly_exceeds forecast, THEN ALERT.