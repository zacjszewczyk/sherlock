name: "T1564: Hide Artifacts"
id: "5e9f1b2c-8d7e-4a6f-a1b3-c4d5e6f7a8b9"
description: "This playbook helps investigators determine if an adversary is attempting to hide their activity to evade detection. It focuses on identifying the use of artifact-hiding techniques, such as executing known hiding tools or rootkits, using command-line utilities to hide files (e.g., attrib.exe, icacls.exe) or manipulate Alternate Data Streams (ADS), performing timestomping to alter file metadata, launching processes from unusual or hidden locations that make suspicious outbound network connections, and creating user accounts or scheduled tasks with randomized or typosquatted names."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Have any processes or files been created that match the names or hashes of known artifact-hiding tools or rootkits?"
    context: "This question aims to directly detect the execution or presence of malicious tools specifically designed to conceal an adversary's activities. Identifying tools like Slacker, Transmo, or various rootkits via process creation (Event ID 4688) or file creation (Event ID 4663) is a high-fidelity indicator of a defense evasion attempt. An alert on such a match provides a strong starting point for an investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "All Windows Endpoints, All Windows Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events OR file_creation_events WHERE (process_name IN known_hiding_tools_list OR file_hash IN known_rootkit_hashes)"
  - question: "Are there any unusual parent-child process relationships or potentially typosquatted process names that suggest hidden execution?"
    context: "Adversaries often abuse legitimate processes to launch malicious tools, a technique known as masquerading. This question looks for statistical anomalies, such as an office application (e.g., Word, Outlook) spawning a command shell, which is highly irregular. It also seeks to identify typosquatting, where an adversary names a malicious tool very similarly to a legitimate system process (e.g., 'svch0st.exe' instead of 'svchost.exe') to blend in. Detecting these statistical deviations can uncover hidden activities that symbolic checks might miss."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, All Windows Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events WHERE (parent_process IN [word.exe, outlook.exe] AND child_process IN [cmd.exe, powershell.exe]) OR (levenshtein_distance(process_name, system_process_list) <= 2)"
  - question: "Can we identify process creation events that are likely to be malicious tool executions based on a combination of features like name entropy, command-line complexity, and parent process rarity?"
    context: "This question leverages machine learning to build a more nuanced detection capability. By training on known good and bad process events, the model learns complex patterns associated with malicious behavior, such as unusually long or random command-line arguments, execution by a rare parent process, or high-entropy process names. This approach helps find novel or obfuscated hiding techniques that don't match simple rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, All Windows Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SCORE process_creation_events USING classification_model(features=[entropy(process_name), length(command_line), entropy(command_line), rarity(parent_process)]) WHERE score > threshold"
  - question: "Are there any command-line executions using utilities like 'attrib.exe', 'icacls.exe', or PowerShell to hide files, deny access, or manipulate Alternate Data Streams (ADS)?"
    context: "Adversaries frequently use built-in Windows tools ('living off the land') to hide their artifacts. This question seeks to detect specific command-line patterns indicative of this behavior. For example, 'attrib.exe +h' makes a file hidden, 'icacls.exe /deny' can block security tools from accessing a file, and PowerShell or 'type' commands can be used to write malicious code into an ADS, which is a hidden stream of data attached to a file. Finding these specific command patterns is a strong indicator of defense evasion."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, File Servers, Application Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events WHERE command_line MATCHES REGEX ('attrib\\.exe.*\\+h' OR 'icacls\\.exe.*\\/deny' OR 'Set-Content.*-Stream' OR 'type .*>.*:.*')"
  - question: "Are legitimate system utilities like 'attrib.exe', 'icacls.exe', or 'powershell.exe' being used with statistically rare or unusual command-line arguments?"
    context: "While adversaries use legitimate tools, their methods of use are often abnormal. This question focuses on identifying these statistical outliers. By baselining the common command-line arguments for utilities over time, we can flag new, rare combinations. An administrator might use 'icacls.exe' for routine tasks, but using it with a '/deny' flag against a system file is highly unusual and suspicious. This approach helps find abuse of legitimate tools without relying on exact, predefined malicious patterns."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, File Servers, Application Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events FOR utilities IN [attrib.exe, icacls.exe, powershell.exe] | CALCULATE frequency of command_line_arguments | FILTER frequency < 5th_percentile"
  - question: "Can we detect anomalous command-line structures that deviate from normal patterns using an unsupervised machine learning model?"
    context: "This question applies unsupervised learning to find 'unknown unknowns' in command-line data. A model like a variational autoencoder or isolation forest learns the deep structure of what constitutes a 'normal' command. When an adversary uses a novel or heavily obfuscated command, it won't fit this learned structure and will be flagged as an anomaly. This is powerful for detecting new or evolving techniques for hiding artifacts via the command line."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, File Servers, Application Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SCORE process_creation_events USING anomaly_detection_model(features=tokenize(command_line)) WHERE anomaly_score > threshold"
  - question: "Has a known timestomping tool or PowerShell command been executed immediately before a file's metadata was modified on the same host?"
    context: "Timestomping is a technique used to modify the timestamps of a file to make it look older, blending in with legitimate system files and evading timeline-based analysis. This question uses a correlation rule to link the execution of a tool capable of timestomping with an actual file modification event happening moments later on the same machine. This direct, time-based correlation provides strong evidence that timestomping has occurred."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Windows PowerShell Event ID 4104"
      - "Critical System Directories (e.g., System32), User Profile Directories, Temporary File Locations"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "CORRELATE process_creation_events (for timestomp_tools) WITH file_modification_events ON host WHERE time_difference < 5_seconds"
  - question: "Have any files been modified in a way that their new timestamp is in the past, or exactly matches the timestamp of an unrelated system file?"
    context: "This question looks for the statistical artifacts left behind by timestomping. Normally, a file's modification timestamp should be very close to the time of the event that modified it. If the new timestamp is significantly in the past, it's a clear sign of manipulation. Another common tactic is to copy the timestamp from a legitimate system file (like kernel32.dll) to make a malicious file appear as part of the OS. Detecting these statistical impossibilities can uncover timestomping without seeing the tool that performed it."
    answer_sources:
      - "Windows Event ID 4663"
      - "Critical System Directories (e.g., System32), User Profile Directories, Temporary File Locations"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH file_modification_events | CALCULATE delta = new_modified_timestamp - event_timestamp | FILTER delta < 0 OR new_modified_timestamp IN (SELECT timestamp FROM system_files)"
  - question: "Are there any anomalies in the time-series data of file metadata that indicate a timestamp has been unnaturally altered?"
    context: "This question treats file timestamps as a time-series and applies anomaly detection to find deviations. File timestamps should naturally progress forward monotonically. A time-series model (like ARIMA) can learn this expected progression. Any event that causes a timestamp to go backward or jump to a value that is statistically impossible based on its history would be flagged as an anomaly. This advanced method is highly effective at detecting subtle metadata manipulation."
    answer_sources:
      - "Windows Event ID 4663"
      - "File Integrity Monitoring logs"
      - "Critical System Directories (e.g., System32), User Profile Directories, Temporary File Locations"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SCORE file_modification_events USING time_series_model(feature=file_timestamps) WHERE anomaly_score > threshold"
  - question: "Has a process launched from a suspicious or hidden directory (e.g., Recycle Bin, Temp folders, ADS) made an outbound network connection to a known malicious IP address?"
    context: "Adversaries often place their malware in non-standard or hidden locations to avoid scrutiny. When this malware executes, it typically needs to establish a command and control (C2) channel. This question correlates two high-confidence indicators: execution from a suspicious location and communication with a known-bad destination. A successful correlation provides strong evidence of a malicious implant attempting to 'phone home.'"
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Zeek conn.log"
      - "All Windows Endpoints, Network Egress Points (Firewalls, Proxies), DNS Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "CORRELATE process_creation_events (where path matches suspicious_locations_regex) WITH network_connection_events (where destination_ip IN threat_intel_feed) ON host, time"
  - question: "Are there any processes with a high composite risk score, based on a combination of rare execution paths, non-standard network behavior, and other suspicious attributes?"
    context: "This question moves beyond single indicators to a risk-based approach. It calculates the statistical rarity of a process's execution path and combines it with other suspicious factors like the process being unsigned or communicating over an unusual port. A process that accumulates a high composite risk score is highly likely to be malicious, even if no single attribute is definitively 'bad.'"
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Zeek conn.log"
      - "All Windows Endpoints, Network Egress Points (Firewalls, Proxies), DNS Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH process_creation_events | SCORE risk = rarity(path) + is_unsigned(process) + is_non_standard(port) + is_new(destination_ip) | FILTER risk > threshold"
  - question: "Can we identify suspicious chains of activity, such as a process from a rare file path connecting to a new external IP, using a graph-based machine learning model?"
    context: "This question uses a graph-based approach to model the complex relationships between entities (processes, files, IPs). By representing activity as a graph, a Graph Neural Network (GNN) can learn 'normal' interaction patterns. It can then identify and score anomalous subgraphs, such as the sequence of a file in a temp directory spawning a process that connects to a new domain. This method excels at finding complex, multi-stage attack behaviors."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Zeek conn.log"
      - "All Windows Endpoints, Network Egress Points (Firewalls, Proxies), DNS Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "CONSTRUCT graph from process, file, network events | SCORE subgraphs using GNN_anomaly_detector | FILTER score > threshold"
  - question: "Have any new user accounts or scheduled tasks been created with names that are typosquatted versions of legitimate system or service accounts?"
    context: "Adversaries create accounts or scheduled tasks with names very similar to legitimate ones (e.g., 'Administartor') to blend in and achieve persistence. This question aims to detect this 'typosquatting' by calculating the Levenshtein distance (a measure of string similarity) between new account/task names and a list of known-good, critical names. A low distance (e.g., 1 or 2) indicates a likely attempt to masquerade."
    answer_sources:
      - "Windows Event ID 4720"
      - "Windows Event ID 4698"
      - "Domain Controllers, Active Directory Servers, All Windows Endpoints and Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH account_creation_events OR task_creation_events | CALCULATE distance = levenshtein_distance(new_name, critical_names_list) | FILTER distance <= 2"
  - question: "Have any new user accounts or scheduled tasks been created with names that have an unusually high degree of randomness (high entropy)?"
    context: "Adversaries may use randomly generated names for accounts or tasks created by their tools. These names often look like gibberish (e.g., 'x7z2k9p') and have high Shannon entropy. This question focuses on calculating the entropy for each new name and comparing it to a baseline of normal names in the environment. A name with an entropy score in the top percentile is statistically anomalous and likely machine-generated, warranting investigation."
    answer_sources:
      - "Windows Event ID 4720"
      - "Windows Event ID 4698"
      - "Domain Controllers, Active Directory Servers, All Windows Endpoints and Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SEARCH account_creation_events OR task_creation_events | CALCULATE entropy_score = shannon_entropy(new_name) | FILTER entropy_score > 95th_percentile"
  - question: "Can we detect anomalous new account or scheduled task names that do not conform to the patterns of known legitimate names using a machine learning model?"
    context: "This question employs a one-class classification model (like a one-class SVM) to build a sophisticated profile of what 'normal' account and task names look like. The model is trained exclusively on known-good names, learning their typical characteristics. When a new name is created, the model determines if it fits within this learned profile. Any name classified as an 'outlier' is flagged as suspicious, allowing for the detection of both typosquatted and randomized names."
    answer_sources:
      - "Windows Event ID 4720"
      - "Windows Event ID 4698"
      - "Domain Controllers, Active Directory Servers, All Windows Endpoints and Servers"
    range: "last 90 days"
    queries:
      - technology: "Pseudocode"
        query: "SCORE new account/task names USING one_class_svm_model(features=[length, ngrams, entropy]) WHERE classification == 'outlier'"