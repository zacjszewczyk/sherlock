name: "T1505: Server Software Component"
id: "e2b8c5a4-9e1f-4d3c-8a7b-6f9d0e1a2b3c"
description: "This playbook helps investigate whether an adversary is maintaining persistence by abusing server software components. This involves detecting the addition or modification of components like web shells, application plugins, or server extensions on critical servers. Such activity can be identified by monitoring for new script files (.aspx, .php, .jsp) being written to web directories, especially by unexpected processes; observing server application processes (e.g., w3wp.exe, sqlservr.exe) spawning command shells or reconnaissance tools; identifying anomalous outbound network connections from servers that may indicate C2 communication; and detecting unauthorized modifications to critical server configuration files (e.g., web.config, httpd.conf)."
type: "technique"
related:
  - "TA0003: Persistence"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are known malicious web shells or backdoors being written to web or application server directories?"
    context: "This question seeks to identify persistence attempts where an adversary places a pre-identified malicious file (like a web shell) onto a server. By querying for file creation events for specific script types (.aspx, .jsp, etc.) in sensitive web directories and comparing their hashes against threat intelligence, we can detect known threats with high confidence. This is a direct, signature-based approach to finding malicious server components."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Zeek files.log"
      - "Web root, application plugin, and server extension directories on public-facing and internal web/application servers (e.g., C:\\inetpub\\wwwroot\\, /var/www/html/, SharePoint 'Layouts', Confluence 'plugins-installed')."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Search file creation events in web directories for extensions (.aspx, .jsp, .php, .dll). | For each file, get hash. | Compare hash against threat intel feed. | Alert on match."
  - question: "Are there statistically unusual file write events in web or application server directories, based on the parent process or file extension?"
    context: "Adversaries may use legitimate but uncommon processes (like cmd.exe) to write malicious files, or use file types not typically seen in a given directory. This question aims to find these outliers by baselining normal activity. By profiling which processes write which file types to sensitive directories, we can flag events that deviate significantly from the established norm, potentially indicating a novel or evasive persistence technique."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Zeek files.log"
      - "Web root, application plugin, and server extension directories on public-facing and internal web/application servers (e.g., C:\\inetpub\\wwwroot\\, /var/www/html/, SharePoint 'Layouts', Confluence 'plugins-installed')."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "For each server, profile historical parent processes and file extensions for writes to web directories. | Monitor new file write events. | If parent process or file extension frequency is in the bottom 5th percentile, flag as anomalous."
  - question: "Can a machine learning model classify new file creation events in web or application server directories as malicious?"
    context: "This question leverages a supervised machine learning model to provide a more nuanced detection than simple rules or statistical thresholds. By training a classifier on features like the parent process, file path entropy, and file size, the model learns the complex patterns of both legitimate and malicious file writes. This allows it to identify sophisticated attacks that might otherwise evade detection."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Zeek files.log"
      - "Web root, application plugin, and server extension directories on public-facing and internal web/application servers (e.g., C:\\inetpub\\wwwroot\\, /var/www/html/, SharePoint 'Layouts', Confluence 'plugins-installed')."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "For new file write events in web directories, extract features (parent process, path entropy, file extension, size, time). | Score event with trained Random Forest model. | Alert if score > 0.9."
  - question: "Is a known web server process (e.g., w3wp.exe, httpd.exe) writing a script file into its own content directories?"
    context: "Web server processes should typically serve content, not create it. This question focuses on the suspicious behavior of a web server process itself writing a new scriptable file (.aspx, .php, etc.) to a directory it manages. This is a strong indicator of a web shell being dropped through a vulnerability in the web application itself."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Zeek http.log"
      - "File systems of public-facing web servers, particularly world-writable directories and web root folders."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Monitor file creation events. | Alert if parent process is a web server process (w3wp.exe, httpd.exe) AND file has a script extension (.aspx, .php) AND location is within a web content directory."
  - question: "Are web server processes writing files with statistically anomalous filenames or sizes?"
    context: "Adversaries often use randomly generated filenames for their tools and web shells to avoid simple signature-based detection. This question aims to detect this behavior by analyzing the entropy (randomness) of filenames. A high entropy score, or a file size that is a significant outlier compared to similar files, suggests the file is not a standard component and warrants investigation."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Zeek http.log"
      - "File systems of public-facing web servers, particularly world-writable directories and web root folders."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "For files written by web server processes, calculate filename Shannon entropy. | Alert if entropy > 3.0. | Also, compare file size to historical mean for that file type. | Alert if size > 3 standard deviations from mean."
  - question: "Can an unsupervised machine learning model detect anomalous file-write activities by web server processes?"
    context: "This question uses an unsupervised model, like an Isolation Forest, to identify novel or unusual file-write events without relying on pre-labeled malicious data. The model learns the profile of 'normal' activity based on features like file path, size, and associated HTTP requests. Any event that significantly deviates from this learned normal profile is flagged as a potential threat, making this approach effective against zero-day exploits or custom malware."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Zeek http.log"
      - "File systems of public-facing web servers, particularly world-writable directories and web root folders."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Train Isolation Forest model on legitimate web server file-write features (path, extension, size, HTTP method). | Score new file-write events in real-time. | Alert on events flagged as significant anomalies."
  - question: "Are server application processes (e.g., w3wp.exe, sqlservr.exe) spawning suspicious child processes like cmd.exe or powershell.exe?"
    context: "Server applications like web or database servers should not typically spawn command shells or reconnaissance tools. This question looks for this explicit, high-confidence indicator of compromise. If a process like 'sqlservr.exe' spawns 'whoami.exe', it strongly suggests that an attacker has achieved code execution and is performing discovery."
    answer_sources:
      - "Windows Event ID 4688"
      - "Process execution logs on all critical servers, including web servers, database servers, application servers, and domain controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Monitor process creation events. | Alert if ParentProcessName is a server app (w3wp.exe, sqlservr.exe) AND ProcessName is a sensitive utility (cmd.exe, powershell.exe) AND command line does not match an allowlisted script."
  - question: "Are server applications spawning child processes that are statistically rare or have never been seen before?"
    context: "Beyond a simple blocklist of child processes, this question seeks to identify anomalous behavior by baselining all parent-child process relationships on a server. An attacker might use a legitimate but rarely used tool to evade detection. By alerting on process pairs or command-line arguments that are infrequent or entirely new, we can detect deviations from normal administrative and application behavior."
    answer_sources:
      - "Windows Event ID 4688"
      - "Process execution logs on all critical servers, including web servers, database servers, application servers, and domain controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Baseline all parent-child process relationships and arguments for server apps over 30 days. | Monitor new process creation events. | Alert if a new parent-child-argument combination is observed or its frequency is in the bottom 5th percentile."
  - question: "Can a machine learning model predict whether a process creation event originating from a server application is malicious?"
    context: "This question applies a supervised learning model to the complex task of identifying malicious process execution. By analyzing a rich set of features including the processes involved, command-line characteristics (length, entropy), and user context, the model can learn to distinguish between benign administrative tasks and malicious attacker activity with greater accuracy than static rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "Process execution logs on all critical servers, including web servers, database servers, application servers, and domain controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "For each server process creation event, extract features (parent name, child name, cmdline length/entropy, user). | Score the event with a trained Gradient Boosting model. | Alert on high-risk scores."
  - question: "Are server processes making outbound network connections to known malicious destinations?"
    context: "This question aims to detect command and control (C2) communication by cross-referencing outbound network traffic from critical servers against threat intelligence. A connection from a server to an IP or domain known to be a C2 server, a TOR exit node, or a newly registered domain (NRD) is a high-fidelity indicator of a compromise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Windows Event ID 5156"
      - "Network traffic logs at the network egress (e.g., firewalls, proxies) and host-level network monitoring on critical servers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Filter network connection and DNS logs for traffic from critical servers. | Compare destination IPs and domains against threat intel feeds (C2, NRDs, TOR). | Alert on any match."
  - question: "Are server processes exhibiting statistically anomalous outbound network behavior, such as connecting to rare destinations or beaconing?"
    context: "Attackers often use C2 infrastructure that is not yet on a threat intelligence list. This question seeks to find these unknown C2 channels by identifying statistical anomalies. This includes connections to very rare autonomous systems (ASNs) or traffic patterns that exhibit regular, machine-like 'beaconing' behavior (connections with very low jitter), which is characteristic of malware callbacks."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Windows Event ID 5156"
      - "Network traffic logs at the network egress (e.g., firewalls, proxies) and host-level network monitoring on critical servers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Baseline outbound connection patterns (dest ASN, port) for each server process. | Alert if a new connection's destination ASN is in the bottom 1% of prevalence. | Analyze time between connections to the same destination; alert if the standard deviation is very low (beaconing)."
  - question: "Can machine learning models detect anomalies in outbound network traffic volume or connection patterns from critical servers?"
    context: "This question employs machine learning to detect subtle changes in network behavior that might indicate data exfiltration or C2. A time-series model can forecast expected data volumes and alert on significant excess, while a clustering model can group connections by their metadata, automatically identifying small, distinct clusters that represent anomalous activity different from the bulk of normal traffic."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Windows Event ID 5156"
      - "Network traffic logs at the network egress (e.g., firewalls, proxies) and host-level network monitoring on critical servers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Forecast outbound data volume per hour using a SARIMA model; alert if actual volume exceeds the 99% confidence interval. | Cluster connection metadata (port, protocol, duration, bytes) using DBSCAN; alert on small, outlier clusters."
  - question: "Are critical server configuration files (e.g., web.config, httpd.conf) being modified by unauthorized processes?"
    context: "Modification of critical configuration files is a powerful persistence mechanism, allowing an attacker to alter server behavior. This question uses a direct, rule-based approach to detect this. By enabling file system auditing on a watchlist of key files, we can alert on any write operation that doesn't originate from a pre-approved administrative tool or deployment script, indicating a potential unauthorized change."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "File system audit logs on directories containing configuration files for all web, application, and database servers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Enable file system auditing on critical config files. | Monitor for 'WriteData' or 'AppendData' events. | Alert if the modifying ProcessName is not on an approved allowlist."
  - question: "Are server configuration files being modified at unusual times or by unusual user accounts?"
    context: "Legitimate changes to configuration files typically happen within predictable patterns, such as during scheduled maintenance windows or by specific administrative accounts. This question aims to detect unauthorized changes by identifying statistical deviations from these patterns. A modification made by a user who has never touched the file before, or a change occurring outside of normal business/maintenance hours, is highly suspicious."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "File system audit logs on directories containing configuration files for all web, application, and database servers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Baseline users, processes, and times for config file modifications. | Alert if a modification occurs outside a defined maintenance window. | Alert if the modifying user is statistically rare or has never modified the file before."
  - question: "Can a machine learning model distinguish between legitimate and suspicious modifications to server configuration files?"
    context: "This question uses an advanced anomaly detection model (a variational autoencoder) to build a sophisticated profile of what a 'normal' configuration change looks like. By considering a combination of features like the user, their source IP, the process used, and the time of day, the model can identify changes that do not conform to the established pattern of legitimacy, flagging them as potential threats even if they don't violate a simple rule."
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "File system audit logs on directories containing configuration files for all web, application, and database servers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: "Train a VAE model on features of legitimate config file modifications (user, source IP, process, time). | Score new modification events based on their reconstruction error. | Alert on events with a high reconstruction error."