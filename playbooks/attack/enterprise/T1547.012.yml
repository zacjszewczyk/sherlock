name: T1547.012: Print Processors
id: 3e8f4a1b-9c2d-4e6f-8a0b-1d7c6e9a5b3c
description: >
  This playbook is designed to detect adversarial activity related to the MITRE ATT&CK technique T1547.012, where adversaries abuse Windows Print Processors for persistence and privilege escalation. It focuses on identifying the installation of malicious print processor DLLs, which are loaded by the high-privileged Print Spooler service (spoolsv.exe). Investigative steps include monitoring for suspicious file creation in the print processor directory, analyzing loaded DLLs for invalid signatures or high entropy, correlating file and registry modifications, detecting anomalous child processes or network connections from spoolsv.exe, and identifying unauthorized modifications to print processor registry keys.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are malicious files being created in the system's print processor directory?
    context: >
      This question looks for file creation events in the `\spool\prtprocs\` directory. The goal is to identify malware by comparing file hashes against known malicious signatures from threat intelligence feeds. A match strongly indicates an adversary has placed a malicious DLL to be loaded by the print spooler service for persistence.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 4663
      - File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_creation_events WHERE target_filename CONTAINS '\spool\prtprocs\' | LOOKUP file_hash AGAINST threat_intel_feeds | RETURN events WHERE match_found
  - question: Are files with unusually high-entropy names being created in the print processor directory?
    context: >
      This question aims to detect malware that uses randomized or algorithmically generated filenames to evade simple signature-based detection. By establishing a baseline for legitimate print processor filenames (like 'winprint.dll') and calculating the Shannon entropy for new files, we can flag names that are statistically anomalous, suggesting an attempt to hide a malicious payload.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 4663
      - File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_creation_events WHERE target_filename CONTAINS '\spool\prtprocs\' | CALCULATE shannon_entropy(filename) | COMPARE entropy_score to baseline_threshold (e.g., 95th percentile) | RETURN events WHERE score > threshold
  - question: Can we use machine learning to classify file creation events in the print processor directory as malicious?
    context: >
      This question proposes a more advanced detection method using a machine learning classifier. By training a model on features like filename entropy, file size, the parent process, and hash novelty, the system can automatically score and flag new file creations that exhibit characteristics of known malicious activity, reducing analyst workload and improving detection of novel threats.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 4663
      - File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.
    range: last 90 days
    queries:
      - pseudocode: FOR new_file_event in '\spool\prtprocs\': EXTRACT features (entropy, size, parent_process, hash_novelty) | INPUT features into trained_classifier | RETURN event IF classification is 'malicious'
  - question: Is the print spooler service loading unsigned DLLs, or is a script interpreter writing to the print processor directory?
    context: >
      This question focuses on two suspicious behaviors. First, it checks if spoolsv.exe loads any unsigned or invalidly signed DLLs, a common characteristic of malicious payloads. Second, it correlates this with file writes to the print processor directory by unusual processes like PowerShell or cmd.exe, which are not typical software installers and suggest direct manipulation by an attacker.
    answer_sources:
      - Windows Event ID 7
      - Windows Event ID 11
      - Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.
    range: last 90 days
    queries:
      - pseudocode: SEARCH module_load_events WHERE process_name = 'spoolsv.exe' AND (is_signed = false OR signature_status != 'Valid') | CORRELATE with file_creation_events in '\spool\prtprocs\' WHERE writing_process IN ('powershell.exe', 'cmd.exe')
  - question: Is an uncommon process writing files to the print processor directory?
    context: >
      This question seeks to identify anomalous activity by baselining which processes normally write to the print processor directory (e.g., 'msiexec.exe'). Any process writing to this sensitive location that is statistically rare or has never been seen before is highly suspicious and could indicate an adversary is bypassing normal installation mechanisms to plant a persistent payload.
    answer_sources:
      - Windows Event ID 7
      - Windows Event ID 11
      - Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.
    range: last 90 days
    queries:
      - pseudocode: BASELINE parent_processes writing to '\spool\prtprocs\' over 90 days | CALCULATE frequency of each parent_process | SEARCH for new file writes to the directory | RETURN events WHERE parent_process_frequency < 1%
  - question: Can we detect anomalous DLLs loaded by the print spooler service using clustering algorithms?
    context: >
      This question explores using unsupervised machine learning to find malicious DLLs without prior signatures. By clustering all DLLs loaded by spoolsv.exe based on features like signature status, filename entropy, and file path, malicious DLLs will likely appear as outliers or form their own small, distinct clusters, separating them from the large clusters of legitimate system and driver files.
    answer_sources:
      - Windows Event ID 7
      - Windows Event ID 11
      - Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.
    range: last 90 days
    queries:
      - pseudocode: GATHER features (signature_status, filename_entropy, file_path) for all DLLs loaded by 'spoolsv.exe' | APPLY DBSCAN clustering algorithm | RETURN events identified as outliers/noise
  - question: Has a file creation in the print processor directory been immediately followed by a corresponding registry modification?
    context: >
      This question looks for a specific, tightly-coupled sequence of events that is highly indicative of an automated attack script. It correlates a file being written to the `\spool\prtprocs\` directory with a subsequent registry modification within a very short time frame (e.g., 60 seconds) that registers that new file as a print processor. This pattern is uncommon for legitimate installations and strongly suggests malicious activity.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 4657
      - Registry and file system audit logs from all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: CORRELATE file_creation_events in '\spool\prtprocs\' with registry_set_events in '\Print Processors\' ON same host WHERE time_delta < 60s AND registry_data CONTAINS filename
  - question: Is the time between a file write to the print processor directory and its registration abnormally short?
    context: >
      This question applies statistical analysis to the timing of an adversary's actions. By establishing a baseline for the normal time delay between a print processor file being created and the corresponding registry key being set, we can flag instances where this action happens significantly faster than normal. An unusually short delay suggests automated scripting rather than a typical, multi-step installation process.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 4657
      - Registry and file system audit logs from all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: CALCULATE baseline_time_delta for file-write-to-registry-write sequences | MONITOR for new sequences | RETURN sequence IF time_delta is > 3 standard deviations shorter than baseline
  - question: Can we detect abnormal installation event sequences using a sequence analysis model?
    context: >
      This question proposes using a sequence model like a Hidden Markov Model (HMM) to learn the entire sequence of events associated with legitimate software installations. The model can then analyze new streams of host events (file creates, registry sets, process starts) and assign a probability score. Sequences that receive a low score, such as a direct file-write-to-registry-write without any installer process activity, deviate from the norm and can be flagged as suspicious.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 4657
      - Registry and file system audit logs from all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: TRAIN HMM on event sequences from known-good software installations | FEED new host event streams into the model | RETURN sequences with a low probability score
  - question: Is the print spooler service making outbound network connections to known malicious destinations?
    context: >
      This question addresses the possibility that a compromised print spooler service is being used for command and control (C2). It involves monitoring all network connections initiated by spoolsv.exe and comparing the destination IP address or domain name against threat intelligence feeds. A match, or a connection to a destination not on an established allowlist, is a high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_connections WHERE process_name = 'spoolsv.exe' | ENRICH destination IP/domain | LOOKUP destination AGAINST C2_threat_intel_feeds | RETURN events WHERE match_found
  - question: Is the print spooler service making high-risk network connections based on rarity?
    context: >
      This statistical question aims to identify suspicious network activity from spoolsv.exe without relying solely on known-bad indicators. It calculates a risk score for each connection based on the combined rarity of its attributes (destination IP, port, domain, JA3/JA3S hash). Connections with a high aggregate score, indicating they are composed of many uncommon elements, are flagged as anomalous and potentially malicious.
    answer_sources:
      - Windows Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.
    range: last 90 days
    queries:
      - pseudocode: FOR each connection from 'spoolsv.exe', calculate risk_score = sum(inverse_frequency(dest_ip), inverse_frequency(dest_port), ...) | RETURN connection IF risk_score > 98th_percentile
  - question: Is the print spooler service exhibiting network traffic patterns indicative of a C2 heartbeat?
    context: >
      This question uses time-series analysis to detect the subtle, periodic network traffic (or 'heartbeat') characteristic of C2 communication. By modeling the normal volume, frequency, and size of network connections from spoolsv.exe on each host, the model can identify significant deviations, such as a new, regular, low-volume connection pattern that suggests a malicious implant is calling home.
    answer_sources:
      - Windows Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.
    range: last 90 days
    queries:
      - pseudocode: TRAIN SARIMA model on historical 'spoolsv.exe' network traffic per host | FORECAST expected traffic patterns | RETURN alerts WHEN actual traffic significantly deviates from forecast
  - question: Is the spoolsv.exe process loading a DLL whose hash matches a known malicious indicator?
    context: >
      This is a direct, high-confidence check for privilege escalation. Since spoolsv.exe runs with SYSTEM privileges, tricking it into loading a malicious DLL grants the adversary code execution at the highest privilege level. This query continuously monitors all DLLs loaded by the process and compares their hashes against a threat intelligence database of known malware.
    answer_sources:
      - Windows Event ID 7
      - Process module load logs on all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH module_load_events WHERE process_name = 'spoolsv.exe' | LOOKUP loaded_dll_hash AGAINST malware_hash_database | RETURN event IF match_found
  - question: Is the spoolsv.exe process loading a DLL that appears to be packed or encrypted?
    context: >
      Adversaries often pack or encrypt their malware to evade signature-based detection. This results in high file entropy. This question statistically analyzes the entropy of every DLL loaded by spoolsv.exe. DLLs with unusually high entropy, deviating significantly from the baseline of legitimate system files, are flagged as suspicious and potentially malicious packed code.
    answer_sources:
      - Windows Event ID 7
      - Process module load logs on all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: FOR each DLL loaded by 'spoolsv.exe', CALCULATE file_entropy | ESTABLISH baseline entropy for legitimate DLLs | RETURN event IF entropy is an outlier (e.g., > 7.5 or > 3 std dev from mean)
  - question: Can we classify DLLs loaded by spoolsv.exe as suspicious based on their attributes?
    context: >
      This question uses a machine learning classifier to automate the detection of malicious DLLs loaded for privilege escalation. The model is trained on features like whether the DLL is signed, the validity of its signature, its file entropy, and whether it's located in a standard system directory. This allows for the automatic flagging of suspicious load events for analyst review.
    answer_sources:
      - Windows Event ID 7
      - Process module load logs on all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: FOR each DLL loaded by 'spoolsv.exe', EXTRACT features (is_signed, signature_status, entropy, path) | INPUT features into trained_classifier | RETURN event IF classification is 'suspicious'
  - question: Is a non-administrative user or non-installer process modifying the Print Processors registry hive?
    context: >
      Legitimate modifications to the Print Processors registry hive are typically performed by the SYSTEM account or by known software installer processes. This question creates a rule to detect when this sensitive registry location is modified by any other user or process, which is a strong indicator that an adversary is attempting to register a malicious DLL to achieve privilege escalation.
    answer_sources:
      - Windows Event ID 13
      - Windows Event ID 4657
      - Registry audit logs on all Windows endpoints and servers, especially high-value assets.
    range: last 90 days
    queries:
      - pseudocode: SEARCH registry_write_events WHERE target_key CONTAINS '\Print Processors\' AND (user != 'SYSTEM' AND process_name NOT IN installer_allowlist) | RETURN event
  - question: Has a novel user or process modified the Print Processors registry hive for the first time?
    context: >
      This question uses statistical baselining to detect unusual actors modifying the Print Processors registry keys. It maintains a historical record of which user account and process pairs have legitimately performed this action. An alert is triggered if a modification is made by a pair that has never been observed in the environment before, indicating a potentially unauthorized change.
    answer_sources:
      - Windows Event ID 13
      - Windows Event ID 4657
      - Registry audit logs on all Windows endpoints and servers, especially high-value assets.
    range: last 90 days
    queries:
      - pseudocode: BASELINE user_process_pairs that write to '\Print Processors\' registry hive | MONITOR for new write events | RETURN event IF user_process_pair is not in baseline (frequency = 0)
  - question: Can we detect anomalous modifications to the Print Processors registry hive using unsupervised learning?
    context: >
      This question applies an anomaly detection model, like Isolation Forest, to registry write events. The model learns the normal patterns of modifications to the Print Processors hive based on features like the source process, user context, and time of day. It can then automatically identify and flag events that deviate from this learned norm, pointing to potential malicious activity.
    answer_sources:
      - Windows Event ID 13
      - Windows Event ID 4657
      - Registry audit logs on all Windows endpoints and servers, especially high-value assets.
    range: last 90 days
    queries:
      - pseudocode: TRAIN Isolation Forest model on features of registry writes to '\Print Processors\' | FEED new write events to the model | RETURN events flagged as anomalous
  - question: Has the print spooler service spawned a suspicious child process like a command shell?
    context: >
      Once an adversary gains code execution within the spoolsv.exe process (running as SYSTEM), a common next step is to spawn a command shell (cmd.exe, powershell.exe) or other tools to execute commands with elevated privileges. This question directly monitors for this post-escalation activity by alerting whenever spoolsv.exe is the parent of a process on a pre-defined watchlist.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 4688
      - Process creation logs, including full command-line arguments, from all Windows hosts.
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_events WHERE parent_process = 'spoolsv.exe' AND child_process IN ('cmd.exe', 'powershell.exe', 'net.exe', 'whoami.exe') | RETURN event
  - question: Has the print spooler service spawned a child process that has never been seen before in the environment?
    context: >
      This question provides a statistical method for detecting anomalous child processes of spoolsv.exe. It establishes an enterprise-wide baseline of all legitimate parent-child relationships involving spoolsv.exe. An alert is generated if spoolsv.exe spawns a process that is either entirely new to the environment or extremely rare, indicating a deviation from normal behavior.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 4688
      - Process creation logs, including full command-line arguments, from all Windows hosts.
    range: last 90 days
    queries:
      - pseudocode: BASELINE child processes of 'spoolsv.exe' across the enterprise | MONITOR for new process creation events | RETURN event IF child_process is not in baseline or has a very low frequency (<0.1% of endpoints)
  - question: Are the command-line arguments of a process spawned by spoolsv.exe indicative of malicious activity?
    context: >
      This question uses machine learning to analyze the command-line arguments of child processes spawned by spoolsv.exe. Adversaries often use obfuscated, encoded, or unusually long command lines. A classifier can be trained to recognize these malicious patterns by extracting features like command length, entropy, and special character counts, allowing it to score and flag suspicious commands.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 4688
      - Process creation logs, including full command-line arguments, from all Windows hosts.
    range: last 90 days
    queries:
      - pseudocode: FOR child process of 'spoolsv.exe', EXTRACT features from command_line (length, entropy, etc.) | INPUT features into trained_classifier | RETURN event IF command_line is classified as malicious
  - question: Has a file been created in the print processor directory by a non-SYSTEM account, followed by a quick restart of the Print Spooler service?
    context: >
      To get a malicious DLL loaded, an adversary must restart the Print Spooler service. This question looks for a specific sequence: a file is created in the `\spool\prtprocs\` directory by a user other than SYSTEM, and then the service is restarted within a short time window. This combination strongly suggests an adversary has planted a DLL and is forcing the service to load it for privilege escalation.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 7036
      - File system audit logs and Windows System event logs from all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: CORRELATE file_creation_event in '\spool\prtprocs\' (where user != 'SYSTEM') with service_restart_event for 'Print Spooler' ON same host WHERE time_delta < 5 minutes
  - question: Has the Print Spooler service been restarted at an anomalous time?
    context: >
      Service restarts often happen at predictable times, such as during system reboots or scheduled maintenance windows. This question statistically analyzes the timing of Print Spooler service restarts to identify outliers. A restart that occurs at an unusual time, especially when correlated with recent file or registry modifications to print processor components, is suspicious and could indicate an adversary is forcing a reload of a malicious DLL.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 7036
      - File system audit logs and Windows System event logs from all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: BUILD historical distribution of 'Print Spooler' restart times per host | FLAG new restarts that occur at statistically anomalous times (e.g., outside maintenance windows)
  - question: Is there an anomalous frequency of Print Spooler service restarts on a host?
    context: >
      This question applies time-series anomaly detection to the frequency of Print Spooler service restarts. A model learns the normal cadence of restarts related to patching and reboots for each host. An alert is generated for a sudden spike in restarts that deviates from the learned pattern. This spike, when correlated with other indicators, can reveal an adversary's attempt to load their malicious DLL.
    answer_sources:
      - Windows Event ID 11
      - Windows Event ID 7036
      - File system audit logs and Windows System event logs from all Windows endpoints and servers.
    range: last 90 days
    queries:
      - pseudocode: USE time-series model to learn normal frequency of 'Print Spooler' restarts per host | GENERATE alert for any spike in restart frequency that deviates from the learned pattern