name: T1547.012: Print Processors
id: d8f2b3c1-a5e9-4f7d-8b6a-9c0e1d2f3a4b
description: This playbook helps investigators determine if an adversary is abusing Windows Print Processors for persistence or privilege escalation (T1547.012). Adversaries may install a malicious DLL in the print processor directory, which is then loaded by the high-privilege Print Spooler service (spoolsv.exe). This playbook provides questions to detect this activity by monitoring for anomalous file creation in the spool directory, suspicious DLLs loaded by the spooler service, related registry modifications to register the malicious processor, and subsequent post-exploitation behavior such as anomalous network connections or child processes originating from spoolsv.exe.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are known malicious files being created in the system's print processor directory?
  context: Adversaries establish persistence by placing a malicious DLL in the print processor directory. This question aims to detect this by checking the hash of any newly created file in this location against a threat intelligence feed of known malicious file hashes. A match is a high-confidence indicator of compromise.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 4663
  - File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_events (Sysmon EID 11) WHERE target_filename CONTAINS '\\spool\\prtprocs\\' | LOOKUP file_hash against threat_intel_feed | RETURN events WHERE match_found
- question: Are files with anomalously high entropy filenames being created in the print processor directory?
  context: To evade simple signature-based detection, adversaries often use randomized filenames for their malware. This question seeks to identify such files by calculating the Shannon entropy of filenames created in the print processor directory and comparing it to a baseline of legitimate filenames. A significantly higher entropy score suggests a randomly generated name.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 4663
  - File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_events (Sysmon EID 11) WHERE target_filename CONTAINS '\\spool\\prtprocs\\' | CALCULATE shannon_entropy(filename) | RETURN events WHERE entropy > baseline_95th_percentile
- question: Can machine learning identify potentially malicious file creation events in the print processor directory?
  context: This question leverages a machine learning model to provide a more nuanced detection than single indicators. By training a classifier on features like filename entropy, file size, the parent process, and hash prevalence, the model can learn to distinguish legitimate from malicious file creation events, flagging suspicious activity for review.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 4663
  - File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM file_creation_events (Sysmon EID 11) WHERE target_filename CONTAINS '\\spool\\prtprocs\\' | EXTRACT features (filename_entropy, file_size, process_name, hash_prevalence) | PREDICT is_malicious with logistic_regression_model | RETURN events WHERE prediction is 'malicious'
- question: Is the print spooler service loading an unsigned DLL, or was a file written to the print processor directory by a script interpreter?
  context: Legitimate system components are typically digitally signed. This question aims to detect when the print spooler service (spoolsv.exe) loads an unsigned or invalidly signed DLL, which is a strong indicator of a malicious implant. It also correlates this with file writes to the directory from suspicious processes like PowerShell or cmd.exe, which are not legitimate installers.
  answer_sources:
  - Windows Event ID 7
  - Windows Event ID 11
  - Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH image_load_events (Sysmon EID 7) WHERE image_loaded_by is 'spoolsv.exe' AND (is_signed is 'false' OR signature_status is not 'Valid') | CORRELATE with file_creation_events (Sysmon EID 11) WHERE target_filename CONTAINS '\\spool\\prtprocs\\' AND writing_process is in ('powershell.exe', 'cmd.exe', 'cscript.exe')
- question: Has a rare or unusual process written a file to the print processor directory?
  context: Software installation is typically handled by a small set of standard processes (e.g., msiexec.exe, svchost.exe). This question identifies anomalous behavior by baselining which processes normally write to the print processor directory and alerting when a rare or never-before-seen process performs this action.
  answer_sources:
  - Windows Event ID 7
  - Windows Event ID 11
  - Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_events (Sysmon EID 11) WHERE target_filename CONTAINS '\\spool\\prtprocs\\' | GROUP by writing_process | CALCULATE frequency | RETURN events WHERE frequency < 1%_threshold
- question: Can machine learning identify outlier DLLs loaded by the print spooler service?
  context: This question uses an unsupervised clustering algorithm to identify anomalous DLLs loaded by spoolsv.exe. By grouping DLLs based on features like signature status, filename entropy, and file path, the model can isolate outliers that do not fit the profile of legitimate system or driver files, flagging them as potentially malicious.
  answer_sources:
  - Windows Event ID 7
  - Windows Event ID 11
  - Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM image_load_events (Sysmon EID 7) WHERE image_loaded_by is 'spoolsv.exe' | EXTRACT features (signature_status, filename_entropy, file_path) | CLUSTER with DBSCAN_model | RETURN events identified as outliers
- question: Was a file created in the print processor directory immediately followed by a registry modification to register it?
  context: For a malicious DLL to be loaded as a print processor, it must not only be placed in the correct directory but also be registered in the Windows Registry. This question uses a tight time-based correlation to detect this specific sequence of events: a file write to '\spool\prtprocs\' followed within seconds by a registry write to the corresponding '\Print Processors\' key, which is a hallmark of this technique.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 13
  - Windows Event ID 4657
  - Registry and file system audit logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_events (Sysmon EID 11) WHERE path CONTAINS '\\spool\\prtprocs\\' | CORRELATE with registry_set_events (Sysmon EID 13) on same host within 60s WHERE registry_path CONTAINS '\\Print\\Environments\\' AND registry_path CONTAINS '\\Print Processors\\' AND registry_data CONTAINS filename from file_event
- question: Is the time between a file write to the print processor directory and the corresponding registry modification anomalously short?
  context: Automated attack scripts often perform actions much faster than a human administrator or a standard software installer. This question establishes a baseline for the time delta between file creation and registry registration for print processors. An unusually short time delta suggests automated scripting, a potential indicator of malicious activity.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 13
  - Windows Event ID 4657
  - Registry and file system audit logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_events (Sysmon EID 11) linked to registry_set_events (Sysmon EID 13) for print processors | CALCULATE time_delta | RETURN events WHERE time_delta is > 3_std_devs shorter than host_baseline
- question: Can a sequence analysis model detect abnormal installation behavior related to print processors?
  context: Legitimate software installations typically involve a predictable sequence of events (e.g., installer process starts, files are written, registry keys are set). This question uses a sequence model like an HMM to learn these normal patterns. It flags event sequences that deviate, such as a direct file write followed by a registry write without any parent installer process, which is characteristic of an adversary's actions.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 13
  - Windows Event ID 4657
  - Registry and file system audit logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM host_events (file_create, registry_set, process_start) | ANALYZE sequence with HMM_model | RETURN sequences with low_probability_score that include print_processor_file_and_registry_events
- question: Is the print spooler service making network connections to known malicious destinations?
  context: Once a malicious DLL is loaded by spoolsv.exe, it may initiate a network connection for command and control (C2). Since the print spooler service rarely makes external connections, any such connection is suspicious. This question specifically checks if the destination IP or domain is present on a threat intelligence feed of known C2 servers.
  answer_sources:
  - Windows Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network_connections (Sysmon EID 3, Zeek) WHERE process_name is 'spoolsv.exe' | LOOKUP destination_ip/domain against threat_intel_feed | RETURN connections WHERE match_found OR destination NOT in allowlist
- question: Is the print spooler service making network connections to statistically rare destinations?
  context: Adversaries may use C2 infrastructure that is not yet on a threat intelligence list. This question aims to detect these connections by calculating a risk score based on the rarity of the destination IP, port, domain, and TLS fingerprint (JA3/JA3S). A high combined score indicates a connection that is highly unusual for the environment and warrants investigation.
  answer_sources:
  - Windows Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network_connections (Sysmon EID 3, Zeek) WHERE process_name is 'spoolsv.exe' | CALCULATE risk_score based on inverse_frequency(dest_ip, dest_port, domain, ja3) | RETURN connections WHERE score > 98th_percentile
- question: Does network traffic from the print spooler service exhibit anomalous time-series patterns indicative of C2 communication?
  context: C2 channels often exhibit regular, periodic "heartbeat" patterns (e.g., beaconing out every 60 seconds). This question applies a time-series anomaly detection model to the volume, frequency, and size of network connections from spoolsv.exe. The model learns the normal (often nonexistent) traffic patterns and alerts on deviations, such as the emergence of a new, periodic, low-volume connection pattern.
  answer_sources:
  - Windows Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL time_series of network_traffic_metrics from 'spoolsv.exe' per host using SARIMA | FORECAST expected traffic | RETURN alerts WHERE actual_traffic significantly deviates from forecast
- question: Is the print spooler service (spoolsv.exe) loading a DLL with a hash matching a known malicious indicator?
  context: When an adversary uses this technique for privilege escalation, they trick the SYSTEM-level spoolsv.exe process into loading their malicious DLL. This question provides a high-confidence detection by checking the hash of every DLL loaded by spoolsv.exe against a threat intelligence database of malicious file hashes.
  answer_sources:
  - Windows Event ID 7
  - Process module load logs on all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH image_load_events (Sysmon EID 7) WHERE process_name is 'spoolsv.exe' | LOOKUP loaded_dll_hash against threat_intel_feed | RETURN events WHERE match_found
- question: Is spoolsv.exe loading a DLL with unusually high file entropy?
  context: Malicious code is often packed or encrypted to evade signature-based antivirus, which results in high file entropy. This question analyzes all DLLs loaded by spoolsv.exe, calculating their file entropy. A DLL with an entropy value that is a statistical outlier compared to legitimate system DLLs is highly suspicious and could indicate a packed malicious payload used for privilege escalation.
  answer_sources:
  - Windows Event ID 7
  - Process module load logs on all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH image_load_events (Sysmon EID 7) WHERE process_name is 'spoolsv.exe' | CALCULATE file_entropy(loaded_dll) | RETURN events WHERE entropy > 7.5 OR is_outlier
- question: Can a machine learning model classify DLLs loaded by spoolsv.exe as suspicious based on their attributes?
  context: This question employs a classifier to automatically assess the risk of each DLL loaded by the spooler service. By using features like digital signature status, file entropy, and whether the file path is non-standard, the model can learn to distinguish between benign system DLLs and suspicious ones that may be part of a privilege escalation attempt.
  answer_sources:
  - Windows Event ID 7
  - Process module load logs on all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM image_load_events (Sysmon EID 7) WHERE process_name is 'spoolsv.exe' | EXTRACT features (is_signed, signature_status, entropy, file_path) | PREDICT with decision_tree_model | RETURN events where prediction is 'suspicious'
- question: Was the Print Processors registry hive modified by a non-SYSTEM user or an unauthorized process?
  context: To register a malicious DLL for privilege escalation, an adversary must modify the Print Processors registry keys. This action is typically performed by the SYSTEM account or trusted installers. This question detects suspicious modifications by alerting when these specific registry keys are written to by any other user account or by a process not on an allowlist of legitimate installers.
  answer_sources:
  - Windows Event ID 13
  - Windows Event ID 4657
  - Registry audit logs on all Windows endpoints and servers, especially high-value assets.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH registry_write_events (Sysmon EID 13, Win EID 4657) WHERE registry_path CONTAINS '\\Print Processors\\' AND (user is not 'SYSTEM' AND process_name not in installer_allowlist)
- question: Has the Print Processors registry hive been modified by a user or process that has never done so before?
  context: This question identifies novel and potentially unauthorized activity by establishing a baseline of which user and process combinations legitimately modify the Print Processors registry hive. An alert is generated when a modification is made by a user/process pair that is not in the historical baseline, indicating a first-time, suspicious event.
  answer_sources:
  - Windows Event ID 13
  - Windows Event ID 4657
  - Registry audit logs on all Windows endpoints and servers, especially high-value assets.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH registry_write_events (Sysmon EID 13) WHERE registry_path CONTAINS '\\Print Processors\\' | BASELINE legitimate user_process_pairs over 90 days | RETURN events WHERE current user_process_pair is not in baseline
- question: Can an unsupervised learning model detect anomalous modifications to the Print Processors registry hive?
  context: This question uses an anomaly detection model like Isolation Forest to learn the normal patterns of registry modifications to the Print Processors hive. By analyzing features such as the source process, user context, and time of day, the model can identify and flag modifications that deviate significantly from established norms, which could indicate an adversary's attempt to set up for privilege escalation.
  answer_sources:
  - Windows Event ID 13
  - Windows Event ID 4657
  - Registry audit logs on all Windows endpoints and servers, especially high-value assets.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: STREAM registry_write_events (Sysmon EID 13) WHERE registry_path CONTAINS '\\Print Processors\\' | EXTRACT features (process_path, user_context, time_of_day) | SCORE with isolation_forest_model | RETURN events flagged as anomalous
- question: Has the print spooler service (spoolsv.exe) spawned a suspicious child process like a command shell?
  context: After successfully escalating privileges, an adversary's code running within spoolsv.exe will often spawn a new process, such as a command shell (cmd.exe, powershell.exe), to execute commands with SYSTEM privileges. The spooler service has no legitimate reason to spawn such processes, making this a high-fidelity indicator of post-escalation activity.
  answer_sources:
  - Windows Event ID 1
  - Windows Event ID 4688
  - Process creation logs, including full command-line arguments, from all Windows hosts.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events (Sysmon EID 1, Win EID 4688) WHERE parent_process_name is 'spoolsv.exe' AND child_process_name in ('cmd.exe', 'powershell.exe', 'net.exe', 'whoami.exe', 'rundll32.exe')
- question: Has spoolsv.exe spawned a child process that is rare or has never been seen before in the environment?
  context: This question provides broader detection than a static watchlist by baselining all legitimate child processes of spoolsv.exe across the enterprise. It alerts when spoolsv.exe spawns any process that has never been observed before or is extremely rare, effectively flagging any deviation from its normal, limited set of child processes.
  answer_sources:
  - Windows Event ID 1
  - Windows Event ID 4688
  - Process creation logs, including full command-line arguments, from all Windows hosts.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events (Sysmon EID 1) WHERE parent_process_name is 'spoolsv.exe' | BASELINE legitimate child_processes over 90 days | RETURN events WHERE child_process_name is not in baseline
- question: Can a machine learning model detect malicious command lines executed by child processes of spoolsv.exe?
  context: Adversaries often use obfuscated or complex command lines to execute their tools. This question uses a classifier trained to recognize malicious command-line patterns based on features like length, entropy, and the presence of suspicious characters or strings. It analyzes the command lines of any child process spawned by spoolsv.exe to detect post-escalation activity.
  answer_sources:
  - Windows Event ID 1
  - Windows Event ID 4688
  - Process creation logs, including full command-line arguments, from all Windows hosts.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events (Sysmon EID 1) WHERE parent_process_name is 'spoolsv.exe' | EXTRACT features from command_line | PREDICT is_malicious with random_forest_model | RETURN events WHERE prediction is 'malicious'
- question: Was a file created in the print processor directory by a non-SYSTEM user, followed shortly by a restart of the Print Spooler service?
  context: To force the spooler service to load their malicious DLL and escalate privileges, an adversary must first place the file and then restart the service. This question detects this specific sequence: a file write to '\spool\prtprocs\' by a standard user, followed within minutes by a stop/start of the 'Print Spooler' service. This combination is highly indicative of an active privilege escalation attempt.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 7036
  - File system audit logs and Windows System event logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_events (Sysmon EID 11) WHERE path CONTAINS '\\spool\\prtprocs\\' AND user is not 'SYSTEM' | CORRELATE with service_state_change_events (Win EID 7036) on same host within 5 minutes WHERE service_name is 'Print Spooler' and state_change is 'stopped' then 'running'
- question: Did the Print Spooler service restart at a statistically anomalous time?
  context: Service restarts typically occur during predictable times, such as system startup or scheduled maintenance windows. This question identifies suspicious restarts by building a historical distribution of restart times for the Print Spooler service. A restart that occurs at an unusual time, especially when correlated with recent file or registry changes, suggests an adversary is manually forcing the service to load their payload.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 7036
  - File system audit logs and Windows System event logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH service_state_change_events (Win EID 7036) WHERE service_name is 'Print Spooler' and state is 'running' | ANALYZE restart_times | RETURN events WHERE restart_time is a statistical outlier for the host/environment
- question: Can a time-series model detect an anomalous frequency of Print Spooler service restarts?
  context: An adversary attempting to debug their payload or repeatedly escalate privileges might cause multiple service restarts in a short period. This question uses a time-series model to learn the normal cadence of service restarts (which is typically very low). It alerts on any significant spike in restart frequency that deviates from the learned pattern, signaling potential manipulation of the service.
  answer_sources:
  - Windows Event ID 11
  - Windows Event ID 7036
  - File system audit logs and Windows System event logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL time_series of 'Print Spooler' restart frequency per host | FORECAST expected frequency | RETURN alerts WHERE actual_frequency significantly deviates from forecast