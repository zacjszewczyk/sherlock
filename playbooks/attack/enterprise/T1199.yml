name: T1199: Trusted Relationship
id: 2a8c3d9e-1b4f-4d6a-8e9f-0c1d2e3f4a5b
description: This playbook helps determine if an adversary is leveraging a trusted third-party relationship for initial access. It investigates compromises by correlating partner activity with threat intelligence, detecting anomalous login characteristics (time, location, source network), analyzing post-access behavior for suspicious discovery commands or scripting, identifying inconsistent internal resource access, and flagging suspicious sequences of activity indicative of lateral movement.
type: technique
related:
  - TA0001: Initial Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are successful authentications or network connections from trusted partner IP spaces matching known malicious indicators from threat intelligence?
    context: This question aims to directly identify compromises by correlating known partner activity with external threat intelligence. A match provides a high-confidence signal that a partner's infrastructure or credentials, which we trust, are being used for malicious purposes, such as C2 communication or initial access from a known bad IP.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4624
      - Azure AD SigninLogs
      - VPN concentrators
      - Partner-facing web portals
      - Jump servers/bastion hosts
      - Cloud IAM roles delegated to partners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH logins AND network_connections WHERE source_ip IN partner_ip_ranges | JOIN threat_intel_feed ON (source_ip=malicious_ip OR domain=c2_domain OR credentials=compromised_creds) | ALERT
  - question: Is a trusted partner authenticating from an ASN or country that is statistically rare for them?
    context: Adversaries may compromise partner infrastructure or accounts and operate from locations different from the partner's normal business locations. This question helps detect such geographical or network-level anomalies by baselining each partner's typical source ASNs and countries and alerting on deviations, which could indicate a session hijack or compromised account usage from an unusual network.
    answer_sources:
      - Zeek conn.log
      - VPN concentrators
      - Partner-facing web portals
      - Jump servers/bastion hosts
      - Cloud IAM roles delegated to partners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each partner BASELINE source_asn, source_country FROM network_connections | FOR each new_login IF new_login.source_asn OR new_login.source_country < 5th_percentile_frequency THEN ALERT
  - question: Does a new partner authentication event show a combination of features (IP, user agent, ASN, location, time) that is anomalous compared to their historical activity?
    context: This question uses a machine learning model to create a holistic profile of a partner's normal authentication behavior. It moves beyond single-factor checks to identify subtle combinations of unusual attributes that represent a significant deviation from the norm. Such outliers are strong candidates for compromised account activity.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Azure AD SigninLogs
      - VPN concentrators
      - Partner-facing web portals
      - Jump servers/bastion hosts
      - Cloud IAM roles delegated to partners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN anomaly_model ON historical_partner_logins (features source_ip, user_agent, asn, country, time) | FOR each new_login SCORE with anomaly_model | IF score is outlier THEN ALERT
  - question: Is a trusted partner account executing known reconnaissance or discovery commands from a remote session?
    context: Once an adversary gains access via a trusted partner account, their next step is often to perform reconnaissance. This question directly hunts for this behavior by looking for common discovery commands (e.g., `whoami`, `net group`) being run by a partner account, which is a strong indicator that the account is being used for malicious exploration.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Jump servers
      - Managed servers
      - Domain controllers
      - Developer workstations accessed by partners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE parent_process IN (remote_access_services) AND user IN (partner_accounts) | MATCH process_name OR command_line AGAINST (recon_command_list) | ALERT
  - question: Is a command line executed by a trusted partner account unusually complex or random, potentially indicating obfuscation?
    context: Adversaries often use obfuscation techniques like Base64 encoding to hide their malicious commands. By measuring the entropy (randomness) of command-line strings and comparing it to a user's normal baseline, this question can detect these obfuscation attempts, even if the underlying command is unknown.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Jump servers
      - Managed servers
      - Domain controllers
      - Developer workstations accessed by partners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each partner_account BASELINE command_line_entropy | FOR each new_process_creation CALCULATE entropy(command_line) | IF entropy > 95th_percentile THEN ALERT
  - question: Does the command line executed by a partner account semantically resemble known malicious commands, as determined by a machine learning model?
    context: This question leverages Natural Language Processing (NLP) to move beyond simple string matching and understand the 'intent' of a command line. A model trained on benign and malicious commands can classify new commands from partner sessions, catching novel malicious commands that might evade signature-based rules.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Jump servers
      - Managed servers
      - Domain controllers
      - Developer workstations accessed by partners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN classifier_model ON labeled_command_lines | FOR each new_process_creation by partner_account CLASSIFY command_line with model | IF classification is 'malicious' THEN ALERT
  - question: Has a trusted partner account logged in from two geographically distant locations in a time frame that would be physically impossible?
    context: Impossible travel is a classic and highly effective indicator of account compromise. If an account logs in from New York and then, five minutes later, from Moscow, it's a clear sign that at least one of the sessions is fraudulent. This question provides a high-fidelity alert for simultaneous account usage.
    answer_sources:
      - Windows Event ID 4624
      - Azure AD SigninLogs
      - Zeek conn.log
      - VPN gateways
      - External-facing authentication portals (e.g., ADFS)
      - Cloud identity providers (e.g., Azure AD, Okta)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_login GET previous_login_timestamp, previous_login_location | CALCULATE travel_speed = distance(new_location, previous_location) / time_diff | IF travel_speed > 600mph THEN ALERT
  - question: Is a trusted partner account logging in at a time of day that is highly unusual for that specific user?
    context: Most users have predictable work schedules. A login at 3 AM from a user who exclusively works 9-to-5 is suspicious. This question establishes a baseline of normal login times for each individual partner account and alerts on logins that occur during their specific 'off-hours,' which could indicate an adversary is using the account.
    answer_sources:
      - Windows Event ID 4624
      - Azure AD SigninLogs
      - Zeek conn.log
      - VPN gateways
      - External-facing authentication portals (e.g., ADFS)
      - Cloud identity providers (e.g., Azure AD, Okta)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each partner_account MODEL probability_distribution of login_hour | FOR each new_login IF probability(new_login.hour) < 1% THEN ALERT
  - question: Is there a sudden and sustained spike in login attempts from a trusted partner's network, exceeding forecasted volumes?
    context: A sudden, anomalous increase in login attempts from a partner's network could signify a widespread attack, such as password spraying. This question uses time series forecasting to predict the normal 'heartbeat' of login volume from a partner and alerts when the actual volume significantly deviates from this prediction.
    answer_sources:
      - Windows Event ID 4624
      - Azure AD SigninLogs
      - Zeek conn.log
      - VPN gateways
      - External-facing authentication portals (e.g., ADFS)
      - Cloud identity providers (e.g., Azure AD, Okta)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN time_series_model on historical partner_login_volume | FOR each hour PREDICT login_volume_range | IF actual_volume > upper_bound_of_prediction THEN ALERT
  - question: Is a trusted partner account attempting to access internal systems or hosts that are not part of their authorized role or project?
    context: This question enforces the principle of least privilege. By defining exactly which internal resources a partner role should be accessing, any deviation from this explicit allow-list is a strong indicator of unauthorized exploration or lateral movement.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Internal file shares
      - Database servers
      - Code repositories
      - Critical infrastructure management interfaces
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each partner_role DEFINE allow_list_of_ips | FOR each new_connection from partner IF destination_ip NOT IN allow_list THEN ALERT
  - question: Has a trusted partner account transferred an anomalously large amount of data in a single session compared to their personal baseline?
    context: A primary goal for adversaries is often data exfiltration. This question aims to detect this by establishing a baseline for how much data each partner account typically transfers in a session. A session that significantly exceeds this baseline is a major red flag for data theft.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Internal file shares
      - Database servers
      - Code repositories
      - Critical infrastructure management interfaces
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each partner_account BASELINE data_transfer_volume_per_session | FOR each session_end CALCULATE total_data_transferred | IF total_data > 99th_percentile THEN ALERT
  - question: Is a partner user accessing an internal asset that belongs to a completely different functional group or activity cluster than their own?
    context: This question uses graph analysis to automatically group users and assets into 'communities' of normal activity. An alert is generated when a user from one community, like 'Partner Developers,' suddenly accesses an asset deep within another, like 'HR Databases,' indicating highly suspicious cross-functional access.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Internal file shares
      - Database servers
      - Code repositories
      - Critical infrastructure management interfaces
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BUILD graph of user-asset_access | RUN community_detection_algorithm | FOR each new_access IF user.community != asset.community THEN ALERT
  - question: Has a partner account performed a sequence of actions indicative of lateral movement: discovery, followed by using explicit credentials to access a new host, followed by a remote admin connection?
    context: Individual actions might seem benign, but their sequence can be highly malicious. This question looks for a classic lateral movement pattern: an attacker uses a compromised account to look around (`net view`), then uses stolen credentials (`runas`) to access another machine, and finally connects to it (`mstsc`).
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Zeek smb_files.log
      - All authenticated endpoints and servers, particularly jump boxes and domain controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CORRELATE events from partner_ip in 15min_window IF (process_is_discovery) THEN (logon_is_explicit_creds_to_new_host) THEN (network_conn_to_admin_port_on_new_host) THEN ALERT
  - question: Is a partner user connecting to an anomalously high number of new, never-before-accessed hosts within a single session?
    context: Normal user activity is often repetitive, accessing the same set of servers daily. An adversary, however, will likely be exploring the network, touching many different hosts for the first time. This question detects this 'land-grabbing' behavior by tracking first-time host access per session.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - All authenticated endpoints and servers, particularly jump boxes and domain controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each partner_user BASELINE mean/stdev of new_hosts_per_session | FOR each session COUNT new_host_connections | IF count > (mean + 3 * stdev) THEN ALERT
  - question: Is the sequence of actions performed by a partner user during their session statistically improbable compared to their normal workflow?
    context: This question models the 'rhythm' of a user's workflow—the typical order in which they perform tasks. A Markov chain learns common transitions and can then spot a session that violates this normal flow, flagging the entire session as anomalous because the sequence of actions is highly unlikely for that user.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All authenticated endpoints and servers, particularly jump boxes and domain controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN markov_chain_model on historical user_action_sequences | FOR each active_session CALCULATE probability of current_action_sequence | IF probability is very low THEN ALERT