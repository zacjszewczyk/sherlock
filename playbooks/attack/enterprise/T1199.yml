name: T1199: Trusted Relationship
id: 5a9b8c7d-0e1f-4a6b-9f2c-3d4e5f6a7b8c
description: Is an adversary leveraging a trusted third-party relationship for initial access to our network? This involves identifying successful authentications or network connections from a known trusted third-party that match malicious indicators, detecting processes spawned from a remote partner session that execute discovery commands or use suspicious scripting, flagging anomalous login characteristics (time, location, network) compared to an established baseline, monitoring for access to internal resources that are inconsistent with the partner's role, and identifying suspicious sequences of activity such as discovery followed by lateral movement attempts.
type: technique
related:
- TA0001: Initial Access
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any successful logins or network connections from trusted partners matched known malicious indicators?
  context: This question aims to find direct evidence of a compromise by cross-referencing activity from trusted third-party accounts or IP spaces with threat intelligence feeds. A match on a malicious IP, domain, or known-compromised credential indicates that a partner's assets are being used by an adversary to target the network.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 4624
  - Azure AD SigninLogs
  - VPN concentrators, Partner-facing web portals, Jump servers/bastion hosts, Cloud IAM roles delegated to partners
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH authentication_logs OR network_connection_logs WHERE source_ip IN trusted_partner_ips
      JOIN with threat_intelligence_feed ON (source_ip = malicious_ip OR domain = malicious_domain OR credentials = compromised_credentials)
      RETURN matches
- question: Has a trusted partner logged in from an unusually rare Autonomous System Number (ASN) or country for their organization?
  context: This question seeks to detect anomalous access locations that could indicate a compromised partner account. By establishing a baseline of normal source ASNs and countries for each partner, logins from statistically infrequent or new locations can be flagged as potential intrusions.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 4624
  - Azure AD SigninLogs
  - VPN concentrators, Partner-facing web portals, Jump servers/bastion hosts, Cloud IAM roles delegated to partners
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each partner:
        CALCULATE historical frequency of source_asn, source_country FROM network_logs
      SEARCH new_logins WHERE partner_login
      IF new_login.source_asn OR new_login.source_country < 5th_percentile_frequency:
        ALERT
- question: Does a new authentication from a trusted partner exhibit anomalous characteristics when compared to its historical multi-featured profile?
  context: This question uses machine learning to identify subtle deviations in partner authentication behavior. By training a model on features like source IP, user agent, ASN, country, and time of day, new logins can be scored for their 'normalcy'. A high anomaly score suggests the authentication does not fit the established pattern and warrants investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 4624
  - Azure AD SigninLogs
  - VPN concentrators, Partner-facing web portals, Jump servers/bastion hosts, Cloud IAM roles delegated to partners
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL one-class_svm ON historical_logins (source_ip, user_agent, asn, country, time_of_day)
      SCORE new_partner_logins WITH model
      ALERT on outlier_scores
- question: Is a trusted partner account executing known reconnaissance tools or commands from a remote access session?
  context: This question looks for post-access discovery activity. After gaining access via a partner account, adversaries often try to understand the environment. This query checks for the execution of common enumeration commands (e.g., `whoami /all`, `nltest /dclist:`) spawned from a remote access process, which strongly indicates malicious intent.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 4104
  - Jump servers, Managed servers, Domain controllers, Developer workstations accessed by partners
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process_creation_events WHERE parent_process IN (sshd.exe, mstsc.exe) AND user IN trusted_partner_accounts
      FILTER BY process_name OR command_line MATCHES reconnaissance_tool_list
      ALERT on match
- question: Is a command line executed by a partner account showing unusually high entropy compared to their baseline?
  context: This question aims to detect obfuscated or encoded commands. Adversaries often use techniques like Base64 or randomization to hide malicious commands from signature-based detection. A command line with abnormally high Shannon entropy compared to that user's historical activity can reveal these obfuscation attempts.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 4104
  - Jump servers, Managed servers, Domain controllers, Developer workstations accessed by partners
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each partner_user:
        CALCULATE historical entropy distribution for command_lines
      FOR each new_process_event by user:
        CALCULATE entropy of command_line
        IF entropy > 95th_percentile_for_user:
          ALERT
- question: Is a command line from a partner session being classified as malicious by a machine learning model?
  context: This question uses a pre-trained NLP model to proactively identify malicious command lines that may not be on a static watchlist. By converting command lines into vector embeddings and using a classifier, this method can detect novel or slightly modified malicious commands based on their semantic properties.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 4104
  - Jump servers, Managed servers, Domain controllers, Developer workstations accessed by partners
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL classifier ON labeled_command_lines (benign/malicious)
      FOR each new_process_event from partner_account:
        CLASSIFY command_line with model
        IF prediction is malicious:
          ALERT
- question: Has a partner account logged in from two locations where the travel time between them is physically impossible?
  context: This question seeks to identify credential theft or session hijacking by detecting 'impossible travel' scenarios. By comparing the geo-locations of consecutive successful logins for an account, we can flag activity where the required travel speed between the locations is not humanly possible.
  answer_sources:
  - Windows Event ID 4624
  - Azure AD SigninLogs
  - Zeek conn.log
  - VPN gateways, External-facing authentication portals (e.g., ADFS), Cloud identity providers (e.g., Azure AD, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each new_successful_login by partner_user:
        GET timestamp and geo-location of previous_login
        CALCULATE travel_speed = distance(new_login.geo, previous_login.geo) / time_diff(new_login.time, previous_login.time)
        IF travel_speed > 600 mph:
          ALERT
- question: Has a partner account logged in at an hour that is statistically improbable based on their history?
  context: This question aims to detect account usage at anomalous times. Adversaries may use compromised accounts outside of normal business hours. By modeling each user's typical login hours, we can generate an alert when a login occurs at a time that has a very low historical probability for that specific user.
  answer_sources:
  - Windows Event ID 4624
  - Azure AD SigninLogs
  - Zeek conn.log
  - VPN gateways, External-facing authentication portals (e.g., ADFS), Cloud identity providers (e.g., Azure AD, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each partner_user:
        CREATE probability_distribution of login_hour from historical_data
      FOR each new_login by user:
        GET probability of new_login.hour from distribution
        IF probability < 1% OR z_score > 3:
          ALERT
- question: Is the volume of login attempts from a trusted partner's network significantly exceeding the forecasted norm?
  context: This question aims to detect widespread credential-based attacks, such as password spraying, originating from a compromised partner network. By using a time series model to predict the expected volume of login attempts, we can alert when the observed volume significantly and persistently exceeds the prediction.
  answer_sources:
  - Windows Event ID 4624
  - Azure AD SigninLogs
  - Zeek conn.log
  - VPN gateways, External-facing authentication portals (e.g., ADFS), Cloud identity providers (e.g., Azure AD, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL SARIMA on historical hourly login counts from partner_network
      PREDICT expected_login_volume for current_hour
      IF observed_volume > prediction_upper_bound:
        ALERT
- question: Is a trusted partner account accessing internal resources not on their role's explicit allow-list?
  context: This question enforces a strict access control policy to detect privilege escalation or unauthorized exploration. By maintaining an explicit allow-list of internal destinations for each partner role, any connection attempt to a resource outside this list is immediately flagged as a policy violation and potential threat.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek files.log
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Internal file shares, Database servers, Code repositories, Critical infrastructure management interfaces
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each new_network_connection from partner_session:
        GET partner_role and destination_ip
        LOOKUP destination_ip in role_based_allow_list
        IF destination_ip NOT IN allow_list:
          ALERT
- question: Has a partner account exfiltrated a volume of data that is anomalous for their historical activity?
  context: This question aims to detect data exfiltration by monitoring for unusually large outbound data transfers. By baselining the normal amount of data transferred per session for each partner account, we can identify and alert on any session that exceeds a high-percentile threshold of that specific account's history.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek files.log
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Internal file shares, Database servers, Code repositories, Critical infrastructure management interfaces
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each partner_account:
        CALCULATE 99th_percentile of outbound_bytes_per_session from historical_logs
      FOR each completed_session:
        CALCULATE total_outbound_bytes
        IF total_outbound_bytes > 99th_percentile_for_account:
          ALERT
- question: Is a partner user accessing internal assets that fall outside their normal 'community of activity'?
  context: This question uses graph analytics to detect anomalous cross-functional access. By modeling historical user-to-asset access patterns, we can identify clusters of normal activity. An alert is triggered if a user suddenly accesses a resource far outside their typical cluster, indicating a potential pivot or privilege escalation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek files.log
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Internal file shares, Database servers, Code repositories, Critical infrastructure management interfaces
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      GRAPH historical access between users and assets
      RUN community_detection_algorithm to find clusters
      FOR each new_access_event(user, asset):
        IF user.community != asset.community:
          ALERT
- question: Has a partner session shown a sequence of discovery, explicit credential use, and remote access to a new host?
  context: This question uses stateful correlation to detect a common lateral movement pattern. It specifically looks for a sequence where a partner account first runs a discovery command, then uses explicit credentials to access a new internal host, and finally connects to it via a remote administration protocol, all within a short time window.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows Event ID 4648
  - Zeek conn.log
  - Zeek dce_rpc.log
  - Zeek smb_files.log
  - All authenticated endpoints and servers, particularly jump boxes and domain controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      CORRELATE across 15min window from same source_ip:
        1. process_event with command like 'net view' (EID 4688)
        2. THEN explicit_logon_event to new_host (EID 4648)
        3. THEN network_connection to new_host on port 445, 3389, or 5985
      IF sequence matches:
        ALERT
- question: Is a partner user accessing an anomalously high number of 'first-time' internal hosts in a single session?
  context: This question aims to detect network scanning and reconnaissance behavior. Legitimate users typically access a consistent set of hosts. By tracking the number of new, never-before-accessed hosts a user connects to in a session, we can flag activity that exceeds their historical baseline plus a standard deviation, indicating abnormal exploration.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows Event ID 4648
  - Zeek conn.log
  - Zeek dce_rpc.log
  - Zeek smb_files.log
  - All authenticated endpoints and servers, particularly jump boxes and domain controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each partner_user:
        MAINTAIN set of historically_accessed_hosts
        CALCULATE mean and std_dev of first_time_hosts_per_session
      FOR each active_session:
        COUNT hosts not in historically_accessed_hosts
        IF count > (mean + 3 * std_dev):
          ALERT
- question: Is a partner's session following a sequence of actions that is highly improbable based on historical models?
  context: This question uses sequence analysis to detect deviations from normal administrative workflows. By modeling benign user sessions as a Markov chain of discrete actions (e.g., 'run_command_X', 'connect_to_host_Y'), we can calculate the probability of any new sequence of actions. A sequence with a very low probability is flagged as anomalous.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4624
  - Windows Event ID 4648
  - Zeek conn.log
  - Zeek dce_rpc.log
  - Zeek smb_files.log
  - All authenticated endpoints and servers, particularly jump boxes and domain controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL Markov chain on sequences of actions from benign partner sessions
      FOR each active_session:
        CALCULATE probability of observed_action_sequence using model
        IF probability is below threshold:
          ALERT