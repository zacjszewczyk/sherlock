name: T1670: Virtualization Solution
id: 94b05f28-9844-4191-92f5-9b7e7c995f5c
description: This playbook helps identify if an adversary is using virtualization or application cloning on managed mobile devices to evade defenses or conceal malicious activity. It focuses on detecting known virtualization frameworks via MDM logs, identifying anomalous applications through rarity analysis and machine learning, and spotting malicious network behavior by correlating traffic with foreground applications, baselining network metrics, and matching against threat intelligence for indicators like C2 domains and JA3/JA3S hashes.
type: technique
related:
  - TA0030: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known virtualization or cloning application installed on a managed mobile device without corporate approval?
    context: This question aims to directly identify the presence of unauthorized virtualization applications. By comparing the package names of installed applications from Mobile Device Management (MDM) logs against a curated threat intelligence watchlist of known virtualization tools, and ensuring they are not on the corporate allowlist, security analysts can quickly detect tools used for defense evasion. A match indicates a clear policy violation and a potential security risk that requires immediate investigation.
    answer_sources:
      - MDM Application Inventory Log
      - Android Logcat
      - Threat Intelligence Feed
      - Managed Android mobile device fleet
      - Mobile Device Management (MDM) servers
      - SIEM
      - Threat Intelligence Platform (TIP)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each app IN mdm_inventory_logs:
            IF app.package_name IN virtualization_watchlist AND app.package_name NOT IN corporate_allowlist:
              CREATE high_severity_alert("Unauthorized virtualization app detected", device=app.device_id, package=app.package_name)

  - question: Is a rare, unapproved application installed on managed mobile devices that could be a virtualization tool?
    context: This question helps to uncover potentially malicious applications by focusing on their rarity within the organization. Adversaries often use custom or obscure tools to avoid signature-based detection. By calculating the installation prevalence of all applications not on the corporate allowlist, analysts can flag those installed on a very small number of devices (e.g., less than 1% of the fleet). Such rarity is an anomaly that warrants investigation to determine the application's purpose and legitimacy.
    answer_sources:
      - MDM Application Inventory Log
      - Android Logcat
      - Threat Intelligence Feed
      - Managed Android mobile device fleet
      - Mobile Device Management (MDM) servers
      - SIEM
      - Threat Intelligence Platform (TIP)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          LET fleet_size = COUNT(all_devices)
          LET prevalence_threshold = 0.01 * fleet_size
          FOR each app_package IN (SELECT DISTINCT package_name FROM mdm_inventory_logs WHERE package_name NOT IN corporate_allowlist):
            LET install_count = COUNT(devices WHERE package_name = app_package)
            IF install_count < prevalence_threshold:
              CREATE medium_severity_alert("Rare application installed", package=app_package, count=install_count)

  - question: Can machine learning predict whether an unlisted application is a virtualization tool based on its characteristics?
    context: This question proposes a proactive, behavioral approach to detection. Instead of relying on known signatures, a supervised classification model can be trained to identify virtualization tools based on features from their application manifests. Key features might include the number and type of permissions requested (e.g., 'SYSTEM_ALERT_WINDOW'), the entropy of the package name, and the presence of keywords like 'virtual' or 'clone'. An application that is not on an allowlist and receives a high probability score from the model should be flagged for investigation as a potential threat.
    answer_sources:
      - MDM Application Inventory Log
      - Android Logcat
      - Threat Intelligence Feed
      - Managed Android mobile device fleet
      - Mobile Device Management (MDM) servers
      - SIEM
      - Threat Intelligence Platform (TIP)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each app IN mdm_inventory_logs WHERE app.package_name NOT IN corporate_allowlist:
            LET features = EXTRACT_FEATURES(app.manifest)
            LET prediction_score = CLASSIFICATION_MODEL.predict(features)
            IF prediction_score > 0.85:
              CREATE medium_severity_alert("Suspected virtualization tool detected by ML model", package=app.package_name, score=prediction_score)

  - question: Is a mobile device communicating with a known command-and-control server while a trusted application is reported to be in the foreground?
    context: This question seeks to uncover malicious activity hiding behind legitimate applications. If network logs (e.g., Zeek) show a device communicating with an IP address or domain on a C2 threat intelligence feed, this is a strong indicator of compromise. By correlating the timestamp of this traffic with MDM logs, analysts can check which application was in the foreground. If a trusted application was active, it suggests that a malicious background process or a hijacked app is responsible for the C2 communication, requiring a high-priority investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - MDM Application Usage Log
      - Corporate Wi-Fi and VPN gateways
      - Enterprise DNS resolvers
      - MDM servers
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each network_connection IN zeek_conn_logs:
            IF network_connection.destination_ip IN c2_watchlist:
              LET foreground_app = GET_FOREGROUND_APP(network_connection.device_ip, network_connection.timestamp)
              IF foreground_app IS IN trusted_app_list:
                CREATE high_severity_alert("C2 traffic from device with trusted foreground app", device=network_connection.device_ip, app=foreground_app)

  - question: Is the network behavior associated with a foreground application on a mobile device statistically anomalous compared to its historical baseline?
    context: This question leverages statistical baselining to detect abnormal network activity that could indicate a compromise. Legitimate applications tend to have predictable network patterns. By establishing a historical baseline (mean and standard deviation) for metrics like bytes transferred, connection counts, and DNS query entropy (using the formula $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$) for each device-application pair, analysts can detect significant deviations. If the network activity for a foreground app exceeds its baseline by a set threshold (e.g., 3 standard deviations), it suggests the app's behavior has changed, possibly due to process hijacking or other malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - MDM Application Usage Log
      - Corporate Wi-Fi and VPN gateways
      - Enterprise DNS resolvers
      - MDM servers
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each foreground_app_session IN mdm_usage_logs:
            LET current_metrics = CALCULATE_NETWORK_METRICS(session.device, session.app, session.time_window)
            LET baseline_metrics = GET_HISTORICAL_BASELINE(session.device, session.app)
            LET deviations = CALCULATE_DEVIATIONS(current_metrics, baseline_metrics)
            IF COUNT(deviations > 3_std_dev) >= 2:
              CREATE medium_severity_alert("Anomalous network activity for foreground app", device=session.device, app=session.app)

  - question: Does a machine learning model detect anomalous network traffic patterns from a mobile device that correlate with a trusted application being in the foreground?
    context: This question uses advanced time-series anomaly detection, such as an LSTM autoencoder, to identify subtle or complex deviations in a device's network behavior. The model is trained on historical feature vectors from network logs (e.g., data volume, unique IPs) to learn what constitutes "normal" activity. A high reconstruction error from the model signifies a pattern it has not seen before and thus an anomaly. Correlating the timestamp of this anomaly with MDM data to see if a trusted app was in the foreground can help uncover sophisticated threats where malware operates under the guise of a legitimate process.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - MDM Application Usage Log
      - Corporate Wi-Fi and VPN gateways
      - Enterprise DNS resolvers
      - MDM servers
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each time_window:
            LET features = AGGREGATE_NETWORK_FEATURES(device, time_window)
            LET reconstruction_error = LSTM_AUTOENCODER_MODEL.get_error(features)
            IF reconstruction_error > anomaly_threshold:
              LET foreground_app = GET_FOREGROUND_APP(device, time_window)
              IF foreground_app IS IN trusted_app_list:
                CREATE medium_severity_alert("ML-detected network anomaly during trusted app usage", device=device, app=foreground_app)

  - question: Is any mobile device network traffic matching known indicators of compromise (IOCs) associated with malware that uses virtualization?
    context: This is a direct threat hunting question focused on high-fidelity indicators. It involves continuously monitoring all outbound network traffic from mobile devices and comparing it against a threat intelligence feed of IOCs (IP addresses, domains, JA3/JA3S hashes) that are specifically attributed to malware known to leverage virtualization techniques. An immediate match provides a high-confidence alert that a device is compromised, enabling rapid incident response.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat Intelligence Feed
      - Corporate network egress points
      - Web proxies
      - DNS resolvers
      - Threat Intelligence Platform (TIP)
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          LET virtualization_malware_iocs = GET_THREAT_FEED("virtualization_malware")
          FOR each connection IN real_time_traffic_logs:
            IF connection.ip IN virtualization_malware_iocs.ips OR connection.domain IN virtualization_malware_iocs.domains OR connection.ja3s IN virtualization_malware_iocs.ja3s:
              CREATE high_severity_alert("IOC match for virtualization-related malware", device=connection.source_ip, indicator=connection.matched_ioc)

  - question: Is a mobile device connecting to a rare domain that has a malicious or suspicious reputation?
    context: This question aims to identify potential C2 infrastructure by focusing on two key properties: rarity and reputation. Adversaries often use new or obscure domains that are not on standard blocklists. By first identifying domains that are requested by very few devices across the fleet (e.g., in the bottom 1st percentile) and then enriching these rare domains with data from an external reputation service, analysts can uncover connections to suspicious infrastructure. A device connecting to a rare domain with a known malicious reputation is a strong signal of compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat Intelligence Feed
      - Corporate network egress points
      - Web proxies
      - DNS resolvers
      - Threat Intelligence Platform (TIP)
      - SIEM
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          LET rare_domains = CALCULATE_RARE_DOMAINS(dns_logs, percentile=1)
          FOR each domain IN rare_domains:
            LET reputation = GET_DOMAIN_REPUTATION(domain)
            IF reputation IN ["malicious", "suspicious"]:
              LET devices = GET_DEVICES_CONNECTING_TO(domain)
              FOR each device IN devices:
                CREATE medium_severity_alert("Connection to rare, malicious domain", device=device, domain=domain)

  - question: Is a mobile device attempting to connect to a domain that appears to be algorithmically generated (DGA)?
    context: This question addresses the threat of Domain Generation Algorithms (DGAs), which malware uses to create a constantly changing list of C2 domains to evade detection. By applying a pre-trained DGA detection model to all DNS queries from mobile devices, analysts can score domains based on characteristics like name entropy, character sequence, and length. A domain that receives a high DGA probability score, especially if it has not been seen before, is a strong indicator of a malware infection attempting to phone home.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Threat Intelligence Feed
      - Corporate network egress points
      - Web proxies
      - DNS resolvers
      - Threat Intelligence Platform (TIP)
      - SIEM
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each dns_query IN zeek_dns_logs:
            LET dga_score = DGA_DETECTION_MODEL.predict(dns_query.domain)
            IF dga_score > 0.90:
              CREATE medium_severity_alert("Suspected DGA domain query detected", device=dns_query.source_ip, domain=dns_query.domain, score=dga_score)