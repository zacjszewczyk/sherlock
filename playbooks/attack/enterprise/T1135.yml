name: T1135: Network Share Discovery
id: 5e9e03d3-3b1a-428a-8b83-93d3b7643b0d
description: This playbook helps answer the question - Is an adversary enumerating network shares to identify data for collection or hosts for lateral movement? It focuses on detecting evidence of network share discovery through various means, including the execution of known discovery tools (identified by file hash), the use of built-in commands like 'net view' from unusual parent processes, a single host scanning a large number of systems via SMB (TCP/445), a user accessing an unusual set of shares inconsistent with their baseline, and non-administrative accounts attempting to access administrative shares (e.g., C$, ADMIN$). The goal is to identify reconnaissance activity that often precedes lateral movement or data exfiltration.
type: technique
related: TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can I detect if a known malicious discovery tool, identified by its file hash, is being executed?
    context: This question aims to identify the use of well-known adversary tools like PowerView or BloodHound by matching their file hashes (e.g., SHA256) against a list of known indicators of compromise (IOCs). This is a high-fidelity method for detecting specific, known threats. An analyst should care because a match indicates a confirmed malicious tool is present and active in the environment, requiring immediate investigation. Monitoring process creation logs (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104) provides the necessary data to perform this hash comparison.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          FOR each process_creation_event (EID 4688) or script_block_log (EID 4104)
            CALCULATE hash of new_process_file or script_block
            IF hash IN known_discovery_tool_hashes_list
              GENERATE high_severity_alert
  - question: How can I identify potentially malicious discovery tools that are not yet known by looking for rare executables or scripts?
    context: This question focuses on finding unknown or custom discovery tools by leveraging the principle of rarity. Most legitimate software is widely distributed, while malware is often rare. By establishing a baseline of all executable and script hashes in the environment, analysts can flag files that have only been seen on a very small number of hosts (e.g., less than 0.1%). When combined with an allowlist to filter out known-good but rare software, this statistical approach helps uncover novel threats that signature-based methods would miss.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          AGGREGATE all file_hashes from process_creation (EID 4688) and script_logs (EID 4104)
          CALCULATE prevalence (host_count) for each hash
          FOR each hash
            IF prevalence < threshold (e.g., 0.1% of hosts) AND hash NOT IN allowlist
              FLAG for investigation
  - question: Can machine learning proactively classify a newly observed, rare file as a potential discovery tool based on its static features?
    context: This question explores using a machine learning model to automatically predict whether a new, unseen executable is a discovery tool. Instead of just relying on rarity, this approach analyzes the intrinsic properties of the file itself, such as its entropy, the functions it imports (e.g., network-related APIs), and embedded text strings. A model trained on known goodware and malware can classify new files, providing a proactive defense mechanism against zero-day or heavily obfuscated discovery tools that evade other detection methods.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: ML/Endpoint Security Platform
        query: |
          ON new_file_observation
            EXTRACT static_file_features (entropy, imports, strings)
            INPUT features into pre-trained_classifier
            IF classifier_output == "discovery_tool" with high_confidence
              GENERATE alert
  - question: How can I detect if built-in discovery commands are being run by an unusual parent process?
    context: This question focuses on the context of execution. Adversaries often run legitimate discovery tools like 'net.exe' or 'Get-SmbShare' from a compromised process, such as a web server or a Microsoft Office application, to blend in. Legitimate execution typically originates from a command shell ('cmd.exe') or PowerShell. By creating rules that look for these commands and check their parent process, analysts can flag suspicious activity. An alert's severity should be increased if the parent process is not a standard shell.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
      - Web Servers
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH process_creation (EID 4688) or script_logs (EID 4104)
          WHERE command_line contains 'net view', 'net share', or 'Get-SmbShare'
          IF parent_process_name NOT IN ('cmd.exe', 'powershell.exe')
            GENERATE high_severity_alert
  - question: Can I identify anomalous parent-child process relationships involving network discovery commands?
    context: This question uses a statistical approach to find unusual activity. By profiling all parent-child process relationships across the network, a baseline of normal behavior is established. This allows for the calculation of the probability of a specific child process (like 'net.exe') being launched by any given parent process. If a discovery command is executed by a parent process that has a very low historical probability of doing so, it is flagged as an anomaly, pointing to a potential compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
      - Web Servers
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          CALCULATE probability P(child | parent) for all process relationships
          FOR each execution of a discovery command (e.g., 'net view')
            IF P(discovery_command | parent_process) < low_probability_threshold
              FLAG as anomalous
  - question: Can machine learning detect suspicious sequences of commands that include network discovery?
    context: This question addresses the adversary's command sequence rather than a single event. Attackers often follow a pattern: they figure out who they are ('whoami'), where they are ('ipconfig'), and then what's around them ('net view'). A sequence-aware machine learning model (like an LSTM) can be trained on typical user command-line histories to learn what's normal. It can then flag sessions that contain statistically unlikely sequences of commands characteristic of reconnaissance, even if each individual command is benign.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
      - Web Servers
    range: last 90 days
    queries:
      - technology: ML Platform
        query: |
          INPUT user_session_command_sequences into trained LSTM model
          IF model flags a sequence as anomalous (e.g., 'whoami' -> 'ipconfig' -> 'net view')
            GENERATE alert for investigation
  - question: How can I detect if a single host is scanning the network for open SMB shares?
    context: This question aims to identify SMB scanning behavior with a simple, stateful rule. An adversary looking for open shares will often connect to a large number of hosts on port 445 (SMB) in a short period. This rule triggers an alert when a single source IP is observed making SMB connections to an unusually high number of unique destination IPs (e.g., more than 20) within a brief time window (e.g., 5 minutes). This is a strong indicator of active network reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Firewall Logs
      - Network TAPs and SPAN ports on core switches
      - Network Egress/Ingress points
      - File Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: SIEM/Network Security Monitor
        query: |
          COUNT unique destination_IPs on destination_port 445 by source_IP over 5-minute windows
          IF unique_destination_count > 20
            GENERATE alert for 'Potential SMB Scan' from source_IP
  - question: How can I statistically identify a host that is accessing an abnormally high number of network shares?
    context: This question uses a statistical approach to identify scanning behavior that might be slower or more targeted than a simple volumetric scan. By aggregating SMB connection events over a rolling time window (e.g., 10 minutes), we can count the number of unique destination hosts or shares accessed by each source host. This count is then compared against a dynamic baseline, such as the 98th percentile for all hosts. Any host whose activity significantly exceeds this percentile is flagged as a statistical outlier, indicating potential scanning.
    answer_sources:
      - Zeek conn.log
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Firewall Logs
      - Network TAPs and SPAN ports on core switches
      - Network Egress/Ingress points
      - File Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          FOR each source_host
            AGGREGATE unique_shares_accessed over 10-minute windows
            CALCULATE 98th percentile of unique_shares_accessed across all hosts
            IF source_host_count > 98th_percentile
              FLAG as anomalous scanner
  - question: Can machine learning detect SMB scanning by identifying anomalous connection rates or clustering outlier hosts?
    context: This question applies machine learning to detect SMB scanning. One method is to use a time-series anomaly detection algorithm (like ARIMA) to model the normal rate of new SMB connections from each host. The model learns the host's typical "heartbeat" and alerts on sudden spikes that deviate from the forecast. Another approach is to use a clustering algorithm (like DBSCAN) on connection features (e.g., number of unique destinations, total connections). This can group normal hosts together and isolate the outlier hosts that represent scanners.
    answer_sources:
      - Zeek conn.log
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Firewall Logs
      - Network TAPs and SPAN ports on core switches
      - Network Egress/Ingress points
      - File Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: ML Platform
        query: |
          // Time-series approach
          APPLY ARIMA model to time-series of new_SMB_connection_rate_per_host
          IF actual_rate deviates significantly from forecast
            GENERATE alert
          
          // Clustering approach
          APPLY DBSCAN to hosts based on features (unique_dest_count, total_connections)
          IDENTIFY hosts classified as outliers/noise
          FLAG for investigation
  - question: How can I identify when a user accesses a network share for the first time?
    context: This question focuses on detecting novel user-to-share access, which can be an early indicator of reconnaissance. By maintaining a state table of all (user, share) access pairs observed over a baseline period (e.g., 30-60 days), an analyst can generate a low-severity alert whenever a new pair is seen for the first time. While not inherently malicious, this "first-time access" event is a valuable piece of context that can be correlated with other suspicious activities to build a larger case.
    answer_sources:
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Windows Event ID 4624
      - File Servers
      - Domain Controllers (for authentication correlation)
      - Application Servers with sensitive shares
      - HR and Finance department servers
    range: last 90 days
    queries:
      - technology: SIEM/Stateful Database
        query: |
          MAINTAIN lookup table of historical (user, share) access
          ON new_share_access_event (user_A, share_X)
            IF (user_A, share_X) NOT IN historical_lookup_table
              GENERATE low-severity 'First Time Access' alert
              ADD (user_A, share_X) to table
  - question: Can I statistically detect when a user's share access pattern becomes more random or varied?
    context: "This question uses information theory to detect changes in a user's behavior. For each user, a historical profile of accessed shares and their frequencies is created. The Shannon entropy, $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$, is then calculated for their daily share access activity. Entropy measures the randomness or unpredictability of a variable. A sudden, sharp increase in a user's access entropy suggests they are exploring a much wider and more varied set of shares than usual, which is a strong indicator of discovery or reconnaissance activity."
    answer_sources:
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Windows Event ID 4624
      - File Servers
      - Domain Controllers (for authentication correlation)
      - Application Servers with sensitive shares
      - HR and Finance department servers
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          FOR each user
            PROFILE historical share access frequency: P(share_A), P(share_B), etc.
            ON a daily basis, CALCULATE Shannon entropy of shares accessed that day
            IF daily_entropy shows a sharp increase compared to historical baseline
              FLAG user for anomalous access behavior
  - question: Can graph-based machine learning identify anomalous user access to network shares?
    context: This question frames the problem in terms of a graph network. The environment is modeled as a bipartite graph where one set of nodes is users and the other is shares, and an edge represents an access event. A graph-based anomaly detection algorithm (like GraphSAGE) can learn "embeddings" (numerical representations) for each user and share based on normal access patterns within the graph structure. When a user attempts to access a new share, the model can score this potential new edge for anomalousness. A high score indicates the access is inconsistent with the user's learned role or community, pointing to potential malicious activity.
    answer_sources:
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Windows Event ID 4624
      - File Servers
      - Domain Controllers (for authentication correlation)
      - Application Servers with sensitive shares
      - HR and Finance department servers
    range: last 90 days
    queries:
      - technology: ML/Graph Platform
        query: |
          MODEL users and shares as a bipartite graph
          TRAIN GraphSAGE model on normal access patterns (edges)
          FOR each new share access attempt (a potential new edge)
            CALCULATE anomaly score for the new edge
            IF score > threshold
              GENERATE alert
  - question: How can I detect when a non-administrative user tries to access an administrative share?
    context: This question provides a high-fidelity method for detecting privilege escalation attempts or lateral movement. Administrative shares (like C$, ADMIN$, IPC$) are intended for system management. Access from a standard user account is highly suspicious. This rule filters SMB access logs for attempts to connect to these specific shares, using a regular expression like '^\\\\\\\\.*\\\\(C|ADMIN|IPC)\\\\$'. It then cross-references the source user account with a definitive list of privileged accounts. If the user is not on that list, a high-severity alert is generated.
    answer_sources:
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH SMB access logs (EID 5140 or Zeek)
          WHERE ShareName matches regex for C$, ADMIN$, IPC$
          AND Source_User NOT IN privileged_user_group
            GENERATE high_severity_alert
  - question: How can I statistically identify anomalous connections to administrative shares?
    context: This question provides two statistical methods to find unusual admin share access. First, by profiling which hosts normally connect to admin shares (e.g., specific management servers), we can alert whenever a connection originates from a host not on this established baseline. Second, we can analyze user behavior by calculating the ratio of a user's admin share connections to their total share connections. If this ratio is significantly higher than the user's own history or that of their peers, it suggests an unusual focus on administrative access and is flagged as suspicious.
    answer_sources:
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          // Host-based anomaly
          MAINTAIN baseline of hosts that normally access admin shares
          IF connection to admin share from host NOT IN baseline_host_set
            GENERATE alert
          
          // User-based anomaly
          CALCULATE ratio (admin_share_access / total_share_access) per user
          IF user_ratio is a statistical outlier compared to peer group or history
            FLAG as suspicious
  - question: Can a machine learning model score the likelihood that an administrative share access event is malicious?
    context: This question describes using a supervised machine learning model to provide a nuanced risk score for each admin share access event. Instead of a binary alert, a classification model (like Logistic Regression) can be trained to predict the probability of maliciousness. The model would use a rich set of features, such as whether the source user is privileged, if the source host is a known management server, the time of day, if the target is a critical asset like a domain controller, and if this is the first time this host has accessed the share. An event receiving a high probability score from the model indicates likely malicious activity requiring investigation.
    answer_sources:
      - Zeek smb_mapping.log
      - Windows Event ID 5140
      - Endpoint Workstation Subnets
      - Server Subnets
      - Domain Controllers
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - technology: ML Platform
        query: |
          FOR each admin share access event
            EXTRACT features (source_is_privileged, time_of_day, target_is_DC, etc.)
            INPUT features into trained classification model
            IF model_output_probability > high_threshold (e.g., 0.9)
              GENERATE high_severity_alert