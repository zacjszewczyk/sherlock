name: T1569: System Services
id: d3b0e3f0-8c2a-4b0d-9e6a-7f1b2c3d4e5f
description: This playbook helps investigate if an adversary is using system services for execution. It looks for evidence such as the creation of new services with malicious file hashes that connect to C2 infrastructure, the use of service management utilities like sc.exe to point to executables in suspicious directories, service names that are slight variations of legitimate ones (typosquatting), services that have an unusually short lifecycle (create, start, delete), or legitimate service host processes (like svchost.exe) spawning anomalous child processes (like cmd.exe).
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any newly created or modified services whose executable hash is a known malicious indicator and that are making outbound network connections to known command and control servers?
    context: This question aims to identify a high-fidelity indicator of compromise. By correlating service creation/modification events with threat intelligence on file hashes, we can pinpoint the installation of known malicious services. Further correlating this with process creation and network logs helps confirm the service is active and communicating with an adversary's infrastructure, providing strong evidence of a breach.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Domain Controllers
      - Critical Application Servers
      - Endpoint Subnets
      - Egress Network Gateways
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: JOIN (service creation/mod events) with (threat intel feed) on (file hash). JOIN results with (process creation events) on (hostname). JOIN results with (network connection logs) on (process ID). ALERT if (destination IP/domain) is in (C2 blocklist).
  - question: Are there any new services with an unusually low prevalence across the environment that are also making network connections to statistically rare destinations?
    context: This question uses statistical analysis to find unknown threats. A service binary appearing on very few machines is inherently suspicious. When that rare service also connects to a destination IP or domain that is itself rare or never-before-seen in the organization's network traffic, the likelihood of malicious activity is significantly increased. This approach helps detect novel malware not yet present in threat intelligence feeds.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Domain Controllers
      - Critical Application Servers
      - Endpoint Subnets
      - Egress Network Gateways
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CALCULATE prevalence of all new service file hashes over 30 days. IDENTIFY hashes below a percentile threshold (e.g., 1st percentile). For processes from these rare services, ANALYZE network connections. FLAG connections to destinations with low organizational prevalence (e.g., bottom 0.1%).
  - question: Can we detect malicious service creation events in real-time by analyzing features like binary entropy, path, and signature status?
    context: This question explores using a machine learning model to proactively identify malicious services at the moment of creation. By training a model on features that often distinguish malicious services from legitimate ones (e.g., high-entropy names, unsigned binaries, installation from temporary directories), the system can score new services and alert on those classified as malicious with high confidence, enabling faster response.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Domain Controllers
      - Critical Application Servers
      - Endpoint Subnets
      - Egress Network Gateways
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each new service event (7045), EXTRACT features (service name entropy, binary path location, is_signed, parent process). INPUT features into trained classification model. ALERT if model output score is > 0.90.
  - question: Are service management tools like sc.exe or PowerShell being used to create or modify services with executables located in non-standard, user-writable directories?
    context: Adversaries often place their malicious executables in user-writable locations like C:\Users or C:\Windows\Temp to avoid requiring elevated permissions for file writes. Legitimate services are almost always located in protected system directories like C:\Windows\System32. This question creates a rule to detect this specific mismatch, which is a common and reliable indicator of malicious service installation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - All Windows Endpoints
      - Windows Server Infrastructure
      - Administrator Workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH process creation events (4688) WHERE process_name is ('sc.exe', 'powershell.exe'). APPLY regex to command_line to find ('create', 'config', 'New-Service') AND a binary path in a suspicious directory ('C:\\Users\\*', 'C:\\Windows\\Temp\\*'). ALERT on match.
  - question: Are there any service management command lines with statistically unusual entropy, or are they being executed by an uncommon parent process?
    context: This question seeks to identify obfuscated commands or unusual execution chains. Adversaries may use complex, randomized, or encoded command-line arguments to evade simple keyword-based detections, which often results in high-entropy strings. Additionally, a legitimate tool like sc.exe being launched by an unusual parent process (e.g., a web browser or office application) is a strong sign of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - All Windows Endpoints
      - Windows Server Infrastructure
      - Administrator Workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR all (sc.exe, powershell.exe) commands that create/modify services, CALCULATE Shannon entropy of the command line. ALERT if entropy > 3 standard deviations above the mean baseline. Additionally, ALERT if parent process is not in the established baseline of typical parents (e.g., explorer.exe, cmd.exe).
  - question: Can we identify anomalous service management command lines by clustering them based on their structural features?
    context: This question applies unsupervised machine learning to find outliers without pre-existing labels. By converting command lines into feature vectors (e.g., length, argument count, path characteristics) and clustering them, we can identify normal patterns of administrative activity. Commands that do not fit into any large cluster are flagged as anomalies, representing potentially unique and malicious execution.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - All Windows Endpoints
      - Windows Server Infrastructure
      - Administrator Workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each service-related command (4688), CREATE a feature vector (length, arg_count, keyword_presence, path_depth). APPLY DBSCAN clustering algorithm to all vectors. INVESTIGATE points classified as noise or belonging to very small clusters.
  - question: Are there any new or modified services that share a name with a legitimate service but point to an incorrect or unauthorized executable path?
    context: This question is designed to detect a specific masquerading technique where an adversary creates a malicious service with a name identical to a legitimate one (e.g., 'wuauserv') but changes the associated binary path to point to their malware. By maintaining a baseline of correct service-name-to-path mappings, any deviation from this baseline can be immediately flagged as a high-confidence threat.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Standardized Server Builds (Golden Images)
      - Endpoint Fleet
      - Configuration Management Database (CMDB)
      - Software Asset Management Database
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MAINTAIN a baseline dictionary of {ServiceName: ImagePath}. ON service creation/modification event, CHECK if ServiceName exists in baseline. IF yes, CHECK if ImagePath matches the baseline value. ALERT if it does not match.
  - question: Are there any new services with names that are very similar, but not identical, to legitimate service names?
    context: This question targets typosquatting, a technique where adversaries give their malware names that are a close misspelling of legitimate ones (e.g., 'WinDefen' instead of 'WinDefend'). Human analysts can easily overlook such subtle differences. By systematically calculating the string edit distance (e.g., Levenshtein distance) between new service names and a list of known-good names, we can automatically flag these suspicious look-alikes.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Standardized Server Builds (Golden Images)
      - Endpoint Fleet
      - Configuration Management Database (CMDB)
      - Software Asset Management Database
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each new service name, CALCULATE Levenshtein distance against all names in a known-good baseline. IF the minimum distance is very low (e.g., 1 or 2), ALERT for potential typosquatting.
  - question: Can an autoencoder, trained on the characteristics of legitimate services, detect new anomalous services?
    context: This question uses a machine learning approach to build a deep understanding of "what is normal" for services in an environment. An autoencoder is trained to reconstruct feature vectors of legitimate services. When a new, malicious service with anomalous characteristics (e.g., strange name, unusual path) is processed, the model will fail to reconstruct it accurately, resulting in a high "reconstruction error." This error serves as a powerful anomaly score for detecting novel threats.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Standardized Server Builds (Golden Images)
      - Endpoint Fleet
      - Configuration Management Database (CMDB)
      - Software Asset Management Database
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN autoencoder on feature vectors from legitimate services (name embedding, path properties, etc.). FOR each new service, pass its feature vector through the autoencoder. CALCULATE reconstruction error. ALERT if error is above a learned threshold.
  - question: Are any services being created, started, and then quickly deleted in a short time frame?
    context: Adversaries may use services for transient execution to run a payload and then immediately remove the service to clean up their tracks and evade detection. This "create-start-delete" sequence happening within a few minutes is highly irregular for legitimate services, which are typically persistent. This question establishes a stateful rule to detect this specific lifecycle pattern.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 7036
      - Windows Event ID 7034
      - Windows Event ID 4688
      - All Windows Hosts
      - Software Deployment and Patch Management Servers
      - SIEM/Log Management System
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CREATE stateful rule correlating events by Host and ServiceName. TRIGGER alert if the sequence [7045 (Create)] -> [7036 (Start)] -> [4688 with 'sc.exe delete'] occurs for the same service within a 15-minute window.
  - question: Are any services exhibiting an unusually short runtime or crashing with an abnormally high frequency compared to a baseline?
    context: This question uses statistical analysis to find behavioral anomalies in service lifecycles. A service that runs for only a few seconds might be performing a quick, malicious action. A service that crashes repeatedly might be a poorly written piece of malware or be causing system instability. By baselining normal runtimes and crash frequencies, we can use outlier detection to spot these suspicious behaviors.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 7036
      - Windows Event ID 7034
      - Windows Event ID 4688
      - All Windows Hosts
      - Software Deployment and Patch Management Servers
      - SIEM/Log Management System
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: For each service, TRACK time delta between start (7036) and stop/crash (7034, 7036). USE IQR method to identify runtimes that are statistical outliers. Also, COUNT crash events (7034) per service per hour. ALERT if crash count exceeds the 99th percentile.
  - question: Can a machine learning model trained on normal service event sequences detect anomalous lifecycle patterns?
    context: This question proposes using a sequence-aware model like an LSTM to learn the complex temporal patterns of legitimate service lifecycles (e.g., a service that normally starts at boot and stops at shutdown). An adversary's use of a service (e.g., starting and stopping it intermittently) would create a sequence of events that deviates from the learned normal pattern, resulting in a high anomaly score from the model.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 7036
      - Windows Event ID 7034
      - Windows Event ID 4688
      - All Windows Hosts
      - Software Deployment and Patch Management Servers
      - SIEM/Log Management System
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL service lifecycle events (Create, Start, Stop, Crash) as a time series for each service. TRAIN an LSTM-based autoencoder on sequences from known-good services. In real-time, pass new event sequences through the model. ALERT if the reconstruction error is high.
  - question: Are legitimate service hosts like svchost.exe spawning suspicious child processes such as cmd.exe or powershell.exe?
    context: Service host processes like svchost.exe have a well-defined and limited set of child processes they should ever create. The spawning of a command shell (cmd.exe) or scripting engine (powershell.exe) from one of these hosts is a classic indicator of process injection or other attack techniques where an adversary has compromised the service and is using its privileges to execute commands. This is a high-fidelity rule for detecting lateral movement and execution.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Egress Network Gateways
      - DNS Resolvers
      - All Windows Hosts
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ALERT on process creation events (4688) WHERE ParentProcessName in ('svchost.exe', 'services.exe') AND ProcessName in ('cmd.exe', 'powershell.exe', 'wscript.exe').
  - question: Are service hosts spawning child processes that have never been seen before, or making network connections to statistically rare destinations?
    context: This question aims to detect novel attacks by baselining normal behavior. By creating a historical list of all legitimate child processes for a parent like svchost.exe, we can immediately spot when a new, un-baselined process is spawned. Similarly, by profiling the network destinations that service hosts normally connect to, we can flag connections to new or rare IPs, which could indicate C2 communication.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Egress Network Gateways
      - DNS Resolvers
      - All Windows Hosts
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BUILD baseline of normal child processes for each service host parent. ALERT when a child process not on the baseline is created. Separately, BUILD baseline of network destinations for service hosts. ALERT on connections to destinations with very low prevalence.
  - question: Can a process relationship graph and community detection algorithms identify anomalous parent-child process relationships?
    context: This question models the entire system's process activity as a large graph and uses machine learning to find abnormal connections. Community detection algorithms can identify clusters of related processes that normally interact (e.g., the "Office applications" cluster). An alert is generated when a new process relationship (an edge in the graph) forms between two processes from very different communities (e.g., svchost.exe from the "core OS" community spawning powershell.exe), indicating a likely security event.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Egress Network Gateways
      - DNS Resolvers
      - All Windows Hosts
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CONSTRUCT a historical process parent-child relationship graph. APPLY a community detection algorithm to identify normal clusters. In real-time, when a new parent-child relationship is observed, FLAG it if the parent and child belong to distant, unrelated communities.