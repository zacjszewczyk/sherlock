name: T1542: Pre-OS Boot
id: a0b1c2d3-e4f5-4a6b-8c7d-9e8f7a6b5c4d
description: This playbook helps investigators determine if an adversary is using pre-OS
  boot mechanisms, such as modifying the Master Boot Record (MBR) or UEFI firmware,
  to establish persistence or evade defenses. It focuses on detecting anomalous network
  communications indicative of bootkit C2, unauthorized modifications to boot configurations,
  raw disk write operations, suspicious system boot patterns, installation of malicious
  services/drivers, and the disabling of security controls at the boot level.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are any hosts making outbound connections to IP addresses or domains associated
    with known bootkit or UEFI implant C2 infrastructure?
  context: This question aims to detect direct communication with known malicious
    infrastructure. Bootkits and UEFI implants, like other malware, often require
    a command and control (C2) channel to receive instructions or exfiltrate data.
    By correlating network egress traffic with high-confidence threat intelligence
    feeds specific to this type of malware, we can identify compromised systems with
    high fidelity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress/Gateway
  - DNS Resolvers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH network_logs AND dns_logs | JOIN on connection_id | LOOKUP destination_ip,
      query_domain against bootkit_c2_threat_feed | RETURN hosts with matches
- question: Are any hosts exhibiting DNS query patterns indicative of Domain Generation
    Algorithm (DGA) usage?
  context: DGAs are frequently used by malware, including advanced bootkits, to dynamically
    generate a large number of domain names for C2 communication, making blocklisting
    difficult. A sudden and sustained increase in the character randomness (entropy)
    of DNS queries from a specific host compared to its own baseline can be a strong
    indicator of DGA activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress/Gateway
  - DNS Resolvers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH dns_logs | CALCULATE entropy for query_domain | FOR each host,
      BASELINE historical entropy | ALERT where current_entropy > 95th_percentile_of_baseline
- question: Have any anomalous network connections been identified that could represent
    covert C2 channels?
  context: This question seeks to identify C2 communications that do not rely on
    known IOCs or DGA. By using unsupervised machine learning models to analyze multiple
    features of network connections (duration, protocol, bytes transferred, etc.),
    we can spot connections that are statistical outliers compared to normal traffic.
    These anomalies, especially to rare destinations, may represent a hidden C2 channel
    from a bootkit.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress/Gateway
  - DNS Resolvers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL IsolationForest on network_logs (duration, protocol, bytes_sent,
      bytes_received) | IDENTIFY outliers | PRIORITIZE outliers to low-prevalence
      IPs/ASNs
- question: Are boot configuration utilities like bcdedit.exe or bootsect.exe being
    executed with modification commands by unauthorized users or processes?
  context: Adversaries use legitimate system utilities to modify boot settings for
    persistence. This question focuses on identifying the direct use of these tools
    (bcdedit.exe, bootsect.exe, reagentc.exe) with command-line arguments that indicate
    a modification attempt. By filtering for executions not originating from typical
    administrative sessions or known management tools, we can isolate suspicious
    activity.
  answer_sources:
  - Windows Event ID 4688
  - Critical Servers
  - Endpoint Workstations
  - Domain Controllers
  - IT Administrator Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation_events (EID 4688) | WHERE process_name IN ('bcdedit.exe',
      'bootsect.exe', 'reagentc.exe') AND command_line contains ('/set', '/mbr', '/enable')
      AND parent_process NOT IN (allowlist) | ALERT
- question: Is there an unusually high frequency of boot configuration utility executions
    on any single host or by any user?
  context: While a single execution of a boot utility might be legitimate, a high
    volume of executions is highly anomalous. This question aims to detect brute-force
    or repeated attempts to modify boot settings by establishing a baseline for how
    often these tools are typically run per host and user, and then alerting on significant
    deviations from that norm.
  answer_sources:
  - Windows Event ID 4688
  - Critical Servers
  - Endpoint Workstations
  - Domain Controllers
  - IT Administrator Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation_events (EID 4688) for boot_utils | COUNT executions
      per day by host, user | BASELINE daily counts | ALERT where daily_count > 99th_percentile_of_baseline
- question: Can we predictively identify malicious executions of boot utilities based
    on their execution context?
  context: This question moves beyond simple rules to a predictive model. By training
    a model on known-good administrative activity, we can teach it to recognize the
    subtle patterns of legitimate use (e.g., parent process, user context, typical
    arguments). The model can then score new, unseen events, flagging those that
    have a high probability of being malicious for analyst review, even if they don't
    match a specific rule.
  answer_sources:
  - Windows Event ID 4688
  - Critical Servers
  - Endpoint Workstations
  - Domain Controllers
  - IT Administrator Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL classification on process_events (parent_process, user, command_line)
      | PREDICT malicious_probability for new boot_util_executions | ALERT on high_probability
- question: Are any unauthorized processes writing directly to a physical disk's raw
    sectors?
  context: Writing directly to a physical drive (e.g., \\.\PhysicalDrive0) is a low-level
    operation that bypasses the file system and is a common method for installing
    bootkits into the MBR or VBR. This question aims to detect this highly suspicious
    activity by monitoring for raw disk write access and alerting when the process
    performing the action is not on an approved list of system tools (e.g., backup
    or disk management software).
  answer_sources:
  - Windows Event ID 4663
  - Endpoint and Server System Disks
  - System Reserved Partitions
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH object_access_events (EID 4663) | WHERE object_name matches 'PhysicalDrive*'
      AND access_type includes 'WriteData' AND process_name NOT IN (allowlist) |
      ALERT
- question: Has there been a statistical anomaly in the volume of raw disk write
    events on any host?
  context: This question seeks to detect suspicious raw disk access by focusing on
    volume changes. Even if performed by a process that could be legitimate, a sudden
    spike in raw disk write activity, especially outside of business hours or maintenance
    windows, is abnormal. Monitoring for statistical deviations from a host's baseline
    activity can uncover covert modification attempts.
  answer_sources:
  - Windows Event ID 4663
  - Endpoint and Server System Disks
  - System Reserved Partitions
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH raw_disk_write_events (EID 4663) | COUNT events per hour by host
      | BASELINE hourly volume with moving_average and std_dev | ALERT where hourly_count
      > (moving_average + 3*std_dev)
- question: Can we correlate anomalous raw disk write activity with other suspicious
    host events?
  context: A single anomaly can be noise, but correlated anomalies provide strong
    evidence of malicious activity. This question aims to increase detection confidence
    by linking a time-series anomaly in raw disk writes (Event ID 4663) with other
    suspicious events, like the execution of a rare or unsigned binary (Event ID
    4688), occurring in the same time window. A high composite score from these correlated
    events strongly indicates an MBR/VBR modification attempt.
  answer_sources:
  - Windows Event ID 4663
  - Endpoint and Server System Disks
  - System Reserved Partitions
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL time_series_anomaly on raw_disk_write_events | FOR each anomaly,
      SEARCH for suspicious_process_events within 5_minutes | CALCULATE composite_risk_score
      | ALERT on high_score
- question: Are any systems experiencing repeated, unexplained cycles of unexpected
    shutdowns and successful reboots?
  context: A poorly written or unstable bootkit may cause the system to crash during
    the boot process before it successfully loads. This results in a pattern of unexpected
    shutdowns followed by a successful startup. This question seeks to identify this
    pattern by correlating unexpected shutdown events (Event ID 6008) with subsequent
    boot events (Event ID 6005) in a short time frame, especially if the pattern repeats.
  answer_sources:
  - Windows Event ID 6008
  - Windows Event ID 6005
  - System Event Logs on Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH for event_sequence [EID 6008 -> EID 6005] on same_host within 15_minutes
      | COUNT sequences per host per 24_hours | ALERT where count > 1
- question: Have any hosts demonstrated a significant drop in their boot reliability
    without a known cause?
  context: This question quantifies system stability by calculating the Mean Time
    Between Failure (MTBF) for system boots. A stable system has a high MTBF. A sudden,
    sharp drop in this metric for a specific host, without a corresponding hardware
    issue or change ticket, suggests an underlying problem. This instability could
    be caused by a bootkit interfering with the normal boot sequence.
  answer_sources:
  - Windows Event ID 6008
  - Windows Event ID 6005
  - System Event Logs on Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: CALCULATE MTBF for each host from boot_events (6005, 6006, 6008) | BASELINE
      MTBF across enterprise | ALERT where host_MTBF < 5th_percentile_of_baseline
- question: Do system event log sequences indicate a boot pattern that is anomalous
    or resembles known malicious bootkit behavior?
  context: Normal system reboots, crashes, and maintenance activities produce distinct
    sequences of events in the system log. This question proposes using a sequence-based
    machine learning model (like an RNN) to learn these normal patterns. The model
    can then classify new sequences of boot-related events, flagging any that are
    statistically improbable or match patterns previously associated with bootkit-induced
    instability.
  answer_sources:
  - Windows Event ID 6008
  - Windows Event ID 6005
  - System Event Logs on Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL RNN on sequences of system_event_IDs | CLASSIFY new boot sequences
      | ALERT on sequences classified as anomalous or malicious
- question: Has a new service or driver been installed whose file hash matches a known
    malicious bootkit component?
  context: Adversaries often install their bootkit components as system services
    or drivers to ensure they are loaded early in the boot process. This is a high-confidence
    detection that triggers upon the creation of a new service (Event ID 7045), extracts
    the associated file, and checks its hash against a threat intelligence feed of
    known bootkit malware. A match is a strong indicator of compromise.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Windows System Registry (Services)
  - System32\drivers directory
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH new_service_installs (EID 7045) | EXTRACT file_path | GET file_hash
      | LOOKUP file_hash in bootkit_malware_feed | ALERT on match
- question: Has a new service been installed with a statistically rare name or file
    path?
  context: Beyond known-bad hashes, adversaries may use custom tools that are not
    in threat intelligence feeds. This question aims to find them by identifying
    outliers. By analyzing the prevalence of all service names and paths across the
    environment, we can flag the installation of a new service that is exceptionally
    rare (e.g., seen on only one machine) and not part of a known software deployment,
    indicating it may be a custom malicious implant.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Windows System Registry (Services)
  - System32\drivers directory
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH new_service_installs (EID 7045) | CALCULATE prevalence of service_name
      and file_path across all hosts | ALERT where prevalence < 0.1% AND not part_of_known_deployment
- question: Can we predictively identify a malicious service installation based on
    its attributes?
  context: This question uses a machine learning model to score the risk of a new
    service installation. The model considers various features like the randomness
    (entropy) of the service name, the rarity of its file path, its start type, and
    the account it runs as. A high-risk score from the model can trigger a more in-depth,
    automated analysis (like sandboxing) for services that might not be obviously
    malicious but have a collection of suspicious characteristics.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Windows System Registry (Services)
  - System32\drivers directory
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL classification on service_install_events (name_entropy, path_rarity,
      start_type) | PREDICT malicious_probability for new service (EID 7045) | ALERT
      on high_probability
- question: Has the boot configuration been modified to explicitly disable security
    controls?
  context: A key goal for a bootkit is to disable security software before it can
    load. Adversaries use tools like `bcdedit.exe` to achieve this. This question
    looks for the explicit command-line arguments that disable critical Windows security
    features like Data Execution Prevention (`nx AlwaysOff`), driver signature enforcement
    (`testsigning on`), or boot the system into a less-secure Safe Mode. Such commands
    are highly suspicious and warrant immediate investigation.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint and Server Boot Configuration Data stores
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation_events (EID 4688) | WHERE process_name is 'bcdedit.exe'
      AND command_line contains ('nx AlwaysOff', 'testsigning on', 'safeboot') | ALERT
- question: Has the `bcdedit.exe` utility been used with rare or never-before-seen
    command-line arguments related to security policies?
  context: Adversaries may use obscure or undocumented command-line options to bypass
    simple signature-based rules. This question establishes a baseline of all `bcdedit.exe`
    argument combinations seen across the environment. It then alerts on the use
    of a new or statistically rare combination, especially if the arguments involve
    keywords related to security policies, which could indicate a novel technique
    to weaken system defenses.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint and Server Boot Configuration Data stores
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH bcdedit.exe executions (EID 4688) | BASELINE frequency of all command_line_argument
      combinations | ALERT on rare or new combinations related to security
- question: Can we automatically classify the intent of `bcdedit.exe` commands to
    find those that degrade security?
  context: This question applies Natural Language Processing (NLP) to understand
    the *purpose* of a command, rather than just matching keywords. By training a
    model to classify `bcdedit.exe` command lines into categories like 'information
    gathering' or 'security degradation', we can create a more intelligent and resilient
    detection that can identify new variations of malicious commands designed to
    weaken a host's security posture.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint and Server Boot Configuration Data stores
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL NLP on bcdedit.exe command_lines | CLASSIFY intent of new commands
      | ALERT on intent 'Suspicious Security-Degradation'
- question: Have any critical security services failed to start or stopped running
    after a reboot without a legitimate reason?
  context: If a bootkit successfully disables a security control, the corresponding
    service (e.g., EDR agent, antivirus) will fail to start or will be terminated.
    This question monitors the state of a predefined list of critical security services.
    It alerts if a service stops or fails to start, and that event cannot be correlated
    with an authorized action like a software update or a manual stop by an administrator.
  answer_sources:
  - Windows Event ID 7036
  - Windows Event ID 7000
  - Windows Event ID 7024
  - Service Control Manager logs on Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH service_stopped_or_failed (EID 7036, 7000) for critical_services
      | IF event is NOT preceded by authorized_change_log within 1_hour | ALERT
- question: Is there a widespread, statistically significant increase in failures
    for a particular security service?
  context: While a single service failure on one host might be a random error, a
    sudden spike in failures for the same service across many endpoints is a strong
    indicator of a widespread, targeted attack. This question establishes a fleet-wide
    baseline failure rate for each critical security product and alerts when the
    observed failure rate rises dramatically, suggesting an adversary is actively
    disabling that control.
  answer_sources:
  - Windows Event ID 7036
  - Windows Event ID 7000
  - Windows Event ID 7024
  - Service Control Manager logs on Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: CALCULATE daily_failure_rate per 1000 hosts for each critical_service
      | BASELINE historical failure_rate | ALERT where current_rate > (baseline_rate
      + 3*std_dev)
- question: Are security services transitioning between states in an improbable or
    anomalous way?
  context: Services follow predictable state transitions (e.g., 'Running' to 'Stopping'
    to 'Stopped'). A forceful termination by malware can bypass these normal steps,
    leading to an improbable transition (e.g., directly from 'Running' to 'Stopped').
    This question uses a model to learn the normal state transition probabilities
    and flags any sequence that violates this learned behavior, indicating a potential
    forceful termination of a security agent.
  answer_sources:
  - Windows Event ID 7036
  - Windows Event ID 7000
  - Windows Event ID 7024
  - Service Control Manager logs on Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL state_transition on service_manager_events | IDENTIFY improbable
      state transitions for security services | ALERT on anomaly
- question: Are there any 'ghost assets' on the network that are generating traffic
    but not sending security logs?
  context: A successful bootkit may disable EDR or logging agents entirely. The host
    will still be active on the network, but it will become invisible to the SIEM
    from a host-logging perspective. This question identifies these 'ghost assets'
    by cross-referencing network activity logs with SIEM ingestion logs. Any host
    seen generating network traffic but which has not sent any host-based logs within
    a recent time window is flagged for investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - SIEM log ingestion data
  - Network Egress/Gateway
  - SIEM/Log Aggregator Ingestion Point
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: GET all active_IPs from network_logs in last_hour | GET all reporting_hosts
      from SIEM_logs in last_hour | ALERT on IPs in active_IPs but NOT in reporting_hosts
- question: Are any hosts generating a disproportionately high amount of network
    traffic compared to the volume of security logs they are producing?
  context: This question seeks to find hosts where security telemetry might be degraded
    but not entirely absent. It establishes a normal ratio of network data transmitted
    to security logs generated for each host. If a host's network activity significantly
    increases without a corresponding increase in its logging output, it suggests
    that some activity on the host is not being properly monitored or reported, potentially
    due to a compromised security agent.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - SIEM log ingestion data
  - Network Egress/Gateway
  - SIEM/Log Aggregator Ingestion Point
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each host, CALCULATE ratio of (network_MB_sent / security_log_count)
      | BASELINE this ratio for each host | ALERT where current_ratio deviates >
      3*std_dev from baseline
- question: Is the volume of security logs from any host significantly lower than
    what would be predicted based on its network activity?
  context: This is a more advanced approach to finding telemetry gaps. It uses a
    regression model to predict the *expected* log volume from a host based on its
    historical network traffic patterns. By continuously comparing this prediction
    to the *actual* log volume received, the system can detect subtle but sustained
    drops in reporting that indicate a potential compromise or malfunctioning of
    the host's logging capabilities.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - SIEM log ingestion data
  - Network Egress/Gateway
  - SIEM/Log Aggregator Ingestion Point
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL regression to predict log_volume from network_traffic_features |
      CALCULATE prediction_error = (actual_log_volume - predicted_log_volume) | ALERT
      on large, sustained negative error