name: 'T1558.002: Silver Ticket'
id: 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
description: "Investigates whether an adversary has forged a Kerberos service ticket (Silver Ticket) to access a specific resource. This is identified by observing Kerberos logons using weak RC4_HMAC encryption when AES is required, command-line activity indicative of ticket forging tools like Mimikatz or Rubeus, unauthorized processes accessing LSASS memory to steal hashes, Kerberos logons on servers without corresponding ticket requests on Domain Controllers, and anomalous logon patterns to high-value services."
type: 'technique'
related:
  - 'TA0006: Credential Access'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: "Is there a Kerberos logon event using RC4 encryption for a service account that is configured to only use AES?"
    context: "This question is critical because a mismatch between the encryption type used in a logon ticket (RC4, type '0x17') and the encryption type configured on the service account in Active Directory (AES) is a strong indicator of a forged Silver Ticket. Adversaries often forge tickets with weaker, easier-to-crack encryption like RC4, bypassing the stronger security policies configured on the domain."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Zeek kerberos.log'
      - 'Active Directory'
      - 'NAI: Domain Controllers, Critical Application and File Servers (e.g., SharePoint, MSSQL, CIFS shares), LDAP services'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "FOR each Windows Event ID 4624 WHERE LogonType=3 and TicketEncryptionType='0x17': LOOKUP 'msDS-SupportedEncryptionTypes' for the service account in Active Directory. ALERT if attribute does not include RC4 support."
  - question: "Has there been an anomalous increase in RC4-HMAC ticket usage for any specific Service Principal Name (SPN)?"
    context: "This question seeks to identify statistical anomalies in encryption usage. By baselining the normal proportion of RC4-HMAC logons for each service, a sudden spike can reveal an adversary's activity. Even if RC4 is permitted, a significant deviation from the norm suggests that an attacker may be exploiting it to forge tickets for a specific service."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Zeek kerberos.log'
      - 'Active Directory'
      - 'NAI: Domain Controllers, Critical Application and File Servers (e.g., SharePoint, MSSQL, CIFS shares), LDAP services'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "FOR each SPN: CALCULATE daily percentage of RC4 logons over 30 days to create baseline. MONITOR daily RC4 percentage. ALERT if percentage > 99th percentile of baseline."
  - question: "Can machine learning classify a Kerberos logon as malicious, with RC4 encryption being a primary contributing factor?"
    context: "This question leverages advanced analytics to detect subtle attack patterns that rule-based methods might miss. A supervised model trained on various logon features can learn the complex characteristics of a forged ticket event. If the model flags a logon as malicious and feature importance analysis (like SHAP) highlights the weak encryption type as a key reason, it provides a high-confidence signal of a Silver Ticket attack."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Zeek kerberos.log'
      - 'Active Directory'
      - 'NAI: Domain Controllers, Critical Application and File Servers (e.g., SharePoint, MSSQL, CIFS shares), LDAP services'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "INPUT logon features (account type, service, source IP, hour, encryption type) into trained classification model. IF classification is 'malicious' AND feature importance for 'encryption type=0x17' is high: ALERT."
  - question: "Is there evidence of process command-line arguments matching known Silver Ticket generation or usage patterns?"
    context: "This question targets the tools adversaries use to create and inject Silver Tickets. Tools like Mimikatz and Rubeus use specific command-line syntax to define the ticket's parameters (target service, user to impersonate, hash, etc.). Detecting these patterns directly in process creation events is a highly reliable way to catch the attack at the execution stage."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'NAI: All Endpoints and Servers, especially Domain Controllers, Privileged Access Workstations, and Critical Service Servers'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "SEARCH process creation events (4688, Sysmon 1) for command lines matching regex for 'Rubeus.exe silver', 'asktgs', '/ticket:', '/ptt', '/service:*', '/hash:*', 'kerberos::golden'. ALERT on match."
  - question: "Have any command lines for common processes like PowerShell or cmd.exe shown unusually high entropy?"
    context: "Adversaries often encode or obfuscate their malicious commands to evade simple signature-based detection. This question uses the concept of Shannon entropy to measure the randomness or complexity of command-line strings. A command with abnormally high entropy for a given host and process suggests it may contain an obfuscated payload, a common tactic in fileless malware and in-memory attacks, including the use of forged tickets."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'NAI: All Endpoints and Servers, especially Domain Controllers, Privileged Access Workstations, and Critical Service Servers'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "FOR processes like powershell.exe, cmd.exe: CALCULATE Shannon entropy of command-line arguments. ESTABLISH per-host 30-day rolling average. ALERT if entropy > 3 standard deviations above average."
  - question: "Can an NLP model classify a command-line string as malicious, indicating potential ticket forging activity?"
    context: "This question applies Natural Language Processing (NLP) to understand the structure and intent of command lines, going beyond simple keyword matching or entropy. A sequence-based model can learn the grammatical patterns of malicious commands, enabling it to detect novel or heavily obfuscated variations of Silver Ticket attacks that other methods might miss."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'NAI: All Endpoints and Servers, especially Domain Controllers, Privileged Access Workstations, and Critical Service Servers'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "INPUT raw command-line string into trained NLP model. IF model classifies command as malicious with high probability: ALERT."
  - question: "Has an unauthorized process attempted to read the memory of the LSASS process?"
    context: "This question aims to detect a common precursor to creating a Silver Ticket: stealing the NTLM hash of the target service account. The LSASS process stores credentials in memory, and adversaries must access it to get the necessary hash. By monitoring for memory read access to lsass.exe from any process not on a pre-approved allow-list, you can catch this credential harvesting step."
    answer_sources:
      - 'Sysmon Event ID 10'
      - 'Windows Event ID 4656'
      - 'NAI: Domain Controllers, Critical Application and File Servers where target service accounts run'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "MONITOR for Sysmon Event 10 where TargetProcess is 'lsass.exe' and GrantedAccess includes '0x1010' or '0x1410'. IF SourceProcess is NOT in allow-list: ALERT."
  - question: "Has a process accessed LSASS memory for the first time on a given host or with an unusually low frequency?"
    context: "This question uses historical frequency analysis to spot anomalous LSASS access. Legitimate processes that access LSASS (like antivirus) do so predictably. An attacker's tool, however, will likely be a 'first-seen' event on that host. Detecting such rare or first-time access provides a strong signal of credential dumping activity, even without a pre-defined allow-list."
    answer_sources:
      - 'Sysmon Event ID 10'
      - 'Windows Event ID 4656'
      - 'NAI: Domain Controllers, Critical Application and File Servers where target service accounts run'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "MAINTAIN 90-day history of (SourceProcess, Host) pairs accessing lsass.exe. IF a new access event occurs for a pair not in the history: ALERT."
  - question: "Does an unsupervised machine learning model flag any LSASS memory access event as an outlier?"
    context: "This question employs anomaly detection to identify suspicious LSASS access without relying on signatures or baselines. An Isolation Forest model, for example, can learn what normal access looks like based on features like the source process, parent process, and user context. It can then flag any event that deviates significantly from this learned norm as an outlier, effectively detecting novel or disguised credential dumping tools."
    answer_sources:
      - 'Sysmon Event ID 10'
      - 'Windows Event ID 4656'
      - 'NAI: Domain Controllers, Critical Application and File Servers where target service accounts run'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "INPUT LSASS access features (SourceImage, User, ParentProcess) into trained Isolation Forest model. IF model flags event as an outlier with a high anomaly score: ALERT."
  - question: "Is there a successful Kerberos logon on a member server that lacks a corresponding service ticket request (TGS-REQ) on a Domain Controller?"
    context: "This question looks for a fundamental inconsistency in the Kerberos protocol. A legitimate logon requires the client to first request a service ticket from a Domain Controller (KDC). A Silver Ticket is forged offline and injected on the client, so it bypasses this step. Therefore, seeing a successful logon on a server without a preceding ticket request on the DC is a very strong indicator of a forged ticket."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4769'
      - 'Zeek kerberos.log'
      - 'NAI: Domain Controllers (KDCs), Member Servers hosting critical services (e.g., SharePoint, MSSQL)'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "FOR each successful logon (Event 4624) on a server: SEARCH for a corresponding ticket request (Event 4769) on any DC within the last 10 hours with matching Account and Service names. IF no match is found: ALERT."
  - question: "Has there been an anomalous spike in the number of 'unmatched logons' for any server or service?"
    context: "This question operationalizes the detection of unmatched logons by looking for unusual volumes. While a single unmatched logon is highly suspicious, a sudden increase in their count for a specific service or server is an even stronger signal of a targeted attack. Baselining this metric (which should be near zero) and alerting on deviations can help prioritize investigations."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4769'
      - 'Zeek kerberos.log'
      - 'NAI: Domain Controllers (KDCs), Member Servers hosting critical services (e.g., SharePoint, MSSQL)'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "COUNT hourly 'unmatched logons' per server/service. ESTABLISH 30-day moving average. ALERT if hourly count exceeds 4 standard deviations above the average or a static threshold (e.g., >5)."
  - question: "Does a time-series forecasting model predict a significant, unexplained increase in the count of 'unmatched logons'?"
    context: "This question applies advanced time-series analysis to detect anomalies in the 'unmatched logon' metric. A model like SARIMA can account for any potential seasonality or trends in the data (however unlikely for this metric). An alert is triggered only when the observed count is statistically significant and falls outside the model's predicted confidence interval, providing a robust, low-noise signal of abnormal activity."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4769'
      - 'Zeek kerberos.log'
      - 'NAI: Domain Controllers (KDCs), Member Servers hosting critical services (e.g., SharePoint, MSSQL)'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "MODEL time series of 'unmatched logon' counts per service. FORECAST expected count for next interval. IF observed count falls outside prediction confidence interval: ALERT."
  - question: "Did a Kerberos logon to a high-value service violate a pre-defined static access policy?"
    context: "This question provides a high-fidelity, low-noise detection method for the most critical assets. By defining strict rules for who can access high-value services (e.g., domain admin accounts), from where (e.g., specific subnets), and when (e.g., business hours), any deviation from this policy is immediately suspicious and warrants a high-priority alert. This is particularly effective against Silver Ticket attacks targeting critical infrastructure."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Zeek conn.log'
      - 'NAI: VPN Gateways, All Servers, Privileged User Workstations'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "FOR logons to high-value services: CHECK if Source IP, Logon Hour, or Service Accessed violates the static access policy. IF violation occurs: ALERT."
  - question: "Did a Kerberos logon exhibit a combination of rare behavioral characteristics, resulting in a high risk score?"
    context: "This question seeks to identify attacks by building a comprehensive behavioral profile for each user and service. A single anomalous feature (e.g., a logon from a new country) might be a false positive, but a combination of several rare features (e.g., new country, unusual time, rarely accessed service) is highly indicative of a compromise. By scoring each logon based on the rarity of its combined features, this method can detect sophisticated attacks that try to blend in."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Zeek conn.log'
      - 'NAI: VPN Gateways, All Servers, Privileged User Workstations'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "FOR each logon: CALCULATE rarity score for each feature (source country, hour, service). COMBINE into a cumulative risk score. IF score > 98th percentile of historical scores: ALERT."
  - question: "Did an unsupervised clustering algorithm classify a Kerberos logon event as a noise point or an outlier?"
    context: "This question uses clustering to define 'normal' activity in a multi-dimensional space. Normal logons, with their typical user, source, and service combinations, will form dense clusters. An attacker using a forged ticket is likely to create a logon event with an unusual combination of features that does not fit into any existing cluster. An algorithm like DBSCAN can identify these events as 'noise' or outliers, effectively flagging them as anomalous without prior knowledge of attack patterns."
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Zeek conn.log'
      - 'NAI: VPN Gateways, All Servers, Privileged User Workstations'
    range: 'last 90 days'
    queries:
      - technology: 'pseudocode'
        query: "APPLY DBSCAN clustering to historical logon data. FOR each new logon: IF it is classified as a noise point (does not belong to a cluster): ALERT."