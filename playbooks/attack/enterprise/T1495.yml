name: T1495: Firmware Corruption
id: 5e9e0c1a-7b2a-4f8c-8d1a-6e3b0c1a9e8d
description: This playbook helps investigate whether an adversary has impacted system or device availability by corrupting firmware. It focuses on detecting the presence of known firmware modification tools, identifying the anomalous execution of legitimate update utilities, correlating event sequences that form a firmware attack chain, analyzing suspicious network traffic to device management interfaces, and detecting widespread, statistically significant increases in system crashes or reboots that could indicate a coordinated destructive attack.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a known firmware modification tool been observed on the network or executed on an endpoint?
  context: This question seeks to identify high-fidelity indicators of compromise (IOCs) related to firmware attacks. Detecting a file hash or process hash associated with a known malicious firmware tool (like Lojax or TrickBoot components) provides strong evidence that an adversary is attempting to, or has already, corrupted a system's firmware.
  answer_sources:
  - Zeek files.log
  - Windows Event ID 4688
  - Enterprise Endpoints, Domain Controllers, Core Network Switches, Internet Gateway
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events OR file_transfer_events WHERE file_hash IN (threat_intelligence_feed_of_firmware_tools)
- question: Have any executable files with unusually high filename entropy, potentially indicating obfuscation, been transferred over the network?
  context: Adversaries often use randomized filenames to evade signature-based detections. This question attempts to identify such files by calculating the Shannon entropy of filenames for executables transferred over the network. A filename with an entropy score significantly higher than the established baseline is suspicious and may be an obfuscated malicious tool.
  answer_sources:
  - Zeek files.log
  - Enterprise Endpoints, Domain Controllers, Core Network Switches, Internet Gateway
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_transfer_events | CALCULATE shannon_entropy(filename) | FILTER entropy_score > baseline_95th_percentile
- question: Can we identify potentially malicious firmware utilities among unknown executables using machine learning models?
  context: This question proposes a proactive, behavioral approach to detect novel threats. By training a classification model on features from process creation and file transfer events (e.g., file size, parent process, IP reputation), it's possible to score previously unseen executables for their likelihood of being a malicious firmware utility, even without a known signature.
  answer_sources:
  - Windows Event ID 4688
  - Zeek files.log
  - Enterprise Endpoints, Domain Controllers, Core Network Switches, Internet Gateway
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT process_creation_events, file_transfer_events | EXTRACT features (file_size, mime_type, ip_rep, parent_process, etc.) | APPLY classification_model | FILTER model_score > high_confidence_threshold
- question: Has a legitimate firmware update utility been executed from an unauthorized location or without a valid digital signature?
  context: Adversaries frequently misuse legitimate tools to carry out attacks. This question aims to detect this "living off the land" technique by checking for executions of known firmware update utilities that occur in suspicious contexts, such as running from a temporary directory instead of 'Program Files' or lacking the expected vendor's digital signature, which could indicate tampering.
  answer_sources:
  - Windows Event ID 4688
  - Enterprise Endpoints, Mission Critical Servers (e.g., Database, Application), Virtualization Hosts
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events WHERE process_name IN (known_firmware_utilities) AND (process_path NOT IN (authorized_paths) OR digital_signature IS invalid)
- question: Has a legitimate firmware update utility been executed with anomalous command-line arguments?
  context: This question focuses on how a tool is being used, rather than just that it was used. By baselining the normal command-line arguments for legitimate administrative tasks, we can detect anomalous usage. Unusual or rare arguments could be an attempt to bypass safety checks, force a malicious update, or perform other destructive actions.
  answer_sources:
  - Windows Event ID 4688
  - Enterprise Endpoints, Mission Critical Servers (e.g., Database, Application), Virtualization Hosts
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events WHERE process_name IN (known_firmware_utilities) | CALCULATE levenshtein_distance(command_line, baseline_arguments) | FILTER distance > statistical_threshold
- question: Can we identify anomalous firmware utility executions by clustering them based on their execution context?
  context: This question uses unsupervised machine learning to find outliers in activity. By clustering executions of firmware utilities based on features like command-line arguments, parent process, and user context, normal, repeated administrative activity will form dense clusters. Any execution that falls outside these clusters (a "noise point") is highly anomalous and warrants investigation as potential malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Enterprise Endpoints, Mission Critical Servers (e.g., Database, Application), Virtualization Hosts
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT process_creation_events WHERE process_name IN (known_firmware_utilities) | EXTRACT features (command_line, parent_process, user) | APPLY DBSCAN_clustering | IDENTIFY noise_points
- question: Has a sequence of events consistent with a firmware attack chain (recon, tool acquisition, privileged execution, system crash) occurred on a single host?
  context: This question looks for a logical progression of an attack rather than a single atomic event. Correlating a sequence of hardware reconnaissance, a download from a suspicious source, the privileged execution of a new file, and a subsequent unexpected system crash provides strong, context-rich evidence of a firmware corruption attack in progress.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Windows Event ID 1074
  - Windows Event ID 6006
  - Windows Event ID 41
  - Enterprise Endpoints, Virtualization Hosts, Core Network Infrastructure
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE events on host within 60_minutes: (1. process_creation of 'wmic baseboard get') -> (2. network_connection to low_rep_ip with file_download) -> (3. privileged_execution of new_or_unsigned_file) -> (4. unexpected_shutdown_event)
- question: Are the time intervals between the stages of a suspected firmware attack chain unusually short, suggesting automation?
  context: This question adds a temporal analysis layer to the attack chain detection. Human activity typically has natural delays, whereas scripted attacks execute commands in rapid succession. Identifying an attack chain where the time between steps is extremely short can help differentiate a deliberate, automated attack from a series of coincidentally related benign events.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Windows Event ID 1074
  - Windows Event ID 6006
  - Windows Event ID 41
  - Enterprise Endpoints, Virtualization Hosts, Core Network Infrastructure
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH for attack_chain_sequence | CALCULATE time_delta between each step | FILTER time_delta < 5th_percentile_of_baselined_deltas
- question: Does a sequence of host events including hardware reconnaissance, privileged execution, and a system crash have a low probability of being normal activity according to a sequence-aware machine learning model?
  context: This question aims to use advanced machine learning to model the normal "rhythm" of host activity. A model like an RNN can learn valid sequences of events. If a sequence matching the firmware attack pattern is observed and the model assigns it a very low probability of being normal, it serves as a powerful indicator of a malicious anomaly.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Windows Event ID 1074
  - Windows Event ID 6006
  - Windows Event ID 41
  - Enterprise Endpoints, Virtualization Hosts, Core Network Infrastructure
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT stream of host_events (process, network, system) | APPLY RNN_or_HMM_model | FILTER event_sequence_probability < low_probability_threshold AND sequence contains firmware_attack_chain_elements
- question: Has any unauthorized traffic, such as connections from unapproved sources or using unusual protocols, been observed targeting network device management interfaces?
  context: Network device management interfaces are critical points of control. This question seeks to enforce a strict zero-trust policy for these interfaces. Any connection that does not originate from a pre-approved administrator subnet or use an authorized protocol (like SSH or HTTPS) should be considered a potential attempt to gain unauthorized access to compromise the device.
  answer_sources:
  - Zeek conn.log
  - Network Management Interfaces (Switches, Routers, Firewalls), Out-of-Band Management Network
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network_connections WHERE destination_ip IN (management_interfaces) AND (source_ip NOT IN (admin_subnets) OR protocol NOT IN (allowed_protocols))
- question: Have any network device management interfaces received an anomalously large volume of inbound data?
  context: The act of flashing a new firmware image, whether legitimate or malicious, involves transferring a relatively large file to the device. This question aims to detect this activity by monitoring the volume of inbound data to management interfaces. A sudden, large spike in data transfer that exceeds the historical baseline is a strong indicator of a potential firmware update attempt.
  answer_sources:
  - Zeek conn.log
  - Network Management Interfaces (Switches, Routers, Firewalls), Out-of-Band Management Network
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network_connections WHERE destination_ip IN (management_interfaces) | AGGREGATE sum(inbound_bytes) over 1_hour | FILTER sum_bytes > 98th_percentile_of_baseline
- question: Does the traffic pattern to a critical network device's management interface significantly deviate from its forecasted behavior?
  context: This question uses time-series analysis to model the normal traffic patterns (volume and connection counts) for device management. It can detect more subtle anomalies than simple thresholding. An alert is generated when observed traffic deviates significantly from what the model predicts, suggesting an abnormal situation that might precede a device failure or compromise.
  answer_sources:
  - Zeek conn.log
  - Network Management Interfaces (Switches, Routers, Firewalls), Out-of-Band Management Network
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT time_series_data (traffic_volume, connection_count) for management_interfaces | APPLY ARIMA_model | FILTER observed_value outside confidence_interval
- question: Has there been a widespread outbreak of unexpected system shutdowns across the enterprise that is not associated with authorized maintenance?
  context: While a single system crash is often a hardware issue, a large number of systems crashing simultaneously is a strong indicator of a coordinated attack, such as the deployment of destructive malware. This question seeks to detect this by alerting when the number of hosts reporting unexpected shutdowns exceeds a set threshold, after filtering out planned maintenance periods.
  answer_sources:
  - Windows Event ID 1074
  - Windows Event ID 6005
  - Windows Event ID 6006
  - Windows Event ID 41
  - All Enterprise Endpoints and Servers, Change Management Database/System
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH unexpected_shutdown_events within 30_minutes | COUNT distinct hosts | FILTER host_count > 20 AND event_timestamp NOT IN (change_management_windows)
- question: Is the current rate of unexpected system shutdowns statistically significant compared to the recent historical average?
  context: This question uses a dynamic approach to detect an outbreak of system failures. By calculating a moving average and standard deviation of crash events, it establishes a baseline of "normal" failure rates. An alert is triggered only when the current rate is a statistical anomaly (e.g., more than three standard deviations above average), reducing false positives from random fluctuations.
  answer_sources:
  - Windows Event ID 1074
  - Windows Event ID 6006
  - Windows Event ID 41
  - All Enterprise Endpoints and Servers, Change Management Database/System
  range: last 90 days
  queries:
  - technology: pseudocode
    query: AGGREGATE count of unexpected_shutdowns in 15_min_intervals | CALCULATE 24h_moving_average and std_dev | FILTER current_interval_count > (moving_average + 3 * std_dev)
- question: Are the observed system failures clustered together in both time and network location?
  context: This question aims to identify the propagation pattern of an attack. Random hardware failures are typically distributed across the enterprise. In contrast, a destructive attack might spread through a specific network segment, causing failures that are tightly grouped in both time and network topology. Identifying such clusters helps pinpoint the scope of an attack and distinguish it from unrelated issues.
  answer_sources:
  - Windows Event ID 1074
  - Windows Event ID 6006
  - Windows Event ID 41
  - All Enterprise Endpoints and Servers, Change Management Database/System
  range: last 90 days
  queries:
  - technology: pseudocode
    query: INPUT shutdown_events with (timestamp, host_subnet) | APPLY ST-DBSCAN_clustering | IDENTIFY clusters of failures close in time and network_space