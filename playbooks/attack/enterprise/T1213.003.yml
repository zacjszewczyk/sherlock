name: T1213.003: Code Repositories
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is collecting proprietary source code or unsecured credentials from internal or private code repositories. Detections focus on identifying outbound network connections to known malicious repositories, spotting unusual git command-line usage indicative of mass data collection, flagging anomalous data transfer volumes, detecting abnormal user access patterns (such as by privileged accounts or to an unusually high number of repositories), and identifying the execution of git on non-developer machines.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts connecting to known malicious code repository URLs, domains, or IP addresses?
    context: This question aims to detect direct connections to infrastructure identified by threat intelligence as malicious. A match provides a high-confidence indicator that an adversary is attempting to exfiltrate code or stage malicious tools via a known bad repository.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs WHERE destination_ip OR destination_domain OR destination_url IN threat_intel_feed_malicious_repos
  - question: Are internal hosts connecting to code repositories hosted on statistically rare Top-Level Domains (TLDs) or by uncommon registrars?
    context: Adversaries may use newly registered domains or obscure TLDs for their malicious repositories to evade blocklists. Identifying connections to repositories on statistically uncommon TLDs or from unusual registrars can help uncover novel malicious infrastructure that is not yet present in threat intelligence feeds.
    answer_sources:
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: 1. BASELINE dns_logs over 30d to get TLD/registrar frequencies. 2. SEARCH dns_logs for connections to code repos. 3. ALERT if TLD/registrar frequency is below 5th percentile.
  - question: Are any outbound URLs lexically similar to known malicious repository URLs, suggesting potential data leakage or staging?
    context: This question uses a machine learning model to proactively identify potentially malicious repository URLs based on their structure and keywords (like 'private', 'key', 'leak'). This can detect suspicious URLs that are not yet on any blocklist, providing an early warning of data exfiltration attempts.
    answer_sources:
      - Zeek http.log
      - Network Egress Points
      - DNS Resolvers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: 1. PROCESS http_logs through ML model. 2. ALERT if URL score > 0.9 for being a malicious repository.
  - question: Is git.exe being used with command-line arguments that indicate mass data collection, such as cloning a mirror or creating a bundle?
    context: Commands like `clone --mirror`, `fetch --all`, `pull --all`, or `bundle create` are not typical for routine development but are highly effective for exfiltrating entire repositories. Detecting their use can indicate an adversary's attempt to steal a complete copy of a codebase.
    answer_sources:
      - Windows Event ID 4688
      - Developer Workstations
      - CI/CD Build Servers
      - Internal Code Repository Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs WHERE process_name = 'git.exe' AND command_line CONTAINS 'clone --mirror' OR 'fetch --all' OR 'pull --all' OR 'bundle create'
  - question: Is any user executing an anomalously high number of high-risk git commands compared to their own historical baseline?
    context: A sudden spike in a user's execution of high-risk git commands (like `clone --mirror`) can signal a compromised account being used for data theft. This behavioral analytic establishes a personal baseline and flags statistically significant deviations, helping to spot misuse even by legitimate developer accounts.
    answer_sources:
      - Windows Event ID 4688
      - Developer Workstations
      - CI/CD Build Servers
      - Internal Code Repository Servers
    range: last 90 days
    queries:
      - pseudocode: 1. BASELINE high-risk git command count per user over 30d. 2. CALCULATE daily z-score for each user's high-risk command count. 3. ALERT if z-score > 3.
  - question: Are users executing command sequences that are statistically improbable, such as cloning a repository and immediately compressing and exfiltrating it?
    context: Adversaries often chain commands together to achieve their objectives (e.g., clone, compress, exfiltrate). This question uses a sequence analysis model to learn normal command progressions for each user. It can then detect and alert on rare or malicious sequences that deviate from established patterns, indicating a potential attack in progress.
    answer_sources:
      - Windows Event ID 4688
      - Developer Workstations
      - CI/CD Build Servers
      - Internal Code Repository Servers
    range: last 90 days
    queries:
      - pseudocode: 1. FEED new command sequences into trained HMM model. 2. ALERT if the probability of a sequence (e.g., git -> 7z -> curl) is below a learned threshold.
  - question: Has any single connection to a code repository transferred an unusually large amount of data, such as an entire repository download?
    context: Exfiltrating a full code repository often involves a single, large data transfer. This question sets a static, high-watermark threshold (e.g., 1 GB) to quickly identify these bulk data transfers, which are highly indicative of repository theft.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - Internal Code Repository Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_flows WHERE destination_ip IN code_repo_ranges AND (bytes_out + bytes_in) > 1GB
  - question: Has any host transferred a volume of data to a code repository that is anomalous compared to its own historical baseline?
    context: Instead of a single static threshold for the entire organization, this question creates a dynamic, per-host baseline for data transfer volume. This allows for more precise detection, as it can flag a transfer that is anomalous for a specific workstation, even if the volume is not large enough to trigger a global threshold.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - Internal Code Repository Servers
    range: last 90 days
    queries:
      - pseudocode: 1. BASELINE 95th percentile of data transfer size per host over 30d. 2. ALERT if a new connection's data volume exceeds that host's specific threshold.
  - question: Is the total daily data volume transferred to code repositories from a specific host significantly higher than what a forecasting model predicted?
    context: This question uses time-series forecasting to predict the expected range of data transfer for each host. An actual volume that exceeds the predicted upper bound is a strong statistical indicator of an anomaly, potentially related to unauthorized data exfiltration. This method can account for trends and seasonality in a host's network behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - Internal Code Repository Servers
    range: last 90 days
    queries:
      - pseudocode: 1. FORECAST expected daily data volume per host using ARIMA/Prophet. 2. ALERT if actual daily volume exceeds the forecasted 99% confidence interval.
  - question: Has a privileged/service account accessed a code repository, or has any user accessed a sensitive repository they are not authorized to view?
    context: This question enforces access control policies at the network and application level. It aims to detect clear policy violations, such as a service account cloning a repo or a user accessing a project they are not a member of. Such events are high-fidelity indicators of a breach or insider threat.
    answer_sources:
      - Code Repository Audit Logs
      - Zeek http.log
      - Windows Event ID 4624
      - Authentication Servers
      - Internal Code Repository Servers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: SEARCH for access events WHERE (user in forbidden_account_list AND action=repo_access) OR (user NOT IN repo_acl AND resource=sensitive_repo)
  - question: Is any user accessing a significantly higher number of unique repositories than their typical daily activity?
    context: An adversary who has compromised a user account may perform broad reconnaissance, browsing numerous repositories to find valuable data. This question establishes a baseline for each user's normal repository access patterns and alerts on a sudden increase in the breadth of access, which could indicate enumeration or widespread data collection.
    answer_sources:
      - Code Repository Audit Logs
      - Zeek http.log
      - Windows Event ID 4624
      - Authentication Servers
      - Internal Code Repository Servers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: 1. BASELINE daily unique repo access count per user over 30d. 2. CALCULATE 99th percentile for each user. 3. ALERT if daily count exceeds personal percentile.
  - question: Is a user's repository access behavior (e.g., number of repos, data size, time of day) a statistical outlier compared to their automatically identified peer group?
    context: This question moves beyond individual baselines to group users with similar roles and access patterns. It can then detect when a user's behavior deviates not only from their own past activity but also from that of their peers, which is a strong indicator of anomalous or malicious action.
    answer_sources:
      - Code Repository Audit Logs
      - Zeek http.log
      - Windows Event ID 4624
      - Authentication Servers
      - Internal Code Repository Servers
      - Web Proxies
    range: last 90 days
    queries:
      - pseudocode: 1. CLUSTER users into peer groups based on access features. 2. IDENTIFY users who are outliers to their assigned cluster or any cluster. 3. ALERT on outlier activity.
  - question: Has the git client (git.exe) been executed on a host where it should not be present, such as a Domain Controller or a workstation in the HR or Finance department?
    context: The presence and execution of developer tools like Git on non-developer systems is highly suspicious. This question uses a predefined asset inventory to check for policy violations. An alert from this check is a high-fidelity indicator that an adversary may have staged tools on a compromised machine to access and exfiltrate code.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Finance Department Workstations
      - HR Department Workstations
      - Executive Laptops
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs WHERE process_name = 'git.exe' AND hostname NOT IN developer_asset_list
  - question: Has git.exe been executed on a host where it has rarely or never been run before?
    context: This question provides a dynamic alternative to a static asset list by analyzing historical data. It identifies hosts where `git.exe` execution is a rare event. This can help uncover unauthorized tool usage on systems that might be miscategorized in the asset inventory or on systems where its use is not completely forbidden but is highly unusual.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Finance Department Workstations
      - HR Department Workstations
      - Executive Laptops
    range: last 90 days
    queries:
      - pseudocode: 1. CALCULATE historical frequency of git.exe execution per host. 2. ALERT if git.exe runs on a host where frequency is in the bottom 1st percentile.
  - question: Has git.exe been executed on a host that a machine learning model confidently classifies as a 'non-developer' machine based on its overall activity profile?
    context: This question automates the process of asset classification using machine learning. By analyzing features like installed programs and running services, the model can dynamically identify 'non-developer' machines. An alert for `git.exe` execution on such a machine provides a robust, data-driven signal of anomalous tool usage, reducing reliance on manually maintained asset lists.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Finance Department Workstations
      - HR Department Workstations
      - Executive Laptops
    range: last 90 days
    queries:
      - pseudocode: 1. CLASSIFY hosts as 'developer' or 'non-developer' using ML model. 2. SEARCH for git.exe execution. 3. ALERT if execution occurs on a host classified as 'non-developer' with >95% confidence.