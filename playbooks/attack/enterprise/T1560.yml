name: T1560: Archive Collected Data
id: 5b1a3c2d-8e4f-4b0a-9d6c-7f8a1b2c3d4e
description: This playbook helps determine if an adversary has archived collected data prior to exfiltration. It focuses on identifying the creation of archive files (.zip, .rar, etc.) through various means, including matching against threat intelligence, detecting anomalous process behavior (like unusual parent processes or high-entropy filenames), identifying outlier characteristics (such as exceptionally large files or unusual creation paths), correlating high-volume file reads with subsequent archival, detecting suspicious loading of cryptographic libraries, and linking archive creation events on a host to corresponding large outbound network flows. The goal is to detect the staging of data for theft.
type: technique
related:
- TA0009: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any archive files (e.g., .zip, .rar) been created that match known malicious indicators like hashes or filenames?
  context: This question seeks to identify the creation of archive files whose hash is present in threat intelligence feeds or whose filename matches known malicious regular expression patterns. A positive match is a strong indicator of a known threat actor or malware family staging data for exfiltration.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - User workstations
  - Staging servers
  - Publicly accessible web servers
  - Temporary file system locations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH file creation events (Sysmon 11) for extensions (.zip, .rar, .7z, .tar, .gz)
      FOR each file:
        CALCULATE file hash (MD5, SHA256)
        COMPARE hash against threat intelligence database
        COMPARE filename against malicious regex patterns
      IF match found:
        ALERT
- question: Are there newly created archive files with unusually random or high-entropy filenames?
  context: Adversaries often use randomized filenames for their archives to evade simple signature-based detections. This question uses the Shannon entropy of a filename as a proxy for its randomness. A high entropy score for an archive created by a known archiver process can reveal attempts to hide malicious staging files.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - User workstations
  - Staging servers
  - Publicly accessible web servers
  - Temporary file system locations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process creation events (WEVT 4688) for archiver processes
      EXTRACT command-line arguments to get filename
      CALCULATE Shannon entropy of filename
      COMPARE entropy score to historical 95th percentile for the environment
      IF score > threshold:
        ALERT
- question: Can a machine learning model identify suspicious archival events based on their creation context?
  context: This question leverages a machine learning classifier (e.g., Random Forest) to distinguish between benign and suspicious data archival. By analyzing features like the creating process, parent process, command-line arguments, and target directory, the model can learn complex patterns associated with malicious activity that are difficult to define with simple rules.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - User workstations
  - Staging servers
  - Publicly accessible web servers
  - Temporary file system locations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT: File creation events (Sysmon 11) for archives
      FEATURES: creating_process, parent_process, cmd_line, target_directory, filename_entropy
      MODEL: Trained Random Forest Classifier
      PREDICT 'benign' or 'suspicious'
      IF prediction is 'suspicious' with high confidence:
        ALERT
- question: Has a known archival utility been executed by an anomalous parent process?
  context: Legitimate archival is typically user-driven from a shell like explorer.exe. This question looks for archiver processes (e.g., 7z.exe) being spawned by unusual parents like web servers, system services, or office applications, which often indicates automation by an adversary.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers
  - Application servers
  - User workstations
  - Web servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process creation events (WEVT 4688)
      FILTER for child_process IN (7z.exe, rar.exe, winzip.exe, tar.exe)
      FILTER for parent_process IN (wmiprvse.exe, powershell.exe, svchost.exe, outlook.exe)
      IF match found:
        ALERT
- question: Have any statistically rare parent-child process relationships involving archivers been observed?
  context: This question aims to detect anomalous process chains by baselining normal activity. By identifying which processes typically launch archivers, it can flag a rare or never-before-seen pairing (e.g., services.exe spawning 7z.exe) as a potential indicator of compromise.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers
  - Application servers
  - User workstations
  - Web servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BUILD baseline of (parent_process, child_process) frequency for archiver executions
      FOR each new archiver execution:
        CALCULATE rarity score (z-score or percentile) of the (parent, child) pair
      IF score indicates rarity (e.g., bottom 5th percentile):
        ALERT
- question: Can graph-based analysis detect anomalous process trees that result in data archival?
  context: Adversaries may use complex 'living-off-the-land' techniques to hide their actions. This question uses a graph-based model to analyze the entire process execution chain. It can identify when an archiver is created as part of a sequence that is structurally different from any known benign process tree, revealing sophisticated attack paths.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers
  - Application servers
  - User workstations
  - Web servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL process lineage as a graph (nodes=processes, edges=parent-child)
      APPLY anomaly detection algorithm to identify subgraphs that are structurally different from baseline
      IF anomalous subgraph contains an archiver process:
        ALERT
- question: Have any archive files been created in unusual or highly suspicious directory locations?
  context: Adversaries often write staged data to temporary or non-standard directories to avoid immediate detection. This question checks for the creation of archives in sensitive system locations (e.g., C:\Windows\System32) or other directories where such files are not normally found.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Sysmon Event ID 11
  - File servers
  - User home directories
  - Shared network drives
  - Temporary file system locations (e.g., C:\Windows\Temp, %APPDATA%\Local\Temp)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE suspicious_directories = [C:\Windows\System32, C:\ProgramData, ...]
      SEARCH file creation events (Sysmon 11, WEVT 4663) for archive files
      IF file_path is in suspicious_directories:
        ALERT
- question: Has an archive file been created that is an outlier in terms of its size?
  context: The mass collection of data often results in an unusually large archive file. This question establishes a baseline of typical archive sizes for each user or host and alerts when a new archive's size is a statistical outlier (e.g., >99th percentile or >3 standard deviations from the mean), indicating a potential large-scale data grab.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Sysmon Event ID 11
  - File servers
  - User home directories
  - Shared network drives
  - Temporary file system locations (e.g., C:\Windows\Temp, %APPDATA%\Local\Temp)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MAINTAIN rolling 30-day baseline of archive file sizes per host/user
      FOR each new archive creation event:
        CALCULATE mean and standard deviation of baseline sizes
        CALCULATE 99th percentile of baseline sizes
      IF new_file_size > (mean + 3*std_dev) OR new_file_size > 99th_percentile:
        ALERT
- question: Is there a sudden, anomalous burst in the volume or count of archive files being created on a host?
  context: This question uses time-series analysis to learn the normal rhythm of archival activity on a host. A sudden spike in the number or total size of archives created per hour that deviates significantly from the learned pattern can indicate an automated script or adversary actively staging data.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Sysmon Event ID 11
  - File servers
  - User home directories
  - Shared network drives
  - Temporary file system locations (e.g., C:\Windows\Temp, %APPDATA%\Local\Temp)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL time-series of archive volume and count per host per hour (e.g., ARIMA, LSTM)
      PREDICT expected volume/count for current hour
      CALCULATE residual error (actual - predicted)
      IF residual error is significant:
        ALERT
- question: Has a single process read an unusually high number of files from diverse directories before creating an archive?
  context: This question looks for the classic 'smash and grab' behavior of data collection tools. It correlates a high volume of file read operations across many different directories with the subsequent creation of an archive file by the same process, indicating a wide-ranging data harvesting operation.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - Sensitive data repositories (e.g., SharePoint sites, finance department file shares)
  - User workstations of executives or developers
  - Database servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CORRELATE events by Process ID over a 5-minute window
      IF (count of file read events (WEVT 4663) > 1000) AND (count of distinct directories > N)
      AND (subsequent file creation event (Sysmon 11) for .zip/.rar/.7z exists for same PID):
        ALERT
- question: Is a process accessing files from a highly diverse and random set of directory paths before creating an archive?
  context: This question measures the Shannon entropy of directory paths accessed by a process. A high entropy score indicates the process is 'walking' the file system and reading from many unrelated locations, which is atypical for benign software but common for data collection scripts. Correlating this with archive creation strengthens the signal.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - Sensitive data repositories (e.g., SharePoint sites, finance department file shares)
  - User workstations of executives or developers
  - Database servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process in a 10-minute window:
        COLLECT list of directory paths from file read events (WEVT 4663)
        CALCULATE Shannon entropy of the directory path list
      IF entropy > 98th percentile for host AND process later creates an archive (Sysmon 11):
        ALERT
- question: Can a sequence-based machine learning model detect the 'many reads -> one archive write' attack pattern?
  context: This question uses a more advanced ML model (e.g., HMM or RNN) that understands the sequence of file system events. It can identify the specific, low-probability sequence of thousands of file reads followed by a single archive write, allowing it to detect the attack pattern even when other individual indicators are weak.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Sysmon Event ID 11
  - Sensitive data repositories (e.g., SharePoint sites, finance department file shares)
  - User workstations of executives or developers
  - Database servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL sequences of file system events (read, write, create) per process using HMM or RNN
      SCORE the likelihood of new event sequences
      IF a sequence matching 'many reads -> one archive write' has a low likelihood score:
        ALERT
- question: Has a process not on an established allowlist loaded a cryptographic library?
  context: Adversaries may use password-protection or encryption to secure their collected data archives. This question monitors for processes loading crypto libraries (e.g., crypt32.dll) and flags any process that is not on a pre-defined allowlist of legitimate software known to use encryption, such as browsers or VPN clients.
  answer_sources:
  - Sysmon Event ID 7
  - Windows Event ID 4688
  - All endpoints and servers
  - especially critical servers like Domain Controllers and Certificate Authorities
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE allowlist of processes that can load crypto DLLs
      DEFINE crypt_dlls = [crypt32.dll, ncrypt.dll, bcrypt.dll]
      SEARCH image load events (Sysmon 7)
      IF (ImageLoaded IN crypt_dlls) AND (ProcessName NOT IN allowlist):
        ALERT
- question: Has a statistically rare combination of a process and a loaded cryptographic library been observed?
  context: This question establishes a baseline of all normal process-to-library pairings in the environment. It then alerts on the first-time or extremely rare occurrence of a specific process loading a specific crypto library, which could indicate a custom or newly introduced malicious tool preparing to encrypt data.
  answer_sources:
  - Sysmon Event ID 7
  - Windows Event ID 4688
  - All endpoints and servers
  - especially critical servers like Domain Controllers and Certificate Authorities
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MAINTAIN 90-day baseline of (ProcessName, ImageLoaded) tuple frequency for crypto DLLs
      FOR each new crypto DLL load event:
        CHECK frequency of the (ProcessName, ImageLoaded) tuple
      IF frequency is very low (e.g., < 5 occurrences enterprise-wide):
        ALERT
- question: Can a machine learning model detect anomalous loading of cryptographic libraries?
  context: This question uses a one-class anomaly detection model (e.g., Isolation Forest) to create a complex boundary of 'normal' behavior for crypto library load events. By considering features like process path, parent, and user context, it can flag any event that falls outside this learned normal boundary, detecting novel malicious activity.
  answer_sources:
  - Sysmon Event ID 7
  - Windows Event ID 4688
  - All endpoints and servers
  - especially critical servers like Domain Controllers and Certificate Authorities
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL benign crypto library load events with One-Class SVM or Isolation Forest
      FEATURES: process_path, parent_process, command_line, user_context
      FOR each new event:
        PREDICT if event is 'inlier' or 'outlier' (anomaly)
      IF prediction is 'outlier':
        ALERT
- question: Has an outbound network transfer occurred whose size closely matches a large archive file created just prior?
  context: This is a high-fidelity question that directly links data staging to exfiltration. It correlates the creation of a large archive file on a host with a subsequent outbound network flow of a nearly identical size from that same host, providing strong evidence of data theft.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Sysmon Event ID 11
  - Network egress points (monitored by Zeek)
  - Internal hosts (endpoints and servers)
  - Firewall and proxy servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN file creation events (Sysmon 11) with network flow logs (Zeek conn.log) on source IP
      WITHIN a 15-minute window:
      IF (file_extension IN [.zip, .rar, .7z] AND file_size > 50MB)
      AND (outbound_flow_bytes is within +/- 10% of file_size):
        ALERT
- question: Following the creation of a large archive, did the host transfer a large amount of data to a rare or new destination?
  context: Adversaries often exfiltrate data to newly established or rarely used C2 infrastructure. This question first identifies the creation of a large archive, then monitors for a large outbound data transfer from that host to an IP or domain that it has not communicated with recently, indicating a suspicious new exfiltration channel.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Sysmon Event ID 11
  - Network egress points (monitored by Zeek)
  - Internal hosts (endpoints and servers)
  - Firewall and proxy servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      WHEN a large archive is created on a host (Sysmon 11):
        MONITOR that host's outbound connections (Zeek conn.log)
        CHECK if destination IP/domain is in the host's 30-day baseline of known destinations
      IF (destination is new) AND (transfer_size > 95th percentile for host):
        ALERT
- question: Did a host's outbound traffic significantly and unexpectedly increase shortly after a large archive file was created?
  context: This question uses a regression model to predict a host's normal outbound traffic volume. It then feeds the recent creation of a large archive as a special feature into the model. If the actual observed traffic wildly exceeds the model's prediction only when an archive has just been created, it strongly suggests the archive is being exfiltrated.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Sysmon Event ID 11
  - Network egress points (monitored by Zeek)
  - Internal hosts (endpoints and servers)
  - Firewall and proxy servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL expected outbound traffic volume based on time_of_day, user_role, etc.
      ADD binary feature 'large_archive_created_recently'
      PREDICT expected traffic
      CALCULATE residual_error = actual_traffic - predicted_traffic
      IF (residual_error is large) AND (large_archive_created_recently is true):
        ALERT