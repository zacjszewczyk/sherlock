name: "T1071: Application Layer Protocol"
id: "f3b4a5d6-c7e8-4f9a-b1c2-d3e4f5a6b7c8"
description: "This playbook helps determine if an adversary has established command and control using a common application layer protocol to blend in with normal network traffic. It provides investigative questions to detect C2 activity by identifying connections to known malicious infrastructure, matching traffic signatures (User-Agent, JA3) of C2 frameworks, analyzing network traffic for automated beaconing behavior (low jitter, consistent payloads), and spotting unusual process network activity. It also includes methods for detecting DNS tunneling, inverted data-to-request byte ratios indicative of data exfiltration, and the use of standard protocols over non-standard ports."
type: "technique"
related:
  - "TA0011: Command And Control"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are any internal hosts communicating with destination IPs, domains, or TLS server names known to be malicious C2 infrastructure?"
    context: "This question aims to detect direct communication with known adversary command and control (C2) servers by cross-referencing network logs against high-confidence Cyber Threat Intelligence (CTI). A match is a strong indicator of a compromise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Egress points (e.g., firewalls, web proxies), DNS resolvers, Core network switches"
    range: "last 90 days"
    queries:
      - "SEARCH network_logs (conn, dns, ssl) WHERE destination_ip OR domain OR server_name IN cti_feed_c2_indicators"
  - question: "Among hosts communicating with known C2 indicators, which ones should be prioritized for investigation based on communication frequency or connections to multiple indicators?"
    context: "After identifying hosts talking to known C2, this question helps prioritize the investigation by focusing on hosts that exhibit the most suspicious behavior, such as communicating with multiple distinct C2 indicators or beaconing at an unusually high frequency compared to their own baseline."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Egress points (e.g., firewalls, web proxies), DNS resolvers, Core network switches"
    range: "last 90 days"
    queries:
      - "GROUP BY internal_host | COUNT DISTINCT c2_indicator | COUNT connections | COMPARE to host_baseline"
  - question: "How can we automatically score and prioritize new C2 alerts to reduce analyst fatigue from low-confidence matches?"
    context: "This question focuses on improving alert fidelity by using a machine learning model. By considering factors like CTI source reputation, indicator age, and historical accuracy, the model can assign a confidence score to new alerts, allowing analysts to focus on the most credible threats first."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Egress points (e.g., firewalls, web proxies), DNS resolvers, Core network switches"
    range: "last 90 days"
    queries:
      - "PREDICT alert_priority WITH classification_model(features=[cti_rep, indicator_age, historical_tp_rate])"
  - question: "Is any outbound HTTP/S traffic exhibiting User-Agent strings, URI patterns, or JA3/JA3S hashes that match signatures of known C2 frameworks?"
    context: "This question seeks to identify malware C2 communications that use specific, hardcoded artifacts associated with known C2 frameworks like Cobalt Strike or Metasploit. Matching these signatures in HTTP headers or TLS handshakes provides strong evidence of a specific toolset being used."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Web proxies, Egress points, Endpoints generating web traffic, Application delivery controllers"
    range: "last 90 days"
    queries:
      - "SEARCH http_logs, ssl_logs WHERE user_agent OR uri OR ja3_hash OR ja3s_hash IN c2_framework_signatures"
  - question: "Are there any rare or unique User-Agents or JA3 hashes in use that could indicate the presence of non-standard client software, such as a C2 implant?"
    context: "Adversary tools often use unique User-Agents or have specific TLS implementation fingerprints (JA3) that are uncommon in a typical enterprise environment. This question aims to find these outliers by calculating the prevalence of each artifact and flagging those used by a very small number of hosts."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Web proxies, Egress points, Endpoints generating web traffic, Application delivery controllers"
    range: "last 90 days"
    queries:
      - "CALCULATE prevalence of user_agent, ja3_hash | FILTER for prevalence < 0.1%"
  - question: "Can we identify groups of clients with outlier TLS configurations that may represent novel C2 implants not yet covered by signature-based detection?"
    context: "This question uses unsupervised machine learning to find new threats. By clustering clients based on their JA3 TLS fingerprints, we can identify small, isolated groups of machines that behave differently from the mainstream. These outlier clusters are highly suspicious and may represent a new or unknown C2 tool."
    answer_sources:
      - "Zeek ssl.log"
      - "Web proxies, Egress points, Endpoints generating web traffic, Application delivery controllers"
    range: "last 90 days"
    queries:
      - "CLUSTER ja3_hashes using DBSCAN/K-Means | INVESTIGATE outlier_clusters"
  - question: "Is any internal host making an excessive number of connections to a single, potentially low-reputation external destination?"
    context: "This question aims to catch potential C2 beaconing by setting a simple threshold for the number of connections from one host to a single destination. A high connection count, especially to an unknown or uncategorized IP, is a basic but effective indicator of automated communication."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls), Network taps monitoring internal subnets, Core network switches"
    range: "last 90 days"
    queries:
      - "GROUP BY source_ip, dest_ip, dest_port | COUNT connections > threshold (e.g., 100) in 24h"
  - question: "Are there any network connections characterized by highly regular time intervals (low jitter) and consistent data payload sizes, indicative of automated C2 beaconing?"
    context: "This question moves beyond simple connection counts to analyze the statistical properties of the traffic. Automated C2 beacons often communicate on a fixed schedule with similar-sized check-in messages. By calculating the standard deviation of time between connections and the size of those connections, we can precisely identify this machine-like regularity."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls), Network taps monitoring internal subnets, Core network switches"
    range: "last 90 days"
    queries:
      - "CALCULATE stdev(time_delta_between_connections) and stdev(total_bytes) | FILTER for stdev(time_delta) < 1.0s AND low stdev(bytes)"
  - question: "Can time series analysis reveal periodic communication patterns that signal automated beaconing, even if there is minor jitter in the timing?"
    context: "Sophisticated C2 frameworks may introduce slight randomness (jitter) to their beaconing intervals to evade simple statistical checks. This question uses more advanced time series analysis models to decompose the connection patterns and identify a strong underlying periodic signal, which is a hallmark of automated C2 activity."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls), Network taps monitoring internal subnets, Core network switches"
    range: "last 90 days"
    queries:
      - "APPLY time_series_model (ARIMA) to connection_timestamps | IDENTIFY strong periodic component"
  - question: "Is a process that should not normally access the network (e.g., calc.exe, notepad.exe) initiating outbound connections?"
    context: "This question aims to detect process injection or masquerading, where malware uses a legitimate, trusted process to conduct network communications. By maintaining a watchlist of processes that have no business making network calls, we can generate high-fidelity alerts when this policy is violated."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 5156"
      - "Sysmon Event ID 3"
      - "User workstations, Application servers, Domain Controllers, High-value asset servers"
    range: "last 90 days"
    queries:
      - "JOIN process_creation_events with network_connection_events | ALERT if process_name IN (unusual_network_process_list)"
  - question: "Is a process communicating over a destination port that is statistically rare for that specific process in our environment?"
    context: "This question establishes a behavioral baseline for every process on the network. It identifies anomalies by flagging when a process starts communicating on a port it has never, or very rarely, used before. This can uncover C2 activity attempting to blend in by using a legitimate process but over an unusual port."
    answer_sources:
      - "Sysmon Event ID 3"
      - "User workstations, Application servers, Domain Controllers, High-value asset servers"
    range: "last 90 days"
    queries:
      - "BASELINE (ProcessName, DestinationPort) frequency over 30 days | ALERT on new or rare tuples"
  - question: "Can we use an anomaly detection model to identify malicious process network activity based on a combination of features like process path, parent process, and user context?"
    context: "This question uses a machine learning approach to detect suspicious process behavior that might not be captured by simple rules. An Isolation Forest model learns what 'normal' process network activity looks like based on multiple features and can then score new events, flagging significant outliers that are likely malicious."
    answer_sources:
      - "Sysmon Event ID 3"
      - "User workstations, Application servers, Domain Controllers, High-value asset servers"
    range: "last 90 days"
    queries:
      - "SCORE new process_network_events with IsolationForest_model | INVESTIGATE high_anomaly_scores"
  - question: "Are there any DNS queries matching patterns of Domain Generation Algorithms (DGAs), known C2 domains, or containing encoded data in subdomains?"
    context: "This is a signature-based question to find common DNS-based C2 techniques. It looks for domains that are programmatically generated (DGA), listed on threat feeds, or appear to be smuggling data (e.g., Base64) within the query itself."
    answer_sources:
      - "Zeek dns.log"
      - "Internal DNS resolvers, Domain Controllers, Egress points monitoring DNS traffic"
    range: "last 90 days"
    queries:
      - "SEARCH dns_logs WHERE query MATCHES (dga_regex OR cti_domain_feed OR base64_pattern)"
  - question: "Are there any DNS queries with unusually high randomness (entropy) or a suspicious ratio of non-standard query types (e.g., TXT, NULL) indicative of DNS tunneling?"
    context: "This question looks for statistical indicators of DNS abuse. High entropy in a domain name suggests it's machine-generated (DGA), while a high ratio of TXT or NULL queries from a single host suggests it's using DNS not for name resolution, but for data exfiltration or C2."
    answer_sources:
      - "Zeek dns.log"
      - "Internal DNS resolvers, Domain Controllers, Egress points monitoring DNS traffic"
    range: "last 90 days"
    queries:
      - "CALCULATE Shannon_entropy(dns_query) | ALERT on high entropy | CALCULATE ratio(TXT_queries / A_queries) per host | ALERT on high ratio"
  - question: "Can a machine learning model be used to classify DNS queries as benign or malicious in real-time based on a variety of query features?"
    context: "This question proposes building a robust, real-time detection capability for malicious DNS activity. By training a classifier on features like query length, entropy, character ratios, and query type, the model can learn to distinguish legitimate queries from C2 techniques like DGA and tunneling, even for unknown threats."
    answer_sources:
      - "Zeek dns.log"
      - "Internal DNS resolvers, Domain Controllers, Egress points monitoring DNS traffic"
    range: "last 90 days"
    queries:
      - "CLASSIFY new dns_queries with RandomForest_model(features=[length, entropy, char_ratio, type])"
  - question: "Are there any connections exhibiting obviously abnormal protocol behavior, such as large DNS queries or HTTP POSTs directly to an IP address?"
    context: "This question looks for clear violations of expected protocol behavior. A DNS query should be small, and web traffic is typically sent to a named host, not a raw IP. Deviations like these are simple but strong indicators of non-standard, potentially malicious activity."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Egress points (e.g., firewalls, web proxies), Core network switches, Network taps"
    range: "last 90 days"
    queries:
      - "SEARCH dns_connections WHERE sent_bytes > 512 | SEARCH http_connections WHERE method=POST and destination is IP_address"
  - question: "Are any connections showing an unusual ratio of data sent versus data received when compared to a baseline for that specific protocol?"
    context: "Most client-server interactions have a typical data flow (e.g., small request, large response for web browsing). This question aims to find C2 channels by identifying connections where this flow is inverted (e.g., a small response to a large upload over HTTP), which often indicates data exfiltration."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls, web proxies), Core network switches, Network taps"
    range: "last 90 days"
    queries:
      - "CALCULATE ratio(sent_bytes / received_bytes) per connection | IDENTIFY statistical outliers (Z-score > 3) from baseline"
  - question: "Can unsupervised clustering of connection metadata (bytes, duration, protocol) automatically identify outlier connections that represent anomalous behavior like C2 exfiltration?"
    context: "This question uses machine learning to find 'unknown unknowns'. By grouping all connections based on their metadata, normal behaviors (like web browsing) will form large clusters. Individual points that don't fit into any cluster are, by definition, anomalous and warrant investigation as potential C2."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls, web proxies), Core network switches, Network taps"
    range: "last 90 days"
    queries:
      - "CLUSTER connections using DBSCAN on features (bytes, duration, proto) | INVESTIGATE outlier points"
  - question: "Is any traffic identified as a standard protocol (HTTP, SSL, DNS) occurring over a non-standard port, or are there any protocol violation notices being generated?"
    context: "Adversaries may run common services on non-standard ports to evade simple firewall rules. This question aims to detect this by checking if Zeek's dynamic protocol detection identifies a service running on an unexpected port. It also checks for protocol errors, which can occur when C2 tools improperly implement a protocol."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek notice.log"
      - "Egress points (e.g., firewalls), Core network switches, Application servers"
    range: "last 90 days"
    queries:
      - "SEARCH connections WHERE (service='http' AND port NOT IN [80, 8080]) OR (service='ssl' AND port != 443) | SEARCH notice_logs for protocol_violation_notices"
  - question: "Are there any service-and-port combinations occurring on the network that are statistically rare for our environment?"
    context: "This question builds a profile of 'what's normal' for your specific network in terms of which services run on which ports. By baselining this activity, you can automatically flag new or very rare combinations that could represent an adversary setting up a C2 channel on a port that is uncommon but open."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls), Core network switches, Application servers"
    range: "last 90 days"
    queries:
      - "BASELINE prevalence of (service, port) tuples over 30 days | ALERT on new or rare (<0.5 percentile) tuples"
  - question: "Can an anomaly detection model identify suspicious connections based on a combination of port, protocol, service, duration, and byte counts?"
    context: "This question applies a machine learning model to find suspicious connections that might not be caught by single-indicator rules. By learning the multi-dimensional profile of a 'normal' connection, the model can flag new connections that are outliers across several features simultaneously, which is a strong signal of malicious intent."
    answer_sources:
      - "Zeek conn.log"
      - "Egress points (e.g., firewalls), Core network switches, Application servers"
    range: "last 90 days"
    queries:
      - "SCORE new connections with IsolationForest_model | INVESTIGATE high_anomaly_scores"