name: T1550.003: Pass the Ticket
id: a7b1c1d9-e3f1-4a7c-8c9a-1e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has forged or misused a Kerberos ticket to evade standard authentication controls and move laterally within a network. This involves looking for signs of abuse such as the use of weak, deprecated encryption types like RC4-HMAC, which is common in adversary tools. It also checks for Kerberos tickets with lifetimes that exceed the domain's maximum policy, a hallmark of forged Golden Tickets. Further investigation points include identifying ticket requests from unusual IP addresses or hostnames, an unusually high number of service ticket requests from a single source (Kerberoasting), a burst of requests for non-existent Service Principal Names (SPNs), and anomalous successful logons. Finally, it correlates successful remote logons with immediate follow-on suspicious activity, such as the execution of credential dumping tools or reconnaissance commands, to confirm a successful compromise.
type: technique
related:
  - TA0005: Defense Evasion
  - TA0008: Lateral Movement
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a high-privilege or service account requested a Kerberos ticket using the weak RC4-HMAC encryption type?
    context: This is a critical indicator because modern, properly configured systems should use stronger AES encryption. Adversary tools often default to RC4 for broader compatibility, so its use by a privileged account is highly suspicious and could signal a 'Pass the Ticket' attack, particularly a Golden or Silver Ticket forged with older cryptographic methods.
    answer_sources:
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
      - Network sensors monitoring traffic to/from Domain Controllers on port 88
    range: last 90 days
    queries:
      - pseudocode: SEARCH for Event IDs 4768 or 4769 where Ticket Encryption Type is '0x17' and the Account Name is a member of a high-privilege group.
  - question: Has any user account requested a Kerberos ticket with an encryption type that is anomalous compared to their historical baseline?
    context: This question aims to detect deviations from normal behavior on a per-user basis. Even if a weak encryption type is technically allowed, if a user who has consistently used AES suddenly requests a ticket with RC4, it's a significant anomaly. This can catch attacks that might be missed by rules that only focus on high-privilege accounts.
    answer_sources:
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
      - Network sensors monitoring traffic to/from Domain Controllers on port 88
    range: last 30 days
    queries:
      - pseudocode: FOR each user, baseline historical encryption types. ALERT if a new ticket request uses an encryption type with near-zero historical frequency for that user.
  - question: Is there evidence of a machine learning model detecting a Kerberos ticket request as malicious based on its features?
    context: This question leverages a machine learning model trained to distinguish between legitimate and malicious Kerberos requests. By analyzing features like account name, client IP, and encryption type, the model can identify sophisticated attacks that may not trigger simple rule-based alerts, providing a more advanced layer of detection.
    answer_sources:
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
      - Network sensors monitoring traffic to/from Domain Controllers on port 88
    range: last 90 days
    queries:
      - pseudocode: DEPLOY binary classification model to score new Kerberos requests. ALERT on requests classified as malicious with high confidence.
  - question: Have any observed Kerberos tickets exceeded the maximum lifetime defined by the domain's group policy?
    context: This is a direct method to detect forged Golden Tickets. Adversaries create these with extremely long lifetimes (e.g., 10 years) to ensure persistent access. A legitimate ticket will never exceed the domain's configured maximum lifetime (typically 10 hours), so any ticket that does is almost certainly malicious.
    answer_sources:
      - Zeek kerberos.log
      - Windows Event ID 4769
      - Network sensors monitoring east-west traffic and DC traffic on port 88
      - Active Directory Domain Controllers (for policy reference)
    range: last 90 days
    queries:
      - pseudocode: QUERY domain max ticket lifetime policy. ALERT on any Zeek kerberos.log entry where (till - from) exceeds this policy value.
  - question: Are there any Kerberos tickets with lifetimes that are statistical outliers compared to the historical norm?
    context: This question seeks to find anomalously long-lived tickets without relying on a fixed policy setting. By calculating a dynamic threshold based on the 99.9th percentile of observed lifetimes, this method can detect forged tickets even if the domain policy is unknown or misconfigured, flagging any ticket that is unusually long compared to its peers.
    answer_sources:
      - Zeek kerberos.log
      - Windows Event ID 4769
      - Network sensors monitoring east-west traffic and DC traffic on port 88
      - Active Directory Domain Controllers (for policy reference)
    range: last 30 days
    queries:
      - pseudocode: CALCULATE 99.9th percentile of ticket lifetimes over a 30-day window. ALERT on any new ticket whose lifetime exceeds this dynamic threshold.
  - question: Has an anomaly detection model flagged any Kerberos tickets as suspicious based on their extreme duration?
    context: This approach uses an unsupervised machine learning model, like an Isolation Forest, to identify anomalous tickets. The model considers multiple features but is primarily sensitive to extreme durations. This can detect forged tickets as outliers in a multi-dimensional feature space, offering a robust detection method that is difficult for adversaries to evade.
    answer_sources:
      - Zeek kerberos.log
      - Windows Event ID 4769
      - Network sensors monitoring east-west traffic and DC traffic on port 88
      - Active Directory Domain Controllers (for policy reference)
    range: last 90 days
    queries:
      - pseudocode: USE an Isolation Forest model on ticket features. ALERT when a ticket is assigned a high anomaly score, primarily driven by its duration.
  - question: Has a critical or administrative account requested a Kerberos ticket from an unauthorized source IP address or subnet?
    context: Privileged accounts and service accounts should have highly predictable and restricted behavior. They typically operate from specific servers or administrative workstations. A ticket request from an unexpected location (e.g., a standard user workstation) is a strong indicator that the account's credentials or a ticket has been stolen and is being used for lateral movement.
    answer_sources:
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
      - VPN Concentrators
      - Workstation and Server subnets
      - DNS servers (for IP-hostname correlation)
    range: last 90 days
    queries:
      - pseudocode: DEFINE allowlist of source IPs for critical accounts. ALERT if a ticket request for a critical account originates from an IP not on its allowlist.
  - question: Has any user requested a Kerberos ticket from a source IP address for the first time?
    context: This question establishes a baseline of normal source IP addresses for every user. A ticket request from an IP address that has never been seen before for that specific user represents a break in pattern and could indicate that an adversary has compromised the user's account or ticket and is using it from an unusual location.
    answer_sources:
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
      - VPN Concentrators
      - Workstation and Server subnets
      - DNS servers (for IP-hostname correlation)
    range: last 90 days
    queries:
      - pseudocode: MAINTAIN a 90-day baseline of (user, source_ip) pairs. ALERT when a new ticket request creates a pair not present in the baseline.
  - question: Has a graph-based analysis detected a user requesting a Kerberos ticket from a source IP outside their normal community or cluster?
    context: This advanced question models the relationships between users and their source locations as a graph. By identifying 'communities' of users and their typical access points, this method can detect when a user's activity breaks from their established group, such as an HR user suddenly requesting a ticket from a developer's subnet. This indicates a significant and suspicious deviation in behavior.
    answer_sources:
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
      - VPN Concentrators
      - Workstation and Server subnets
      - DNS servers (for IP-hostname correlation)
    range: last 90 days
    queries:
      - pseudocode: MODEL user-to-source-IP relationships in a graph. USE community detection. ALERT when a request creates a link between a user and a source in a different community.
  - question: Has a single client IP address requested an unusually high number of unique service tickets in a short time frame?
    context: This question is designed to detect Kerberoasting activity. An adversary who has stolen a Ticket-Granting Ticket (TGT) will often use it to rapidly request service tickets for many different services. The goal is to collect service tickets whose hashes can be cracked offline to reveal service account passwords. A spike in unique service requests from one source is a strong indicator of this reconnaissance technique.
    answer_sources:
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: ALERT if a single Client Address requests > 20 unique Service Names within a 5-minute window from Event ID 4769 data.
  - question: Has a source IP address shown a statistically significant spike in the number of unique service tickets requested?
    context: This is a more dynamic approach to detecting Kerberoasting. Instead of a fixed threshold, it establishes a baseline for how many unique services each IP typically requests. An alert is triggered only when an IP's activity exceeds its own normal behavior by a significant statistical margin (e.g., 3 standard deviations), reducing false positives from normally "chatty" servers.
    answer_sources:
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: FOR each source IP, baseline the rolling 5-minute count of unique services. ALERT when the count exceeds the mean by > 3 standard deviations.
  - question: Has a clustering algorithm identified a session of service ticket requests as being part of a high-velocity, high-entropy reconnaissance pattern?
    context: This question uses machine learning to identify Kerberoasting sessions. By grouping (clustering) requests based on features like the number and variety (entropy) of services requested in a time window, the system can learn what malicious reconnaissance looks like. New activity that fits this malicious cluster is then flagged as a potential attack.
    answer_sources:
      - Windows Event ID 4769
      - Zeek kerberos.log
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SESSIONIZE ticket requests by source IP. USE DBSCAN clustering on session features. ALERT on sessions falling into the 'reconnaissance' cluster.
  - question: Has a burst of Kerberos service ticket requests failed with error '0x7' (Principal Unknown) from a single client?
    context: This question aims to detect SPN scanning. Adversaries may not know the exact SPNs available on a network, so they will attempt to request tickets for a long list of guessed or enumerated names. A high rate of failures with error '0x7' from a single source indicates that someone is probing the network to find valid service accounts to target.
    answer_sources:
      - Windows Event ID 4769
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: ALERT when Event ID 4769 has Status '0x7'. INCREASE priority if > 5 such events from the same Client Address occur within 10 minutes.
  - question: Is a host generating 'Principal Unknown' errors at a rate that is statistically anomalous compared to its own baseline?
    context: This provides a more tailored way to detect SPN scanning. Some systems might generate occasional '0x7' errors during normal operation. By baselining each host's specific error rate, this method can distinguish between normal background noise and a sudden, sharp increase in errors that signifies an active scanning attempt.
    answer_sources:
      - Windows Event ID 4769
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: BASELINE the rate of '0x7' errors per host. ALERT if a host's error rate spikes > 3 standard deviations above its baseline.
  - question: Have requested SPN strings been classified as likely machine-generated rather than legitimate or typos?
    context: This question uses machine learning to analyze the format of the failed SPN strings themselves. Adversary tools often generate SPNs algorithmically, resulting in names that look like random garbage. A classifier trained on character patterns can distinguish these from legitimate, human-readable SPNs (even with typos), providing a strong signal of malicious automation.
    answer_sources:
      - Windows Event ID 4769
      - Active Directory Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: TRAIN a classifier on SPN string features. ALERT on requests for SPNs that are classified as likely machine-generated.
  - question: Has a privileged account successfully logged on remotely using weak RC4 encryption?
    context: This question correlates a successful logon event with the underlying weakness of the authentication ticket. A successful remote logon (Logon Type 3) by a privileged user is already a noteworthy event. If the ticket that enabled this logon used RC4 encryption, it significantly increases the likelihood that a forged or stolen ticket was used, as legitimate systems should be using stronger encryption.
    answer_sources:
      - Windows Event ID 4624
      - Zeek kerberos.log
      - All Windows workstations and servers
      - Network sensors monitoring authentication traffic
    range: last 90 days
    queries:
      - pseudocode: CORRELATE successful Kerberos logon (Event ID 4624) with Zeek data. ALERT if logon is for a privileged account and the associated ticket used RC4.
  - question: Has a successful remote logon occurred that is highly unusual for that specific server?
    context: This question focuses on the destination of the lateral movement. Every server has a typical pattern of users, source locations, and logon times. An alert for a rare user-to-server access event (e.g., a user who is in the bottom 5th percentile of logon frequency) can uncover an adversary moving to a server they have no legitimate reason to access.
    answer_sources:
      - Windows Event ID 4624
      - Zeek kerberos.log
      - All Windows workstations and servers
      - Network sensors monitoring authentication traffic
    range: last 90 days
    queries:
      - pseudocode: PROFILE normal authenticating users per server. ALERT if a new logon involves a user in the bottom 5th percentile of logon frequency for that server.
  - question: Did a link prediction model assign a very low probability to a successful Kerberos logon event?
    context: This question uses a graph-based machine learning model to predict legitimate user-to-host connections. The model learns the normal access patterns in the organization. When a successful logon occurs that the model predicted was highly unlikely, it serves as a powerful anomaly signal, suggesting that the access path is not legitimate and likely represents adversarial lateral movement.
    answer_sources:
      - Windows Event ID 4624
      - Zeek kerberos.log
      - All Windows workstations and servers
      - Network sensors monitoring authentication traffic
    range: last 90 days
    queries:
      - pseudocode: USE a link prediction model on a user-host graph. ALERT on a successful logon that the model assigned a very low probability score.
  - question: Has a non-administrative user account performed a remote Kerberos logon from one workstation to another?
    context: This is a classic indicator of lateral movement. In most environments, standard users do not have a legitimate reason to remotely log into other users' workstations. This behavior is highly indicative of an adversary who has compromised a standard user account and is using it to move from their initial foothold to other systems on the network.
    answer_sources:
      - Windows Event ID 4624
      - All Windows Workstation subnets
    range: last 90 days
    queries:
      - pseudocode: ALERT on Event ID 4624 (Logon Type 3, Kerberos) where Account is non-privileged and both source and destination are workstations.
  - question: Has a user performed a remote logon to a workstation they have never accessed before?
    context: This question tracks first-time user-to-workstation access. By maintaining a baseline of all historical remote logons, it can immediately flag when a user connects to a workstation for the very first time. For non-administrative users, such an event is highly anomalous and a strong sign of lateral movement using a compromised account or ticket.
    answer_sources:
      - Windows Event ID 4624
      - All Windows Workstation subnets
    range: last 90 days
    queries:
      - pseudocode: MAINTAIN a baseline of historical (user, destination_workstation) pairs. ALERT on any new logon event that creates a pair not in the baseline.
  - question: Has a user's remote logon activity caused them to shift from their normal 'access cluster' to a different one?
    context: This question uses machine learning to group users by their access behaviors (e.g., 'finance server users' vs. 'developer tool users'). A sudden shift, where a user's logon activity places them in a completely different cluster, indicates a fundamental change in their behavior. This is a strong indicator that the account has been compromised and is being used for purposes outside its normal function.
    answer_sources:
      - Windows Event ID 4624
      - All Windows Workstation subnets
    range: last 90 days
    queries:
      - pseudocode: CLUSTER users based on their logon destinations. ALERT if a user's logon activity causes them to shift to a different cluster.
  - question: Following a remote Kerberos logon, was a suspicious tool or reconnaissance command executed within the same logon session?
    context: This question directly links the act of remote authentication with immediate follow-on malicious activity. An adversary who has successfully used a passed ticket to access a new host will often immediately execute commands to dump more credentials or enumerate system information. Correlating the logon event with subsequent process creation provides high-fidelity evidence of a successful compromise.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows workstations and servers
    range: last 90 days
    queries:
      - pseudocode: ON EventID=4624 (Kerberos, LogonType=3), find LogonID. IF an EventID=4688 with the same LogonID executes a process from a malicious watchlist, ALERT.
  - question: Following a remote logon, did the entropy of command line arguments for spawned processes exceed the normal baseline?
    context: Adversaries often use obfuscated or randomized command line arguments to evade signature-based detections. This question establishes a baseline for the normal complexity (entropy) of commands run by a user or on a host. A sudden spike in command line entropy within a new logon session can indicate the use of obfuscated scripts or tools, pointing to malicious activity.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows workstations and servers
    range: last 90 days
    queries:
      - pseudocode: ON new logon session, calculate entropy of command lines for child processes. ALERT if entropy exceeds the 95th percentile of the historical baseline.
  - question: Did the sequence of activities following a remote logon have a high reconstruction error from a sequence-to-sequence autoencoder?
    context: This advanced question uses a deep learning model to learn the 'normal rhythm' of post-logon activities for different user roles. The autoencoder is trained on sequences of normal events (process creations, network connections). When a new session's activity sequence is fed into the model, a high reconstruction error means the sequence is highly abnormal and does not match any learned legitimate behavior, strongly indicating a compromise.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows workstations and servers
    range: last 90 days
    queries:
      - pseudocode: TRAIN a sequence autoencoder on normal post-logon event sequences. ALERT if the reconstruction error for a new logon's event sequence is high.