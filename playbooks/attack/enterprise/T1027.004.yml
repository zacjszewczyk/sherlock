name: T1027.004: Compile After Delivery
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook helps answer the question: Is the adversary compiling code on-host to evade standard defenses? It provides investigative steps to detect this activity by monitoring for the creation of source code files in non-standard locations, the execution of compilers by unusual processes (e.g., Microsoft Office), rapid sequences of file creation followed by compilation and execution, and subsequent suspicious network activity from the newly compiled binary.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are source code files being created in unusual locations and do they match known malicious signatures?
    context: |
      This question seeks to identify the initial stage of on-host compilation by detecting the creation of source code files (e.g., .cs, .c, .cpp, .go) in non-standard directories like user temp folders or web server directories. By hashing these files and newly created executables and comparing them against threat intelligence feeds, we can quickly identify known malicious code being staged for compilation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 11 (FileCreate)
      - User profile temporary directories (%APPDATA%, %TEMP%, Downloads), shared network drives, and web server directories, excluding designated software development project folders.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH file creation events (Sysmon 11) WHERE file extension in ['.cs', '.c', '.cpp', '.go'] AND path in user-writable directories.
          FOR each file, HASH and LOOKUP against threat intel.
          SEARCH process creation events (Sysmon 1) WHERE process is new .exe.
          FOR each process, HASH and LOOKUP against threat intel.
  - question: Is there an anomalous number of source code files being created on non-developer hosts?
    context: |
      This question uses a statistical approach to baseline normal activity for different host profiles (e.g., developer vs. non-developer). An alert is triggered if the number of source code file creations on a non-developer machine significantly deviates from its established baseline, suggesting an adversary is preparing to compile code on a system where it's not expected.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 11 (FileCreate)
      - User profile temporary directories (%APPDATA%, %TEMP%, Downloads), shared network drives, and web server directories, excluding designated software development project folders.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each non-developer host, CALCULATE 30-day moving average and stddev of source code file creations.
          ALERT if daily count > (average + 3 * stddev).
  - question: Can we predict if a newly created executable is malicious based on its creation context?
    context: |
      This question leverages a machine learning classifier to assess the likelihood that a new executable is malicious. The model considers features like the file path's randomness (entropy), the presence of corresponding source code, the parent process that created it, and whether the file is digitally signed. This helps identify novel threats that may not yet have a known malicious signature.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 11 (FileCreate)
      - User profile temporary directories (%APPDATA%, %TEMP%, Downloads), shared network drives, and web server directories, excluding designated software development project folders.
    range: last 90 days
    queries:
      - pseudocode: |
          ON new executable creation, EXTRACT features (path entropy, parent process, user context, signature status).
          PREDICT malice using trained classification model.
          ALERT if confidence > 0.90.
  - question: Is a compiler process being launched by a suspicious parent process or using unusual file paths?
    context: |
      This question looks for direct evidence of compilation abuse. It creates a rule to detect when a known compiler (like csc.exe or gcc.exe) is started by a process not typically associated with development, such as a Microsoft Office application or a web browser. It also flags compilations that use temporary or public directories for source or output files, which is a common adversary tactic.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (ProcessCreate)
      - Domain Controllers, Application Servers, User endpoints (especially non-developer workstations), and software development environments.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events (Sysmon 1) WHERE process name in ['csc.exe', 'gcc.exe', 'MSBuild.exe', 'ilasm.exe'] AND (parent process name in ['winword.exe', 'excel.exe', 'outlook.exe', 'powershell.exe'] OR command line contains '%TEMP%' or '%PUBLIC%').
  - question: Is a user's compiler usage statistically anomalous compared to their established baseline?
    context: |
      This question aims to find outliers in compiler usage on a per-user basis. It establishes a baseline of normal activity, including typical parent processes and command-line arguments. An alert is triggered if a compiler is launched by a new parent process for that user or if the command-line arguments are unusually complex (high entropy), which could indicate obfuscation or automated generation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (ProcessCreate)
      - Domain Controllers, Application Servers, User endpoints (especially non-developer workstations), and software development environments.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each user, BASELINE compiler parent processes and command-line entropy.
          ON compiler execution, ALERT if parent process is new for user OR if command-line entropy > 95th percentile for user.
  - question: Can an anomaly detection model identify outlier compiler execution events?
    context: |
      This question applies machine learning to identify unusual compiler executions that deviate from normal patterns observed across developer workstations. An Isolation Forest model is trained on features like the parent process, user account, and command-line arguments. It can flag compiler activity on non-developer machines or legitimate-looking activity that is contextually abnormal.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (ProcessCreate)
      - Domain Controllers, Application Servers, User endpoints (especially non-developer workstations), and software development environments.
    range: last 90 days
    queries:
      - pseudocode: |
          ON compiler execution, EXTRACT features (parent process, user, host, tokenized arguments).
          SCORE with trained anomaly detection model (Isolation Forest).
          ALERT if event is flagged as a significant outlier.
  - question: Has a sequence of source file creation, compilation, and binary execution occurred on a host within a short time frame?
    context: |
      This question correlates multiple events to detect the full 'compile-after-delivery' chain of action. It looks for a specific sequence: a source code file is written, a compiler is run against that file, and the resulting executable is launched, all happening on the same host within a 5-minute window. This provides high-confidence evidence of the T1027.004 technique.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 11 (FileCreate)
      - User workstations, Web application servers, CI/CD pipeline servers, and ephemeral or containerized environments.
    range: last 90 days
    queries:
      - pseudocode: |
          CORRELATE events on a single host within 5 minutes: Sysmon 11 (source file) -> Sysmon 1 (compiler using source file) -> Sysmon 1 (execution of compiler output).
          ALERT on sequence match.
  - question: Is the time between source file creation and compilation unusually short on a non-developer host?
    context: |
      This question focuses on the timing between events to differentiate between legitimate and malicious activity. On non-developer machines, an extremely short delay (e.g., under 10 seconds) between a source file being written and then compiled suggests automated, non-interactive behavior typical of an adversary's script, rather than a user manually performing these actions.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 11 (FileCreate)
      - User workstations, Web application servers, CI/CD pipeline servers, and ephemeral or containerized environments.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each non-developer host, CALCULATE time delta between source file write (Sysmon 11) and corresponding compile (Sysmon 1).
          ALERT if delta < 5th percentile (e.g., <10s).
  - question: Can a sequence analysis model detect a malicious compilation event chain?
    context: |
      This question uses a more advanced machine learning model (like an RNN or HMM) to learn the normal sequences of events on a host. The model can then identify and alert on a sequence of events (e.g., 'write source', 'compile', 'execute binary') that has a high probability of being part of a malicious attack chain, even if the individual events appear benign.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 11 (FileCreate)
      - User workstations, Web application servers, CI/CD pipeline servers, and ephemeral or containerized environments.
    range: last 90 days
    queries:
      - pseudocode: |
          INPUT stream of host events (file create, process create) into trained sequence model (RNN/HMM).
          ALERT if model identifies a sequence with high probability of matching a malicious compilation chain.
  - question: Is a newly compiled binary making outbound network connections to known malicious destinations?
    context: |
      This question links the compilation event to potential command and control (C2) activity. It correlates the process ID of a newly executed binary with its subsequent network connections. An alert is triggered if the destination IP is on a threat intelligence blocklist or if the domain name is associated with domain generation algorithms (DGA), indicating a likely C2 channel.
    answer_sources:
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 3 (NetworkConnect)
      - Sysmon Event ID 11 (FileCreate)
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points (Firewalls/Gateways), DNS servers, Endpoint network stacks (via Sysmon), and cloud service provider flow logs.
    range: last 90 days
    queries:
      - pseudocode: |
          CORRELATE Sysmon 1 (newly compiled binary) with Sysmon 3 (network connect) by ProcessGUID within 60s.
          ENRICH destination IP with threat intel and DNS logs.
          ALERT if destination is on blocklist or domain is flagged by DGA.
  - question: Is the network traffic from a newly compiled binary statistically rare or anomalous for the enterprise?
    context: |
      This question uses statistical rarity to identify suspicious network behavior from a newly compiled program. It analyzes the destination IP, port, and TLS fingerprint (JA3/JA3S) of the connection. An alert is generated if these attributes are uncommon across the organization's traffic, such as a connection to a country not typically communicated with or a TLS fingerprint seen in less than 1% of connections, which can indicate bespoke C2 tooling.
    answer_sources:
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 3 (NetworkConnect)
      - Sysmon Event ID 11 (FileCreate)
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points (Firewalls/Gateways), DNS servers, Endpoint network stacks (via Sysmon), and cloud service provider flow logs.
    range: last 90 days
    queries:
      - pseudocode: |
          AFTER new binary execution, analyze its network connections.
          CALCULATE enterprise-wide prevalence of destination IP, port, and JA3/JA3S hash over 30 days.
          ALERT if prevalence < 1% or destination country is new.
  - question: Does a host's outbound network traffic significantly deviate from its forecasted baseline after a new binary is executed?
    context: |
      This question uses a time-series model to forecast a host's normal network behavior (e.g., data volume, unique destinations). After a newly compiled binary is executed, the model monitors the host's actual traffic. If the traffic significantly deviates from the forecast, it suggests the new process has altered the host's behavior, potentially for data exfiltration or C2 communication.
    answer_sources:
      - Sysmon Event ID 1 (ProcessCreate)
      - Sysmon Event ID 3 (NetworkConnect)
      - Sysmon Event ID 11 (FileCreate)
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points (Firewalls/Gateways), DNS servers, Endpoint network stacks (via Sysmon), and cloud service provider flow logs.
    range: last 90 days
    queries:
      - pseudocode: |
          MONITOR host's outbound traffic for 1 hour after new binary execution.
          COMPARE actual traffic volume and unique IPs against a forecasted baseline (e.g., ARIMA model).
          ALERT on significant deviation.