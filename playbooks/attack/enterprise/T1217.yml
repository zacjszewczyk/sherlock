name: T1217: Browser Information Discovery
id: 5a1b3c2d-8e4f-4a69-9b1c-7d0e8f2a1b3c
description: This playbook helps investigate whether an adversary is attempting to discover browser information on compromised hosts. It covers several methods, including the execution of known credential harvesting tools, the use of scripting interpreters with command lines pointing to sensitive browser files (like 'Login Data' or 'cookies.sqlite'), unauthorized processes reading these files directly, suspicious sequences of events (file read -> staging -> network exfiltration), and processes accessing the memory of running web browsers. The goal is to detect and analyze these discovery activities across various data sources like process execution logs and file access audit events.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any known browser credential dumping tools been executed on the hosts?
    context: This question aims to identify the direct execution of malicious tools specifically designed to harvest browser credentials, such as LaZagne or WebBrowserPassView. Answering this question helps detect a clear and high-confidence indicator of compromise, as these tools have little to no legitimate use in a corporate environment. A positive match warrants immediate incident response.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Threat intelligence feeds
      - User workstations, Developer workstations, Administrative jump boxes, Critical servers
    range: last 90 days
    queries:
      - "SEARCH process creation logs (Sysmon EID 1, Win EID 4688) WHERE process_name OR file_hash IN (list_of_known_credential_dumpers)."
  - question: Are there any rarely executed processes running that are suspected to be browser information discovery tools?
    context: This question seeks to find suspicious tools that may not be on a definitive threat intelligence list but exhibit characteristics of malicious software, such as low prevalence across the enterprise. By identifying processes with suspicious names (e.g., containing 'passview', 'lazagne') that run on a very small number of hosts, analysts can uncover newly introduced or custom-named credential harvesters that would be missed by signature-based checks.
    answer_sources:
      - Sysmon Event ID 1
      - User workstations, Developer workstations, Administrative jump boxes, Critical servers
    range: last 90 days
    queries:
      - "SEARCH process creation logs (Sysmon EID 1), GROUP BY process_hash, process_name. CALCULATE prevalence (count(distinct hosts) / total_hosts). FILTER WHERE process_name matches suspicious_patterns AND prevalence < 0.01."
  - question: Can we detect anomalous or suspicious process executions indicative of browser information discovery using machine learning?
    context: This question leverages a machine learning model to move beyond simple name or hash matching. The model analyzes multiple features of a process execution—such as its name's complexity, its parent process, and whether it's digitally signed—to build a profile of normal versus malicious activity. This helps identify sophisticated or obfuscated tools that avoid simple statistical or symbolic detection methods by classifying executions based on a holistic set of behavioral characteristics.
    answer_sources:
      - Sysmon Event ID 1
      - User workstations, Developer workstations, Administrative jump boxes, Critical servers
    range: last 90 days
    queries:
      - "INPUT process creation features (name_entropy, parent_process, is_signed, etc.) INTO ML model. OUTPUT process executions classified as 'suspicious' or 'malicious'."
  - question: Have any scripting interpreters or utilities been executed with command lines referencing sensitive browser file paths?
    context: This question looks for direct evidence of scripts or commands (e.g., PowerShell, cmd.exe) attempting to access browser data files like 'Login Data' or 'cookies.sqlite'. This is a common technique for 'living off the land' where attackers use legitimate system tools for malicious purposes. Detecting this behavior can reveal file-less or script-based attacks that are trying to steal browser information.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations, Developer workstations, Administrative jump boxes, Critical servers
    range: last 90 days
    queries:
      - "SEARCH process creation logs (Sysmon EID 1) WHERE process_name IN (powershell.exe, cmd.exe, etc.) AND command_line CONTAINS ('Login Data', 'cookies.sqlite', 'User Data', etc.)."
  - question: Are there any script executions with unusually long or complex command lines, or that reference rarely accessed browser paths?
    context: This question uses statistical analysis to find outliers in script execution behavior. Attackers often use obfuscation, which increases command-line length and entropy. Additionally, a script run by a user that suddenly accesses a browser file path for the first time is highly anomalous. This approach helps detect obfuscated commands and unusual access patterns that might indicate malicious activity.
    answer_sources:
      - Sysmon Event ID 1
      - User workstations, Developer workstations, Administrative jump boxes, Critical servers
    range: last 90 days
    queries:
      - "SEARCH process creation logs (Sysmon EID 1). CALCULATE baseline for command_line_length and entropy per user/host. ALERT on executions where length/entropy > 95th_percentile. ALSO, track path frequency and ALERT on access to a rare browser path."
  - question: Can we use a natural language processing model to classify command lines as malicious attempts to discover browser information?
    context: This question employs an advanced NLP model to understand the semantic meaning and intent behind a command line, rather than just matching keywords. By training the model to distinguish between benign administrative scripts and malicious discovery commands, it can identify novel or complex attacks that use legitimate-looking syntax to access browser data, providing a more context-aware detection capability.
    answer_sources:
      - Sysmon Event ID 1
      - User workstations, Developer workstations, Administrative jump boxes, Critical servers
    range: last 90 days
    queries:
      - "INPUT command_line_text INTO NLP model. OUTPUT commands classified as 'malicious discovery'."
  - question: Has any unauthorized process attempted to read sensitive browser data files?
    context: This question focuses on file access monitoring to detect when a process that is not a web browser or an approved security tool reads sensitive files like 'Login Data' or 'cookies.sqlite'. By enabling object access auditing and maintaining an allowlist of legitimate processes, any access from an unexpected process (e.g., powershell.exe, a random executable) becomes a high-fidelity alert for credential theft.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Default user profile directories on endpoints and servers (e.g., C:\Users\<username>\AppData\)
    range: last 90 days
    queries:
      - "SEARCH file access logs (Win EID 4663, Sysmon EID 11) WHERE target_file IN ('Login Data', 'cookies.sqlite', etc.) AND operation is 'ReadData' AND process_name NOT IN (chrome.exe, firefox.exe, approved_scanners)."
  - question: Have there been any anomalous access patterns to browser data files by frequency or source process?
    context: This question establishes a baseline of which processes normally access browser data and how often. It then looks for statistical deviations from this norm. For example, if a legitimate process suddenly starts accessing these files much more frequently, or if a process that rarely touches them (like rundll32.exe) does so, it's flagged as an anomaly. This can catch legitimate tools being co-opted for malicious purposes.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Default user profile directories on endpoints and servers (e.g., C:\Users\<username>\AppData\)
    range: last 90 days
    queries:
      - "SEARCH file access logs. CALCULATE baseline of access frequency per process/host. ALERT if access_count > 3 standard deviations from mean OR if accessing_process is statistically rare."
  - question: Can an unsupervised machine learning model identify anomalous access events targeting browser data files?
    context: This question uses an unsupervised model like Isolation Forest to learn the 'normal' patterns of file access to browser data without pre-labeled data. The model considers features like the process name, its parent, the user, and time of day. Any access event that the model identifies as a significant outlier from these learned normal patterns is flagged as a potential threat, which is useful for detecting novel or previously unseen attack techniques.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Default user profile directories on endpoints and servers (e.g., C:\Users\<username>\AppData\)
    range: last 90 days
    queries:
      - "INPUT file access event features (process, parent_process, user, time) INTO anomaly detection model. OUTPUT events flagged as anomalous."
  - question: Has a sequence of events occurred where a process reads browser data, creates a file in a staging directory, and then makes an outbound network connection?
    context: This question looks for a classic data exfiltration chain of events. By correlating different log sources within a short time window (e.g., 5 minutes), it can detect an adversary stealing browser data, packaging it (e.g., into a ZIP file), and sending it to a remote server. A positive match for this entire sequence is a very strong indicator of a successful data theft operation.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - User workstations, Temporary file directories (e.g., %TEMP%, C:\Users\Public), Network egress points
    range: last 90 days
    queries:
      - "CORRELATE events within a 5-minute window per host: 1. File read on browser data (EID 4663). 2. File creation in staging dir (EID 11). 3. Outbound network connection (EID 3, Zeek). ALERT if sequence is met by the same process/host."
  - question: Following an access to browser data files, is there an anomalously large outbound data transfer from the same host?
    context: This question focuses on the network exfiltration part of the attack chain. After a known browser file access occurs, it monitors the host's network traffic. If a connection with an unusually large amount of outgoing data is observed shortly after, it's flagged as potential exfiltration. This statistical approach can catch data theft even if the staging steps are missed or obfuscated, by focusing on the data transfer anomaly.
    answer_sources:
      - Windows Event ID 4663
      - Zeek conn.log
      - User workstations, Network egress points
    range: last 90 days
    queries:
      - "TRIGGER on browser file access (EID 4663). MONITOR subsequent network logs (Zeek) from the same host for 10 minutes. ALERT if outbound_bytes > 99th percentile of historical baseline for that host."
  - question: Can a sequence analysis model detect the malicious event chain of browser data access followed by exfiltration?
    context: This question uses a sophisticated sequence analysis model (like an HMM or LSTM) to learn what normal chains of events look like on a host. The model is trained on sequences of file and network activities. When it observes the specific sequence of [Browser File Read -> Staging File Create -> Outbound Connection], it can flag this as a high-risk anomaly because it deviates significantly from the learned benign operational patterns, providing a powerful way to detect complex adversary behavior.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - User workstations, Temporary file directories (e.g., %TEMP%, C:\Users\Public), Network egress points
    range: last 90 days
    queries:
      - "INPUT sequences of host events (file reads, file creates, network conns) INTO sequence analysis model. OUTPUT sequences flagged as anomalous, especially those matching the exfiltration pattern."
  - question: Has a non-standard or unapproved process attempted to read the memory of a running web browser?
    context: This question aims to detect credential theft directly from browser memory, a technique used by tools like Mimikatz. It monitors for process access events (Sysmon Event ID 10) where the target is a browser and the source is not an expected process (like a debugger or system error reporter). Specifically looking for read-memory access rights (`PROCESS_VM_READ`) provides a high-confidence alert for this specific type of attack.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4688
      - Process memory space of web browsers on user workstations and servers
    range: last 90 days
    queries:
      - "SEARCH process access logs (Sysmon EID 10) WHERE target_process IN (chrome.exe, msedge.exe, etc.) AND source_process NOT IN (WerFault.exe, approved_debuggers) AND access_rights includes 'PROCESS_VM_READ'."
  - question: Has there been an unusual frequency of memory access attempts against browser processes from any single source process?
    context: This question establishes a baseline for how often legitimate processes access browser memory. It then looks for statistical anomalies, such as a sudden spike in access attempts from a single source process (e.g., PowerShell). A burst of such events could indicate a script or tool repeatedly trying to scrape memory, and flagging this frequency anomaly can help detect attacks that might otherwise look like isolated, low-level system events.
    answer_sources:
      - Sysmon Event ID 10
      - Process memory space of web browsers on user workstations and servers
    range: last 90 days
    queries:
      - "SEARCH process access logs (Sysmon EID 10) where target is browser. CALCULATE baseline frequency per source_process/host. ALERT if count > statistical threshold (e.g., > 2 events in 5 mins) from an unusual source."
  - question: Can a machine learning model differentiate between benign and malicious memory access events targeting web browsers?
    context: This question uses a supervised model to classify process memory access events. By training on features like the source and target process, the user context, and the parent of the source process, the model learns the nuanced differences between legitimate debugging/system activity and malicious memory scraping. This provides a more robust detection capability that can adapt to new tools and techniques used by adversaries.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4688
      - Process memory space of web browsers on user workstations and servers
    range: last 90 days
    queries:
      - "INPUT process access features (source_process, target_process, user, etc.) INTO ML model. OUTPUT events classified as 'malicious memory scraping'."