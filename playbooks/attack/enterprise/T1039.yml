name: T1039: Data from Network Shared Drive
id: 5a8a1b9e-7b7c-4d3e-9b6a-0f1c2d3e4f5a
description: Has the adversary collected data from network shared drives? This playbook addresses the threat of adversaries collecting data from network shared drives by looking for several key indicators. This includes the execution of known malicious data collection tools, the use of command-line utilities (like xcopy, robocopy) with UNC paths to access and copy files from shares, unusually high volumes of data being read from shares by a single user or host, access to an anomalous number of distinct shares or file types inconsistent with a user's role, and 'fan-in' data staging patterns where data from multiple shares is consolidated onto a single local host.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Have any processes been executed that match a known malicious file hash or process name associated with data collection tools?
    context: This question aims to detect the initial execution of known malicious tools used for data collection. By comparing process creation events against a curated watchlist of threat intelligence (e.g., file hashes and names for tools like secretsdump.py), analysts can quickly identify the use of recognized adversary toolkits. A match is a high-fidelity indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - From: All enterprise endpoints and servers, Domain Controllers, File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE (process_hash IN threat_intel_hashes OR process_name IN threat_intel_names)
  - question: Has a statistically rare command been executed by a user on a host, which was immediately followed by access to a network share?
    context: Adversaries often use legitimate tools with unusual command-line arguments to evade detection. This question focuses on identifying these anomalies. It checks for process executions with command lines that are historically infrequent for a specific user and host combination. If such a rare command is followed closely by network share access, it strongly suggests a reconnaissance or collection activity that deviates from normal user behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Windows Event ID 5145
      - From: All enterprise endpoints and servers, Domain Controllers, File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FIND rare_command_events (rarity < 1st_percentile) | CORRELATE with network_share_access_events from same_host within 5_minutes
  - question: Has a machine learning model identified any process creation events as having a high probability of being malicious data collection activity?
    context: This question leverages a supervised machine learning model to proactively identify malicious process behavior. The model is trained to recognize patterns indicative of malicious activity based on features like process name, parent process, command-line structure, and user context. A high probability score from this model, especially when correlated with subsequent network share access, serves as a sophisticated alert for potentially novel or obfuscated collection techniques that signature-based methods might miss.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Windows Event ID 5145
      - From: All enterprise endpoints and servers, Domain Controllers, File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT process_creation_events into ML_model | FIND events with probability_score > threshold | CORRELATE with network_share_access_events
  - question: Are there any command-line or PowerShell script executions that use file copy/enumeration commands with network share (UNC) paths?
    context: This question targets the explicit use of built-in command-line tools (like `xcopy`, `robocopy`, `Copy-Item`) to access and copy data from network shares. By searching for logs containing both a copy/enumeration command and a UNC path (e.g., `\\server\share`), analysts can directly spot overt data collection attempts. This is a common and often noisy activity, but it's a fundamental technique for adversaries to gather data.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - From: All enterprise endpoints and servers, File servers hosting network shares
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH command_line_logs, powershell_script_logs FOR regex(copy_commands AND UNC_path)
  - question: Have any common file transfer utilities been executed with an unusually complex or high-entropy command-line string?
    context: Adversaries may try to obfuscate their commands to avoid simple keyword-based detection. This question aims to find such attempts by measuring the complexity (Shannon entropy) of command-line strings for known file transfer tools. A command with an entropy score significantly higher than the established baseline for that tool, especially when a UNC path is present, could indicate obfuscation or the use of complex, non-standard parameters, warranting investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - From: All enterprise endpoints and servers, File servers hosting network shares
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE entropy for command_lines of (xcopy, robocopy, etc.) | ALERT if entropy > 98th_percentile_baseline AND command_line contains UNC_path
  - question: Has an NLP model classified any PowerShell script blocks as having a high probability of malicious data collection intent?
    context: This question employs advanced NLP to understand the *intent* of a PowerShell script, rather than just matching keywords. A transformer model, fine-tuned on both benign and malicious scripts, can analyze the structure, commands, and arguments within a script block. It can flag scripts that are semantically similar to known data collection or staging scripts, even if they use different variable names or formatting, providing a powerful defense against polymorphic or custom scripting.
    answer_sources:
      - Windows Event ID 4104
      - From: All enterprise endpoints and servers, File servers hosting network shares
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT powershell_script_logs into NLP_model | ALERT if classification is 'data collection' or 'staging' with high_probability AND script contains UNC_path
  - question: Has any single host exceeded a hard threshold for data volume (e.g., 2 GB) or file count (e.g., 5,000 files) read from network shares within a short time window (e.g., 1 hour)?
    context: This question establishes a simple, high-volume threshold to catch blatant 'smash and grab' data collection activities. While less nuanced than baselining, fixed thresholds are effective for detecting large-scale exfiltration preparation where an adversary attempts to copy entire directories or databases. An alert on this rule indicates a significant data transfer event that requires immediate review.
    answer_sources:
      - Windows Event ID 5145
      - Zeek smb.log
      - Zeek files.log
      - From: File servers hosting network shares, Network backbone switches (for traffic monitoring), Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: AGGREGATE share_access_logs by host over 1_hour | ALERT if unique_files_read > 5000 OR bytes_transferred > 2GB
  - question: Has any user-host pair shown a statistically significant deviation (e.g., Z-score > 3.0) from their normal baseline of data volume or file count read from network shares?
    context: This question moves beyond fixed thresholds to personalized anomaly detection. By creating a rolling baseline of normal activity for each user-host pair, it can detect when a user's behavior changes dramatically. A high Z-score indicates that the current activity (e.g., number of files accessed) is a statistical outlier compared to their own history, which is a strong indicator of compromised credentials or insider threat activity, even if the total volume is not massive.
    answer_sources:
      - Windows Event ID 5145
      - Zeek smb.log
      - Zeek files.log
      - From: File servers hosting network shares, Network backbone switches (for traffic monitoring), Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each user_host_pair, CALCULATE Z-score of (bytes_transferred, files_accessed) against 30-day_baseline | ALERT if Z-score > 3.0
  - question: Has a time-series anomaly detection model detected an abnormal pattern of read activity from a high-value network share?
    context: This question focuses on protecting specific, high-value assets (e.g., a source code repository or financial records share). A time-series model (like ARIMA or an LSTM) learns the regular rhythm of access to that share, including daily and weekly business cycles. It can then flag deviations from this learned pattern, such as a large data read in the middle of the night or on a weekend, which would be highly suspicious even if the volume might be normal during business hours.
    answer_sources:
      - Windows Event ID 5145
      - Zeek smb.log
      - Zeek files.log
      - From: File servers hosting network shares, Network backbone switches (for traffic monitoring), Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT share_access_volume into time_series_model for high_value_share | ALERT if observed_volume deviates significantly from predicted_volume
  - question: Has a user account accessed a network share they are not authorized to access based on their role or group membership?
    context: This is a critical access control question. It checks for policy violations by cross-referencing actual network share access events with a predefined map of which user groups should be accessing which shares. For example, a user from the 'Marketing' AD group accessing a share designated for 'Engineering-Source-Code' is a major security red flag and a direct indicator of privilege abuse, misconfiguration, or a compromised account.
    answer_sources:
      - Windows Event ID 5145
      - Zeek smb.log
      - From: File servers hosting network shares, Active Directory servers, Data classification repositories
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each share_access_event, CHECK if user_group is in authorized_group_list for that share | ALERT on mismatch
  - question: Has any user accessed an unusually high number of different network shares or a much wider variety of file types than they normally do?
    context: This question aims to detect adversary reconnaissance and broad-based collection. An adversary with a compromised account will often explore the network, accessing many different shares to see what's available. This behavior would cause a spike in the 'unique shares accessed' count. Similarly, if a user who normally only accesses .docx and .pdf files suddenly starts accessing .dll, .config, and .bak files, the increased entropy of file types suggests they are looking for something outside their normal job function.
    answer_sources:
      - Windows Event ID 5145
      - Zeek smb.log
      - From: File servers hosting network shares, Active Directory servers, Data classification repositories
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each user, CALCULATE daily_unique_share_count and daily_file_extension_entropy | ALERT if count > 99th_percentile OR entropy spikes sharply
  - question: Has a graph-based analysis detected a user accessing network shares that are far outside their normal 'community of interest'?
    context: This question uses graph analytics to model relationships between users and the data they access. Users naturally form communities (e.g., the finance team accesses finance shares). A community detection algorithm can identify these clusters. An alert is triggered when a user suddenly starts accessing multiple shares belonging to a completely different community, which is a strong indicator of lateral movement and data discovery by an adversary.
    answer_sources:
      - Windows Event ID 5145
      - Zeek smb.log
      - From: File servers hosting network shares, Active Directory servers, Data classification repositories
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BUILD user-share_access_graph | APPLY community_detection_algorithm | ALERT if user creates new edges to shares outside their primary_community
  - question: Has a single host been observed reading files from multiple different network shares and then writing a large number of files to a local directory in a short time frame?
    context: This question looks for the classic 'fan-in' staging pattern. Adversaries often collect data from various network locations and consolidate it on a single compromised host before exfiltration. This rule specifically looks for the sequence of events read from share A, read from share B, read from share C, then write many files to a local folder like `C:\Users\Public`. Detecting this sequence is a strong indicator of data staging.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 11
      - Zeek smb.log
      - From: All enterprise endpoints and servers, File servers hosting network shares
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CORRELATE events by host | ALERT if (reads from >= 3 unique_UNC_paths) are followed by (high_volume_file_creates to single_local_directory) within 30_minutes
  - question: Has any host exhibited a significant spike in the ratio of network read bytes to local disk write bytes?
    context: This question identifies data staging by monitoring the flow of data. A host that is primarily consuming data from the network (high network reads) and writing it to its own disk (high local writes) with little other activity is likely being used for staging. By tracking the ratio of network reads to local writes, and alerting when it deviates significantly from the host's normal baseline, analysts can detect this staging behavior in near real-time.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 11
      - Zeek smb.log
      - From: All enterprise endpoints and servers, File servers hosting network shares
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, CALCULATE ratio of (network_read_bytes / local_disk_write_bytes) in 5-min_window | ALERT if ratio > 3_std_dev from baseline
  - question: Has a sequence analysis model detected a series of events that strongly match the pattern of malicious data staging?
    context: This question uses a sophisticated sequence analysis model (like an RNN) to recognize the specific chronological order of events that constitute data staging. The model is trained to identify the exact sequence 'Enumerate Share -> Read File -> Enumerate Another Share -> Read Another File -> Create Local Staging Directory -> Write Local File'. By scoring real-time event streams against this trained pattern, it can detect the staging behavior with high precision, even if the events are interspersed with minor, unrelated activity.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 11
      - Zeek smb.log
      - From: All enterprise endpoints and servers, File servers hosting network shares
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT real-time_event_sequences into RNN_model | ALERT if sequence_score matches malicious_staging_pattern with high_probability