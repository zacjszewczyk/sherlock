name: T1204.004: Malicious Copy and Paste
id: 9f7e8a1b-0c2d-4e3f-8a9b-1c2d3e4f5a6b
description: |
  This playbook helps investigate whether an adversary has gained execution on an enterprise host through user-initiated copy and paste. It focuses on detecting malicious activity by analyzing process creation events, command-line contents, parent-child process relationships, and subsequent network connections. Key indicators include command-line interpreters executing commands containing known IOCs or LOLBAS patterns, anomalously long or complex commands spawned by browsers or document readers, and commands followed by connections to rare network destinations. It also examines commands spawned by explorer.exe that are inconsistent with manual user input.
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation events for command-line interpreters that contain known malicious indicators from threat intelligence feeds?
    context: |
      This question aims to identify direct evidence of malicious execution by checking if command lines for interpreters like powershell.exe or cmd.exe contain known malicious domains, IP addresses, or file hashes. A match provides a high-confidence signal that a user has copied and pasted a malicious command provided by an adversary.
    answer_sources:
      - Windows Event ID 4688
      - Zeek dns.log
      - User workstations, Developer endpoints, Administrative jump boxes, Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs (e.g., Win Event 4688).
          Query: For each log, check if command_line contains any value from threat_intelligence_feed. Alert on match.
  - question: Has a command-line interpreter executed a command containing a domain that is rarely requested across the enterprise?
    context: |
      This question seeks to uncover suspicious execution by identifying command lines that lead to DNS lookups for statistically rare domains. Adversaries often use newly registered or obscure domains for C2 communications. Correlating command execution with subsequent DNS requests for low-frequency domains can surface novel threats not yet present in threat intelligence.
    answer_sources:
      - Windows Event ID 4688
      - Zeek dns.log
      - User workstations, Developer endpoints, Administrative jump boxes, Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs and DNS logs (e.g., Win Event 4688, Zeek dns.log).
          Query: 1. Extract domains from command_line. 2. Correlate with subsequent DNS queries from the same host. 3. Calculate domain frequency over last 30 days. 4. Flag executions where the domain frequency is in the bottom 5th percentile.
  - question: Can a machine learning model classify any executed command-line strings as malicious?
    context: |
      This question leverages a pre-trained Natural Language Processing (NLP) model to analyze the structure and content of command-line strings. The model identifies malicious commands by learning from features like character patterns, string length, entropy, and the presence of known malicious keywords. This approach can detect obfuscated or novel commands that may evade signature-based methods.
    answer_sources:
      - Windows Event ID 4688
      - Zeek dns.log
      - User workstations, Developer endpoints, Administrative jump boxes, Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs (e.g., Win Event 4688).
          Query: 1. Extract command_line string. 2. Pass string to a pre-trained NLP classification model. 3. Alert if the returned classification is 'malicious' with a confidence score > 0.9.
  - question: Are there any process or script block logs containing command strings with known malicious 'Living Off the Land' (LOLBAS) patterns?
    context: |
      This question focuses on detecting the abuse of legitimate system utilities. By scanning command lines and PowerShell script blocks for regular expressions matching known malicious techniques (e.g., PowerShell download cradles, certutil abuse), analysts can identify adversaries attempting to execute code while blending in with normal administrative activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows endpoints and servers, particularly those with PowerShell v5+ script block logging enabled
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process logs (Win Event 4688) and PowerShell logs (Win Event 4104).
          Query: Scan command_line and script_block_text fields with regex for patterns like 'IEX.*New-Object.*Net\\.WebClient', 'certutil\\.exe.*-urlcache.*-f', etc. Alert on match.
  - question: Have any command-line interpreters executed commands with an unusually high entropy score compared to their baseline?
    context: |
      This question aims to detect obfuscated or encoded commands. Malicious commands are often packed, encoded (e.g., Base64), or encrypted to evade simple keyword detection, resulting in a higher Shannon entropy. By comparing a command's entropy to the established baseline for its specific interpreter (e.g., powershell.exe), we can flag statistically significant deviations that warrant investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows endpoints and servers, particularly those with PowerShell v5+ script block logging enabled
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process logs (e.g., Win Event 4688).
          Query: 1. For interpreters, calculate Shannon entropy of command_line. 2. Compare to the 30-day rolling baseline mean and standard deviation for that interpreter. 3. Flag commands with entropy > 3 standard deviations above the mean.
  - question: Has there been a significant, anomalous spike in the enterprise-wide frequency of high-risk LOLBAS pattern usage?
    context: |
      This question uses a time-series model to monitor the collective behavior of LOLBAS usage across the enterprise. A sudden, coordinated increase in the use of a specific pattern (e.g., 'certutil -urlcache') that deviates from the forecasted norm can indicate a widespread, automated attack campaign. This provides a macro-level view of a potential threat.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows endpoints and servers, particularly those with PowerShell v5+ script block logging enabled
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process and script block logs.
          Query: 1. Monitor hourly frequency of specific LOLBAS patterns. 2. Use a time-series anomaly detection model (e.g., Seasonal-ARIMA) to forecast expected frequency. 3. Alert when observed frequency exceeds the 99% confidence interval of the forecast.
  - question: Has a browser, email client, or document reader spawned a command-line interpreter with an excessively long command line?
    context: |
      This question targets a common infection vector where a user is tricked into copying a malicious command from a webpage, email, or document and pasting it into a terminal. Legitimate commands spawned from these parents are rare and typically short. A rule that checks for this parent-child relationship combined with a long command line (e.g., > 1024 characters) is a high-fidelity indicator of malicious copy-paste execution.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Virtual Desktop Infrastructure (VDI) instances, Remote Desktop Session Hosts
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs (Win Event 4688).
          Query: Trigger when parent_process is in ('chrome.exe', 'outlook.exe', etc.) AND child_process is in ('cmd.exe', 'powershell.exe', etc.) AND command_line_length > 1024.
  - question: Has an interpreter process spawned by a browser or document reader exceeded the baseline command-line length for that specific user and context?
    context: |
      This question refines the previous one by creating more specific, adaptive baselines. Instead of a single static length threshold, it establishes a normal command-line length profile for each user-host pair in the context of browser/document-to-interpreter processes. Flagging executions that exceed a high percentile (e.g., 98th) of this specific baseline reduces false positives that might be generated by power users or developers who legitimately use longer commands.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Virtual Desktop Infrastructure (VDI) instances, Remote Desktop Session Hosts
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs.
          Query: 1. For each user-host, baseline command_line lengths for browser->interpreter events. 2. Flag new events where command_line_length exceeds the 98th percentile of the baseline.
  - question: Can an anomaly detection model identify suspicious parent-child process events based on features like process names, command-line length, and entropy?
    context: |
      This question applies an unsupervised machine learning model, such as an Isolation Forest, to identify anomalous process creation events that do not conform to normal activity. By analyzing a combination of features (parent name, child name, command length/entropy, time delta), the model can spot unusual combinations that might indicate a malicious copy-paste event, even if individual features are not suspicious on their own.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Virtual Desktop Infrastructure (VDI) instances, Remote Desktop Session Hosts
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs.
          Query: 1. Create feature set (parent_process, child_process, command_length, command_entropy, time_delta). 2. Score new events using a trained Isolation Forest model. 3. Investigate events with high anomaly scores.
  - question: Did a command-line interpreter process make an immediate outbound network connection to a known malicious destination?
    context: |
      This question directly links execution with potential command-and-control (C2) activity. By correlating a process creation event for an interpreter with a subsequent network connection to an IP or domain on a threat intelligence feed, we can identify high-confidence instances of malicious execution. The short time window (e.g., 5 seconds) ensures a strong causal link.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, DNS resolvers, All Windows endpoints and servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process (Win Event 4688) and network (Zeek conn.log) logs.
          Query: Correlate interpreter process creation with a network connection from the same host within 5 seconds. Alert if destination_ip or destination_domain is in a C2 threat feed.
  - question: Did an interpreter process initiate a network connection to a domain that is both new for the host and rare across the enterprise?
    context: |
      This question seeks to identify connections to novel or suspicious C2 infrastructure. An adversary may use a domain not yet on any threat list. By flagging connections from interpreters to domains that the specific host has never seen before AND that very few other hosts in the organization have ever contacted, we can uncover statistically rare and potentially malicious network behavior.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, DNS resolvers, All Windows endpoints and servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process and DNS logs.
          Query: 1. On interpreter network connection, check if destination domain is new for the host (last 90 days). 2. If new, calculate its global prevalence (e.g., % of hosts that have contacted it). 3. Flag if prevalence is < 1%.
  - question: Can a clustering model identify network connections from interpreter processes that do not fit into any known, benign cluster of activity?
    context: |
      This question uses unsupervised machine learning to baseline normal network behavior for interpreter processes. By clustering connections based on features like port, protocol, and JA3/JA3S hashes, the model learns what 'normal' looks like (e.g., connections to internal servers). Any new connection that does not fit into an existing cluster is labeled as a 'noise' point or anomaly, warranting investigation as it could represent a new C2 channel.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points, DNS resolvers, All Windows endpoints and servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Network logs from interpreter processes.
          Query: 1. Cluster connections using DBSCAN on features (port, protocol, JA3/JA3S, data volume). 2. Flag any new connection that is classified as a 'noise' point by the algorithm.
  - question: Has the explorer.exe process spawned a child process with a command line containing suspicious, non-manually-typed patterns?
    context: |
      This question looks for evidence of malicious commands being executed via the Windows Run (Win+R) or File Explorer dialogs, which are child processes of explorer.exe. It searches for patterns that are highly unlikely to be typed manually, such as PowerShell's encoded command flag ('-e'), URLs, or Base64 strings. The presence of these patterns strongly suggests a copy-paste action.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Terminal servers, Remote Desktop servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs (Win Event 4688).
          Query: Alert when parent_process is 'explorer.exe' and child command_line contains 'powershell -e', 'http://', 'IEX(', or a Base64 pattern.
  - question: Has explorer.exe spawned a child process with a command-line length that is a statistical outlier compared to typical commands?
    context: |
      This question aims to identify pasted commands by focusing on their length. Manually typed commands in the Run or Explorer dialogs are typically short. By calculating the Interquartile Range (IQR) for the lengths of all commands spawned by explorer.exe, we can statistically define what 'normal' length is and flag any command that is significantly longer as an outlier, suggesting it was pasted rather than typed.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Terminal servers, Remote Desktop servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs.
          Query: 1. For children of 'explorer.exe', calculate the IQR of command_line length. 2. Flag any command where length > Q3 + 1.5 * IQR.
  - question: Can a one-class machine learning model, trained on benign commands from explorer.exe, identify any new commands as outliers?
    context: |
      This question uses a One-Class SVM, a model designed to learn the boundary of 'normal' data. By training it on features of known-benign commands from explorer.exe (e.g., length, entropy, special character count), the model can effectively identify any new command that deviates from this norm. Such outliers are highly suspicious of being pasted and malicious.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Terminal servers, Remote Desktop servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          Search: Process creation logs.
          Query: 1. Use a trained One-Class SVM model on features from new commands spawned by explorer.exe. 2. Investigate any command classified as an 'outlier'.