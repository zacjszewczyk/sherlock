name: T1040: Network Sniffing
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is conducting network sniffing to capture credentials or perform discovery. It addresses attempts to use known malicious sniffing tools, misuse legitimate utilities like tcpdump or Wireshark with suspicious arguments, perform man-in-the-middle attacks via ARP or LLMNR/NBT-NS poisoning, or enable promiscuous mode on network interfaces. It also covers passive OS/service fingerprinting, capturing Layer 2 discovery protocols (CDP/LLDP), and unauthorized traffic mirroring in cloud environments. The goal is to detect and analyze evidence of network traffic capture across endpoints and network infrastructure.
type: technique
related: [TA0006: Credential Access, TA0007: Discovery]
contributors: [Zachary Szewczyk]
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a process being created whose file hash matches a known malicious packet sniffing tool from our threat intelligence feed?
  context: This question seeks to identify the use of known malicious sniffing tools like Cain & Abel or Ettercap. By monitoring process creation events and correlating file hashes against a threat intelligence feed, we can generate a high-priority alert on a direct match, indicating a clear attempt by an adversary to capture network traffic.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - Zeek software.log
  - Domain Controllers
  - Application Servers
  - User Workstations
  - Privileged Access Workstations
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events
      JOIN file_hash WITH threat_intel_sniffer_hashes
      WHERE match_found
      RETURN hostname, process_name, file_hash, user
- question: Is a rare or uncommon process executing that could be an unknown sniffing tool?
  context: Adversaries may use custom or unknown sniffing tools not present in threat intelligence feeds. This question identifies such tools by flagging processes whose file hash is exceptionally rare across the environment (e.g., seen on fewer than the 1st percentile of endpoints). This rarity suggests the software is not standard and could be an unauthorized or malicious tool.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - Zeek software.log
  - Domain Controllers
  - Application Servers
  - User Workstations
  - Privileged Access Workstations
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FROM process_events
      CALCULATE prevalence(file_hash) across all hosts
      WHERE prevalence < 1st_percentile
      RETURN hostname, process_name, file_hash, prevalence
- question: Can machine learning classify a new process execution event as a potential sniffing tool based on its behavioral features?
  context: This question uses a machine learning classification model to proactively identify potentially malicious processes, even if they are not known or statistically rare. The model analyzes features like the parent process, user context, command-line arguments, and file path to determine the likelihood of malicious activity. A high-confidence 'malicious' classification triggers an alert for immediate investigation.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - Zeek software.log
  - Domain Controllers
  - Application Servers
  - User Workstations
  - Privileged Access Workstations
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each new process_event
      EXTRACT features (parent_process, user, cmd_line)
      PREDICT classification using trained_model
      WHERE prediction is 'malicious' with high_confidence
      RETURN event_details, prediction_confidence
- question: Is a legitimate network utility (e.g., tcpdump, Wireshark) being executed with suspicious command-line arguments, such as writing to a file or filtering for cleartext credential protocols?
  context: Adversaries often misuse legitimate tools to avoid detection. This question focuses on identifying when network utilities like `tcpdump.exe` or `tshark.exe` are used with arguments that suggest malicious intent, such as capturing traffic to an output file (`-w`) or specifically targeting unencrypted protocols like FTP (port 21), Telnet (port 23), or POP3 (port 110).
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - User Workstations
  - IT Administrator Workstations
  - Servers hosting diagnostic tools
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name IN (tcpdump, tshark, windump)
      AND command_line MATCHES ('-w', 'port 21', 'port 23', 'port 110')
      RETURN hostname, process_name, command_line
- question: Has a user executed a diagnostic tool with command-line arguments that are statistically unusual for their established baseline?
  context: This question aims to detect anomalous usage of legitimate tools by establishing a baseline of normal command-line patterns for each user. A sudden deviation, such as a spike in argument complexity (entropy) or the use of a filter for a port never before analyzed by that user, suggests a potential misuse of the tool for sniffing and should trigger an alert.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - User Workstations
  - IT Administrator Workstations
  - Servers hosting diagnostic tools
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each user
      CALCULATE baseline of command_line_arguments for diagnostic_tools
      FOR each new execution
      IF arguments are statistically rare OR entropy is high
      THEN ALERT
- question: Does the command-line usage of a sniffing tool fall outside the normal clusters of administrative activity?
  context: This question applies unsupervised machine learning to identify anomalous command-line usage. By clustering the feature vectors of command-line arguments, we can define what 'normal' administrative activity looks like. Any execution that does not fit into these established clusters is treated as an outlier and flagged for analyst review, potentially indicating malicious use.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - User Workstations
  - IT Administrator Workstations
  - Servers hosting diagnostic tools
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      CLUSTER command_line_features for sniffing_tools
      IDENTIFY normal_activity_clusters
      FOR each new execution
      IF execution is an outlier
      THEN ALERT
- question: Is a single host attempting a man-in-the-middle attack by associating its MAC address with multiple IP addresses or by illegitimately responding to LLMNR/NBT-NS queries?
  context: This question looks for direct evidence of ARP spoofing or LLMNR/NBT-NS poisoning. An alert is triggered if a single MAC address claims multiple IP addresses in a short time, or if a host that is not a designated name server responds to a high number of name resolution queries. These are strong indicators of a MitM attack to intercept traffic.
  answer_sources:
  - Zeek arp.log
  - Zeek dns.log
  - Zeek conn.log
  - Core network switch mirror ports
  - network tap data
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH arp_logs WHERE one_mac_address is associated with multiple_ip_addresses in short_time_window
      OR
      SEARCH dns_logs WHERE non-dns_server responds to many_name_queries
- question: Is a host sending a statistically anomalous number of gratuitous ARP packets compared to the network baseline?
  context: While some gratuitous ARPs are normal, a flood of them from a single host can be a sign of an ARP poisoning attempt. This question establishes a dynamic baseline for the rate of gratuitous ARP packets across the network and alerts when a host's rate significantly exceeds the norm (e.g., 99th percentile), indicating a potential MitM attack in progress.
  answer_sources:
  - Zeek arp.log
  - Zeek dns.log
  - Zeek conn.log
  - Core network switch mirror ports
  - network tap data
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each host
      TRACK rate of gratuitous_arp_packets
      CALCULATE baseline across network
      IF host_rate > 99th_percentile_of_baseline
      THEN ALERT
- question: Is a time-series anomaly detection model detecting an unpredicted spike in LLMNR/NBT-NS responses from a single host?
  context: This question uses a time-series model (like ARIMA or LSTM) to predict the normal volume of LLMNR/NBT-NS responses for each host. A significant, unpredicted spike in response volume indicates a deviation from normal behavior that is highly consistent with an adversary attempting to perform name service poisoning to intercept credentials.
  answer_sources:
  - Zeek arp.log
  - Zeek dns.log
  - Zeek conn.log
  - Core network switch mirror ports
  - network tap data
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each host
      MODEL time_series of LLMNR_NBT-NS_response_volume
      IF actual_volume significantly exceeds predicted_volume
      THEN ALERT
- question: Has a network interface on a host not on the authorized whitelist entered promiscuous mode?
  context: Promiscuous mode allows a NIC to capture all traffic on its network segment, not just traffic addressed to it. This is a key enabler for passive sniffing. This question checks for log messages indicating this mode has been enabled and alerts if the host is not on a pre-approved list of systems (e.g., network sensors) authorized for this behavior.
  answer_sources:
  - Windows System Event Log
  - Linux /var/log/syslog
  - Endpoint detection and response (EDR) agent logs
  - All endpoint and server hosts
  - Virtualization hosts
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH logs for 'promiscuous mode enabled'
      IF hostname NOT IN authorized_whitelist
      THEN ALERT
- question: Has there been a statistically significant increase in the number of interfaces in promiscuous mode across the enterprise or within a specific host class?
  context: This question provides a high-level, enterprise-wide view of promiscuous mode usage. By tracking the total count of interfaces in this mode, a sudden increase can signal a widespread sniffing campaign. Similarly, the appearance of this mode for the first time on a class of assets, like finance workstations, is a statistical anomaly that warrants investigation.
  answer_sources:
  - Windows System Event Log
  - Linux /var/log/syslog
  - Endpoint detection and response (EDR) agent logs
  - All endpoint and server hosts
  - Virtualization hosts
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      PERIODICALLY query interface_status across all hosts
      TRACK total_count of promiscuous_mode
      IF total_count spikes OR appears in new_host_class
      THEN ALERT
- question: When promiscuous mode is detected on a host, does a machine learning model classify that host as not matching the profile of an authorized monitoring system?
  context: This question uses a one-class SVM or similar model to build a profile of 'authorized' hosts based on features like naming convention, installed software, and role. When a promiscuous mode event occurs, the model classifies the host. If it does not match the profile of an authorized system, the alert is escalated, providing higher confidence that the activity is malicious.
  answer_sources:
  - Windows System Event Log
  - Linux /var/log/syslog
  - Endpoint detection and response (EDR) agent logs
  - All endpoint and server hosts
  - Virtualization hosts
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      ON promiscuous_mode_event
      EXTRACT host_features
      CLASSIFY host using one-class_svm_model
      IF classification is 'unauthorized'
      THEN ESCALATE_ALERT
- question: Has an IDS/IPS signature for a passive discovery tool like p0f been triggered by an internal host?
  context: This question relies on signature-based detection to identify the use of passive reconnaissance tools. By deploying and monitoring IDS signatures specifically designed to detect the network traffic patterns of tools like p0f or Satori, we can generate a specific alert when a match occurs, indicating an adversary is attempting to fingerprint operating systems and services without sending active probes.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - IDS/IPS Alert Logs
  - Network egress points
  - Core network switches
  - Internet gateways
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      MONITOR IDS_alerts or Zeek_notices
      FOR signatures matching passive_discovery_tools (e.g., p0f)
      RETURN alert_details
- question: Is an internal host exhibiting a statistically high ratio of connection attempts (SYNs) to established connections (SYN-ACKs)?
  context: Passive scanning or fingerprinting can involve sending SYN packets without completing the TCP handshake. This question identifies such behavior by calculating the ratio of connection attempts to established connections for each host. A host with a ratio that is a significant outlier (e.g., 3 standard deviations above the baseline) may be performing a passive network scan.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - IDS/IPS Alert Logs
  - Network egress points
  - Core network switches
  - Internet gateways
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each internal_host
      CALCULATE ratio of SYN_packets_sent / SYN_ACK_packets_received
      IF ratio > 3_stddev_from_baseline
      THEN ALERT
- question: Is a time-series anomaly detection model flagging a sudden, uncharacteristic increase in the diversity of services (destination ports) contacted by a single host?
  context: This question uses a machine learning model to learn the normal behavior of each host in terms of the variety of services it contacts. A sudden, sharp increase in the number of unique destination ports contacted by a host within a short period is uncharacteristic and strongly indicates discovery activity, such as a port scan, which should be flagged as anomalous.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - IDS/IPS Alert Logs
  - Network egress points
  - Core network switches
  - Internet gateways
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each host
      MODEL time_series of unique_destination_ports_per_hour
      IF actual_diversity significantly exceeds predicted_diversity
      THEN ALERT
- question: Is a network utility like tcpdump being executed on an unauthorized host with a filter to capture Layer 2 discovery protocols like CDP or LLDP?
  context: Cisco Discovery Protocol (CDP) and Link Layer Discovery Protocol (LLDP) reveal information about network infrastructure. This question looks for the misuse of legitimate sniffing tools to capture this data. It triggers an alert if `tcpdump` or `tshark` is run with BPF filters for these protocols on any host that is not on a whitelist of network administration workstations.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - User workstations
  - Non-network-administrator servers
  - Critical application servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name IN (tcpdump, tshark)
      AND hostname NOT IN admin_whitelist
      AND command_line MATCHES ('ether proto 0x2000', 'ether proto 0x88cc')
- question: Has a host started using a capture filter for a statistically rare protocol, like CDP or LLDP, that it has never used before?
  context: This question identifies anomalous behavior by baselining the types of protocols each host typically captures via sniffing tools. If a host, particularly a non-admin workstation, suddenly starts capturing a protocol like CDP or LLDP for the first time, it is a statistical anomaly that suggests a user may be attempting to gather network infrastructure information.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - User workstations
  - Non-network-administrator servers
  - Critical application servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each host
      BASELINE protocols captured via sniffing_tool_arguments
      IF new_execution captures a statistically_rare_protocol (CDP, LLDP) for the first time
      THEN ALERT
- question: Does the command-line usage of a sniffing tool represent a new, small topic related to discovery protocols, as identified by a topic modeling algorithm?
  context: This question uses topic modeling (e.g., LDA) to categorize all sniffing tool commands into topics of normal usage, such as 'HTTP debugging'. A command that doesn't fit into existing topics, or forms a new, distinct topic around discovery protocols (CDP/LLDP), is considered anomalous and likely indicates a novel attempt at network discovery that should be investigated.
  answer_sources:
  - Windows Event ID 4688
  - Linux auditd logs
  - User workstations
  - Non-network-administrator servers
  - Critical application servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      APPLY topic modeling (LDA) to corpus of sniffing_tool_commands
      IDENTIFY established topics
      IF new_command is an outlier OR forms new 'discovery' topic
      THEN ALERT
- question: Is a host in a 'user workstation' IP range receiving network management protocol traffic like OSPF or EIGRP?
  context: Network infrastructure protocols like OSPF, EIGRP, HSRP, and VRRP should only be processed by routers and switches. This question creates a rule to alert when a workstation or server receives this type of traffic, as it implies the host is in promiscuous mode and listening to traffic not intended for it, likely to map the network topology.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Access layer switch SPAN/mirror ports
  - VLANs containing standard endpoints
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH network_logs
      WHERE destination_ip IN user_workstation_range
      AND protocol IN (OSPF, EIGRP, HSRP, VRRP)
      AND destination_ip NOT IN whitelist
- question: Is a workstation receiving a statistically anomalous volume of traffic from infrastructure protocol multicast groups?
  context: Workstations should receive virtually zero traffic from network infrastructure multicast groups. This question establishes a baseline for this traffic volume (which should be near zero) and alerts if any workstation's received volume exceeds a high percentile (e.g., 99th) for its peer group. This indicates it is likely listening to this traffic for discovery purposes.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Access layer switch SPAN/mirror ports
  - VLANs containing standard endpoints
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each workstation
      CALCULATE daily_volume of infrastructure_protocol_multicast_traffic
      IF volume > 99th_percentile_for_peer_group
      THEN ALERT
- question: Has a host, previously clustered as a 'workstation', migrated to a cluster with traffic characteristics of a 'network device'?
  context: This question uses a clustering algorithm to group hosts based on the types and volumes of broadcast/multicast traffic they receive. This should create distinct clusters for workstations, servers, and network devices. A host that suddenly changes its traffic profile and moves from the 'workstation' cluster to the 'network device' cluster is a strong anomaly, indicating it has started processing infrastructure traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Access layer switch SPAN/mirror ports
  - VLANs containing standard endpoints
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      CLUSTER hosts based on received_traffic_profile
      IF host migrates from 'workstation' cluster to 'network_device' cluster
      THEN ALERT
- question: Was a cloud traffic mirroring session created shortly before a large data transfer to an untrusted external IP or a newly created storage account?
  context: Adversaries in cloud environments can use built-in traffic mirroring for sniffing. This question correlates the creation of a traffic mirror session (e.g., via `CreateTrafficMirrorSession` in CloudTrail) with subsequent large data egress events. An alert is triggered if a large transfer to a non-corporate IP or new storage account occurs within an hour, indicating potential data exfiltration via sniffing.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - VPC Flow Logs
  - Cloud provider management consoles
  - Cloud storage services
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      ON cloud_audit_log for 'CreateTrafficMirrorSession'
      SEARCH network_flow_logs for 1_hour_after
      IF large_egress_to_untrusted_ip OR new_storage_account
      THEN ALERT
- question: Did the cloud environment's data egress volume statistically deviate from its forecasted baseline immediately after a traffic mirror was created?
  context: This question uses time-series analysis to model and forecast the normal volume of data egress from the cloud environment. It then checks for a statistically significant deviation from this forecast (e.g., > 3 standard deviations) that occurs immediately following a traffic mirror creation event. Such a spike is a strong indicator that the mirror was created to facilitate data exfiltration.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - VPC Flow Logs
  - Cloud provider management consoles
  - Cloud storage services
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      MODEL time_series of cloud_egress_volume
      ON traffic_mirror_creation_event
      IF actual_egress_volume > 3_stddev_from_forecast
      THEN ALERT
- question: Has a sequence of cloud API calls, including traffic mirror creation and data exfiltration steps, been identified as a malicious pattern by a trained classifier?
  context: This question uses a machine learning model trained to recognize sequences of malicious API calls. A pattern like creating a traffic mirror, creating a new public S3 bucket, and then transferring large amounts of data would be learned as a high-confidence malicious sequence. The model can flag these rare and suspicious chains of events that would be difficult to spot with simple rules.
  answer_sources:
  - AWS CloudTrail
  - Azure Activity Logs
  - GCP Audit Logs
  - Zeek conn.log
  - VPC Flow Logs
  - Cloud provider management consoles
  - Cloud storage services
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      TRAIN classifier on sequences of cloud_api_calls
      FOR each new sequence
      IF sequence MATCHES malicious_pattern (e.g., CreateMirror -> CreatePublicBucket -> PutObject)
      THEN ALERT