name: T1568.002: Domain Generation Algorithms
id: 09b6754c-12b7-4835-8160-b69512f458e2
description: This playbook helps answer the question: Is the adversary communicating with command and control infrastructure using Domain Generation Algorithms? It provides investigative questions to detect DGA activity by analyzing network and host data for various indicators. These indicators include matching traffic against threat intelligence, identifying domains with structural patterns or linguistic randomness characteristic of DGAs, examining suspicious metadata like domain age and TTL values, detecting storms of NXDOMAIN responses, and correlating suspicious network events with anomalous process activity on the host.
type: technique
related:
  - TA0011: Command And Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any DNS queries or outbound network connections matching known DGA domains or IP addresses from our threat intelligence feeds?
    context: This question aims to detect DGA activity by leveraging pre-existing threat intelligence. Matching network traffic against a curated list of known malicious indicators is a direct and high-fidelity method for identifying command and control communication channels used by malware. A positive match is a strong signal of a compromised host.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Enterprise DNS Resolvers
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log WHERE query IN watchlist:dga_domains OR SEARCH Zeek conn.log WHERE id.resp_h IN watchlist:dga_ips
  - question: How can we statistically score and prioritize alerts from different threat intelligence feeds based on their historical performance?
    context: Not all threat intelligence feeds are equal. This question focuses on improving alert fidelity by evaluating the effectiveness of each feed. By calculating hit rates and true/false positive ratios over a rolling 30-day window, we can create a weighted scoring model that assigns higher risk to alerts from more reliable sources, helping analysts focus on the most credible threats.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Enterprise DNS Resolvers
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Threat Intelligence Platforms
      - Analyst Feedback Data
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: FOR feed IN threat_intel_feeds: hits = COUNT(matches IN last 30d); true_positives = COUNT(alerts_marked_true_positive from feed IN last 30d); weight = calculate_score(hits, true_positives); APPLY weight to new alerts from feed
  - question: Can a machine learning model be used to automatically adjust the risk scoring of threat intelligence feeds based on their ongoing performance?
    context: This question explores automating the process of evaluating threat intelligence feed quality. A supervised learning model can analyze historical data, including analyst feedback on alerts, to dynamically re-classify the effectiveness of different feeds. This ensures the weighting system remains current and adaptive to changes in the threat landscape and feed quality.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Enterprise DNS Resolvers
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Threat Intelligence Platforms
      - Analyst Feedback Data
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL = train_logistic_regression(features=[hit_rate, analyst_feedback], labels=[feed_effectiveness]); PREDICT feed_effectiveness for all feeds; UPDATE scoring_model_weights
  - question: Are there any DNS queries for domains that structurally match the patterns of known DGA families?
    context: This question aims to identify DGA-generated domains by looking for specific structural characteristics, such as unusual length or character composition, that are hallmarks of certain malware families. Using regular expressions allows for the detection of these patterns even if the specific domain has not been seen before.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Internal host endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log WHERE query MATCHES REGEX '^[a-z0-9]{16,32}\\.(com|net|org)$'
  - question: Among domains that match known DGA structural patterns, which ones are statistically rare within the enterprise network?
    context: Many legitimate domains might accidentally match a broad structural pattern. This question seeks to reduce false positives by adding a layer of statistical analysis. By identifying which of the matching domains are also rarely queried within the organization over the last 90 days, analysts can prioritize those that are more likely to be malicious.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Internal host endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: matching_domains = SEARCH Zeek dns.log WHERE query MATCHES REGEX '...'; FOR domain in matching_domains: prevalence = COUNT(domain in last 90d); IF prevalence < 1st_percentile THEN ALERT
  - question: Can a machine learning model classify domains as DGA-generated based on features like length, digit ratio, and n-gram score?
    context: This question proposes a more flexible approach than rigid regular expressions. A machine learning classifier can learn the complex, multi-faceted characteristics of DGA-generated domains. This allows for the detection of new or slightly modified DGA variants that might evade simpler pattern-matching rules.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Internal host endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR domain IN new_dns_queries: features = extract_features(domain); prediction = dga_classifier_model.predict(features); IF prediction == 'DGA' THEN ALERT
  - question: Are there any DNS queries for domains with unusually high character entropy, excluding known-good domains?
    context: DGA-generated domains often appear random. This question uses Shannon entropy as a mathematical measure of that randomness. By calculating the entropy of a domain name and comparing it against a high-confidence threshold (e.g., > 4.2) while ignoring known-good, high-entropy domains like CDNs, we can effectively identify suspicious, algorithmically generated domains.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Internal host endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log WHERE domain NOT IN whitelist:high_entropy_domains AND shannon_entropy(domain) > 4.2
  - question: Are there new domains that exhibit both high character entropy and low n-gram frequency compared to a baseline of normal traffic?
    context: This question refines the entropy-based approach by adding another statistical measure: n-gram frequency. Legitimate language has predictable letter combinations (n-grams), whereas random strings do not. A domain that is both highly random (high entropy) and has very uncommon letter pairings (low n-gram frequency) is highly suspect.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Internal host endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR domain IN new_dns_queries: entropy = shannon_entropy(domain); ngram_freq = calculate_ngram_frequency(domain); IF entropy > 95th_percentile AND ngram_freq < 5th_percentile THEN ALERT
  - question: Can a pre-trained machine learning model provide a probability score indicating how likely a domain is to be DGA-generated?
    context: This question leverages a sophisticated, pre-trained model that combines multiple linguistic and structural features (entropy, length, n-gram score, etc.) into a single, actionable probability score. This approach is powerful for identifying DGA domains with high accuracy and provides a clear metric (> 0.85) for alert prioritization.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Internal host endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR domain IN new_dns_queries: features = extract_features(domain); score = dga_random_forest_model.predict_proba(features); IF score > 0.85 THEN ALERT
  - question: Are any queried domains newly registered (within the last 30 days) or configured with a very short DNS Time-To-Live (TTL) value?
    context: Adversaries using DGA often use newly registered domains and short TTLs to rapidly cycle through their C2 infrastructure and evade blocklists. This question checks for these metadata indicators. A new domain or a very low TTL (< 300s) can be a sign of disposable, malicious infrastructure.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - External WHOIS Data
      - Enterprise DNS Resolvers
      - Network Egress Points
      - Passive DNS and WHOIS databases
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR domain IN resolved_dns_queries: whois_data = get_whois(domain); IF whois_data.creation_date < 30_days_ago OR domain.ttl < 300 THEN ALERT
  - question: Are any newly registered or low-TTL domains also exceptionally rare, being queried by only a small fraction of hosts in the network?
    context: This question enhances the previous one by adding a prevalence check. A domain that is not only newly registered but also queried by very few hosts (e.g., less than 0.1% of hosts over 24 hours) is much more suspicious than a new domain being accessed by many. Combining these statistical flags creates a higher-confidence signal for targeted attacks.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - External WHOIS Data
      - Enterprise DNS Resolvers
      - Network Egress Points
      - Passive DNS and WHOIS databases
    range: last 24 hours
    queries:
      - technology: Pseudocode
        query: FOR domain IN resolved_dns_queries: prevalence = COUNT(unique source_ips for domain in last 24h); IF (domain.is_new OR domain.low_ttl) AND prevalence < 1st_percentile THEN ALERT
  - question: Is there an anomalous spike in the number of queries to newly registered domains across the enterprise?
    context: This question looks for campaign-level activity rather than single indicators. A sudden, unexpected increase in queries to newly registered domains can indicate the start of a new malware campaign that relies on DGA. Time-series anomaly detection can automatically flag these deviations from the established baseline.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - External WHOIS Data
      - Enterprise DNS Resolvers
      - Network Egress Points
      - Passive DNS and WHOIS databases
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: METRIC = count(queries to new_domains) per hour; DETECT anomalies in METRIC time-series; IF anomaly_detected THEN ALERT
  - question: Is any single host generating a high number of DNS queries for non-existent domains (NXDOMAIN responses) in a short time frame?
    context: Some DGA malware rapidly tries a list of potential C2 domains until it finds one that resolves. This behavior results in a "storm" of failed DNS lookups. This question aims to detect this activity by counting unique NXDOMAIN responses from a single host within a 5-minute window, which is a strong indicator of a DGA-infected machine.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Endpoint Devices
    range: last 5 minutes
    queries:
      - technology: Pseudocode
        query: FOR each source_ip: count = COUNT(unique queries with NXDOMAIN response in last 5min); IF count > 50 THEN ALERT
  - question: Is any host exhibiting a statistically significant increase in its rate of NXDOMAIN responses compared to its own baseline, and are the failed domains random-looking?
    context: A static threshold for NXDOMAINs might not work for all hosts. This question creates a more robust detection by baselining each host's normal NXDOMAIN rate over 14 days. An alert is triggered only when a host deviates from its own normal behavior by more than 3 standard deviations. Adding an entropy check on the failed domains helps confirm they are algorithmically generated.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Endpoint Devices
    range: last 14 days
    queries:
      - technology: Pseudocode
        query: FOR each source_ip: baseline = calculate_nxdomain_baseline(last 14d); current_count = count_nxdomains(last 5min); IF current_count > 3_std_dev(baseline) THEN check_entropy(failed_domains); ALERT
  - question: Can a time-series forecasting model predict a host's expected NXDOMAIN rate and flag any significant, unpredicted spikes?
    context: This question applies an advanced time-series model (like SARIMA) to forecast the expected number of NXDOMAINs for each host. This method can account for seasonality and trends in a host's behavior. When the actual count falls far outside the model's 95% prediction interval, it signals a highly anomalous event worthy of investigation.
    answer_sources:
      - Zeek dns.log
      - Enterprise DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_ip: model = train_sarima_model(nxdomain_history); prediction_interval = model.predict_next_5min(); IF current_count outside prediction_interval THEN ALERT
  - question: When DGA-like network activity is detected from a host, is there a corresponding anomalous process execution on that same host around the same time?
    context: This question provides crucial context by correlating suspicious network activity with suspicious host activity. Finding an unsigned process or one running from an unusual location that executes within +/- 60 seconds of a DGA alert strongly suggests that this process is the source of the malicious traffic, helping to pinpoint the malware.
    answer_sources:
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoint Devices
      - Domain Controllers
      - Application Servers
      - Enterprise DNS Resolvers
    range: +/- 60 seconds from event
    queries:
      - technology: Pseudocode
        query: ON dga_network_alert(host, time): SEARCH process_logs WHERE host=host AND time BETWEEN time-60s AND time+60s AND (process.is_unsigned OR process.path is non-standard)
  - question: When DGA-like network activity is detected, is it correlated with a statistically rare parent-child process relationship on the source host?
    context: Malware often uses legitimate processes to launch malicious children (e.g., Microsoft Word spawning PowerShell). This question aims to detect this by baselining normal process relationships in the environment. Correlating a DGA network alert with a rare parent-child process creation event provides high-confidence evidence of a compromise.
    answer_sources:
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoint Devices
      - Domain Controllers
      - Application Servers
      - Enterprise DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ON dga_network_alert(host, time): SEARCH process_logs WHERE host=host AND time NEAR time AND process.parent_child_relationship is rare
  - question: Can we create a composite risk score by combining machine learning-based anomaly scores for host processes with network-based DGA detection scores?
    context: This question describes a sophisticated fusion of host and network analytics. By using unsupervised ML to score the "strangeness" of a process and combining that with a score for how "DGA-like" the network traffic is, analysts get a single, powerful composite risk score. This helps to automatically surface the most critical events that show strong evidence of compromise on both the host and network.
    answer_sources:
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoint Devices
      - Domain Controllers
      - Application Servers
      - Enterprise DNS Resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: host_score = isolation_forest_model.predict(process_features); network_score = dga_model.predict(dns_features); composite_score = combine(host_score, network_score); IF composite_score > threshold THEN ALERT