name: T1212: Exploitation for Credential Access
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary has exploited a software vulnerability to access or forge credentials. It provides investigative steps to detect specific exploit patterns in network traffic (e.g., Zerologon, PetitPotam), signs of Kerberoasting (RC4-HMAC tickets, SPN enumeration), evidence of on-host credential dumping (lsass.exe crashes), exploitation of web servers leading to internal access, and authentication replay attacks identified through nonce reuse or other sequence anomalies.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
- none
questions:
- question: Is there network activity indicative of specific credential access exploits like Zerologon or PetitPotam?
  context: This question looks for high-fidelity signatures of known exploits. Zerologon (CVE-2020-1472) is identified by an all-zero challenge/credential in a Netlogon authentication attempt. PetitPotam (CVE-2021-36942) is identified by specific EFSRPC API calls like 'EfsRpcOpenFileRaw' targeting a Domain Controller. Detecting these patterns provides strong evidence of an active exploitation attempt.
  answer_sources:
  - Zeek conn.log
  - Zeek dce_rpc.log
  - Zeek ntlm.log
  - Domain Controllers
  - Network segments containing authentication servers
  - Network choke points
  range: last 90 days
  queries:
  - "SEARCH network_logs WHERE (protocol == 'netlogon' AND client_challenge == 0 AND client_credential == 0) OR (protocol == 'dce_rpc' AND endpoint == 'efsrpc' AND operation == 'EfsRpcOpenFileRaw' AND destination_is_dc == true)"
- question: Is any host making an unusually high number of rare but sensitive RPC calls to authentication servers?
  context: Adversaries may abuse legitimate but infrequently used RPC calls for reconnaissance or exploitation. By establishing a historical baseline of normal RPC call frequency, this question helps identify outlier activity where a host exceeds the 99th percentile for a specific sensitive operation, indicating potential abuse.
  answer_sources:
  - Zeek conn.log
  - Zeek dce_rpc.log
  - Zeek ntlm.log
  - Domain Controllers
  - Network segments containing authentication servers
  - Network choke points
  range: last 90 days
  queries:
  - "AGGREGATE dce_rpc_logs by source_host, operation | CALCULATE frequency | COMPARE current_frequency to historical_baseline_99th_percentile | ALERT if exceeds"
- question: Can live RPC sessions targeting Domain Controllers be automatically classified as benign or malicious based on their characteristics?
  context: Simple rules may miss nuanced attacks. A machine learning model can learn the subtle, complex patterns of malicious RPC activity, such as the specific sequence of operations, inter-request timings, and payload sizes. This allows for the detection of novel or evasive attacks that signature-based methods might miss.
  answer_sources:
  - Zeek conn.log
  - Zeek dce_rpc.log
  - Zeek ntlm.log
  - Domain Controllers
  - Network segments containing authentication servers
  - Network choke points
  range: last 90 days
  queries:
  - "EXTRACT features from rpc_session (operation_sequence, timings, payload_size) | INPUT features into trained_classifier_model | ALERT on 'malicious' classification"
- question: Has a Kerberos ticket with weak RC4-HMAC encryption been requested for a user or service account and subsequently used for a successful logon?
  context: This is a key indicator of a Kerberoasting attack. An adversary requests a service ticket (TGS-REQ) for an account configured with weak encryption (RC4-HMAC), cracks the ticket offline to get the account's password, and then uses that password to log in. This query correlates the initial weak ticket request (Event ID 4769) with a later successful logon (Event ID 4624).
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Windows Event ID 4624
  - Domain Controllers
  - Member Servers hosting critical services
  - Kerberos Key Distribution Center (KDC)
  range: last 90 days
  queries:
  - "SEARCH event_id=4769 AND encryption_type='0x17' AND service_name NOT LIKE '%$' | CORRELATE with event_id=4624 from same source_ip | ALERT on match"
- question: Is any single host requesting an abnormally high number of unique Kerberos service tickets (SPNs) in a short period?
  context: Before a Kerberoasting attack, an adversary often performs reconnaissance to find accounts vulnerable to roasting. This involves enumerating a large number of Service Principal Names (SPNs). A sudden spike in the number of unique SPN requests from a single host is a strong indicator of this enumeration activity.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Windows Event ID 4624
  - Domain Controllers
  - Member Servers hosting critical services
  - Kerberos Key Distribution Center (KDC)
  range: last 90 days
  queries:
  - "AGGREGATE event_id=4769 by source_host over 10min_window | COUNT unique service_names | COMPARE count to historical_baseline_99.5th_percentile | ALERT if exceeds"
- question: Is there an anomalous burst in the volume of Kerberos ticket requests (Event ID 4769) from any host, compared to its own historical baseline?
  context: This question uses time-series analysis to detect sudden changes in the rate of ticket requests from a specific host. Even if the number of unique SPNs is not high, a sudden burst of requests can indicate automated activity consistent with enumeration or other Kerberos-based attacks.
  answer_sources:
  - Windows Event ID 4769
  - Zeek kerberos.log
  - Windows Event ID 4624
  - Domain Controllers
  - Member Servers hosting critical services
  - Kerberos Key Distribution Center (KDC)
  range: last 90 days
  queries:
  - "AGGREGATE event_id=4769 by host, 5min_intervals | INPUT into time_series_model | ALERT if observed_volume exceeds predicted_forecast"
- question: Has the Local Security Authority Subsystem Service (lsass.exe) process crashed unexpectedly?
  context: The lsass.exe process manages credentials and is a primary target for credential dumping tools like Mimikatz. An unexpected crash of this process, logged as Event ID 1000, is a high-fidelity indicator of a failed or unstable credential dumping attempt and requires immediate investigation.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 4688
  - Domain Controllers
  - Credential stores
  - Critical application servers
  range: last 90 days
  queries:
  - "SEARCH event_id=1000 AND faulting_app_name='lsass.exe' | CREATE critical_alert"
- question: Was the lsass.exe process created by any process other than its legitimate parent, wininit.exe?
  context: During a normal Windows boot sequence, wininit.exe is the sole parent of lsass.exe. The appearance of any other parent process is a definitive sign of malicious activity, such as process injection or a masquerading process attempting to gain credential access.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 4688
  - Domain Controllers
  - Credential stores
  - Critical application servers
  range: last 90 days
  queries:
  - "SEARCH event_id=4688 AND new_process_name='lsass.exe' AND parent_process_name != 'wininit.exe' | ALERT on any result"
- question: Is the lsass.exe process exhibiting anomalous behavior in terms of resource consumption or its process relationships?
  context: Even if an attack on lsass.exe doesn't cause a crash, it can create subtle behavioral deviations in CPU usage, memory consumption, or handle counts. An unsupervised machine learning model can detect these outliers, flagging behavior that doesn't fit the normal operational profile of the process.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 4688
  - Domain Controllers
  - Credential stores
  - Critical application servers
  range: last 90 days
  queries:
  - "EXTRACT features from lsass.exe (cpu, memory, handles, child_processes) | INPUT into clustering_model (DBSCAN) | ALERT on points classified as noise/outliers"
- question: Has a web server process spawned a command-line interpreter or other common post-exploitation tool?
  context: A web server's primary function is to serve content, not execute system commands. A web server process (e.g., w3wp.exe, tomcat.exe) spawning a shell (e.g., cmd.exe, powershell.exe) or a reconnaissance tool (e.g., whoami.exe) is a classic indicator of a successful remote code execution exploit or a web shell.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Internet-facing web servers
  - Application servers
  - Internal network segments
  range: last 90 days
  queries:
  - "SEARCH event_id=4688 AND parent_process IN ('w3wp.exe', 'tomcat.exe') AND child_process IN ('cmd.exe', 'powershell.exe', 'whoami.exe') | ALERT on any result"
- question: Has a web server process spawned a child process that is historically rare or has never been seen before?
  context: Instead of relying on a static list of malicious process names, this analytic approach baselines all normal child processes for a given web server. It can then detect when an attacker uses a novel or unusual tool not on a predefined list by flagging any child process with a high rarity score.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Internet-facing web servers
  - Application servers
  - Internal network segments
  range: last 90 days
  queries:
  - "BUILD historical frequency of child_processes for each web_server_parent | CALCULATE rarity_score for new_child_process | ALERT if rarity_score > threshold"
- question: Is there a statistically improbable chain of events, such as a web server process leading to a shell that then communicates with a Domain Controller?
  context: Graph-based analysis models the complex relationships between processes and network connections. This allows for the detection of an entire anomalous attack path (e.g., web server -> shell -> internal LDAP query) that would be difficult to spot by looking at each event in isolation.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Internet-facing web servers
  - Application servers
  - Internal network segments
  range: last 90 days
  queries:
  - "CONSTRUCT process_network_graph | INPUT into graph_anomaly_model | ALERT on improbable paths like ('w3wp.exe' -> 'cmd.exe' -> 'DC_IP:389')"
- question: Has the same NTLM nonce value been reused in multiple authentication attempts within a short time frame?
  context: A "nonce" (number used once) is a critical component in NTLM authentication that prevents replay attacks. If the same nonce is observed in multiple authentication messages from different sources, it is a strong indicator that an attacker has captured and is replaying authentication traffic.
  answer_sources:
  - Zeek ntlm.log
  - Zeek kerberos.log
  - Windows Event ID 4625
  - Authentication servers
  - Legacy application servers
  - Network traffic ingress/egress points
  range: last 90 days
  queries:
  - "AGGREGATE ntlm_logs by 'nonce' over 5min_window | COUNT distinct source_ips or destination_servers | ALERT if count > 1"
- question: Is any host sending authentication requests at a machine-like speed, much faster than a human user could?
  context: Automated tools used for replay attacks often send authentication packets in rapid succession. By analyzing the inter-arrival time (the delta between consecutive requests) and comparing it to a baseline, this query can spot the unnaturally fast, machine-gun-like behavior of an automated attack.
  answer_sources:
  - Zeek ntlm.log
  - Zeek kerberos.log
  - Windows Event ID 4625
  - Authentication servers
  - Legacy application servers
  - Network traffic ingress/egress points
  range: last 90 days
  queries:
  - "CALCULATE time_delta between consecutive auth_requests per source_ip | COMPARE delta to historical_baseline_1st_percentile | ALERT if delta is abnormally small"
- question: Does a user's sequence of authentication events deviate from their established normal pattern?
  context: A sequence-based autoencoder (a type of machine learning model) can learn a user's typical sequence of authentication activities. A replay attack, which inserts a previously seen authentication event out of its normal temporal context, will disrupt this learned pattern and cause a high "reconstruction error," flagging the sequence as anomalous.
  answer_sources:
  - Zeek ntlm.log
  - Zeek kerberos.log
  - Windows Event ID 4625
  - Authentication servers
  - Legacy application servers
  - Network traffic ingress/egress points
  range: last 90 days
  queries:
  - "INPUT stream of user_auth_events into sequence_autoencoder_model | CALCULATE reconstruction_error | ALERT if error > threshold"