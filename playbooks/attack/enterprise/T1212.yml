name: T1212: Exploitation for Credential Access
id: c1b9a2a0-8e1f-4a8e-8f2c-5a6d7b3e4f1a
description: >-
  This playbook helps investigate whether an adversary has exploited a software
  vulnerability to access or forge credentials on the network. It focuses on
  detecting evidence of known exploits against authentication protocols (e.g.,
  Zerologon, PetitPotam), credential harvesting techniques like Kerberoasting,
  instability in the Local Security Authority Subsystem Service (lsass.exe)
  caused by credential dumping tools, web shells spawning command-line
  interpreters for internal reconnaissance, and authentication replay attacks
  identified by reused nonces or abnormal request timing.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: >-
      Is there network traffic indicative of specific credential access exploits
      like Zerologon or PetitPotam?
    context: >-
      This question looks for specific, high-fidelity signatures of known
      exploits. Zerologon (CVE-2020-1472) is identified by an all-null
      challenge/credential in a Netlogon authentication attempt, while
      PetitPotam (CVE-2021-36942) can be identified by EfsRpcOpenFileRaw API
      calls targeting a Domain Controller. Detecting these patterns provides
      strong evidence of an active compromise attempt against critical domain
      infrastructure.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dce_rpc.log"
      - "Zeek ntlm.log"
      - "Named Analytic Information: Domain Controllers, Network segments containing authentication servers, Network choke points"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH network logs (Zeek ntlm.log, dce_rpc.log) FOR Netlogon attempts
          WHERE ClientChallenge and ClientCredential are all null bytes, OR FOR
          DCE/RPC calls to endpoint 'EfsRpcOpenFileRaw' targeting a Domain
          Controller.
  - question: >-
      Are there any hosts making an anomalous number of sensitive RPC calls to
      authentication servers?
    context: >-
      Adversaries may use legitimate RPC calls for enumeration or to probe for
      vulnerabilities. While a single rare call might be legitimate, a sudden
      spike in the frequency of these calls from one source can indicate abuse.
      This question aims to identify such statistical deviations from normal
      behavior by baselining call frequencies and alerting on significant
      increases.
    answer_sources:
      - "Zeek dce_rpc.log"
      - "Named Analytic Information: Domain Controllers, Network segments containing authentication servers, Network choke points"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CALCULATE historical hourly baseline frequency for sensitive RPC calls
          per source host. ALERT if current hourly frequency for a host exceeds
          the 99th percentile of its historical baseline.
  - question: >-
      Can we classify RPC sessions targeting Domain Controllers as malicious
      using machine learning?
    context: >-
      This question proposes a proactive, behavioral approach to detection. By
      training a classification model on features like the sequence of RPC
      operations, inter-request timings, and payload sizes, it may be possible
      to identify novel or obfuscated exploit attempts that do not match known
      signatures.
    answer_sources:
      - "Network capture data (PCAP)"
      - "Zeek dce_rpc.log"
      - "Named Analytic Information: Domain Controllers, Network segments containing authentication servers, Network choke points"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          EXTRACT feature vectors from live RPC sessions. APPLY pre-trained
          Random Forest model to classify session as 'benign' or 'malicious'.
          ALERT on 'malicious' classification.
  - question: >-
      Has a Kerberos ticket with weak RC4-HMAC encryption been requested and
      subsequently used for a successful logon, suggesting a Kerberoasting
      attack?
    context: >-
      Kerberoasting is an attack where an adversary requests service tickets
      (TGS) for user accounts and attempts to crack them offline to steal the
      account's password hash. Requesting a ticket with the weak RC4-HMAC
      cipher makes cracking easier. Correlating such a request (Event ID 4769)
      with a subsequent successful logon (Event ID 4624) from the same source
      is a strong indicator of a successful Kerberoasting attack.
    answer_sources:
      - "Windows Event ID 4769"
      - "Windows Event ID 4624"
      - "Zeek kerberos.log"
      - "Named Analytic Information: Domain Controllers, Member Servers hosting critical services, Kerberos Key Distribution Center (KDC)"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH for Event ID 4769 WHERE Ticket_Encryption_Type is '0x17' AND
          Service_Name does not end with '$'. CORRELATE with a successful Event
          ID 4624 from the same Source_IP within a short time window.
  - question: >-
      Is any single host requesting an unusually high number of unique Kerberos
      service tickets in a short period?
    context: >-
      A precursor to a Kerberoasting attack is often the enumeration of Service
      Principal Names (SPNs) to identify potential target accounts. A single
      host rapidly requesting tickets for many distinct services is highly
      anomalous and indicative of this enumeration phase.
    answer_sources:
      - "Windows Event ID 4769"
      - "Named Analytic Information: Domain Controllers, Member Servers hosting critical services, Kerberos Key Distribution Center (KDC)"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each Source_Host, COUNT unique Service_Names from Event ID 4769
          over a 10-minute window. ALERT if count exceeds the 99.5th percentile
          of the network-wide baseline.
  - question: >-
      Is the volume of Kerberos ticket requests from any host deviating
      significantly from its historical time-series forecast?
    context: >-
      This question uses time-series analysis to model the normal rhythm of
      Kerberos ticket requests for each host. A sudden, unexpected burst of
      requests that significantly deviates from the model's forecast can
      indicate an automated process, such as an adversary beginning an
      enumeration or Kerberoasting attack.
    answer_sources:
      - "Windows Event ID 4769"
      - "Named Analytic Information: Domain Controllers, Member Servers hosting critical services, Kerberos Key Distribution Center (KDC)"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          APPLY a trained time-series model (e.g., ARIMA) to the 5-minute event
          count of Event ID 4769 for each host. ALERT if the observed volume
          significantly exceeds the forecasted range.
  - question: Has the LSASS process (lsass.exe) crashed unexpectedly?
    context: >-
      The lsass.exe process is critical for Windows security, managing
      credentials and authentication. An unexpected crash (logged as Event ID
      1000) is a major red flag, often caused by credential dumping tools like
      Mimikatz that inject into LSASS memory. Any such crash requires immediate,
      critical investigation.
    answer_sources:
      - "Windows Event ID 1000"
      - "Named Analytic Information: Domain Controllers, Credential stores, Critical application servers"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CREATE real-time alert for Windows Event ID 1000 WHERE
          'Faulting application name' is 'lsass.exe'.
  - question: >-
      Was the LSASS process (lsass.exe) spawned by any process other than the
      legitimate 'wininit.exe'?
    context: >-
      During a normal system startup, lsass.exe is started by wininit.exe. If
      any other process is recorded as the parent of lsass.exe (in process creation
      logs like Event ID 4688), it is a very high-fidelity indicator of a
      compromise, such as an adversary attempting to start a rogue version of
      LSASS.
    answer_sources:
      - "Windows Event ID 4688"
      - "Named Analytic Information: Domain Controllers, Credential stores, Critical application servers"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process creation logs (Event ID 4688) WHERE 'New Process Name'
          is 'lsass.exe' AND 'Parent Process Name' is not 'wininit.exe'.
  - question: >-
      Is the lsass.exe process exhibiting anomalous behavior in terms of
      resource consumption or process creation?
    context: >-
      An exploit or credential dumping attempt may cause lsass.exe to behave
      abnormally (e.g., high CPU/memory usage, unusual handle counts) before it
      crashes or succeeds. By using unsupervised machine learning to cluster
      normal LSASS behavior, any outliers in these performance metrics can be
      flagged as suspicious activity requiring investigation.
    answer_sources:
      - "System Performance Counters"
      - "Windows Event ID 4688"
      - "Named Analytic Information: Domain Controllers, Credential stores, Critical application servers"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          APPLY a clustering algorithm (e.g., DBSCAN) to a feature set of LSASS
          behavior (CPU, memory, handle count). Flag any data points classified
          as noise or outliers as anomalous.
  - question: >-
      Has a web server process spawned a command shell or a common
      post-exploitation tool?
    context: >-
      This is a classic sign of a web shell or successful remote code execution
      exploit. A web server process (e.g., w3wp.exe, tomcat.exe) has no
      legitimate reason to spawn an interactive shell (cmd.exe, powershell.exe)
      or reconnaissance tools (whoami.exe, nltest.exe). This behavior is a
      high-fidelity indicator of compromise.
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Named Analytic Information: Internet-facing web servers, Application servers, Internal network segments"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process creation logs (Event ID 4688) WHERE 'Parent Process
          Name' is a web server process AND 'New Process Name' is a shell or
          known post-exploitation tool.
  - question: >-
      Has a web server process spawned a rare or never-before-seen child
      process?
    context: >-
      Beyond common shells, adversaries may use custom or less-common tools
      after exploiting a web server. By baselining all legitimate child
      processes for a given web server application, you can use statistical
      rarity to detect when a new or unusual process is spawned, which could
      indicate post-exploitation activity.
    answer_sources:
      - "Windows Event ID 4688"
      - "Named Analytic Information: Internet-facing web servers, Application servers, Internal network segments"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          BUILD historical frequency distribution of child processes for each
          web server process. ALERT when a child process is spawned that has a
          rarity score in the top 1%.
  - question: >-
      Is there an anomalous chain of events involving a web server process
      leading to internal network connections, as identified by a graph-based
      model?
    context: >-
      This question aims to detect the entire attack chain, from initial exploit
      to internal movement. A graph-based model can learn the normal
      relationships between processes and network destinations. An improbable
      path, such as a web server process spawning a shell that then connects to
      a Domain Controller, would be flagged by the model as a significant
      anomaly.
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Named Analytic Information: Internet-facing web servers, Application servers, Internal network segments"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          APPLY graph-based anomaly detection model to process and network logs.
          ALERT on statistically improbable paths originating from a web server
          process, e.g., 'w3wp.exe -> cmd.exe -> [DC_IP]:389'.
  - question: >-
      Has the same NTLM nonce been reused across multiple authentication
      attempts, indicating a potential replay attack?
    context: >-
      A nonce ("number used once") is a critical component in preventing replay
      attacks in authentication protocols like NTLM. If the same nonce value is
      observed in multiple authentication messages within a short time frame, it
      strongly indicates that an attacker has captured and is replaying valid
      authentication traffic to gain unauthorized access.
    answer_sources:
      - "Zeek ntlm.log"
      - "Named Analytic Information: Authentication servers, Legacy application servers, Network traffic ingress/egress points"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH Zeek ntlm.log for events where the same 'nonce' value is used in
          multiple NTLM_AUTHENTICATE messages within a 5-minute window.
  - question: >-
      Is any host sending authentication requests at a machine-like speed, far
      faster than a human could?
    context: >-
      Automated attack tools can send network requests much faster than a human
      user. By measuring the inter-arrival time (the delta) between consecutive
      authentication requests from a single source, it's possible to spot this
      machine-speed activity. A burst of requests with near-zero time between
      them is highly indicative of an automated tool.
    answer_sources:
      - "Zeek ntlm.log"
      - "Zeek kerberos.log"
      - "Windows Event ID 4625"
      - "Named Analytic Information: Authentication servers, Legacy application servers, Network traffic ingress/egress points"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each source IP, calculate the time delta between consecutive
          authentication requests. ALERT if the delta is in the bottom 1st
          percentile of the established baseline (i.e., extremely fast).
  - question: >-
      Does a user's stream of authentication events deviate from their
      historically normal sequence, as detected by an autoencoder?
    context: >-
      This advanced technique models the normal sequence of a user's
      authentication activities (e.g., protocols used, source/destination IPs,
      timing). A sequence-based autoencoder can learn this pattern. A replayed
      packet, inserted out of its original temporal context, will not fit the
      learned sequence and will cause a high "reconstruction error" from the
      model, flagging the event as a likely replay attack.
    answer_sources:
      - "Zeek ntlm.log"
      - "Zeek kerberos.log"
      - "Windows Event ID 4625"
      - "Named Analytic Information: Authentication servers, Legacy application servers, Network traffic ingress/egress points"
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: >-
          APPLY trained LSTM autoencoder to a user's stream of authentication
          events. ALERT if the model's reconstruction error for the sequence is
          anomalously high.