name: T1587: Develop Capabilities
id: f8a1b2c3-d4e5-4f6a-7b8c-9d0e1f2a3b4c
description: This playbook focuses on detecting capabilities newly developed by an adversary. This involves identifying signs of custom malware or tools through various means, such as matching file hashes against threat intelligence, spotting rare executables, analyzing anomalous TLS client fingerprints (JA3/JA3S), detecting suspicious sequences of process behavior, identifying network beaconing or data staging, and flagging unusual TLS server certificates. The primary goal is to uncover adversary tools that may not be caught by traditional signature-based defenses.
type: technique
related:
  - TA0042: Resource Development
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any processes or files being created or transferred that match known-malicious hashes from our threat intelligence feeds?
    context: This question aims to identify the simplest and most direct evidence of a known malicious capability. By continuously comparing file and process hashes against a curated threat intelligence feed specializing in new malware, we can quickly detect the presence of recognized adversary tools or malware strains as soon as they appear in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Zeek files.log
      - Zeek conn.log
      - Endpoint devices, Network egress points, Threat intelligence platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN (process_creation_events, file_transfer_events) ON file_hash WHERE file_hash IN threat_intelligence_feed; ALERT ON match;
  - question: Are there any newly observed executables running with very low prevalence across the organization?
    context: This question helps uncover potentially unknown or custom-developed malware that wouldn't be caught by signature-based detection. Adversary tools are often not widespread. By identifying executables running on a very small number of hosts and excluding known legitimate software, we can focus investigative efforts on high-probability suspicious files.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Zeek files.log
      - Zeek conn.log
      - Endpoint devices, Network egress points, Threat intelligence platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: GROUP executables by file_hash; COUNT unique hosts; FILTER prevalence < threshold AND hash NOT IN (known_good_software_inventory);
  - question: Can we use machine learning to classify newly observed, low-prevalence executables as malicious based on their intrinsic properties and execution context?
    context: This question seeks to automate the analysis of rare executables identified by the statistical approach. A machine learning model can analyze numerous features of a file (like its structure, entropy, and embedded strings) and how it was executed to predict if it's malicious, providing a scalable way to triage suspicious binaries without manual reverse engineering for every single one.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Zeek files.log
      - Zeek conn.log
      - Endpoint devices, Network egress points, Threat intelligence platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_low_prevalence_executable: EXTRACT (file_metadata, execution_context); PREDICT maliciousness using classification_model;
  - question: Are we observing any TLS connections using client fingerprints (JA3/JA3S) that are known to be associated with malware or adversary tools?
    context: This question focuses on detecting known-bad TLS clients. Many malware families use specific cryptographic libraries that produce a unique and identifiable JA3 or JA3S hash. Matching these hashes against a watchlist provides a high-confidence indicator of a specific malicious tool communicating over an encrypted channel.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, Internal network segments, TLS inspection points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH tls_logs WHERE ja3_hash IN malware_ja3_watchlist; ALERT ON match;
  - question: Are there any TLS connections being made with client fingerprints (JA3/JA3S) that are statistically rare in our environment, especially to suspicious destinations?
    context: This question helps find unknown or custom tools that don't have a known-bad JA3 hash. A TLS client fingerprint that is very uncommon in the network suggests the use of a non-standard application. The risk is amplified if this rare client is also communicating with a newly registered domain or a low-reputation IP address, pointing towards potential C2 activity.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, Internal network segments, TLS inspection points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE frequency of all ja3_hashes over 30 days; IDENTIFY hashes below frequency_threshold; CORRELATE with (newly_registered_domains, low_reputation_ips);
  - question: Can we use machine learning to identify anomalous clusters of TLS client behavior that deviate from normal application traffic?
    context: This question aims to discover novel malicious TLS clients by grouping all client sessions based on their characteristics. Legitimate applications (like browsers) will form large, dense clusters of similar behavior. A clustering algorithm can automatically isolate small, sparse clusters or outlier points, which represent unusual client activity that warrants further investigation as potentially malicious.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points, Internal network segments, TLS inspection points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER tls_sessions on (ja3_hash, destination_port, sni, duration, bytes); ANALYZE outlier_clusters for malicious activity;
  - question: Has any single process rapidly performed a sequence of suspicious actions, such as creating a file, establishing persistence, and making an external network connection?
    context: This question looks for a classic malware execution chain. A single process performing these specific actions in a short period is a very strong indicator of malicious intent. This rule-based approach provides a high-fidelity alert for a common attack pattern, such as a dropper installing itself and then calling home.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 7045
      - Zeek conn.log
      - Endpoint devices (workstations and servers), Domain Controllers, Active Directory
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CORRELATE by process_guid within 60s: (file_create_event, registry_persistence_event, outbound_network_connection); ALERT ON sequence completion;
  - question: Are we observing statistically rare parent-child process relationships, and what actions do those child processes subsequently take?
    context: This question helps detect process execution anomalies. Certain processes should not be spawning other processes (e.g., a core service spawning a command shell). By baselining normal parent-child relationships, we can flag rare and unexpected instances. The risk score of such an event can be increased by analyzing the child process's subsequent behavior to see if it engages in other suspicious activities.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 7045
      - Zeek conn.log
      - Endpoint devices (workstations and servers), Domain Controllers, Active Directory
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE frequency of parent-child_process pairs; FLAG rare pairs; ANALYZE subsequent child_process actions to increase risk_score;
  - question: Can we use a machine learning model to detect anomalous sequences of host events that deviate from learned benign behavior?
    context: This question seeks to generalize the detection of malicious behavior sequences beyond a single, hardcoded rule. By training a model (like an HMM or RNN) on vast amounts of normal system activity, it can learn the 'grammar' of benign operations. When a new sequence of events occurs that has a very low probability according to the model, it can be flagged as anomalous, allowing for the detection of novel attack patterns.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 7045
      - Zeek conn.log
      - Endpoint devices (workstations and servers), Domain Controllers, Active Directory
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_event_sequence on a host: CALCULATE likelihood_score using trained_sequence_model; FLAG sequences with scores below threshold;
  - question: Is any internal host communicating with a domain that was registered very recently?
    context: This question aims to detect connections to potential command and control (C2) infrastructure. Adversaries frequently use newly registered domains (NRDs) for their operations. Alerting on connections to domains registered within the last few days provides an early warning of potential compromise, as these domains have no established history or reputation.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS servers (recursive resolvers), Network egress points, Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN dns_logs with newly_registered_domain_feed; ALERT on connection to domain registered < 72 hours ago AND NOT IN allow_list;
  - question: Are we observing any network traffic exhibiting highly regular beaconing behavior or unusually large data uploads to external destinations?
    context: This question focuses on identifying two key C2 communication patterns. Beaconing (connections at a fixed, regular interval) is used for keepalives and command delivery. Large, sustained uploads can indicate data exfiltration or staging. By statistically analyzing the timing and volume of connections, we can detect these covert channels, especially when they are directed to new or low-reputation destinations.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS servers (recursive resolvers), Network egress points, Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE stdev of time_delta between connections to find beaconing; CALCULATE upload/download ratio and volume to find staging;
  - question: Can a time-series model detect anomalous spikes in a host's outbound data volume that might indicate data staging or exfiltration?
    context: This question applies forecasting to network traffic analysis. A time-series model can learn the normal 'rhythm' of a host's daily and weekly outbound traffic. When the actual traffic volume significantly exceeds the model's prediction, it generates an anomaly alert. This is particularly effective for detecting large data transfers that are out of character for a specific host or user.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS servers (recursive resolvers), Network egress points, Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FORECAST expected outbound_data_volume for each host; ALERT when observed_volume significantly exceeds prediction_confidence_interval;
  - question: Are any outbound TLS connections using self-signed certificates where the destination is not an explicitly allowed service?
    context: This question targets a common tactic for setting up quick and free C2 infrastructure. While some legitimate internal and vendor services use self-signed certificates, an outbound connection from a standard user workstation to an unknown external service using one is highly suspicious. A simple rule can detect this by checking if the certificate's issuer and subject are identical.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - TLS inspection points, Network egress points, Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH tls_logs WHERE issuer == subject AND destination_ip NOT IN allow_list; ALERT on match;
  - question: Are we observing TLS certificates with suspicious characteristics, such as very short validity periods, recent creation dates, or nonsensical subject names?
    context: This question looks for properties of 'disposable' certificates often used by adversaries. Legitimate certificates are typically valid for a year or more and have meaningful subject names. Certificates that are valid for short durations (e.g., < 90 days), were created very recently, or have gibberish-like subject names (low entropy) are all red flags that can be combined into a risk score to identify likely malicious C2 servers.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - TLS inspection points, Network egress points, Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: RISK_SCORE certificates based on (validity_duration < 90d, creation_date < 7d, subject_entropy < threshold);
  - question: Can a machine learning model be trained to predict whether a server's TLS certificate is malicious based on its attributes?
    context: This question aims to formalize and automate the statistical analysis of certificate properties. By training a classification model on a large dataset of known-good and known-bad certificates, we can create a powerful tool that automatically scores new certificates based on a combination of features like validity period, entropy, and key algorithms, providing a scalable method for detecting malicious TLS infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - TLS inspection points, Network egress points, Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new_certificate: EXTRACT features (is_self_signed, validity_period, entropy); PREDICT maliciousness using classification_model;