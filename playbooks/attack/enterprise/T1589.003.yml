name: T1589.003: Employee Names
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is attempting to gather employee names for targeting. This reconnaissance can manifest as web crawling of public-facing pages (like 'About Us' or 'Team' pages), username enumeration against login portals through high rates of failed authentications, password spraying attacks across many accounts, or anomalous internal activity where a compromised account is used to access employee directories or HR systems.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious IP or a client using a common scraping tool attempting to access web pages containing employee names?
    context: This question aims to detect basic web scraping attempts. It checks traffic to sensitive pages (e.g., '/about', '/team') for requests originating from IPs on threat intelligence lists or using user-agent strings associated with common scraping tools like 'Scrapy' or 'HTTrack'. A match provides a strong, direct signal of targeted information gathering.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek notice.log
      - Internet-facing web servers
      - Network perimeter firewalls/gateways
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek http.log JOIN conn.log ON uid WHERE (uri_path CONTAINS '/about' OR '/team' OR '/contact') AND (source_ip IN threat_intel_feed OR user_agent MATCHES scraping_tool_list)
  - question: Is any single external IP address sending an anomalously high number of requests to employee-related web pages compared to a historical baseline?
    context: Adversaries often use automated tools that generate a much higher volume of requests than normal users. By establishing a statistical baseline (e.g., the 95th percentile) for request counts from external IPs to sensitive pages, this question helps detect outliers that signify potential high-volume scraping activity, even if the tool's signature is unknown.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek notice.log
      - Internet-facing web servers
      - Network perimeter firewalls/gateways
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek http.log WHERE uri_path CONTAINS sensitive_paths | GROUP BY source_ip, 1_hour_window | COUNT requests | COMPARE count TO 95th_percentile_baseline | ALERT IF count > baseline
  - question: Has the overall request volume to employee-related web pages experienced a sustained, anomalous surge that deviates from normal seasonal traffic patterns?
    context: This question addresses sophisticated, distributed scraping that may not be detectable by analyzing single source IPs. By modeling the expected traffic volume using a time-series forecast (e.g., Prophet, ARIMA) that accounts for daily and weekly patterns, we can detect coordinated attacks that cause an unusual spike in total requests that exceeds the model's predicted confidence interval.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek notice.log
      - Internet-facing web servers
      - Network perimeter firewalls/gateways
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL request_volume_to_sensitive_pages WITH time_series_forecast(daily, weekly_seasonality) | ALERT IF actual_volume > forecasted_upper_bound FOR > 5 minutes
  - question: Is a single source IP rapidly attempting to log in with a large number of different usernames, indicating a potential user enumeration attack?
    context: This question looks for a classic username enumeration pattern. A high velocity of failed logins against many distinct accounts from one source IP is a strong indicator of an adversary trying to discover valid usernames. This query helps differentiate this malicious activity from normal, isolated failed login attempts.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4625
      - Authentication servers (e.g., ADFS)
      - Public-facing application servers
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event 4625 | GROUP BY source_ip, 5_minute_window | COUNT distinct target_usernames, COUNT failed_logins | ALERT IF failed_logins > 20 AND distinct_usernames >= 10
  - question: Do the usernames being used in failed login attempts from a single IP show signs of being algorithmically generated or sequentially guessed?
    context: Attackers often use tools that generate username lists programmatically (e.g., jsmith, jsmith1, jsmith2) or use alphabetically sorted lists. This behavior results in low lexical distance (e.g., Levenshtein) between sequential attempts and low character randomness (e.g., Shannon entropy). Detecting these patterns can uncover automated enumeration tools that might otherwise be missed.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4625
      - Authentication servers (e.g., ADFS)
      - Public-facing application servers
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event 4625 | GROUP BY source_ip, 1_hour_window | EXTRACT usernames | CALCULATE avg_levenshtein_distance(usernames), shannon_entropy(usernames) | ALERT IF avg_distance < 2 OR entropy < 5th_percentile_baseline
  - question: Can we use machine learning to identify login sessions that are anomalous and indicative of user enumeration, based on a combination of behavioral features?
    context: This question applies anomaly detection models to identify suspicious login behavior. By training a model (e.g., Isolation Forest) on features like request rate, number of distinct usernames, and the ratio of failed to successful logins, it can learn to distinguish normal user sessions from automated enumeration attacks with higher accuracy than simple threshold-based rules.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4625
      - Authentication servers (e.g., ADFS)
      - Public-facing application servers
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL login_sessions WITH isolation_forest(features: request_rate, distinct_username_count, failure_ratio, user_agent_consistency) | ALERT on anomalous sessions
  - question: Has a source IP that recently conducted a broad password spraying attack successfully compromised an account?
    context: This is a critical question for detecting the success of a password spray attack. The typical pattern is many "low-and-slow" failed logins across many accounts, followed by a single successful login. This query directly connects the preceding reconnaissance activity (the spray) with its successful outcome (the compromise), providing a high-confidence alert.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Authentication servers (e.g., ADFS, RADIUS)
      - Cloud identity providers (e.g., Azure AD)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event 4624 (successful login) | GET source_ip, timestamp | SEARCH Windows Event 4625 in last 24 hours FROM same source_ip | COUNT distinct target_usernames | ALERT IF distinct_usernames >= 10
  - question: Is any single IP address generating failed logins against an unusually large number of unique accounts, with very few attempts per account, which is characteristic of a password spraying attack?
    context: This question focuses on identifying the password spray attack itself. Unlike a brute-force attack on a single account, a password spray uses one or a few passwords against many usernames to avoid account lockouts. This query detects that pattern by looking for a high count of unique failed accounts from a single source, combined with a low failure count for each one.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Authentication servers (e.g., ADFS, RADIUS)
      - Cloud identity providers (e.g., Azure AD)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event 4625 | GROUP BY source_ip, 1_hour_window | COUNT distinct target_usernames, COUNT failures_per_username | ALERT IF distinct_usernames > 99th_percentile_baseline AND failures_per_username < 3
  - question: Are we observing a cluster of failed logins targeting a specific department or user peer group, suggesting a focused reconnaissance effort?
    context: Adversaries may target specific departments like Finance or Engineering. By grouping users based on Active Directory roles (peer groups), we can detect if an attack is disproportionately affecting one group. A spike in failed logins from a common source IP against multiple members of the same peer group is a strong signal of a targeted attack.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Authentication servers (e.g., ADFS, RADIUS)
      - Cloud identity providers (e.g., Azure AD)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL user_peer_groups USING AD group membership | MONITOR failed_logins (Event 4625) per peer_group | ALERT IF failed_logins for a single peer_group FROM common_source_ips exceeds statistical baseline
  - question: Is a client using a known scraping or scripting tool user-agent making a high volume of requests to a specific part of our website?
    context: This is a straightforward check for common automated tools. While user-agent strings are easily spoofed, many unsophisticated scraping scripts leave default values like 'python-requests' or 'Scrapy'. Correlating this signature with a high request rate provides a high-fidelity indicator of automated content harvesting.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet-facing web servers
      - Public API gateways
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek http.log WHERE user_agent MATCHES scraping_tool_list | GROUP BY source_ip, 10_minute_window, uri_path | COUNT requests | ALERT IF requests > 100
  - question: Are there any individual web sessions exhibiting a combination of anomalous characteristics, such as an unusually high number of requests, large data download volume, and systematic URI access patterns?
    context: This question analyzes web sessions holistically to find scrapers. A scraping tool will typically make many requests, download large amounts of content, and access pages in a predictable, non-human way (low URI entropy). Flagging sessions that are statistical outliers across multiple metrics can identify scraping even if the user-agent is disguised.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet-facing web servers
      - Public API gateways
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each web_session (grouped by uid) | CALCULATE total_requests, total_response_bytes, uri_path_entropy | ALERT IF session metrics exceed 98th_percentile_baseline FOR at least two metrics
  - question: Can a machine learning classifier, trained on various session features, automatically identify and categorize malicious scraping activity from other types of web traffic?
    context: This represents an advanced approach using supervised machine learning. By labeling historical data (e.g., human, benign bot, malicious scraper), a classifier model can be trained to recognize the subtle, combined patterns of malicious activity. This provides a robust and automated detection capability that adapts over time.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet-facing web servers
      - Public API gateways
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL web_sessions WITH classifier(features: inter_request_time_stddev, post_get_ratio, uri_depth, user_agent, referer_presence) | APPLY model to new sessions | ALERT on 'malicious_scraper' classification
  - question: Has a user account without a legitimate business need accessed sensitive files or sites known to contain employee PII?
    context: This is an access control-based question for detecting insider threats or compromised accounts. By defining a watchlist of sensitive resources (e.g., HR file shares) and a list of authorized user groups, we can create a high-fidelity alert for any access that violates this policy, indicating potential data snooping or theft.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 4663
      - Windows Event ID 4624
      - Internal SharePoint/intranet sites
      - Human Resources application servers
      - File servers hosting employee records
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Windows Event 4663 (file access) WHERE resource IN sensitive_watchlist | GET user | CHECK IF user NOT IN authorized_ad_groups | ALERT
  - question: Has any internal user suddenly started accessing a significantly higher number of employee data resources than their own historical baseline?
    context: This question uses personalized, behavioral baselining to spot anomalies. Instead of a static rule, it learns what is normal access behavior for each individual user. A sudden spike in accessing employee records for a user who normally doesn't (or accesses very few) is a strong indicator of a compromised account or insider threat activity.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 4663
      - Windows Event ID 4624
      - Internal SharePoint/intranet sites
      - Human Resources application servers
      - File servers hosting employee records
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each user | BASELINE daily_unique_resource_access_count over 30 days | MONITOR daily count | ALERT IF daily_count > (baseline + 3 * std_dev)
  - question: Using a holistic User and Entity Behavior Analytics (UEBA) model, is any user's overall activity profile showing a significant deviation from their normal behavior?
    context: This is an advanced internal threat detection method. A UEBA system or an autoencoder model learns the complex, multi-dimensional 'normal' for each user across different data sources (logons, file access, network traffic). It can detect subtle changes that, when combined, indicate a significant anomaly, such as an attacker using a compromised account for reconnaissance.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 4663
      - Windows Event ID 4624
      - Internal SharePoint/intranet sites
      - Human Resources application servers
      - File servers hosting employee records
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL user_activity WITH autoencoder(features: logon_count, file_access_count, network_bytes) | FOR each user, calculate reconstruction_error | ALERT when reconstruction_error is anomalously high