name: T1020: Automated Exfiltration
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has exfiltrated sensitive data using automated methods. It looks for indicators such as outbound network connections to known malicious destinations, DNS tunneling signatures like high-entropy queries, the use of archiving tools followed by large data transfers, unusual processes accessing a high volume of files, and coordinated file access across multiple hosts followed by a spike in outbound traffic to a common destination.
type: technique
related: TA0010: Exfiltration
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any internal hosts connected to external IP addresses or domains known to be malicious and associated with C2 or exfiltration?
    context: This question aims to identify direct communication with known adversary infrastructure. A match against a high-confidence threat intelligence feed is a strong indicator of compromise and potential data exfiltration.
    answer_sources: Zeek conn.log, Zeek dns.log, Internet Egress Points, Internal DNS Resolvers, Web Proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: JOIN (network_logs, dns_logs) WITH threat_intel_feed ON (destination_ip/domain) WHERE threat_intel.category IN ('C2', 'Exfiltration', 'Malware'). ALERT on match.
  - question: Have any internal hosts transferred an unusually large amount of data to low-reputation destinations?
    context: Adversaries often use newly registered or dynamic domains for exfiltration. This question seeks to identify anomalous data transfers to such destinations by comparing the volume of data sent in a single connection against a historical baseline for similar destination categories.
    answer_sources: Zeek conn.log, Zeek dns.log, Internet Egress Points, Internal DNS Resolvers, Web Proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each outbound_connection to low_reputation_destination, CALCULATE total_bytes_out. ALERT IF total_bytes_out > 95th_percentile_for_destination_category.
  - question: Can we detect potential data exfiltration by classifying outbound network connections based on their characteristics?
    context: This question uses a supervised machine learning model to proactively identify suspicious outbound connections that might not be caught by signature-based or simple statistical methods. The model learns the patterns of both benign and malicious traffic to make predictions.
    answer_sources: Zeek conn.log, Zeek dns.log, Internet Egress Points, Internal DNS Resolvers, Web Proxies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each new_outbound_connection, EXTRACT features (dest_ip_rep, port, proto, duration, bytes_sent, etc.). PREDICT classification using trained_model. ALERT on high-confidence 'potential exfiltration' prediction.
  - question: Are there any DNS queries or HTTP POST requests that match signatures of known exfiltration or tunneling tools?
    context: This question looks for specific patterns (e.g., in User-Agent headers, DNS query structures) associated with known malicious tools like Iodine, DNSCat2, or Cobalt Strike. A direct signature match is a strong indicator of a specific tool being used for exfiltration.
    answer_sources: Zeek dns.log, Zeek http.log, Internal DNS Resolvers, Web Proxies, Application Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SCAN http_logs FOR POST_requests with headers matching known_tool_regex. SCAN dns_logs FOR queries matching known_tunneling_tool_signatures. ALERT on match.
  - question: Are there any DNS queries with abnormally high entropy in their subdomains, or HTTP POST requests with high-entropy bodies?
    context: Data exfiltration via DNS tunneling or within HTTP requests often involves encoding the data, which results in high character entropy. This question aims to detect this anomaly by calculating the Shannon entropy of DNS query names and HTTP request bodies and alerting when it exceeds a statistically determined threshold.
    answer_sources: Zeek dns.log, Zeek http.log, Internal DNS Resolvers, Web Proxies, Application Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each dns_query, CALCULATE entropy of query_name. ALERT if entropy > high_threshold. FOR each http_post_request, CALCULATE entropy of request_body. ALERT if entropy > 99th_percentile_for_destination.
  - question: Can we identify DNS tunneling activity by clustering DNS queries based on their characteristics?
    context: This question uses an unsupervised machine learning approach to group DNS queries together. Queries used for DNS tunneling will likely have different characteristics (length, entropy, character distribution) than normal DNS traffic and will form distinct clusters that an analyst can investigate.
    answer_sources: Zeek dns.log, Zeek http.log, Internal DNS Resolvers, Web Proxies, Application Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: EXTRACT features (query_length, entropy, char_freq) from dns_logs. APPLY clustering_algorithm (e.g., DBSCAN). INVESTIGATE outlier clusters for potential tunneling.
  - question: Has a known archiving utility been used to compress sensitive directories shortly before a large data transfer from the same host?
    context: This question seeks to identify the common adversary pattern of "smash and grab," where data is first collected and compressed into a single archive file and then exfiltrated. Correlating the archival process with a subsequent large network transfer provides strong evidence of this activity.
    answer_sources: Windows Event ID 4688, Zeek conn.log, User Workstations, File Servers, Domain Controllers, Application Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRIGGER on process_creation_event WHERE process_name IN (archivers) AND command_line targets (sensitive_dirs). IF triggered, LOOK for network_connection_event from same_host within 15_minutes WHERE bytes_out > 50MB. ALERT on correlation.
  - question: Did a host's outbound traffic volume significantly deviate from its normal baseline shortly after an archiving tool was executed on it?
    context: This question looks for statistical anomalies in a host's network behavior following a potential staging activity (archiving). A spike in outbound data that is several standard deviations above the host's normal daily average is a strong indicator of an unusual event, such as exfiltration.
    answer_sources: Windows Event ID 4688, Zeek conn.log, User Workstations, File Servers, Domain Controllers, Application Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each host, ESTABLISH baseline_daily_outbound_volume. ON archive_process_execution, MONITOR outbound_traffic for next hour. ALERT if outbound_volume > (baseline_average + 3 * baseline_std_dev).
  - question: Can a time-series model detect anomalous network traffic patterns that are correlated with the execution of archiving utilities?
    context: This question uses a more sophisticated anomaly detection model (LSTM autoencoder) to learn a host's normal network traffic rhythm. By feeding archival events into the model, it can specifically look for deviations from the norm that occur immediately after staging activity, reducing false positives from other, unrelated network spikes.
    answer_sources: Windows Event ID 4688, Zeek conn.log, User Workstations, File Servers, Domain Controllers, Application Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each host, TRAIN time-series_anomaly_model on (network_traffic_per_minute). ON archive_process_event, FEED event to model. ALERT if model_reconstruction_error spikes significantly after the event.
  - question: Has a scripting process (like PowerShell) been observed accessing an unusually large number of sensitive file types in a short period?
    context: This question targets a common staging technique where adversaries use scripting engines to rapidly collect files of interest (e.g., documents, spreadsheets). A rule that looks for a scripting host accessing over 100 sensitive files within a minute is a high-fidelity indicator of data collection.
    answer_sources: Windows Event ID 4663, Windows Event ID 4688, Sensitive Data Repositories, User Workstations, Source Code Repositories, File Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: ALERT WHEN process_creation_event (scripting_host) is followed by >100 file_access_events from same_process within 1_minute WHERE file_extension IN (sensitive_extensions).
  - question: Has any process accessed a number of files, or a variety of file types, that is statistically anomalous compared to its own historical baseline?
    context: This question establishes a profile of normal file access behavior for every process on a host. It then flags any instance where a process suddenly starts accessing far more files, or a much wider variety of file types, than it normally does. This can detect staging activity even from legitimate processes that have been hijacked.
    answer_sources: Windows Event ID 4663, Windows Event ID 4688, Sensitive Data Repositories, User Workstations, Source Code Repositories, File Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each process, BASELINE file_access_count_per_minute and file_extension_entropy. ALERT if process_instance_file_access_count > 99th_percentile_of_baseline. INCREASE severity if file_extension_entropy > 99th_percentile_of_baseline.
  - question: Can an anomaly detection model identify processes behaving unusually with respect to file access and other process characteristics?
    context: This question uses an unsupervised model (Isolation Forest) to find outlier processes. By considering multiple features at once—such as parent process, command-line arguments, and file access patterns—the model can identify complex anomalies that might indicate data staging, even if no single feature is statistically significant on its own.
    answer_sources: Windows Event ID 4663, Windows Event ID 4688, Sensitive Data Repositories, User Workstations, Source Code Repositories, File Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRAIN anomaly_detection_model on features (parent_process, cmd_args, file_access_count, etc.). USE model to identify outlier_processes. INVESTIGATE outliers for staging activity.
  - question: Has a known exfiltration script been executed on multiple hosts within a short time, followed by communication from those hosts to a common external destination?
    context: This question looks for evidence of a widespread, automated exfiltration campaign. If the same malicious script is deployed and run across many machines, and those machines then all "phone home" to the same C2 server, it's a strong sign of coordinated exfiltration.
    answer_sources: Windows Event ID 4663, Windows Event ID 4688, Zeek conn.log, Entire Workstation Subnet, Server Farm, Internet Egress Points, Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: TRIGGER on process_creation_event for specific_script_hash on >5 hosts within 10_minutes. IF triggered, QUERY network_logs for common_external_destination_ip from those hosts. ALERT on match.
  - question: Has there been an anomalous spike in the number of hosts within a subnet concurrently accessing sensitive network shares, followed by a spike in traffic from that subnet to a single external IP?
    context: This question aims to detect coordinated data collection from a central repository (like a file share). It identifies when an unusual number of hosts suddenly start accessing the share at the same time, and then correlates that with a subsequent, coordinated exfiltration of the collected data to a single destination.
    answer_sources: Windows Event ID 4663, Windows Event ID 4688, Zeek conn.log, Entire Workstation Subnet, Server Farm, Internet Egress Points, Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each host_group, MONITOR number of hosts accessing sensitive_shares. ALERT if count > (hourly_baseline_avg + 3 * std_dev). CORRELATE alert with concurrent traffic spike from same host_group to a single external_ip.
  - question: Can graph analysis reveal a sudden convergence of connections from multiple, normally unrelated internal hosts to a single new external destination?
    context: This question models the network as a graph of relationships. Coordinated exfiltration appears as a distinct and anomalous pattern in this graph: multiple internal host nodes, which don't typically communicate with the same external entities, all suddenly form connections to a single, new external destination node. This technique is powerful for visualizing and detecting coordinated activity.
    answer_sources: Windows Event ID 4663, Windows Event ID 4688, Zeek conn.log, Entire Workstation Subnet, Server Farm, Internet Egress Points, Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: MODEL network as a graph (nodes=IPs, edges=connections). DETECT anomaly when multiple internal_nodes suddenly create edges to a single_external_node within a short time_window.