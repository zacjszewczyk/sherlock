name: T1491.001: Internal Defacement
id: f4a8b1c0-5e3d-4f9a-8b6c-7d2e1a9b8c3d
description: This playbook helps determine if an adversary has impacted systems or data by defacing internal resources such as websites, servers, or endpoint user interfaces. It provides investigative questions to detect defacement by identifying known malicious files via hash matching, analyzing command-line arguments used to modify UI elements or web content, monitoring for anomalous volumes or sources of file modifications on web servers, and correlating multi-stage behavioral sequences where a file is written and then subsequently used to alter a system's appearance.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any files written to internal web servers or transferred over the network matched the hashes of known defacement tools, scripts, or images?
  context: This question aims to detect the direct introduction of malicious content by comparing file hashes against curated threat intelligence lists. A match against a known indicator is a high-fidelity signal of a defacement attempt using recognized tools or imagery.
  answer_sources:
  - Windows Event ID 4663
  - Zeek files.log
  - Zeek http.log
  - Threat Intelligence Feed
  - Internal Web Servers (e.g., SharePoint, Confluence, Intranet), File Servers, Endpoint Desktops
  range: last 90 days
  queries:
  - technology: SIEM
    query: |-
      SEARCH file creation events (Windows 4663) or network file transfers (Zeek files.log)
      JOIN with threat intelligence feed on file_hash (SHA256)
      WHERE threat_intel_match exists
      ALERT on match
- question: Have there been any anomalous file uploads to web servers, identified by unusually high or low file entropy?
  context: This question uses file entropy analysis to uncover suspicious files without relying on known signatures. High entropy can indicate obfuscated or packed malicious scripts, while anomalously low entropy could signal a simple image or text file replacing a more complex, legitimate web page. This helps detect novel or unknown defacement content.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Internal Web Servers (e.g., SharePoint, Confluence, Intranet), File Servers, Endpoint Desktops
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      FOR each file transferred via HTTP POST/PUT (Zeek http.log, files.log):
        CALCULATE entropy of file payload
        COMPARE entropy to historical baseline for that server/URL
        ALERT if entropy is > 95th percentile or < 5th percentile
- question: Has a content classification model detected any web content that is thematically or structurally inconsistent with approved corporate content?
  context: This question addresses defacement by analyzing the content itself. By comparing the text, topics, or HTML structure of new or modified web pages against a baseline of known-good corporate content, this method can detect defacement attacks that introduce thematically inappropriate or structurally different material, even if the attack is novel.
  answer_sources:
  - Zeek http.log
  - Files on Internal Web Servers (e.g., SharePoint, Confluence, Intranet)
  range: last 90 days
  queries:
  - technology: Machine Learning
    query: |-
      FOR each new/modified file on web servers or in HTTP responses (Zeek http.log):
        APPLY content classification model (e.g., Naive Bayes, SVM)
        ALERT if content class is 'defacement' or 'inconsistent'
- question: Are there any command-line executions that directly modify system UI elements like the desktop wallpaper or login banner, or that overwrite common web content files?
  context: This question focuses on detecting the direct execution of commands used for defacement. Adversaries often use built-in system utilities (reg.exe, copy, powershell.exe) to modify registry keys controlling visual elements or to replace web files. These command-line artifacts provide direct evidence of the impact.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers (for login messages), All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: SIEM
    query: |-
      SEARCH process creation events (Windows 4688, 4104)
      WHERE (process_name is 'reg.exe' AND command_line contains 'HKCU\Control Panel\Desktop\Wallpaper' or 'LegalNoticeText')
      OR (process_name is 'powershell.exe' AND command_line contains 'Set-ItemProperty' and 'Wallpaper' or 'LegalNoticeText')
      OR (command_line contains 'copy' or 'move' or 'echo' and targets 'index.html' or 'default.aspx' in a web directory)
- question: Have any anomalous parent-child process relationships been observed where a non-standard parent process spawns a shell to modify UI elements or web files?
  context: This question seeks to identify defacement activity by looking for unusual process lineage. Legitimate applications like Microsoft Word or Outlook spawning a command shell to modify system settings is highly suspicious and often indicates code execution from a malicious document or email, which could be a precursor to or part of a defacement action.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      FOR each host:
        ANALYZE process creation events (Windows 4688) to build parent-child relationship baseline
        IDENTIFY chains where parent is (e.g., WINWORD.EXE) and child is (e.g., cmd.exe) which then executes file copy/registry modification
        ALERT if chain is statistically rare (<1% frequency) or new
- question: Has a command-line analysis model flagged any shell commands as having a high probability of being malicious and related to defacement?
  context: This question leverages a machine learning model to score the likelihood that a given command is malicious. This approach can detect novel or obfuscated commands that might be missed by simple keyword searches by considering a combination of features like command length, specific keywords, file paths, and obfuscation patterns.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: Machine Learning
    query: |-
      FOR each shell command (cmd.exe, powershell.exe) from events 4688/4104:
        EXTRACT features (length, keywords, paths, etc.)
        APPLY pre-trained maliciousness scoring model
        ALERT if score exceeds a defined threshold
- question: Have any critical web content files been modified by an unauthorized user account or process?
  context: This question focuses on protecting high-value assets by applying an allow-list policy. By monitoring a watchlist of critical files (e.g., index.html, login.aspx) and alerting on any modification made by a process or account not explicitly approved for content deployment, defenders can quickly detect unauthorized changes indicative of defacement.
  answer_sources:
  - Windows Event ID 4663
  - Internal Web Server file systems (e.g., C:\inetpub\wwwroot)
  range: last 90 days
  queries:
  - technology: SIEM
    query: |-
      DEFINE watchlist_files = ['index.html', 'login.aspx', 'web.config']
      DEFINE allowlist_processes = ['deployment_agent.exe', 'cms_service.exe']
      SEARCH file modification events (Windows 4663)
      WHERE file_path in watchlist_files AND process_name not in allowlist_processes
      ALERT on any result
- question: Has there been an anomalous spike in the volume of file modifications or HTTP POST/PUT requests on internal web servers, or have modifications originated from rare source IPs or user accounts?
  context: This question uses volumetric and frequency analysis to spot anomalies. A sudden burst of file changes or uploads, especially outside of normal maintenance windows or from an unfamiliar source IP or user account, can be a strong indicator of a defacement attack in progress.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4663
  - Internal Web Server file systems, Network traffic segments leading to internal web servers
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      FOR each web server:
        AGGREGATE file modifications (4663) and HTTP POST/PUT requests (Zeek) per hour
        COMPARE count to moving average for that hour/day
        ALERT if count > 3 standard deviations above average
        ANALYZE frequency of source IPs/users for modifications
        ALERT if source is not in top 95% of historical modifiers
- question: Has an anomaly detection model identified web update activities that deviate from the established baseline of normal behavior?
  context: This question applies unsupervised machine learning to detect novel defacement methods. By learning what constitutes 'normal' web update activity based on a combination of features (source IP, user agent, file type, process name, etc.), the model can flag any activity that is statistically improbable, without prior knowledge of the specific attack.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4663
  - Internal Web Server file systems, Network traffic segments leading to internal web servers
  range: last 90 days
  queries:
  - technology: Machine Learning
    query: |-
      FOR each web update event (from Zeek, Windows logs):
        CREATE feature vector (source IP, user agent, file extension, file size, process name, HTTP method)
        APPLY anomaly detection model (e.g., Isolation Forest)
        ALERT if event is flagged as an anomaly
- question: Has a suspicious sequence of events occurred, such as a file being written to disk shortly before being used in a command to modify a UI element or web page?
  context: This question looks for a specific chain of events that strongly indicates a "drop and execute" defacement tactic. The close temporal and logical link between a file creation and its immediate use to alter the system's appearance provides high-confidence evidence of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Zeek files.log
  - User workstations, Terminal servers (e.g., Citrix), Internal web and application servers
  range: last 90 days
  queries:
  - technology: SIEM
    query: |-
      SEARCH for file creation (4663) of image/web files by non-approved processes
      CORRELATE with process creation (4688) on same host within 60 seconds
      WHERE the new process command_line references the created file_path AND modifies a UI registry key or web root file
      ALERT on correlated sequence
- question: Have any statistically improbable sequences of events (e.g., network download -> file write -> registry modify) been observed that indicate a strong, non-random behavioral pattern?
  context: This question uses statistical analysis to find "unnatural" behaviors. While each event in a sequence might be benign on its own, their occurrence together might be extremely rare. A high Pointwise Mutual Information (PMI) score suggests the events are not coincidental and are likely part of a single, deliberate action like defacement.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Zeek files.log
  - User workstations, Terminal servers (e.g., Citrix), Internal web and application servers
  range: last 90 days
  queries:
  - technology: Analytics Platform
    query: |-
      FOR all hosts:
        IDENTIFY three-event sequences (e.g., network download -> file write -> registry modify)
        CALCULATE PMI score for each sequence type
        ALERT on sequences with an unusually high PMI score
- question: Has a sequence analysis model detected a known high-risk event sequence related to defacement or identified a novel sequence of events that deviates significantly from learned normal behavior?
  context: This question employs advanced sequence modeling (e.g., LSTM networks) to proactively identify threats. The model can either recognize known bad patterns or flag entirely new behaviors that don't conform to any previously seen benign sequence, indicating a potential zero-day or novel technique.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations, Terminal servers (e.g., Citrix), Internal web and application servers
  range: last 90 days
  queries:
  - technology: Machine Learning
    query: |-
      FOR each stream of host events (process, file, registry):
        INPUT sequence into trained LSTM model
        ALERT if model predicts a known malicious next-step
        ALERT if model prediction error is anomalously high, indicating novel behavior