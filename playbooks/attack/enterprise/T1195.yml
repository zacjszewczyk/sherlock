name: T1195: Supply Chain Compromise
id: 59a1f2a3-6b3d-4c8e-9f0a-1b9c8d7e6f54
description: This playbook helps investigate whether an adversary has gained initial
  access via a compromised software supply chain. It focuses on identifying suspicious
  activities following a software installation or update, such as outbound connections
  to malicious destinations, the spawning of unexpected processes like shells, network
  anomalies like C2 beaconing, and post-exploitation behaviors like reconnaissance
  or persistence creation.
type: technique
related:
- TA0001: Initial Access
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Has a process created by a recent software update made an outbound network
    connection to a known malicious IP or domain?
  context: This question aims to detect the most direct indicator of compromise, where
    a trusted software updater initiates communication with a command-and-control
    (C2) server or malware distribution point. Correlating process events with network
    logs and threat intelligence is critical for identifying a trojanized update
    package immediately after deployment.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Zeek dns.log
  - Zeek software.log
  - Network Egress Points (e.g., Firewalls, Proxies)
  - Internal and External DNS Resolvers
  - All Endpoints and Servers
  - Software Distribution Servers (e.g., SCCM, WSUS)
  - Threat Intelligence Feeds
  range: last 24 hours
  queries:
  - query: 'pseudocode: JOIN process_creation_events ON host_ip, timestamp WITH network_connection_logs;
      FILTER for processes from known updaters; JOIN with threat_intel_feed ON destination_ip,
      destination_domain; ALERT on match.'
- question: Is a process spawned by a software updater connecting to an unusually
    rare domain or a domain with a high-entropy (potentially algorithmically generated)
    name?
  context: Adversaries often use newly created or algorithmically generated domains
    (DGAs) for C2 that have not yet been blacklisted. This question helps uncover
    these by looking for statistical anomalies. Connections to very rare domains
    or those with random-looking names are highly suspicious, especially when initiated
    by a trusted software updater.
  answer_sources:
  - Zeek dns.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Network Egress Points (e.g., Firewalls, Proxies)
  - Internal and External DNS Resolvers
  - All Endpoints and Servers
  - Software Distribution Servers (e.g., SCCM, WSUS)
  range: last 90 days
  queries:
  - query: 'pseudocode: GET domains from updater processes; CALCULATE domain frequency
      across enterprise for 90 days; ALERT on domains in bottom 1st percentile; CALCULATE
      Shannon entropy for subdomains; ALERT on high entropy.'
- question: Have any domains contacted by newly installed processes been identified
    as machine-generated by a DGA detection model?
  context: This question applies machine learning to proactively identify potential
    command-and-control domains that statistical methods like frequency analysis
    might miss. Using a trained model (like an LSTM or Random Forest) can detect
    subtle patterns in domain names indicative of Domain Generation Algorithms (DGAs),
    providing a high-fidelity signal of malicious activity.
  answer_sources:
  - Zeek dns.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - DGA Detection Model
  - Network Egress Points (e.g., Firewalls, Proxies)
  - Internal and External DNS Resolvers
  - All Endpoints and Servers
  - Software Distribution Servers (e.g., SCCM, WSUS)
  range: last 90 days
  queries:
  - query: 'pseudocode: EXTRACT FQDNs from updater process network events; INPUT
      FQDNs into DGA detection model; ALERT on domains classified as machine-generated
      with high confidence.'
- question: Has a known software updater process spawned a command shell or script
    interpreter, or has a newly installed file been found with an invalid or missing
    code signature?
  context: Legitimate software updaters rarely need to spawn interactive shells (like
    PowerShell or cmd.exe). Such behavior is a strong indicator of an attacker leveraging
    the compromised update process to execute arbitrary commands. Similarly, a missing
    or invalid digital signature on a new executable file suggests it may have been
    tampered with or is not from the legitimate vendor.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - Sysmon Event ID 7 (Image Load)
  - All Endpoints and Servers
  - Software Distribution Servers
  - Developer Workstations
  - CI/CD Pipeline Build Servers
  range: last 90 days
  queries:
  - query: 'pseudocode: ALERT on parent_process in (updater_list) AND child_process
      in (shell_list); MONITOR Sysmon Event 7 for ''Signed'' = ''false'' and correlate
      with recent installations.'
- question: Has a software updater created a child process that has never been seen
    before in the environment, or is exceedingly rare?
  context: This question focuses on identifying anomalous process lineage. By baselining
    normal parent-child process relationships over time, any deviation from this
    baseline can be flagged. A software updater spawning an unexpected or rare process
    is a significant anomaly that could indicate a compromised update package is
    executing a malicious payload.
  answer_sources:
  - Sysmon Event ID 1 (Process Creation)
  - All Endpoints and Servers
  - Software Distribution Servers
  - Developer Workstations
  - CI/CD Pipeline Build Servers
  range: last 90 days
  queries:
  - query: 'pseudocode: BASELINE parent-child process pairs for 90 days; ALERT on
      new pairs where parent is in (updater_list) and the pair is new or has very
      low frequency.'
- question: Can a machine learning model, trained on process features, identify suspicious
    parent-child process relationships originating from software updaters?
  context: This leverages a machine learning classifier to automate the detection
    of suspicious process relationships. By training a model on features like process
    names, command-line arguments, and user context, it can learn to distinguish
    between benign and malicious activity with greater nuance than simple rule-based
    detections.
  answer_sources:
  - Sysmon Event ID 1 (Process Creation)
  - Machine Learning Model
  - All Endpoints and Servers
  - Software Distribution Servers
  - Developer Workstations
  - CI/CD Pipeline Build Servers
  range: last 90 days
  queries:
  - query: 'pseudocode: EXTRACT features from parent-child process events; INPUT
      features into trained classifier model; ALERT on relationships flagged as suspicious
      with high probability.'
- question: Is a process from a recent software update communicating over a non-standard
    port for its identified protocol (e.g., DNS traffic not on port 53)?
  context: Adversaries often tunnel malicious traffic over common ports to evade
    firewall rules, or use non-standard ports to hide their communications. A mismatch
    between the application-layer protocol and the port number is a classic sign
    of evasion and warrants immediate investigation, especially when originating
    from a newly updated process.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Sysmon Event ID 3 (Network Connection)
  - Network Egress Points (Firewalls, Proxies)
  - Core Network Taps
  - DNS Resolvers
  - All Endpoints and Servers
  range: last 90 days
  queries:
  - query: 'pseudocode: FOR connections from recent update processes, IF zeek_protocol_id
      != standard_port_for_protocol THEN ALERT.'
- question: Is a process from a recent update exhibiting network beaconing behavior
    or an unusually high data upload-to-download ratio?
  context: This question looks for two key indicators of C2 activity and data exfiltration.
    Rhythmic, periodic outbound connections (beaconing) are a hallmark of malware
    calling home. A high ratio of sent-to-received bytes can indicate that the compromised
    process is uploading stolen data. Both are strong signals of post-compromise
    activity.
  answer_sources:
  - Zeek conn.log
  - Sysmon Event ID 3 (Network Connection)
  - Network Egress Points (Firewalls, Proxies)
  - Core Network Taps
  - DNS Resolvers
  - All Endpoints and Servers
  range: last 90 days
  queries:
  - query: 'pseudocode: FOR a source-dest pair, CALCULATE time delta stddev between
      connections; ALERT if stddev is near zero; CALCULATE sent_bytes / received_bytes
      ratio; ALERT if ratio exceeds baseline.'
- question: Following a software update on a host, are there significant anomalies
    in its outbound network traffic patterns when analyzed with a time-series model?
  context: This advanced technique models a host's normal network traffic patterns
    (including daily/weekly trends) and then looks for deviations after a software
    update. By decomposing the time-series data and applying an anomaly detection
    algorithm to the residual data, this method can uncover subtle C2 or exfiltration
    activities.
  answer_sources:
  - Zeek conn.log
  - Anomaly Detection Model
  - Network Egress Points (Firewalls, Proxies)
  - Core Network Taps
  - DNS Resolvers
  - All Endpoints and Servers
  range: last 90 days
  queries:
  - query: 'pseudocode: MODEL host outbound traffic using time-series decomposition;
      AFTER update, apply anomaly detection (e.g., Isolation Forest) to the residual
      data; ALERT on significant outliers.'
- question: Has a process from a recent software update attempted to access LSASS
    memory or created a new service or scheduled task for persistence?
  context: Accessing the LSASS process is a common technique for credential dumping.
    Creating new services or scheduled tasks are classic persistence mechanisms.
    If a process originating from a software update performs any of these actions,
    it is a very strong indication that the update was malicious and the adversary
    is attempting to escalate privileges and maintain access.
  answer_sources:
  - Sysmon Event ID 10 (ProcessAccess)
  - Windows Event ID 4697 (Service Creation)
  - Windows Event ID 4698 (Scheduled Task Creation)
  - All Endpoints and Servers
  - Domain Controllers
  - Active Directory Certificate Services (ADCS)
  - Developer Workstations
  - High-Value Target Systems
  range: last 90 days
  queries:
  - query: 'pseudocode: ALERT on Sysmon Event 10 where target is ''lsass.exe'' and
      source is recent update process; ALERT on new service/task creation where executable
      path is < 24 hours old.'
- question: Is a process spawned by a software updater executing obfuscated commands
    or an unusual number of discovery commands (e.g., whoami, systeminfo)?
  context: This question aims to detect reconnaissance activity. Adversaries often
    obfuscate commands to hide their intent, which can be detected by measuring high
    command-line entropy. Additionally, a legitimate software updater has no reason
    to run discovery commands to learn about the system or network, so such behavior
    is highly anomalous.
  answer_sources:
  - Sysmon Event ID 1 (Process Creation)
  - All Endpoints and Servers
  - Domain Controllers
  - Active Directory Certificate Services (ADCS)
  - Developer Workstations
  - High-Value Target Systems
  range: last 90 days
  queries:
  - query: 'pseudocode: FOR updater child processes, CALCULATE command-line entropy;
      ALERT on high entropy; BASELINE discovery command frequency per process; ALERT
      on unusual rates.'
- question: Does the sequence of system events following a software update deviate
    significantly from the normal behavior learned by an outlier detection model
    (e.g., One-Class SVM)?
  context: This question uses a holistic, machine-learning-based approach to detect
    compromise. By training a model on the typical sequence of events that follow
    a benign software update, it can identify when a new update triggers an anomalous
    sequence of events. This can catch complex or novel attack chains that individual
    rules might miss.
  answer_sources:
  - Sysmon Event ID 1, 12, 13, 14, etc.
  - Outlier Detection Model
  - All Endpoints and Servers
  - Domain Controllers
  - Active Directory Certificate Services (ADCS)
  - Developer Workstations
  - High-Value Target Systems
  range: last 90 days
  queries:
  - query: 'pseudocode: CAPTURE sequence of host events after a software update;
      INPUT event sequence into trained One-Class SVM model; ALERT if the sequence
      is classified as an outlier.'