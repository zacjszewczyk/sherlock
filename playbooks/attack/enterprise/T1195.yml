name: T1195: Supply Chain Compromise
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: >-
  Investigates whether an adversary has gained initial access to the network via a compromised software supply chain. This playbook focuses on detecting supply chain compromises by analyzing evidence such as: processes from software updates making outbound connections to malicious or rare domains; updaters spawning shells or being unsigned; anomalous network behaviors like beaconing, port-protocol mismatches, or data exfiltration; and post-compromise activities like credential access (LSASS) and persistence creation.
type: technique
related:
  - TA0001: Initial Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can we detect if a process spawned by a recent software update is connecting to a known malicious IP or domain?
    context: >-
      This question aims to identify immediate threats from compromised software updates. By correlating process creation events with network traffic and checking against threat intelligence, analysts can quickly spot connections to command-and-control servers or malware distribution points, indicating a successful supply chain compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Zeek software.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Internal and External DNS Resolvers
      - All Endpoints and Servers
      - Software Distribution Servers (e.g., SCCM, WSUS)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN process_events ON host_ip, timestamp (within 5 mins) WITH network_connections
          JOIN dns_logs ON connection_details
          WHERE destination_ip OR destination_fqdn IN threat_intel_feed
          AND source_process IN recent_software_updates_list
          ALERT on match
  - question: Is a process from a new software update connecting to an unusually rare domain or one with a high-entropy, potentially machine-generated name?
    context: >-
      This question helps uncover stealthy C2 channels that don't appear on standard threat intelligence feeds. Attackers often use newly created or algorithmically generated domains (DGA) to evade detection. Identifying connections to statistically rare or high-entropy domains can surface these sophisticated threats.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Zeek software.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Internal and External DNS Resolvers
      - All Endpoints and Servers
      - Software Distribution Servers (e.g., SCCM, WSUS)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each domain IN dns_logs from updater_processes:
            CALCULATE access_frequency across enterprise (90 days)
            CALCULATE shannon_entropy of subdomain
            IF access_frequency < 1st_percentile OR shannon_entropy > threshold:
              ALERT on domain
  - question: Can a machine learning model identify if domains contacted by new software updates are generated by a Domain Generation Algorithm (DGA)?
    context: >-
      This leverages machine learning to proactively identify DGA-based C2 infrastructure. DGA detection models are trained to recognize the linguistic and structural patterns of machine-generated domains, providing a scalable way to find malicious domains that might otherwise be missed by frequency analysis alone.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Zeek software.log
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Internal and External DNS Resolvers
      - All Endpoints and Servers
      - Software Distribution Servers (e.g., SCCM, WSUS)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT FQDNs from dns_logs related to new software updates
          INPUT FQDNs into DGA_detection_model
          IF model_confidence_score > high_threshold:
            ALERT on FQDN
  - question: Has a known software updater spawned a suspicious child process like a command shell, or is the updated executable unsigned or improperly signed?
    context: >-
      This question targets a common attacker technique where a compromised updater is used to launch a secondary payload via a shell or script interpreter. It also checks the integrity of the software itself by verifying its digital signature. An unsigned or invalidly signed executable associated with an update is a strong indicator of tampering.
    answer_sources:
      - Windows Event ID 4688
      - Windows Security Event ID 5038
      - Sysmon Event ID 1 (Process Creation)
      - Sysmon Event ID 7 (Image Load)
      - All Endpoints and Servers
      - Software Distribution Servers
      - Developer Workstations
      - CI/CD Pipeline Build Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Rule 1
          SELECT * FROM process_creation_logs
          WHERE parent_process IN known_updaters_list
          AND child_process IN script_interpreters_list
          ALERT on match

          // Rule 2
          SELECT * FROM image_load_logs
          WHERE (is_signed = false OR signature_status != 'valid')
          AND file_path associated_with_recent_update
          ALERT on match
  - question: Has a software updater process created a child process in a combination that is new or extremely rare for the entire organization?
    context: >-
      This question uses behavioral baselining to detect anomalies. By understanding normal parent-child process relationships, analysts can automatically flag when an updater does something unexpected, such as spawning a process it has never spawned before. This can catch novel attack variations without relying on predefined rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Security Event ID 5038
      - Sysmon Event ID 1 (Process Creation)
      - Sysmon Event ID 7 (Image Load)
      - All Endpoints and Servers
      - Software Distribution Servers
      - Developer Workstations
      - CI/CD Pipeline Build Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE all parent-child process pairs over 90 days
          FOR each new process_creation_event:
            IF parent_process IN known_updaters_list
            AND parent_child_pair is new_or_rare (< 0.1% frequency):
              ALERT on event
  - question: Can a machine learning model predict if a parent-child process relationship originating from a software updater is suspicious?
    context: >-
      This proactive approach uses machine learning to score the risk of process creation events based on multiple features (process names, command lines, user context). It can identify complex, subtle patterns of malicious behavior that are difficult to define with simple rules, providing a more nuanced detection capability.
    answer_sources:
      - Windows Event ID 4688
      - Windows Security Event ID 5038
      - Sysmon Event ID 1 (Process Creation)
      - Sysmon Event ID 7 (Image Load)
      - All Endpoints and Servers
      - Software Distribution Servers
      - Developer Workstations
      - CI/CD Pipeline Build Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT features (parent_name, child_name, cmd_line_entropy, etc.) from process_creation_events
          INPUT features into ML_classifier_model
          IF model_probability_score > suspicious_threshold:
            ALERT on event
  - question: Is a process from a recent software update communicating over a non-standard port for its identified protocol (e.g., DNS over TCP/80)?
    context: >-
      This question looks for protocol-port mismatches, a classic evasion technique used by malware to tunnel its C2 traffic through allowed firewall ports. For example, an attacker might disguise their traffic as DNS but send it over port 443 (HTTPS) to bypass port-based blocking.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 3 (Network Connection)
      - Network Egress Points (Firewalls, Proxies)
      - Core Network Taps
      - DNS Resolvers
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SELECT * FROM network_connection_logs
          WHERE source_process IN recent_software_updates_list
          AND identified_protocol != standard_port_for_protocol
          ALERT on mismatch
  - question: Does network traffic from a new software update process show signs of beaconing (regular, timed callbacks) or data exfiltration (abnormally high sent-to-received data ratio)?
    context: >-
      This question aims to detect two key malicious behaviors. Beaconing is the "heartbeat" of malware connecting back to its C2 server, and its regularity is a strong indicator. A high ratio of outgoing to incoming data can signify that the compromised software is being used to steal and exfiltrate sensitive information from the network.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 3 (Network Connection)
      - Network Egress Points (Firewalls, Proxies)
      - Core Network Taps
      - DNS Resolvers
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Beaconing
          GROUP connections by src_ip, dst_ip over 1 hour
          CALCULATE std_dev of time_deltas between connections
          IF std_dev < 1_second:
            ALERT as potential beaconing

          // Exfiltration
          CALCULATE outbound_bytes / inbound_bytes ratio
          IF ratio > 99th_percentile_baseline:
            ALERT as potential exfiltration
  - question: After a software update, does the host's outbound network traffic volume deviate significantly from its normal, established pattern?
    context: >-
      This question uses advanced time-series analysis to find anomalies in network behavior. By breaking down a host's traffic into its normal trend and seasonal patterns, we can isolate the unpredictable "residual" noise. A sudden spike in this residual component after an update can indicate abnormal C2 or exfiltration activity that doesn't fit the host's typical communication profile.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Sysmon Event ID 3 (Network Connection)
      - Network Egress Points (Firewalls, Proxies)
      - Core Network Taps
      - DNS Resolvers
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL host_outbound_traffic using time_series_decomposition (STL)
          AFTER software_update:
            APPLY anomaly_detection (Isolation Forest) to residual_component
            IF anomaly_is_detected:
              ALERT on host
  - question: Has a process from a recent software update attempted to access credentials from LSASS or tried to create a new persistence mechanism like a service or scheduled task?
    context: >-
      This question targets post-compromise activities. Accessing the LSASS process is a common way to steal credentials. Creating new services or scheduled tasks allows malware to survive reboots and maintain a foothold in the environment. Detecting these actions from a software updater is a high-confidence indicator of malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10 (ProcessAccess)
      - Sysmon Event ID 12/13/14 (Registry Events)
      - Windows Event ID 4697 (Service Creation)
      - Windows Event ID 4698 (Scheduled Task Creation)
      - All Endpoints and Servers
      - Domain Controllers
      - Active Directory Certificate Services (ADCS)
      - Developer Workstations
      - High-Value Target Systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // LSASS Access
          SELECT * FROM process_access_logs
          WHERE target_process = 'lsass.exe'
          AND source_process associated_with_recent_update
          ALERT on match

          // Persistence
          SELECT * FROM service_creation_logs OR task_creation_logs
          WHERE executable_path_was_created_in_last_24_hours
          ALERT on match
  - question: Is a process spawned by a software updater using obfuscated command lines or running discovery commands (like whoami, ipconfig) at an unusual rate?
    context: >-
      This question looks for signs of reconnaissance and obfuscation. High entropy in command lines often indicates encoded or packed commands used to hide malicious activity. An updater process suddenly running discovery commands is highly anomalous and suggests an attacker is mapping the local system or network.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10 (ProcessAccess)
      - Sysmon Event ID 12/13/14 (Registry Events)
      - Windows Event ID 4697 (Service Creation)
      - Windows Event ID 4698 (Scheduled Task Creation)
      - All Endpoints and Servers
      - Domain Controllers
      - Active Directory Certificate Services (ADCS)
      - Developer Workstations
      - High-Value Target Systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process from updater:
            CALCULATE entropy of command_line
            IF entropy > 3.5:
              ALERT on obfuscation
            
            IF command_line contains discovery_command
            AND frequency_is_statistically_unusual:
              ALERT on reconnaissance
  - question: Does the sequence of system events (processes, file changes, registry keys) following a software update deviate from the pattern of a normal, benign update?
    context: >-
      This question uses a machine learning model to perform holistic behavioral analysis. A One-Class SVM is trained exclusively on what "good" looks like. It learns the typical sequence of events for a benign update. Any new update whose subsequent activity sequence doesn't fit this learned model is flagged as an outlier, allowing for the detection of novel and complex attack chains.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10 (ProcessAccess)
      - Sysmon Event ID 12/13/14 (Registry Events)
      - Windows Event ID 4697 (Service Creation)
      - Windows Event ID 4698 (Scheduled Task Creation)
      - All Endpoints and Servers
      - Domain Controllers
      - Active Directory Certificate Services (ADCS)
      - Developer Workstations
      - High-Value Target Systems
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN One-Class_SVM_model on event_sequences from known_good_updates
          FOR each new_update:
            COLLECT sequence of subsequent host events
            INPUT sequence into model
            IF model_classifies as outlier:
              ALERT on host