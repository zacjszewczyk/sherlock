name: T1070.007: Clear Network Connection History and Configurations
id: 1e9a8b1c-3d4e-4f5a-8b6c-1e9a8b1c3d4e
description: This playbook focuses on detecting an adversary's attempts to evade detection by clearing network history and configurations. This includes the execution of known history-clearing utilities, the use of built-in command-line tools to delete RDP history or firewall rules, an anomalous volume of deletion events targeting RDP registry keys and files, and the correlation of a remote logon immediately followed by evidence-clearing activities.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known history-clearing utility being executed on the system?
    context: This question aims to identify the use of specific, known tools (like SDelete, CCleaner) that adversaries might use to cover their tracks. By monitoring process creation events and comparing file hashes against a threat intelligence list of such tools, we can detect a direct attempt to erase evidence.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek files.log
      - User workstations, Application servers, and Jump Boxes where remote access is common.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process creation events (Sysmon 1, Win 4688) WHERE process_hash IN (known_history_clearing_tool_hashes)
  - question: Are there any newly executed processes with abnormally high string entropy in their filenames?
    context: Adversaries often use randomized or packed filenames to evade simple name-based detections. This question uses a statistical approach to find outliers. By calculating the Shannon entropy of process filenames and comparing it to a baseline, we can flag potentially obfuscated tools that might be used for history clearing, especially when they run from unusual locations like temporary folders.
    answer_sources:
      - Sysmon Event ID 1
      - User workstations, Application servers, and Jump Boxes where remote access is common.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE entropy for all process_names. ESTABLISH baseline (mean, stddev). ALERT where process_name_entropy > (mean + 3 * stddev) AND process_path IN ('%TEMP%', '%APPDATA%')
  - question: Can we classify process execution events as suspicious history-clearing activities using a machine learning model?
    context: This question leverages machine learning to provide a more sophisticated detection than symbolic or statistical methods alone. By training a model on various features of a process event (parent process, command line, user context), it can learn the subtle characteristics of malicious history-clearing behavior and classify new, unseen events in real-time.
    answer_sources:
      - Sysmon Event ID 1
      - User workstations, Application servers, and Jump Boxes where remote access is common.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY classification model to process creation events (Sysmon 1). FEATURES include parent_process, cmd_length, cmd_entropy, user. ALERT on 'suspicious' or 'malicious' classification.
  - question: Are built-in command-line tools like wevtutil, reg, or PowerShell being used to clear network connection history?
    context: Adversaries frequently 'live off the land' by using legitimate system utilities for malicious purposes. This question focuses on detecting specific command-line patterns used to delete RDP history, clear event logs, or remove .rdp files. Regex matching on command lines and script blocks can pinpoint these suspicious activities.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, and administrative workstations.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH command lines (Sysmon 1) or script blocks (Win 4104) FOR regex('wevtutil cl', 'Clear-EventLog', 'reg delete .*Terminal Server Client', 'Remove-Item .*.rdp')
  - question: Is there an anomalous frequency of deletion-related commands being executed by system utilities on any host?
    context: While administrative tools are used for legitimate tasks, a sudden spike in their use for deletion can indicate malicious activity. This question establishes a baseline for how often commands like 'delete' or 'cl' are used with tools like 'reg.exe' and 'wevtutil.exe' on a per-host basis. A statistically significant increase (e.g., >3 standard deviations) from this baseline suggests an unusual and potentially malicious attempt to clear evidence.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, and administrative workstations.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE frequency of deletion commands per host. ESTABLISH baseline. ALERT where count > (baseline_mean + 3 * stddev)
  - question: Can we use Natural Language Processing (NLP) to determine if the intent of a command-line or script block is to clear history?
    context: Simple keyword matching can be brittle. This question proposes using a more advanced NLP model that understands the semantic meaning of a command. By analyzing the entire command string or script block, the model can classify its intent (e.g., 'history clearing') with higher accuracy, reducing false positives from benign administrative commands that might contain similar keywords.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Domain Controllers, Member Servers, and administrative workstations.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY NLP model to command lines (Sysmon 1) and script blocks (Win 4104). ALERT on 'history clearing' intent classification.
  - question: Has there been a direct deletion of registry keys or files associated with RDP connection history?
    context: This question looks for the most direct evidence of RDP history clearing: the deletion of the specific artifacts themselves. By monitoring for registry and file deletion events (via Sysmon) targeting the known paths for RDP history ('...\\Terminal Server Client\\...' and 'Default.rdp'), we can generate a high-confidence alert for this specific behavior.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - Windows Event ID 4660
      - Windows Event ID 4663
      - Windows Registry and file system on endpoints and servers, particularly those accessed via RDP.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH for registry deletion (Sysmon 12, 13) WHERE TargetObject ends with '\\Terminal Server Client\\Default' or '\\Servers'. SEARCH for file deletion (Sysmon 11) WHERE file_name = 'Default.rdp'
  - question: Is there a sudden, anomalous burst of modification or deletion events targeting RDP history artifacts on any host?
    context: Legitimate activity might occasionally modify RDP history files, but a large number of deletions in a short time is highly suspicious. This question involves creating a time-series baseline of these events for each host. An alert is triggered if the volume of events in a short window exceeds a dynamic threshold (e.g., 98th percentile), indicating a potential rapid cleanup operation.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Windows Event ID 4660
      - Windows Event ID 4663
      - Windows Registry and file system on endpoints and servers, particularly those accessed via RDP.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CREATE time-series baseline of RDP artifact modifications/deletions per host. ALERT if event count in a 5-minute window > 98th percentile of historical data.
  - question: Can a time-series anomaly detection model identify unusual patterns in the access of RDP history artifacts?
    context: This question applies a more advanced machine learning model to learn the normal 'rhythm' of access to RDP artifacts across the entire environment. An LSTM Autoencoder, for example, can learn complex temporal patterns. It would then flag any host whose activity (e.g., deletions happening at an unusual time or in an unusual sequence) deviates significantly from this learned normal behavior.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Windows Registry and file system on endpoints and servers, particularly those accessed via RDP.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY LSTM Autoencoder model to time-series data of RDP artifact access events. ALERT when reconstruction error for a host's activity is high.
  - question: Is a successful RDP logon immediately followed by the execution of history-clearing commands or the deletion of RDP artifacts by the same user on the same host?
    context: This question correlates two distinct events to build a high-fidelity detection. The logic is that an adversary might log in via RDP, perform actions, and then immediately try to cover their tracks before logging out. A SIEM rule can be built to detect a successful RDP logon (Event ID 4624) followed within a short time window (e.g., 15 minutes) by a history-clearing action from the same user and host.
    answer_sources:
      - Windows Event ID 4624
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Windows Event ID 4104
      - Zeek conn.log
      - Zeek rdp.log
      - Authentication logs, file/registry audit logs on RDP-enabled systems, and network traffic logs at network ingress/egress points.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CORRELATE RDP logon (Win 4624, Type 10) with subsequent history-clearing event (Sysmon 1, 11, 13) WHERE user and host are the same AND time_delta < 15 minutes.
  - question: Does any user exhibit a statistically significant increase in the probability of performing history-clearing actions immediately after an RDP login?
    context: This question profiles user behavior to find anomalies. For each user, we calculate the conditional probability of them clearing history right after an RDP login. While this might be zero for most users, a sudden jump in this probability for a specific user, placing them in the top percentile, is a strong indicator of compromised or malicious activity.
    answer_sources:
      - Windows Event ID 4624
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Windows Event ID 4104
      - Authentication logs, file/registry audit logs on RDP-enabled systems, and network traffic logs at network ingress/egress points.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE P(Clear | RDP_Login) per user. ESTABLISH baseline. ALERT if a user's probability enters the top 99th percentile.
  - question: Can a sequence analysis model detect an anomalous sequence of events, such as 'RDP Logon -> History Deletion -> Logout'?
    context: This question uses sequence analysis models (like HMMs) to learn the common chains of events that occur after a user logs in. A normal sequence might be 'login -> run application -> logout'. The model would identify a sequence involving history deletion as a low-probability, and therefore anomalous, chain of events, triggering a high-confidence alert.
    answer_sources:
      - Windows Event ID 4624
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Authentication logs, file/registry audit logs on RDP-enabled systems, and network traffic logs at network ingress/egress points.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY sequence analysis model (HMM) to event logs (4624, Sysmon 1, 11, 13) grouped by session. ALERT on low-probability sequences like 'Login -> History Clear'.
  - question: Are host-based firewall rules being modified or deleted by unauthorized users or outside of approved maintenance windows?
    context: Adversaries may modify firewall rules to allow C2 traffic or exfiltration, then delete the rule to hide their activity. This question aims to detect such modifications by monitoring 'netsh.exe' or PowerShell firewall cmdlets. By correlating these events with a list of authorized admins and change tickets, we can flag any change that is not part of a legitimate administrative process.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Windows Event ID 4947
      - Windows Event ID 4950
      - Zeek notice.log
      - Host-based firewalls on workstations and servers; Centralized logging and SIEM infrastructure; Change management log databases.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH for firewall modification commands (netsh, *-NetFirewallRule). ALERT if user is not authorized admin OR if event does not correlate with change management ticket.
  - question: Is there a statistically anomalous rate of firewall modification events for any host or user?
    context: While firewall rules are changed occasionally, a rapid series of modifications by a single user or on a single host is unusual. This question establishes a baseline rate of change per user and per host. A z-score is used to detect a statistically significant spike in this activity, which could indicate an adversary manipulating firewall rules.
    answer_sources:
      - Windows Event ID 4947
      - Windows Event ID 4950
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Host-based firewalls on workstations and servers; Centralized logging and SIEM infrastructure; Change management log databases.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: PROFILE rate of firewall changes per host/user. ESTABLISH baseline. ALERT if z-score > 3.0 compared to baseline.
  - question: Can a machine learning model classify firewall changes as either legitimate administration or malicious activity?
    context: This question proposes a sophisticated classification model to differentiate benign from malicious firewall changes. By training on a rich set of features—including user role, time of day, parent process, and correlation with change management data—the model can learn the nuances of legitimate changes and flag new events that have a high probability of being malicious.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4104
      - Host-based firewalls on workstations and servers; Centralized logging and SIEM infrastructure; Change management log databases.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: APPLY classification model to firewall change events. FEATURES include user_role, time_of_day, parent_process, change_ticket_correlation. ALERT on 'malicious' classification.