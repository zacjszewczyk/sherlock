name: T1619: Cloud Storage Object Discovery
id: c3a4b5d6-e7f8-4a9b-8c7d-6e5f4a3b2c1d
description: |
  This playbook addresses the adversary technique of enumerating objects within cloud storage environments like AWS S3 or Azure Blob Storage. It focuses on detecting this activity by identifying several key indicators: enumeration API calls originating from malicious IP addresses (known proxies, TOR nodes, or threat feeds); the execution of known cloud storage discovery tools via command-line arguments or specific User-Agent strings; an unusually high rate of listing API calls from a single user or IP address; an identity performing an enumeration action for the very first time or accessing a resource it has never touched before; and sequences of activity where an enumeration call is immediately followed by a high volume of data access, deletion, or permission changes from the same actor.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any cloud storage enumeration API calls originated from an IP address known to be malicious (e.g., from a threat intelligence feed, proxy, or TOR node)?
    context: This question aims to identify the most straightforward indicator of compromise: an adversary using known malicious infrastructure to probe cloud storage. A match provides a high-confidence signal that the enumeration activity is not legitimate and requires immediate investigation.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud provider management plane (for API logs)
      - Network egress points (for traffic logs)
      - Threat intelligence subscription services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN (SELECT source_ip, user, timestamp FROM cloud_audit_logs WHERE event_name = 'ListObjects' OR event_name = 'ListBlobs') AS cloud_events
          ON cloud_events.source_ip = threat_intel_feed.malicious_ip
          WHERE cloud_events.timestamp > NOW() - 90d
  - question: Has a cloud storage enumeration API call originated from a geographically or network-level (ASN) anomalous location for a given user or role?
    context: This question helps detect when a legitimate user's credentials might be compromised and used from an unusual location. By baselining normal administrative locations, it's possible to flag enumeration activity originating from a country or network that is rare for a specific user or role, suggesting potential unauthorized access.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud provider management plane (for API logs)
      - Network egress points (for traffic logs)
      - Threat intelligence subscription services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each enumeration_event:
            source_ip = event.source_ip
            user = event.user
            event_asn, event_country = GEO_ENRICH(source_ip)
            historical_asns, historical_countries = GET_BASELINE(user, last 30d)
            IF event_asn NOT IN historical_asns OR event_country NOT IN historical_countries:
              ALERT
  - question: Based on a machine learning model, does a cloud storage enumeration event have a high probability of being malicious?
    context: This question leverages a machine learning model to score enumeration events based on a combination of features like IP reputation, location, time of day, and user history. This allows for the detection of more nuanced attacks that may not trigger simpler, rule-based alerts, by identifying a confluence of suspicious factors.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud provider management plane (for API logs)
      - Network egress points (for traffic logs)
      - Threat intelligence subscription services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each enumeration_event:
            features = EXTRACT_FEATURES(event)
            malicious_probability = ML_MODEL.predict(features)
            IF malicious_probability > 0.85:
              ALERT
  - question: Has a process been executed or a network request been made that is indicative of a known cloud storage discovery tool?
    context: This question seeks to find direct evidence of an adversary using specialized tools (e.g., s3scanner, cloud_enum) on an endpoint or workstation. Detecting the tool's process name, command-line arguments, or unique User-Agent string in network traffic is a strong indicator of active, hands-on-keyboard reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek conn.log
      - User Endpoints
      - DevOps/Cloud Engineering Workstations
      - CI/CD Pipeline Servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs
          WHERE command_line MATCHES ('s3scanner', 'cloud_enum', 'aws s3 ls --recursive')
          UNION
          SEARCH http_logs
          WHERE user_agent IN (known_bad_tool_user_agents)
  - question: Has a cloud CLI tool been executed with unusually complex or obfuscated command-line arguments?
    context: This question looks for signs of obfuscation in command-line usage. Adversaries may try to hide their discovery commands within complex scripts or encoded strings. A high Shannon entropy score for the command-line arguments, relative to a user's normal activity, can indicate this type of obfuscation attempt.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek conn.log
      - User Endpoints
      - DevOps/Cloud Engineering Workstations
      - CI/CD Pipeline Servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_event WHERE process_name IN ('aws.exe', 'az.cmd'):
            user = event.user
            entropy = CALCULATE_ENTROPY(event.command_line)
            user_baseline_mean, user_baseline_stddev = GET_ENTROPY_BASELINE(user)
            IF entropy > (user_baseline_mean + 3 * user_baseline_stddev):
              ALERT
  - question: Has a network request to a cloud API endpoint used a User-Agent string that is anomalous or has never been seen before?
    context: This question aims to detect custom or modified adversary tools that may not have a known-bad signature. By modeling all legitimate User-Agent strings, an anomaly detection model can flag any new or statistically unusual User-Agent, which could represent a previously unknown discovery tool.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek conn.log
      - User Endpoints
      - DevOps/Cloud Engineering Workstations
      - CI/CD Pipeline Servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each http_request to cloud_api_endpoint:
            user_agent = request.user_agent
            is_anomalous = ANOMALY_MODEL.predict(user_agent)
            IF is_anomalous:
              ALERT
  - question: Has any single user or IP address made an excessive number of enumeration API calls within a short time window?
    context: This question focuses on detecting brute-force or large-scale discovery attempts. A sudden, high volume of enumeration calls from a single source, exceeding a static threshold, is a common pattern for automated scanning and is highly suspicious.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud provider audit logs (CloudTrail, etc.)
      - Identity and access management (IAM) services
      - Network flow log collectors (e.g., Zeek sensors at internet egress)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          COUNT enumeration_api_calls BY source_ip, user
          OVER a 5-minute window
          WHERE count > 1000
          ALERT
  - question: Has any identity performed a number of enumeration API calls that significantly exceeds their own historical baseline?
    context: This question provides a more tailored approach to rate-based detection. Instead of a single static threshold for everyone, it compares an identity's current activity to their own past behavior. This helps identify what is anomalous for a specific user or service account, reducing false positives from normally 'chatty' accounts.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud provider audit logs (CloudTrail, etc.)
      - Identity and access management (IAM) services
      - Network flow log collectors (e.g., Zeek sensors at internet egress)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user:
            current_count = COUNT enumeration_api_calls IN last 60 minutes
            baseline_99th_percentile = GET_HOURLY_BASELINE(user)
            IF current_count > baseline_99th_percentile:
              ALERT
  - question: Has the total number of enumeration API calls across the entire environment exceeded the statistically forecasted volume?
    context: This question provides a macro-level view of discovery activity. It can detect widespread, distributed enumeration attempts that might not trigger per-user or per-IP alerts. An alert indicates that the overall volume of discovery is higher than what is predicted based on historical patterns for the entire organization.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud provider audit logs (CloudTrail, etc.)
      - Identity and access management (IAM) services
      - Network flow log collectors (e.g., Zeek sensors at internet egress)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          aggregate_count = COUNT all enumeration_api_calls in last minute
          predicted_upper_bound = FORECASTING_MODEL.predict_next_minute()
          IF aggregate_count > predicted_upper_bound:
            ALERT
  - question: Has an identity performed a cloud storage enumeration action for the first time ever (or in the last 90 days)?
    context: This question helps to identify unusual behavior from established accounts or the first actions of a newly compromised account. An identity performing a discovery action for the first time is inherently suspicious, as it deviates from its established behavioral profile and may indicate a change in intent or control.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Cloud audit logs
      - Identity and Access Management (IAM) role/policy configurations
      - Historical user activity databases/look-up tables
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each enumeration_event:
            user = event.user
            is_first_time = CHECK_LOOKUP_TABLE(user, 'enumeration_users_last_90d')
            IF is_first_time:
              ALERT
  - question: Has an identity performed an enumeration action on a resource it has never accessed before?
    context: This question refines the 'first time access' concept. Even if an identity has performed enumeration before, doing so against a completely new and unfamiliar resource (e.g., a finance bucket for an engineering role) is highly anomalous. A Jaccard similarity score of zero indicates that both the action and the target are novel for that user, signaling a significant deviation.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Cloud audit logs
      - Identity and Access Management (IAM) role/policy configurations
      - Historical user activity databases/look-up tables
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each enumeration_event:
            user = event.user
            resource = event.resource_arn
            historical_resources = GET_HISTORICAL_RESOURCES(user)
            IF resource NOT IN historical_resources:
              ALERT
  - question: Is an identity's enumeration activity anomalous when compared to its behavioral peer group?
    context: This question identifies outliers by first grouping similar users together (e.g., all cloud engineers). If one engineer suddenly starts performing significantly more enumeration than their peers, it's a strong anomaly signal. This method is effective at spotting compromised accounts that begin behaving differently from their direct counterparts.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Cloud audit logs
      - Identity and Access Management (IAM) role/policy configurations
      - Historical user activity databases/look-up tables
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          user_clusters = CLUSTER_USERS(iam_roles, api_usage)
          FOR each cluster:
            mean, stddev = CALCULATE_ENUMERATION_STATS(cluster)
            FOR each user in cluster:
              IF user.enumeration_count > (mean + 3 * stddev):
                ALERT
  - question: Did an identity perform enumeration and then quickly follow up with data access, deletion, or permission changes?
    context: This question looks for a classic attack chain 'look, then touch'. An adversary first lists the contents of a storage bucket (discovery) and then immediately acts on what they found (exfiltration, deletion, etc.). Correlating these events in a short time window for the same identity is a very high-fidelity indicator of malicious activity.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud Storage Buckets/Containers
      - Cloud Audit Logs
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          WHEN enumeration_event by user:
            WITHIN 30 minutes:
              IF COUNT(Get*, Delete*, Put* events by same user) > 20:
                ALERT
  - question: Following an enumeration event, did the same identity exfiltrate an anomalously large amount of data?
    context: This question specifically hones in on data exfiltration as the follow-on action. After discovering interesting files via enumeration, an adversary's next step is often to download them. A spike in data egress volume for an identity immediately after they perform discovery is a strong signal of data theft.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud Storage Buckets/Containers
      - Cloud Audit Logs
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          WHEN enumeration_event by user:
            WITHIN 30 minutes:
              egress_volume = SUM(bytes_transferred for user)
              baseline_egress = GET_EGRESS_BASELINE(user)
              IF egress_volume > 99th_percentile(baseline_egress):
                ALERT
  - question: Did a user's sequence of API calls, including an enumeration action, deviate from normal, modeled behavior?
    context: This question uses advanced sequence modeling to understand the entire 'story' of a user's session. Benign sessions have predictable patterns (e.g., list files, read one file, write one file). A model can learn these patterns and flag a session where the sequence of events is improbable, such as a user listing objects and then rapidly trying to access dozens of them, indicating a malicious attack chain.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - Cloud Storage Buckets/Containers
      - Cloud Audit Logs
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user_session (sequence of API calls):
            session_probability = SEQUENCE_MODEL.predict(session)
            IF session_probability is low:
              ALERT