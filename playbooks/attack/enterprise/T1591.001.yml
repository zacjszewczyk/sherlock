name: T1591.001: Determine Physical Locations
id: c7a1c1d0-6b6f-4c5e-8d8a-9c7f0b1a2b3c
description: This playbook addresses the reconnaissance technique of determining an organization's physical locations. It helps investigate if an adversary is actively gathering this information by monitoring connections from known malicious IPs to public web servers, analyzing HTTP requests for scanning behavior, tracking internal DNS queries to geolocation services, auditing access to sensitive files containing location data, and correlating suspicious process chains with network activity.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can we detect if an IP address known for malicious activity is connecting to our public-facing web servers?
    context: This question aims to identify direct reconnaissance attempts from known threat actors. By cross-referencing inbound web traffic with cyber threat intelligence (CTI) feeds, we can generate high-fidelity alerts on connections from IPs that have been previously associated with reconnaissance or other malicious activities, indicating a potential targeted effort.
    answer_sources:
      - Zeek conn.log
      - Network sensors at the internet egress/ingress point (e.g., DMZ)
      - Logs from public-facing web servers and load balancers
      - Cyber Threat Intelligence (CTI) feeds
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: JOIN (SEARCH Zeek conn.log WHERE destination_port IN [80, 443] AND destination_ip IS public_asset) WITH (SEARCH CTI_feed) ON source_ip = malicious_ip
  - question: Is there an anomalous increase in the volume of traffic from known malicious IPs, suggesting a coordinated reconnaissance campaign?
    context: This question moves beyond single-event detection to identify broader campaigns. A sudden spike in the proportion of traffic from malicious sources, compared to a historical baseline, can indicate that the organization is being targeted by a large-scale, automated reconnaissance effort rather than isolated probes.
    answer_sources:
      - Zeek conn.log
      - Network sensors at the internet egress/ingress point (e.g., DMZ)
      - Logs from public-facing web servers and load balancers
      - Cyber Threat Intelligence (CTI) feeds
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: COMPARE (CALCULATE daily_percent_malicious_traffic) WITH (BASELINE of daily_percent_malicious_traffic over last 30 days). ALERT IF daily_percent > 95th_percentile_of_baseline.
  - question: Can we use machine learning to predictively score inbound web connections for their likelihood of being reconnaissance activity?
    context: This question focuses on proactively identifying suspicious connections that may not originate from known malicious IPs. By training a model on various connection features (source ASN, geolocation, time of day, CTI match), we can score every connection, allowing for the detection of novel or previously unseen reconnaissance attempts that rule-based methods might miss.
    answer_sources:
      - Zeek conn.log
      - Network sensors at the internet egress/ingress point (e.g., DMZ)
      - Logs from public-facing web servers and load balancers
      - Cyber Threat Intelligence (CTI) feeds
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: APPLY classification_model ON (Zeek conn.log features: cti_match, asn_owner, geo_ip, time_of_day, conn_frequency). ALERT IF reconnaissance_probability > 0.8.
  - question: Are there any connections to our web servers using User-Agent strings of known reconnaissance tools?
    context: This question seeks to identify the specific tools an adversary might be using. Many reconnaissance and scanning tools (like Nmap, sqlmap, FOCA) use default or identifiable User-Agent strings. Detecting these strings in HTTP logs is a straightforward and effective way to find automated scanning activity targeting public web applications.
    answer_sources:
      - Zeek http.log
      - Public-facing web application servers
      - Web application firewalls (WAFs)
      - Reverse proxy servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH Zeek http.log WHERE user_agent MATCHES ['sqlmap', 'nmap', 'Recon-ng', 'FOCA', 'dirb', 'GoBuster']
  - question: Are any source IPs making a high number of requests to a very limited set of URLs, indicative of automated scanning?
    context: This question helps identify scanning behavior by analyzing request patterns. Automated tools often request the same few URIs repeatedly (e.g., checking for a specific vulnerability or directory), leading to low URI diversity (low entropy). When combined with a high request rate, this pattern is a strong indicator of a brute-force or enumeration attack, distinguishing it from normal user browsing.
    answer_sources:
      - Zeek http.log
      - Public-facing web application servers
      - Web application firewalls (WAFs)
      - Reverse proxy servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each source_ip: CALCULATE shannon_entropy(requested_uris) and request_count over 5_min_window. ALERT IF entropy < 5th_percentile AND request_count > 95th_percentile.
  - question: Is there a statistically significant and anomalous spike in traffic volume to our web applications?
    context: This question aims to detect sudden floods of requests that deviate from normal, predictable traffic patterns. By modeling the typical daily and weekly rhythms of a web application, a time series model can accurately forecast expected traffic. A significant deviation from this forecast suggests an unusual event, such as a denial-of-service attack or a large-scale reconnaissance scan.
    answer_sources:
      - Zeek http.log
      - Public-facing web application servers
      - Web application firewalls (WAFs)
      - Reverse proxy servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: APPLY time_series_model ON (http_requests_per_minute). ALERT IF observed_volume > forecasted_upper_bound. ENRICH alert with top_requested_uris.
  - question: Is an internal host rapidly connecting to an unusual number of external geolocation or mapping services?
    context: This question helps detect when an internal, potentially compromised host is being used to gather external information about the organization's physical footprint. Normal user behavior typically involves interacting with one or two mapping services at a time. A burst of connections to many different services in a short period is highly suspicious and could indicate an automated script gathering data.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internal DNS resolvers
      - Network traffic from user subnets
      - Egress filtering points
      - Web proxy logs
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH Zeek dns.log and conn.log WHERE domain IN location_watchlist. GROUP BY internal_host. ALERT IF count(unique_domains) > 10 within 1_hour.
  - question: Is any internal host exhibiting a statistically significant deviation from its own normal behavior regarding connections to location-based services?
    context: This question focuses on detecting behavioral changes on a per-host basis. Instead of using a static threshold, this approach establishes what is normal for each specific host. A high Z-score indicates that the host's activity (e.g., number of queries to mapping sites or data sent) is a major outlier compared to its own history, flagging a potential compromise or insider threat.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internal DNS resolvers
      - Network traffic from user subnets
      - Egress filtering points
      - Web proxy logs
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each internal_host: CALCULATE z_score for (daily_dns_queries_to_watchlist) and (daily_bytes_sent_to_watchlist_ips) against 30-day_baseline. ALERT IF z_score > 3.
  - question: Are there any internal hosts whose network behavior related to location services makes them outliers compared to their peers?
    context: This question aims to find outliers by grouping hosts with similar behavior. Most users will form a large 'benign' cluster. Hosts that are performing reconnaissance will have a different pattern of network activity (e.g., more queries, more data sent) and will be isolated into a small, separate cluster by the algorithm, making them easy to identify for investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internal DNS resolvers
      - Network traffic from user subnets
      - Egress filtering points
      - Web proxy logs
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: APPLY clustering_algorithm (DBSCAN) on hosts using features (dns_queries, bytes_sent, unique_ips). FLAG hosts in small, outlier clusters for investigation.
  - question: Has any user account accessed multiple sensitive files containing location information in a short period of time?
    context: This question seeks to detect a "smash and grab" of sensitive location data. By pre-tagging files containing keywords like 'blueprint' or 'address list' and enabling auditing, we can create a high-fidelity alert when a user rapidly accesses several of them. This behavior is highly indicative of an attempt to quickly exfiltrate key physical location intelligence.
    answer_sources:
      - Windows Event ID 4663
      - File servers hosting Facilities, Security, or HR data
      - SharePoint sites for corporate planning
      - Domain Controllers for audit policies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH Windows Event ID 4663 WHERE file_path IS tagged_as_sensitive. GROUP BY user. ALERT IF count(unique_files) > 3 within 10_minutes.
  - question: Is a user accessing sensitive location files far more frequently than is normal for them and for their peer group?
    context: This question provides a powerful method for detecting insider threats or compromised accounts by using dual baselines. An alert is only triggered if the activity is anomalous for the *individual* (they don't normally do this) AND anomalous for their *peer group* (their colleagues don't do this either). This reduces false positives from users whose jobs legitimately require frequent access.
    answer_sources:
      - Windows Event ID 4663
      - File servers hosting Facilities, Security, or HR data
      - SharePoint sites for corporate planning
      - Domain Controllers for audit policies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each user: COMPARE daily_access_count_to_sensitive_files WITH (99th_percentile of user_baseline) AND (99th_percentile of peer_group_baseline). ALERT IF daily_count > both_percentiles.
  - question: Can we model the 'normal' file access patterns for users who legitimately handle location data and detect any significant deviations?
    context: This question addresses the challenge of monitoring users who are expected to access sensitive data. By training a model (like an Isolation Forest) on the normal access patterns of a specific group (e.g., the Facilities team), we can detect subtle anomalies in their behavior, such as accessing files at an unusual time of day or accessing a strange combination of documents, which might indicate a compromised account.
    answer_sources:
      - Windows Event ID 4663
      - File servers hosting Facilities, Security, or HR data
      - SharePoint sites for corporate planning
      - Domain Controllers for audit policies
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: APPLY anomaly_detection_model (One-Class SVM) on file_access_patterns (time_of_day, file_count, frequency) for specific user_group. ALERT on events flagged as outliers.
  - question: Has a common application like Word or PowerShell spawned a process that immediately accessed location-related websites or files?
    context: This question aims to detect a common attack chain where a malicious document or script (e.g., a macro in Word) executes code to perform reconnaissance. Correlating a process spawn from a non-standard parent (like an Office app) with immediate network connections to mapping sites or access to sensitive location files provides strong evidence of a malicious payload execution.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - User endpoints
      - Critical application servers
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CORRELATE (Event ID 4688 where parent_process IN ['winword.exe', 'excel.exe', 'powershell.exe']) with (Zeek conn.log to location_watchlist OR Event ID 4663 to sensitive_file) within 60_seconds on same host.
  - question: Has a statistically rare chain of process and network events occurred on an endpoint?
    context: This question focuses on identifying suspicious activity by its rarity. Most process and network activity is repetitive and predictable. By building a probabilistic model of common event chains (e.g., 'chrome.exe' connects to 'google.com'), we can flag any chain that has never, or very rarely, been seen before. A rare chain involving location services is highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - User endpoints
      - Critical application servers
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CALCULATE probability of (parent_process -> child_process -> network_destination) chain from historical data. ALERT IF observed_chain_in_realtime has probability < 0.001%.
  - question: Can we use graph analysis to detect anomalous behavioral paths involving processes, files, and network destinations?
    context: This question leverages graph theory to visualize and analyze complex chains of events. By representing system activity as a graph, we can move beyond simple correlations to identify complex, multi-step attack paths. An algorithm can then find paths that are structurally different from the thousands of benign paths observed daily, such as an unusual sequence like `winword.exe -> powershell.exe -> maps.googleapis.com`, which would be a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek conn.log
      - User endpoints
      - Critical application servers
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: BUILD behavior graph with nodes (process, file, network_dest) and edges (spawn, access, connect). APPLY graph anomaly detection to find rare paths like (winword.exe -> powershell.exe -> maps.googleapis.com).