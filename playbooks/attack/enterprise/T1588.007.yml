name: T1588.007: Artificial Intelligence
id: 0d1b3e9a-7f6c-4d5e-8b2a-9c0f1e8d7a6b
description: This playbook helps investigate if an adversary is developing resources using Artificial Intelligence to support future operations. It looks for indicators such as communication with known AI-driven campaign infrastructure, execution of scripts with characteristics of AI-generated code, connections to algorithmically generated domains, use of multi-layered script obfuscation, rapid creation of algorithmically named files, and automated, non-human browsing behavior for information gathering.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Are internal hosts communicating with network indicators or receiving emails from senders known to be associated with AI-driven campaigns?
    context: This question aims to detect direct interaction with adversary infrastructure identified by threat intelligence. A match indicates a potential compromise or targeting by a campaign leveraging AI-generated content for phishing or C2 communications.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek smtp.log
      - Zeek http.log
      - Internet Gateway
      - Email Gateway
      - DNS Resolvers
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH network_logs OR email_logs WHERE destination_ip OR destination_domain OR sender_domain IN (ai_campaign_threat_feed) RETURN host, destination, sender, timestamp
  - question: Are internal systems connecting to an unusually high number of newly registered domains, which could be part of an AI-generated malicious infrastructure?
    context: Adversaries often use newly registered domains (NRDs) for their campaigns. AI can be used to generate and register these domains at scale. Monitoring for a spike in connections to NRDs helps detect the setup or execution phase of such campaigns.
    answer_sources:
      - Zeek dns.log
      - Internet Gateway
      - DNS Resolvers
      - WHOIS data
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH dns_logs | CALCULATE domain_age | COUNT connections to domains WHERE age < 30_days GROUP BY day | ALERT IF daily_count > 95th_percentile_of_90_day_baseline
  - question: Are we receiving phishing emails that exhibit characteristics of being generated by an AI model?
    context: AI can be used to create highly convincing and personalized phishing emails at scale. This question focuses on using a machine learning model to detect the subtle linguistic and structural artifacts of AI-generated text in emails, which may bypass traditional signature-based filters.
    answer_sources:
      - Zeek smtp.log
      - Email Gateway
      - ML classification model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each incoming_email | SCORE email_content with AI_phishing_classifier | IF score > 0.85 THEN ALERT and investigate
  - question: Are scripts being executed or transferred on the network that contain signatures of AI code generation tools?
    context: AI code assistants leave identifiable traces, such as specific comments ('Generated by...') or unique structural patterns. This question uses YARA rules to scan for these specific artifacts, providing a high-fidelity signal that AI-generated code is present.
    answer_sources:
      - Windows Event ID 4104
      - Windows Event ID 4688
      - Zeek files.log
      - User Workstations
      - Application Servers
      - Development Environments
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH script_logs (WEVT 4104) OR file_transfer_logs (Zeek files.log) | SCAN script_content with AI_code_generator_YARA_rules | ALERT on match
  - question: Are we observing executed scripts with unusually high complexity and comment ratios, which could indicate AI-generated code?
    context: AI-generated code can sometimes be overly complex or excessively commented compared to human-written scripts. By baselining normal script metrics (AST complexity, comment ratio) and looking for significant outliers, we can uncover potentially malicious AI-generated scripts that don't have obvious string-based indicators.
    answer_sources:
      - Windows Event ID 4104
      - User Workstations
      - Application Servers
      - Development Environments
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each script_block_log (WEVT 4104) | CALCULATE ast_complexity and comment_ratio | IF ast_complexity > 98th_percentile AND comment_ratio > 98th_percentile THEN ALERT
  - question: Can we use a specialized machine learning model to identify executed scripts that are likely to have been generated by AI?
    context: This question involves a sophisticated detection method using a fine-tuned NLP model to analyze the semantic and structural properties of code. This can detect novel or subtle AI generation techniques that signature or simple heuristic-based methods might miss.
    answer_sources:
      - Windows Event ID 4104
      - User Workstations
      - Application Servers
      - Development Environments
      - NLP transformer model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each script_block_log (WEVT 4104) | CLASSIFY script_content with AI_code_classifier_model | IF probability(AI_generated) > high_threshold THEN ALERT
  - question: Are hosts querying newly registered domains under suspicious TLDs often used for malicious activities?
    context: Adversaries, potentially using AI for automation, frequently use cheap, disposable domains under specific TLDs (.xyz, .top, etc.). Combining the suspicious TLD with the "newly registered" attribute creates a strong signal for potentially malicious infrastructure.
    answer_sources:
      - Zeek dns.log
      - DNS Resolvers
      - Web Proxy
      - Internet Gateway
      - WHOIS data
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH dns_logs | FILTER tld IN (suspicious_tld_list) AND domain_age < 30_days | ALERT on match
  - question: Are hosts connecting to domains with names that appear algorithmically generated (either very random or highly repetitive)?
    context: Domain Generation Algorithms (DGAs) are often used to create a large number of C2 domains. AI can enhance these DGAs. These generated domain names often have unusually high (random characters) or low (repetitive patterns) entropy compared to human-created domains. Measuring entropy helps to spot these outliers.
    answer_sources:
      - Zeek dns.log
      - DNS Resolvers
      - Web Proxy
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each new_domain in dns_logs | CALCULATE shannon_entropy(domain_name) | IF entropy > 95th_percentile OR entropy < 5th_percentile THEN ALERT
  - question: Are we observing domains that receive a sudden, short-lived burst of DNS queries before disappearing, indicative of automated malicious activity?
    context: AI-driven attacks may use domains for a very short period to evade reputation-based blocking. This "flash-in-the-pan" behavior—a sudden spike in traffic followed by silence—is anomalous and can be detected by time-series analysis of DNS query volumes.
    answer_sources:
      - Zeek dns.log
      - DNS Resolvers
      - Web Proxy
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL dns_query_volume per domain over time | DETECT anomalies where volume spikes and then drops to zero | ALERT on anomalous 'flash-in-the-pan' domains
  - question: Are PowerShell scripts being executed that contain common keywords or patterns associated with obfuscation?
    context: Adversaries use obfuscation to hide malicious code from static analysis. AI can be used to generate complex, layered obfuscation. Searching for known obfuscation indicators like 'IEX' or '-encodedcommand' is a fundamental step in detecting malicious PowerShell activity.
    answer_sources:
      - Windows Event ID 4104
      - Windows Event ID 4688
      - User Workstations
      - Domain Controllers
      - Critical Servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH powershell_script_logs (WEVT 4104) | FILTER script_content contains ('IEX', '-encodedcommand', 'FromBase64String') | ALERT on high frequency or multiple layers
  - question: Are we seeing executed scripts that are highly compressed or have high entropy, suggesting they are packed or obfuscated?
    context: Obfuscated or encrypted code lacks the repetitive patterns of normal text or code, resulting in high entropy and poor compression ratios. This statistical approach can identify obfuscated scripts without relying on specific keywords, making it effective against novel obfuscation techniques.
    answer_sources:
      - Windows Event ID 4104
      - User Workstations
      - Domain Controllers
      - Critical Servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each script_block_log (WEVT 4104) | CALCULATE compression_ratio(script_content) | IF ratio < 5th_percentile_of_baseline THEN ALERT
  - question: Can a machine learning classifier identify scripts that are likely obfuscated based on a combination of statistical features?
    context: This question proposes a more advanced, ML-based approach to obfuscation detection. By training a model on various features (string lengths, API call frequency, entropy), it can learn the complex patterns of obfuscated code and provide a probabilistic score, improving detection accuracy and reducing false positives.
    answer_sources:
      - Windows Event ID 4104
      - User Workstations
      - Domain Controllers
      - Critical Servers
      - ML classification model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each script_block_log (WEVT 4104) | EXTRACT features (string_lengths, api_freq, entropy) | SCORE with obfuscation_classifier_model | IF score > high_threshold THEN ALERT
  - question: Is any single process rapidly creating an unusually large number of script or executable files?
    context: This behavior is characteristic of a dropper or a packer unpacking its payload. A legitimate process is unlikely to create numerous executables in a short time frame. This rule provides a simple but effective heuristic for detecting such malicious activity.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Development Servers
      - User Workstations
      - Build Systems
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH file_creation_logs (Sysmon 11) | COUNT created_executables by parent_process (Sysmon 1), host, 5_minute_window | ALERT IF count > 10
  - question: Is there a spike in the creation of files with random-looking, high-entropy names on any host?
    context: AI or other programmatic tools may be used to generate payloads with randomized filenames to evade signature-based detection. Monitoring for a statistical anomaly in the creation rate of high-entropy files can reveal this tactic.
    answer_sources:
      - Sysmon Event ID 11
      - Development Servers
      - User Workstations
      - Build Systems
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH file_creation_logs (Sysmon 11) | CALCULATE filename_entropy | COUNT high_entropy_files per host, per day | IF daily_rate > (30_day_moving_average + 3 * std_dev) THEN ALERT
  - question: Can we identify anomalous clusters of process and file activity involving high-entropy filenames that might indicate a coordinated malicious event?
    context: A malicious tool might create several random-looking files and processes in a short burst. A clustering algorithm can automatically group these related events together based on time, host, and parent process, highlighting the entire scope of the suspicious activity for an analyst, which might otherwise appear as disconnected events.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Development Servers
      - User Workstations
      - Build Systems
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CLUSTER process_events (Sysmon 1) and file_events (Sysmon 11) by host, time | IDENTIFY dense clusters involving high_entropy_filenames from non-standard parent_processes | ALERT on identified clusters
  - question: Are any hosts using scripting tools (not web browsers) to perform high-volume web scraping of public information sources?
    context: Adversaries use automated scripts to gather information from sources like GitHub, Pastebin, or search engines to find vulnerabilities or gather intelligence. This question looks for the characteristic signature of this activity a high request rate from a non-browser user-agent.
    answer_sources:
      - Zeek http.log
      - Internet Gateway
      - Web Proxy
      - User Subnets
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH http_logs | FILTER user_agent IN ('python-urllib', 'curl', 'wget') AND destination IN (search_engines, code_repos, paste_sites) | COUNT requests by source_ip, 1_hour_window | ALERT IF count > 100
  - question: Are hosts making web requests with unusually random or complex query parameters or server names, suggesting automated or programmatic browsing?
    context: AI-driven or automated tools may generate complex, high-entropy data within URI queries or SNI fields for C2 communication or data exfiltration. Baselining normal entropy levels and flagging significant deviations can uncover this covert channel.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Internet Gateway
      - Web Proxy
      - User Subnets
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_ip | CALCULATE entropy of (uri_queries, sni_names) in 10_minute_windows | IF average_entropy > 99th_percentile_of_baseline THEN ALERT
  - question: Are any hosts exhibiting machine-like browsing patterns with unnaturally regular or periodic timing between web requests?
    context: Human browsing is typically bursty and irregular. Automated tools, in contrast, often make requests at fixed or predictable intervals. A time-series model can learn the pattern of normal human activity and flag sessions that exhibit machine-like periodicity, indicating potential bot or scraping activity.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet Gateway
      - Web Proxy
      - User Subnets
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL inter-request_timing for each source_ip | DETECT sessions with periodic or non-human timing patterns | ALERT on anomalous sessions