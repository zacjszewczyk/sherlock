name: T1555.005: Password Managers
id: 54b42b26-1d11-4b1f-99a3-5a02e5b0b3d8
description: This playbook helps investigate whether an adversary is accessing credentials stored in password managers. It covers scenarios such as the execution of known credential theft tools, memory dumping of password manager processes, unauthorized access to password database files, anomalous process relationships involving password managers, and the exfiltration of data following access to a password database.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any executed processes matched known password-stealing malware, or have any network connections been made to known malicious C2 or exfiltration domains?
  context: This question uses symbolic detection to find high-confidence indicators of compromise. By continuously matching process hashes and network destinations against threat intelligence feeds and blocklists, analysts can quickly identify the use of known password theft tools or exfiltration channels associated with credential access campaigns.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - User and administrator workstations, network egress points, DNS and proxy servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH process_creation_events (WinEventID:4688)
      WHERE process_hash IN (threat_intel_feed_malware_hashes)
      RETURN hostname, process_name, process_hash

      SEARCH network_logs (Zeek conn.log, Zeek dns.log)
      WHERE destination_ip IN (blocklist_ips) OR destination_domain IN (blocklist_domains)
      RETURN source_ip, destination_ip, destination_domain
- question: Have any rare, unsigned executables been run, or have any DNS queries shown high entropy indicative of Domain Generation Algorithms (DGA)?
  context: This question applies statistical analysis to uncover suspicious activity that may not match known signatures. Rare, unsigned executables are often indicative of custom malware or living-off-the-land tools. High-entropy domain names are a common characteristic of DGA used by malware for C2 communications, suggesting a potential exfiltration channel for stolen credentials.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - User and administrator workstations, network egress points, DNS and proxy servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH process_creation_events
      CALCULATE prevalence of process_hash across enterprise
      FILTER where prevalence < 1% AND is_signed = false
      RETURN hostname, process_name, process_hash

      SEARCH dns_logs (Zeek dns.log)
      CALCULATE shannon_entropy(dns_query)
      FILTER where entropy > 3.5
      RETURN source_ip, dns_query, entropy_score
- question: Can machine learning models identify potentially malicious processes or anomalous spikes in outbound data transfer?
  context: This question leverages machine learning to detect novel or complex threats. A classifier trained on process metadata can identify suspicious behavior that evades rule-based detections. A time-series model can baseline normal outbound data volumes for each host and flag sudden, anomalous increases that could represent the exfiltration of a stolen password database.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - User and administrator workstations, network egress points, DNS and proxy servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      INPUT process_events (parent_process, cmd_length, signature_status) INTO logistic_regression_model
      ALERT on events with high probability_of_malice

      INPUT outbound_data_volume_per_host INTO time_series_anomaly_model
      ALERT on hosts where volume significantly exceeds forecasted_baseline
- question: Has a known memory dumping utility been executed with a password manager process as its target?
  context: This question seeks to identify direct attempts to dump the memory of a password manager process to extract stored credentials. Adversaries use utilities like procdump.exe or comsvcs.dll to capture the memory space of applications like KeePass.exe or 1Password.exe, where credentials may be stored in cleartext. A symbolic rule can detect this specific and highly suspicious command-line pattern.
  answer_sources:
  - Windows Event ID 4688
  - User and administrator workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH process_creation_events (WinEventID:4688)
      WHERE process_name IN (known_memory_dumpers) AND command_line CONTAINS (known_password_manager_processes)
      RETURN hostname, process_name, command_line
- question: Have any administrative tools been invoked with highly unusual argument patterns when targeting a password manager?
  context: This question uses statistical analysis to find anomalous command-line activity. Adversaries may use legitimate tools in unusual ways to dump memory or access files. By baselining normal command-line argument patterns for administrative tools and calculating the similarity of new commands, analysts can flag novel or suspicious invocations that deviate from established norms.
  answer_sources:
  - Windows Event ID 4688
  - User and administrator workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH process_creation_events for administrative_tools
      TOKENIZE command_line_arguments
      CALCULATE Jaccard similarity between new_token_set and historical_baseline_for_tool
      FILTER where similarity_score < 0.2
      RETURN hostname, process_name, command_line, similarity_score
- question: Can a Natural Language Processing (NLP) model classify the intent of command lines as malicious, or can clustering identify outlier commands?
  context: This question applies machine learning to command-line analysis to detect sophisticated attacks. An NLP model can be trained to recognize the semantic patterns of malicious commands, including obfuscation. Alternatively, clustering algorithms like DBSCAN can group all historical command lines for a given tool, automatically identifying rare and anomalous outliers that may represent malicious usage.
  answer_sources:
  - Windows Event ID 4688
  - User and administrator workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      INPUT command_line_string INTO transformer_nlp_model
      ALERT where classification is 'malicious' or 'suspicious'

      CLUSTER command_line_strings using DBSCAN
      ALERT on commands identified as noise/outliers
- question: Has a password manager database file been accessed by a process that is not the password manager itself or an approved utility?
  context: This question aims to detect unauthorized access to the sensitive files where password managers store their encrypted credential vaults (e.g., *.kdbx). By monitoring file access events and comparing the accessing process against an allowlist of legitimate applications, analysts can identify when a potentially malicious process is attempting to steal the database for offline cracking or exfiltration.
  answer_sources:
  - Windows Event ID 4663
  - User workstations, file servers, or shared drives where password databases are stored
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH file_access_events (WinEventID:4663)
      WHERE file_path ENDS WITH (password_db_extensions) AND process_name NOT IN (approved_process_list)
      RETURN hostname, process_name, file_path
- question: Have there been statistically unusual access patterns to password manager database files, such as access by a rare process or a sudden burst of activity?
  context: This question uses statistical methods to identify anomalous access to password vaults. A process that has rarely or never accessed a password database before may be suspicious. Additionally, a rapid succession of access events from a single host could indicate an automated discovery script scanning the system for credential files.
  answer_sources:
  - Windows Event ID 4663
  - User workstations, file servers, or shared drives where password databases are stored
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH file_access_events for password_db_files
      PROFILE historical access frequency per process
      ALERT on access by process in lowest percentile (<1%)

      AGGREGATE access_events by hostname per minute
      ALERT where event_count > 10 in 1 minute
- question: Can a machine learning model detect anomalous access events to password manager database files?
  context: This question leverages an anomaly detection model to identify suspicious file access that might be missed by rules or simple statistics. An Isolation Forest model can be trained on features of normal access (e.g., process name, parent process, user, time of day) and then score new events, flagging outliers that deviate significantly from the established baseline of legitimate activity.
  answer_sources:
  - Windows Event ID 4663
  - User workstations, file servers, or shared drives where password databases are stored
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      INPUT file_access_events (process, parent_process, user, time) INTO isolation_forest_model
      ALERT on events with high anomaly_score
- question: Have any anomalous parent-child process relationships involving a password manager been observed?
  context: This question seeks to identify suspicious process chains. A password manager being launched by an unusual parent (like a Microsoft Office application) could indicate code execution from a malicious document. Conversely, a password manager spawning a command shell (like powershell.exe) is highly irregular and could be a sign of compromise or post-exploitation activity.
  answer_sources:
  - Windows Event ID 4688
  - User workstations and servers with password managers installed
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH process_creation_events (WinEventID:4688)
      WHERE (parent_process IN (office_apps) AND child_process IN (password_managers)) OR (parent_process IN (password_managers) AND child_process IN (shells))
      RETURN hostname, parent_process, child_process
- question: Have any statistically rare parent-child process relationships involving a password manager occurred?
  context: This question uses statistical analysis to find novel or uncommon process relationships that may not be covered by explicit rules. By building a historical baseline of all parent-child process pairs in the environment, analysts can flag any new pairing involving a password manager that is statistically improbable, which could indicate a new or evasive attack technique.
  answer_sources:
  - Windows Event ID 4688
  - User workstations and servers with password managers installed
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH process_creation_events (WinEventID:4688)
      WHERE child_process IN (password_managers) OR parent_process IN (password_managers)
      CALCULATE historical frequency of (parent_process, child_process) pair
      ALERT where frequency < 5 in last 90 days
- question: Can a graph-based machine learning model identify anomalous process trees involving password managers?
  context: This question applies advanced machine learning to detect suspicious process behavior. By modeling all process creation events as a large-scale graph, algorithms can learn the normal context and ancestry of every process. This allows the detection of anomalous "edges" (parent-child links) where a password manager appears in an unexpected part of the process graph, indicating a potential compromise.
  answer_sources:
  - Windows Event ID 4688
  - User workstations and servers with password managers installed
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      MODEL process_creation_events as a directed graph
      INPUT graph INTO graph_anomaly_detection_model (e.g., GraphSAGE)
      ALERT on anomalous edges or subgraphs involving password_manager_nodes
- question: Has a process, after accessing a password database file, initiated a network connection to a destination not on an approved list?
  context: This question correlates file access with network activity to detect data exfiltration. A process that reads a password database and immediately makes an outbound network connection to an unknown or unauthorized server is a strong indicator that an adversary is stealing the credential vault. This requires correlating events from different data sources within a short time window.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Windows Event ID 4663
  - User workstations, network egress points, file servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH file_access_events (WinEventID:4663) for password_db_files
      CORRELATE with network_connection_events (WinEventID:5156, Zeek) from same process_id and host within 5 minutes
      WHERE destination_ip OR destination_domain NOT IN (approved_sync_servers)
      ALERT on correlated events
- question: After accessing a password database, did a process transfer an anomalously large volume of data or exhibit a high outbound-to-inbound data ratio?
  context: This question uses statistical network baselines to detect exfiltration. Legitimate password manager sync operations typically involve small, predictable amounts of data. A sudden, large outbound data transfer or a connection where the outbound data volume is significantly higher than the inbound volume, shortly after accessing the database, is highly suspicious and could indicate theft of the entire vault.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Windows Event ID 4663
  - User workstations, network egress points, file servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      CORRELATE file_access_events with network_events as above
      BASELINE outbound_bytes per process
      ALERT where outbound_bytes > 95th_percentile

      CALCULATE outbound_bytes / inbound_bytes ratio
      ALERT where ratio > (mean_ratio + 3 * std_dev)
- question: Can a machine learning model identify anomalous network connections made by password manager processes or detect unusual daily data exfiltration volumes?
  context: This question uses machine learning for advanced exfiltration detection. A one-class SVM can learn the multi-faceted profile of a legitimate network connection (port, ASN, volume, etc.) and flag outliers. Separately, a time-series forecasting model can predict the expected daily data transfer for a host, allowing it to flag days where the actual volume is significantly higher than forecasted, suggesting a large-scale data theft event.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Windows Event ID 4663
  - User workstations, network egress points, file servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: |
      INPUT network_connection_features INTO one_class_svm_model
      ALERT on connections identified as outliers

      INPUT daily_outbound_volume_per_host INTO prophet_forecasting_model
      ALERT where actual_volume > forecasted_upper_bound