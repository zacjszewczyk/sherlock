name: T1070.004: File Deletion
id: f8a9b1c2-d3e4-4f5a-6b7c-8d9e0f1a2b3c
description: This playbook helps investigate whether an adversary is attempting to evade defenses by deleting files to cover their tracks. It focuses on identifying various file deletion techniques, such as the removal of files with known malicious hashes, the use of secure deletion utilities like `sdelete.exe` or native commands like `cipher /w:`, and the 'execute-then-delete' pattern where a payload is run and immediately removed. The playbook also addresses detecting anomalous volumes of file deletions from a single process or user, especially targeting log or evidence files, and the pattern of downloading an executable from the network and deleting it shortly thereafter. The goal is to uncover attempts to hide malware, tools, or other traces of an intrusion.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a file with a known malicious hash been deleted from a monitored system?
    context: This question seeks to identify the most direct evidence of malicious file deletion. Adversaries often use known malware or tools which are then deleted to hide their presence. Matching a deleted file's hash against a high-confidence threat intelligence feed provides a strong signal that malicious activity has occurred, requiring immediate investigation.
    answer_sources:
      - Windows Event ID 4663
      - EDR file monitoring logs
      - Threat Intelligence Feed
      - User Workstations
      - Critical Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_deletion_events | EXTRACT file_hash | JOIN file_hash with threat_intelligence_hashes | WHERE match_found | ALERT
  - question: Was a known malicious file deleted by a rare or uncommon parent process?
    context: This question adds context to the deletion of a malicious file. A deletion initiated by a process not widely seen in the environment could indicate a custom tool or a process specifically spawned by the attacker for cleanup, increasing the severity and priority of the event.
    answer_sources:
      - Windows Event ID 4663
      - EDR file monitoring logs
      - Threat Intelligence Feed
      - User Workstations
      - Critical Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_deletion_events with malicious_hash | CALCULATE parent_process_prevalence over 30d | CALCULATE risk_score = 1 / prevalence | ALERT if risk_score > 99th_percentile
  - question: Does a file deletion event exhibit a combination of features that a machine learning model classifies as highly indicative of malicious activity?
    context: This question leverages a machine learning model to identify subtle or complex patterns that simple rules might miss. By considering multiple features simultaneously—such as file reputation, parent process rarity, file path entropy, and file lifespan—the model can score the event's likelihood of being malicious.
    answer_sources:
      - Windows Event ID 4663
      - EDR file monitoring logs
      - Threat Intelligence Feed
      - User Workstations
      - Critical Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT file_deletion_event_features to ML_Model | FEATURES ti_match, parent_process_prevalence, file_path_entropy, file_lifespan | ALERT if model_score > 0.9
  - question: Is a process being created that uses a known secure deletion utility or anti-forensic command?
    context: This question looks for the explicit use of tools and commands designed to securely erase data or clear logs, which is a strong indicator of an adversary attempting to cover their tracks. Identifying commands like 'sdelete', 'cipher /w:', or 'wevtutil cl' provides direct evidence of defense evasion.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events | WHERE command_line contains ('sdelete', 'cipher /w:', 'wevtutil cl', 'del *.log') | ALERT
  - question: Is there a statistically significant increase in the daily count of deletion-related commands on any single host?
    context: This question aims to detect anomalous behavior by establishing a baseline of normal administrative activity. A sudden spike in the use of deletion commands on a host, exceeding its typical pattern by a significant margin (e.g., 3 standard deviations), suggests a potential cleanup operation by an adversary.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host | CALCULATE 30-day_baseline (mean, stddev) of deletion_command_counts | ALERT if daily_count > (mean + 3 * stddev)
  - question: Has a time-series anomaly detection model identified an unexpected spike in the enterprise-wide usage of specific cleanup utilities?
    context: This question uses a machine learning model to find unusual patterns at a macro level. An unexpected, enterprise-wide surge in the use of tools like 'wevtutil.exe' or 'sdelete.exe' could indicate a coordinated, widespread cleanup effort by an attacker, which might be missed when only looking at individual hosts.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT hourly_frequency of ('wevtutil.exe', 'cipher.exe', 'sdelete.exe') to time_series_model | ALERT on detected anomalies
  - question: Has a file been executed and then deleted within a very short time frame (e.g., under 5 minutes)?
    context: This question targets the common adversary tactic of 'living off the land' or deploying a payload, executing it, and then immediately deleting it to minimize the forensic footprint. This 'execute-then-delete' sequence is highly suspicious, especially when initiated by common scripting engines or browsers.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - EDR file creation logs
      - User Workstations
      - Staging Servers
      - Public-facing Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN process_creation and file_deletion events by hostname and file_path | WHERE time_delta < 5 minutes | ALERT
  - question: Has an 'execute-then-delete' sequence occurred where the time delta is unusually short and the parent process is rare?
    context: This question refines the 'execute-then-delete' detection by adding statistical context. An extremely fast deletion, combined with a parent process that is uncommon in the environment, significantly increases the likelihood that the activity is malicious and not part of a legitimate software installation or update process.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - EDR file creation logs
      - User Workstations
      - Staging Servers
      - Public-facing Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FIND execute_then_delete_sequences | CALCULATE time_delta and parent_process_rarity | SCORE event based on delta and rarity | ALERT on top scores
  - question: Has a sequence analysis model flagged a series of host events containing an 'execute-delete' pattern as anomalous?
    context: This question uses an advanced machine learning model (like an LSTM) to understand the normal 'rhythm' of activity on a host. When a sequence of events, such as file creation, process execution, and file deletion, deviates from this learned normal behavior, it is flagged as an anomaly, pointing to a potential intrusion.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - EDR file creation logs
      - User Workstations
      - Staging Servers
      - Public-facing Web Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT stream of host_events to sequence_analysis_model | ALERT if reconstruction_error for 'execute-delete' sequence is high
  - question: Has a single process ID generated a massive number of file deletions for log or evidence files in a short time window?
    context: This question looks for brute-force cleanup attempts. A process deleting hundreds of files with extensions like '.log' or '.evtx' within a few minutes is a clear and high-confidence indicator of an adversary trying to erase their tracks from system and application logs.
    answer_sources:
      - Windows Event ID 4663
      - File Servers
      - User Workstations
      - Domain Controllers
      - Log Aggregation Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: AGGREGATE file_deletion_events by ProcessID over 5 mins | WHERE file_path matches ('*.log', '*.evtx') | ALERT if count > 500
  - question: Has a user's file deletion behavior suddenly shifted from deleting varied file types to deleting only specific, targeted file types?
    context: This question uses information theory (Shannon entropy) to detect a change in user behavior. A sudden drop in the variety of file extensions being deleted can indicate a shift from normal, random cleanup to a targeted effort to remove specific evidence files, which is a subtle indicator of malicious intent.
    answer_sources:
      - Windows Event ID 4663
      - File Servers
      - User Workstations
      - Domain Controllers
      - Log Aggregation Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each user | CALCULATE hourly entropy of deleted file extensions | COMPARE to 14-day rolling average | ALERT if entropy drops > 50%
  - question: Has a clustering algorithm identified a set of file deletion events as anomalous and not belonging to any normal activity cluster?
    context: This question uses unsupervised machine learning to automatically define 'normal' behavior. By grouping routine deletions (e.g., temp file cleanup), the DBSCAN algorithm can isolate outlier deletion events that do not fit any known pattern, flagging them for analyst review as potentially malicious.
    answer_sources:
      - Windows Event ID 4663
      - File Servers
      - User Workstations
      - Domain Controllers
      - Log Aggregation Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT file_deletion_events to DBSCAN_model | FEATURES user, parent_process, directory | ALERT on events classified as noise/outliers
  - question: Has an executable file been downloaded from the network and then deleted from the host within an hour?
    context: This question links network activity to host-based actions to identify a common malware delivery and execution pattern. Observing an executable being downloaded and then quickly deleted from the filesystem is highly indicative of an adversary trying to run a payload while minimizing its persistence.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Ingress Points
      - DNS Servers
      - User Workstations
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN network_download_logs with host_deletion_logs on IP and filename | WHERE mime_type is executable | ALERT if deletion_time is within 1 hour of download_time
  - question: Has a downloaded executable with an unusually short lifespan on disk originated from a rare or new domain?
    context: This question adds layers of statistical risk to the 'download-then-delete' pattern. A file that is deleted very quickly is suspicious, but if it was downloaded from a domain that is rarely visited across the enterprise, the likelihood of it being malicious increases substantially, meriting a higher-priority alert.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Ingress Points
      - DNS Servers
      - User Workstations
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FIND download_delete_events | CALCULATE file_lifespan and source_domain_prevalence | ALERT if lifespan is in bottom 5th percentile and domain prevalence is in bottom 10%
  - question: Does a graph-based machine learning model classify a 'download-execute-delete' event sequence as malicious?
    context: This question uses a sophisticated Graph Neural Network (GNN) to analyze the complex relationships between network and host artifacts (IPs, domains, hashes, processes). By learning what malicious activity 'looks like' as a graph, the model can classify new event sequences as malicious based on a holistic view of their attributes and connections.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Ingress Points
      - DNS Servers
      - User Workstations
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CONSTRUCT event_graph with nodes (IP, domain, hash, host) and edges (download, execute, delete) | INPUT subgraph to GNN_model | ALERT if classified as malicious