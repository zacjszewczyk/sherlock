name: T1078.002: Domain Accounts
id: 6c1e8a3b-2b4f-4d9e-9a6a-7b8c9d0e1f2a
description: This playbook focuses on detecting malicious use of valid domain accounts, a technique used by adversaries across multiple phases of an attack. It addresses indicators of initial access, such as logins from malicious IPs, brute-force attacks, and impossible travel scenarios. It also covers persistence mechanisms like C2 beaconing and unauthorized service creation, privilege escalation via group membership changes and command execution, and defense evasion tactics including disabling security controls and clearing logs. The goal is to provide analysts with a comprehensive set of questions and queries to identify when legitimate domain credentials are being abused.
type: technique
related:
  - TA0001: Initial Access
  - TA0003: Persistence
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any domain account authentication attempts originating from IP addresses known to be malicious?
    context: This question aims to detect initial access attempts by cross-referencing the source IP addresses of external authentication events with a threat intelligence feed of known malicious IPs. A match provides a high-confidence signal that an adversary is using a known malicious infrastructure to attempt or successfully gain access.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., ADFS, VPN gateways), Domain Controllers, Cloud identity providers
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH external_auth_logs (EventID 4624, 4625) OR network_flow_logs (Zeek conn.log) | JOIN source_ip WITH threat_intel_feed.ip | ALERT on match
  - question: Are any external IP addresses exhibiting an anomalously high ratio of failed to successful domain account logins?
    context: This question identifies potential brute-force or password spraying attempts from unknown or non-reputed IP addresses. By calculating the failure-to-success ratio and comparing it to a historical baseline, we can spot IPs with statistically significant outlier behavior that may indicate malicious intent, even if the IP is not yet on a threat list.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., ADFS, VPN gateways), Domain Controllers, Cloud identity providers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH auth_logs (EventID 4624, 4625) over 1_hour | GROUPBY source_ip | CALCULATE ratio = count(EventID 4625) / count(EventID 4624) | ALERT where ratio > 99th_percentile_historical_ratio
  - question: Can we predict, based on contextual features, if a new external login attempt is malicious?
    context: This question uses a machine learning approach to proactively identify malicious login attempts. By training a model on various features like IP reputation, geolocation, and time-based patterns, the system can learn the characteristics of both benign and malicious logins, allowing it to predict the nature of new, unseen login attempts with a higher degree of accuracy and context than simple rule-based methods.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., ADFS, VPN gateways), Domain Controllers, Cloud identity providers
      - Passive DNS data
      - IP Geolocation data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: INPUT new_login_event | EXTRACT features (ip_reputation, asn, country, time_of_day, etc.) | PREDICT is_malicious with trained_classifier_model | ALERT if prediction is malicious
  - question: Is a single external IP address attempting to brute-force a single account or password spray multiple accounts?
    context: This question seeks to identify two common initial access patterns: brute-force attacks (many passwords against one account) and password spraying (one password against many accounts). By setting thresholds for failed logins from a single IP against single or multiple accounts within a short time frame, we can detect these automated attacks.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers, Public-facing application servers with AD integration, VPN concentrators
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH failed_logins (EventID 4625) over 5_minutes | GROUPBY source_ip | IF count(failed_logins) > 20 AND distinct_count(target_account) == 1, ALERT "Brute Force" | IF count(failed_logins) > 20 AND distinct_count(target_account) > 20, ALERT "Password Spray"
  - question: Are there any source IPs generating a statistically anomalous number of authentication failures or targeting an unusually high number of distinct accounts?
    context: This question provides a more dynamic way to detect brute-force and password spraying than fixed thresholds. By comparing the rate of failed logins and the number of targeted accounts per IP to the statistical norm (mean and standard deviation), we can identify outliers that represent suspicious activity without relying on predefined magic numbers.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers, Public-facing application servers with AD integration, VPN concentrators
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH failed_logins (EventID 4625) per minute | GROUPBY source_ip | CALCULATE failure_count, distinct_account_count | ALERT where failure_count > (mean + 3*stdev) OR distinct_account_count > (mean + 3*stdev)
  - question: Does the time-series data of authentication failures from any single source IP show an anomalous spike?
    context: This question applies time-series anomaly detection to find sudden, unexpected increases in authentication failures from a single IP. This method is effective at catching bursty attack patterns (like the start of a brute-force) that would stand out from normal, low-level background noise of failed logins.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers, Public-facing application servers with AD integration, VPN concentrators
    range: last 90 days
    queries:
      - tech: pseudocode
        query: INPUT stream of failed_logins (EventID 4625) | SEGMENT by source_ip | APPLY time-series anomaly detection model (e.g., ARIMA) to each stream | ALERT on detected anomaly
  - question: Has a single domain account logged in from two geographically separate locations faster than is physically possible?
    context: This question aims to detect "impossible travel" scenarios, a strong indicator that an account has been compromised and is being used by at least two separate entities. By calculating the speed required to travel between consecutive login locations, we can flag logins that exceed a realistic threshold (e.g., the speed of a commercial airplane).
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, VPN Concentrators, Cloud IAM services
      - IP Geolocation data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each successful_login (EventID 4624) | GET geolocation of source_ip | CALCULATE speed = distance(current_location, previous_location) / time_delta | IF speed > 600 mph, ALERT "Impossible Travel"
  - question: Is the calculated travel speed between a user's consecutive logins a statistical outlier compared to their own or the organization's history?
    context: This question refines the impossible travel detection by creating a personalized or organizational baseline for travel speeds. Instead of a fixed speed limit, this method flags any travel speed that is statistically improbable (e.g., in the 99.9th percentile) for that user or for all users, making it more adaptable to individual travel patterns.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, VPN Concentrators, Cloud IAM services
      - IP Geolocation data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each successful_login | CALCULATE travel_speed | IF travel_speed > 99.9th_percentile of user's historical speeds, ALERT "Anomalous Travel Speed"
  - question: Does a user's new login location represent a spatial outlier when compared to their established clusters of normal activity?
    context: This question uses clustering algorithms to define a user's normal "spheres" of activity (e.g., office, home, common travel cities). A new login that falls outside of these established clusters and cannot be explained by normal travel time is flagged as a spatial anomaly, indicating a potential account compromise.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, VPN Concentrators, Cloud IAM services
      - IP Geolocation data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each user, CLUSTER historical login geolocations (e.g., DBSCAN) | FOR new_login, CHECK if it falls into an existing cluster | IF not, and travel_time is impossible, ALERT "Spatial Outlier"
  - question: Has a user successfully authenticated from a country, ASN, or ISP never before seen for their account, or from a high-risk ASN?
    context: This question establishes a baseline of "normal" login sources (countries, ASNs, ISPs) for each user. A login from a source that is completely new for that user, or one that is inherently risky (like a hosting provider or a Tor exit node), is a strong indicator of a potential compromise.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, VPN Concentrators, Cloud IAM services
      - IP Geolocation/ASN data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each user, MAINTAIN baseline of source_countries, source_asns | FOR new_login, CHECK if source_country or source_asn is new, or if source_asn is high-risk | ALERT on match
  - question: Is a user's successful authentication originating from a location (country/ASN) that is statistically rare for them?
    context: This question moves beyond a simple "new vs. seen" check and scores the rarity of a login's origin. A user might have logged in from a specific country once before on a vacation, but a new login from there is still rare. By flagging logins from locations in the bottom percentile of historical frequency, we can catch unusual activity that isn't strictly "new."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, VPN Concentrators, Cloud IAM services
      - IP Geolocation/ASN data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each user, CALCULATE frequency of logins per country/asn | FOR new_login, CALCULATE rarity_score of its location | IF rarity_score < 5th_percentile, ALERT "Rare Location Login"
  - question: Does a user's login context (country, ASN, time of day) deviate from their normal, modeled behavior?
    context: This question uses an anomaly detection model (like a One-Class SVM) to build a holistic profile of a user's normal login behavior, considering multiple context variables simultaneously. A new login that doesn't fit this multi-dimensional profile is flagged as an anomaly, providing a more robust detection method than looking at each variable in isolation.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, VPN Concentrators, Cloud IAM services
      - IP Geolocation/ASN data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: INPUT new_login_context (country, asn, time_of_day) | PREDICT is_anomaly with user-specific model (e.g., One-Class SVM) | ALERT if anomaly
  - question: Is a host with an active domain account session communicating with a known Command and Control (C2) server?
    context: This question checks for one of the most direct signs of compromise: communication with a known malicious server. By joining network and DNS logs with a C2 threat intelligence feed, we can identify infected hosts that are being used for persistence.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Network egress points, DNS resolvers, Endpoint workstations, Internal network sensors
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH network_logs (Zeek conn, dns) from hosts with active_sessions | JOIN destination_ip or queried_domain WITH C2_threat_feed | ALERT on match
  - question: Is a host initiating outbound TLS connections with a globally rare JA3 hash or making DNS queries for high-entropy domains?
    context: This question looks for statistical artifacts of malicious tools. Many malware families use custom TLS libraries, resulting in unique and rare JA3 client fingerprints. Similarly, domain generation algorithms (DGAs) used for C2 often produce high-entropy, random-looking domain names. Detecting these statistical oddities can uncover novel malware.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Network egress points, DNS resolvers, Endpoint workstations, Internal network sensors
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH tls_logs (Zeek ssl) | ALERT if JA3_hash is in bottom 1% of enterprise prevalence | SEARCH dns_logs (Zeek dns) | CALCULATE entropy of query | ALERT if entropy is high
  - question: Does a host's outbound network traffic exhibit a periodic, "heartbeat" pattern indicative of C2 beaconing?
    context: This question uses time-series analysis to detect the automated, repeating communication patterns ("beacons" or "heartbeats") typical of malware calling home to its C2 server. This behavioral approach can identify C2 activity even when the destination is not on a threat list and other indicators are absent.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Network egress points, DNS resolvers, Endpoint workstations, Internal network sensors
    range: last 90 days
    queries:
      - tech: pseudocode
        query: ANALYZE time-series of outbound connections per host | LOOK for periodic, repeating patterns in connection time, volume, and data size | ALERT on detected heartbeat
  - question: Has a new domain account been created and immediately added to a privileged group?
    context: This question looks for a common adversary tactic for establishing persistence: creating a new account and quickly granting it high privileges. Correlating a user creation event with a privileged group addition event within a short time window is a high-fidelity indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: TRIGGER on user_creation (EventID 4720) | CORRELATE with group_addition (EventID 4728, 4732) for same user to privileged_group within 5 minutes | ALERT on match
  - question: Is a newly created domain account using a username with unusually high entropy?
    context: Adversaries often use randomly generated usernames to create new accounts for persistence, which results in usernames that have high character entropy compared to human-chosen names. By calculating the entropy of new usernames and flagging statistical outliers, we can detect these non-standard account creations.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR new_account_creation (EventID 4720) | CALCULATE shannon_entropy of username | ALERT if entropy > (average_entropy + 2*stdev)
  - question: Can we predict if a new username is suspicious based on its linguistic characteristics?
    context: This question applies machine learning to classify new usernames as suspicious or benign. By training a model on features like name length, character types, entropy, and comparison to common words (n-gram analysis), the system can learn to distinguish between legitimate new-hire accounts and adversary-created accounts.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: INPUT new_username | EXTRACT features (length, char_ratio, entropy, n-gram_freq) | PREDICT is_suspicious with trained_classifier_model | ALERT if prediction is suspicious
  - question: Has a new service or scheduled task been created by a domain account not authorized for such actions?
    context: Creating a new service or scheduled task is a common method for achieving persistence. This question aims to detect when this action is performed by an account that shouldn't have the rights or reason to do so, such as a standard user account. It relies on a predefined list of authorized administrative accounts.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 4698
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH service_creation (EventID 4697) or task_creation (EventID 4698) | CHECK if user_account is NOT IN authorized_admin_list | ALERT on match
  - question: Is any user account creating services or scheduled tasks at a rate that is statistically anomalous for that user or their peer group?
    context: This question provides a behavioral approach to detecting unauthorized persistence. Instead of a static list of admins, it profiles the normal frequency of service/task creation for each user. A sudden spike in this activity, especially for a user who has never performed it before (e.g., a marketing user), is a strong anomaly signal.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 4698
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: PROFILE frequency of service/task creation per user | ALERT if user's daily_count > 99th_percentile of their historical baseline
  - question: Has an anomalous parent-child process relationship, such as explorer.exe spawning schtasks.exe, been observed?
    context: This question uses machine learning to identify suspicious process chains related to persistence. While a system administrator might use a command prompt to create a scheduled task, a standard user's desktop process (`explorer.exe`) spawning a task creation utility (`schtasks.exe`) is highly unusual and indicative of malicious code execution.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 4698
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: MODEL normal parent-child process relationships | ON new process_creation (EventID 4688), check if relationship (e.g., explorer.exe -> schtasks.exe) is anomalous | ALERT if anomalous
  - question: Is a domain account exhibiting login or network activity at a perfectly regular, repeating interval?
    context: This question aims to distinguish automated C2 beaconing from human activity. Human-driven actions are variable, while automated scripts often run on a precise schedule. Detecting activity that occurs at the exact same time every hour is a strong sign of a machine, not a person.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, Network egress points
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH for logins or network connections | GROUP by user and hour | ALERT if activity occurs at the exact same second and minute for several consecutive hours
  - question: Does the time between an account's consecutive actions have a near-zero standard deviation?
    context: This is a statistical method to detect automation. By analyzing the time differences (deltas) between a user's logins or network connections, we can quantify the regularity. A very low standard deviation in these deltas means the activity is happening at a highly consistent rhythm, which is characteristic of automated beaconing.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, Network egress points
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each account, get timestamps of activity over 24 hours | CALCULATE time_deltas between events | CALCULATE standard_deviation of time_deltas | ALERT if stdev is near zero
  - question: Does the frequency analysis of an account's activity timeline show a strong periodic signal?
    context: This question applies signal processing techniques, like a Fast Fourier Transform (FFT), to an account's activity timeline. This method can mathematically extract underlying periodic signals from noisy data. A strong, narrow peak in the frequency domain is a robust indicator of automated C2 beaconing, even if the timing has some jitter.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers, Network egress points
    range: last 90 days
    queries:
      - tech: pseudocode
        query: CONVERT user activity timeline to a binary signal | APPLY Fast Fourier Transform (FFT) | ALERT if a strong, narrow peak is detected in the frequency domain
  - question: Has a process been created to add a user to a privileged group using net.exe or PowerShell?
    context: This question looks for direct evidence of privilege escalation on the command line. Monitoring for the execution of `net.exe` or `powershell.exe` with specific arguments for adding a user to a group like 'Domain Admins' provides a high-fidelity alert for this type of activity.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers, Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH process_creation (EventID 4688) WHERE (process_name is 'net.exe' AND command_line contains 'group "Domain Admins"') OR (process_name is 'powershell.exe' AND command_line contains 'Add-ADGroupMember -Identity "Domain Admins"')
  - question: Has a command been executed with statistically rare argument combinations related to user and group management?
    context: This question identifies suspicious commands by analyzing the rarity of their arguments. While an admin might use `net.exe` for various tasks, a non-administrative user executing `net.exe` with the argument combination of 'group' and 'add' is a statistical anomaly that likely indicates a privilege escalation attempt.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers, Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: BASELINE command-line argument patterns for net.exe, powershell.exe | CALCULATE TF-IDF for arguments | ALERT on commands with rare combinations like 'group' and 'add' from non-admin users
  - question: Has a user executed a command sequence that deviates significantly from their established behavioral profile for command-line activity?
    context: This question uses machine learning to baseline the 'language' of each user's command-line activity. A sales user who suddenly starts using Active Directory administration cmdlets is a major deviation from their normal behavior profile, indicating their account may be compromised and used for privilege escalation.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers, Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: TRAIN sequence model (e.g., LSTM) on historical command-line activity per user role | FLAG new command sequence if it is anomalous for that user's profile
  - question: Was a user added to a privileged group and then immediately used that account to log into a critical asset?
    context: This question detects the immediate exploitation of newly acquired privileges. The sequence of a user being added to a group like 'Domain Admins' followed within minutes by that same user logging onto a Domain Controller is a powerful indicator of an active attacker escalating privileges and moving laterally.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: TRIGGER on privileged group addition (EventID 4728/4732) | CORRELATE with successful logon (EventID 4624) by same user to a DC within 15 minutes | ALERT on match
  - question: After being added to a privileged group, did the user log in and use their new privileges faster than 95% of other users in the same situation?
    context: This question identifies scripted or automated exploitation of new privileges by measuring the 'time-to-first-privileged-logon'. A human admin might be added to a group and not use the rights for hours or days. An attacker is likely to use them immediately. Flagging accounts in the bottom 5th percentile for this metric helps spot this urgency.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR all users added to privileged groups, track time-to-first-privileged-logon | ALERT if an account's time is in the bottom 5th percentile
  - question: Can a graph-based model detect a rare event path, such as a user being added to a privileged group and then immediately logging into a Domain Controller?
    context: This question models the environment as a graph of users, groups, and assets. A privilege escalation event is seen as creating new, rare paths in this graph (e.g., a new 'member of' edge followed by a new 'logged into' edge). Anomaly detection on this graph can identify high-risk sequences of events that might be missed by other methods.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: MODEL environment as a graph (users, groups, assets are nodes) | DETECT rare event paths, such as new_edge(user -> Domain Admins) followed by new_edge(user -> DC01) | ALERT on high-risk path
  - question: Has an account, recently added to a privileged group, performed a high-impact action for the first time?
    context: This question detects the actual use of newly escalated privileges. It flags when a recently promoted account performs a sensitive action (like accessing the ADMIN$ share on a DC or running `ntdsutil.exe`) that it has never performed before in its history, indicating the beginning of abuse of its new power.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers, File Servers with sensitive data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: MAINTAIN list of recently privileged accounts | ALERT if one of these accounts generates a first-time-ever event for a high-impact action (e.g., access to ADMIN$, execution of ntdsutil.exe)
  - question: Has a user with recently changed privileges performed a new action that is considered rare or high-risk for the organization as a whole?
    context: This question assesses the risk of a new action performed by a recently privileged user. It scores the action based on its overall rarity across the entire organization. A user running `ntdsutil.exe` for the first time is risky; if only three people in the whole company have ever run it, the risk score is even higher, warranting an alert.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers, File Servers with sensitive data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: BASELINE all privileged actions performed by each user | AFTER privilege change, monitor for new actions | SCORE risk of new action based on its organizational rarity | ALERT if risk score exceeds threshold
  - question: Did a user's behavioral profile (set of actions) change significantly after a privilege escalation?
    context: This question measures the change in a user's behavior before and after a privilege escalation. It uses a similarity score (like Jaccard) to compare the set of actions performed before and after. A low similarity score indicates a drastic change in behavior, which, when combined with the recent privilege increase, is a strong signal of account abuse.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers, File Servers with sensitive data
    range: last 90 days
    queries:
      - tech: pseudocode
        query: MODEL user activity as a set of actions | AFTER privilege change, compare new action set to historical set using Jaccard similarity | ALERT if similarity score is low
  - question: Has a logon event for a non-administrative user occurred with a full, elevated security token?
    context: This question looks for an unexpected privilege escalation on an endpoint, often as a result of a UAC bypass. A logon event with a 'Token Elevation Type' of 'Full' (%%1938) means the process is running with full admin rights. For a standard user account, this is highly anomalous and should be investigated.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH logon events (EventID 4624) WHERE 'Token Elevation Type' is 'Full (%%1938)' AND user is NOT in pre-approved admin list | ALERT on match
  - question: Is a user account showing a statistically unusual ratio of full (elevated) tokens compared to their historical baseline?
    context: This question establishes a normal baseline for each user's token elevation behavior. While some power users or developers might occasionally elevate, a standard user should have a ratio of full-to-default tokens near zero. A sudden deviation from this baseline indicates an unusual and potentially malicious escalation.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR each user, calculate historical ratio of full_tokens to default_tokens | ALERT if new logon causes ratio to deviate by > 3 standard deviations
  - question: Based on a machine learning model, is a full token logon classified as suspicious?
    context: This question uses a classification model to determine if a privilege elevation is legitimate. The model considers context like the user's role, the host system, the parent process, and time of day to decide. This allows for more nuanced detection than a simple rule, reducing false positives from legitimate admin activity.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: TRAIN decision tree on features (user_role, host_role, parent_process) to classify full token logons | PREDICT if new full token logon is suspicious | ALERT if suspicious
  - question: Has a command been executed with arguments known to disable or tamper with security controls?
    context: This question looks for direct evidence of defense evasion. It uses a signature-based approach to monitor for specific commands used to disable antivirus, turn off the firewall, or clear logs. An alert on one of these commands is a high-confidence indicator of malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: SEARCH process creation (EventID 4688) for command lines containing known defense evasion signatures (e.g., 'Set-MpPreference -DisableRealtimeMonitoring', 'netsh advfirewall set allprofiles state off')
  - question: Has the frequency of defense-disabling keywords in command lines for a user or host spiked?
    context: This question statistically tracks the use of keywords related to defense evasion (e.g., 'Disable', 'advfirewall', 'wevtutil'). A sudden spike in the use of these terms by a particular user or on a specific host, when compared to their normal baseline, can indicate that an adversary is actively trying to disable security measures.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: ANALYZE command line arguments | CALCULATE frequency of defense-disabling keywords per user/host | ALERT if frequency spikes above 99th percentile
  - question: Does a command's arguments have a high semantic similarity to known defense evasion techniques?
    context: This question uses advanced natural language processing (NLP) to understand the *intent* of a command, even if it's obfuscated. By comparing the semantic meaning of a command to a corpus of known malicious commands, it can identify novel or slightly modified evasion techniques that signature-based methods would miss.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: USE fine-tuned NLP model (e.g., BERT) to analyze command-line arguments | CALCULATE semantic similarity to known defense evasion techniques | ALERT if score is high
  - question: Has a legitimate Windows binary (LOLBAS) been executed with suspicious arguments or from an unusual context?
    context: This question aims to detect the abuse of legitimate system tools for malicious purposes (Living Off the Land). It looks for specific, known-bad argument patterns for tools like `certutil.exe` (file download) or `powershell.exe` (encoded commands), especially when launched by an unusual parent process like an Office application.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: ALERT on process creation (EventID 4688) for certutil.exe with '-urlcache', or powershell.exe with '-enc', especially if parent is winword.exe
  - question: Are common system processes being executed with high-entropy command-line arguments?
    context: This question identifies obfuscated commands passed to legitimate tools. Adversaries often base64-encode or otherwise obfuscate their malicious PowerShell scripts, resulting in a long, random-looking command line with high entropy. Calculating the entropy of command lines for processes like `powershell.exe` can effectively detect this technique.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: FOR processes like powershell.exe, mshta.exe | CALCULATE entropy of command-line arguments | ALERT if entropy is high
  - question: Has an unusual parent-child process relationship involving a LOLBAS been observed?
    context: This question uses a graph-based model to detect abnormal process execution chains. A legitimate tool like `powershell.exe` might be launched by an administrator in a command prompt, but it's highly irregular for Microsoft Word (`winword.exe`) to launch it. Detecting these rare relationships can uncover malware that abuses LOLBAS.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: MODEL normal parent-child process relationships using a graph | FLAG new process execution that creates a rare edge (e.g., winword.exe -> powershell.exe)
  - question: Has an event log been cleared?
    context: This question looks for direct evidence of an adversary trying to cover their tracks. Windows Event ID 1102 is generated specifically when an audit log is cleared. Alerting on this event, or on the execution of `wevtutil.exe` with the 'clear-log' argument, is a critical finding for an investigation.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Endpoint workstations, Domain Controllers, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: ALERT on Event ID 1102 ('The audit log was cleared') | ALERT on process creation of `wevtutil.exe` with 'cl' or 'clear-log' arguments
  - question: Has there been an unexplained gap in event log collection from a host?
    context: This question detects log clearing even if the clearing event itself is erased. By monitoring the volume of logs from each source, a sudden drop to zero followed by a resumption of logging indicates a 'log gap'. This is a strong sign that logs were cleared or tampered with on the host.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Endpoint workstations, Domain Controllers, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: MONITOR event volume per log source per hour | ALERT if event count for a critical log from a host drops to zero for a period and then resumes
  - question: Has a host's log volume dropped significantly below its predicted forecast?
    context: This question uses a time-series forecasting model to predict the expected log volume for each host. If the actual volume received is significantly lower than the prediction, it suggests a problem. This could be a collection issue, but it could also be an adversary actively suppressing or clearing logs, making it a valuable anomaly to investigate.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Endpoint workstations, Domain Controllers, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: TRAIN a time-series model (e.g., Prophet) to forecast log volume per host | ALERT if actual volume is significantly below predicted volume
  - question: Has a user account typically used for interactive sessions authenticated using a non-interactive logon type?
    context: This question identifies when a user account is used in a way that is inconsistent with its purpose. For example, a standard user's account (normally used for interactive desktop logons, Type 2) being used to log on as a service (Type 5) or a batch job (Type 4) is highly suspicious and could indicate it's being used for persistence or other malicious activity.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: ALERT on successful logon (EventID 4624) WHERE user is in 'Standard Users' group AND Logon Type is 5 (Service), 4 (Batch), or 8 (NetworkCleartext)
  - question: Has a user authenticated with a logon type that is statistically improbable based on their history?
    context: This question creates a behavioral profile of normal logon types for each user. For example, a system administrator's profile might be 70% interactive (Type 2), 20% remote interactive (Type 10), and 10% batch (Type 4). If this user suddenly has a logon as a service (Type 5), which has a near-zero probability in their profile, it's a significant deviation worth investigating.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: PROFILE each user's historical logon type probabilities | ALERT if a logon occurs with a type that has near-zero probability in that user's profile
  - question: Has a user's activity shifted them from a 'Standard Interactive User' cluster to a 'System Processes' cluster?
    context: This question uses machine learning to group users into clusters based on their typical logon behaviors. A user's account being used in a way that causes it to shift from its normal cluster (e.g., 'Interactive Users') to a completely different one (e.g., 'System Processes') is a strong indicator that the account's usage pattern has fundamentally and anomalously changed.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations, Member servers
    range: last 90 days
    queries:
      - tech: pseudocode
        query: CLUSTER users based on logon type patterns and session features | ALERT if a user's activity causes them to shift to an anomalous cluster