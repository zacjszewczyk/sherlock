name: T1078.002: Domain Accounts
id: a7b1c3d4-e5f6-4a9b-8c7d-6e5f4a3b2c1d
description: This playbook focuses on detecting malicious use of compromised domain accounts (T1078.002) across various stages of an attack. It addresses initial access through compromised credentials, persistence via newly created or modified accounts, privilege escalation by adding accounts to sensitive groups, and defense evasion by using legitimate accounts to disable security tools or clear logs. The playbook provides investigative questions and queries to identify suspicious authentication patterns such as logins from known malicious IPs, impossible travel scenarios, brute-force or password spraying attacks, and unusual login attributes. It also helps detect post-compromise activities like C2 beaconing, unauthorized service creation, and tampering with event logs.
type: technique
related:
  - TA0001: Initial Access
  - TA0003: Persistence
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
  - none
questions:
  - question: Have any external authentication attempts originated from IP addresses on a known malicious threat intelligence list?
    context: Adversaries often leverage infrastructure that is known to be malicious. By comparing source IP addresses from external authentication logs against a curated threat intelligence feed, analysts can quickly identify high-confidence indicators of compromise where an attacker is attempting to use a valid account from a known bad location.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., ADFS, VPN gateways)
      - Domain Controllers
      - Cloud identity providers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH external_auth_logs (event_id=4624 OR event_id=4625) OR network_flow_logs
          | JOIN source_ip WITH threat_intel_feed
          | WHERE threat_intel_feed.is_malicious = true
          | RETURN source_ip, user, timestamp
  - question: Are there any external IP addresses exhibiting an unusually high ratio of failed to successful logins?
    context: This question helps detect brute-force or password guessing attempts that may not be caught by simple threshold rules. By calculating a statistical baseline for the failed-to-successful login ratio from external IPs, analysts can identify outliers that represent a significant deviation from normal user behavior, indicating a potential targeted attack.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., ADFS, VPN gateways)
      - Domain Controllers
      - Cloud identity providers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE ratio of (COUNT(event_id=4625) / COUNT(event_id=4624)) per source_ip over 1_hour
          | COMPARE ratio to 99th percentile of historical ratios for all external IPs
          | ALERT if ratio > threshold
  - question: Can machine learning models identify external login attempts as malicious based on contextual features?
    context: This question leverages a supervised machine learning model to provide a more nuanced and predictive assessment of login risk. By training on features like IP reputation, ASN, country, time of day, and login counts, the model can learn complex patterns associated with malicious activity and flag suspicious logins in real-time, even if they don't trigger simpler symbolic or statistical rules.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing authentication services (e.g., ADFS, VPN gateways)
      - Domain Controllers
      - Cloud identity providers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new external login
          | EXTRACT features (IP reputation, ASN, country, time_of_day, login_counts)
          | INPUT features into pre-trained classification_model
          | ALERT if model_prediction is 'malicious'
  - question: Has any single external IP address generated a high volume of failed logins, indicative of a brute-force or password spray attack?
    context: This question aims to detect two common credential attack patterns. A brute-force attack involves many failed logins for a single account from one IP. A password spray involves one or a few passwords tried against many accounts from one IP. Simple, high-volume threshold rules are effective at catching these noisy and often unsophisticated attacks.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers
      - Public-facing application servers with AD integration
      - VPN concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ALERT if COUNT(event_id=4625) > 20 for one source_ip and one target_account in 5_minutes (brute-force)
          OR
          ALERT if COUNT(event_id=4625) > 20 for one source_ip and >20 distinct target_accounts in 5_minutes (password spray)
  - question: Are there any external IPs where the count of authentication failures or the number of targeted accounts is statistically anomalous?
    context: This provides a more dynamic way to detect brute-force and password spray attacks than fixed thresholds. By comparing the rate of failures and the number of distinct targeted accounts to a statistical baseline (e.g., 3 standard deviations above the mean), this method can adapt to changing network conditions and detect attacks that might fall just below a static rule's threshold.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers
      - Public-facing application servers with AD integration
      - VPN concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE failures (event_id=4625) by source_ip per minute
          | CALCULATE distinct target_accounts per source_ip
          | ALERT if failure_count OR distinct_account_count > (mean + 3 * std_dev) for the time window
  - question: Does time-series anomaly detection identify unusual spikes in authentication failures from a single source IP?
    context: This question applies a time-series model to the stream of authentication failures from each source IP. This approach is effective at identifying sudden, sharp increases in failures that are characteristic of the start of an automated attack, without relying on predefined thresholds. It models the 'normal' noise level for an IP and flags any significant deviation.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers
      - Public-facing application servers with AD integration
      - VPN concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
          | MODEL stream of authentication_failures with time-series_anomaly_detection_model (e.g., ARIMA)
          | ALERT if model detects an anomalous spike
  - question: Has any domain account logged in from two locations where the travel time between them is physically impossible?
    context: This is a classic and highly effective detection for account compromise. By enriching login events with geolocation data and calculating the required travel speed between consecutive logins, analysts can flag events that defy physics. A successful login from New York followed five minutes later by one from London is a clear indicator that at least one of the sessions is illegitimate.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud IAM services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each successful_login (event_id=4624)
          | GET geolocation of source_ip
          | CALCULATE speed from previous login location/time
          | ALERT if speed > 600 mph
  - question: Has a user's login pattern resulted in a statistically improbable travel speed compared to their own or the organization's baseline?
    context: This approach refines the impossible travel concept by personalizing it. Some users (e.g., system accounts) may exhibit behavior that looks like impossible travel but is normal for them. By building a distribution of travel speeds for each user, this method can flag a login that is not just fast, but anomalously fast *for that specific user*, reducing false positives.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud IAM services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user's successful_login
          | CALCULATE travel speed
          | COMPARE speed to the 99.9th percentile of that user's historical speeds
          | ALERT if speed > threshold
  - question: Can a clustering algorithm identify a new login as a geographic outlier inconsistent with the user's established location clusters?
    context: This method models a user's typical geographic behavior by grouping their historical login locations into clusters (e.g., 'Office', 'Home'). A new login that does not fall into any of these established clusters and cannot be explained by normal travel is flagged as a spatial anomaly. This is useful for detecting compromised accounts used from entirely new countries or regions.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud IAM services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user
          | CLUSTER historical login geolocations (e.g., DBSCAN)
          | FOR new login
          | ALERT if new location is not in or near an existing cluster and travel time is impossible
  - question: Has a user successfully authenticated from a country, ASN, or high-risk ISP for the first time?
    context: Users typically have predictable patterns of access. A login from a brand new country or from an Autonomous System Number (ASN) associated with hosting providers or TOR exit nodes is a significant deviation. This symbolic rule provides a high-fidelity alert on the 'first time' a user's account is used in a context that is unusual for them, which is a common sign of compromise.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud IAM services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MAINTAIN baseline of countries, ASNs, ISPs per user
          | FOR new successful_login (event_id=4624)
          | ALERT if login_country OR login_asn is not in user's baseline
  - question: Has a user logged in from a location that is statistically rare based on their historical login frequencies?
    context: This question quantifies the 'newness' of a login's attributes. Instead of just alerting on the absolute first time, it calculates a rarity score. This can help prioritize investigations based on how unusual the activity is, such as a login from a location that accounts for less than 5% of the user's historical activity.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud IAM services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE frequency of logins per country/ASN for each user
          | FOR new login
          | CALCULATE rarity score based on historical frequency
          | ALERT if rarity_score is below a threshold (e.g., < 5th percentile)
  - question: Does a machine learning model classify a user's login context (country, ASN, time) as anomalous?
    context: This uses an unsupervised learning model (like a One-Class SVM or an autoencoder) to build a holistic profile of a user's 'normal' login behavior, considering multiple features at once. It can detect subtle anomalies that might not be caught by single-feature statistical methods. A login that the model struggles to 'reconstruct' or classifies as an outlier is a strong candidate for investigation.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - VPN Concentrators
      - Cloud IAM services
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN one-class SVM or autoencoder on each user's historical login context (country, ASN, time)
          | FOR new login
          | ALERT if model classifies it as an anomaly
  - question: Is a host with an active domain account session communicating with a known Command and Control (C2) server?
    context: A primary goal for an adversary after gaining access is to establish persistent command and control. This question checks for network traffic from an authenticated host to destinations found on threat intelligence lists of known C2 servers, providing a high-confidence indicator of a compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Network egress points
      - DNS resolvers
      - Endpoint workstations
      - Internal network sensors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_logs (conn.log, dns.log) from hosts with active domain sessions
          | JOIN destination_ip or query_domain WITH c2_threat_feed
          | ALERT on match
  - question: Is any outbound network traffic from an authenticated session using a globally rare JA3 hash or a high-entropy domain name?
    context: Adversaries often use custom malware for C2 communications, which can result in unique TLS fingerprints (JA3 hashes). Similarly, Domain Generation Algorithms (DGAs) used for C2 often produce high-entropy, random-looking domain names. Flagging statistically rare JA3 hashes or high-entropy DNS queries can uncover novel malware that isn't on a signature list.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Network egress points
      - DNS resolvers
      - Endpoint workstations
      - Internal network sensors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE frequency of all JA3 hashes in ssl.log | ALERT on JA3 hash in bottom 1%
          | AND/OR |
          CALCULATE entropy of all queried domains in dns.log | ALERT on high-entropy domains
  - question: Is a time-series model detecting a periodic, 'heartbeat' pattern in outbound network traffic from any host?
    context: Automated C2 implants often 'beacon' back to the adversary's server on a regular, timed interval. This automated behavior is distinct from sporadic, human-driven traffic. A time-series analysis can detect this periodicity or 'heartbeat' in connection volume or data size, revealing the presence of a C2 implant.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4624
      - Network egress points
      - DNS resolvers
      - Endpoint workstations
      - Internal network sensors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL outbound connection volume and data size per host over time
          | ALERT if model detects a repeating, periodic pattern ('heartbeat')
  - question: Has a new domain account been created and immediately added to a privileged group?
    context: To maintain persistence, an adversary may create a new user account and grant it administrative privileges. This symbolic rule looks for the tight temporal coupling of a user creation event (4720) and a group addition event (4728/4732) for a privileged group, which is a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE user creation (event_id=4720) with privileged group addition (event_id=4728/4732) for the same user
          | ALERT if time_difference < 5 minutes
  - question: Has a newly created account username shown a statistically high entropy score, suggesting a randomly generated name?
    context: Adversaries may use randomly generated usernames to create sleeper accounts, which can be harder to spot visually. By calculating the Shannon entropy of a new username and comparing it to the baseline, analysts can flag names that are statistically likely to be machine-generated rather than chosen by a human.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new account (event_id=4720)
          | CALCULATE Shannon entropy of the username
          | ALERT if entropy > (mean_entropy + 2 * std_dev)
  - question: Does a machine learning model classify a new username as suspicious based on its characteristics (length, entropy, n-gram frequency)?
    context: This approach trains a model to distinguish between legitimate and suspicious usernames. By using features like length, character types, entropy, and n-gram analysis (common letter combinations), the model can learn to identify names that don't conform to typical naming conventions within the organization.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new username
          | EXTRACT features (length, char_ratio, entropy, n-gram_freq)
          | INPUT to classification model
          | ALERT if prediction is 'suspicious'
  - question: Has a service or scheduled task been created by a domain account that is not an authorized administrator?
    context: A common persistence technique is to install a malicious service or create a scheduled task that runs with elevated privileges. This question seeks to identify when these actions are performed by a user who is not on a predefined list of administrators, indicating an unauthorized and likely malicious attempt to establish persistence.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 4698
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for service creation (event_id=4697) or task creation (event_id=4698)
          | CHECK if user account is in 'authorized_admin_list'
          | ALERT if user is not on list
  - question: Has any user account created a statistically anomalous number of services or scheduled tasks compared to their baseline?
    context: While some administrative accounts regularly create services or tasks, this behavior is rare for standard users. This statistical approach profiles the frequency of these actions for each user. An alert is triggered if a user's activity significantly exceeds their own historical baseline or the baseline of their peer group, flagging unusual administrative-level actions.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 4698
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PROFILE frequency of service/task creation per user
          | ALERT if daily/weekly count > 99th percentile of user's or peer group's baseline
  - question: Is there evidence of an anomalous parent-child process relationship, such as explorer.exe spawning schtasks.exe, initiated by a standard user?
    context: Malicious persistence is often established through benign-looking processes. A standard user's desktop process (`explorer.exe`) directly spawning a task scheduling utility (`schtasks.exe`) is an anomalous parent-child relationship. Using a model to identify such rare relationships can uncover attempts to create persistence under the guise of normal user activity.
    answer_sources:
      - Windows Event ID 4697
      - Windows Event ID 4698
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL normal parent-child process relationships from process creation logs (event_id=4688)
          | ALERT on rare relationships like `explorer.exe` -> `schtasks.exe` initiated by a non-admin user
  - question: Is any domain account exhibiting login or network activity at a perfectly regular hourly interval?
    context: Automated malware, unlike a human user, often performs actions with machine-like precision. This symbolic rule looks for activity, such as logins or network connections, that occurs at the exact same time every hour (e.g., HH:05:30), which is a strong sign of a scheduled, automated process like C2 beaconing.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for logins (event_id=4624) or network connections (conn.log)
          | ALERT if events occur at the exact same minute and second of the hour for several consecutive hours
  - question: Does the time between a user's login or network events have a standard deviation near zero, indicating automated, non-human activity?
    context: This statistical method quantifies the regularity of an account's activity. By analyzing the time differences (deltas) between consecutive events, a standard deviation close to zero indicates that the events are occurring at a highly fixed interval. This 'low jitter' is characteristic of automated beaconing and stands out from the variable timing of human activity.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each account, analyze time deltas between consecutive activities over 24 hours
          | CALCULATE the standard deviation of the time deltas
          | ALERT if standard deviation is near zero
  - question: Does a Fast Fourier Transform (FFT) analysis of an account's activity timeline reveal a strong periodic signal, characteristic of C2 beaconing?
    context: This advanced technique transforms an account's activity timeline from the time domain to the frequency domain. A strong, narrow peak in the frequency spectrum reveals a dominant, repeating signal at a specific interval. This is a mathematically robust method for identifying the regular, automated 'heartbeat' of C2 beaconing, even if it is hidden in noisy data.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Network egress points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY Fast Fourier Transform (FFT) to the time series of an account's activity
          | ALERT if the resulting frequency spectrum shows a strong, narrow peak
  - question: Has 'net.exe' or 'powershell.exe' been used with command-line arguments to add a user to a privileged group?
    context: Adversaries who have compromised a standard account will seek to escalate privileges. A common method is to use built-in Windows tools like `net.exe` or PowerShell to add their controlled account to a group like 'Domain Admins'. Monitoring process command-lines for these specific, high-impact commands is a direct way to detect privilege escalation in progress.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR process creations (event_id=4688) for `net.exe` or `powershell.exe`
          | ALERT if CommandLine contains 'net group "Domain Admins"' or 'Add-ADGroupMember -Identity "Domain Admins"'
  - question: Are there any instances of 'net.exe' or 'powershell.exe' being used with statistically rare command-line arguments related to group management?
    context: This statistical approach baselines the normal command-line usage for tools like `net.exe` and `powershell.exe`. It can then identify when these tools are used with rare combinations of arguments, such as 'group' and 'add', especially when executed by user accounts that are not system administrators. This helps find abuse that might not match an exact symbolic signature.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE command-line argument patterns for `net.exe` and `powershell.exe`
          | CALCULATE TF-IDF for arguments
          | ALERT on commands with rare argument combinations like 'group' and 'add' from non-admin accounts
  - question: Does a sequence-based model detect that a user is executing command-line sequences for privilege escalation that are anomalous for their role?
    context: This machine learning approach models the typical sequence of commands for different user roles. It can detect when a user's behavior deviates from their established profile, such as a user from the 'Sales' department suddenly executing a series of Active Directory administration commands. This contextual anomaly detection is powerful for spotting an account being used outside its normal function.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a sequence model (e.g., LSTM) on historical command-line activity for user roles
          | FLAG a command sequence as anomalous if it deviates from a user's role profile
  - question: Has a user been added to a privileged group and then immediately logged on to a critical asset like a Domain Controller?
    context: Adversaries are efficient. Once they escalate an account's privileges, they will likely use those new privileges immediately. This correlation rule detects this behavior by linking a group membership change event with a subsequent privileged logon to a high-value asset, indicating that the newly granted privilege is being actively exploited.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE privileged group addition (event_id=4728/4732) for a user
          | WITH a successful logon (event_id=4624) by the same user to a Domain Controller
          | ALERT if time_difference < 15 minutes
  - question: For users added to privileged groups, is the time-to-first-privileged-logon statistically very short, suggesting scripted exploitation?
    context: This statistical method focuses on the speed at which new privileges are used. By tracking the time between an account being added to a privileged group and its first use of those privileges (e.g., logging into a DC), analysts can identify outliers. An extremely short time suggests automated, scripted activity, which is more indicative of an attack than a legitimate administrative change.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR all accounts added to privileged groups
          | TRACK the time-to-first-privileged-logon
          | ALERT if this time is in the bottom 5th percentile (fastest 5%)
  - question: Does a graph-based anomaly detection model identify a high-risk event path of a user being added to a privileged group and then immediately accessing a critical asset?
    context: This approach models the environment as a graph of users, groups, and assets. A privilege escalation and its subsequent abuse can be seen as a path through this graph (e.g., User -> added to -> 'Domain Admins' -> logs into -> 'DC01'). If this path is historically rare or unseen, the model can flag it as a high-risk sequence of events.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4624
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL users, groups, assets as nodes in a graph
          | ALERT when a historically rare path of edges is created in a short time, e.g., (user-group) followed by (user-asset)
  - question: Has a recently privileged account performed a high-impact action (like accessing ADMIN$ or running ntdsutil.exe) for the first time?
    context: This question focuses on 'first time' behavior after a privilege change. It maintains a list of accounts that were recently added to privileged groups and alerts if one of them performs a sensitive action, like accessing a DC's administrative share or running a credential dumping tool, for the first time in its history. This is a strong indicator of privilege abuse.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers
      - File Servers with sensitive data
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MAINTAIN a state table of accounts added to privileged groups in last 7 days
          | ALERT if one of these accounts generates a 'first-time' sensitive event (e.g., access to ADMIN$, execution of ntdsutil.exe)
  - question: After a privilege change, has a user performed a new action that is statistically rare across the organization?
    context: This method assesses the risk of a new action performed by a recently escalated account. It not only identifies that the action is new for the user but also scores its risk based on how rare that action is across the entire organization. An action that is both new to the user and rare overall is a high-confidence indicator of malicious activity.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers
      - File Servers with sensitive data
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE privileged actions per user
          | AFTER privilege change, monitor for new actions
          | SCORE risk of new action based on its organizational rarity
          | ALERT if risk_score > threshold
  - question: After a privilege change, is there a low Jaccard similarity score between the user's new set of actions and their historical actions, indicating a significant behavior change?
    context: This machine learning technique quantifies the change in a user's behavior after their privileges have been escalated. By representing the user's actions as sets, the Jaccard similarity score can measure how much their new behavior overlaps with their old behavior. A low score signifies a dramatic shift, which, in the context of a recent privilege change, is highly suspicious.
    answer_sources:
      - Windows Event ID 5145
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers
      - File Servers with sensitive data
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL user activity as a set of actions
          | AFTER privilege change, compare new action set to historical set using Jaccard similarity
          | ALERT if similarity score is low
  - question: Has a logon event for a non-administrative user shown a full administrative token (Token Elevation Type %%1938)?
    context: On Windows systems with User Account Control (UAC), a standard user process runs with a limited token. A 'full' token indicates the process is running with elevated administrative rights. If a logon event for a user who is not an administrator shows they received a full token, it can indicate a successful UAC bypass or other privilege escalation technique.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for logon events (event_id=4624)
          | ALERT if 'Token Elevation Type' is '%%1938' (Full) and user is NOT on the pre-approved admin list
  - question: Has a user's ratio of full tokens to default tokens deviated statistically from their established baseline?
    context: This statistical approach baselines the normal token elevation behavior for each user. While some administrators or developers may frequently elevate to a full token, it is rare for most users. An alert is triggered if the ratio of full-to-default tokens for a user suddenly changes, indicating an unusual and potentially malicious escalation of privilege.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user, calculate the historical ratio of full tokens ('%%1938') to default tokens ('%%1937')
          | ALERT if a new logon causes this ratio to deviate by more than 3 standard deviations
  - question: Does a decision tree model, trained on contextual features, classify a full token logon as suspicious?
    context: This machine learning approach builds a model to decide if a token elevation event is legitimate or suspicious. By considering features like the user's role, the host system's role, the parent process that requested the elevation, and the time of day, the model can learn the patterns of normal administrative work and flag elevations that don't fit that pattern.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a decision tree classifier on logon events
          | FEATURES should include user role, host role, parent process, time of day
          | ALERT if the model classifies a full token logon as 'suspicious'
  - question: Has a process been executed with command-line arguments known to disable security controls like AV, EDR, or logging?
    context: A key step for an adversary is to evade defenses to operate undetected. This involves disabling security tools. This symbolic rule looks for the execution of specific commands known to tamper with antivirus, EDR, the Windows firewall, or event logging, providing a direct indicator of defense evasion activity.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR process creations (event_id=4688) for command lines containing signatures like
          `Set-MpPreference -DisableRealtimeMonitoring`, `netsh advfirewall set allprofiles state off`, or `wevtutil cl Security`
  - question: Has there been a statistical spike in the use of defense-disabling keywords in command-line arguments for a given user or host?
    context: This approach looks for a statistical increase in the use of keywords related to defense evasion (e.g., 'Disable', 'advfirewall', 'wevtutil') in command lines. A sudden spike in the frequency of these terms for a specific user or host, compared to their normal baseline, can indicate that an adversary is actively trying to weaken the security posture of the machine.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ANALYZE command line arguments of `powershell.exe` and `netsh.exe`
          | CALCULATE frequency of defense-disabling keywords
          | ALERT if frequency for a user/host spikes above its 99th percentile
  - question: Does an NLP model classify a command-line string as being semantically similar to known defense evasion techniques?
    context: This advanced method uses Natural Language Processing (NLP) to understand the intent of a command line, even if it's obfuscated or doesn't match a known signature. By fine-tuning a model on a corpus of malicious scripts, it can flag new, unseen commands that are semantically similar to known defense evasion techniques.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          USE a fine-tuned NLP model (e.g., BERT) to analyze command-line arguments
          | FLAG commands that have a high semantic similarity score to a known corpus of defense evasion techniques
  - question: Has a native Windows binary (LOLBAS) been used with suspicious arguments, such as 'certutil.exe -urlcache' or 'powershell.exe -encodedcommand'?
    context: Adversaries 'live off the land' by abusing legitimate Windows tools (LOLBAS) for malicious purposes. This symbolic rule looks for specific, known-bad usage patterns, such as using `certutil.exe` to download files or using `powershell.exe` with an encoded command to hide its true purpose. Alerting on these specific patterns is a high-fidelity way to detect abuse of legitimate tools.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ALERT on process creation (event_id=4688) for `certutil.exe` with `-urlcache -f` arguments,
          or for `powershell.exe` with `-encodedcommand` arguments
  - question: Are there command-line arguments for common LOLBAS processes that have a statistically high entropy score, indicating obfuscation?
    context: To hide their actions, adversaries often encode or obfuscate the commands passed to LOLBAS tools like PowerShell. This results in command-line arguments that look like random gibberish, which have a high statistical entropy. Calculating the entropy of command-line arguments and alerting on high values is an effective way to detect this obfuscation.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE entropy of command-line arguments for processes like `powershell.exe`, `mshta.exe`, `rundll32.exe`
          | ALERT if entropy score is anomalously high
  - question: Does a graph-based model detect a rare parent-child process relationship involving a LOLBAS, such as Word spawning an obfuscated PowerShell command?
    context: This machine learning approach models the normal relationships between processes on a system. A legitimate user application like Microsoft Word spawning a PowerShell process is highly unusual. The model can flag this rare edge in the process graph, especially when combined with other suspicious indicators like a high-entropy command line, to detect LOLBAS abuse.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL normal parent-child process relationships using a graph model
          | FLAG any new process execution that creates a rare edge, like `winword.exe` -> `powershell.exe`
  - question: Has an event log been cleared (Event ID 1102) or has the 'wevtutil.exe cl' command been run?
    context: To cover their tracks, adversaries will often clear security event logs. This is a highly suspicious action and a direct indicator of defense evasion. This symbolic rule generates a critical alert upon seeing either the dedicated 'log cleared' event (1102) or the command-line execution of the tool used to clear logs (`wevtutil.exe cl`).
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Endpoint workstations
      - Domain Controllers
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GENERATE critical alert for any occurrence of Event ID 1102 ('The audit log was cleared')
          | OR |
          ALERT on process creation (event_id=4688) for `wevtutil.exe` with the `cl` argument
  - question: Is there a statistical 'log gap' where a critical log source has stopped reporting for a period before resuming?
    context: If an adversary clears logs and also disables logging of the clearing event itself, it may create a gap in the timeline. This statistical method monitors the volume of incoming logs from each source. If a critical log source like the Security log on a DC suddenly stops reporting for a period and then resumes, this 'log gap' is a strong indirect indicator that logs were cleared.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Endpoint workstations
      - Domain Controllers
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR the volume of events per log source per hour
          | ALERT if the event count for a critical log from a specific host drops to zero and then resumes
  - question: Does a time-series forecasting model show that a host's actual log volume is significantly lower than its predicted volume?
    context: This machine learning approach builds a forecast model for each host to predict its expected log volume based on historical patterns. If the actual number of logs received from a host is significantly less than what the model predicted, it can indicate a problem. This could be a log collection failure or a malicious attempt to tamper with or disable logging on the host.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 4688
      - Endpoint workstations
      - Domain Controllers
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a time-series forecasting model (e.g., Prophet) for each host's log volume
          | FLAG any host where the actual log volume significantly deviates negatively from the predicted volume
  - question: Has a standard user account authenticated using a non-interactive logon type, such as Type 5 (Service) or Type 4 (Batch)?
    context: Different logon types correspond to different kinds of activity. Interactive logons (Type 2, 10) are for users at a console, while non-interactive types are for services (5) and scheduled tasks (4). It is highly unusual for a standard user account to authenticate as a service or batch job. This indicates the user's credentials may have been stolen and are being used to establish persistence.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ALERT on successful logon events (event_id=4624) where a user from a 'Standard Users' group
          authenticates with Logon Type 5, 4, or 8
  - question: Has a user logged on with a logon type that has a near-zero probability in their historical profile?
    context: This statistical approach builds a profile of the normal logon types used by each user. For most users, this will be almost exclusively interactive logons. The system can then alert if a logon occurs with a type that has a zero or near-zero probability in that user's history, indicating a sharp and suspicious deviation from their normal behavior.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user, maintain a profile of their normal logon types
          | ALERT if a logon occurs with a type that has a zero or near-zero probability in that user's historical profile
  - question: Has a user's activity caused them to shift from a 'Standard Interactive Users' cluster to a 'System Processes' cluster based on their logon patterns?
    context: This machine learning technique groups users into clusters based on their typical behavior, including logon types. A 'Standard Interactive Users' cluster would be distinct from a 'System Processes' cluster. If a user's activity (e.g., suddenly using service logon types) causes them to shift from one cluster to another, this transition is flagged as a significant and anomalous change in behavior.
    answer_sources:
      - Windows Event ID 4624
      - Endpoint workstations
      - Member servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER users based on logon type patterns and other session features
          | IF a user's activity causes them to shift from a 'Standard Users' cluster to a 'System' cluster, FLAG this as an anomaly