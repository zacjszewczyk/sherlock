name: T1070.010: Relocate Malware
id: 5a8d9b1c-3e4f-4b6a-8c9d-1e2f3a4b5c6d
description: 'Investigates whether an adversary is relocating malware to evade defenses. This involves looking for evidence such as: a file with a known malicious hash being created or run from a new location; an executable file with high entropy, suspicious naming conventions (typosquatting, double extensions), or a name matching known malicious tools; a legitimate system process executing from a non-standard file path; a rapid sequence of file create, move/copy, execute, and delete events on a single host; or a process from an AV-excluded directory making an external network connection to a rare or non-allowlisted destination.'
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any file or process creation events where the file hash matches a known malicious indicator from our threat intelligence feeds?
    context: This question aims to find direct evidence of known malware being written to disk or executed. By matching file hashes from system events against threat intelligence, we can identify recognized threats. A positive match strongly indicates a compromise and may be part of a malware relocation attempt.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Endpoint Detection and Response (EDR) logs
      - Windows Security Event Logs
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH (EventID=4663 OR EventID=4688) WHERE FileHash IN (malicious_hash_list) RETURN Host, FilePath, ProcessName, FileHash
  - question: Are there any processes executing with a file hash that has a very low prevalence across the enterprise (e.g., seen on less than 1% of endpoints)?
    context: This question helps uncover unknown or polymorphic malware missed by signature-based detection. Malicious software often has a small footprint, unlike legitimate, widespread applications. Identifying executables with very low prevalence helps focus investigations on unusual and potentially malicious files that may have been relocated to evade defenses.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - Windows Security Event Logs
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: CALCULATE prevalence of each FileHash from EventID=4688 over 30 days. FILTER FileHash where prevalence < 1%. RETURN Host, ProcessName, FileHash, Prevalence
  - question: Has a file classified as highly malicious by our machine learning model been created in multiple locations on a single host within a short timeframe?
    context: This question uses machine learning to proactively identify malicious files by their characteristics. By correlating high-confidence alerts with multiple file creation events in quick succession on the same host, we can specifically detect the "relocation" behavior of an attacker moving their tools to a new on-disk location.
    answer_sources:
      - Windows Event ID 4663
      - Endpoint Detection and Response (EDR) logs
      - Windows Security Event Logs
      - Machine Learning Model alerts
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: GET alerts from ML model with score > 0.9. CORRELATE with EventID=4663 for the same FileHash on the same Host. IF multiple file creation events in different paths within 5 minutes, ALERT.
  - question: Are there any processes being created with names that match suspicious patterns like double extensions, typosquatting of system executables, or known malicious tool names?
    context: This question seeks to identify malware that masquerades through its filename. Adversaries often use techniques like 'file.txt.exe', 'scvhost.exe' (instead of 'svchost.exe'), or common hacker tool names. Applying regular expressions to process creation logs can effectively detect these naming anomalies.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - Common staging directories (%APPDATA%, %TEMP%, %PUBLIC%, Downloads)
      - User profile directories
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH EventID=4688 WHERE ProcessName MATCHES REGEX ('\\.docx\\.exe$', 'scvhost\\.exe', 'mimikatz\\.exe') RETURN Host, ProcessName, CommandLine
  - question: Are there any executed files with a filename entropy score that is anomalously high compared to the baseline of known-good executables?
    context: This question helps to identify packed or obfuscated malware that uses randomized filenames to avoid detection. By calculating the Shannon entropy of filenames and comparing it to a baseline, we can flag executables with unusually random names, which are often indicative of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - Common staging directories (%APPDATA%, %TEMP%, %PUBLIC%, Downloads)
      - User profile directories
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each EventID=4688, CALCULATE Shannon entropy of ProcessName. ALERT if entropy > 95th percentile of baseline. RETURN Host, ProcessName, EntropyScore
  - question: Has our machine learning model for filename analysis classified any newly executed process names as malicious with high confidence?
    context: This question applies a trained machine learning model to score filenames based on features like length, character ratios, and n-gram frequency. This allows for the detection of algorithmically generated or otherwise suspicious filenames that may not be caught by simple regex or entropy checks alone.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - Common staging directories (%APPDATA%, %TEMP%, %PUBLIC%, Downloads)
      - User profile directories
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each EventID=4688, APPLY filename classification model to ProcessName. ALERT if classification is 'malicious' with confidence > 0.9. RETURN Host, ProcessName, ModelScore
  - question: Are there any critical Windows processes (e.g., svchost.exe, lsass.exe) executing from a file path that is not on the approved list of legitimate locations?
    context: This question detects a common masquerading technique where malware is named after a legitimate system process but is placed in an unusual directory (e.g., C:\Users\Public). By maintaining a strict watchlist of critical processes and their valid paths, any deviation can be immediately flagged as a high-fidelity indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - System-critical directories (e.g., C:\Windows\System32)
      - Common user-writable directories (%TEMP%, %APPDATA%)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH EventID=4688 WHERE ProcessName IN (critical_process_list) AND ImagePath NOT IN (legitimate_path_list) RETURN Host, ProcessName, ImagePath
  - question: Are there any processes executing from a path or with a parent process that is statistically rare for that specific process name?
    context: This question establishes a behavioral baseline for every process in the environment. By profiling normal execution paths and parent-child process relationships, we can spot anomalies. A process like 'svchost.exe' running from a user's Temp folder or being spawned by 'explorer.exe' would be statistically rare and highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - System-critical directories (e.g., C:\Windows\System32)
      - Common user-writable directories (%TEMP%, %APPDATA%)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each EventID=4688, LOOKUP historical path/parent prevalence for ProcessName. ALERT if current path/parent combination is < 0.01% prevalent. RETURN Host, ProcessName, ImagePath, ParentProcess
  - question: Has an anomaly detection model identified any unusual combinations of process name, parent process, and file path during process creation events?
    context: This question uses an unsupervised machine learning model to find novel and complex deviations from normal process behavior. The model can identify suspicious combinations of features (e.g., process name, parent, path, command line) that, on their own, might not be malicious but are highly anomalous when seen together, such as 'svchost.exe' spawning from 'powershell.exe' in an AppData folder.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs
      - System-critical directories (e.g., C:\Windows\System32)
      - Common user-writable directories (%TEMP%, %APPDATA%)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: APPLY Isolation Forest model to new EventID=4688 events. ALERT on events flagged as anomalous. RETURN Host, ProcessName, ParentProcess, ImagePath, CommandLine
  - question: Have we observed a sequence of file create, second file create in a new path, process execute from the new path, and original file delete, all on one host within a short time window?
    context: This question looks for a specific, ordered pattern of events that directly corresponds to a file relocation and execution sequence. Detecting this exact sequence (Create A -> Create B -> Execute B -> Delete A) is a high-confidence indicator that an adversary is trying to cover their tracks after moving a malicious payload.
    answer_sources:
      - Windows Event ID 4663 (File Create/Delete)
      - Windows Event ID 4660 (Object Delete)
      - Windows Event ID 4688 (Process Create)
      - Endpoint Detection and Response (EDR) logs
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CORRELATE per host (EventID=4663 Path=A), (EventID=4663 Path=B), (EventID=4688 Path=B), (EventID=4660 or 4663 Path=A) within 2 minutes. ALERT on sequence match.
  - question: Has a host exhibited a statistically rare sequence of file create, copy, execute, and delete events?
    context: This question hunts for the malware relocation pattern by analyzing the frequency of the event sequence itself. While a single part of the sequence is common, the entire chain (create-copy-execute-delete) is statistically very rare for benign software behavior. Flagging hosts where this sequence occurs, even once, can uncover sophisticated attempts to hide malware.
    answer_sources:
      - Windows Event ID 4663 (File Create/Delete)
      - Windows Event ID 4660 (Object Delete)
      - Windows Event ID 4688 (Process Create)
      - Endpoint Detection and Response (EDR) logs
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: DEFINE sequence S = (Create A, Create B, Exec B, Delete A). CALCULATE enterprise-wide frequency of sequence S. ALERT on any host exhibiting sequence S.
  - question: Has our sequence-based anomaly detection model flagged any file and process event streams as having a high reconstruction error?
    context: This question leverages a sophisticated machine learning model (like an LSTM Autoencoder) that learns the "normal grammar" of system activity. When an unusual sequence of events occurs, such as the create-copy-execute-delete pattern of malware relocation, the model fails to reconstruct it accurately, resulting in a high error score that triggers an alert for a novel, unseen behavior.
    answer_sources:
      - Windows Event ID 4663 (File Create/Delete)
      - Windows Event ID 4660 (Object Delete)
      - Windows Event ID 4688 (Process Create)
      - Endpoint Detection and Response (EDR) logs
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: STREAM file/process events into LSTM autoencoder model. ALERT when reconstruction error exceeds threshold. RETURN Host, AnomalousEventSequence, ErrorScore
  - question: Has a process running from a high-risk directory (e.g., %TEMP%) made an external network connection to an IP not on our organizational allowlist?
    context: This question correlates process execution location with network activity. Malware is often dropped in user-writable, temporary locations that are sometimes excluded from security scans. If a process from one of these locations, which is not already on a software allowlist, communicates with an unknown external destination, it is highly suspicious and could indicate C2 communication.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint process execution logs
      - Network egress points (firewalls, proxies)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: JOIN EventID=4688 with Zeek conn.log on SrcIP. ALERT if ProcessPath in ('%TEMP%', '%PUBLIC%') AND ProcessHash NOT in (allowlist) AND DestIP NOT in (org_allowlist).
  - question: Is a process from a high-risk directory making a TLS connection where the server's JA3S hash is rare, or is the outbound data volume anomalously large?
    context: This question adds statistical analysis to network connections from suspicious processes. A rare JA3S hash can indicate a non-standard or malicious server, while an unusually large data transfer can be a sign of data exfiltration. Both are strong indicators of malicious activity, especially when originating from a process in a risky location.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek ssl.log
      - Endpoint process execution logs
      - Network egress points (firewalls, proxies)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR connections from processes in high-risk paths, CHECK if JA3S hash prevalence < 1% OR outbound_bytes > 99th percentile. ALERT on match.
  - question: Has a time-series model detected anomalous network behavior (e.g., connection count, data volume) for processes running from high-risk locations?
    context: This question aims to detect C2 communication patterns, like heartbeating, or data exfiltration from malware. By modeling the normal temporal network behavior of processes, a machine learning model can detect when a process deviates from its baseline, such as initiating connections at a regular, fixed interval or suddenly sending a large amount of data.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Endpoint process execution logs
      - Network egress points (firewalls, proxies)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: APPLY time-series forecast model to network features from Zeek logs for at-risk processes. ALERT when forecast error is anomalously high.