name: T1070.001: Clear Windows Event Logs
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps answer the question, "Is an adversary attempting to evade defenses by clearing logs?". It provides investigative steps to detect various methods of log clearing, including the execution of known log-clearing utilities, the use of built-in commands like wevtutil.exe or Clear-EventLog, direct deletion of .evtx files, stopping the event log service or log forwarding, and correlating log clearing events with other suspicious activities on a host.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a known log-clearing utility, identified by its file hash or path, been executed?
  context: This question aims to detect the direct execution of malicious tools known for their log-clearing capabilities. By monitoring process creation events (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104), analysts can identify if a file hash or execution path matches a curated list of threat intelligence indicators. A positive match is a strong signal that an adversary is attempting to cover their tracks using a recognized malicious utility.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers, Critical Application Servers, User Workstations, Endpoints of privileged users
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process creation logs (EID 4688) OR script block logs (EID 4104) WHERE process hash IN (threat_intel_hash_list) OR process path IN (known_malicious_paths)
- question: Has a statistically rare process executed from an uncommon directory, potentially indicating a disguised log-clearing tool?
  context: This question focuses on identifying anomalous process executions that deviate from established baselines. Adversaries often place tools in unusual locations (e.g., C:\Users\Public) to avoid detection. By profiling normal parent-child process relationships and execution paths across the enterprise, analysts can flag executions that are statistically infrequent. A rare process name executing from a low-prevalence directory, especially with an unusual parent process, is highly suspicious and could indicate a renamed or custom log-clearing tool.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers, Critical Application Servers, User Workstations, Endpoints of privileged users
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: CALCULATE process name frequency and path frequency across all hosts. ALERT on process creation events (EID 4688) WHERE process name frequency < 1% AND path frequency is low AND parent process is unusual.
- question: Can machine learning models classify process executions as malicious based on features like entropy, command-line arguments, and path rarity?
  context: This question leverages machine learning to automate the detection of malicious process executions associated with log clearing. A supervised model can be trained on a rich set of features, including process name entropy, command-line argument characteristics, parent process reputation, and the statistical rarity of the file path. This approach allows for the real-time classification of new events, providing a more sophisticated and adaptable detection mechanism than static rules alone.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers, Critical Application Servers, User Workstations, Endpoints of privileged users
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: APPLY trained classification model to real-time stream of process creation events (EID 4688, 4104). ALERT on events classified as 'malicious' with high confidence.
- question: Has the Windows Security Audit Log been cleared (Event ID 1102), or have commands like `wevtutil` or `Clear-EventLog` been used?
  context: This question seeks to find direct, explicit evidence of log clearing activity. The generation of Windows Event ID 1102 ("The audit log was cleared") is a definitive indicator. Additionally, searching process command-line logs (Event ID 4688) and PowerShell script logs (Event ID 4104) for the execution of `wevtutil.exe` with 'cl' or 'clear-log' arguments, or the `Clear-EventLog` cmdlet, provides concrete proof of an attempt to erase event logs. Such events are almost always malicious and require immediate investigation.
  answer_sources:
  - Windows Event ID 1102
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers, Windows Servers with security logging enabled, SIEM/Log Aggregator, Privileged Access Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH for Event ID 1102 OR (Event ID 4688/4104 WHERE command_line contains 'wevtutil.*cl' OR 'wevtutil.*clear-log' OR 'Clear-EventLog').
- question: Has a non-administrative user or a user outside of their normal activity window attempted to clear event logs?
  context: This question aims to detect anomalous log clearing activity by baselining normal administrative behavior. While certain system administrators may legitimately clear logs, usage by other accounts is highly suspicious. By profiling which accounts typically use `wevtutil.exe` or `Clear-EventLog` and at what times, an alert can be generated when an unauthorized user performs this action or a legitimate user does so at an unusual time (e.g., late at night).
  answer_sources:
  - Windows Event ID 1102
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers, Windows Servers with security logging enabled, SIEM/Log Aggregator, Privileged Access Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: BASELINE user activity for `wevtutil` and `Clear-EventLog`. ALERT if command is executed by user NOT IN (admin_group) OR if execution time is > 2 standard deviations from user's mean activity time.
- question: Can obfuscated or complex command-line variations of log clearing commands be detected using NLP models?
  context: Adversaries often obfuscate commands to evade simple string-based detections. This question explores using Natural Language Processing (NLP) to identify functionally equivalent but syntactically different log clearing commands. By analyzing features like token sequences, character n-grams, and entropy within command-line and script block content (from Event IDs 4688 and 4104), a model can learn to spot obfuscated variations (e.g., using environment variables, string concatenation) that a human or simple regex might miss.
  answer_sources:
  - Windows Event ID 1102
  - Windows Event ID 4688
  - Windows Event ID 4104
  - Domain Controllers, Windows Servers with security logging enabled, SIEM/Log Aggregator, Privileged Access Workstations
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: APPLY NLP classification model to command-line and script block data. ALERT on commands classified as 'obfuscated log clearing' with high confidence.
- question: Has there been an attempt to directly delete a Windows Event Log file (`.evtx`) from its default directory?
  context: This question addresses a direct and crude method of defense evasion, deleting the log files themselves. To detect this, an audit policy (SACL) must be enabled on the `C:\Windows\System32\winevt\Logs\` directory. An alert on Windows Event ID 4663 (An attempt was made to access an object) that shows a 'DELETE' access request for a file ending in `.evtx` in this specific directory is a high-fidelity indicator of malicious activity, as legitimate processes should not be deleting these files manually.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - File systems of critical Windows hosts (Domain Controllers, member servers), especially those with object access auditing enabled on the winevt directory
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH file audit logs (EID 4663) WHERE object name contains '\winevt\Logs\' AND object name ends with '.evtx' AND access type is 'DELETE'.
- question: Has there been a statistically abnormal spike in file deletion attempts within the Windows Event Log directory?
  context: This question aims to detect mass deletion of log files by looking for statistical anomalies. Instead of a single deletion, an adversary might try to remove multiple log files at once. By establishing a baseline for the normal rate of file access/deletion events (Event ID 4663) in the `winevt\Logs` directory, a sudden, significant increase (e.g., a 3-sigma event) can be flagged as an anomaly, pointing to a potential attempt to scrub evidence.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - File systems of critical Windows hosts (Domain Controllers, member servers), especially those with object access auditing enabled on the winevt directory
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: CALCULATE rolling average and standard deviation of deletion events (EID 4663) per hour for the `winevt\Logs` directory. ALERT if current hourly count > (mean + 3 * std_dev).
- question: Can an unsupervised machine learning model identify anomalous file deletion attempts against event log files?
  context: This question uses an unsupervised ML approach to find unusual file access patterns without pre-existing labels. An anomaly detection model, like Isolation Forest, can be trained on file system audit data (Event ID 4663) using features like the process name, target file path, and access type. The model learns what "normal" file system activity looks like and can then flag rare and suspicious combinations, such as a non-system process (e.g., `cmd.exe`) requesting 'DELETE' access on a `.evtx` file, as a high-scoring anomaly.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - File systems of critical Windows hosts (Domain Controllers, member servers), especially those with object access auditing enabled on the winevt directory
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: APPLY trained anomaly detection model to file system audit events (EID 4663). ALERT on events flagged as high-scoring anomalies, especially involving 'DELETE' access on '.evtx' files by non-system processes.
- question: Has the 'Windows Event Log' service been stopped, or has a host stopped forwarding logs to the central collector?
  context: This question targets two key methods of blinding security monitoring, stopping the event log service itself or cutting off its communication. The first can be detected directly by looking for Windows Event ID 7036 ("The Windows Event Log service entered the stopped state"). The second can be detected by creating a "heartbeat" rule in the SIEM. If a host is known to be active on the network (e.g., has recent network traffic) but has not sent any logs for a set period, it indicates a potential log forwarding issue, which could be a deliberate act of defense evasion.
  answer_sources:
  - Windows Event ID 7036
  - SIEM internal health/telemetry logs
  - Zeek conn.log
  - SIEM/Log Aggregation Platform, Network Flow Collectors, Domain Controllers, Critical Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH for Event ID 7036 WHERE service name is 'eventlog' AND state is 'stopped'. ALSO, ALERT if a host has recent network activity but no logs received in the last 15 minutes.
- question: Has the log volume from a specific host dropped to a statistically unusual low level?
  context: This question aims to detect a suspicious drop in log volume that doesn't represent a complete stoppage. An adversary might selectively disable certain logs, causing a reduction but not a total cessation of data. By establishing a baseline of the normal event rate (events per minute) for each host, a sustained drop below a certain percentile (e.g., the 5th percentile) can be flagged as an anomaly, especially if it's not correlated with a legitimate shutdown event.
  answer_sources:
  - Windows Event ID 7036
  - SIEM internal health/telemetry logs
  - Zeek conn.log
  - SIEM/Log Aggregation Platform, Network Flow Collectors, Domain Controllers, Critical Servers
  range: Last 30 days
  queries:
  - technology: Pseudocode
    query: BASELINE log volume per minute for each host. ALERT if current rate is below 5th percentile for > 5 minutes AND no shutdown event is observed.
- question: Is the current log volume from a host significantly lower than what a time-series forecasting model predicted?
  context: This question applies a more sophisticated time-series analysis to detect "unnatural silence" from a host. A forecasting model (like SARIMA or Prophet) can be trained on a host's historical log volume data to learn its daily and weekly patterns. The model can then predict the expected log volume for the near future. If the actual volume received falls significantly below the predicted range (e.g., below the 99% confidence interval), it triggers a high-fidelity alert, indicating that something is preventing logs from being generated or sent as expected.
  answer_sources:
  - Windows Event ID 7036
  - SIEM internal health/telemetry logs
  - Zeek conn.log
  - SIEM/Log Aggregation Platform, Network Flow Collectors, Domain Controllers, Critical Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: TRAIN time-series model on host log volume. PREDICT expected volume for next 5 minutes. ALERT if actual volume is below the 99% prediction confidence interval.
- question: Did a log clearing event occur shortly after other high-risk activities like privilege escalation or persistence?
  context: This question focuses on contextualizing a log clearing event by correlating it with other malicious activities. A log clearing event on its own is suspicious, but when it occurs within a short time frame (e.g., 30 minutes) of events like special privilege assignment (Event ID 4672), new user creation (4720), or new service installation (7045) on the same host, it dramatically increases the confidence that a multi-stage attack is in progress. This correlation turns individual alerts into a high-severity incident.
  answer_sources:
  - Windows Event ID 1102
  - Windows Event ID 4688
  - Windows Event ID 4672
  - Windows Event ID 4720
  - Windows Event ID 7045
  - Windows Event ID 4728
  - Windows Event ID 4732
  - SIEM/Correlation Engine, Domain Controllers, Critical Application Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: CREATE correlation rule. IF (log clearing event) occurs on host AND (privilege escalation OR persistence event) occurred on same host within last 30 minutes, THEN CREATE high-severity incident.
- question: Has a host accumulated a high risk score due to a rapid sequence of suspicious events, including log clearing?
  context: This question uses a risk scoring model to identify hosts exhibiting a pattern of malicious behavior. Instead of relying on a single rule, this approach assigns weighted points to different types of security events based on their severity (e.g., log clearing might be worth 50 points, persistence 20 points). By summing these scores over a sliding time window (e.g., 60 minutes) for each host, an analyst can identify systems that are rapidly accumulating risk. An alert is triggered when a host's score crosses a threshold, indicating a likely compromise.
  answer_sources:
  - Windows Event ID 1102
  - Windows Event ID 4688
  - Windows Event ID 4672
  - Windows Event ID 4720
  - Windows Event ID 7045
  - Windows Event ID 4728
  - Windows Event ID 4732
  - SIEM/Correlation Engine, Domain Controllers, Critical Application Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR EACH host, sum weighted risk scores of events over a 60-minute window. ALERT if total host score > 99th percentile of all host scores.
- question: Can graph analytics identify attack narratives that include log clearing as a step in a larger sequence of events?
  context: This question proposes a sophisticated graph-based approach to automatically correlate disparate security events into a coherent attack story. By modeling entities (users, hosts) as nodes and events as timed edges between them, graph analytics algorithms can identify closely connected clusters of activity. A subgraph that contains a 'log clearing' event node temporally linked to 'credential access' and 'lateral movement' nodes on the same or related entities provides a high-confidence, automatically generated narrative of an attack, significantly speeding up investigation.
  answer_sources:
  - Windows Event ID 1102
  - Windows Event ID 4688
  - Windows Event ID 4672
  - Windows Event ID 4720
  - Windows Event ID 7045
  - Windows Event ID 4728
  - Windows Event ID 4732
  - SIEM/Correlation Engine, Domain Controllers, Critical Application Servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: CONSTRUCT entity-event graph from security alerts. RUN community detection algorithm. ALERT on subgraphs containing a 'log clearing' node connected to other malicious activity nodes (e.g., 'privilege escalation', 'lateral movement').