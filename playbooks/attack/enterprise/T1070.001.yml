name: T1070.001: Clear Windows Event Logs
id: c3a7b9f0-8d5e-4f1a-9c6b-2e4d8f7a1c0d
description: "Investigates attempts by an adversary to evade defenses by clearing logs. This is identified by looking for the execution of known log-clearing utilities, the explicit clearing of logs via commands like `wevtutil` or the generation of Event ID 1102, the direct deletion of `.evtx` log files, the unexplained stoppage of log forwarding or the Windows Event Log service, and the temporal correlation of log clearing events with other malicious activities like privilege escalation or persistence."
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Is a known malicious log-clearing utility being executed, identified by its file hash or path?"
    context: "This question seeks to identify the direct execution of known malicious tools with log-clearing functions. Adversaries often use established utilities, and detecting their execution via process creation events (Windows Event ID 4688) by matching file hashes against a threat intelligence list or identifying execution from suspicious paths provides a high-confidence signal of malicious intent."
    answer_sources: "Windows Event ID 4688, Windows Event ID 4104 from Domain Controllers, Critical Application Servers, User Workstations, Endpoints of privileged users."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "SEARCH process creation events WHERE process_hash IN (known_malicious_hashes) OR process_path IN (known_malicious_paths) | ALERT"
  - question: "Is a rare or anomalously executed process running from an uncommon directory, potentially indicating a disguised log-clearing tool?"
    context: "This question aims to uncover unknown or disguised malicious tools by focusing on behavioral anomalies. By profiling normal parent-child process relationships and execution paths across the enterprise, we can identify outliers. A process with a rare name executing from a low-prevalence directory (e.g., C:\\Users\\Public\\) or spawned by an unusual parent (e.g., winword.exe spawning cmd.exe) is highly suspicious and warrants investigation as a potential defense evasion technique."
    answer_sources: "Windows Event ID 4688, Windows Event ID 4104 from Domain Controllers, Critical Application Servers, User Workstations, Endpoints of privileged users."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "SEARCH process creation events | CALCULATE prevalence of process_name, process_path, parent_process | ALERT where process_name_prevalence < 1% AND process_path_prevalence is low AND parent_process is anomalous"
  - question: "Can we classify a process execution as malicious based on its intrinsic characteristics, such as name entropy and command-line arguments?"
    context: "This question uses a machine learning approach to proactively classify process executions. By training a model on features like process name entropy, command-line argument length and randomness, parent process reputation, and file path rarity, the system can identify novel or obfuscated threats that may not match known signatures or simple statistical anomalies. This provides a sophisticated layer of detection for advanced log-clearing tools."
    answer_sources: "Windows Event ID 4688, Windows Event ID 4104 from Domain Controllers, Critical Application Servers, User Workstations, Endpoints of privileged users."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "INPUT process events (EID 4688, 4104) into classification model | FEATURES: name_entropy, cmd_line_length, cmd_line_entropy, parent_reputation, path_rarity | ALERT on 'malicious' classification"
  - question: "Has a Windows Event Log been explicitly cleared, either through the generation of Event ID 1102 or by command-line execution?"
    context: "This question looks for the most direct evidence of log clearing. The generation of Windows Security Event ID 1102 is a definitive indicator that the audit log was cleared. Additionally, searching process command-line logs (Event ID 4688) and PowerShell script block logs (Event ID 4104) for specific commands like `wevtutil cl` or `Clear-EventLog` provides explicit proof of an attempt to erase forensic evidence. Such events should be treated as high-priority alerts."
    answer_sources: "Windows Event ID 1102, Windows Event ID 4688, Windows Event ID 4104 from Domain Controllers, Windows Servers with security logging enabled, SIEM/Log Aggregator, Privileged Access Workstations."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "SEARCH for Event ID 1102 OR (process creation events WHERE command_line contains 'wevtutil.*cl' OR 'wevtutil.*clear-log' OR 'Clear-EventLog') | ALERT"
  - question: "Has an account that does not normally perform administrative log management tasks executed a log-clearing command?"
    context: "This question focuses on user behavior anomalies to detect malicious activity. While administrators may legitimately clear logs, the same action performed by a standard user or an account outside of its normal activity window is highly suspicious. By baselining which accounts typically use `wevtutil.exe` or `Clear-EventLog` and at what times, we can flag executions by unauthorized or compromised accounts."
    answer_sources: "Windows Event ID 1102, Windows Event ID 4688, Windows Event ID 4104 from Domain Controllers, Windows Servers with security logging enabled, SIEM/Log Aggregator, Privileged Access Workstations."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "BASELINE user activity for 'wevtutil' or 'Clear-EventLog' commands | ALERT if user not in 'admin_group' executes command OR if execution time is >2 stddev from user's mean activity hour"
  - question: "Is an obfuscated or syntactically unusual command being used to clear event logs?"
    context: "This question addresses the adversary's use of obfuscation to bypass simple keyword-based detections. A Natural Language Processing (NLP) model can be trained to understand the structure and intent of commands, even if they are intentionally malformed or complex. By analyzing features like token sequences and character n-grams, the model can identify command-line and script block entries that are functionally equivalent to log clearing but syntactically different, catching advanced evasion attempts."
    answer_sources: "Windows Event ID 1102, Windows Event ID 4688, Windows Event ID 4104 from Domain Controllers, Windows Servers with security logging enabled, SIEM/Log Aggregator, Privileged Access Workstations."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "INPUT command line and script block text (EID 4688, 4104) into NLP classification model | FEATURES: token_sequences, n-grams, entropy | ALERT on classification as 'obfuscated log clear'"
  - question: "Is a process attempting to directly delete a Windows Event Log file (.evtx)?"
    context: "This question seeks to detect a crude but effective method of evidence removal: direct file deletion. By enabling object access auditing (SACL) on the `C:\\Windows\\System32\\winevt\\Logs\\` directory, the system will generate an event (Windows Event ID 4663) for any deletion attempt. Alerting on this specific event, where the object name ends in `.evtx` and the access request is 'DELETE', provides a critical, high-fidelity signal of an adversary trying to manually erase logs."
    answer_sources: "Windows Event ID 4663, Windows Event ID 4656 from file systems of critical Windows hosts (Domain Controllers, member servers), especially those with object access auditing enabled on the winevt directory."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "REQUIRE SACL enabled on `..\\winevt\\Logs\\` | SEARCH for Event ID 4663 WHERE ObjectName ends with '.evtx' AND Accesses includes 'DELETE' | ALERT"
  - question: "Has there been an abnormal spike in deletion attempts against files in the Windows Event Log directory?"
    context: "This question uses statistical analysis to detect unusual activity targeting the log directory, which may indicate an attempt to disrupt or delete logs. By monitoring the rate of file deletion events (Event ID 4663) for the `winevt\\Logs` directory and establishing a baseline, we can detect a sudden, anomalous increase. An alert triggered by a significant deviation from the norm (e.g., a 3-sigma event) points to a potential attack, even if individual deletion attempts fail or target non-critical files within the directory."
    answer_sources: "Windows Event ID 4663, Windows Event ID 4656 from file systems of critical Windows hosts (Domain Controllers, member servers), especially those with object access auditing enabled on the winevt directory."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "MONITOR rate of file deletions (EID 4663) in `..\\winevt\\Logs\\` | CALCULATE 30-day rolling average and stddev | ALERT if current hourly count > (mean + 3 * stddev)"
  - question: "Can an unusual file access pattern, such as a non-system process deleting a log file, be identified as an anomaly?"
    context: "This question employs an unsupervised machine learning model to identify anomalous file system activities without pre-existing signatures. The model learns the normal patterns of file access, considering the process making the request, the target file, and the type of access. It can then flag rare and suspicious combinations, such as a user-space process like `explorer.exe` attempting to delete a `.evtx` file, which would be a strong indicator of malicious user activity or a compromised process."
    answer_sources: "Windows Event ID 4663, Windows Event ID 4656 from file systems of critical Windows hosts (Domain Controllers, member servers), especially those with object access auditing enabled on the winevt directory."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "INPUT file system audit events (EID 4663) into anomaly detection model | FEATURES: process_name, target_path, file_extension, access_type | ALERT on high anomaly score for 'DELETE' on '.evtx' file by non-system process"
  - question: "Has the Windows Event Log service been stopped or is a host failing to forward logs to the central collector?"
    context: "This question targets attempts to blind security monitoring by disabling the logging mechanism itself. A symbolic rule can detect the explicit stopping of the 'Windows Event Log' service via Event ID 7036. This is complemented by a 'missed heartbeat' rule in the SIEM, which alerts when a host that is confirmed to be active on the network (based on network traffic logs) suddenly stops sending logs, indicating a potential service stop, misconfiguration, or network-level block."
    answer_sources: "Windows Event ID 7036, SIEM internal health/telemetry logs, Zeek conn.log from SIEM/Log Aggregation Platform, Network Flow Collectors, Domain Controllers, Critical Servers."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "SEARCH for Event ID 7036 where service_name is 'eventlog' AND state is 'stopped' OR TRIGGER SIEM alert if active host (per Zeek logs) stops sending logs for >15 mins"
  - question: "Has the volume of logs from a host dropped to a statistically unusual low level?"
    context: "This question provides a statistical method for detecting a 'log drop' that may be more subtle than a complete stoppage. By baselining the normal event rate for each host, the system can detect a sustained and significant drop below a percentile-based threshold (e.g., the 5th percentile). This can indicate a partially disabled service or a filtered log forwarding rule implemented by an adversary, which might not trigger a simple 'service stopped' alert."
    answer_sources: "Windows Event ID 7036, SIEM internal health/telemetry logs, Zeek conn.log from SIEM/Log Aggregation Platform, Network Flow Collectors, Domain Controllers, Critical Servers."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "BASELINE event count per minute for each host | ALERT if current rate is below 5th percentile for >5 consecutive minutes AND not correlated with a shutdown event (EID 1074)"
  - question: "Is the current log volume from a host significantly lower than the predicted volume from a time-series forecast?"
    context: "This question uses a predictive, machine learning-based approach to detect 'unnatural silence' from a host. A time-series model (like SARIMA or Prophet) is trained on historical log volume data to forecast the expected volume for the near future. If the actual observed volume falls significantly below the model's prediction and its confidence interval, it triggers an anomaly alert. This method is highly effective at detecting sudden drops that deviate from established daily or weekly patterns."
    answer_sources: "Windows Event ID 7036, SIEM internal health/telemetry logs, Zeek conn.log from SIEM/Log Aggregation Platform, Network Flow Collectors, Domain Controllers, Critical Servers."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "FORECAST expected log volume using time-series model on historical data | ALERT if actual log volume falls below the lower bound of the 99% prediction confidence interval"
  - question: "Did a log clearing event occur in close temporal proximity to other high-risk activities like privilege escalation or persistence?"
    context: "This question seeks to contextualize a log clearing event by correlating it with other malicious activities. A log clearing event on its own is suspicious, but when it occurs within minutes of a new user being created (Event ID 4720), a new service being installed (Event ID 7045), or special privileges being assigned (Event ID 4672), it becomes a very strong indicator of a hands-on-keyboard attack. A SIEM correlation rule can automate the detection of this attack chain."
    answer_sources: "Windows Event ID 1102, Windows Event ID 4688, Windows Event ID 4672, Windows Event ID 4720, Windows Event ID 7045, Windows Event ID 4728, Windows Event ID 4732 from SIEM/Correlation Engine, Domain Controllers, Critical Application Servers."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "CREATE incident if (log_clear_event) occurs on same host within 30 mins of (privilege_escalation_event OR persistence_event)"
  - question: "Has a host's risk score, based on an accumulation of suspicious events, rapidly exceeded a dynamic threshold?"
    context: "This question provides a dynamic way to identify hosts under attack by aggregating risk from multiple, potentially low-severity events. By assigning weighted scores to different security events based on their ATT&CK mapping and summing them over a sliding time window, we can track a host's risk level. When a host's score rapidly increases and surpasses a threshold (e.g., the 99th percentile of all host scores), it signifies a rapid sequence of malicious activities, such as credential access followed by log clearing, warranting immediate investigation."
    answer_sources: "Windows Event ID 1102, Windows Event ID 4688, Windows Event ID 4672, Windows Event ID 4720, Windows Event ID 7045, Windows Event ID 4728, Windows Event ID 4732 from SIEM/Correlation Engine, Domain Controllers, Critical Application Servers."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "ASSIGN risk scores to events (e.g., Log Clear: +50) | SUM scores for each host over a 60-min window | ALERT if host_score > 99th percentile of all host scores"
  - question: "Can graph analytics identify a cluster of related entities (users, hosts) involved in a log clearing event as part of a larger attack narrative?"
    context: "This question uses advanced graph analytics to automatically piece together an attack story. Security alerts are modeled as a graph where nodes are entities (users, hosts, processes) and edges are the events connecting them. By applying algorithms to find closely connected subgraphs (communities), the system can identify a sequence of related events, such as a user from one host accessing credentials, using them to move to another host, and then clearing the logs. This provides a high-confidence, automatically correlated incident."
    answer_sources: "Windows Event ID 1102, Windows Event ID 4688, Windows Event ID 4672, Windows Event ID 4720, Windows Event ID 7045, Windows Event ID 4728, Windows Event ID 4732 from SIEM/Correlation Engine, Domain Controllers, Critical Application Servers."
    range: "last 90 days"
    queries:
      - search_technology: pseudocode
        query: "MODEL security events as a graph (nodes=entities, edges=events) | APPLY community detection algorithm | ALERT on subgraphs containing a 'log clearing' node connected to 'credential access' or 'lateral movement' nodes"