name: T1639.001: Exfiltration Over Unencrypted Non-C2 Protocol
id: c3b0d1e2-5a67-4890-a123-bcdeffedcba9
description: This playbook helps answer the question, "Is an adversary exfiltrating data from our mobile devices over unencrypted, non-C2 protocols?". It focuses on detecting data exfiltration techniques that leverage common, unencrypted protocols like DNS, HTTP, and FTP, which are not traditional command-and-control channels. The playbook identifies suspicious patterns such as DNS tunneling (characterized by long, high-entropy queries and atypical record types), anomalous HTTP traffic (large POST/PUT requests, non-standard user agents, or data sent to low-reputation domains), and any FTP usage from mobile devices, which is highly anomalous and often indicative of malicious activity.
type: technique
related:
- TA0036: Exfiltration
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a mobile device making DNS queries using suspicious record types (NULL, TXT) or to known malicious domains?
  context: This question aims to find the most obvious signs of DNS tunneling. Unauthorized NULL or TXT queries are a classic indicator, as they allow for embedding data. Checking against a threat intelligence list provides a high-confidence way to detect known bad infrastructure. A positive finding is a strong signal of malicious activity.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows DNS Server Analytic logs
  - MDM/UEM Network Flow Logs
  - Network egress points
  - DNS resolver logs
  - VPN concentrators
  - corporate Wi-Fi access point logs
  - Mobile Device Management (MDM) platforms
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - siem: |
      SEARCH for DNS queries from mobile_device_ip_range
      WHERE (query_type is 'NULL' or query_type is 'TXT')
      AND destination_domain is NOT in authorized_service_list
      OR
      SEARCH for DNS queries from mobile_device_ip_range
      WHERE destination_domain is in dns_tunneling_threat_intel_list
      ALERT with high severity
- question: Is a mobile device exhibiting anomalous DNS query patterns, such as unusually long queries, high entropy, or a high query rate to a single domain?
  context: This question looks for statistical anomalies that suggest DNS tunneling, even when the destination domain is unknown. Adversaries often encode data into long, random-looking subdomains, which increases query length and Shannon entropy. A high query rate to a single parent domain is necessary to exfiltrate a meaningful amount of data. Detecting these behaviors via baselining can uncover novel threats.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows DNS Server Analytic logs
  - MDM/UEM Network Flow Logs
  - Network egress points
  - DNS resolver logs
  - VPN concentrators
  - corporate Wi-Fi access point logs
  - Mobile Device Management (MDM) platforms
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - siem: |
      FOR each mobile device, BASELINE 99th percentile of query length and mean query rate over 30 days.
      IN REAL-TIME:
      IF query_length > device_baseline_99th_percentile OR shannon_entropy(subdomain) > 4.5, ALERT medium.
      IF query_rate_to_domain > (device_baseline_rate + 3 * stdev) over 1 min, ALERT medium.
      IF both alerts trigger for same device and domain within 5 mins, ESCALATE to high.
- question: Can a machine learning model identify malicious DNS queries based on a combination of features like length, entropy, character ratios, and historical rarity?
  context: This question proposes a more sophisticated, machine learning-based approach to detection. By combining multiple weak indicators into a single predictive model (like a Random Forest), it's possible to identify complex malicious patterns with higher accuracy and fewer false positives than simple rule-based alerts. A supplementary time-series model on TXT query volume can further detect anomalous aggregate behavior.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Windows DNS Server Analytic logs
  - MDM/UEM Network Flow Logs
  - Network egress points
  - DNS resolver logs
  - VPN concentrators
  - corporate Wi-Fi access point logs
  - Mobile Device Management (MDM) platforms
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each live DNS query:
        features = [query_length, shannon_entropy(subdomain), numeric_char_ratio, query_type, domain_rarity, source_ip_qtype_entropy]
        prediction = random_forest_model.predict_proba(features)
        IF prediction > 0.9, FLAG for investigation.
      FORECAST expected volume of TXT queries per device using SARIMA model.
      IF observed_volume > forecast_confidence_interval, FLAG for investigation.
- question: Is a mobile device sending HTTP POST/PUT requests to known malicious domains, newly registered domains, or using non-standard user agents indicative of scripting tools?
  context: This question focuses on high-confidence indicators of HTTP-based exfiltration. Traffic to known bad domains is an obvious red flag. Adversaries often use newly registered domains for their operations, so checking domain age is a valuable heuristic. Finally, user agents for tools like 'curl' or 'python-requests' are highly anomalous for mobile apps and strongly suggest non-interactive, scripted data transfer.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek files.log
  - MDM/UEM Network Flow Logs
  - Network egress points
  - API Gateways
  - web proxy logs
  - MDM/UEM logs with network activity
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - siem: |
      SEARCH for HTTP POST or PUT requests from mobile_device_ip_range
      WHERE destination_host in malicious_c2_threat_intel_feed
      OR domain_registration_age(destination_host) < 30 days
      OR user_agent contains ('curl', 'wget', 'python-requests')
      ALERT with high severity
- question: Is a mobile device sending an unusually large volume of data via HTTP POST/PUT requests, or does the request body have high entropy, or is the POST-to-GET ratio abnormal?
  context: This question aims to detect HTTP exfiltration by looking for statistical deviations from a device's normal behavior. A sudden large upload, encrypted or compressed data (which has high entropy), or a shift in the ratio of uploads (POSTs) to downloads (GETs) can all indicate that data is being exfiltrated, even to a seemingly legitimate destination.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek files.log
  - MDM/UEM Network Flow Logs
  - Network egress points
  - API Gateways
  - web proxy logs
  - MDM/UEM logs with network activity
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - siem: |
      FOR each mobile device, BASELINE 99th percentile of POST/PUT body size and mean POST/GET ratio over 30 days.
      IN REAL-TIME:
      IF POST/PUT body_size > device_baseline_99th_percentile OR body_size > 5MB, ALERT medium.
        IF alert, calculate shannon_entropy(request_body). IF entropy > 4.2, ESCALATE alert.
      IF POST/GET ratio > (device_baseline_ratio + 3 * stdev), ALERT medium.
- question: Can machine learning models (like Isolation Forest or an LSTM autoencoder) detect anomalous HTTP requests or user data transfer patterns?
  context: This question proposes using advanced anomaly detection models to find subtle instances of HTTP exfiltration. An Isolation Forest can identify outlier requests based on a combination of features that might not trigger individual rules. An LSTM autoencoder, which learns a user's normal data transfer patterns over time, can flag significant deviations, such as a sudden, large data upload, as anomalous.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek files.log
  - MDM/UEM Network Flow Logs
  - Network egress points
  - API Gateways
  - web proxy logs
  - MDM/UEM logs with network activity
  - Cloud Access Security Broker (CASB) logs
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each live HTTP request:
        features = [post_body_len, dest_ip_rarity, body_entropy, user_agent_rarity, content_type_rarity, post_get_ratio]
        is_outlier = isolation_forest_model.predict(features)
        IF is_outlier, FLAG for investigation.
      MONITOR time-series of outbound data volume per user with LSTM autoencoder.
      IF reconstruction_error > threshold, FLAG for investigation.
- question: Is a mobile device initiating any FTP connections, especially those involving file uploads (STOR, APPE) or from devices without an approved FTP client?
  context: This question is based on a zero-tolerance policy for a highly suspicious protocol. FTP is an old, unencrypted protocol that has no legitimate use case on modern, managed mobile devices. Any FTP connection, especially one involving an upload command ('STOR' or 'APPE'), should be treated as a critical, high-confidence indicator of malicious activity. Verifying against an MDM application inventory can confirm if the activity is unauthorized.
  answer_sources:
  - Zeek ftp.log
  - Zeek conn.log
  - MDM/UEM Network Flow Logs
  - MDM/UEM Application Inventory
  - Network egress points
  - network firewalls
  - VPN concentrators
  - corporate Wi-Fi access points
  - DMZ network segments
  range: last 90 days
  queries:
  - siem: |
      SEARCH for connections where source_ip is in mobile_device_ip_range AND destination_port is 21
      ALERT with critical severity.
      IF FTP logs show command is 'STOR' or 'APPE', ESCALATE.
      CORRELATE device with MDM. IF no approved FTP client is installed, ESCALATE to confirmed malicious.
- question: If an FTP connection from a mobile device is detected, does the session involve a large data transfer volume?
  context: This question provides a method for prioritizing and escalating an already critical FTP alert. While any FTP is bad, a session transferring a large amount of data (e.g., >10MB) is an unambiguous sign of bulk data exfiltration in progress and requires immediate incident response. Comparing the session size to the device's historical network behavior provides another data point for assessing severity.
  answer_sources:
  - Zeek ftp.log
  - Zeek conn.log
  - MDM/UEM Network Flow Logs
  - MDM/UEM Application Inventory
  - Network egress points
  - network firewalls
  - VPN concentrators
  - corporate Wi-Fi access points
  - DMZ network segments
  range: last 90 days
  queries:
  - pseudocode: |
      ON FTP alert:
      CALCULATE total_volume = sent_bytes + received_bytes for the session.
      BASELINE 99.9th percentile of all session volumes for the device over 30 days.
      IF total_volume > 10MB OR total_volume > device_baseline_99.9th_percentile, ESCALATE to highest priority.
- question: Can peer group analysis using K-Means clustering identify mobile devices with anomalous network behaviors, such as the use of FTP?
  context: This question proposes an unsupervised machine learning approach to find outlier devices. By clustering devices based on their network behavior (protocols used, data volumes, etc.), devices that behave differently from their peers will be isolated into small clusters. A device that is the only one (or one of very few) using FTP will be flagged as a high-confidence anomaly, even without a specific rule for FTP. This helps find the "weird one out."
  answer_sources:
  - Zeek ftp.log
  - Zeek conn.log
  - MDM/UEM Network Flow Logs
  - MDM/UEM Application Inventory
  - Network egress points
  - network firewalls
  - VPN concentrators
  - corporate Wi-fi access points
  - DMZ network segments
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each mobile device, create daily feature vector: [did_use_ftp, distinct_protocol_count, dest_port_entropy, avg_outbound_bytes, session_count]
      RUN K-Means clustering on all device vectors.
      IDENTIFY devices in small clusters or in clusters defined by FTP usage.
      FLAG these devices as high-confidence anomalies for investigation.