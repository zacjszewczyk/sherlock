name: T1496: Resource Hijacking
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary is impacting system or service availability by hijacking resources for purposes like cryptocurrency mining. It provides investigative steps to detect this activity by identifying network connections to known malicious infrastructure, processes matching cryptomining software signatures, masquerading system processes, anomalously long-lived network connections, and traffic patterns or content specific to mining protocols like Stratum.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has an internal host connected to a known cryptomining pool or C2 infrastructure?
  context: This question aims to detect direct communication with known malicious infrastructure associated with resource hijacking. By cross-referencing network logs (connection, DNS, and SSL/TLS) with threat intelligence feeds, we can identify hosts that are potentially compromised and participating in a cryptomining operation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network egress points (e.g., firewalls, proxies)
  - Internal DNS resolvers
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH network_logs (conn, dns, ssl) WHERE destination_ip OR dns_query OR tls_sni IN cryptomining_ioc_list
- question: Is any host exhibiting an unusually high frequency of connections to known mining pool IPs compared to its peers?
  context: This question looks for behavioral anomalies. Instead of a single connection, it focuses on a high volume of connections, which can be indicative of a persistent miner. By baselining normal activity and flagging outliers (e.g., the 99th percentile), we can detect compromised systems even if the individual connections are short-lived.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network egress points (e.g., firewalls, proxies)
  - Internal DNS resolvers
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH network_logs | GROUPBY source_host, time_window=1h | COUNT connections to mining_ips | COMPARE count to enterprise_baseline_99th_percentile
- question: Can we use machine learning to predictively identify network connections related to resource hijacking?
  context: This question explores a proactive, predictive approach. By training a machine learning model on features like connection duration, data volume, port, and protocol, we can identify suspicious connections that may not match known IOCs but share characteristics with previously observed malicious activity. This helps detect new or unknown mining operations.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Network egress points (e.g., firewalls, proxies)
  - Internal DNS resolvers
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SCORE network_connections using classification_model | FILTER probability_score > threshold | ALERT
- question: Was a process created with a name or command-line arguments matching known cryptomining software?
  context: This question focuses on detecting the execution of known cryptomining software on endpoints. By searching for specific process names (e.g., xmrig.exe) and command-line flags (e.g., --stratum+tcp://) in process creation logs, we can directly identify the presence of a resource hijacker.
  answer_sources:
  - Windows Event ID 4688
  - Critical servers (e.g., web servers, database servers)
  - Domain Controllers
  - user workstations
  - virtual desktop infrastructure (VDI) fleet
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH process_creation_logs (EventID 4688) WHERE process_name OR command_line MATCHES cryptominer_regex_ruleset
- question: Is a known system process being executed with an unusually complex or randomized command line?
  context: This question aims to detect obfuscated miner execution. Adversaries often randomize command-line arguments to evade simple signature-based detection. A high Shannon entropy score indicates high randomness, which is atypical for legitimate system processes and can reveal attempts to hide malicious parameters.
  answer_sources:
  - Windows Event ID 4688
  - Critical servers (e.g., web servers, database servers)
  - Domain Controllers
  - user workstations
  - virtual desktop infrastructure (VDI) fleet
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH process_creation_logs | CALCULATE shannon_entropy(command_line) | BASELINE entropy by process_name | ALERT where entropy > (mean + 3*stdev)
- question: Are there clusters of unusual or outlier process creation events that do not align with normal system activity?
  context: This question uses unsupervised machine learning to find "unknown unknowns." By clustering process creation events based on features like command line length, parent process, and entropy, we can identify groups of anomalous processes that deviate from established patterns of legitimate software execution, potentially revealing novel or custom resource hijacking tools.
  answer_sources:
  - Windows Event ID 4688
  - Critical servers (e.g., web servers, database servers)
  - Domain Controllers
  - user workstations
  - virtual desktop infrastructure (VDI) fleet
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: CLUSTER process_creation_events using DBSCAN | IDENTIFY and INVESTIGATE outlier_clusters
- question: Has a common system utility been executed from an unauthorized or non-standard file path?
  context: This question addresses the tactic of masquerading, where malware mimics a legitimate system process (e.g., svchost.exe) but runs from an unusual location (e.g., a user's temp folder). By enforcing an allowlist of legitimate paths for critical system utilities, we can quickly spot these impostors.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Authentication servers
  - Application servers
  - User workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH process_creation_logs | WHERE process_name IN system_utility_list AND process_path NOT IN allowed_path_list
- question: Is a critical system process running for a statistically anomalous and extended period?
  context: This question uses process runtime as a behavioral indicator of compromise. Resource hijacking tools often run for long durations to maximize their gain. A legitimate system process that typically runs for seconds or minutes but is now running for hours is highly suspicious and warrants investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Authentication servers
  - Application servers
  - User workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: CALCULATE process_duration from start/end events | BASELINE duration by process_name and host | ALERT where duration > (mean + 3*stdev)
- question: Can machine learning be used to predictively identify masquerading processes based on their execution context?
  context: This question leverages machine learning to build a more robust detection for process masquerading. By training a model on features like parent process, file path characteristics (depth, user-writable), and process name, we can create a scoring system to flag suspicious executions that might evade simpler rule-based checks.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Authentication servers
  - Application servers
  - User workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SCORE new_process_events using masquerade_classification_model | FILTER probability_score > threshold | ALERT
- question: Is an internal host making extremely long-lived TCP connections to ports commonly associated with cryptomining?
  context: This question combines two strong indicators - long connection duration and the use of non-standard ports known to be used by mining pools (e.g., 3333, 4444). A persistent connection lasting many hours to such a port is a high-fidelity signal for resource hijacking.
  answer_sources:
  - Zeek conn.log
  - Network egress points (e.g., firewalls, proxies)
  - Internet Gateway
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH network_logs (Zeek conn) WHERE protocol=tcp AND duration > 8h AND destination_port IN known_mining_ports
- question: Is a host exhibiting connections that are both anomalously long and directed to a very small set of destination ports?
  context: This question refines the long-connection detection by adding a port entropy analysis. Mining clients typically connect to one or very few pool servers. Therefore, a host with long-duration connections and very low destination port diversity (low entropy) is likely communicating with a C2 or mining pool, rather than engaging in diverse, legitimate web browsing.
  answer_sources:
  - Zeek conn.log
  - Network egress points (e.g., firewalls, proxies)
  - Internet Gateway
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH network_logs | BASELINE connection_duration per host | ALERT on duration > 99th_percentile | CORRELATE with low destination_port_entropy for same host
- question: Can we identify groups of network connections across the enterprise that share the characteristics of mining traffic?
  context: This question uses unsupervised learning to find patterns of resource hijacking across multiple hosts. By clustering connections based on features like duration, data volume, and port, we can identify a "mining traffic" profile (e.g., long duration, high symmetrical data transfer, non-standard port) and then find all hosts exhibiting that behavior.
  answer_sources:
  - Zeek conn.log
  - Network egress points (e.g., firewalls, proxies)
  - Internet Gateway
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: CLUSTER network_connections using K-Means on features(duration, bytes, port) | IDENTIFY and INVESTIGATE hosts in anomalous_clusters
- question: Is any network traffic containing keywords specific to mining protocols like Stratum, such as 'login' or 'submit' in JSON-RPC calls?
  context: This question involves deep packet inspection or application layer log analysis to find protocol-specific artifacts. Many mining protocols are layered on top of HTTP/S and use JSON-RPC. Searching for these specific method calls within HTTP request bodies is a highly effective way to confirm mining activity.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - Web proxies
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH http_logs WHERE http_method=POST AND request_body CONTAINS 'jsonrpc' AND ('login' OR 'submit' OR 'getjob')
- question: Are there any long-duration connections exhibiting a highly periodic, 'heartbeat'-like communication pattern?
  context: This question looks for the rhythmic nature of automated protocols. Unlike human-driven traffic, which is bursty and irregular, mining clients communicate with their pools at very regular intervals. A low variance in packet inter-arrival times is a strong indicator of this machine-to-machine communication.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - Web proxies
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: FOR long_duration_connections | ANALYZE packet_inter_arrival_times | ALERT if variance is near_zero
- question: Is any host showing a sustained, unexplained increase in outbound network traffic that deviates from its normal daily and weekly patterns?
  context: This question analyzes network traffic volume over time. A compromised host running a cryptominer will constantly be sending "shares" (proofs of work) to the mining pool, resulting in a persistent and often significant increase in outbound data. Time series anomaly detection can automatically flag hosts whose traffic patterns deviate from their established baseline.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - Web proxies
  - Core network switches
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: CREATE timeseries of outbound_bytes per host | APPLY SARIMA model | ALERT on anomalies deviating from baseline seasonality