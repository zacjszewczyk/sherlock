name: T1496: Resource Hijacking
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary is impacting system or service availability by hijacking resources for purposes like cryptocurrency mining. It focuses on detecting this activity by identifying network connections to known mining pool infrastructure, recognizing process execution signatures of mining software, spotting process masquerading techniques, analyzing network traffic for anomalously long durations, and inspecting traffic content for protocol-specific keywords.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a host established a network connection to a known cryptomining pool or resource hijacking C2 infrastructure?
  context: This question aims to identify direct communication with known malicious infrastructure associated with resource hijacking. Matching network logs (connection, DNS, TLS) against threat intelligence feeds is a high-fidelity method for detecting active cryptomining activity. An alert from this query indicates a likely compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network egress points (e.g., firewalls, proxies)
  - Internal DNS resolvers
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search (conn.log OR dns.log OR ssl.log) | join by UID | where destination_ip IN (cryptomining_ioc_list) OR dns_query IN (cryptomining_ioc_list) OR tls_sni IN (cryptomining_ioc_list) | alert
- question: Is any host making an anomalously high number of connections to known mining pools compared to its peers?
  context: This question moves beyond simple IOC matching to detect potential resource hijacking activity through behavioral analysis. A host making significantly more connections to mining pools than the enterprise baseline may indicate a more aggressive or widespread infection. This helps prioritize investigations by identifying the most active clients.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network egress points (e.g., firewalls, proxies)
  - Internal DNS resolvers
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search (conn.log OR dns.log OR ssl.log) | where destination IN (cryptomining_ioc_list) | stats count by source_host over 1h | where count > enterprise_99th_percentile_baseline | alert
- question: Can machine learning models identify network connections that have a high probability of being related to resource hijacking, even without known IOCs?
  context: This question explores a proactive, predictive approach to detection. By training a model on features like connection duration, data volume, and port, it's possible to identify novel or unlisted mining infrastructure based on its network behavior, providing a layer of defense against emerging threats.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Network egress points (e.g., firewalls, proxies)
  - Internal DNS resolvers
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: stream conn.log, ssl.log | featurize (duration, bytes, port, protocol, tls_version, ioc_flag) | predict with gradient_boosting_model | where probability > threshold | alert
- question: Has a process been created with a name or command-line argument that matches signatures of known cryptomining software?
  context: This question focuses on detecting the execution of known resource hijacking tools on endpoints. By searching for specific process names (e.g., xmrig.exe) and command-line flags (e.g., stratum+tcp://), analysts can directly identify the presence of mining software, providing strong evidence of a compromise.
  answer_sources:
  - Windows Event ID 4688
  - Critical servers (e.g., web servers, database servers)
  - Domain Controllers
  - user workstations
  - virtual desktop infrastructure (VDI) fleet
  range: last 90 days
  queries:
  - search: pseudocode
    query: search event_id=4688 | where process_name matches (miner_regex) OR command_line matches (miner_cli_regex) | alert
- question: Is a process executing with an unusually complex or randomized command line, potentially indicating obfuscated miner arguments?
  context: Adversaries often obfuscate or randomize command-line arguments to evade simple signature-based detection. This question uses entropy analysis to identify processes with abnormally high command-line complexity, which can be a strong indicator of malicious software attempting to hide its configuration.
  answer_sources:
  - Windows Event ID 4688
  - Critical servers (e.g., web servers, database servers)
  - Domain Controllers
  - user workstations
  - virtual desktop infrastructure (VDI) fleet
  range: last 90 days
  queries:
  - search: pseudocode
    query: search event_id=4688 | calculate entropy(command_line) as cmd_entropy | stats avg(cmd_entropy), stdev(cmd_entropy) by process_name | join with live_events | where live_cmd_entropy > (avg + 3*stdev) | alert
- question: Do any process creation events form anomalous clusters or outliers that deviate from normal software execution patterns?
  context: This question uses unsupervised machine learning to find "unknown unknowns." By clustering process creation events based on features like command line length and parent process, analysts can identify groups of unusual activity that don't match any known signatures but stand out from established baselines, potentially revealing new or customized resource hijacking tools.
  answer_sources:
  - Windows Event ID 4688
  - Critical servers (e.g., web servers, database servers)
  - Domain Controllers
  - user workstations
  - virtual desktop infrastructure (VDI) fleet
  range: last 90 days
  queries:
  - search: pseudocode
    query: search event_id=4688 | featurize (cmd_length, arg_count, parent_process, process_entropy) | apply DBSCAN clustering | identify and investigate outliers | alert
- question: Has a common system utility (e.g., svchost.exe) been executed from an unauthorized or non-standard file path?
  context: This question aims to detect process masquerading, a common evasion technique where malware is named after a legitimate system process but run from an unusual location (like a temp or user directory). This is a strong indicator of an attempt to hide malicious activity in plain sight.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Authentication servers
  - Application servers
  - User workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - search: pseudocode
    query: search event_id=4688 | where process_name in (system_utilities_list) AND process_path NOT in (legitimate_paths_for_process) | alert
- question: Is a legitimate system process running for a duration that is statistically anomalous compared to its historical behavior on a given host?
  context: Resource hijacking malware masquerading as a system process will often run for much longer periods than its legitimate counterpart. This question establishes a baseline for normal process runtimes and flags significant deviations, which can help uncover persistent, masquerading threats.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Authentication servers
  - Application servers
  - User workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - search: pseudocode
    query: search event_id IN (4688, 4689) | calculate duration by process_id | where process_name in (system_utilities_list) | compare duration to historical_baseline (avg, stdev) for host | where duration > (avg + 3*stdev) | alert
- question: Can a machine learning model predict whether a process is masquerading based on its creation attributes?
  context: This question seeks to automate the detection of masquerading by training a model on features like parent process, file path characteristics, and process name. This provides a scalable way to score and prioritize suspicious process executions for further investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Authentication servers
  - Application servers
  - User workstations
  - Domain Controllers
  range: last 90 days
  queries:
  - search: pseudocode
    query: stream event_id=4688 | featurize (process_name, parent_process, path_depth, is_user_writable_path) | predict with logistic_regression_model | where probability > threshold | alert
- question: Is a host maintaining an unusually long-duration network connection on a port commonly associated with cryptomining?
  context: Cryptomining requires persistent, long-lived connections to a mining pool. This question directly searches for this behavior, combining a long duration threshold (e.g., >8 hours) with a list of known mining ports to create a high-confidence alert for potential resource hijacking.
  answer_sources:
  - Zeek conn.log
  - Network egress points (e.g., firewalls, proxies)
  - Internet Gateway
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search source=zeek_conn protocol=tcp duration > 28800 | where destination_port IN (3333, 4444, 5555, 7777, 14444) | alert
- question: Is a host establishing connections that are longer than its own baseline, while also exhibiting low port diversity?
  context: This question identifies behavioral anomalies without relying on fixed thresholds or port lists. A connection that is unusually long for a specific host, combined with low destination port entropy (indicating communication with very few services), strongly suggests a specialized, non-interactive process like a cryptominer.
  answer_sources:
  - Zeek conn.log
  - Network egress points (e.g., firewalls, proxies)
  - Internet Gateway
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: stream zeek_conn | where duration > percentile(duration, 99) for source_host | calculate entropy(destination_port) over 1h for source_host | where entropy is low | alert
- question: Can unsupervised clustering of network connection data reveal groups of hosts exhibiting behavior consistent with resource hijacking?
  context: By grouping network connections based on features like duration, data volume, and port, this question aims to find clusters of activity that represent mining. Hosts that fall into these anomalous clusters can then be investigated, providing a way to discover widespread hijacking campaigns across the enterprise.
  answer_sources:
  - Zeek conn.log
  - Network egress points (e.g., firewalls, proxies)
  - Internet Gateway
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search source=zeek_conn | featurize (duration, orig_bytes, resp_bytes, destination_port) | apply K-Means clustering | investigate hosts in anomalous_clusters (e.g., high_duration_high_bytes) | alert
- question: Is any network traffic containing protocol-specific keywords or API calls (e.g., 'login', 'submit') used by mining software?
  context: Many mining protocols communicate over HTTP/S using specific JSON-RPC commands. This question involves deep packet or log inspection to find these keywords within traffic payloads, which provides definitive evidence of mining protocol communication.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - Web proxies
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search source=zeek_http method=POST | where request_body contains ('login', 'submit', 'getjob') | alert
- question: Does any long-duration network connection exhibit a highly periodic, 'heartbeat'-like communication pattern indicative of automated protocols like Stratum?
  context: Unlike human-driven traffic, automated protocols like miners' Stratum protocol often send data at very regular intervals. This question analyzes the timing between packets (inter-arrival time) to find connections with extremely low variance, a strong indicator of machine-to-machine communication common in resource hijacking.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - Web proxies
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search source=pcap OR advanced_flow_logs | for long_duration_connections | calculate variance(packet_inter_arrival_times) | where variance is near_zero | alert
- question: Is any host showing a sustained, unexplained increase in outbound network traffic that deviates from its normal daily or weekly patterns?
  context: The process of submitting mining 'shares' results in a constant, steady stream of outbound data. This question uses time series analysis to model a host's normal traffic patterns and detect anomalous, sustained increases in outbound bytes that could be caused by a resource hijacker continuously communicating with its pool.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - Web proxies
  - Core network switches
  range: last 90 days
  queries:
  - search: pseudocode
    query: search source=zeek_conn | timechart sum(outbound_bytes) by host | apply SARIMA_model | detect anomalies where actual > predicted_upper_bound for a sustained_period | alert