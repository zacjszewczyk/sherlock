name: 'T1557.002: ARP Cache Poisoning'
id: 'a7b1c3d9-e4f6-4a8b-8c9d-1e2f3a4b5c6d'
description: This playbook helps identify adversary attempts to perform ARP Cache Poisoning (T1557.002) for the purpose of credential access or data collection. It focuses on detecting evidence such as ARP replies from watchlisted MAC addresses, anomalous ARP scanning followed by gratuitous replies, IP address conflicts on critical systems, and gratuitous replies from non-authoritative MAC addresses that misdirect traffic. The goal is to detect the manipulation of Layer 2 traffic to intercept communications between hosts, often as a precursor to man-in-the-middle attacks.
type: technique
related:
  - 'TA0006: Credential Access'
  - 'TA0009: Collection'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: How can I create a rule to detect an ARP event where the source MAC or its OUI matches a malicious watchlist?
    context: This question aims to identify ARP poisoning attempts by cross-referencing the source MAC address ('arp.sha') or its OUI prefix from ARP events in Zeek logs against a maintained watchlist of indicators associated with malicious tools. A match provides a high-confidence signal that an adversary is using a known tool to manipulate network traffic.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network traffic collection points (e.g., SPAN ports, network taps) monitoring internal network segments, particularly user VLANs and server subnets.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Zeek arp.log 
          WHERE source_mac (arp.sha) IN malicious_mac_watchlist OR OUI(source_mac) IN malicious_oui_watchlist
          ALERT on any match
  - question: How can I statistically identify a MAC address from a low-reputation feed that is sending an anomalous number of ARP replies?
    context: This question focuses on identifying attackers by baselining the rate of ARP operations for each MAC address. An alert is triggered if a MAC address that also appears on a low-reputation threat intelligence feed exceeds its normal statistical threshold (e.g., 99th percentile) for ARP replies within a short time frame, suggesting a poisoning attempt.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network traffic collection points (e.g., SPAN ports, network taps) monitoring internal network segments, particularly user VLANs and server subnets.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each MAC in low_reputation_threat_feed
          CALCULATE 5_minute_ARP_reply_count
          IF count > 99th_percentile_baseline(MAC), ALERT
  - question: How can I use a machine learning model to classify ARP events as malicious?
    context: This involves training a classification model (like a Random Forest) to distinguish malicious ARP events from benign ones. The model uses features like the OUI, whether the ARP is gratuitous, and if it matches threat intelligence. The goal is to automatically score and alert on ARP events that the model classifies as 'malicious' with high confidence.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network traffic collection points (e.g., SPAN ports, network taps) monitoring internal network segments, particularly user VLANs and server subnets.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each ARP_event
          EXTRACT features(OUI, is_gratuitous, on_watchlist)
          INPUT features INTO pre-trained_classifier
          IF prediction == 'malicious' AND confidence > threshold, ALERT
  - question: How can I detect an ARP scan followed by a targeted gratuitous ARP reply for a critical asset?
    context: This question addresses a common attack pattern where an adversary first scans a subnet to discover active hosts and then sends a malicious gratuitous ARP reply to poison the ARP cache of a specific target, often impersonating a critical asset like a gateway. The query identifies this sequence of events.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network infrastructure segments containing assets like default gateways, DNS servers, and Domain Controllers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          STATEFULLY track ARP requests (opcode=1) per source MAC (arp.sha)
          IF distinct_target_IP_count > 20 in 60s for a source MAC
          THEN monitor same source MAC for gratuitous ARP replies (opcode=2, spa=tpa) for a critical IP within 120s
          IF both conditions met, ALERT
  - question: How can I use entropy to detect an ARP scanning phase?
    context: This question proposes using a statistical measure, Shannon entropy, to detect the reconnaissance phase of an ARP poisoning attack. A legitimate host typically communicates with a small set of IPs, resulting in low entropy. An attacker scanning a subnet will generate ARP requests for many different IPs, causing a detectable spike in entropy.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network infrastructure segments containing assets like default gateways, DNS servers, and Domain Controllers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source MAC
          CALCULATE Shannon entropy of target IPs (arp.tpa) in ARP requests over 1-minute window
          IF entropy > 3 standard deviations above baseline AND is followed by gratuitous ARP replies, ALERT
  - question: Can a sequence analysis model be used to detect the scan-then-poison attack pattern?
    context: This question explores an advanced machine learning approach using a sequence analysis model (like an LSTM) to identify the specific order of events in a scan-then-poison attack. The model is trained on normal ARP event sequences and flags anomalous sequences that match the attack pattern.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network infrastructure segments containing assets like default gateways, DNS servers, and Domain Controllers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT sequence of ARP events per host into trained LSTM model
          IF model flags sequence as anomalous (high-entropy scan followed by gratuitous replies), ALERT
  - question: How do I create a high-priority alert when a Windows endpoint reports an IP conflict with a critical network resource?
    context: Windows Event ID 4199 indicates an IP address conflict on the network. This question focuses on turning that event into a high-fidelity alert by checking if the conflicting IP address belongs to a critical asset (e.g., Gateway, DNS Server). A match suggests a potential ARP poisoning attack targeting a crucial resource.
    answer_sources:
      - 'Windows Event ID 4199'
      - 'Zeek arp.log'
      - 'All Windows endpoints and servers, particularly Domain Controllers and other critical servers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON Windows Event ID 4199
          EXTRACT conflicting IP address
          LOOKUP IP in critical asset inventory
          IF IP is in critical asset list, trigger high-priority ALERT
  - question: How can I statistically detect a widespread ARP poisoning attack using Windows Event ID 4199?
    context: While a single IP conflict event can be noise, a cluster of these events in the same subnet for the same conflicting IP is a strong statistical indicator of a widespread attack. This question aims to detect this pattern by monitoring the rate of Event ID 4199 and alerting on unusual spikes.
    answer_sources:
      - 'Windows Event ID 4199'
      - 'Zeek arp.log'
      - 'All Windows endpoints and servers, particularly Domain Controllers and other critical servers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR rate of Event ID 4199
          BASELINE rate using moving average
          IF count > 5 events in 10 minutes for the same conflicting IP in the same subnet, ALERT
  - question: Can a machine learning model be used to risk-score IP conflict events?
    context: This question proposes using a machine learning model to assign a risk score to each IP conflict event (Windows Event ID 4199). By considering features like the criticality of the reporting host and the conflicting IP, the model can prioritize events, automatically escalating those that pose the highest risk of being a targeted attack.
    answer_sources:
      - 'Windows Event ID 4199'
      - 'Zeek arp.log'
      - 'All Windows endpoints and servers, particularly Domain Controllers and other critical servers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON Windows Event ID 4199
          EXTRACT features(host_criticality, conflicting_ip_criticality, time_of_day)
          INPUT features into trained Decision Tree model
          IF risk_score > threshold, create and escalate incident
  - question: How can I detect if a gratuitous ARP reply for a critical asset is coming from an unauthorized MAC address?
    context: This question describes a high-fidelity detection method. It involves maintaining a static list of legitimate IP-to-MAC mappings for critical assets. An alert is triggered if a gratuitous ARP reply is observed where the IP address is for a critical asset, but the MAC address does not match the known, authorized MAC.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network taps and SPAN ports monitoring core network switches, gateway routers, and DNS server subnets.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MAINTAIN static IP-to-MAC mapping for critical assets
          SEARCH Zeek arp.log for gratuitous ARP replies
          IF sender_ip is in critical asset list AND sender_mac does not match mapping, ALERT
  - question: How can I statistically detect an ARP flood targeting a critical asset?
    context: This question aims to detect an ARP flood, a common variant of poisoning, by establishing a baseline for the normal rate of gratuitous ARP replies for each critical asset. An alert is generated if the observed count from any single source MAC address significantly exceeds this baseline (e.g., 99th percentile), indicating an anomalous and potentially malicious flood.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network taps and SPAN ports monitoring core network switches, gateway routers, and DNS server subnets.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical IP address
          ESTABLISH baseline for gratuitous ARP replies per minute
          IF reply_count from a single source MAC > 99th_percentile_of_baseline, ALERT
  - question: Can a time-series anomaly detection model forecast and detect ARP poisoning floods?
    context: This question proposes an advanced approach using a time-series model (like ARIMA) to forecast the expected volume of gratuitous ARP replies for each critical IP address. The system alerts when the observed volume significantly deviates from the model's forecasted range, which can effectively detect sudden floods indicative of a poisoning attack.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network taps and SPAN ports monitoring core network switches, gateway routers, and DNS server subnets.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical IP
          TRAIN time-series model (ARIMA/Prophet) on gratuitous ARP reply volume
          FORECAST expected volume and confidence interval
          IF observed volume > upper_confidence_bound, ALERT
  - question: How can I detect a non-infrastructure device that is claiming multiple IP addresses via gratuitous ARP?
    context: Legitimate network infrastructure devices (like routers using HSRP/VRRP) may claim multiple IPs. However, a normal endpoint should not. This question focuses on creating a rule to detect when a single MAC address, not on an approved list of infrastructure devices, claims more than a small number of IP addresses in a short time window.
    answer_sources:
      - 'Zeek arp.log'
      - 'Authentication servers (e.g., Domain Controllers, RADIUS servers) and the subnets containing them.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          STATEFULLY track distinct IPs claimed via gratuitous ARP per MAC over 5 mins
          IF count > 3 AND MAC not in approved_infrastructure_device_list, ALERT
  - question: Can entropy be used to detect a non-gateway MAC address anomalously claiming multiple IPs?
    context: This question applies the concept of Shannon entropy to detect an attacker claiming multiple IP addresses. A normal device has very low entropy (claiming one IP). An attacker claiming several IPs will cause a sudden spike in entropy. This method is effective for detecting MACs that are not gateways but start behaving as if they are central to many communications.
    answer_sources:
      - 'Zeek arp.log'
      - 'Authentication servers (e.g., Domain Controllers, RADIUS servers) and the subnets containing them.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each non-gateway MAC
          CALCULATE Shannon entropy of IPs claimed via gratuitous ARP in 10-min window
          IF entropy spikes from ~0 to > 1.5, ALERT
  - question: How can clustering algorithms identify an attacker based on ARP behavior?
    context: This question suggests using an unsupervised machine learning approach, like DBSCAN, to group network devices based on their typical ARP behavior. Attackers, whose behavior (e.g., claiming multiple IPs, high frequency of replies) deviates significantly from normal endpoints or stable infrastructure, will be flagged as noise or anomalous micro-clusters.
    answer_sources:
      - 'Zeek arp.log'
      - 'Authentication servers (e.g., Domain Controllers, RADIUS servers) and the subnets containing them.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER network devices using DBSCAN on ARP behavior features (IPs claimed, frequency, etc.)
          IDENTIFY devices classified as noise points or anomalous clusters
          ALERT on these anomalies
  - question: How can I confirm that traffic to a high-value asset is being intercepted after a suspicious ARP event?
    context: This question aims to link a suspicious ARP event to actual data interception. It involves creating a rule that first detects an ARP reply from a watchlisted MAC impersonating a high-value server, and then confirms the attack by observing subsequent traffic destined for the server's IP being sent to the attacker's MAC address at Layer 2.
    answer_sources:
      - 'Zeek arp.log'
      - 'Zeek conn.log'
      - 'Subnets containing high-value data assets (e.g., file servers, database servers, code repositories).'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON ARP reply from watchlisted MAC (attacker_mac) impersonating high-value IP (server_ip)
          SEARCH conn.log for traffic where destination IP is server_ip
          IF L2 destination MAC for that traffic is attacker_mac, ALERT
  - question: How can I use traffic volume to statistically confirm data interception after a suspicious ARP event?
    context: This is a statistical confirmation method. After a suspicious ARP event targeting a data server is detected, this query monitors the volume of traffic being sent to the attacker's MAC address. If the volume of traffic that should be going to the server is instead directed to the attacker's MAC and exceeds a baseline, it provides statistical evidence of interception.
    answer_sources:
      - 'Zeek arp.log'
      - 'Zeek conn.log'
      - 'Subnets containing high-value data assets (e.g., file servers, database servers, code repositories).'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AFTER suspicious ARP event targeting data_server_ip by attacker_mac
          MONITOR traffic volume to attacker_mac where destination IP is data_server_ip
          IF volume > 95th percentile of attacker_mac's baseline received traffic, ALERT
  - question: Can a machine learning model be trained to predict the risk of a connection being intercepted?
    context: This question proposes a predictive approach where a machine learning classifier is trained to score the risk of any given network connection being intercepted. By using features like recent ARP anomalies, MAC address mismatches, and asset criticality, the model can proactively identify high-risk connections that warrant investigation.
    answer_sources:
      - 'Zeek arp.log'
      - 'Zeek conn.log'
      - 'Subnets containing high-value data assets (e.g., file servers, database servers, code repositories).'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each network connection
          EXTRACT features(recent_arp_anomaly, mac_mismatch, ip_criticality)
          INPUT features into trained risk-classifier
          IF risk_score > threshold, ALERT
  - question: How can I detect the specific ARP reply pattern of a bidirectional man-in-the-middle attack?
    context: A full man-in-the-middle attack requires the attacker to poison the ARP cache of both the client and the server. This question describes a stateful rule to detect this specific pattern: two ARP replies from the same attacker MAC within a short window, one sent to the client impersonating the server, and the other sent to the server impersonating the client.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network traffic collection points monitoring communication paths between user workstations and sensitive data servers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          STATEFULLY search for two ARP replies from same source MAC (attacker_mac) within 10s
          WHERE reply1 has target_mac=client_mac and sender_ip=server_ip
          AND reply2 has target_mac=server_mac and sender_ip=client_ip
          IF pattern found, ALERT
  - question: How can graph analysis be used to find a man-in-the-middle attacker?
    context: This question suggests modeling ARP communications as a graph. A sudden change in the graph's structure, such as a non-gateway node becoming highly central (high "betweenness centrality"), can indicate that the node has inserted itself between communicating parties. This statistical graph property can be used to spot a MitM attacker.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network traffic collection points monitoring communication paths between user workstations and sensitive data servers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CONSTRUCT directed graph from ARP replies over 1-min windows
          CALCULATE betweenness centrality for all nodes (MACs)
          IF a non-gateway node's centrality spikes significantly, ALERT
  - question: How can graph-based anomaly detection models identify a man-in-the-middle attack pattern?
    context: This question proposes using advanced machine learning on a graph representation of ARP traffic. A model trained on normal graph structures (e.g., star-shaped patterns around a gateway) can be used to detect the emergence of a specific "man-in-the-middle" subgraph pattern (Attacker -> Client, Attacker -> Server), providing a high-confidence alert.
    answer_sources:
      - 'Zeek arp.log'
      - 'Network traffic collection points monitoring communication paths between user workstations and sensitive data servers.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY graph-based anomaly detection to ARP communication graph
          TRAIN model on normal graph structures
          IF model detects emergence of a 'MitM' subgraph pattern, ALERT
  - question: How do I create a high-priority alert when an IP conflict is reported on a critical data asset or privileged user's workstation?
    context: An IP conflict (Windows Event ID 4199) is a generic event, but its significance increases dramatically based on the asset involved. This question focuses on creating a high-priority, targeted alert that triggers only when this event occurs on a host that is pre-identified as a critical data asset or belongs to a privileged user.
    answer_sources:
      - 'Windows Event ID 4199'
      - 'Zeek arp.log'
      - 'Designated high-value data servers (file servers, databases) and workstations of privileged users.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON Windows Event ID 4199
          GET hostname of reporting machine
          IF hostname IN 'critical_data_assets' OR hostname IN 'privileged_user_workstations'
          CREATE high-priority alert and escalate
  - question: Is the frequency of IP conflict alerts on high-value assets statistically significant?
    context: This question uses a statistical test (Chi-squared) to determine if the number of IP conflict events occurring on high-value assets is disproportionately high compared to the historical distribution across all asset tiers. A statistically significant result would suggest a targeted campaign rather than random network errors.
    answer_sources:
      - 'Windows Event ID 4199'
      - 'Zeek arp.log'
      - 'Designated high-value data servers (file servers, databases) and workstations of privileged users.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE counts of Event ID 4199 by asset tier (Tier 0, Tier 1, etc.)
          COMPARE observed distribution to historical distribution using Chi-squared test
          IF result is statistically significant for high-value tiers, ALERT
  - question: Can a machine learning model risk-score IP conflict events based on data collection potential?
    context: This question describes building a specialized risk-scoring model for IP conflict events, tuned to detect data collection attempts. The model would weigh features like the asset's value, the user's privilege level, and recent access to sensitive data to determine the alert priority, escalating events that have the highest potential for data compromise.
    answer_sources:
      - 'Windows Event ID 4199'
      - 'Zeek arp.log'
      - 'Designated high-value data servers (file servers, databases) and workstations of privileged users.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON Event ID 4199
          EXTRACT features(asset_value, user_privilege_level, recent_sensitive_data_access)
          INPUT features into trained risk-scoring model
          DETERMINE alert priority based on output score
  - question: How can I confirm traffic interception by correlating an ARP change with misdirected network flows?
    context: This question provides a way to confirm an attack by linking an ARP change to its effect on traffic. A stateful rule caches the legitimate MAC for a high-value server. If an ARP reply changes this mapping, the rule then looks for subsequent network connections to the server's IP that are incorrectly sent to the new, unauthorized MAC address at Layer 2.
    answer_sources:
      - 'Zeek arp.log'
      - 'Zeek conn.log'
      - 'Network traffic flows to and from high-value data assets, monitored at network chokepoints.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CACHE legitimate MAC (mac_legit) for high-value server IP (ip_s)
          ON ARP reply changing mapping for ip_s to mac_new
          SEARCH for subsequent conn.log entries to ip_s where L2 destination is mac_new
          IF found, ALERT
  - question: How can I statistically measure and detect misdirected traffic to a server?
    context: This statistical approach confirms interception by baselining normal traffic patterns. For a critical server, the system establishes the expected pairings of source and destination MAC addresses. It then calculates the percentage of "misdirected" traffic (i.e., traffic to the server's IP with an unexpected destination MAC). A sudden increase in this percentage after an ARP anomaly confirms interception.
    answer_sources:
      - 'Zeek arp.log'
      - 'Zeek conn.log'
      - 'Network traffic flows to and from high-value data assets, monitored at network chokepoints.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each critical server
          BASELINE expected source-to-destination MAC pairings
          CALCULATE percentage of traffic to server's IP with an unexpected destination MAC
          IF percentage increases significantly following an ARP anomaly, ALERT
  - question: Can a time-series model confirm data interception by detecting traffic volume shifts?
    context: This question describes using a time-series model to confirm interception. The model forecasts the expected traffic volume between a legitimate client and server. If an ARP poisoning event occurs, and the model observes a significant drop in traffic between the legitimate MACs, coupled with a corresponding increase in traffic to the attacker's MAC, it flags a confirmed interception.
    answer_sources:
      - 'Zeek arp.log'
      - 'Zeek conn.log'
      - 'Network traffic flows to and from high-value data assets, monitored at network chokepoints.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FORECAST expected traffic volume between client-server MAC pairs
          AFTER ARP poisoning event
          IF observed volume between legitimate MACs drops AND volume to attacker's MAC on same port increases, ALERT
  - question: How can I detect if data server traffic is being routed to an endpoint instead of the server itself?
    context: This is a direct detection for a successful man-in-the-middle attack. The rule looks for network traffic where the destination IP address is a known data server, but the Layer 2 destination MAC address belongs to a regular endpoint instead of the server's legitimate MAC or a router's MAC. This indicates traffic has been successfully diverted.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek smb_files.log'
      - 'All non-gateway endpoints on internal network segments, with traffic monitored by network sensors.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH conn.log where destination_ip is in data_server_list
          GET L2 destination MAC for the flow
          IF L2_dest_mac is not the server's_mac AND L2_dest_mac is not a router_mac, ALERT
  - question: How can I statistically find an endpoint that is anomalously receiving a high volume of data service traffic?
    context: This question aims to find the attacker's machine by its network behavior. It involves baselining the normal amount of inbound traffic on data-related ports (like 445 for SMB) for each endpoint. An alert is triggered if an endpoint suddenly starts receiving a volume of traffic on these ports that is statistically anomalous (e.g., exceeds the 95th percentile), as this indicates it is likely intercepting traffic meant for a server.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek smb_files.log'
      - 'All non-gateway endpoints on internal network segments, with traffic monitored by network sensors.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each non-gateway MAC
          BASELINE inbound byte count on data-service ports (445, 1433, etc.)
          IF inbound bytes in a 5-min window > 95th percentile of 30-day baseline, ALERT
  - question: Can unsupervised learning identify a client endpoint that has started acting like a server?
    context: This question proposes using unsupervised machine learning (like k-means clustering) to categorize endpoints based on their network traffic profiles. A normal client has high outbound and low inbound traffic. A machine that has successfully established a MitM position will start receiving large amounts of traffic, shifting its profile to be more "server-like." The model can detect this shift and flag the endpoint as a strong anomaly.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek smb_files.log'
      - 'All non-gateway endpoints on internal network segments, with traffic monitored by network sensors.'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER endpoints based on traffic profiles (bytes in/out, common ports, client/server ratio)
          IF an endpoint abruptly shifts from a 'client' cluster to a 'server-like' cluster, ALERT