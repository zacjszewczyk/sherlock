name: T1068: Exploitation for Privilege Escalation
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate if an adversary has exploited a software vulnerability to achieve privilege escalation. This can be identified by observing the creation of files matching known exploits, command-line arguments containing privilege escalation tool signatures, anomalous child processes spawned by high-privilege parents, processes gaining higher integrity levels than their parents, or a rapid sequence of suspicious activities like user creation and group modification.
type: technique
related:
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any recently created executable, library, or driver files been identified as known vulnerable drivers or exploit payloads?
    context: This question aims to detect the direct placement of malicious or vulnerable files used for privilege escalation. By monitoring file creation events and comparing file hashes against a threat intelligence feed, analysts can quickly identify the introduction of known bad components, such as Bring Your Own Vulnerable Driver (BYOVD) payloads, which are a common technique for escalating privileges.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 15
      - Critical servers (e.g., Domain Controllers, database servers), user workstations, temporary file directories (e.g., C:\Windows\Temp, %TEMP%)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon Event ID 11 OR 15 WHERE file_extension IN ('.exe', '.dll', '.sys') | LOOKUP file_hash against threat_intel_feed | RETURN results where match_found
  - question: Have any executable, library, or driver files been created in unusual locations or with uncommon names?
    context: Adversaries often place their payloads in non-standard directories or use unique file names to avoid detection. This question focuses on identifying these anomalies by baselining normal file creation behavior. By flagging statistically rare file names and paths, analysts can uncover potentially malicious files that might otherwise be missed by signature-based detections.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 15
      - Critical servers (e.g., Domain Controllers, database servers), user workstations, temporary file directories (e.g., C:\Windows\Temp, %TEMP%)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon Event ID 11 | STATS frequency of (file_name, file_path) | IDENTIFY combinations with frequency < 1st percentile | RETURN anomalous_files
  - question: Does machine learning analysis indicate that any newly created executables, drivers, or DLLs have characteristics of malicious or vulnerable software?
    context: This question leverages machine learning to perform a deeper inspection of file characteristics beyond simple hash lookups. By analyzing features like file entropy, imported functions, and digital signatures, a model can identify suspicious files that may be unknown or obfuscated variants of exploit payloads, providing a proactive layer of defense.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 15
      - Critical servers (e.g., Domain Controllers, database servers), user workstations, temporary file directories (e.g., C:\Windows\Temp, %TEMP%)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each new file (Sysmon Event ID 11): | EXTRACT PE_features (entropy, imports, cert_validity) | INPUT features into ML_model | RETURN files classified as 'malicious' with high_confidence
  - question: Have any processes been executed with command-line arguments matching signatures of known privilege escalation tools or commands?
    context: This question searches for direct evidence of an adversary using well-known privilege escalation tools like 'Juicy Potato' or post-exploitation commands. By using regular expressions to scan command-line arguments and correlating host events with network RPC logs, analysts can detect specific, high-confidence indicators of an attack.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - Zeek dce_rpc.log
      - All endpoints and servers, Domain Controllers, network traffic to/from print servers and domain controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH (Sysmon Event ID 1 OR Windows Event ID 4688) WHERE command_line MATCHES regex('juicypotato|printnightmare|privilege::debug') | CORRELATE with Zeek dce_rpc.log for 'RpcAddPrinterDriverEx' | RETURN correlated_events
  - question: Are there any processes with unusually high-entropy command-line arguments, suggesting obfuscation?
    context: Adversaries often obfuscate their commands to evade simple keyword-based detections. High entropy (randomness) in command-line arguments can indicate the presence of encoded scripts, shellcode, or complex exploit strings. This question helps analysts find such obfuscated commands by comparing their entropy against a baseline of normal behavior for that specific process.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - Zeek dce_rpc.log
      - All endpoints and servers, Domain Controllers, network traffic to/from print servers and domain controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each process (Sysmon Event ID 1): | CALCULATE entropy of command_line | COMPARE to historical_entropy_baseline for that process_name | RETURN processes where entropy > (baseline_avg + 3*std_dev)
  - question: Have any unusual or statistically improbable sequences of commands been executed by a user or system process?
    context: Privilege escalation is often followed by a chain of specific actions. This question aims to detect these chains by modeling normal command sequences. An alert on a low-probability sequence (e.g., a web server process suddenly spawning an interactive shell, which then adds a new user) can reveal an adversary's post-exploitation activity.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - Zeek dce_rpc.log
      - All endpoints and servers, Domain Controllers, network traffic to/from print servers and domain controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each process_chain (grouped by ProcessGuid): | INPUT command_sequence into sequence_analysis_model | RETURN chains with low_probability_score
  - question: Has a critical system process, such as 'lsass.exe' or 'services.exe', spawned a child process that is not on its approved list?
    context: Critical system processes have very predictable behavior and should not be spawning unexpected children like command shells ('cmd.exe') or PowerShell. This question uses a strict allow-list approach to detect highly anomalous and suspicious behavior, which is a strong indicator of process injection or other exploit techniques.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - Domain Controllers, critical application servers, administrative workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH (Sysmon Event ID 1 OR Windows Event ID 4688) WHERE parent_process IN ('lsass.exe', 'services.exe') AND child_process NOT IN (allowed_list_for_parent) | RETURN suspicious_events
  - question: Have any statistically rare parent-child process relationships been observed in the environment?
    context: While not all unexpected parent-child relationships are malicious, those that are extremely rare are worth investigating. This question uses statistical analysis to baseline all parent-child process relationships across the enterprise and flags those that are infrequent. This can help uncover novel or subtle attack techniques that don't involve well-known critical processes.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - Domain Controllers, critical application servers, administrative workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon Event ID 1 | STATS frequency of (parent_process, child_process) | IDENTIFY relationships with frequency < 0.1st percentile | RETURN rare_relationships
  - question: Has an anomaly detection model identified any parent-child process creation events as deviating from normal behavior?
    context: This question employs a machine learning model to build a comprehensive understanding of what constitutes a "normal" process creation event, considering not just the parent and child names but also user context and command-line properties. The model can then identify complex anomalies that would be difficult to define with static rules or simple frequency analysis, providing a more robust detection capability.
    answer_sources:
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - Domain Controllers, critical application servers, administrative workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each process_creation_event: | EXTRACT features (parent, child, user, cmd_line) | INPUT features into anomaly_detection_model | RETURN events flagged as 'anomalous'
  - question: Has any process spawned a child process with a higher integrity level than its own?
    context: A child process should not normally have more privileges (a higher integrity level) than its parent. When this occurs, it is a classic sign of a User Account Control (UAC) bypass technique, where an adversary tricks a legitimate high-integrity process into launching their malicious code. This is a very high-fidelity indicator of privilege escalation.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - All Windows endpoints and servers, particularly those with EDR agents capable of capturing process access events
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon Event ID 1 WHERE child_integrity_level > parent_integrity_level | RETURN high_confidence_alerts
  - question: Have any processes accessed other processes in a statistically rare manner or requested unusually high access rights?
    context: This question looks for suspicious process interactions. An adversary attempting to steal credentials or inject code will often require a low-privilege process (e.g., 'winword.exe') to access a high-privilege one (e.g., 'lsass.exe'). By baselining which processes typically access each other and what level of access they request, analysts can spot anomalous interactions that may indicate credential dumping or code injection attempts.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - All Windows endpoints and servers, particularly those with EDR agents capable of capturing process access events
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Sysmon Event ID 10 | IDENTIFY rare (source_process, target_process) pairs OR anomalous GrantedAccess codes based on historical baseline | RETURN suspicious_access_events
  - question: Does a machine learning model classify any recent process access events as potentially malicious?
    context: This question uses a supervised machine learning model trained on known-good and known-bad process access patterns. By considering multiple features simultaneously (source, target, user, access rights), the model can make a more nuanced decision about whether a given access event is malicious, helping to identify sophisticated attacks that might not trigger simpler statistical alerts.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - All Windows endpoints and servers, particularly those with EDR agents capable of capturing process access events
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each process_access_event (Sysmon Event ID 10): | EXTRACT features (source, target, user, access_code) | INPUT features into classification_model | RETURN events scored as 'malicious'
  - question: Has a specific, high-risk sequence of events, such as process creation followed by user creation and privileged group modification, occurred under a single user session?
    context: After escalating privileges, an adversary's primary goal is often to establish persistence. A common pattern is to create a new user account and add it to a privileged group. This question looks for this explicit chain of events occurring in a short time window and linked to the same session, which provides a very strong signal of a successful compromise.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers, Member Servers, and Administrator Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH events within 5 minutes grouped by LogonId | TRIGGER alert IF sequence (ProcessCreate -> UserCreate(4720) -> AddToPrivGroup(4728/4732)) is detected
  - question: Has any user or process accumulated a high risk score by performing a series of suspicious actions within a short time window?
    context: Not all malicious activity follows a single, predefined sequence. This question uses a risk-scoring model to track various suspicious actions (e.g., user creation, writing to System32) performed by a user or process. If the cumulative score crosses a threshold, it indicates a high concentration of suspicious behavior that warrants an investigation, even if the actions don't match a rigid pattern.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers, Member Servers, and Administrator Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each entity (LogonId, ProcessGuid): | CALCULATE time_decaying_risk_score based on actions (e.g., 4720=+10, 4728=+25) | IF score > threshold | RETURN high_risk_entity
  - question: Has a time-series analysis model detected a sequence of system events on a host that is a significant deviation from normal activity patterns?
    context: This question applies advanced time-series analysis to learn the "rhythm" of a system's normal operations. An LSTM autoencoder can model complex temporal dependencies in event logs. When a sequence of events occurs that the model cannot accurately "reconstruct" (i.e., it has a high reconstruction error), it signifies a major break from the established pattern, which could be caused by an adversary's post-escalation activities.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Domain Controllers, Member Servers, and Administrator Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host's event_sequence: | INPUT into LSTM_autoencoder_model | CALCULATE reconstruction_error | IF error > threshold | RETURN anomalous_sequence