name: T1213.004: Customer Relationship Management Software
id: e5a6b1c2-1d2e-4f3a-b4c5-d6e7f8a9b0c1
description: This playbook helps determine if an adversary is collecting sensitive data from Customer Relationship Management (CRM) software. It provides investigative steps to detect malicious network connections from threat intelligence-listed IPs, anomalous HTTP requests from non-browser tools, command-line evidence of bulk data exports, unusual user authentication patterns like impossible travel, statistically significant data egress volumes, and abnormal behavior from non-interactive service accounts, such as spawning interactive shells or enumerating database tables.
type: technique
related:
- TA0009: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there network connections to our CRM assets from IP addresses known to be malicious?
  context: A successful network connection to a CRM application or its backend database from a source IP address present on a threat intelligence feed of known malicious C2 servers, proxies, or anonymization services like TOR is a high-fidelity indicator of compromise. This question seeks to identify these direct, high-confidence threats by matching connection logs against a curated list of malicious IPs.
  answer_sources: Zeek conn.log, Firewall Logs. Data is sourced from network sensors at internet gateways, VPN termination points, and server farm segments hosting CRM infrastructure.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (Zeek conn.log or Firewall Logs) where destination_ip in crm_asset_list and source_ip in malicious_ip_feed
- question: Are there network connections to CRM assets from unusual or rare Autonomous Systems (ASNs)?
  context: Adversaries may use infrastructure in ASNs not typically associated with legitimate business traffic. This question aims to identify anomalous connections by baselining normal source ASNs over 30 days and alerting when a connection originates from a new, infrequent, or suspicious ASN (e.g., a VPS provider not used by the business). This can uncover previously unknown malicious infrastructure.
  answer_sources: Zeek conn.log, Firewall Logs. Data is sourced from network sensors at internet gateways, VPN termination points, and server farm segments hosting CRM infrastructure.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (Zeek conn.log) where dest_ip in crm_assets | enrich src_ip with ASN | baseline src_asn over 30d | alert if src_asn is new or frequency < 5th_percentile
- question: Can we predict if a network connection to a CRM asset is malicious based on its characteristics?
  context: This question leverages machine learning to proactively identify malicious sessions that may not be caught by signature-based or simple statistical methods. By training a classification model on features like connection duration, protocol, service, bytes transferred, and IP reputation, the model can learn to distinguish between benign and malicious traffic patterns, flagging suspicious connections with a high probability score.
  answer_sources: Zeek conn.log, Firewall Logs. Data is sourced from network sensors at internet gateways, VPN termination points, and server farm segments hosting CRM infrastructure.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: predict is_malicious from (Zeek conn.log) where dest_ip in crm_assets using classification_model | alert if probability(is_malicious) > threshold
- question: Are programmatic access tools (e.g., curl, python-requests) being used to interact with the CRM web interface instead of standard browsers?
  context: Adversaries often use scripting tools for automated data collection. An HTTP request to a CRM web interface or API containing a User-Agent string associated with tools like curl, Wget, or python-requests, instead of a common web browser, strongly suggests automated, non-standard access that could be malicious. This question looks for these specific, known-bad User-Agent strings.
  answer_sources: Zeek http.log, WAF Logs, Reverse Proxy Logs. Data is sourced from log collectors for WAFs, reverse proxies, and web servers hosting the CRM application front-end.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (Zeek http.log) where destination_url in crm_urls and user_agent matches non_browser_tool_list
- question: Are there any rare or statistically insignificant User-Agents making requests to CRM assets?
  context: While some programmatic access is legitimate, malicious tools might use unique or uncommon User-Agent strings to evade simple deny-lists. This question seeks to identify these outliers by calculating the frequency of all User-Agents over a rolling 24-hour window and alerting on those that are extremely rare (e.g., < 0.1% of requests) and not on an approved list for automation.
  answer_sources: Zeek http.log, WAF Logs, Reverse Proxy Logs. Data is sourced from log collectors for WAFs, reverse proxies, and web servers hosting the CRM application front-end.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (Zeek http.log) where dest_url in crm_urls | calculate freq of user_agent over 24h | alert if freq < 0.1% and user_agent not in approved_list
- question: Can we identify anomalous clusters of HTTP requests to CRM assets that deviate from normal user browser activity?
  context: This question uses unsupervised machine learning to find anomalous user activity without relying on pre-defined signatures. By clustering HTTP requests based on features like User-Agent, request method, and URI path, normal browser activity will form large, dense clusters. Smaller, outlier clusters can represent automated scripts or manual tooling used by an adversary.
  answer_sources: Zeek http.log, WAF Logs, Reverse Proxy Logs. Data is sourced from log collectors for WAFs, reverse proxies, and web servers hosting the CRM application front-end.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: cluster (Zeek http.log) where dest_url in crm_urls on features (user_agent, method, uri) | investigate small clusters and outliers
- question: Are there commands being run on CRM servers that indicate a bulk data export operation?
  context: A clear sign of data collection is the execution of database utilities or PowerShell cmdlets with command-line arguments designed for bulk export. This question looks for specific process creation events on CRM servers that use tools like 'sqlcmd.exe' or 'Export-Csv' with arguments such as 'SELECT *' or '-out-file', which strongly indicate an attempt to exfiltrate large amounts of data.
  answer_sources: Windows Event ID 4688, Windows PowerShell Event ID 4104. Data is sourced from On-premise CRM application servers, On-premise CRM database servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (EventID 4688 or 4104) on crm_servers where process in (sqlcmd.exe, bcp.exe) or command_line contains ('SELECT *', '-out-file')
- question: Is there a statistical anomaly in the frequency or complexity of command-line executions on CRM servers?
  context: Adversaries may attempt to hide their data export activities. This question seeks to uncover such attempts by baselining normal command-line usage for database utilities. An alert is triggered if a utility's execution frequency spikes significantly (e.g., >3 standard deviations above average) or if the command-line arguments show a sharp increase in entropy, which can indicate obfuscation.
  answer_sources: Windows Event ID 4688, Windows PowerShell Event ID 4104. Data is sourced from On-premise CRM application servers, On-premise CRM database servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (EventID 4688) on crm_servers | baseline exec_freq and cmd_entropy per hour | alert if exec_freq > 3_std_dev or entropy spikes
- question: Can we use machine learning to classify command-line executions on CRM servers as benign or malicious?
  context: This question applies a text classification model to differentiate between legitimate administrative commands and malicious data collection commands. By training a model on labeled examples of both benign (e.g., scheduled backups) and malicious command lines, it can learn to identify and alert on new, unseen commands that fit the pattern of malicious activity.
  answer_sources: Windows Event ID 4688, Windows PowerShell Event ID 4104. Data is sourced from On-premise CRM application servers, On-premise CRM database servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: predict is_malicious from (EventID 4688) on crm_servers using text_classifier on command_line | alert if prediction is malicious
- question: Has a user account logged into a CRM asset from two locations in a physically impossible amount of time?
  context: An 'Impossible Travel' event is a strong indicator of a compromised account, where two or more successful logins occur from distant geographic locations in a time frame that would not allow for physical travel between them. This question aims to detect this specific, high-confidence indicator of unauthorized access to CRM applications or servers.
  answer_sources: Windows Event ID 4624, Zeek conn.log, Cloud Identity Provider Logs (e.g., Azure AD Sign-in Logs). Data is sourced from Domain Controllers, Cloud identity providers, VPN concentrators, and CRM application and database servers (for local account logins).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each login to crm_asset | compare with previous login | calculate travel_time vs distance | alert if travel is impossible
- question: Does a recent user login to a CRM asset deviate significantly from the user's established normal behavior?
  context: Adversaries using compromised credentials may exhibit login patterns that differ from the legitimate user's. This question establishes a baseline of normal behavior for each user (typical hours, locations, logon types) and assigns a risk score to new logins based on deviations. A cumulative risk score exceeding a high percentile of the user's or their peer group's history signals a potentially compromised account.
  answer_sources: Windows Event ID 4624, Zeek conn.log, Cloud Identity Provider Logs (e.g., Azure AD Sign-in Logs). Data is sourced from Domain Controllers, Cloud identity providers, VPN concentrators, and CRM application and database servers (for local account logins).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each login to crm_asset | score risk based on deviations from user_baseline | alert if risk_score > 98th_percentile
- question: Can an anomaly detection model identify user logins to CRM assets that are inconsistent with their past behavior?
  context: This question employs a one-class anomaly detection model (e.g., Isolation Forest) to identify suspicious logins without relying on pre-defined rules. The model is trained on each user's normal login patterns (time, day, source ASN/country). New logins that the model flags as anomalous are highly suspect and require investigation, as they represent a significant departure from the user's established routine.
  answer_sources: Windows Event ID 4624, Zeek conn.log, Cloud Identity Provider Logs (e.g., Azure AD Sign-in Logs). Data is sourced from Domain Controllers, Cloud identity providers, VPN concentrators, and CRM application and database servers (for local account logins).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each login to crm_asset | score login using user_anomaly_model | alert if login is an anomaly
- question: Has an unusually large volume of data been transferred from a CRM server in a single session?
  context: A massive data transfer from a CRM server is a potential sign of bulk data exfiltration. This question sets a high, static threshold (e.g., 500 MB) for data transferred in a single connection. While simple, this method can effectively catch egregious data theft attempts that are far outside the scope of normal user activity.
  answer_sources: Zeek conn.log, Zeek http.log, Firewall Logs. Data is sourced from network sensors (e.g., Zeek) or firewalls monitoring traffic flows to and from CRM servers and database backends.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (Zeek conn.log) where dest_ip in crm_servers | alert if response_bytes > 500MB
- question: Is a user's daily data egress volume from CRM servers a statistical outlier compared to their own or their peer group's history?
  context: Adversaries may exfiltrate data in amounts that are large but still below a high static threshold. This question uses a more nuanced statistical approach by creating a dynamic baseline of each user's daily data transfer volume. An alert is triggered if a user's daily total dramatically exceeds their own moving average (e.g., >4 standard deviations) or if they become a top data mover within their peer group.
  answer_sources: Zeek conn.log, Zeek http.log, Firewall Logs. Data is sourced from network sensors (e.g., Zeek) or firewalls monitoring traffic flows to and from CRM servers and database backends.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: calculate daily egress per user from crm_servers | alert if volume > 4_std_dev of user_average or volume > 99th_percentile of peer_group
- question: Does the aggregate data egress volume from our CRM infrastructure deviate from its forecasted pattern?
  context: This question looks at the macro level of data flow from the entire CRM infrastructure. By using a time series forecasting model (e.g., SARIMA), we can learn the normal rhythm of data transfer, including daily and weekly cycles. An alert is generated when the actual observed data volume significantly exceeds the model's prediction, which could indicate a large-scale data exfiltration event affecting multiple accounts.
  answer_sources: Zeek conn.log, Zeek http.log, Firewall Logs. Data is sourced from network sensors (e.g., Zeek) or firewalls monitoring traffic flows to and from CRM servers and database backends.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: forecast hourly aggregate_egress from crm_servers | alert if actual_volume significantly exceeds forecast
- question: Has a CRM service account spawned an interactive shell or a reconnaissance tool?
  context: Non-interactive service accounts should have highly predictable behavior. The spawning of an interactive process like 'cmd.exe' or 'powershell.exe', or a reconnaissance tool like 'whoami.exe' or 'net.exe', by a CRM service account is a major red flag. It strongly suggests the account has been compromised and is being used for hands-on-keyboard activity.
  answer_sources: Windows Event ID 4688, Windows Event ID 4663, Database Audit Logs. Data is sourced from CRM application and database servers, Active Directory, Centralized logging server collecting database audit logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search (EventID 4688) on crm_servers where parent_process is crm_service_account and child_process in (cmd.exe, powershell.exe, whoami.exe)
- question: Is a CRM service account accessing an unusually high number of unique database tables?
  context: A compromised service account might be used to enumerate the database to understand its structure and find valuable data. This question establishes a baseline of the distinct database tables normally accessed by the service account within a given time frame. An alert is triggered if the count of unique tables accessed suddenly spikes, indicating potential enumeration activity.
  answer_sources: Windows Event ID 4688, Windows Event ID 4663, Database Audit Logs. Data is sourced from CRM application and database servers, Active Directory, Centralized logging server collecting database audit logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: profile unique tables_accessed per hour by crm_service_account | alert if count > 99th_percentile of history
- question: Is the sequence of actions performed by a CRM service account improbable based on its historical behavior?
  context: This question models the normal sequence of operations for a CRM service account using a model like a Hidden Markov Model (HMM). The model learns the typical order of process executions. If a new sequence of actions has a very low probability of occurring according to the model, it signifies a significant deviation from normal, programmed behavior and likely indicates a compromise.
  answer_sources: Windows Event ID 4688, Windows Event ID 4663, Database Audit Logs. Data is sourced from CRM application and database servers, Active Directory, Centralized logging server collecting database audit logs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: model sequence of process_executions by crm_service_account | alert if new_sequence_probability is below threshold