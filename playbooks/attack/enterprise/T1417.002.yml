name: "T1417.002: GUI Input Capture"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook is designed to detect adversarial attempts to steal credentials or collect sensitive data on corporate mobile devices. It focuses on identifying GUI Impersonation and overlay attacks, a subset of GUI Input Capture (T1417.002). The playbook uses multiple detection strategies, including identifying applications with suspicious permissions (android.permission.SYSTEM_ALERT_WINDOW), analyzing application metadata for signs of typosquatting (e.g., similar display names to legitimate apps), and correlating on-device events (like rapid application switching) with anomalous network behavior (like connections to newly registered domains or known malicious IPs). It aims to answer whether an adversary is attempting to steal credentials or collect data via these deceptive GUI techniques."
type: "technique"
related:
  - "TA0031: Credential Access"
  - "TA0035: Collection"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a known malicious application with screen overlay capabilities present on a managed device?"
    context: "This question aims to detect the most straightforward threat: a pre-identified malicious app that has the necessary permissions to perform an overlay attack ('android.permission.SYSTEM_ALERT_WINDOW') and is not approved for corporate use. A match against a threat intelligence feed provides high confidence that the application is malicious, warranting an immediate high-severity alert."
    answer_sources:
      - "MDM Application Inventory"
      - "Mobile EDR Application Installation Events"
      - "Corporate Application Allowlist"
      - "Mobile Threat Intelligence Feed"
      - "Centralized MDM/UEM platform, Mobile EDR data repository, and corporate application vetting database."
    range: "last 90 days"
    queries:
      - "SEARCH MDM application inventory JOIN corporate allowlist JOIN mobile threat feed WHERE permission = 'SYSTEM_ALERT_WINDOW' AND on_allowlist = false AND on_threat_feed = true"
  - question: "Is there an unusually rare, non-allowlisted application with screen overlay capabilities installed across the device fleet?"
    context: "This question helps uncover potential zero-day or unknown malware that isn't yet in threat intelligence feeds. By focusing on applications with low installation prevalence (low 'prevalence score'), it identifies outliers that deviate from the norm. A legitimate, widely-used application would have a high prevalence, whereas malware campaigns often start with a small number of infections."
    answer_sources:
      - "MDM Application Inventory"
      - "Corporate Application Allowlist"
      - "Centralized MDM/UEM platform, and corporate application vetting database."
    range: "last 90 days"
    queries:
      - "SEARCH MDM application inventory WHERE permission = 'SYSTEM_ALERT_WINDOW' AND on_allowlist = false | CALCULATE prevalence_percentile | FILTER prevalence_percentile < 5"
  - question: "Does a newly installed application exhibit features characteristic of malware, such as possessing high-risk permissions?"
    context: "This question uses a machine learning model to proactively assess the risk of a new application at the time of installation. By analyzing a combination of features (like the presence of 'SYSTEM_ALERT_WINDOW' and other risky permissions), the model can predict the likelihood of the app being malicious with a certain probability, enabling automated, high-confidence responses like device quarantine."
    answer_sources:
      - "Mobile EDR Application Installation Events"
      - "Centralized MDM/UEM platform, Mobile EDR data repository."
    range: "last 90 days"
    queries:
      - "ON new_app_install_event | EXTRACT permissions, exported_activities | PREDICT malware_probability with Random_Forest_Model | IF probability > 0.85 TRIGGER alert"
  - question: "Is an application impersonating a high-value corporate application by using a deceptively similar name?"
    context: "This question targets typosquatting attacks, where an adversary gives their malicious app a name very similar to a legitimate, trusted app (e.g., 'Okta Veriify' instead of 'Okta Verify'). By calculating the Levenshtein distance (a measure of string similarity), we can flag apps that are likely trying to trick users, especially when their underlying package name or signing certificate doesn't match the official one."
    answer_sources:
      - "MDM Application Inventory"
      - "Mobile EDR Application Installation Events"
      - "Corporate Application Metadata Store"
      - "Centralized MDM/UEM platform and the corporate application metadata repository containing official names, package IDs, and signatures."
    range: "last 90 days"
    queries:
      - "ON new_app_install_event | COMPARE display_name to high_value_app_list using Levenshtein_distance | IF distance <= 2 AND (package_name_mismatch OR certificate_mismatch) TRIGGER alert"
  - question: "Has there been a recent spike in the installation of applications with names highly similar to high-value targets, suggesting a coordinated campaign?"
    context: "This question moves from single-device detection to fleet-wide trend analysis. By tracking the daily count of 'lookalike' applications (using Jaro-Winkler similarity) and applying statistical analysis (e.g., moving averages and standard deviations), we can detect a sudden, coordinated attack campaign that might be missed when looking at individual installation events in isolation."
    answer_sources:
      - "MDM Application Inventory"
      - "Corporate Application Metadata Store"
      - "Centralized MDM/UEM platform and the corporate application metadata repository containing official names, package IDs, and signatures."
    range: "last 90 days"
    queries:
      - "QUERY MDM inventory daily | CALCULATE Jaro_Winkler_similarity for non-allowlisted apps | COUNT apps with similarity > 0.95 | ANALYZE count over time for spikes > 3_std_dev_above_moving_average"
  - question: "Can we identify clusters of suspicious, related applications that may represent a polymorphic malware family?"
    context: "This question uses unsupervised machine learning (clustering) to find groups of related, suspicious applications without prior signatures. By vectorizing application metadata (like names and developers) and using an algorithm like DBSCAN, we can group apps that are similar but not identical. Clusters containing no approved apps and having a small device footprint are highly suspicious and could represent an evolving threat."
    answer_sources:
      - "MDM Application Inventory"
      - "Centralized MDM/UEM platform."
    range: "last 90 days"
    queries:
      - "EXTRACT feature_vectors (names, developers) from all apps | CLUSTER vectors using DBSCAN | REVIEW clusters where no_apps_allowlisted AND device_count < 10"
  - question: "Did a suspicious application switch occur immediately before a device communicated with a known malicious or newly registered domain?"
    context: "This question correlates on-device behavior with network activity to detect an active overlay attack. The logic is that an attacker will switch their malicious app to the foreground to cover a sensitive app, capture credentials, and then immediately exfiltrate that data. This rule looks for that exact sequence: sensitive app -> suspicious app -> malicious network connection, providing a high-fidelity indicator of compromise."
    answer_sources:
      - "Mobile EDR Foreground App Events"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Threat Intelligence Blocklist (IP/Domain)"
      - "Passive DNS (Domain Age)"
      - "Mobile EDR data repository, network egress points instrumented with Zeek sensors (e.g., VPN gateways, corporate Wi-Fi controllers), and APIs for threat intelligence and passive DNS services."
    range: "last 90 days"
    queries:
      - "CORRELATE EDR and Zeek logs by device | IF (sensitive_app_foreground) FOLLOWED_BY (non-allowlisted_overlay_app_foreground within 5s) FOLLOWED_BY (network_connection_to_blocked_IP_or_new_domain within 60s) TRIGGER alert"
  - question: "Did a user perform an abnormal application switch that was followed by unusual DNS query patterns?"
    context: "This question uses behavioral analytics to find anomalies. It first establishes a baseline of normal app-switching for each user. A rare transition (e.g., from a banking app to a game) is flagged. It then checks if this rare transition was followed by anomalous network behavior, specifically high-entropy DNS requests, which can be indicative of domain generation algorithms (DGAs) used by malware for command and control."
    answer_sources:
      - "Mobile EDR Foreground App Events"
      - "Zeek dns.log"
      - "Mobile EDR data repository, network egress points instrumented with Zeek sensors (e.g., VPN gateways, corporate Wi-Fi controllers), and APIs for threat intelligence and passive DNS services."
    range: "last 90 days"
    queries:
      - "MONITOR app_transitions | IF transition_probability < 1st_percentile | CALCULATE Shannon_entropy of DNS_queries in next 5_mins | IF entropy > 3_std_dev_above_average TRIGGER alert"
  - question: "Following a rare application transition, did the device's network traffic pattern exhibit a severe anomaly as detected by a machine learning model?"
    context: "This is an advanced question, using a deep learning model (LSTM autoencoder) to baseline a device's normal network behavior. When a suspicious on-device event occurs (like a rare app transition), this model is queried. A high 'reconstruction error' means the current network traffic is very different from anything the model has seen before for that device, indicating a severe anomaly that, when correlated with the suspicious app event, strongly suggests a compromise."
    answer_sources:
      - "Mobile EDR Foreground App Events"
      - "Zeek conn.log"
      - "Mobile EDR data repository, network egress points instrumented with Zeek sensors (e.g., VPN gateways, corporate Wi-Fi controllers), and APIs for threat intelligence and passive DNS services."
    range: "last 90 days"
    queries:
      - "ON rare_app_transition_event | QUERY LSTM_autoencoder with current_network_feature_vector | IF reconstruction_error > 99th_percentile TRIGGER alert"