name: T1102.003: One-Way Communication
id: 69e3a6a2-9d8b-4c7e-8a0b-1f7c7d4e5f6a
description: This playbook helps to identify if an adversary is using external web services for one-way command and control (C2). This technique involves a compromised host checking for instructions posted on legitimate public platforms like social media, file/text sharing sites, or code repositories. The playbook looks for several indicators: outbound connections to known malicious C2 dead drop channels; anomalous metadata (e.g., rare User-Agents, high-entropy URLs, malicious JA3 hashes) in connections to legitimate services; non-browser processes (e.g., powershell.exe, svchost.exe) making web requests; beacon-like network traffic with highly regular timing and consistent small sizes; and connections with an unusually low ratio of response bytes to request bytes, which is atypical for normal web browsing.
type: technique
related:
- TA0011: Command and Control
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are internal hosts connecting to known malicious C2 dead drop channels hosted on public platforms?
  context: This question aims to detect direct communication with adversary infrastructure by checking outbound network traffic against a curated list of known malicious indicators (domains, URLs, IPs) from threat intelligence feeds. A match provides a high-confidence signal of a potential compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Zeek ssl.log
  - Enterprise Web Proxy
  - Egress Firewalls
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - 'SEARCH network_logs (conn, dns, http, ssl) WHERE destination_ip OR destination_domain OR server_name IN threat_intel_watchlist'
- question: Is any internal host exhibiting an unusual frequency of connections to legitimate file or text sharing services?
  context: Adversaries often use high-reputation services to blend in. This question looks for behavioral anomalies by baselining normal connection frequencies for each host to a list of these services. A significant spike above the historical baseline could indicate a compromised host using these services for C2 check-ins.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Zeek ssl.log
  - Enterprise Web Proxy
  - Egress Firewalls
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - 'FOREACH internal_ip, CALCULATE daily_connection_count to (pastebin.com, gist.github.com, etc.). ALERT IF daily_count > 99th_percentile(historical_30day_baseline)'
- question: Can we predict if a network connection is a C2 dead drop check-in using machine learning?
  context: This question leverages a supervised machine learning model to proactively identify C2 communications that might not appear on static threat intelligence lists. By training on features like domain age, URL entropy, and JA3 hash, the model can score new connections and flag those with a high probability of being malicious.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Zeek ssl.log
  - Enterprise Web Proxy
  - Egress Firewalls
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - 'APPLY classification_model ON new_network_connections(features=[domain_age, asn, ip_rep, url_entropy, ja3]). ALERT IF prediction_probability > threshold'
- question: Are any outbound connections to legitimate web services using suspicious metadata like non-standard User-Agents or known malicious TLS fingerprints?
  context: This question tries to find C2 traffic hiding within connections to legitimate sites. It looks for specific, known-bad indicators like User-Agent strings associated with scripting tools (curl, wget), malicious JA3/JA3S hashes, or URL patterns that match C2 frameworks.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Enterprise Web Proxy and Egress Firewalls with TLS Inspection Capabilities
  range: last 90 days
  queries:
  - 'SEARCH http_logs OR ssl_logs WHERE (user_agent IN non_standard_list OR ja3_hash IN malicious_ja3_list OR url MATCHES c2_regex) AND destination IN legitimate_services_list'
- question: Are there any connections to high-reputation domains that involve both a rare User-Agent and an unusually complex URL?
  context: This question identifies outliers by combining two statistical anomalies. A very uncommon User-Agent suggests non-standard client software, and high URL entropy suggests machine-generated or encoded data in the path. The combination is a strong indicator of non-human, potentially malicious, activity.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Enterprise Web Proxy and Egress Firewalls with TLS Inspection Capabilities
  range: last 90 days
  queries:
  - 'SEARCH http_logs WHERE user_agent_prevalence < 5th_percentile AND url_path_entropy > 95th_percentile AND destination IN high_reputation_list'
- question: Are any clients exhibiting a change in their TLS fingerprint, moving from a common group to an anomalous one?
  context: This question uses unsupervised machine learning to detect changes in client software behavior. A host's TLS fingerprint (JA3 hash) is tied to the client application. If a host that normally uses a common browser (and thus a common JA3) suddenly starts using a rare JA3, it could signify that a new, potentially malicious tool was executed.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Enterprise Web Proxy and Egress Firewalls with TLS Inspection Capabilities
  range: last 90 days
  queries:
  - 'CLUSTER ssl_logs by ja3_hash. MONITOR for hosts moving from large_common_cluster to small_anomalous_cluster'
- question: Are system processes like powershell.exe or rundll32.exe making direct outbound connections to the internet?
  context: This question focuses on identifying living-off-the-land techniques. System utilities and scripting engines should generally not be making direct web requests. Correlating process creation events with network logs to find such behavior can uncover malware execution or C2 activity.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Workstations
  - Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - 'JOIN process_creation_logs with network_logs on source_ip and time(<2s). ALERT IF process_name IN (powershell.exe, rundll32.exe, etc.) AND destination_port IN (80, 443)'
- question: Has any host started exhibiting new or rare process-to-network behavior?
  context: This question establishes a behavioral baseline of which processes and parent processes normally make network connections on each host. It then flags any deviation from this baseline, such as a process that has never made a network call before suddenly doing so. This is effective for detecting novel malware or misuse of legitimate tools.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Workstations
  - Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - 'FOREACH host, CREATE baseline of {process, parent_process} tuples that make network_connections. ALERT on any new tuple observed.'
- question: Can we detect anomalous process network behavior using an autoencoder model?
  context: This question applies an autoencoder to learn a model of what 'normal' process network activity looks like, based on features like process name, command line properties, and connection details. Processes that deviate significantly from this learned normal (i.e., have a high reconstruction error) are flagged as anomalous, potentially indicating malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Workstations
  - Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - 'APPLY autoencoder_model on process_network_behavior_vectors. ALERT IF reconstruction_error > threshold'
- question: Are any internal hosts communicating with an external destination with robotic regularity and small, consistent data sizes?
  context: This question looks for the classic sign of C2 beaconing: highly regular timing (low jitter) between connections. By calculating the standard deviation of time intervals between connections, we can distinguish machine-generated traffic from human-driven activity. Small, consistent request sizes further strengthen this signal.
  answer_sources:
  - Zeek conn.log
  - Egress Firewalls
  - Core Network Switches
  - Network Taps
  range: last 90 days
  queries:
  - 'GROUP conn_logs by src_ip, dst_ip over 1hr window. ALERT IF count > 10 AND stdev(time_delta) < 1s AND avg(bytes_sent) < 512'
- question: Are any source-destination traffic flows exhibiting unusually low variance in both connection timing and data size?
  context: This question uses a statistical approach to find beaconing by identifying flows that are outliers in terms of their regularity. It looks for flows where both the standard deviation of the inter-arrival time and the standard deviation of the bytes sent are in the lowest percentile across all network traffic, indicating an exceptionally consistent and non-human pattern.
  answer_sources:
  - Zeek conn.log
  - Egress Firewalls
  - Core Network Switches
  - Network Taps
  range: last 90 days
  queries:
  - 'CALCULATE stdev(inter_arrival_time) and stdev(bytes_sent) for all src-dst pairs. ALERT IF both values < 1st_percentile of all flows'
- question: Can we detect periodic signals indicative of C2 beaconing in network traffic time series using frequency analysis?
  context: This question applies signal processing techniques to find beaconing. By transforming a time series of connection events into the frequency domain using a Fast Fourier Transform (FFT), a strong, sharp peak reveals a dominant periodic component. This is a robust mathematical method for identifying the regular "heartbeat" of C2 communications.
  answer_sources:
  - Zeek conn.log
  - Egress Firewalls
  - Core Network Switches
  - Network Taps
  range: last 90 days
  queries:
  - 'FOREACH src-dst pair, CREATE time_series of connections. APPLY FFT. ALERT IF resulting frequency_spectrum has a high-magnitude peak.'
- question: Are there any web connections where the amount of data sent by the client is nearly the same as, or greater than, the data received in the response?
  context: This question targets a key characteristic of one-way C2 or data exfiltration. Normal web browsing involves a small request (e.g., a GET request) followed by a much larger response (the web page). A low response-to-request byte ratio (e.g., < 1.1) is highly abnormal for web traffic and suggests the client is primarily sending data, not retrieving it.
  answer_sources:
  - Zeek conn.log
  - Egress Firewalls
  - Network Taps
  range: last 90 days
  queries:
  - 'SEARCH conn_logs WHERE conn_state = ''SF'' AND dest_port IN (80, 443). ALERT IF (resp_bytes / orig_bytes) < 1.1 AND orig_bytes > 0'
- question: Has any host's average response-to-request byte ratio for web traffic significantly dropped compared to its historical baseline?
  context: This question looks for a shift in a host's traffic profile over time. A sudden, sustained drop in the average response-to-request byte ratio suggests the host's behavior has changed from typical browsing to something more akin to data upload or one-way C2 check-ins, even if individual connections don't trigger a simple rule.
  answer_sources:
  - Zeek conn.log
  - Egress Firewalls
  - Network Taps
  range: last 90 days
  queries:
  - 'FOREACH internal_ip, CALCULATE daily_avg_ratio(resp_bytes/orig_bytes). ALERT IF daily_avg_ratio is > 2 stdevs below 30-day_historical_mean'
- question: Can an unsupervised anomaly detection model identify connections with unusual byte asymmetry and other suspicious features?
  context: This question uses an Isolation Forest model to find connections that are "different" from the norm across multiple dimensions. By considering the byte ratio along with other features like duration and packet counts, the model can identify complex anomalies that simple rules or single-variable statistics might miss, providing a more holistic detection approach.
  answer_sources:
  - Zeek conn.log
  - Egress Firewalls
  - Network Taps
  range: last 90 days
  queries:
  - 'APPLY IsolationForest model on connection_feature_vectors(features=[byte_ratio, duration, pkts]). ALERT on connections with high anomaly_score.'