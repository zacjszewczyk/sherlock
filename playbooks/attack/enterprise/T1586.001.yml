name: T1586.001: Social Media Accounts
id: 3c9a1e8f-7b0d-4f6c-8a2e-5d4f1b3c6d7e
description: Investigates whether an adversary is developing resources by compromising social media accounts for potential future use. This is done by looking for outbound network connections to malicious domains related to social media, automated browser or script activity accessing social media sites, credential harvesting events followed by social media access, and anomalous network traffic patterns to social media platforms.
type: technique
related:
- TA0042: Resource Development
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any internal hosts established network connections to domains or IP addresses known to be associated with social media credential phishing, command and control (C2), or typo-squatting?
  context: This question aims to identify direct connections to known malicious infrastructure. By correlating DNS requests with actual network connections and comparing them against threat intelligence feeds, analysts can detect attempts to compromise credentials by luring users to fake social media login pages or communication with adversary C2 servers.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress Points
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN dns_logs WITH connection_logs ON (client_ip, server_ip)
      WHERE dns_logs.query_name IN (threat_intel_domains)
      OR connection_logs.server_ip IN (threat_intel_ips)
      AND connection_logs.status == 'SUCCESSFUL'
- question: Are there any internal hosts connecting to typo-squatted domains that impersonate legitimate social media sites, and is the frequency of these connections statistically anomalous?
  context: Since threat intelligence may not cover all malicious domains, this question uses a statistical approach to find look-alike domains. By calculating the Levenshtein distance, it identifies potential typo-squatted domains. It then analyzes the request frequency to these domains to flag activity that stands out from a host's peer group, indicating a possible targeted attack.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress Points
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH domain IN dns_logs:
        IF levenshtein_distance(domain, known_social_media_domains) <= 2:
          CALCULATE request_frequency_per_host(domain)
          IF request_frequency > 95th_percentile(peer_group_frequency):
            ALERT
- question: Are internal hosts connecting to domains that are algorithmically generated and likely malicious, potentially for C2 or phishing related to social media account compromise?
  context: This question leverages a machine learning model to detect domains created by Domain Generation Algorithms (DGAs), which are commonly used by malware for C2 communications. By analyzing domain characteristics like entropy and length, the model can identify and flag suspicious domains that might not be on any static threat intelligence list, providing an advanced layer of detection for credential compromise attempts.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress Points
  - DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH domain IN dns_logs:
        prediction = dga_model.predict(domain)
        IF prediction == 'MALICIOUS' AND confidence > 0.95:
          CHECK for successful connection in conn_logs to domain
          IF connection_successful:
            ALERT
- question: Have any browser or scripting engine processes been launched with command-line arguments that suggest automated, non-interactive access to social media sites?
  context: This question looks for direct evidence of automation scripts running on endpoints. Command-line flags like '--headless' or '--remote-debugging-port' are strong indicators that a browser is being controlled programmatically, not by a user. Similarly, finding social media domains in the arguments of scripting engines like PowerShell or Python points to scripts designed to interact with these platforms, possibly to take over compromised accounts.
  answer_sources:
  - Windows Event ID 4688
  - User Endpoints
  - Virtual Desktop Infrastructure (VDI)
  - Application Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_logs(EventID 4688) WHERE
        (process_name IN ['chrome.exe', 'firefox.exe'] AND command_line CONTAINS ['--headless', '--remote-debugging-port'])
        OR (process_name IN ['powershell.exe', 'python.exe'] AND command_line CONTAINS ['Invoke-WebRequest', 'selenium'] AND command_line CONTAINS social_media_domain)
- question: Are there any statistically unusual parent-child process relationships or command-line argument patterns involving web browsers that could indicate automation?
  context: This question seeks to find anomalies in process behavior. A legitimate user typically launches a browser from the desktop or start menu ('explorer.exe'). A browser being launched by a system service ('services.exe') or a scheduled task ('taskhostw.exe') is highly unusual and could indicate a persistent malicious script. Analyzing command-line entropy helps detect repetitive, automated commands that differ from varied, user-driven input.
  answer_sources:
  - Windows Event ID 4688
  - User Endpoints
  - Virtual Desktop Infrastructure (VDI)
  - Application Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE normal parent-child relationships from EventID 4688.
      ALERT on rare relationships (e.g., 'services.exe' -> 'chrome.exe').
      CALCULATE entropy of browser command-line arguments per host.
      ALERT on sustained low-entropy values compared to baseline.
- question: Can machine learning models distinguish between benign user-driven browser activity and potentially malicious automated scripts based on process creation data?
  context: This question uses a machine learning approach to create a more nuanced detection than simple rules. By training a model on features like parent process name and command-line characteristics from known benign and malicious activity, it can identify subtle patterns of automation that might be missed by symbolic or statistical methods, providing a higher-fidelity signal for investigation.
  answer_sources:
  - Windows Event ID 4688
  - User Endpoints
  - Virtual Desktop Infrastructure (VDI)
  - Application Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH process_creation_event (EventID 4688):
        features = extract_features(event)
        prediction = classification_model.predict(features)
        IF prediction == 'MALICIOUS' AND confidence > high_threshold:
          ALERT
- question: Has a credential dumping event on a host been immediately followed by a network connection from that same host to a social media platform?
  context: This question correlates two distinct malicious activities to uncover a specific attack chain. The execution of a credential dumping tool like Mimikatz or suspicious access to the LSASS process indicates credential theft. If this is immediately followed by a connection to a social media site, it's highly probable that the stolen credentials are being used to compromise an account. The tight time window is key to connecting the two events.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Zeek conn.log
  - User Endpoints
  - Authentication Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRIGGER on credential_dump_event (EventID 4688 for mimikatz.exe, OR EventID 4656/4663 for LSASS access)
      IF within 10 minutes, network_connection_log shows connection from same host to social_media_domain:
        ALERT 'Critical: Potential credential reuse on social media'
- question: Is there a statistically significant correlation between process access events (potentially credential theft) and subsequent network connections to social media sites on any given host?
  context: This question looks for a pattern of behavior over time rather than a single instance. By establishing a baseline probability of a social media connection occurring after a generic process access event, it can identify hosts where this sequence happens more frequently than normal. A high conditional probability suggests that an adversary may have established a persistent mechanism on the host to steal credentials and immediately use them.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Zeek conn.log
  - User Endpoints
  - Authentication Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH host:
        CALCULATE baseline_probability(social_media_connection | process_access_event)
        OBSERVE current conditional probability
        IF current_probability > (mean_probability + 3 * stdev):
          ALERT
- question: Does sequence analysis of process and network events reveal a low-probability, anomalous chain of events, such as LSASS process access followed by a connection to a social media API?
  context: This question employs advanced sequence analysis to understand user workflows. A Hidden Markov Model (HMM) or similar technique can learn the 'normal' sequence of operations for a user. An alert is generated when a sequence of events occurs that is highly unlikely based on the user's learned profile, such as the specific chain of credential access followed by a programmatic connection to a social media API, indicating a deviation from normal interactive use.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Zeek conn.log
  - User Endpoints
  - Authentication Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN sequence model (e.g., HMM) on normal user event sequences.
      FOR EACH new event sequence:
        probability = model.score(sequence)
        IF probability is below anomaly_threshold AND sequence contains [LSASS_access, social_media_connection]:
          ALERT
- question: Are any unauthorized internal hosts or user accounts connecting to social media platforms or their APIs?
  context: This question enforces a policy of 'known good' access. Many organizations have specific servers or service accounts that are permitted to interact with social media APIs for marketing or customer service. By maintaining an explicit allowlist, any connection from a source not on that list (e.g., a standard user workstation, a database server) is immediately suspicious and warrants investigation, as it could indicate a compromised host being used for unauthorized purposes.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network Egress Points
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE authorized_sources (IPs, accounts)
      SEARCH network_logs WHERE destination IN social_media_IP_ranges
      IF source_ip NOT IN authorized_sources.IPs AND source_account NOT IN authorized_sources.accounts:
        ALERT
- question: Are there any internal hosts exhibiting statistically anomalous network traffic to social media sites, such as an unusual frequency or volume of data?
  context: This question focuses on detecting changes in the volume and frequency of network traffic, which are key indicators of automation. A human user's interaction with social media is typically sporadic. A script, however, might make connections at regular intervals or transfer unusually large amounts of data. By comparing a host's current activity against its own historical baseline, this method can flag significant deviations that point to non-human, automated behavior.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network Egress Points
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH host:
        ESTABLISH 30-day baseline for (hourly_connection_count, total_bytes) to social media sites.
        MONITOR live traffic.
        IF live_metric > 99th_percentile(historical_baseline):
          ALERT
- question: Can a time-series anomaly detection model identify non-interactive, automated traffic to social media sites that deviates from established daily and weekly patterns?
  context: This question applies a sophisticated machine learning model to account for the natural rhythms of user activity (seasonality). Models like SARIMA or LSTM autoencoders can learn a user's typical daily and weekly social media usage patterns. They can then identify anomalies that simpler statistical methods might miss, such as sustained API-like traffic occurring at 3 AM on a Sunday, which strongly deviates from a user's normal 9-to-5 browsing habits.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network Egress Points
  - Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH host:
        TRAIN time-series model (e.g., LSTM autoencoder) on historical connection/data volume to social media.
        PREDICT expected volume for current time.
        CALCULATE reconstruction_error (actual vs. predicted).
        IF reconstruction_error > anomaly_threshold:
          ALERT