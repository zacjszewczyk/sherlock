name: T1586.001: Social Media Accounts
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is developing resources by compromising social media accounts for potential future use. It focuses on detecting evidence of this activity, such as outbound network connections to malicious domains disguised as social media sites, the use of automated scripts or browser instances to access social media platforms, credential harvesting events immediately followed by logins to social media sites, and anomalous network traffic patterns (like unusual timing or data volume) directed towards social media platforms.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts connecting to known malicious domains or IPs disguised as social media sites?
    context: This question aims to identify outbound network connections to domains or IP addresses associated with social media credential phishing, typo-squatting, or adversary command and control (C2) infrastructure. By correlating DNS requests with actual network connections and comparing them against threat intelligence, analysts can detect attempts to lure users into providing credentials on fake social media login pages.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN dns_logs ON (client_ip) WITH connection_logs
          WHERE (dns_logs.query IN (threat_intel_feed) OR connection_logs.server_ip IN (threat_intel_feed))
          AND connection_logs.status == 'SUCCESS'
          RETURN client_ip, server_ip, dns_logs.query
  - question: Can we statistically identify typo-squatted social media domains that are not yet on threat intelligence lists?
    context: This question focuses on detecting previously unknown typo-squatted domains by analyzing their structural similarity to legitimate social media domains using an algorithm like Levenshtein distance. It refines detection by identifying hosts that access these suspicious domains with an abnormally high frequency compared to their peers, suggesting automated or malicious activity rather than an accidental typo.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each domain IN dns_logs:
            CALCULATE levenshtein_distance(domain, known_social_media_domains)
            IF distance <= 2:
              CALCULATE request_frequency_percentile(domain, host)
              IF percentile > 95:
                ALERT host, domain
  - question: Can machine learning models identify algorithmically generated domains (DGAs) used for social media phishing or C2?
    context: This question leverages a machine learning model to detect domains created by Domain Generation Algorithms (DGAs), which adversaries use to create large numbers of disposable domains. By analyzing linguistic and structural features of domain names, the model can identify and flag suspicious domains used for social media-related attacks, even if they don't resemble legitimate domains.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each domain IN dns_logs:
            PREDICT is_dga(domain) using ML_model
            IF prediction == 'malicious' AND confidence > 0.9:
              CHECK for successful connection in connection_logs
              IF connection_exists:
                ALERT host, domain
  - question: Is there evidence of automated, non-interactive social media access via browser or script command-line arguments?
    context: This question seeks to identify process creation events where a web browser or scripting engine is launched with command-line arguments indicating automation. Arguments like '--headless' or the presence of social media domains alongside web request functions in scripts are strong indicators that an adversary is programmatically accessing accounts, potentially for scraping data or posting content.
    answer_sources:
      - Windows Event ID 4688
      - User Endpoints
      - Virtual Desktop Infrastructure (VDI)
      - Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs (Event ID 4688)
          WHERE (process_name IN ['chrome.exe', 'firefox.exe'] AND command_line CONTAINS '--headless')
          OR (process_name IN ['powershell.exe', 'python.exe'] AND command_line CONTAINS 'Invoke-WebRequest' AND command_line CONTAINS 'facebook.com')
          RETURN host, process_name, command_line
  - question: Are there statistically rare parent-child process relationships or command-line arguments suggesting automated social media access?
    context: This question aims to find anomalies in process creation behavior. It involves baselining normal parent-child process relationships and command-line argument complexity (entropy). An alert for a rare relationship (e.g., 'services.exe' spawning 'chrome.exe') or for sustained, low-entropy command lines (suggesting repetitive, simple commands) can uncover hidden automation scripts.
    answer_sources:
      - Windows Event ID 4688
      - User Endpoints
      - Virtual Desktop Infrastructure (VDI)
      - Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE normal parent-child relationships from Event ID 4688
          FOR each new process_creation_event:
            IF parent-child_relationship is rare (e.g., >3 standard deviations from norm):
              ALERT host, parent_process, child_process
  - question: Can a machine learning model distinguish between benign user-driven browser activity and malicious automated scripts?
    context: This question proposes using a trained classification model to analyze process creation events. By learning from features like parent process name, command-line length, and argument count, the model can differentiate between normal user browsing and the distinct patterns of automated scripts used by adversaries to control social media accounts, providing a more intelligent detection method.
    answer_sources:
      - Windows Event ID 4688
      - User Endpoints
      - Virtual Desktop Infrastructure (VDI)
      - Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event (Event ID 4688):
            EXTRACT features (parent_process, cmd_line_length, etc.)
            PREDICT is_malicious(features) using ML_model
            IF prediction == 'malicious' AND confidence > 0.9:
              ALERT host, process_name, command_line
  - question: Has a credential harvesting event been immediately followed by a network connection to a social media platform?
    context: This question looks for a specific sequence of events: the execution of a known credential dumping tool (like Mimikatz) or suspicious access to the LSASS process, followed within a very short time window by a network connection from the same host to a social media site. This temporal correlation is a strong indicator that freshly stolen credentials are being used to compromise an account.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Zeek conn.log
      - User Endpoints
      - Authentication Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRIGGER on credential_dumping_event (e.g., mimikatz.exe execution or LSASS access)
          WITHIN 10 minutes from same host:
            SEARCH for network_connection to social_media_domain
            IF found:
              ALERT host, user, destination_domain
  - question: Is the probability of a social media connection following a process access event statistically anomalous for a given host?
    context: This question uses statistical analysis to find suspicious temporal correlations. It establishes a baseline for how often a network connection to a social media site normally occurs after a generic process access event for a host and its peers. If a host suddenly shows a much higher probability of this sequence, it suggests a deviation from normal behavior that could indicate credential theft and immediate use.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Zeek conn.log
      - User Endpoints
      - Authentication Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host:
            CALCULATE baseline_probability(social_media_connection | process_access_event)
            IF observed_probability > (baseline_probability + 3 * standard_deviation):
              ALERT host, observed_probability
  - question: Can a sequence analysis model detect an abnormal chain of events, such as LSASS access followed by a social media API call?
    context: This question applies sequence analysis models (like a Hidden Markov Model) to learn the typical workflows and event sequences for each user. The model can then identify and flag a sequence of actions that is highly improbable based on the user's learned profile, such as accessing the credential store (LSASS) and then immediately making a network connection to a social media API.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Zeek conn.log
      - User Endpoints
      - Authentication Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN HMM model on normal user event sequences
          FOR each new event_sequence:
            CALCULATE probability(sequence) using HMM model
            IF probability is low (anomaly):
              ALERT user, sequence_of_events
  - question: Are unauthorized internal hosts or service accounts connecting to social media platforms?
    context: This question uses a simple but effective allowlist approach. A list of servers and service accounts that are explicitly authorized for legitimate business reasons (e.g., marketing bots) to connect to social media APIs is maintained. Any connection to a social media platform originating from a host or account not on this allowlist is flagged as suspicious and potentially unauthorized.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE authorized_hosts_list
          SEARCH network_connections to social_media_domains
          WHERE source_host NOT IN authorized_hosts_list
          RETURN source_host, destination_domain
  - question: Does any host exhibit anomalous network traffic volume or frequency when connecting to social media sites?
    context: This question focuses on identifying deviations from a host's normal behavior when interacting with social media sites. By creating a rolling 30-day baseline of metrics like hourly connection counts and data volume, the system can automatically flag when a host's current activity exceeds its own historical norms (e.g., surpassing the 99th percentile), which could indicate automated malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host:
            CALCULATE 30-day_baseline for social_media_traffic (hourly_connections, data_volume)
            IF current_traffic > 99th_percentile_of_baseline:
              ALERT host, metric, current_value
  - question: Can a time-series model detect non-interactive, automated traffic patterns to social media sites?
    context: This question applies advanced time-series anomaly detection to learn the daily and weekly rhythms of a user's social media activity. The model can identify sophisticated attacks that might not be caught by simple thresholding, such as sustained, low-and-slow API-like traffic or activity that occurs consistently outside of the user's normal business hours, both of which are hallmarks of automation.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host's social_media_traffic_data:
            APPLY LSTM_autoencoder or SARIMA model
            IF model detects significant anomaly in time-series pattern:
              ALERT host, anomalous_time_window