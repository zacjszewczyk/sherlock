name: T1136.001: Local Account
id: 5a8a183d-e448-4e89-9883-455648831f22
description: This playbook helps to determine if an adversary is maintaining persistence by creating local accounts. It provides investigative methods to detect this activity by correlating account creation events (Windows Event ID 4720) with suspicious network behavior, such as communication with threat-listed IPs or anomalous data egress. It also identifies specific command-line artifacts (e.g., 'net user /add' and 'net localgroup /add' in a single command), rapid event sequences (creation followed immediately by privilege escalation), unusual first-time logon activity for new accounts (e.g., remote logons or immediate reconnaissance), and anomalous network behavior following an account creation.
type: technique
related:
  - TA0003: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Has a host that recently created a new local user account also been observed communicating with known malicious IPs or domains?
    context: This question is critical for identifying compromised systems where an adversary has established persistence. Creating a local account is a common persistence technique. If this action is immediately preceded by or followed by communication with command-and-control (C2) infrastructure or other malicious endpoints, it strongly indicates that the account creation was part of an attack chain. Answering this helps prioritize alerts and focus investigations on high-confidence threats.
    answer_sources:
      - Windows Event ID 4720
      - Zeek conn.log
      - Zeek dns.log
      - User Workstations
      - Member Servers
      - Internet Gateway
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: SIEM Pseudocode
        query: |
          FIND EventID 4720
          EXTRACT hostname, timestamp as account_creation_timestamp
          SEARCH network logs (Zeek conn.log, dns.log) FOR hostname
          WHERE network_timestamp is within 24 hours of account_creation_timestamp
          AND destination_ip OR domain IN high_confidence_threat_list
          RETURN alert
  - question: Is the rate of local account creation on a host anomalous compared to its own history or its peer group, especially after communicating with a low-reputation IP?
    context: This question uses behavioral analytics to detect suspicious activity that might not involve known-bad indicators. Adversaries may use tools that automate account creation, leading to a spike in activity. By baselining normal behavior, analysts can spot these deviations. Correlating this with prior communication to newly registered domains or other low-reputation IPs adds valuable context, helping to separate legitimate administrative activity from potential threats.
    answer_sources:
      - Windows Event ID 4720
      - Zeek conn.log
      - Zeek dns.log
      - User Workstations
      - Member Servers
      - Internet Gateway
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: Analytics Pseudocode
        query: |
          FOR each host:
            CALCULATE daily_account_creation_rate_baseline (30-day history)
            CALCULATE 95th_percentile_threshold
            IF host communicates with low_reputation_ip:
              MONITOR host for new EventID 4720
              IF new_event_rate > 95th_percentile_threshold:
                RETURN alert
  - question: Based on a machine learning model, does a specific local account creation event exhibit characteristics of known malicious activity?
    context: This question leverages machine learning to make a sophisticated judgment on whether an account creation is malicious. The model considers multiple features simultaneously, such as the randomness of the account name (high entropy often indicates automation), the process that initiated the creation, the time of day, and recent network history. This allows for the detection of novel or subtle attacks that might evade simpler rule-based detections.
    answer_sources:
      - Windows Event ID 4720
      - Zeek conn.log
      - Zeek dns.log
      - User Workstations
      - Member Servers
      - Internet Gateway
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: ML Pseudocode
        query: |
          ON EventID 4720:
            EXTRACT features (account_name_entropy, parent_process, time_of_day, recent_bad_ip_comms_flag)
            INPUT features into trained classification_model
            GET prediction_score
            IF prediction_score > 0.9:
              RETURN high_severity_alert
  - question: Has a single command line been used to both create a local user and add them to a privileged group?
    context: This is a highly specific and suspicious indicator. Legitimate administrators typically perform these actions in separate steps or through graphical user interfaces. Chaining these commands together on a single line (e.g., using '&&') is a common tradecraft for attackers to quickly establish privileged persistence. Detecting this pattern in command-line logs is a high-fidelity way to identify malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: Regex/SIEM Pseudocode
        query: |
          SEARCH EventID 4688
          WHERE command_line MATCHES regex `/(?=.*net user .* /add)(?=.*net localgroup (Administrators|Remote Desktop Users) .* /add)/`
          RETURN alert
  - question: Is the command-line string for a 'net.exe' execution unusually complex or random, suggesting potential obfuscation?
    context: Adversaries may attempt to obfuscate their commands to evade simple keyword-based detections. This can result in command lines with higher-than-normal character randomness (entropy). By establishing a baseline for legitimate 'net.exe' command entropy, analysts can flag significant deviations as suspicious, prompting a closer look at the command's intent, even if it doesn't match a known bad pattern.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: Analytics Pseudocode
        query: |
          CALCULATE entropy_baseline (mean, std_dev) for legit `net.exe` commands
          ON new EventID 4688 with process `net.exe`:
            CALCULATE entropy of command_line
            IF command_entropy > (mean + 3 * std_dev):
              RETURN alert
  - question: Does a natural language processing (NLP) model classify a command-line execution as malicious?
    context: This question applies advanced machine learning to the problem of command-line analysis. Unlike simple regex or keyword matching, an NLP model can understand the structure, tokens, and context of a command to make a more nuanced determination. This is particularly effective against complex, chained, or obfuscated commands, providing a more robust detection capability for malicious activity involving utilities like 'net.exe'.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: ML/NLP Pseudocode
        query: |
          ON new EventID 4688:
            EXTRACT command_line
            INPUT command_line into NLP_classifier
            GET classification_label
            IF classification_label == 'malicious':
              RETURN alert
  - question: Was a new local user account created and immediately added to a privileged group within a very short time window?
    context: This is a classic indicator of automated, malicious persistence. An attacker, having gained access, will often script the creation of a new user and its immediate addition to a group like 'Administrators' to ensure future access. The speed of this two-step process (e.g., within 60 seconds) is a key differentiator from typical, manual administrative actions. Correlating these two events (4720 and 4732) is a high-fidelity method for detecting this technique.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4732
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: SIEM Correlation Pseudocode
        query: |
          WHEN EventID 4720 occurs (get hostname, username, timestamp_A)
          LOOK FOR EventID 4732 within 60 seconds on same hostname
          WHERE 4732.MemberName == username
          AND 4732.GroupName IN ('Administrators', 'Remote Desktop Users', 'Power Users')
          RETURN alert
  - question: Was a rapid user creation and privilege escalation sequence initiated by a non-standard administrative process?
    context: This question adds another layer of context to the previous one. While some rapid creation/escalation events might be legitimate (e.g., from an identity management tool), they are typically initiated by known, trusted processes. If this activity is spawned by a generic process like 'cmd.exe' or 'powershell.exe', or any other process not on an administrative allowlist, it significantly increases the likelihood of malicious intent. It helps filter out noise from legitimate automated tools.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4732
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: Analytics Pseudocode
        query: |
          CALCULATE baseline_time_delay for legit admin processes (e.g., mmc.exe) between 4720 and 4732 events.
          FIND correlated 4720 and 4732 events.
          EXTRACT parent_process and time_delay.
          IF parent_process NOT IN admin_allowlist AND time_delay < 10th_percentile_of_baseline:
            RETURN alert
  - question: Is the sequence of a user creation event followed by a privileged group addition event statistically improbable for a specific host?
    context: This question uses host-specific behavioral modeling to detect anomalies. Every host has a typical pattern of system events. A sequence analysis model learns these normal patterns. If a host that never or rarely sees a user creation event (4720) immediately followed by a privilege escalation event (4732) suddenly exhibits this behavior, it represents a low-probability state transition. This is a strong signal of an anomaly worth investigating.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4732
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: ML Pseudocode
        query: |
          FOR each host:
            TRAIN Markov Chain model on historical event ID sequences.
          ON new event sequence (4720 -> 4732):
            CALCULATE transition_probability using model.
            IF transition_probability < learned_threshold:
              RETURN alert
  - question: Did a newly created local account's first logon occur remotely, and did that session immediately involve reconnaissance activity?
    context: The initial actions of a new user account are highly informative. A legitimate user might first log on locally and perform setup tasks. An attacker, however, will often use a newly created account to log on remotely (Logon Type 3 or 10) and immediately begin exploring the system or network (e.g., running 'whoami', 'netstat', 'ipconfig'). This question helps detect this malicious pattern by monitoring the first logon type and initial process executions of new accounts.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4624
      - Windows Event ID 4688
      - User Workstations
      - Member Servers
      - VPN Concentrators
      - Authentication Servers
    range: last 90 days
    queries:
      - technology: SIEM Correlation Pseudocode
        query: |
          ON EventID 4720, ADD username to watchlist.
          FOR username in watchlist:
            FIND first EventID 4624 for username.
            IF logon_type IN (3, 10):
              RETURN alert
            FIND first session's EventID 4688 events.
            IF process_name IN (whoami.exe, net.exe, ipconfig.exe, systeminfo.exe):
              RETURN alert
  - question: Does the set of processes executed during a new account's first session strongly resemble a known set of reconnaissance tools?
    context: This question quantifies the 'reconnaissance activity' mentioned previously. Instead of just looking for one or two commands, it measures the overlap (using Jaccard similarity) between all processes run in the initial session and a defined list of recon tools. A high similarity score provides a more statistically robust signal that the account's primary purpose is reconnaissance, which is highly indicative of malicious intent.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4624
      - Windows Event ID 4688
      - User Workstations
      - Member Servers
      - VPN Concentrators
      - Authentication Servers
    range: last 90 days
    queries:
      - technology: Analytics Pseudocode
        query: |
          DEFINE recon_process_set = {'whoami.exe', 'net.exe', 'ipconfig.exe', 'systeminfo.exe'}
          ON new account's first logon session:
            COLLECT executed_process_set.
            CALCULATE jaccard_similarity(executed_process_set, recon_process_set).
            IF similarity > 0.5:
              RETURN alert
  - question: Does the initial session activity of a newly created account appear as a statistical outlier when compared to the typical initial sessions of other new accounts?
    context: This question uses unsupervised machine learning to find 'unknown unknowns.' By clustering the initial session activity based on features like logon type, source location, and types of commands run, normal patterns will form dense clusters. Malicious activity, which is often unique or rare, will not fit into these clusters and will be flagged as an anomaly (an outlier). This is powerful for detecting novel attack techniques that don't match any predefined rules.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4624
      - Windows Event ID 4688
      - User Workstations
      - Member Servers
      - VPN Concentrators
      - Authentication Servers
    range: last 90 days
    queries:
      - technology: ML Pseudocode
        query: |
          COLLECT feature vectors for all new account initial sessions.
          APPLY DBSCAN clustering algorithm to the dataset.
          FOR any session classified as an outlier (noise point):
            RETURN alert
  - question: Shortly after a local account was created on a host, did that host initiate communication with a known-bad destination or a suspected DGA domain?
    context: This question seeks to link persistence creation directly with command-and-control (C2) activity. An attacker might create an account and then have the malware 'call home' for instructions. By triggering a short-term, focused monitoring window on a host immediately after an account creation, analysts can more effectively correlate the two events. A match against high-confidence threat intelligence (known C2 IPs, DGA domains) is a very strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4720
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points
      - Internet Gateway
      - Core Switches
      - Hosts with newly created accounts
    range: last 90 days
    queries:
      - technology: SIEM Correlation Pseudocode
        query: |
          ON EventID 4720 (get hostname, timestamp):
            MONITOR network logs for hostname for 1 hour.
            IF destination_ip IN threat_intel_list OR domain classified as DGA:
              RETURN alert
  - question: Did a host's network egress behavior change significantly (e.g., spike in outbound data) immediately following the creation of a new local account?
    context: This question looks for behavioral evidence of compromise in network traffic. After establishing persistence, an attacker may begin to exfiltrate data, download additional tools, or establish a persistent C2 channel, all of which can alter the host's normal network patterns. Using a change-point detection algorithm can automatically identify the moment this behavior shifts, and correlating that shift with a recent account creation provides powerful evidence of a breach.
    answer_sources:
      - Windows Event ID 4720
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points
      - Internet Gateway
      - Core Switches
      - Hosts with newly created accounts
    range: last 90 days
    queries:
      - technology: Analytics Pseudocode
        query: |
          FOR each host, maintain baseline of network metrics (outbound_bytes, unique_dest_ips).
          ON EventID 4720 on a host:
            APPLY CUSUM algorithm to host's network metrics.
            IF significant change point detected after event time:
              RETURN alert
  - question: Following a local account creation, did the host generate network connections that are anomalous according to a deep learning autoencoder model?
    context: This is an advanced anomaly detection technique. An autoencoder is trained to 'reconstruct' only normal network traffic effectively. When it is fed anomalous traffic (like C2 beaconing or data exfiltration), it does a poor job, resulting in a high 'reconstruction error.' By feeding a host's network traffic into such a model after a local account creation, analysts can detect subtle or novel malicious network patterns that might not trigger signature-based or simple volumetric alerts.
    answer_sources:
      - Windows Event ID 4720
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points
      - Internet Gateway
      - Core Switches
      - Hosts with newly created accounts
    range: last 90 days
    queries:
      - technology: ML Pseudocode
        query: |
          ON EventID 4720 on a host:
            FOR each subsequent network connection:
              CREATE feature_vector.
              INPUT vector into trained autoencoder.
              CALCULATE reconstruction_error.
              IF reconstruction_error > 99th_percentile_threshold:
                RETURN alert