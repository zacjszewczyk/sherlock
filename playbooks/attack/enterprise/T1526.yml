name: T1526: Cloud Service Discovery
id: 4e5d6f7a-8b9c-4d1e-a2b3-c4d5e6f7a8b9
description: This playbook helps investigate whether an adversary is enumerating cloud services, configurations, or resources within the environment. This activity can be detected by observing malicious user agents in API calls, anomalous execution of cloud command-line interface (CLI) tools, network scanning behavior directed at cloud service IPs, unauthorized or unusual access to cloud instance metadata services, and anomalous sequences or patterns of discovery-related API calls by a user or service principal.
type: technique
related:
- TA0007: Discovery
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a known malicious tool making requests to cloud provider API endpoints?
  context: This question aims to identify reconnaissance activity by matching the User-Agent string in HTTP requests against a threat intelligence feed of known malicious tools like 'Pacu' or 'Stormspotter'. A match is a high-fidelity indicator of an adversary using specialized tools for cloud discovery.
  answer_sources:
  - Zeek http.log
  - Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log WHERE host IN [cloud_api_domains] AND user_agent IN [malicious_tool_signatures]
- question: Are there requests to cloud API endpoints with unusually high entropy in the URI or User-Agent, suggesting randomization?
  context: Adversaries may randomize parts of their requests to evade simple signature-based detection. Calculating the Shannon entropy of fields like the URI and User-Agent can detect this randomness. A significant deviation from an established baseline for a source IP suggests an attempt to obfuscate or automate discovery activity.
  answer_sources:
  - Zeek http.log
  - Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each source_ip in Zeek http.log | CALCULATE shannon_entropy(uri), shannon_entropy(user_agent) | COMPARE to historical_baseline | ALERT if entropy > 99th_percentile
- question: Can machine learning classify requests to cloud API endpoints as malicious discovery based on their characteristics?
  context: This question proposes a more advanced detection method using a supervised machine learning model. By training on features like request method, URI length, and user agent, the model can learn to identify subtle patterns of malicious discovery that might be missed by simple rules, providing a probabilistic score for real-time analysis.
  answer_sources:
  - Zeek http.log
  - Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SCORE Zeek http.log records with trained_model(features) | CLASSIFY as 'benign' or 'malicious-discovery' | ALERT on 'malicious-discovery'
- question: Is a known cloud discovery tool or a high-risk discovery command being executed via a cloud CLI?
  context: This question focuses on detecting specific, high-confidence indicators of malicious activity on endpoints. It looks for the execution of known adversary tools (e.g., 'pacu.exe') or the use of powerful, enumeration-focused commands (e.g., 'Get-AzureAD') within standard cloud CLIs like 'aws.exe' or 'az.cmd'.
  answer_sources:
  - Windows Event ID 4688
  - Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows Event ID 4688 WHERE process_name IN [malicious_tools] OR (process_name IN [cloud_clis] AND command_line CONTAINS [high_risk_commands])
- question: Is a user executing an unusually high ratio of discovery-related cloud CLI commands compared to their normal behavior?
  context: This question aims to detect behavioral anomalies. Instead of looking for a single malicious command, it establishes a baseline of each user's typical cloud CLI usage. An alert is triggered if a user's activity shifts significantly towards discovery commands ('list', 'get', 'describe') within a short time frame, which could indicate credential compromise or insider threat activity.
  answer_sources:
  - Windows Event ID 4688
  - Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each user | CALCULATE ratio of discovery_commands to total_commands in 1-hour window from Event ID 4688 | COMPARE to user's historical_average | ALERT if ratio > 3_std_dev
- question: Has a user executed a sequence of cloud CLI commands that deviates from their normal, learned workflow?
  context: This question uses a more sophisticated approach to behavioral analysis by examining the order of commands. A sequence analysis model can learn a user's typical workflow. A series of commands that has a low probability of occurring, such as rapidly listing resources across many different services, would be flagged as anomalous, potentially indicating automated or exploratory adversary behavior.
  answer_sources:
  - Windows Event ID 4688
  - Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL command sequences from Event ID 4688 per user | SCORE new command sequences for probability | ALERT on low_probability_sequences
- question: Is a single source IP connecting to an unusually large number of distinct cloud service IP addresses in a short time?
  context: This question seeks to identify horizontal scanning activity. An adversary attempting to discover open services or vulnerable hosts may connect to many different IP addresses within a cloud provider's ranges. This rule sets a simple threshold to detect this behavior, indicative of a broad reconnaissance scan.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FROM Zeek conn.log | GROUP BY source_ip in 5-min window | COUNT unique destination_ips in cloud_ip_ranges | ALERT if count > 20
- question: Is a source host connecting to a number of unique destination hosts or ports that exceeds its own historical baseline?
  context: This is a more tailored version of the previous question. Instead of a static threshold, it establishes a behavioral baseline for each source host. An alert is triggered when a host's connection pattern (the number of unique destinations or ports it talks to) deviates significantly from its own past behavior, making it more effective at detecting anomalies in environments with diverse traffic patterns.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each source_ip in 10-min window | CALCULATE unique_destination_ips, unique_destination_ports | COMPARE to historical_baseline for that source_ip | ALERT if cardinality > 98th_percentile
- question: Can a source IP be identified as an outlier using clustering algorithms on its network connection features?
  context: This question applies unsupervised machine learning to detect scanning. By creating a feature vector for each source IP (e.g., total connections, unique IPs, unique ports), a clustering algorithm like DBSCAN can group 'normal' hosts together. Hosts that do not fit into any cluster are flagged as outliers or 'noise', which often corresponds to anomalous scanning or reconnaissance activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: EXTRACT features from Zeek conn.log per source_ip in 5-min window | APPLY DBSCAN clustering | FLAG source_ips classified as noise_points as anomalous_scanners
- question: Is a host that is not on the authorized allow-list attempting to access the cloud instance metadata service?
  context: The cloud metadata service (169.254.169.254) provides sensitive information and credentials to an instance. Access should be tightly controlled. This question aims to enforce that control by creating an allow-list of hosts that are expected to access this service and alerting on any connection from an unauthorized source, which is a strong indicator of lateral movement or a compromised instance.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4688
  - Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log WHERE destination_ip = '169.254.169.254' AND source_ip NOT IN [authorized_host_list]
- question: Is a legitimate host accessing the metadata service with an anomalous frequency or timing?
  context: Even authorized hosts can be compromised. This question looks for behavioral changes in how a host interacts with the metadata service. A sudden spike in the volume of requests or a change in the timing between requests can indicate that an adversary is using the compromised host to query for credentials or other sensitive data.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4688
  - Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each source_ip accessing metadata_service | CALCULATE request_volume_per_minute and inter_arrival_time | COMPARE to historical_baseline | ALERT if volume > 99th_percentile or time is outlier
- question: Does a time-series model detect an anomalous spike in metadata service access that is immediately followed by cloud CLI activity?
  context: This question combines time-series forecasting with event correlation for higher-fidelity alerting. A model predicts the expected request volume from a host to the metadata service. A large, unexpected spike in requests is flagged. This alert is then enriched by checking for subsequent cloud CLI process executions on the same host, strongly suggesting that credentials obtained from the metadata service were immediately used for further discovery.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4688
  - Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FORECAST metadata_request_volume per host using ARIMA | ALERT on high_residual_error | CORRELATE alert with subsequent Event ID 4688 for cloud_clis within 5 minutes
- question: Is a user or service principal making API calls that violate their defined role-based access policy?
  context: This question focuses on policy enforcement as a detection mechanism. By defining expected API call patterns for different roles (e.g., a 'Developer' should not be making 'Admin' calls), any deviation can be immediately flagged. This provides a clear, rule-based method for detecting privilege escalation or misuse of credentials.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each user_api_call | LOOKUP user_role | CHECK if api_call is allowed by role_policy | ALERT on violation
- question: Is a user interacting with cloud services or using discovery API calls in a way that is anomalous compared to their own 30-day history?
  context: This question aims to detect changes in an individual user's behavior. It establishes a personal baseline of which services a user typically interacts with and their normal ratio of discovery-to-operational calls. An alert is triggered if they suddenly start interacting with a new, unusual service or if their activity becomes heavily focused on enumeration, which could indicate their account has been compromised.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each user in 24-hour window | COMPARE api_calls to user's 30-day baseline | ALERT if new_service_interaction OR if discovery_call_ratio > 3_std_dev_from_baseline
- question: Is a user's API call activity significantly different from that of their peers?
  context: This question detects outliers by comparing an individual to their peer group. Users are automatically clustered based on their API activity. A user whose behavior vector is a statistical outlier from their group's norm (e.g., a developer suddenly acting like a security auditor) is flagged. This can detect compromised accounts or insider threats that might be missed by individual baselining alone.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER users based on api_call_activity_vectors | FOR each user | CALCULATE distance from their_cluster_centroid | ALERT on high_distance_score