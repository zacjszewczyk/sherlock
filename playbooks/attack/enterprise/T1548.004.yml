name: T1548.004: Elevated Execution with Prompt
id: 5a8e0f1c-6d9b-4e3a-8f2c-7b1d9a0e4f5b
description: This playbook helps analysts investigate potential privilege escalation on macOS hosts using the "Elevated Execution with Prompt" technique (T1548.004). It focuses on identifying suspicious use of the '/usr/libexec/security_authtrampoline' binary, which is triggered by the AuthorizationExecuteWithPrivileges API. The investigation covers analyzing the parent process of this binary for anomalies, correlating its execution with suspicious outbound network traffic (e.g., connections to C2 servers, data exfiltration), identifying potential lateral movement to Windows systems, and detecting subsequent defense evasion activities like disabling security tools or creating persistence mechanisms.
type: technique
related:
- TA0004: Privilege Escalation
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is '/usr/libexec/security_authtrampoline' being executed by a suspicious parent process?
  context: The 'security_authtrampoline' binary is the underlying mechanism for macOS GUI privilege escalation prompts. While legitimate software uses this, malware also abuses it. This question helps identify abuse by examining the parent process that initiated the prompt. A parent process that is unsigned, has a poor reputation, or is running from a temporary or user-writable directory is a strong indicator of malicious activity.
  answer_sources:
  - macOS Process Execution Logs
  - macOS Unified Logs
  - macOS Endpoints (laptops, desktops, servers)
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_events WHERE process_name == '/usr/libexec/security_authtrampoline' AND (parent_process_is_signed == false OR parent_process_reputation == 'low' OR parent_process_path IN ['/tmp/*', '/Users/Shared/*', '/Users/*/'])
- question: Is the parent process of a 'security_authtrampoline' execution statistically rare or new in the environment?
  context: Adversaries often use custom or uncommon tools to trigger privilege escalation. By analyzing the historical prevalence of the parent process, we can identify outliers that deviate from normal software behavior. A parent process that is extremely rare (e.g., seen on only a few machines) or has never been observed before is a high-confidence indicator of a potential threat.
  answer_sources:
  - macOS Process Execution Logs
  - macOS Unified Logs
  - macOS Endpoints (laptops, desktops, servers)
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_events WHERE process_name == '/usr/libexec/security_authtrampoline' | STATS count by parent_process_name | FILTER prevalence is low or parent_process_first_seen is recent
- question: Does a machine learning model classify a 'security_authtrampoline' execution event as malicious based on its parent process features?
  context: This question leverages machine learning to automate the detection of malicious privilege escalation attempts. By training a model on various features of the parent process (signing status, path complexity, network activity, age), we can create a sophisticated detection that goes beyond simple rules to identify subtle patterns associated with malicious use of the AuthorizationExecuteWithPrivileges API.
  answer_sources:
  - macOS Process Execution Logs
  - macOS Unified Logs
  - macOS Endpoints (laptops, desktops, servers)
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: INPUT process_events WHERE process_name == '/usr/libexec/security_authtrampoline' | EXTRACT features(parent_process) | PREDICT is_malicious using ML_model | WHERE is_malicious == true
- question: Did a macOS host connect to a known malicious IP or domain shortly after a privilege escalation event?
  context: A common post-escalation action is to establish a command and control (C2) channel. This question aims to detect this activity by correlating network logs with threat intelligence. A connection to an IP or domain on a blocklist, especially within minutes of a 'security_authtrampoline' execution, strongly suggests the escalated privileges are being used for malicious communication.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - macOS Process Execution Logs
  - Network Security Monitoring Sensors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: JOIN process_events (process_name == 'security_authtrampoline') AND network_events (source_ip == process_host) ON host, time_window=15min | LOOKUP network_destination in threat_intel_feed | WHERE threat_match == true
- question: Is a macOS host querying for domains with high entropy, suggesting the use of a Domain Generation Algorithm (DGA)?
  context: Adversaries use DGAs to generate a large number of random-looking domain names for C2, making blocklisting difficult. These domains have high character randomness, or entropy. This question helps detect potential DGA activity by flagging DNS queries for domains with unusually high entropy scores, which is a common indicator of malware C2.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - macOS Process Execution Logs
  - Network Security Monitoring Sensors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH dns_logs from macOS_hosts | CALCULATE shannon_entropy(query_domain) | WHERE entropy_score > 95th_percentile_threshold
- question: Has a macOS host exhibited an anomalous spike in outbound data volume to a new or rare destination?
  context: After gaining privileges, an adversary may exfiltrate data. This often results in an unusually large volume of outbound traffic that deviates from the host's normal behavior. This question uses a time-series model to learn the normal baseline for each host and alerts when a significant, unexpected increase in data transfer occurs, potentially indicating data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - macOS Process Execution Logs
  - Network Security Monitoring Sensors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: MODEL outbound_bytes_per_host using time_series_model | DETECT anomalies in network_logs from macOS_hosts | WHERE actual_bytes > (predicted_bytes + 3*std_dev) AND destination_ip_is_rare
- question: Is a macOS host exhibiting network traffic with indicators (User-Agent, URI, JA3/S) matching known macOS C2 frameworks?
  context: Malware and post-exploitation toolkits often have unique network signatures, such as specific User-Agent strings in HTTP traffic or TLS client fingerprints (JA3/JA3S). This question focuses on finding these hardcoded indicators to directly identify the presence of known C2 frameworks like Shlayer, Sliver, or Mythic on the network.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek x509.log
  - Network Taps providing traffic to Zeek sensors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http_logs OR ssl_logs from macOS_hosts | WHERE user_agent IN (known_c2_ua_list) OR uri_path matches (known_c2_uri_patterns) OR ja3_hash IN (known_c2_ja3_list)
- question: Is a macOS host using a rare or previously unseen TLS client (JA3/JA3S hash) for network communication?
  context: A JA3/JA3S hash is a fingerprint of how a client or server communicates over TLS. Legitimate software (like browsers) has common, widely distributed fingerprints. Custom malware or hacking tools often have unique or rare fingerprints. This question helps find these non-standard clients, which are strong indicators of malicious C2 activity.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek x509.log
  - Network Taps providing traffic to Zeek sensors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH ssl_logs from macOS_hosts | STATS count(ja3_hash) by host | CALCULATE prevalence(ja3_hash) across_all_hosts | WHERE prevalence < 1% OR first_seen_time is recent
- question: Does a machine learning model classify a TLS session from a macOS host as potential C2 traffic based on its characteristics?
  context: This question uses machine learning to detect malicious TLS traffic that might not have a known signature. By analyzing a combination of features like certificate details, SNI information, and cipher suites, the model can learn the subtle differences between normal encrypted traffic and C2 channels, providing a more robust detection capability.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Zeek x509.log
  - Network Taps providing traffic to Zeek sensors
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: INPUT ssl_logs from macOS_hosts | EXTRACT features(cert_validity, issuer, subject, sni_length, ja3s, cipher) | PREDICT is_malicious_c2 using ML_model | WHERE is_malicious_c2 == true
- question: Has a user or macOS device remotely logged into a Windows server for the first time?
  context: After escalating privileges on a Mac, an adversary may move laterally to a Windows system. This question aims to detect this lateral movement by looking for new or unusual remote logons. A first-time connection from a specific macOS device or by a specific user from a Mac to a high-value Windows asset is highly suspicious.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH windows_event_4624 WHERE logon_type IN (3, 10) AND source_os == 'macOS' | CHECK if (source_ip, destination_server) OR (user, destination_server) pair is new | ALERT if new
- question: Has a user who typically logs in from Windows systems suddenly logged in from a macOS host?
  context: This question builds a behavioral baseline for each user's remote access patterns. A sudden deviation from this baseline, such as an administrator who has only ever logged in from Windows workstations suddenly authenticating from a Mac, is a statistically significant anomaly that could indicate account compromise and lateral movement from a compromised macOS device.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH windows_event_4624 WHERE logon_type IN (3, 10) | PROFILE user_logon_patterns by source_os | ALERT if current_source_os == 'macOS' AND historical_source_os != 'macOS'
- question: Does a remote logon from a macOS host to a Windows server represent a structural anomaly in the user's typical access graph?
  context: This question models user access behavior as a graph, where users and servers are nodes. Users are grouped into communities based on their access patterns. A logon from a macOS host to a Windows server that connects previously disconnected parts of the graph or moves a user into a different community of access is a structural anomaly, indicating a significant and suspicious change in behavior.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: BUILD access_graph(users, servers, source_os) | CLUSTER users using graph_algorithm | DETECT logon_event from macOS_host | ALERT if event causes user to change_cluster OR is_inter_cluster_anomaly
- question: Has a macOS host transferred a large compressed archive file to an external destination?
  context: Adversaries often compress and archive stolen data before exfiltrating it to reduce its size and evade simple content inspection. This question looks for the transfer of large archive files (zip, rar, 7z), which is a common pattern for data staging and exfiltration. A static size threshold helps filter out routine transfers of small archives.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Network Egress Points
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH zeek_files_log WHERE source_os == 'macOS' AND is_external_destination == true AND mime_type IN ('zip', 'rar', '7z') AND file_size > 50MB
- question: Has a macOS host's daily outbound data volume significantly exceeded its historical baseline?
  context: Data exfiltration often involves transferring much more data than a host typically sends. This question establishes a normal baseline of outbound traffic for each individual host and alerts on significant deviations. Using a dynamic, per-host threshold is more effective than a single static rule, as it adapts to the unique traffic patterns of different devices.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Network Egress Points
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE daily_outbound_bytes_baseline per macOS_host over 30_days | SEARCH daily_outbound_bytes for today | ALERT if today_bytes > 99th_percentile(baseline_bytes)
- question: Is there an anomalous spike in a macOS host's outbound traffic that cannot be explained by its normal daily or weekly patterns?
  context: This question uses a more advanced time-series model to detect data exfiltration. Unlike a simple daily baseline, this model can account for seasonality (e.g., higher traffic during business hours) and long-term trends. It alerts on spikes that are anomalous even when considering these normal fluctuations, leading to higher-fidelity alerts for data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Zeek files.log
  - Network Egress Points
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: MODEL hourly_outbound_bytes per macOS_host using time_series_model | DETECT anomalies in hourly_traffic | ALERT on spikes unexplained_by_seasonality_or_trend
- question: Is a macOS host attempting to resolve domains associated with anonymization, dynamic DNS, or hacking services?
  context: After gaining access, adversaries often use services like VPNs, proxies, or dynamic DNS to hide their C2 infrastructure or make it more resilient. This question directly checks DNS queries against categorized lists of such services. A match is a strong indicator that the host is being used for malicious purposes.
  answer_sources:
  - Zeek dns.log
  - Corporate DNS Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH dns_logs from macOS_hosts | LOOKUP query_domain in threat_intel_feed | WHERE category IN ('Anonymization', 'Dynamic DNS', 'Hacking')
- question: Is a macOS host querying for a domain that is rare or new to the entire organization?
  context: Adversary C2 domains are often unique to a specific campaign and will not be visited by other hosts in the environment. This question identifies these outlier domains by calculating their prevalence. A query for a domain that has been resolved by very few hosts, or never before, is highly suspicious and warrants investigation.
  answer_sources:
  - Zeek dns.log
  - Corporate DNS Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE prevalence of all FQDNs in dns_logs | SEARCH dns_logs from macOS_hosts | ALERT if prevalence(query_domain) < 5_hosts OR is_first_time_seen(query_domain)
- question: Does a machine learning model classify a domain queried by a macOS host as being algorithmically generated (DGA)?
  context: This is a more advanced method for detecting DGA-based C2 than simple entropy checks. A dedicated ML model, often a neural network, is trained to recognize the complex patterns of algorithmically generated domains. This provides a high-fidelity signal that a host is infected with malware that uses DGA for C2 communication.
  answer_sources:
  - Zeek dns.log
  - Corporate DNS Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: INPUT dns_logs from macOS_hosts | PREDICT is_dga(query_domain) using DGA_detection_model | WHERE is_dga == true
- question: Was a remote logon from a macOS host to a Windows server immediately followed by commands to disable security defenses?
  context: A common adversary action after gaining remote access is to disable security tools, clear logs, or alter firewall rules to evade detection and maintain access. This question correlates a remote logon from a macOS device with subsequent defense evasion commands on the Windows target, providing a very strong signal of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1102
  - Windows Event ID 4719
  - Windows Event ID 4624
  - Critical Windows Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE windows_event_4624 (source_os == 'macOS') AND windows_event_4688 (command contains 'wevtutil cl', 'netsh', etc.) ON host, user within 5_minutes
- question: Has a security policy change or log clearing event on a Windows server been initiated by a session originating from a macOS host?
  context: Critical security actions like changing audit policies or clearing the security event log are typically performed by administrators from designated workstations, which are rarely macOS devices. This question flags these events when they are traced back to a logon session from a Mac, as this is an extremely rare and highly anomalous pattern in most enterprise environments.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1102
  - Windows Event ID 4719
  - Windows Event ID 4624
  - Critical Windows Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH windows_event_4719 OR windows_event_1102 | TRACE logon_id to windows_event_4624 | ALERT if source_os_of_logon == 'macOS'
- question: Does a machine learning model detect an anomalous sequence of events on a Windows server, starting with a logon from a macOS host?
  context: This question uses sequence analysis to model the normal flow of administrative activities on a server. The model learns common event chains (e.g., logon -> run script -> logoff). A sequence that starts with a logon from a Mac and is followed by defense evasion commands would be identified as a highly improbable and malicious sequence, even if the individual events themselves are not unique.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 1102
  - Windows Event ID 4719
  - Windows Event ID 4624
  - Critical Windows Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: MODEL event_sequences on windows_servers using HMM | DETECT anomalous_sequence starting with logon_from_macOS followed by defense_evasion_commands
- question: Is a macOS host initiating a TLS session with multiple suspicious characteristics, such as a non-standard port and a self-signed certificate?
  context: Adversaries often use custom C2 channels that don't conform to web standards. This question looks for a combination of red flags in a single TLS session - using a port other than 443 for HTTPS, using a self-signed certificate, or using a TLS fingerprint (JA3) known to be associated with malware. A combination of these is a strong indicator of a malicious C2 channel.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek x509.log
  - Network Egress Points
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH ssl_logs from macOS_hosts | WHERE (destination_port != 443 AND is_self_signed_cert == true) OR ja3_hash IN (known_malicious_ja3)
- question: Does a TLS session from a macOS host have a high cumulative risk score based on multiple anomalous features?
  context: Rather than alerting on single indicators, this question uses a risk-scoring approach to identify suspicious TLS traffic. By assigning points to various weak signals (rare JA3, non-standard port, self-signed cert, short validity), it can flag connections that are suspicious due to a combination of factors, reducing false positives from any single indicator.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek x509.log
  - Network Egress Points
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH ssl_logs from macOS_hosts | SCORE risk = (is_rare_ja3*2) + (is_non_443_port*1) + (is_self_signed*2) + (is_short_validity*1) | ALERT if risk > 3
- question: Does a machine learning model classify a TLS session from a macOS host as an outlier compared to normal enterprise traffic?
  context: This question employs an unsupervised learning model (one-class SVM) to define a profile of "normal" TLS traffic in the environment. The model learns this profile from existing data without needing labeled malicious examples. Any new TLS session from a macOS host that doesn't fit this profile is flagged as an anomaly, making it effective at detecting novel threats.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek x509.log
  - Network Egress Points
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: MODEL normal_tls_traffic using OneClassSVM | PREDICT is_anomaly on new ssl_logs from macOS_hosts | ALERT if is_anomaly == true
- question: Has a new service or scheduled task been created on a Windows server by a user who recently logged in remotely from a macOS device?
  context: Adversaries create services or scheduled tasks to establish persistence on a compromised system. This question detects this activity when it is performed as part of a lateral movement chain from macOS to Windows. By linking the persistence event (service/task creation) to the initial remote logon from the Mac, we can identify the entire attack path.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4698
  - Windows Event ID 4624
  - Windows Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE (windows_event_7045 OR windows_event_4698) AND windows_event_4624 ON logon_id | WHERE source_os_of_logon == 'macOS'
- question: Has persistence been created on a Windows server from a macOS host, which is a statistically rare event?
  context: In most corporate networks, administrative tasks on Windows servers that involve creating persistence are performed from other Windows machines. The creation of a service or scheduled task originating from a macOS host is an extremely unusual event. This question leverages this fact to create a high-confidence alert based on the rarity of the source operating system for such an action.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4698
  - Windows Event ID 4624
  - Windows Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH windows_event_7045 OR windows_event_4698 | TRACE logon_id to windows_event_4624 | ALERT if source_os_of_logon == 'macOS' because frequency is near_zero
- question: Does the creation of persistence on a Windows server from a macOS host represent a structurally anomalous link in the environment's activity graph?
  context: This question models the relationships and actions between hosts as a graph. Normal activity forms predictable patterns and structures. An action like "create service" is expected between two Windows nodes but is highly unexpected as a link between a macOS node and a Windows node. A graph model can automatically detect this as a structurally anomalous and suspicious pattern.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4698
  - Windows Event ID 4624
  - Windows Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: BUILD activity_graph(nodes=[hosts], edges=[actions]) | DETECT structural_anomalies | ALERT if edge_type == 'service_creation' AND source_node_os == 'macOS' AND dest_node_os == 'Windows'