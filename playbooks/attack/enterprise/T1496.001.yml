name: "T1496.001: Compute Hijacking"
id: "a3b8d4c2-6e1f-4a9b-9c8d-7e6a5f4b3c2d"
description: "This playbook helps investigate whether an adversary is impacting system or service availability through compute hijacking (cryptomining). It focuses on detecting evidence of cryptomining activity by identifying network connections to known mining pools, processes with hashes matching known miners, command-line arguments and script content with mining-specific patterns, sustained and anomalous CPU utilization, defense evasion techniques followed by suspicious activity, and system instability correlated with high CPU usage."
type: "technique"
related:
  - "TA0040: Impact"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a process making network connections to known cryptomining pools or does its hash match a known cryptominer?"
    context: "This question aims to detect the most straightforward signs of cryptomining by matching process activity and network connections against known indicators of compromise (IOCs). A match provides high-confidence evidence that a host is being used for unauthorized mining, directly impacting its resources."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Internal DNS servers"
      - "network egress points (e.g., firewalls, proxies)"
      - "all server and workstation endpoints"
    range: "last 90 days"
    queries:
      - "pseudocode": "SEARCH all DNS queries and outbound connection destination IPs. COMPARE against threat intelligence feed of cryptomining pools. SEARCH all new process file hashes. COMPARE against threat intelligence feed of cryptominer hashes. ALERT on match."
  - question: "Are there any DNS queries showing unusually high subdomain entropy, potentially indicating a connection to a cryptomining pool using a Domain Generation Algorithm (DGA)?"
    context: "This question looks for more subtle indicators. Cryptomining operations sometimes use DGAs to randomize connection endpoints, making simple blocklisting ineffective. High subdomain entropy, especially when correlated with long-running connections, can uncover these advanced evasion techniques."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Internal DNS servers"
      - "network egress points (e.g., firewalls, proxies)"
      - "all server and workstation endpoints"
    range: "last 90 days"
    queries:
      - "pseudocode": "FOR each domain in DNS logs, CALCULATE subdomain entropy. IDENTIFY domains in the 95th percentile for entropy. CORRELATE high-entropy domains with long-duration network connections (> 10 minutes). ALERT on correlation."
  - question: "Can machine learning classify network connections as being related to cryptomining based on their behavioral characteristics?"
    context: "This question uses a machine learning approach to identify cryptomining activity that may not match known IOCs or simple statistical anomalies. By analyzing a combination of network features, a model can learn the 'shape' of mining traffic and flag suspicious connections that would otherwise be missed."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Internal DNS servers"
      - "network egress points (e.g., firewalls, proxies)"
      - "all server and workstation endpoints"
    range: "last 90 days"
    queries:
      - "pseudocode": "EXTRACT features from network and DNS logs (e.g., duration, bytes, protocol, query length, ASN). INPUT features into a trained classification model. ALERT on connections classified with high probability of being cryptomining."
  - question: "Is a process being executed with command-line arguments or script content that contains patterns specific to cryptomining software?"
    context: "This question targets the execution phase of cryptomining. Miners are often configured via command-line arguments that specify the mining pool, wallet address, and algorithm. Searching for these specific patterns directly in process creation and script execution logs is a highly effective detection method."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "PowerShell Script Block Logging (Event ID 4104)"
      - "All host endpoints and servers, particularly web servers and application servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "SEARCH command-line arguments and script block content for regex patterns matching miner flags (e.g., --algo, -o, -u), wallet addresses, and Stratum protocol URLs. ALERT on match."
  - question: "Has a common system process been executed with command-line arguments that are statistically anomalous in length or entropy compared to its baseline?"
    context: "This question aims to detect adversaries hiding their activity by running miners under the guise of legitimate system processes (e.g., svchost.exe, powershell.exe). While the process name is common, the command-line arguments used for mining are often unusually long and complex. This statistical deviation from the norm can reveal the masquerading attempt."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "PowerShell Script Block Logging (Event ID 4104)"
      - "All host endpoints and servers, particularly web servers and application servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "FOR each unique process name, establish baseline for command-line length and entropy over 30 days. SEARCH for new executions where command-line arguments deviate from the baseline by > 3 standard deviations. ALERT on outliers."
  - question: "Can a Natural Language Processing (NLP) model classify command-line arguments as malicious or related to cryptomining?"
    context: "This question leverages advanced machine learning to understand the semantic content of command-line arguments, rather than just their structure or statistical properties. An NLP model can identify novel, obfuscated, or complex mining commands that might evade simpler detection methods like regular expressions."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "PowerShell Script Block Logging (Event ID 4104)"
      - "All host endpoints and servers, particularly web servers and application servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "INPUT new process command-line arguments into a pre-trained NLP classification model. ALERT on arguments classified as malicious or suspicious."
  - question: "Is a host's CPU utilization exceeding a hard threshold (e.g., 90%) for a sustained period outside of a known maintenance window?"
    context: "This question looks for the most direct symptom of compute hijacking: sustained, abnormally high CPU usage. By setting a simple, high threshold and filtering out expected high-load periods, analysts can quickly identify systems under unusual strain that warrant investigation for unauthorized processes."
    answer_sources:
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "Windows Performance Monitor Logs (Process\\% Processor Time)"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "All host endpoints and servers, Cloud compute instances, Virtualization hypervisors"
    range: "last 90 days"
    queries:
      - "pseudocode": "MONITOR host CPU utilization. ALERT if 'Processor\\% Processor Time' > 90% for > 60 minutes outside of maintenance windows. ENRICH alert with the top CPU-consuming process."
  - question: "Is a host experiencing a statistically significant and sustained deviation in CPU utilization compared to its own historical baseline?"
    context: "This question refines the CPU analysis by comparing a host's current usage against its own normal behavior. This is more effective than a static threshold, as it can detect anomalies on systems that normally have low or high CPU usage. It helps identify when a system is behaving unusually for itself, which is a strong indicator of a problem."
    answer_sources:
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "Windows Performance Monitor Logs (Process\\% Processor Time)"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "All host endpoints and servers, Cloud compute instances, Virtualization hypervisors"
    range: "last 90 days"
    queries:
      - "pseudocode": "ESTABLISH a baseline of CPU usage for each host (30-day window, segmented by time). CALCULATE Z-score for current CPU usage against baseline. ALERT if Z-score > 3 for > 20 minutes. ENRICH alert with top 5 consuming processes."
  - question: "Does a time series forecasting model predict a significant anomaly between expected and actual CPU utilization for a host?"
    context: "This question applies predictive analytics to detect CPU anomalies. A time series model learns the complex, time-dependent patterns of a host's normal CPU load. When the actual usage significantly diverges from the model's prediction, it signals a potential issue like a cryptominer that has started running, allowing for early and sensitive detection."
    answer_sources:
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "Windows Performance Monitor Logs (Process\\% Processor Time)"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "All host endpoints and servers, Cloud compute instances, Virtualization hypervisors"
    range: "last 90 days"
    queries:
      - "pseudocode": "TRAIN a time series model (e.g., ARIMA, LSTM) on historical CPU data for each host. PREDICT expected CPU usage for the next interval. CALCULATE anomaly score based on delta between predicted and actual usage. ALERT on sustained high anomaly score."
  - question: "Has a sequence of events occurred indicating defense evasion followed by the execution of a suspicious, long-running process?"
    context: "This question looks for a specific chain of attacker behaviors. Adversaries often first disable security tools before launching their malware. Correlating a security service being stopped with the creation of a new, unsigned process and a long-running network connection creates a high-fidelity alert for a likely compromise."
    answer_sources:
      - "Windows System Event Log (Event ID 7036)"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "Zeek conn.log"
      - "All host endpoints and servers, Domain Controllers (for security policy changes), Network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode": "CREATE stateful rule. TRIGGER if on same host within 15 mins: [Security service stops (Event ID 7036)] FOLLOWED BY [Suspicious process created (Sysmon Event ID 1)] FOLLOWED BY [Long-duration external connection (Zeek conn.log)]. ALERT on sequence match."
  - question: "Does a host accumulate a high-risk score based on a combination of suspicious but individually low-fidelity events?"
    context: "This question recognizes that a single event may not be enough to trigger an alert, but a combination of them is highly suspicious. By assigning risk points to events like a service stopping, a process running from a temp folder, and high CPU, a cumulative score can bubble up hosts that are exhibiting multiple signs of compromise, even if no single event is definitive proof."
    answer_sources:
      - "Windows System Event Log (Event ID 7036)"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "Zeek conn.log"
      - "All host endpoints and servers, Domain Controllers (for security policy changes), Network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode": "ASSIGN risk points to events (e.g., service stop, process from %TEMP%, high CPU, new IP connection). SUM risk score for each host over a 30-minute window. ALERT if cumulative score exceeds a threshold."
  - question: "Can a graph-based analytics model identify an anomalous sequence of host activities that matches the structure of a cryptomining attack?"
    context: "This question models host activity as a graph to understand the relationships between events. A graph neural network can learn what normal sequences of process creation and network activity look like. It can then identify when a new, anomalous subgraph appears—such as the specific defense evasion -> execution -> C2 communication chain—even if the individual components are novel."
    answer_sources:
      - "Windows System Event Log (Event ID 7036)"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "Zeek conn.log"
      - "All host endpoints and servers, Domain Controllers (for security policy changes), Network egress points"
    range: "last 90 days"
    queries:
      - "pseudocode": "MODEL host activity as a graph (nodes=entities, edges=events). TRAIN a GNN to learn normal graph structures. APPLY model to new data to identify topologically anomalous subgraphs matching attack patterns. ALERT on detection."
  - question: "Is a host experiencing a high rate of application errors that correlates directly with a period of extremely high CPU utilization?"
    context: "This question connects system instability to resource exhaustion. Cryptominers can starve legitimate applications of CPU resources, causing them to crash or become unstable. Correlating a spike in application error events with a simultaneous period of >90% CPU usage provides strong evidence that an unauthorized process is causing system degradation."
    answer_sources:
      - "Windows Application Event Log (Event ID 1000, 1002)"
      - "Windows System Event Log (Event ID 7031, 7034)"
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "All host endpoints and servers, especially those with critical applications"
    range: "last 90 days"
    queries:
      - "pseudocode": "CREATE correlation rule. TRIGGER if host has > 5 Application Error events (Event ID 1000) in 1 hour AND average CPU > 90% for that same hour. ENRICH alert with top CPU-consuming processes."
  - question: "Is there a statistically significant increase in application or service error events on a host that is also experiencing statistically anomalous CPU utilization?"
    context: "This question uses a more nuanced statistical approach to link system instability with high CPU. It identifies outlier periods for both error rates and CPU usage relative to the host's own baseline. A match between these two independent anomalies is a powerful indicator that one is causing the other, pointing towards resource exhaustion from a hidden process."
    answer_sources:
      - "Windows Application Event Log (Event ID 1000, 1002)"
      - "Windows System Event Log (Event ID 7031, 7034)"
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "All host endpoints and servers, especially those with critical applications"
    range: "last 90 days"
    queries:
      - "pseudocode": "MODEL hourly error rate with Poisson distribution. IDENTIFY hours with outlier event counts. CHECK if CPU usage also exceeded its 95th percentile baseline in the same hour. ALERT on correlation."
  - question: "Does a Bayesian network model infer a high probability of cryptomining activity being the root cause of observed application crashes?"
    context: "This question uses a probabilistic model to determine the most likely cause of system instability. By training a Bayesian network on the relationships between events like 'HighCPU' and 'AppCrash', an analyst can input evidence (e.g., a spike in crashes) and have the model calculate the probability that an unobserved 'HighCPU' state (caused by a miner) is the root cause."
    answer_sources:
      - "Windows Application Event Log (Event ID 1000, 1002)"
      - "Windows System Event Log (Event ID 7031, 7034)"
      - "Windows Performance Monitor Logs (Processor\\% Processor Time)"
      - "All host endpoints and servers, especially those with critical applications"
    range: "last 90 days"
    queries:
      - "pseudocode": "TRAIN Bayesian network on dependencies between system states (e.g., P(AppCrash | HighCPU)). INPUT observed evidence (e.g., app crashes) into the network. CALCULATE posterior probability of 'HighCPU' being the cause. ALERT if probability > 0.85."