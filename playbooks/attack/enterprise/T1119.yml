name: T1119: Automated Collection
id: 8c3d7f9e-6b0a-4e2d-8f1a-9c7b6a5d4e3f
description: This playbook helps investigate whether an adversary is using automated techniques to collect data from the network or systems. It focuses on identifying the execution of known collection tools or custom scripts, command-line chaining for file discovery and archival, high-volume file access patterns, access to sensitive files by unusual processes, and large outbound data transfers that correlate with on-host collection activity.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any processes been executed that match the name or hash of known automated collection tools from threat intelligence feeds?
    context: This question aims to detect the use of well-known automated collection tools (e.g., rclone) or identified malicious scripts. By comparing process creation events against a continuously updated list of Indicators of Compromise (IOCs), analysts can quickly identify known threats. A match is a high-fidelity indicator that an adversary is attempting to gather data.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Zeek conn.log
      - All endpoints and servers, particularly file servers, domain controllers, developer workstations, and CI/CD pipeline runners.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events
          JOIN threat_intelligence_feed ON process_hash OR process_name
          RETURN count BY hostname, process_name, hash
  - question: Have any rare, unsigned processes been executed across the enterprise?
    context: Adversaries often use custom or renamed tools to evade detection based on known signatures. This question helps uncover such tools by focusing on statistical rarity. A process that is both unsigned and has a name that is very uncommon across the organization is highly suspicious and warrants investigation, as it may be a custom collection script or tool.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Zeek conn.log
      - All endpoints and servers, particularly file servers, domain controllers, developer workstations, and CI/CD pipeline runners.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events WHERE is_signed = false
          CALCULATE prevalence of process_name over 30 days
          FILTER process_name_prevalence < 1st_percentile
          RETURN hostname, process_name, user
  - question: Have any processes been scored by our machine learning model as likely malicious collection tools?
    context: This question leverages a machine learning model to provide a more nuanced detection method than simple signature or rarity checks. The model analyzes multiple features of a process creation event (e.g., parent process, command-line entropy, user context) to assign a risk score. This helps identify sophisticated or novel collection tools that might otherwise be missed.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Zeek conn.log
      - All endpoints and servers, particularly file servers, domain controllers, developer workstations, and CI/CD pipeline runners.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events
          ENRICH with ml_model_score
          FILTER ml_model_score > threshold
          RETURN hostname, process_name, command_line, score
  - question: Have any command-line or PowerShell scripts been executed that chain together file discovery, filtering, and archival commands?
    context: Adversaries frequently use a series of built-in commands in a single line or script to find, stage, and compress data for exfiltration. This question uses regular expressions to hunt for these specific patterns (e.g., 'gci -r | Compress-Archive') in command-line and script block logs. Detecting such chains is a strong indicator of automated collection activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - All endpoints and servers, especially those with enhanced PowerShell script block logging enabled.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH command_line_logs OR powershell_script_blocks
          FILTER content MATCHES REGEX /(dir|gci|Get-ChildItem).*(findstr|Where-Object|Select-String).*(tar|zip|Compress-Archive)/
          RETURN hostname, user, command
  - question: Have any command lines or script blocks exhibited unusually high entropy, suggesting obfuscation?
    context: To evade simple keyword-based detection, adversaries may obfuscate or pack their collection scripts. This results in a command line or script block with high character randomness, or entropy. This question seeks to identify such activity by calculating the Shannon entropy and flagging scripts that deviate significantly from the established baseline for normal administrative tasks.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - All endpoints and servers, especially those with enhanced PowerShell script block logging enabled.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH command_line_logs OR powershell_script_blocks
          CALCULATE entropy of content
          ESTABLISH baseline_entropy
          FILTER content_entropy > 95th_percentile_of_baseline
          RETURN hostname, user, content, entropy_score
  - question: Has our NLP model classified any script blocks as 'suspicious reconnaissance' or 'malicious collection'?
    context: This question employs a sophisticated Natural Language Processing (NLP) model to understand the semantic context and intent of a script, rather than just its syntax. By analyzing command sequences and co-occurrence, the model can differentiate between benign administrative scripting and malicious collection activity, providing a powerful tool for detecting novel or complex attack patterns.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - All endpoints and servers, especially those with enhanced PowerShell script block logging enabled.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH powershell_script_blocks
          ENRICH with nlp_model_classification
          FILTER classification IN ['suspicious reconnaissance', 'malicious collection']
          RETURN hostname, user, script_content, classification
  - question: Has any process rapidly read a large number of files from many directories and then launched a known archiving tool?
    context: This question looks for a classic 'smash and grab' data collection pattern. An adversary's script will quickly read many files and then immediately compress them for staging. By correlating high-volume file read events (from SACL auditing) with the subsequent launch of an archiver (e.g., 7z.exe, tar.exe), we can detect this behavior with high confidence on critical servers.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Critical file servers, SharePoint sites, and repositories of sensitive intellectual property or Personally Identifiable Information (PII).
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_read_events (EventID 4663)
          GROUP BY ProcessID, 5_minute_window
          HAVING count(distinct file_path) > 500 AND count(distinct directory) > 10
          CORRELATE with process_creation_events (EventID 4688) for known archivers within 1 minute
          RETURN hostname, ProcessID, user, archiver_process
  - question: Has any process on a high-value server accessed unique file paths at a rate that is statistically anomalous compared to its own history?
    context: Instead of using fixed thresholds, this question uses a process's own historical behavior as a baseline. This is effective for detecting when a legitimate process (like 'powershell.exe') is used for an illegitimate purpose. A sudden, statistically significant spike in the rate of unique file access for a process that normally touches few files is a strong indicator of compromise and automated collection.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Critical file servers, SharePoint sites, and repositories of sensitive intellectual property or Personally Identifiable Information (PII).
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_access_events on high_value_servers
          CALCULATE baseline rate of unique_files_accessed per minute for each process_name/user over 30 days
          DETECT current rate > (baseline_average + 3 * baseline_stddev)
          RETURN hostname, process_name, user, current_rate, baseline_average
  - question: Has a time-series anomaly detection model detected a sudden spike in file access volume on any high-value host?
    context: This question applies advanced time-series analysis to model the normal 'rhythm' of file access activity on a host. An LSTM autoencoder or similar model can learn complex temporal patterns and flag deviations that simple thresholding would miss. A sudden, sharp spike in file access that the model flags as anomalous points to a potential automated collection event.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Critical file servers, SharePoint sites, and repositories of sensitive intellectual property or Personally Identifiable Information (PII).
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          STREAM file_access_counts_per_minute to LSTM_autoencoder_model
          FILTER anomaly_score > threshold
          RETURN hostname, timestamp, anomaly_score
  - question: Has any process accessed a honeypot file or directory?
    context: This question relies on a deception-based defense. Honeypot files and directories are strategically placed decoys with enticing names that should never be accessed by any legitimate user or process. Any access event on these honeypots is, by definition, unauthorized and highly suspicious, providing a very high-fidelity alert for reconnaissance or collection activity.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - User workstations (specifically C:\Users\*\Documents), network shares containing HR or financial data, and code repositories.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_access_events (EventID 4663)
          WHERE file_path IN (list_of_honeypot_files)
          RETURN hostname, process_name, user, accessed_honeypot_file
  - question: Has any non-interactive process accumulated a high 'sensitive file access score'?
    context: This question seeks to identify automated collection by non-interactive processes (e.g., services, scheduled tasks) that are accessing an unusual number of sensitive files. By assigning weights to file locations and types, we can calculate a risk score for a process's activity. A high score from a background process is a strong indicator that it has been compromised and is being used to gather sensitive data.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - User workstations (specifically C:\Users\*\Documents), network shares containing HR or financial data, and code repositories.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH file_access_events WHERE process_is_non_interactive
          CALCULATE sensitive_file_score based on file_path and file_extension
          GROUP by ProcessID, 5_minute_window
          FILTER total_score > 98th_percentile_of_all_processes
          RETURN hostname, process_name, total_score
  - question: Has graph analysis detected any anomalous access patterns, such as a process bridging two unrelated activity clusters?
    context: This question uses graph theory to model relationships between users, processes, and files. Normal activity forms distinct clusters (e.g., HR users access HR files). An automated collection script often violates these boundaries, for example, a web server process suddenly accessing files in the HR data cluster. Detecting such 'bridge' events in the graph is a powerful way to spot anomalous access.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - User workstations (specifically C:\Users\*\Documents), network shares containing HR or financial data, and code repositories.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          BUILD graph from historical user-process-file access data
          APPLY community detection algorithm
          MONITOR new access events (edges)
          FLAG edges that connect two previously disconnected communities
          RETURN anomalous_access_details (user, process, file)
  - question: Has a host that triggered an automated collection alert also initiated a large outbound data transfer to a new destination?
    context: This question directly links on-host collection activity with potential network exfiltration. By correlating a host-based alert (e.g., from one of the previous questions) with a subsequent large data transfer (>100MB) from the same host to an external IP not seen before, analysts can build a stronger case for a full collection and exfiltration event.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network egress points (firewalls, proxies), DNS servers, and all endpoints/servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH automated_collection_alerts
          CORRELATE with network_connection_logs from same host within 1 hour
          WHERE destination_ip is new AND outbound_bytes > 100MB
          RETURN hostname, collection_alert_details, network_connection_details
  - question: Has any host exhibited a statistically significant spike in outbound data transfer compared to its own baseline?
    context: This question focuses on detecting anomalous network behavior at the host level. Rather than using a single, static threshold for all hosts, it compares a host's current outbound traffic to its own historical patterns. A sudden spike that exceeds its 99th percentile is a strong indicator of exfiltration, especially when enriched with context like the destination domain's age or reputation.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network egress points (firewalls, proxies), DNS servers, and all endpoints/servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_connection_logs
          CALCULATE baseline of outbound_bytes per 10-min interval for each host over 30 days
          DETECT current_outbound_bytes > 99th_percentile_of_baseline
          ENRICH with DNS info for destination
          RETURN hostname, destination, outbound_bytes, baseline
  - question: Has a sequence analysis model detected a pattern of events consistent with collection and exfiltration?
    context: This is the most holistic question, using a model (like an HMM or RNN) to identify a specific chain of events across different data sources. The model is trained to recognize the logical sequence of an attack, such as a PowerShell script running, followed by high file read activity, a DNS lookup for a rare domain, and finally a large data transfer to that domain's IP. Detecting this full sequence provides the highest level of confidence that automated collection and exfiltration has occurred.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network egress points (firewalls, proxies), DNS servers, and all endpoints/servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          STREAM host_events and network_events to sequence_analysis_model
          FILTER for sequences matching 'collection -> staging -> exfiltration' pattern
          RETURN alert on matched sequence with all event details