name: 'T1556: Modify Authentication Process'
id: 'a1b2c3d4-e5f6-4789-a0b1-c2d3e4f5a6b7'
description: This playbook helps investigate whether an adversary is modifying authentication processes to establish persistence, evade defenses, or access credentials. It covers techniques like injecting malicious DLLs into `lsass.exe`, registering malicious LSA Notification or Security packages in the registry, disabling security features like Credential Guard, weakening authentication policies via GPO, bypassing MFA, or downgrading network authentication protocols like NTLM or Kerberos. Analysts can use this playbook to detect these activities by correlating file creation, registry modification, process execution, and network traffic data.
type: technique
related:
- 'TA0003: Persistence'
- 'TA0005: Defense-Evasion'
- 'TA0006: Credential-Access'
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: none
questions:
- question: Has a malicious DLL, identified by a threat intelligence feed, been created in a critical system directory and subsequently loaded by the lsass.exe process?
  context: This question aims to detect a common persistence technique where an adversary places a malicious DLL in a directory like `C:\Windows\System32\` and forces the Local Security Authority Subsystem Service (LSASS) to load it. By joining file creation events with image load events and checking the file hash against known malicious indicators, analysts can identify high-fidelity threats designed to intercept credentials or otherwise subvert the authentication process.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Sysmon Event ID 11
  - Domain Controllers, ADFS Servers, Privileged Access Workstations (PAWs); specifically the `C:\Windows\System32\` directory and the `lsass.exe` process space.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon | WHERE (EventID=11 AND TargetFilename CONTAINS 'C:\Windows\System32\*.dll') JOIN (EventID=7 AND Image='lsass.exe') ON TargetFilename=ImageLoaded | WHERE TimeDiff < 5_minutes | LOOKUP threat_intel ON FileHash
- question: Is lsass.exe loading any rare or likely packed DLLs that are uncommon across the enterprise?
  context: Adversaries often use custom or packed tools that are not standard across an environment. This question helps identify such outliers by calculating the prevalence (rarity) of every DLL loaded by `lsass.exe`. A DLL seen on very few machines is suspicious. Additionally, checking the file's entropy can reveal packing, a common obfuscation technique used to hide malicious code.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Sysmon Event ID 11
  - Domain Controllers, ADFS Servers, Privileged Access Workstations (PAWs); specifically the `C:\Windows\System32\` directory and the `lsass.exe` process space.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon | WHERE EventID=7 AND Image='lsass.exe' | STATS count(Endpoint) as prevalence by ImageLoaded, FileHash | WHERE prevalence < 0.01 * total_endpoints | ANALYZE entropy(FileHash) | WHERE entropy > 7.0
- question: Has there been an anomalous spike in the number of new or unique DLLs being loaded by lsass.exe on a given host, particularly a Domain Controller?
  context: The set of DLLs loaded by `lsass.exe` on a stable system should be relatively consistent over time. This question uses a time-series model to establish a baseline of normal activity. A sudden increase in the number of unique DLLs loaded by LSASS can indicate that a malicious tool has been introduced and is injecting modules to perform credential theft or other malicious actions.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Sysmon Event ID 11
  - Domain Controllers, ADFS Servers, Privileged Access Workstations (PAWs); specifically the `C:\Windows\System32\` directory and the `lsass.exe` process space.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon | WHERE EventID=7 AND Image='lsass.exe' | BUCKET time by 1h | STATS distinct_count(ImageLoaded) by host, time | APPLY time_series_model | WHERE actual_count > upper_bound
- question: Has a new, non-allowlisted DLL been registered as an LSA Notification or Security Package in the registry?
  context: Adversaries can achieve persistence by registering a malicious DLL as a Local Security Authority (LSA) package. This causes the DLL to be loaded by `lsass.exe` at startup, allowing it to intercept passwords and authentication events. This question checks for modifications to the relevant registry keys and compares the newly added DLL against an allowlist of known-good LSA providers.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Windows Servers; specifically the registry hives at `HKLM\SYSTEM\CurrentControlSet\Control\Lsa\`.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (Sysmon EventID=13 OR Windows EventID=4657) | WHERE TargetObject CONTAINS 'Control\Lsa\Notification Packages' OR 'Control\Lsa\Security Packages' | PARSE Details to extract NewDLL | LOOKUP lsa_allowlist ON NewDLL | WHERE is_allowlisted=false
- question: Has a DLL been registered as an LSA package that is rare for its specific server role or was modified on a Domain Controller outside of a maintenance window?
  context: This question establishes a baseline of legitimate LSA packages for different server types (e.g., Domain Controllers, Web Servers). A modification that introduces a DLL that is uncommon for that server's role is highly suspicious. For highly critical assets like Domain Controllers, any change outside of a planned maintenance window warrants immediate investigation.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Windows Servers; specifically the registry hives at `HKLM\SYSTEM\CurrentControlSet\Control\Lsa\`.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (Sysmon EventID=13 OR Windows EventID=4657) | WHERE TargetObject CONTAINS 'Control\Lsa\' | PARSE Details to extract NewDLL | STATS prevalence by ServerRole | WHERE prevalence < 0.05 OR (ServerRole='DC' AND time NOT IN maintenance_window)
- question: Was a recent LSA package modification flagged as anomalous by a machine learning model?
  context: This question uses a more advanced analytical approach, employing a one-class SVM model to learn the characteristics of legitimate LSA package changes (e.g., those made by trusted installers during patching). Any modification that deviates significantly from this learned normal behavior, considering factors like the parent process, user context, and time of day, is flagged as a potential threat.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Windows Servers; specifically the registry hives at `HKLM\SYSTEM\CurrentControlSet\Control\Lsa\`.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon EventID=13 | WHERE TargetObject CONTAINS 'Control\Lsa\' | EXTRACT features (ParentProcess, User, TimeOfDay, DLLProperties) | APPLY one_class_svm_model | WHERE prediction='anomaly'
- question: Was a successful remote logon observed on a server without corresponding Kerberos or NTLM network authentication traffic?
  context: A standard network logon (Type 3 or 10) should be preceded by network authentication traffic (e.g., Kerberos TGS-REQ or NTLM AUTHENTICATE) from the source to the destination. This question looks for the absence of this traffic, which could indicate that an adversary has bypassed standard authentication protocols using a stolen token, a malicious security package, or another mechanism.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek krb5.log
  - Zeek ntlm.log
  - Domain Controllers, VPN Concentrators, Bastion Hosts; specifically network traffic logs at ingress/egress points and Windows Security Event Logs on destination servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows EventID=4624 LogonType IN (3,10) | SUBSEARCH NOT [SEARCH (Zeek krb5.log OR ntlm.log) | WHERE client_ip=SourceNetworkAddress AND server=DestinationHost AND time BETWEEN logon_time-5s AND logon_time+5s]
- question: Has the ratio of successful network logons to observed network authentication messages on a critical server anomalously increased?
  context: This question establishes a baseline for the normal relationship between successful logon events and the network traffic that enables them. A sudden, statistically significant increase in this ratio suggests that logons are occurring without the expected network authentication chatter, pointing to a potential authentication bypass.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek krb5.log
  - Zeek ntlm.log
  - Domain Controllers, VPN Concentrators, Bastion Hosts; specifically network traffic logs at ingress/egress points and Windows Security Event Logs on destination servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE ratio(count(WinEventID=4624, LogonType=3), count(Zeek krb5.log OR ntlm.log)) by host, hour | ALERT if ratio > 3 * stdev(moving_avg(ratio))
- question: Was a recent logon event on a critical server classified as 'suspect' due to a lack of corresponding network traffic?
  context: This question leverages a predictive model trained to distinguish between 'valid' logons (those with associated network authentication traffic) and 'suspect' logons (those without). By analyzing features like logon type, source/destination, and server role, the model can flag high-confidence 'suspect' events that are likely indicative of a bypass.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek krb5.log
  - Zeek ntlm.log
  - Domain Controllers, VPN Concentrators, Bastion Hosts; specifically network traffic logs at ingress/egress points and Windows Security Event Logs on destination servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows EventID=4624 | EXTRACT features (LogonType, SourceSubnet, ServerRole, TimeOfDay) | APPLY logon_classification_model | WHERE prediction='suspect' AND confidence > 0.9
- question: Has the registry been modified to disable Windows Defender Credential Guard?
  context: Credential Guard is a critical security feature that isolates `lsass.exe` to prevent credential theft. An adversary may attempt to disable it by modifying a specific registry key. This question creates a high-severity alert for this exact modification, as it is a clear and direct indicator of a defense evasion attempt.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4608
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - System Registry Hives on all Windows endpoints and servers with Credential Guard enabled, particularly Domain Controllers and Privileged Access Workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (Sysmon EventID=13 OR Windows EventID=4657) | WHERE TargetObject='HKLM\SYSTEM\CurrentControlSet\Control\Lsa\LsaCfgFlags' AND Details='DWORD (0x00000002)'
- question: Are there any endpoints where the Credential Guard configuration has deviated from its expected baseline?
  context: This question focuses on configuration drift. By periodically auditing the Credential Guard registry key across all endpoints and comparing it to a known-good baseline, security teams can identify systems where the feature has been disabled, either maliciously or unintentionally, and track trends to spot widespread attacks.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4608
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - System Registry Hives on all Windows endpoints and servers with Credential Guard enabled, particularly Domain Controllers and Privileged Access Workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: AUDIT registry_key='LsaCfgFlags' on all endpoints | JOIN baseline_configurations ON hostname | WHERE current_value != baseline_value
- question: Was there an unusual sequence of events involving a modification to the Credential Guard registry key followed by a system reboot?
  context: Disabling Credential Guard requires a reboot to take effect. This question uses a sequence-based model to detect suspicious patterns, such as a non-standard process (e.g., PowerShell instead of a trusted installer) modifying the key, followed shortly by a system restart. This correlation helps distinguish malicious activity from legitimate system configuration.
  answer_sources:
  - Windows Event ID 4657
  - Windows Event ID 4608
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - System Registry Hives on all Windows endpoints and servers with Credential Guard enabled, particularly Domain Controllers and Privileged Access Workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH events by host | DETECT sequence [Sysmon EventID=13, TargetObject='LsaCfgFlags'] -> [Windows EventID=4608] | WHERE process_name NOT IN ('TrustedInstaller.exe') | APPLY sequence_anomaly_model
- question: Has an unsigned DLL been loaded into a critical authentication process, or has a GPO been modified to weaken authentication policies?
  context: This question looks for two distinct defense evasion techniques. First, it checks for unsigned or invalidly signed DLLs being loaded into `lsass.exe` or `winlogon.exe`, which could be a malicious implant. Second, it monitors for Group Policy changes that weaken security, such as enabling the storage of passwords using reversible encryption (LM hashes), making them easier to crack.
  answer_sources:
  - Sysmon Event ID 7
  - Windows Event ID 5136
  - Windows PowerShell Event ID 4104
  - Domain Controllers (for GPO changes), all Windows Endpoints and Servers (for image loads), Group Policy Management Console.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (Sysmon EventID=7 AND Image IN ('lsass.exe', 'winlogon.exe') AND Signed='false') OR (Windows EventID=5136 AND AttributeLDAPDisplayName LIKE '*Policy*' AND NewValue='weaker_setting')
- question: Has a rare DLL been loaded by lsass.exe, or has there been a sudden burst of modifications to security-sensitive GPOs?
  context: This question uses statistical methods to find anomalies. It identifies newly observed DLLs loaded by `lsass.exe` that are rare across the enterprise, suggesting they are not standard software. Separately, it monitors the rate of change for important GPOs, alerting on a sudden spike in modifications outside a maintenance window, which could signal a coordinated attack.
  answer_sources:
  - Sysmon Event ID 7
  - Windows Event ID 5136
  - Windows PowerShell Event ID 4104
  - Domain Controllers (for GPO changes), all Windows Endpoints and Servers (for image loads), Group Policy Management Console.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon EventID=7 | STATS prevalence by DLL | WHERE prevalence < 0.005 OR (SEARCH Windows EventID=5136 | STATS rate by GPO | WHERE rate > threshold)
- question: Did a recent GPO change receive a high risk score from a classification model?
  context: Not all GPO changes are malicious. This question uses a machine learning model to score the risk of each change based on features like who made the change, when it was made, and whether the new policy weakens security. This helps prioritize alerts, allowing analysts to focus on the GPO modifications that are most likely to be malicious.
  answer_sources:
  - Sysmon Event ID 7
  - Windows Event ID 5136
  - Windows PowerShell Event ID 4104
  - Domain Controllers (for GPO changes), all Windows Endpoints and Servers (for image loads), Group Policy Management Console.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows EventID=5136 | EXTRACT features (User, TimeOfDay, Policy, ChangeType) | APPLY gpo_risk_model | WHERE risk_score > 0.8
- question: Was a successful remote logon for an MFA-enforced user recorded without a corresponding MFA success log, or did a non-allowlisted process read lsass.exe memory?
  context: This question targets two critical evasion and credential access methods. The first part looks for MFA bypass by correlating Windows logon events with MFA provider logs. The second part detects direct memory access to `lsass.exe` by an unauthorized process, a classic technique used by tools like Mimikatz to dump credentials.
  answer_sources:
  - Sysmon Event ID 10
  - Windows Event ID 4624
  - MFA Provider Logs
  - Zeek conn.log
  - VPN Concentrators, Cloud Service Authentication Logs (e.g., Azure AD), Domain Controllers, Privileged Endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (Windows EventID=4624, LogonType=10 AND NOT [SEARCH mfa_logs status='success']) OR (Sysmon EventID=10, TargetImage='lsass.exe', GrantedAccess CONTAINS '0x1000' AND SourceImage NOT IN allowlist)
- question: Has a statistically rare process accessed the memory of lsass.exe?
  context: Legitimate access to `lsass.exe` is typically performed by a small, predictable set of system and security processes. This question builds a profile of normal access patterns and alerts when a process that is statistically uncommon across the enterprise attempts to read LSASS memory, indicating a likely credential dumping attempt by a novel tool.
  answer_sources:
  - Sysmon Event ID 10
  - Windows Event ID 4624
  - MFA Provider Logs
  - Zeek conn.log
  - VPN Concentrators, Cloud Service Authentication Logs (e.g., Azure AD), Domain Controllers, Privileged Endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon EventID=10 TargetImage='lsass.exe' | STATS frequency by SourceImage | WHERE frequency < 5th_percentile
- question: Was a recent access to lsass.exe memory identified as an outlier by a clustering algorithm?
  context: This question uses unsupervised machine learning to find anomalous `lsass.exe` access events. By clustering events based on features like the source process, user context, and type of access requested, the algorithm can identify legitimate patterns as dense clusters. Any event that doesn't fit into a known cluster is flagged as an outlier and potential threat.
  answer_sources:
  - Sysmon Event ID 10
  - Windows Event ID 4624
  - MFA Provider Logs
  - Zeek conn.log
  - VPN Concentrators, Cloud Service Authentication Logs (e.g., Azure AD), Domain Controllers, Privileged Endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon EventID=10 TargetImage='lsass.exe' | EXTRACT features (SourceImage, GrantedAccess, User) | APPLY dbscan_model | WHERE cluster_label='noise'
- question: Was a known credential harvesting DLL written to a system directory and then registered as an LSA package by the same process?
  context: This is a high-fidelity detection for a specific, common attack chain used by tools like Mimikatz. It correlates multiple events tied to the same process: the creation of a malicious file (identified by hash), followed by the modification of a registry key to load that file as an LSA package, achieving credential access and persistence.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Member Servers, System Registry Hives, File System (`C:\Windows\System32\`).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH events by ProcessGUID | DETECT sequence [Sysmon EventID=11, TargetFilename CONTAINS 'System32', FileHash IN known_bad_hashes] -> [Sysmon EventID=13, TargetObject CONTAINS '\Lsa\', Details CONTAINS TargetFilename]
- question: Was a new DLL with high entropy registered as an LSA package?
  context: Malicious tools are often packed or encrypted to evade signature-based detection, which results in high file entropy (a measure of randomness). This question looks for newly registered LSA packages where the associated DLL has an unusually high entropy score, suggesting it may be packed malware designed for credential theft.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Member Servers, System Registry Hives, File System (`C:\Windows\System32\`).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Sysmon EventID=13 TargetObject CONTAINS '\Lsa\' | PARSE Details to get DLLPath | ANALYZE entropy(DLLPath) | WHERE entropy > 7.2
- question: Was a newly registered LSA package predicted to be malicious by a supervised machine learning model?
  context: This question uses a predictive model trained on the characteristics of both known-malicious and known-benign LSA packages. By analyzing features of a new package—such as file properties, the process that installed it, and the timing of events—the model can classify it as likely malicious, providing a more robust detection than a single indicator.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Member Servers, System Registry Hives, File System (`C:\Windows\System32\`).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ON new_lsa_package_event | EXTRACT features (file_entropy, file_size, signature_status, modifying_process) | APPLY xgboost_lsa_model | WHERE prediction='malicious'
- question: Has a user account in Active Directory been modified to weaken its password requirements?
  context: Adversaries may modify a user account's properties to make it easier to compromise or use for persistence. This question specifically alerts on changes to the `userAccountControl` attribute that either remove the need for a password or enable reversible password encryption, both of which are highly insecure and indicative of malicious activity.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4738
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Active Directory Database (NTDS.dit), Group Policy Objects.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows EventID=4738 | WHERE UserAccountControl CONTAINS 'Password not required' OR 'Store password using reversible encryption'
- question: Has there been a sudden spike in the number of user accounts being modified to weaken password security?
  context: While a single account modification is suspicious, a sudden increase in these modifications across the domain is a strong indicator of a widespread, automated attack. This question establishes a baseline for the rate of these changes and alerts when that rate is statistically exceeded.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4738
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Active Directory Database (NTDS.dit), Group Policy Objects.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows EventID=4738 | BUCKET time by 1d | STATS count by UserAccountControl_change | WHERE count > 3 * stdev(moving_avg(count))
- question: Did an administrator make a security-weakening change to a user account that is inconsistent with their typical role?
  context: This question uses peer group analysis to model the normal behavior of administrative accounts. If an admin who typically only creates new users suddenly modifies a privileged account to enable reversible password encryption, this deviation from their established behavioral profile is flagged as a high-risk anomaly.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4738
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Active Directory Database (NTDS.dit), Group Policy Objects.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Windows EventID=4738 | APPLY user_behavior_analytics_model ON admin_user | WHERE action_type='weaken_password' AND is_role_anomaly=true
- question: Did a single process write a new DLL and immediately register it as an LSA package?
  context: This question looks for a rapid, atomic sequence of events that is characteristic of malicious tool execution. Legitimate software installers may perform these actions, but often with more intermediate steps. A direct, sub-minute sequence from process creation to file write to registry modification is highly suspicious and warrants investigation.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Critical Servers, System Registry Hives, Temporary/User Profile Directories (as staging locations).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH events by ProcessGUID | DETECT sequence [Sysmon EventID=11, TargetFilename LIKE '%.dll'] -> [Sysmon EventID=13, TargetObject CONTAINS '\Lsa\'] | WHERE TimeDiff < 60_seconds
- question: Did a rare process, running on very few machines, perform the sequence of writing a DLL and registering it as an LSA package?
  context: This question enhances the previous detection by adding statistical context. If the process initiating the suspicious sequence is itself rare within the enterprise, the likelihood of it being malicious increases dramatically. This helps filter out noise from legitimate but uncommon software installers and focuses on true outliers.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Critical Servers, System Registry Hives, Temporary/User Profile Directories (as staging locations).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH events by ProcessGUID | DETECT sequence [Sysmon EventID=1, process_prevalence < 0.05] -> [Sysmon EventID=11] -> [Sysmon EventID=13] | WHERE TimeDiff < 60_seconds
- question: Was a small, linear chain of events involving a process, a DLL, and an LSA registry key detected by a graph analysis model?
  context: This question models system activity as a graph of interconnected entities (processes, files, registry keys). Malicious actions often form simple, direct graphs (Process A writes File B, then modifies Key C), whereas legitimate installations are more complex. This approach flags these simple, high-velocity event chains as anomalous.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 11
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Domain Controllers, Critical Servers, System Registry Hives, Temporary/User Profile Directories (as staging locations).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CONSTRUCT graph from Sysmon events | SEARCH for subgraph pattern (Process -> writes -> DLL -> modifies -> RegistryKey) | WHERE subgraph_size < 4 AND velocity > threshold
- question: Has there been a downgrade in authentication protocol strength on traffic involving a host with a recent authentication process modification alert?
  context: After compromising an authentication process, an adversary might force the use of weaker protocols (like NTLMv1 or Kerberos with RC4 encryption) that are easier to crack or manipulate. This question correlates network-level observations of weak protocols with host-level alerts to confirm a successful compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek ntlm.log
  - Zeek krb5.log
  - Zeek files.log
  - Network traffic to/from Domain Controllers, network traffic to external/untrusted networks, network choke points.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH (Zeek ntlm.log, version='v1') OR (Zeek krb5.log, encryption_type='rc4-hmac') | WHERE host IN (SELECT host FROM recent_auth_mod_alerts)
- question: Has the percentage of weak authentication protocols (NTLMv1, RC4-HMAC) on the network suddenly increased?
  context: In a properly configured environment, legacy authentication protocols should be rare or nonexistent. This question establishes a baseline for protocol usage and alerts if the proportion of weak protocols suddenly rises above a statistical threshold, indicating a possible widespread downgrade attack or misconfiguration.
  answer_sources:
  - Zeek conn.log
  - Zeek ntlm.log
  - Zeek krb5.log
  - Zeek files.log
  - Network traffic to/from Domain Controllers, network traffic to external/untrusted networks, network choke points.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE percentage(count(ntlm.version='v1' OR krb5.etype='rc4')) over 1h | ALERT if percentage > 0.01
- question: Was there an anomalous spike in outbound network traffic from an authentication server following a suspected compromise?
  context: If an adversary successfully installs a credential harvesting tool (e.g., a malicious password filter) on an authentication server, they may attempt to exfiltrate the captured credentials. This can result in an unusual spike in outbound network traffic. This question uses a time-series model to detect such anomalous data flows.
  answer_sources:
  - Zeek conn.log
  - Zeek ntlm.log
  - Zeek krb5.log
  - Zeek files.log
  - Network traffic to/from Domain Controllers, network traffic to external/untrusted networks, network choke points.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH conn.log | WHERE source_host='auth_server' | BUCKET time by 1h | STATS sum(total_bytes) | APPLY lstm_autoencoder_model | WHERE anomaly_score > threshold