name: T1059.012: Hypervisor CLI
id: 5a1b3c4d-6e7f-4a8b-9c0d-1e2f3a4b5c6d
description: "Has the adversary executed commands via a hypervisor command-line interface? (TA0002 - Execution). This involves detecting the execution of a process or command involving a hypervisor CLI tool (e.g., esxcli, vim-cmd, PowerCLI) where the process file hash or command-line arguments match a known Indicator of Compromise (IOC); execution of a hypervisor CLI command containing keywords or parameters associated with destructive, defense evasion, or reconnaissance actions not correlated with a valid change ticket; a sequence of hypervisor CLI commands from a single source user or host within a short time window that mirrors a known attack pattern; a hypervisor CLI command executed by a non-authorized user, from a non-standard source IP/hostname, or at an anomalous time; or an outbound network connection from a hypervisor's management interface to a malicious or anomalous destination."
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can we detect the execution of hypervisor CLI tools (esxcli, vim-cmd, PowerCLI) whose file hashes match known malware indicators?
    context: This question aims to identify the most direct evidence of compromise: the execution of a known malicious tool. By continuously monitoring process creation events and comparing file hashes against a threat intelligence feed, an analyst can catch adversaries using pre-compiled malicious binaries for hypervisor interaction. A match provides a high-confidence signal that an attack is in progress.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs OR hypervisor_shell_logs WHERE (process_name IN ('esxcli', 'vim-cmd', 'powershell.exe') AND command_line CONTAINS 'PowerCLI') AND file_hash IN (threat_intel_feed)
  - question: How can we identify potentially malicious hypervisor CLI commands by detecting statistically rare command-line arguments?
    context: This question addresses the detection of novel or obfuscated malicious commands that are not yet present in threat intelligence feeds. Adversaries may use legitimate tools with unusual parameter combinations. By establishing a baseline of normal command argument frequency, analysts can flag exceptionally rare commands as anomalous. This method helps uncover zero-day attack patterns or living-off-the-land techniques that would otherwise be missed.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs OR hypervisor_shell_logs FOR hypervisor_cli_tools | CALCULATE frequency of full_command_string | ALERT where frequency < 5th_percentile
  - question: Can a machine learning model be trained to classify hypervisor CLI command strings as benign or malicious in real-time?
    context: This question explores an advanced, automated approach to detecting malicious hypervisor commands. By training a classification model on features extracted from command strings (like n-grams, length, and special characters), the system can learn the subtle characteristics that distinguish malicious commands from benign ones. This allows for real-time detection and can even trigger automated responses, like host isolation, reducing the mean time to respond.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT command_string INTO classification_model | IF classification == 'malicious' AND confidence > 0.9 THEN ALERT
  - question: How can we detect the use of high-risk hypervisor CLI commands that are not associated with a valid change request?
    context: This question focuses on identifying unauthorized destructive or defense evasion activities. Adversaries often use commands to kill VMs, delete snapshots, or disable firewalls. By creating a watchlist of these dangerous commands and cross-referencing their execution with a change management system, analysts can quickly distinguish between legitimate administrative tasks and malicious actions. An alert without a corresponding change ticket is a strong indicator of an attack.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH command_line_logs FOR high_risk_strings | For each match, QUERY change_management_api FOR corresponding_ticket | IF no_ticket_found THEN ALERT
  - question: How can we detect anomalous frequency of high-risk hypervisor commands on a per-user or per-host basis?
    context: This question aims to detect abuse of legitimate credentials or compromised systems. An administrator suddenly executing an unusually high number of risky commands, or a single host being used to issue such commands from multiple accounts, deviates from normal behavior. By baselining the frequency of high-risk commands for each user and host, we can use statistical deviations to spot these anomalies, which might indicate a compromised account or a malicious script at work.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE execution_count of high_risk_commands per user and per host over 30 days | ALERT if current_count > (mean + 3 * stdev)
  - question: Can we use clustering to identify hypervisor CLI commands that are outliers from normal administrative behavior?
    context: This question seeks to find malicious activity by defining what 'normal' looks like and flagging everything else. By clustering command executions based on features like user, source, keywords, and time, we can group routine activities together. Any command that doesn't fit into a known 'normal' cluster is flagged as a noise point or anomaly. This unsupervised approach is powerful for discovering novel attack techniques without prior labeling.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER command_events using DBSCAN on features (user, source_host, command_keywords, time_of_day) | ALERT on events classified as 'noise'
  - question: How can we detect specific sequences of hypervisor CLI commands that indicate a known attack pattern, such as ransomware preparation or persistence?
    context: This question focuses on the narrative of an attack. Adversaries often execute a series of commands in a predictable order to achieve their goals (e.g., discover all VMs, then kill them). By using a stateful detection engine to look for these specific, timed sequences, analysts can identify an attack in progress based on its TTPs. This is more robust than single-event detection as it considers the adversary's workflow.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH for sequence: (command A) followed by (command B) from same user/host within 10 minutes | IF sequence_complete THEN ALERT
  - question: Can we detect the transition from reconnaissance to attack by analyzing the entropy of hypervisor commands in a short time window?
    context: This question uses information theory to identify a shift in adversary behavior. During reconnaissance, an attacker often uses many different commands to explore the environment, resulting in high command entropy. Once they move to execution or impact, they often use one or a few commands repeatedly in a script, causing entropy to drop sharply. Detecting this pattern of a sharp increase followed by a sharp decrease in command entropy can signal the critical phase shift in an attack.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE Shannon entropy of commands per user in 5-min window | ALERT if (sharp_increase in entropy) followed by (sharp_decrease in entropy)
  - question: Can a sequence analysis model (like an RNN/LSTM) predict and detect deviations from normal administrative command sequences?
    context: This question applies advanced sequence modeling to learn the 'grammar' of normal administrative workflows. An RNN model is trained on vast amounts of benign command sequences to learn to predict the next likely command. When an administrator or attacker issues a command that the model finds highly improbable, it indicates a significant deviation from established patterns. This can effectively catch sophisticated attackers attempting to blend in by using legitimate tools in an illegitimate order.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, ESXi shell.log, ESXi audit.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, and jump boxes with hypervisor management tools installed."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT command_sequence to RNN_model | GET probability of next_actual_command | IF probability is very_low THEN ALERT
  - question: How do we detect if a hypervisor CLI command is executed by a user account not authorized for VMware administration?
    context: This question addresses a clear policy violation and potential privilege escalation or account compromise. Hypervisor administration should be restricted to a specific group of users. By joining process execution logs with Active Directory group membership data, we can create a high-fidelity alert for any execution of a hypervisor CLI tool by an unauthorized user. This is a fundamental security control check.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, Windows Event ID 4624, Active Directory Logs, ESXi shell.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, domain controllers, and jump boxes."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs for hypervisor_cli_tools | JOIN with AD_logs on user_account | ALERT if user_account NOT IN 'VMware Administrators' group
  - question: How can we detect when an authorized administrator executes a hypervisor CLI command from an anomalous location or at an unusual time?
    context: This question helps detect credential theft or session hijacking. Even if a command is run by a legitimate admin account, the context matters. An admin who always works 9-to-5 from a corporate IP should not be executing commands at 3 AM from a foreign IP. By profiling the typical source IPs, hours, and session durations for each admin, we can alert on statistical deviations that suggest the account's credentials are being abused.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, Windows Event ID 4624, Active Directory Logs, ESXi shell.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, domain controllers, and jump boxes."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each admin, PROFILE typical source_IPs and login_hours | For new CLI execution, ALERT if source_IP or time is outside of established profile
  - question: Can an anomaly detection model identify suspicious hypervisor CLI executions based on a combination of contextual factors?
    context: This question leverages machine learning to look at the holistic context of an event, not just one attribute. An Isolation Forest or similar model can learn the multi-dimensional profile of 'normal' by considering user, source IP, time of day, parent process, and command length all at once. An event might be normal on each individual axis but anomalous when combined (e.g., this user, from this IP, at this time, running this command is strange). This provides a powerful way to detect sophisticated, context-aware attacks.
    answer_sources:
      - "Windows Event ID 4688, Sysmon Event ID 1, Windows Event ID 4624, Active Directory Logs, ESXi shell.log. Data should be collected from Hypervisor management servers (e.g., vCenter), ESXi hosts, designated administrator workstations, domain controllers, and jump boxes."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT event_features (User, Source_IP, Time, Parent_Process, etc.) into Isolation_Forest_model | ALERT if anomaly_score is high
  - question: How can we detect outbound network connections from a hypervisor to a known malicious C2 server or domain?
    context: This question aims to detect a critical stage of an attack - communication with an external command-and-control (C2) server. Hypervisors should generally only communicate with a limited set of internal systems. By monitoring their outbound network traffic and matching destination IPs, domains, or TLS fingerprints against threat intelligence feeds, analysts can get a high-confidence alert that a hypervisor has been compromised and is 'calling home'.
    answer_sources:
      - "Zeek conn.log, Zeek dns.log, Zeek ssl.log. Data should be collected from Network sensors (e.g., Zeek) monitoring traffic to/from hypervisor management interfaces, core network switches, and internet gateways."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH zeek_logs WHERE source_ip IN hypervisor_ips AND destination_ip is_external | MATCH destination_ip, dns_query, or ja3_fingerprint against threat_intel_feed | ALERT on match
  - question: How can we detect anomalous outbound network connections from a hypervisor, such as connections to a 'first-seen' destination or unusual data volumes?
    context: This question helps find C2 communication that isn't yet in threat intelligence feeds. By baselining normal outbound connections, any connection to a destination IP/port tuple that has never been seen before is inherently suspicious. Likewise, a sudden spike in the amount of data being sent outbound from a hypervisor can indicate data exfiltration. These statistical anomalies provide early warnings of a potential compromise.
    answer_sources:
      - "Zeek conn.log, Zeek dns.log, Zeek ssl.log. Data should be collected from Network sensors (e.g., Zeek) monitoring traffic to/from hypervisor management interfaces, core network switches, and internet gateways."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE unique (dest_ip, dest_port, proto) tuples per hypervisor | ALERT on any new tuple not in baseline OR if daily_outbound_bytes > (mean + 3 * stdev)
  - question: Can we use graph analysis and community detection to identify when a hypervisor communicates outside of its normal network cluster?
    context: This question models the network as a social graph to find unusual relationships. Normal operations create tight clusters of communication (e.g., ESXi hosts talking to vCenter and storage). A community detection algorithm can automatically identify these clusters. An alert is then triggered when a hypervisor makes a connection to a system outside of its expected community, which is a strong indicator of anomalous, and potentially malicious, network activity.
    answer_sources:
      - "Zeek conn.log, Zeek dns.log, Zeek ssl.log. Data should be collected from Network sensors (e.g., Zeek) monitoring traffic to/from hypervisor management interfaces, core network switches, and internet gateways."
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL network as graph | RUN Louvain Modularity to find communities | ALERT when a connection is made from a hypervisor_node to a node outside its community