name: T1595.001: Scanning IP Blocks
id: c1b2a3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary is conducting reconnaissance
  by scanning the organization's public-facing IP blocks. It covers several detection
  methods, including identifying source IPs on threat intelligence feeds, recognizing
  signatures of known scanning tools, detecting anomalous horizontal and vertical
  scans against internal hosts, and identifying host sweeps across sequential IP
  ranges.
type: technique
related:
- TA0043: Reconnaissance
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Have we observed inbound connections from source IPs that match entries
    on our threat intelligence feeds for known scanners, botnets, or TOR exit nodes?
  context: This question aims to identify low-hanging fruit by matching inbound connection
    sources against curated lists of known malicious or suspicious infrastructure.
    A direct match provides a high-confidence signal that the activity is not benign
    and is likely part of a reconnaissance scan or other malicious prelude.
  answer_sources:
  - Zeek conn.log
  - Zeek icmp.log
  - Internet-facing firewalls
  - network gateways
  - Cloud Security Groups
  - Network ACLs
  range: last 90 days
  queries: |-
    SEARCH Zeek:conn.log, Zeek:icmp.log
    JOIN id.orig_h WITH ThreatIntelFeed.IP
    WHERE ThreatIntelFeed.category IN ('scanner', 'botnet', 'tor')
    ALERT on match
- question: Can we identify any inbound source IPs with an anomalously high malicious
    reputation score based on their presence across multiple threat intelligence
    feeds?
  context: This question moves beyond simple one-to-one matches. An IP might appear
    on several lower-confidence lists. By aggregating these appearances into a weighted
    score, we can identify actors that are consistently associated with suspicious
    activities, even if no single indicator is high-confidence. Alerting on a statistically
    significant score (e.g., 95th percentile) helps to surface emerging threats or
    IPs that are part of a distributed campaign.
  answer_sources:
  - Zeek conn.log
  - Zeek icmp.log
  - Internet-facing firewalls
  - network gateways
  - Cloud Security Groups
  - Network ACLs
  range: last 90 days
  queries: |-
    SEARCH Zeek:conn.log, Zeek:icmp.log
    LOOKUP ThreatIntelFeeds on id.orig_h
    CALCULATE weighted_score
    THRESHOLD score > 95th_percentile_last_24h
    ALERT on threshold break
- question: Has our machine learning model classified any new inbound source IPs
    as a 'malicious-scanner' with high probability?
  context: This question leverages a machine learning model to make a predictive
    judgment about an IP's intent. Unlike symbolic or statistical methods, a classification
    model can learn complex, non-linear relationships between various features (like
    ASN, geolocation, previous behavior, and threat intel hits) to identify novel
    scanning behavior that might not match a known signature or cross a simple threshold.
    This provides a more robust and adaptive detection capability.
  answer_sources:
  - Zeek conn.log
  - Zeek icmp.log
  - Internet-facing firewalls
  - network gateways
  - Cloud Security Groups
  - Network ACLs
  range: last 90 days
  queries: |-
    STREAM Zeek:conn.log, Zeek:icmp.log
    EXTRACT features (ASN, country, etc.) for id.orig_h
    PREDICT class using ScannerClassifierModel
    WHERE probability(malicious-scanner) > 0.9
    ALERT on classification
- question: Have we detected inbound traffic matching known signatures of reconnaissance
    tools, such as specific User-Agents, TCP flag combinations, or JA3/JA3S hashes?
  context: This question focuses on identifying the tools of the trade. Many reconnaissance
    tools leave distinct fingerprints in network traffic. By searching for these
    specific signatures—like the User-Agent string of 'Nmap' or the unique TLS handshake
    hash (JA3) of a scanning tool—we can directly identify scanning activity with
    high confidence.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek software.log
  - Zeek ssl.log
  - Web application servers
  - internet-facing firewalls
  - load balancers
  - reverse proxies
  range: last 90 days
  queries: |-
    SEARCH Zeek:http.log WHERE user_agent MATCHES ('Nmap', 'masscan')
    OR SEARCH Zeek:conn.log WHERE tcp_flags ARE anomalous
    OR SEARCH Zeek:ssl.log WHERE ja3 IN (known_bad_ja3_list)
    ALERT on match
- question: Are any external source IPs using exceptionally rare User-Agent strings
    or JA3 hashes, suggesting an attempt to evade signature-based detection?
  context: This question aims to catch adversaries who try to be clever by altering
    their tool's default signatures. While a common User-Agent like 'Chrome' is normal,
    a slightly misspelled or randomized one is not. By calculating the frequency
    of all identifiers, we can flag those that are statistically rare. An attacker
    using an unpopular or custom-built tool will stand out, as will one using multiple
    rare identifiers to probe the network.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek software.log
  - Zeek ssl.log
  - Web application servers
  - internet-facing firewalls
  - load balancers
  - reverse proxies
  range: last 90 days
  queries: |-
    CALCULATE frequency of user_agent, ja3 over 24h
    FOR each new connection, SCORE rarity of its identifiers
    IF rarity_score < 1st_percentile
    ALERT on low score
- question: Has our machine learning model detected any TCP connection sequences
    that deviate significantly from normal, benign session patterns?
  context: This question analyzes the *behavior* of a connection over time, not just
    a single attribute. A normal web session has a predictable sequence of TCP states
    (e.g., SYN, SYN-ACK, ACK, data, FIN). Scans often have very different, abrupt
    patterns (e.g., just a SYN, or a SYN followed by a RST). A Hidden Markov Model
    trained on normal traffic can calculate the probability of a new connection sequence.
    A very low probability indicates the sequence is anomalous and likely part of
    a scan.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek software.log
  - Zeek ssl.log
  - Web application servers
  - internet-facing firewalls
  - load balancers
  - reverse proxies
  range: last 90 days
  queries: |-
    STREAM Zeek:conn.log
    FOR each connection, get history_sequence
    CALCULATE log_likelihood with HMM_model
    IF likelihood < anomaly_threshold
    ALERT on anomaly
- question: Has any single external source IP connected to an excessive number of
    internal hosts on the same port in a short time frame, indicating a horizontal
    scan?
  context: This question seeks to identify horizontal scans, where an attacker looks
    for a specific open port (e.g., port 445 for SMB) across a wide range of hosts.
    Legitimate traffic from a single external IP rarely involves connecting to dozens
    of internal hosts on the same port simultaneously. Setting a simple threshold
    (e.g., more than 20 hosts in a minute) is an effective way to detect this blatant
    scanning behavior.
  answer_sources:
  - Zeek conn.log
  - Demilitarized Zone (DMZ) network segments
  - externally exposed server subnets
  range: last 90 days
  queries: |-
    SEARCH Zeek:conn.log over 1min
    GROUPBY id.orig_h, id.resp_p
    COUNT unique id.resp_h AS host_count
    WHERE host_count > 20
    ALERT on high count
- question: Has any external source IP exhibited a statistically anomalous level
    of horizontal scanning activity for a specific destination port compared to normal
    behavior?
  context: This question refines the simple threshold approach by adding context.
    A static threshold of '20 hosts' might be too low for a common port like 443
    but too high for a rare port. This method establishes a dynamic baseline for
    *each port* based on historical data. An alert is triggered only when a source
    IP's activity exceeds the normal top-end behavior (e.g., 99th percentile) for
    that specific port, resulting in fewer false positives.
  answer_sources:
  - Zeek conn.log
  - Demilitarized Zone (DMZ) network segments
  - externally exposed server subnets
  range: last 90 days
  queries: |-
    CALCULATE 99th_percentile of unique destination_hosts per source_ip for each port over 5min window
    FOR each new connection, COUNT unique destinations per source/port
    IF count > port_specific_baseline
    ALERT on threshold break
- question: Has our time-series model detected a significant, unpredicted spike in
    unique source-destination connections for any high-value ports?
  context: This question addresses a sophisticated problem: distributed scans, where
    multiple attackers scan different parts of the network, or slow scans that stay
    below simple thresholds. By modeling the total volume of new connections on a
    port as a time series, we can predict the expected traffic volume for any given
    minute. A sudden, large spike in observed traffic that falls outside the model's
    prediction is a strong indicator of a coordinated or large-scale scanning event.
  answer_sources:
  - Zeek conn.log
  - Demilitarized Zone (DMZ) network segments
  - externally exposed server subnets
  range: last 90 days
  queries: |-
    FOR each high-value port, MODEL unique_src_dst_pairs per minute
    PREDICT expected_count and confidence_interval
    IF observed_count > upper_confidence_bound
    ALERT on outlier
- question: Has any external IP attempted to connect to an excessive number of different
    ports on a single internal host in a short time frame, indicating a vertical
    scan?
  context: This question aims to detect vertical (or port) scans, where an attacker
    probes a single machine to see which services are running. A legitimate client
    typically connects to only a few ports on a server. An attempt to connect to
    50 or more ports in a minute is a very strong signal of a reconnaissance port
    scan.
  answer_sources:
  - Zeek conn.log
  - Public-facing application servers
  - VPN concentrators
  - externally-facing domain controllers
  range: last 90 days
  queries: |-
    SEARCH Zeek:conn.log over 1min
    GROUPBY id.orig_h, id.resp_h
    COUNT unique id.resp_p AS port_count
    WHERE port_count > 50
    ALERT on high count
- question: Has any source-destination IP pair exhibited an anomalously high entropy
    in destination ports, suggesting a wide and unpredictable port scan?
  context: This question uses information theory to detect scanning. Entropy measures
    randomness or unpredictability. Legitimate traffic to a server usually targets
    a small, predictable set of ports, resulting in low entropy. A port scan, especially
    one that is not sequential, will target a wide and seemingly random set of ports,
    resulting in high entropy. Alerting on statistically high entropy scores can
    detect scans designed to be slow or non-sequential.
  answer_sources:
  - Zeek conn.log
  - Public-facing application servers
  - VPN concentrators
  - externally-facing domain controllers
  range: last 90 days
  queries: |-
    FOR each src/dst pair over 5min, collect destination_ports
    CALCULATE Shannon_entropy of ports
    CALCULATE 98th_percentile of entropy scores as baseline
    IF entropy > baseline
    ALERT on high entropy
- question: Has our machine learning clustering model identified a dense, anomalous
    cluster of connections from a single source to a single destination across many
    different ports?
  context: This question uses unsupervised machine learning to find 'hotspots' of
    activity. A DBSCAN algorithm can automatically group data points that are closely
    packed together. In this context, a vertical scan will appear as a dense cluster
 of events: all with the same source and destination IP, but spread out across
    the 'port' dimension. The algorithm can automatically identify these clusters
    as anomalies without needing pre-defined rules or thresholds.
  answer_sources:
  - Zeek conn.log
  - Public-facing application servers
  - VPN concentrators
  - externally-facing domain controllers
  range: last 90 days
  queries: |-
    STREAM Zeek:conn.log events
    APPLY DBSCAN with features (src_ip, dst_ip, dst_port)
    IDENTIFY clusters where src_ip and dst_ip are constant but dst_port has high variance
    ALERT on these clusters
- question: Has any external source IP been observed probing a sequential block of
    10 or more of our IP addresses?
  context: This question looks for a classic host discovery technique: the ping sweep.
    An attacker wanting to know which IPs in a subnet are 'live' will often just
    sweep through them sequentially (e.g., probing x.x.x.1, then x.x.x.2, x.x.x.3,
    etc.). By converting the target IPs to numbers and looking for a sequential run,
    we can detect this simple but effective reconnaissance method with high confidence.
  answer_sources:
  - Zeek conn.log
  - Zeek icmp.log
  - Public IP address ranges allocated to the organization
  - cloud network gateways
  range: last 90 days
  queries: |-
    FOR each source_ip over 1min, buffer destination_ips
    CONVERT IPs to integers
    CHECK for sequential run of length >= 10
    IF found
    ALERT on sequence
- question: Has any external source IP been observed probing a set of destination
    IPs that are statistically much more 'clustered' together than normal?
  context: This question aims to detect subnet sweeps that may not be perfectly sequential.
    An attacker might randomize the order of hosts they probe within a single /24
    subnet. While not sequential, the integer representation of these IPs will be
    tightly clustered and have a very low standard deviation compared to normal traffic.
    A low standard deviation is a strong statistical indicator of a targeted subnet
    sweep.
  answer_sources:
  - Zeek conn.log
  - Zeek icmp.log
  - Public IP address ranges allocated to the organization
  - cloud network gateways
  range: last 90 days
  queries: |-
    FOR each source_ip over 5min, collect destination_ips
    CONVERT IPs to integers
    CALCULATE standard_deviation
    IF stddev is anomalously low compared to baseline
    ALERT on low standard deviation
- question: Has our machine learning image recognition model detected a visual pattern
    of an IP sweep on any of our subnets?
  context: This advanced technique treats network scanning as an image recognition
    problem. By plotting the probed hosts in a subnet on a 2D grid (a bitmap), different
    scanning techniques create visually distinct patterns. A Convolutional Neural
    Network (CNN), typically used for image classification, can be trained to recognize
    these patterns and distinguish them from the sparse, random-looking patterns
    of benign traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek icmp.log
  - Public IP address ranges allocated to the organization
  - cloud network gateways
  range: last 90 days
  queries: |-
    FOR each source_ip and target /24 subnet over 10min, create a 256-bit bitmap of probed hosts
    FEED bitmap to CNN image classifier model
    IF model classifies bitmap as 'sweep'
    ALERT on classification