name: "T1499.002: Service Exhaustion Flood"
id: "5c9f8b7a-6d0e-4f1c-9b8a-7e6d5c4b3a2f"
description: "This playbook helps investigate whether an adversary is attempting a Service Exhaustion Flood (T1499.002) against critical services. This type of attack aims to make a machine or network resource unavailable to its intended users by temporarily or indefinitely disrupting services of a host connected to the Internet. Indicators include a high volume of connections from known DoS botnets, open proxies, or TOR exit nodes; anomalous HTTP request patterns such as slowloris-style attacks or high-frequency requests to resource-intensive endpoints; a sustained, statistically significant increase in inbound traffic volume and source IP address entropy; a high proportion of failed or incomplete TCP handshakes indicative of a SYN flood; and observable degradation in service quality, such as increased latency, connection timeouts, or a surge in server-side errors."
type: "technique"
related:
  - "TA0040: Impact"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are inbound connections to critical services originating from IP addresses known to be associated with DoS botnets, open proxies, or TOR exit nodes?"
    context: "This question aims to identify low-hanging fruit by matching incoming connection sources against known malicious infrastructure. A match provides a strong, immediate signal that traffic is not benign and is likely part of a coordinated hostile activity, warranting an alert and further investigation."
    answer_sources:
      - "Zeek conn.log"
      - "Threat Intelligence Feed"
      - "Network border gateways, firewalls, load balancers, and public-facing web/application servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log WHERE dest_port IN (80, 443) | JOIN source_ip WITH threat_intel_feed ON ip | ALERT IF match_found"
  - question: "Is there a statistically significant increase in the percentage of traffic from known malicious IPs targeting a critical service?"
    context: "This question moves beyond simple one-to-one matches to detect a rising tide of malicious traffic. By calculating the proportion of bad traffic over a rolling window and comparing it to a dynamic, historical baseline, this can detect distributed attacks where the volume from any single malicious IP might not be high, but the collective volume is anomalous and impactful."
    answer_sources:
      - "Zeek conn.log"
      - "Threat Intelligence Feed"
      - "Network border gateways, firewalls, load balancers, and public-facing web/application servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log | GROUP BY 5_min_window, critical_service | CALCULATE percentage_of_traffic_from_threat_intel_ips | ALERT IF percentage > 99th_percentile_of_daily_history"
  - question: "Does the volume of connections from known malicious IP addresses deviate significantly from forecasted normal behavior?"
    context: "This question uses predictive analytics to identify coordinated attacks. A time series model (like ARIMA or Prophet) learns the normal rhythm and volume of background noise from known malicious IPs. A significant deviation from the model's prediction suggests a new, coordinated campaign is underway, as opposed to the usual, sporadic scanning activity."
    answer_sources:
      - "Zeek conn.log"
      - "Threat Intelligence Feed"
      - "Network border gateways, firewalls, load balancers, and public-facing web/application servers."
    range: "last 90 days"
    queries:
      - "FORECAST connection_volume_from_threat_intel_ips USING time_series_model | ALERT IF observed_volume > forecasted_confidence_interval"
  - question: "Are there HTTP requests matching signatures of known application-layer DoS tools?"
    context: "This question seeks to identify specific attack tools by looking for their fingerprints in HTTP traffic. Tools like GoldenEye, LOIC, and Hulk often use distinct URI patterns or User-Agent strings. Matching these signatures provides a high-confidence indicator that an application-layer DoS attack is in progress."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "API gateways, public-facing web servers, and backend application servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek http.log | APPLY REGEX on uri, user_agent for known_DoS_tool_signatures | ALERT IF match_found"
  - question: "Are there an anomalous number of 'slow' HTTP requests, characterized by long connection times but very little data transfer?"
    context: "This question is designed to detect 'slowloris' or 'slow read' type attacks. These attacks exhaust server resources by keeping connections open for as long as possible while sending minimal data. By calculating a 'work-to-transfer' ratio and flagging significant deviations from the norm for a specific URI, we can spot this resource exhaustion behavior."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "API gateways, public-facing web servers, and backend application servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log, Zeek http.log | JOIN on session_id | FOR each URI, CALCULATE ratio = duration / (req_body_len + resp_body_len) | ALERT IF ratio > 95th_percentile_of_baseline"
  - question: "Can incoming HTTP requests be classified as malicious based on a combination of their network and application-layer features?"
    context: "This question employs a machine learning approach for more sophisticated detection. By training a model on various features (request frequency, URI entropy, user-agent, etc.), it can learn the subtle, multi-faceted patterns of an application-layer DoS attack that might evade simpler rule-based detection, allowing for a probabilistic assessment of malicious intent."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "API gateways, public-facing web servers, and backend application servers."
    range: "last 90 days"
    queries:
      - "EXTRACT features from Zeek logs (request_frequency, uri_entropy, etc.) | APPLY trained_classification_model | ALERT IF request_score is high_probability_malicious"
  - question: "Has the connection rate to a critical service breached a pre-defined hard limit based on known infrastructure capacity?"
    context: "This question provides a simple but effective safety net. By setting 'tripwire' alerts based on the known breaking points of hardware or software (e.g., maximum connections per minute), we can generate a high-priority alarm when the system is verifiably under a level of stress that will lead to failure, regardless of the attack's sophistication."
    answer_sources:
      - "Zeek conn.log"
      - "Network border gateways, ISP peering points, firewalls, and load balancers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log | COUNT connections_per_minute to critical_service | ALERT IF count > static_threshold for > 60 seconds"
  - question: "Is there a simultaneous and anomalous surge in both the number of unique source IPs and the randomness (entropy) of those IPs?"
    context: "This question is designed to specifically identify a distributed denial-of-service (DDoS) attack. A legitimate flash crowd might increase the number of source IPs, but a DDoS attack will also show a significant increase in the mathematical randomness (entropy) of the source IP address space, indicating traffic is not coming from a few concentrated network blocks but from a widely scattered botnet."
    answer_sources:
      - "Zeek conn.log"
      - "Network border gateways, ISP peering points, firewalls, and load balancers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log per 1_min_interval | CALCULATE unique_source_ip_count AND shannon_entropy_of_source_ips | ALERT IF both_metrics > 98th_percentile_of_history"
  - question: "Does the combination of total bytes, total packets, and unique source IP count deviate from normal, learned volumetric patterns?"
    context: "This question uses an advanced machine learning model to understand the normal, multi-dimensional relationship between traffic volume (bytes, packets) and source diversity (unique IPs). A volumetric flood attack will disrupt this relationship in a way that a model like an LSTM autoencoder can detect as a high 'reconstruction error,' signaling a state that doesn't match any previously seen normal behavior."
    answer_sources:
      - "Zeek conn.log"
      - "Network border gateways, ISP peering points, firewalls, and load balancers."
    range: "last 90 days"
    queries:
      - "AGGREGATE per minute: total_bytes, total_packets, unique_source_ips from Zeek conn.log | APPLY multivariate_anomaly_detection_model | ALERT IF reconstruction_error > learned_threshold"
  - question: "Is any single source IP address generating an abnormally high number of failed connection attempts (SYN floods or rejections)?"
    context: "This question targets a classic SYN flood attack from a single or small set of sources. A legitimate client will not generate hundreds of failed connection attempts in a minute. This behavior is a strong indicator of a malicious actor attempting to exhaust the server's TCP connection table (SYN backlog)."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek ssl.log"
      - "Web servers handling TLS/SSL termination, stateful firewalls, and load balancers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log per 1_min_window | COUNT connection_attempts by source_ip where state is 'S0' or 'REJ' | ALERT IF count > 100 for a single source"
  - question: "Has the overall success rate of new connections to a critical service dropped significantly, or is there an increase in failed TLS renegotiations?"
    context: "This question looks at the health of a service from a connection-establishment perspective. A sharp drop in the ratio of successful connections (SF) to failed ones (S0, REJ) indicates that the service is struggling to handle the incoming load, a primary symptom of a SYN flood. Similarly, excessive failed TLS renegotiations can be used to exhaust server CPU."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek ssl.log"
      - "Web servers handling TLS/SSL termination, stateful firewalls, and load balancers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log per 1_min_window | CALCULATE success_ratio = SF / (SF+S0+REJ+S1) | ALERT IF ratio drops below 3_std_dev_from_mean. For TLS, SEARCH Zeek ssl.log and ALERT if failed renegotiations from a source > 99th percentile."
  - question: "Has there been an abrupt and sustained shift in the distribution of TCP connection states for a service?"
    context: "This question uses statistical change point detection to automatically identify a fundamental shift in network traffic behavior. Instead of relying on fixed thresholds, this method detects when the underlying pattern of connection states (the percentage of success, SYN-sent, rejected, etc.) has structurally changed, which is a hallmark of the onset of a connection-based flood attack."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek ssl.log"
      - "Web servers handling TLS/SSL termination, stateful firewalls, and load balancers."
    range: "last 90 days"
    queries:
      - "CREATE time series of connection state percentages (SF, S0, REJ, S1) from Zeek conn.log | APPLY change_point_detection_algorithm | ALERT IF abrupt_structural_break_is_detected"
  - question: "Are critical servers logging specific error events that indicate resource exhaustion, such as a full request queue?"
    context: "This question looks for the 'ground truth' effect of a DoS attack directly on the server. Error events like Windows Event ID 15005 (http.sys request queue full) are definitive proof that the web server is overwhelmed and cannot service new requests. This provides a high-confidence alert that the service is actively degraded."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Windows Event ID 15005"
      - "Application servers, web servers, and database servers."
    range: "last 90 days"
    queries:
      - "SEARCH Windows Event Logs on critical web servers for Event ID 15005 | COUNT events per 1 minute | ALERT IF count > 5"
  - question: "Is there a significant increase in application response time (latency) or the rate of server-side errors (HTTP 5xx)?"
    context: "This question measures the user-facing impact of a potential service exhaustion attack. A sharp increase in the P95 latency shows that the slowest user experiences are getting much worse. A simultaneous spike in HTTP 5xx errors (like '503 Service Unavailable') confirms that the server is failing to process requests, directly indicating service degradation."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Windows Event ID 15005"
      - "Application servers, web servers, and database servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek logs per 5_min_interval | CALCULATE P95_latency AND rate_of_5xx_errors | ALERT IF latency > 100% of rolling_avg OR error_rate > 3_std_dev_from_mean"
  - question: "Has the system entered a 'degraded' state, as defined by a correlated anomaly across network performance metrics (latency, errors) and host-level metrics (CPU, memory)?"
    context: "This question provides the most holistic view by correlating symptoms from multiple domains (network, host). A service exhaustion attack will cause network latency to spike, error rates to climb, AND host CPU/memory to be exhausted. A model that learns the normal relationship between these metrics can detect when they all enter an anomalous state together, providing a very high-confidence alert that the system is under duress due to resource exhaustion."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Windows Event ID 15005"
      - "Application servers, web servers, and database servers."
    range: "last 90 days"
    queries:
      - "CREATE state_vector from network_metrics (latency, errors) and host_metrics (CPU, memory) | APPLY multivariate_anomaly_detection_model | ALERT IF system_state is 'degraded'"