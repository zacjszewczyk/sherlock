name: T1499.002: Service Exhaustion Flood
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps identify adversaries attempting a Service Exhaustion Flood (T1499.002) against critical services. This involves detecting high volumes of connections from malicious sources like botnets, anomalous HTTP request patterns designed to tie up server resources (e.g., slowloris-style attacks or requests to resource-intensive APIs), and sustained, statistically significant increases in inbound traffic volume that exceed historical norms, often characterized by a high entropy of source IP addresses. The playbook also looks for indicators of TCP/TLS handshake failures (e.g., SYN floods) and observable service degradation such as increased latency, connection timeouts, and a surge in server-side errors (e.g., HTTP 5xx).
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are connections to critical services originating from IP addresses known to be associated with DoS botnets, open proxies, or TOR exit nodes?
  context: This question helps identify inbound traffic from known malicious infrastructure by cross-referencing source IP addresses with threat intelligence feeds. A match provides a strong, high-confidence signal that the connection is part of a malicious campaign or coordinated attack rather than legitimate user activity.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Network border gateways, firewalls, load balancers, and public-facing web/application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each connection in conn.log to critical_service IF source_ip in threat_intel_feed THEN alert
- question: Is there a statistically significant increase in the proportion of traffic to critical services coming from known malicious IP addresses?
  context: This question moves beyond simple one-to-one matches to detect a concentration of malicious traffic. A sudden spike in the percentage of traffic from IPs on a threat intelligence list, monitored over a short rolling window, can serve as an early warning of a forming, coordinated attack, even if the total traffic volume has not yet reached critical levels.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Network border gateways, firewalls, load balancers, and public-facing web/application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE percentage_of_connections_from_threat_intel_ips over 5_min_window IF percentage > 99th_percentile_baseline THEN alert
- question: Does the volume of connections from known malicious IPs deviate from forecasted norms, suggesting a coordinated attack?
  context: This question uses predictive modeling to identify anomalies in traffic from known malicious sources. By establishing a forecast of expected traffic volume, this method can distinguish between random, background malicious probes and a sudden, organized surge that significantly breaks the expected pattern, indicating a targeted event.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Network border gateways, firewalls, load balancers, and public-facing web/application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FORECAST expected_volume_of_connections_from_threat_intel_ips IF observed_volume > forecast_confidence_interval THEN alert
- question: Are there HTTP requests containing URI or User-Agent signatures associated with known application-layer DoS tools?
  context: This question uses a signature-based approach to detect application-layer (L7) attacks. Many DoS tools leave distinct fingerprints in the URI or User-Agent fields of HTTP requests. Searching for these known patterns can effectively identify attacks like 'low-and-slow' floods that may not have a high volumetric signature.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - API gateways, public-facing web servers, and backend application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH http.log FOR uri or user_agent MATCHING known_dos_tool_signatures THEN alert
- question: Are there an anomalous number of long-duration, low-data-transfer connections to specific URIs, indicative of a slowloris-style attack?
  context: This question aims to detect attacks that exhaust server resources by holding many connections open for long periods while sending minimal data. By calculating and baselining a 'work-to-transfer' ratio (connection duration vs. data transferred), analysts can spot connections that are intentionally inefficient, a hallmark of slow connection attacks.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - API gateways, public-facing web servers, and backend application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each URI, CALCULATE ratio of connection_duration to data_transferred IF ratio > 95th_percentile_baseline THEN alert
- question: Can we classify incoming HTTP sessions as malicious based on a combination of behavioral features?
  context: This question leverages machine learning to detect complex attack patterns that may not be obvious from a single indicator. By training a model on various session features (e.g., request frequency, URI entropy, user-agent anomalies), it's possible to score incoming requests and identify sophisticated application-layer DoS attacks with higher accuracy.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - API gateways, public-facing web servers, and backend application servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: EXTRACT features from http/conn logs APPLY ML_classification_model IF score > malicious_threshold THEN alert
- question: Have any critical services breached predefined static thresholds for connection volume, indicating a potential overload?
  context: This question provides a simple but effective 'tripwire' for detecting volumetric attacks. By setting alerts based on the known hardware or software limits of a service (e.g., maximum connections per minute), security teams can be immediately notified when traffic is approaching or exceeding the infrastructure's capacity.
  answer_sources:
  - Zeek conn.log
  - Network border gateways, ISP peering points, firewalls, and load balancers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: COUNT connections_per_minute to critical_service IF count > static_tripwire_threshold THEN alert
- question: Is there a simultaneous surge in both the number of unique source IPs and the randomness (entropy) of those IPs, suggesting a distributed flood attack?
  context: This question is designed to specifically identify distributed denial-of-service (DDoS) attacks. A legitimate traffic spike might come from a limited set of sources, but a DDoS attack often involves a massive increase in unique, seemingly random source IPs. Measuring both the count and the entropy of source IPs and alerting when both surge simultaneously is a strong indicator of a distributed attack.
  answer_sources:
  - Zeek conn.log
  - Network border gateways, ISP peering points, firewalls, and load balancers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE unique_source_ip_count and source_ip_entropy per minute IF both > 98th_percentile_baseline THEN alert
- question: Does the combination of inbound traffic volume, packet counts, and unique source IP counts deviate significantly from learned normal patterns?
  context: This question uses a holistic, multivariate model to detect volumetric anomalies. The model learns the normal relationship between metrics like bytes, packets, and source IP counts. A flood attack often breaks this relationship (e.g., many small packets from many sources), causing the model to flag the deviation as a significant anomaly.
  answer_sources:
  - Zeek conn.log
  - Network border gateways, ISP peering points, firewalls, and load balancers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY multivariate_anomaly_model to (total_bytes, total_packets, unique_ips) IF reconstruction_error > threshold THEN alert
- question: Are any single source IPs generating an excessive number of failed or rejected connection attempts, indicative of a SYN flood?
  context: This question looks for a classic TCP SYN flood signature. An attacker attempts to exhaust server connection tables by sending a large number of SYN packets that never complete the three-way handshake. This results in a high volume of connections from a single source stuck in an incomplete (S0) or rejected (REJ) state.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Web servers handling TLS/SSL termination, stateful firewalls, and load balancers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: COUNT connections from single_source_ip with state S0 or REJ in 1_min IF count > 100 THEN alert
- question: Has the overall connection success rate for a service dropped anomalously, or is there an unusual pattern of failed or resource-intensive TLS handshakes?
  context: This question assesses the health of connections to a service. A sudden drop in the ratio of successful to total connections can indicate that a server's SYN backlog is full. Additionally, monitoring for an abnormal rate of failed or repeated TLS handshakes can uncover attempts to exhaust server CPU with expensive cryptographic operations.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Web servers handling TLS/SSL termination, stateful firewalls, and load balancers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE connection_success_ratio per minute IF ratio < (mean - 3*std_dev) THEN alert; ANALYZE ssl.log for excessive failed handshakes or renegotiations from single source THEN alert
- question: Has there been an abrupt and sustained shift in the distribution of TCP connection states (e.g., a sudden spike in incomplete or rejected connections)?
  context: This question uses statistical change point detection to identify a fundamental shift in network traffic behavior. Instead of tracking raw counts, it monitors the proportion of different connection states (e.g., SF, S0, REJ). A sudden, lasting change from mostly successful states to mostly failed states is a strong, statistically-backed signal of a SYN flood attack.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Web servers handling TLS/SSL termination, stateful firewalls, and load balancers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY changepoint_detection_algorithm to time_series_of_connection_state_proportions IF changepoint_detected with shift_to_S0/REJ THEN alert
- question: Are critical servers logging specific error events that indicate resource exhaustion, such as a full request queue?
  context: This question focuses on direct evidence of impact from the victim server's perspective. Specific system events, such as Windows Event ID 15005 (`http.sys` request queue full), are definitive proof that a web server is overwhelmed and cannot service new requests, which is a primary goal of a service exhaustion attack.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 15005
  - Application servers, web servers, and database servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH for Windows_Event_ID_15005 on critical_servers IF count > 5 in 1_min THEN alert
- question: Is there a significant increase in application response time (latency) or the rate of server-side errors (HTTP 5xx)?
  context: This question measures the user-facing impact of a potential attack. High latency and a surge in server errors (e.g., 503 Service Unavailable) are direct symptoms of service degradation. Correlating these application-level performance indicators with network-level anomalies strengthens the case for a DoS attack being the root cause.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 15005
  - Application servers, web servers, and database servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE p95_latency and http_5xx_error_rate IF p95_latency > 2*rolling_avg OR error_rate > (mean + 3*std_dev) THEN alert
- question: Has the system entered a 'degraded' state, as defined by a multivariate model correlating network performance metrics with host-level resource utilization?
  context: This is an advanced question that combines network and host data for a high-fidelity assessment. A model learns the normal operating 'state' across multiple dimensions (network latency, error rates, CPU, memory). It then alerts when the system deviates into a 'degraded' state, providing a comprehensive signal that service exhaustion is occurring.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 15005
  - Application servers, web servers, and database servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY multivariate_anomaly_model to (network_metrics, host_metrics) IF system_state is 'degraded' THEN alert