name: T1578: Modify Cloud Compute Infrastructure
id: 5a9b8c7d-6e3f-4a1b-9c8d-7e6f5a4b3c2d
description: This playbook helps identify adversarial attempts to evade defenses by modifying cloud compute infrastructure. Adversaries may alter resources such as virtual machines, snapshots, or network configurations to conceal their activities, establish persistence, or exfiltrate data. The playbook focuses on detecting the execution of malicious tools, anomalous network connections to cloud APIs, suspicious sequences of API calls, the application of overly permissive security settings, unusual contexts for API activity, spikes in resource modification rates, and the correlation of infrastructure changes with anomalous outbound data transfers.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any processes running that match known malicious tools or scripts used for unauthorized cloud infrastructure modification?
    context: Adversaries often use specialized tools (e.g., Pacu, Cloud-Sniper) or custom scripts to automate the manipulation of cloud environments. This question aims to detect the execution of these tools by matching process names, command-line arguments, or file hashes against known indicators from threat intelligence feeds. A positive match is a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Administrator workstations
      - Developer endpoints
      - CI/CD pipeline servers
      - Bastion hosts
    range: last 90 days
    queries:
      - "Pseudocode: Search process execution logs (Win Event ID 4688) for process names, hashes, or command lines matching a list of known malicious cloud modification tools."
  - question: Are there any rare or unusual command-line arguments being used with legitimate cloud CLI tools?
    context: Attackers may leverage legitimate and approved cloud command-line interface (CLI) tools (e.g., 'aws.exe', 'az.cmd') to blend in with normal administrative activity. However, their usage patterns, specifically the combination of command-line arguments, may be unusual. This question seeks to identify statistically rare command-line invocations that could represent malicious use of legitimate tools.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Administrator workstations
      - Developer endpoints
      - CI/CD pipeline servers
      - Bastion hosts
    range: last 90 days
    queries:
      - "Pseudocode: For cloud CLI tools, aggregate command-line argument patterns over a 30-day baseline. Identify and alert on invocations that are statistically rare (e.g., in the 99th percentile)."
  - question: Can machine learning models identify malicious command-line usage and correlate it with suspicious network activity?
    context: This question proposes an advanced detection method using machine learning to distinguish between benign and malicious use of cloud tools based on command-line features like length, entropy, and keyword presence. By training a model, we can identify suspicious commands that might not match known signatures. Correlating these findings with anomalous outbound network connections to cloud API endpoints provides a higher-confidence alert.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Administrator workstations
      - Developer endpoints
      - CI/CD pipeline servers
      - Bastion hosts
    range: last 90 days
    queries:
      - "Pseudocode: Extract features from command lines (length, entropy, keywords). Use a classification model (e.g., Random Forest) to score for malice. Correlate high-scoring events with anomalous network connections in Zeek logs."
  - question: Are there any network connections to cloud APIs using User-Agent strings from known malicious tools or generic clients?
    context: The User-Agent string in an HTTP request often reveals the client software used. Malicious tools may have unique User-Agents, while simple scripts might use generic clients like 'curl' or 'wget'. This question aims to identify connections to cloud API endpoints that use User-Agents matching a denylist of hacking tools or generic clients, which can indicate unauthorized access.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points
      - Internet gateways
      - Forward proxy servers
    range: last 90 days
    queries:
      - "Pseudocode: Search network logs (Zeek http.log, ssl.log) for traffic to cloud APIs. Alert on User-Agents or client info matching a denylist of malicious/generic tool signatures."
  - question: Are there statistically rare User-Agent strings or TLS client versions being used to connect to cloud APIs?
    context: Adversaries might use custom tools or outdated libraries that produce uncommon User-Agent strings or TLS client fingerprints. By establishing a baseline of normal User-Agents and TLS versions within the organization, we can detect statistical outliers. This question focuses on flagging connections that use clients seen very infrequently (e.g., less than 1% of the time), as they may represent novel or custom attack tools.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points
      - Internet gateways
      - Forward proxy servers
    range: last 90 days
    queries:
      - "Pseudocode: Baseline User-Agent and TLS client versions for cloud API traffic over a 30-day period. Alert on any activity falling below a low frequency threshold (e.g., 1%)."
  - question: Can unsupervised machine learning identify outlier groups of User-Agent strings that may indicate custom malicious tooling?
    context: This question explores using clustering algorithms like DBSCAN to automatically group similar User-Agent strings without prior knowledge of what is malicious. Outlier clusters, which represent small groups of distinct User-Agents, can be prioritized for manual investigation. This approach is effective for discovering previously unknown or custom-developed malicious tools that would be missed by signature-based methods.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points
      - Internet gateways
      - Forward proxy servers
    range: last 90 days
    queries:
      - "Pseudocode: Vectorize User-Agent strings from network logs. Apply a clustering algorithm (e.g., DBSCAN) to group them. Manually investigate outlier clusters as potential threats."
  - question: Has any user created a snapshot, made it public, and copied it to an external account in a short time frame?
    context: This sequence of actions—creating a snapshot, modifying its attributes to be public, and then copying it to an untrusted account—is a classic and high-fidelity pattern for data exfiltration from a cloud environment. This question aims to detect this specific sequence of events from a single user identity within a narrow time window (e.g., 30 minutes), as it is highly indicative of a breach.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4688
      - Cloud provider IAM and audit logging services (e.g., AWS CloudTrail S3 bucket, Azure Monitor)
      - Administrator workstations
      - CI/CD servers
    range: last 90 days
    queries:
      - "Pseudocode: In cloud audit logs, search for the sequence CreateSnapshot -> ModifySnapshotAttribute(public) -> CopySnapshot(external) by the same user within a 30-minute window."
  - question: Has a sequence of cloud API calls occurred that is statistically improbable compared to normal administrative workflows?
    context: While some attack patterns are known, adversaries can also perform a series of individually legitimate actions that are highly unusual in combination. This question aims to model normal sequences of API calls using a Markov chain to understand transition probabilities between actions. Any observed sequence with a very low joint probability would be flagged as a rare and suspicious workflow, even if the individual actions are common.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4688
      - Cloud provider IAM and audit logging services (e.g., AWS CloudTrail S3 bucket, Azure Monitor)
      - Administrator workstations
      - CI/CD servers
    range: last 90 days
    queries:
      - "Pseudocode: Model normal API call sequences with a Markov chain. Alert on observed sequences with a joint probability below a learned statistical threshold."
  - question: Can a deep learning model (LSTM) detect anomalous sequences of cloud API calls that deviate from learned normal behavior?
    context: This question proposes using a sophisticated sequence-based anomaly detection model, like an LSTM autoencoder, to learn the complex patterns of benign API call sequences. When a new sequence deviates significantly from these learned patterns (resulting in a high reconstruction error), it is flagged as a potential attack. This method can detect novel and complex attack paths that other methods might miss.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4688
      - Cloud provider IAM and audit logging services (e.g., AWS CloudTrail S3 bucket, Azure Monitor)
      - Administrator workstations
      - CI/CD servers
    range: last 90 days
    queries:
      - "Pseudocode: Train an LSTM autoencoder on benign API call sequences from audit logs. Monitor for new sequences that produce a high reconstruction error, indicating an anomaly."
  - question: Has a cloud resource been configured with overly permissive settings via an API call or CLI command?
    context: Adversaries often create or modify security configurations to be overly permissive, weakening defenses for easier access or data exfiltration. This question focuses on detecting high-risk patterns in API call parameters or command-line arguments, such as allowing access from any IP address ('0.0.0.0/0') or to all users ('*'), which are strong indicators of a security misconfiguration or malicious act.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4688
      - Cloud provider IAM and audit logging services
      - Configuration Management Databases (CMDB)
      - Administrator workstations
    range: last 90 days
    queries:
      - "Pseudocode: Use regular expressions to search cloud audit logs and command-line arguments for high-risk patterns like 'CidrIp: 0.0.0.0/0' or 'Principal: *'."
  - question: Is any user executing an unusually high number of 'risky' API calls compared to their role's baseline?
    context: While certain 'risky' API calls (e.g., modifying a security group) are necessary for some roles, a sudden increase in their usage by a specific user can be suspicious. This question aims to establish a baseline for the rate of such calls per user role and alert when a user's activity significantly exceeds that baseline (e.g., by two standard deviations), potentially indicating a compromised account or insider threat.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4688
      - Cloud provider IAM and audit logging services
      - Configuration Management Databases (CMDB)
      - Administrator workstations
    range: last 90 days
    queries:
      - "Pseudocode: Baseline the rate of risky API calls (e.g., 'ModifySecurityGroupIngress') per user role. Alert if a user's rate exceeds the role's average by more than two standard deviations in a 24-hour period."
  - question: Can a machine learning model classify cloud API calls as 'high-risk' based on their parameters?
    context: This question proposes building a classification model to automatically label API calls as 'high-risk' or 'low-risk'. By training on features within the call's parameters (like the presence of wildcards or specific keywords), the model can proactively identify potentially dangerous configurations as they are being made, allowing for immediate review and remediation.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Windows Event ID 4688
      - Cloud provider IAM and audit logging services
      - Configuration Management Databases (CMDB)
      - Administrator workstations
    range: last 90 days
    queries:
      - "Pseudocode: Train a classification model (e.g., Logistic Regression) on API call parameters to predict risk. Flag any call classified as 'high-risk' for review."
  - question: Has a sensitive cloud modification API call been made by a user who is not authenticated with MFA?
    context: Multi-Factor Authentication (MFA) is a critical security control. An adversary who has compromised a user's credentials may not have access to their MFA device. This question aims to detect sensitive infrastructure modification events (e.g., deleting a subnet) that are performed by a user identity not authenticated with MFA, as indicated in cloud audit logs. This is a high-confidence indicator of a compromised account.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - VPN concentrators
      - Endpoints of privileged users
      - Geolocation databases
    range: last 90 days
    queries:
      - "Pseudocode: Create a SIEM alert for sensitive API calls (e.g., 'DeleteSubnet') where the 'MfaAuthenticated' field in the audit log is 'false'."
  - question: Has a cloud administrator performed an API call from an anomalous context (time, location, or network)?
    context: Adversaries often operate from different geographic locations, networks (ASNs), and at different times than legitimate users. This question seeks to build a baseline profile for each administrator, including their typical working hours, source IPs/ASNs, and countries. An alert is generated if a new API call deviates from this established profile on multiple facets, indicating a potential account compromise.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - VPN concentrators
      - Endpoints of privileged users
      - Geolocation databases
    range: last 90 days
    queries:
      - "Pseudocode: For each admin, baseline typical API call hours, source ASNs, and countries. Alert if a new call deviates from the baseline on two or more facets (e.g., off-hours and new country)."
  - question: Can an anomaly detection model identify API calls that are outliers based on their execution context?
    context: This question proposes using an unsupervised model like Isolation Forest to detect anomalous API calls. The model is trained on a feature set that captures the context of each call, including the user, time of day, source network, and MFA status. The model learns normal operational patterns and can flag outliers that represent significant contextual deviations, which may correspond to malicious activity.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - Zeek conn.log
      - VPN concentrators
      - Endpoints of privileged users
      - Geolocation databases
    range: last 90 days
    queries:
      - "Pseudocode: Use an Isolation Forest model on API call features (user, time, source_ASN, is_mfa). Flag calls identified as outliers for investigation."
  - question: Has there been a sudden spike in the number of resource creation or deletion API calls from a single user or IP?
    context: Automated scripts, whether for malicious purposes or not, often result in a high volume of API calls in a short period. This question aims to detect such activity by triggering an alert when the count of resource modification calls (e.g., 'RunInstances', 'DeleteSnapshot') from a single user or IP exceeds a predefined hard threshold (e.g., 50 calls in 15 minutes), which could indicate adversarial scripting.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - CI/CD servers
      - Automation service accounts
    range: last 90 days
    queries:
      - "Pseudocode: Alert if the count of modification API calls (e.g., 'RunInstances', 'CreateSnapshot') from a single user/IP exceeds a threshold like 50 calls in 15 minutes."
  - question: Is any user's rate of resource modification API calls statistically unusual compared to their own baseline?
    context: This question focuses on detecting deviations from an individual user's normal behavior. By calculating a moving average and standard deviation of resource modification calls for each user, we can detect when their current activity significantly exceeds their typical rate (e.g., by more than 3 standard deviations). This approach is more tailored than a global threshold and can help identify compromised accounts or insider threats, while ignoring known high-volume automation accounts.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - CI/CD servers
      - Automation service accounts
    range: last 90 days
    queries:
      - "Pseudocode: For each user, calculate a moving average and standard deviation of modification API calls per hour. Alert when the current rate exceeds the average by more than 3 standard deviations."
  - question: Does time-series forecasting predict an unexpected burst in resource modification activity for a user?
    context: This question proposes a more advanced time-series analysis (e.g., SARIMA) to forecast the expected number of modification API calls for a user. An alert is generated when the actual observed count significantly exceeds the model's prediction and its confidence interval. This method can effectively identify unexpected bursts of activity that are inconsistent with a user's historical patterns, including seasonality.
    answer_sources:
      - AWS CloudTrail
      - Azure Activity Logs
      - Google Cloud Audit Logs
      - CI/CD servers
      - Automation service accounts
    range: last 90 days
    queries:
      - "Pseudocode: Apply a SARIMA model to forecast API modification event counts per user. Alert when the observed count significantly exceeds the forecasted value."
  - question: Has a large outbound data transfer occurred shortly after a resource was made public?
    context: This question aims to directly correlate a defense evasion or configuration change with potential data exfiltration. It creates a rule to detect when a resource (like a snapshot) is made public, and then, within a short time window (e.g., 1 hour), a large volume of data (>1GB) is transferred from that resource's IP to a non-corporate destination. This combination of events is a strong signal of data theft.
    answer_sources:
      - AWS CloudTrail
      - AWS VPC Flow Logs
      - Azure Network Watcher flow logs
      - Zeek conn.log
      - Cloud provider network gateways (e.g., NAT Gateway, Internet Gateway)
      - VPC/VNet flow log collectors
      - Cloud storage buckets
    range: last 90 days
    queries:
      - "Pseudocode: Correlate a 'ModifySnapshotAttribute' (public) event with a subsequent large (>1GB) data transfer from the related resource to a non-corporate IP within 1 hour."
  - question: Is a newly created resource exhibiting unusually high outbound traffic shortly after its creation?
    context: Adversaries may spin up new infrastructure specifically for data staging and exfiltration. This question focuses on monitoring the network behavior of newly created resources. If, within the first hour of its existence, a new instance generates an amount of outbound traffic that is in the 99th percentile compared to typical new instances, it should be flagged for investigation as a potential exfiltration point.
    answer_sources:
      - AWS CloudTrail
      - AWS VPC Flow Logs
      - Azure Network Watcher flow logs
      - Zeek conn.log
      - Cloud provider network gateways (e.g., NAT Gateway, Internet Gateway)
      - VPC/VNet flow log collectors
      - Cloud storage buckets
    range: last 90 days
    queries:
      - "Pseudocode: Following a resource creation event, monitor its outbound traffic. Alert if the volume in the first hour is in the 99th percentile of typical new resource egress."
  - question: Can a graph-based model detect a multi-stage exfiltration chain involving infrastructure modification?
    context: This question proposes modeling the relationships between users, resources, and external entities as a graph. An attack can then be seen as a path through this graph (e.g., User -> creates Snapshot -> makes it public -> creates new VM -> VM sends data to untrusted IP). By identifying these specific multi-step paths, a graph-based anomaly detection model can flag the entire sequence as a likely exfiltration chain, providing a holistic view of the attack.
    answer_sources:
      - AWS CloudTrail
      - AWS VPC Flow Logs
      - Azure Network Watcher flow logs
      - Zeek conn.log
      - Cloud provider network gateways (e.g., NAT Gateway, Internet Gateway)
      - VPC/VNet flow log collectors
      - Cloud storage buckets
    range: last 90 days
    queries:
      - "Pseudocode: Use a graph model to connect users, resources, and IPs. Search for and alert on paths that represent a known exfiltration pattern (e.g., create public resource -> egress data)."