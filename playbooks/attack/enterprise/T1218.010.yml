name: T1218.010: Regsvr32
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook is designed to detect malicious use of the signed Windows binary, regsvr32.exe, a technique used by adversaries for defense evasion. It addresses the information requirement, "Is the adversary evading defenses by proxying execution through the signed Windows binary Regsvr32.exe?". The playbook identifies several key indicators of misuse, including: regsvr32.exe executing a remote payload from a URL, being spawned by an anomalous parent process (e.g., Microsoft Office applications), loading DLLs from non-standard or user-writable directories, spawning child processes like cmd.exe or powershell.exe, initiating outbound network connections, or using the specific '/n' and '/i:' switch combination associated with the 'Squiblydoo' attack.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is regsvr32.exe being executed with a command-line argument containing a URL that matches known malicious indicators?
    context: This question aims to identify the direct use of regsvr32.exe to fetch and execute remote payloads, a common defense evasion technique. By extracting URLs from the command line and checking them against threat intelligence feeds, analysts can quickly spot known malicious activity. A match provides a high-confidence signal that an adversary is attempting to proxy execution through a trusted system binary.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek dns.log
      - All Windows Endpoints and Servers; Network Egress Points; DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE process_name = 'regsvr32.exe' AND (command_line CONTAINS 'http://' OR command_line CONTAINS 'https://') | EXTRACT url | LOOKUP url in threat_intel_feed | ALERT on match
  - question: Is regsvr32.exe communicating with a statistically rare or algorithmically generated domain?
    context: This question helps uncover novel or unknown malicious domains that wouldn't be caught by signature-based threat intelligence. Adversaries often use newly created domains or Domain Generation Algorithms (DGAs) to evade blocklists. Identifying domains that are rarely visited by anyone in the organization or that have high entropy (a sign of randomness typical of DGAs) can surface these suspicious connections.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek dns.log
      - All Windows Endpoints and Servers; Network Egress Points; DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE process_name = 'regsvr32.exe' AND command_line CONTAINS_URL | EXTRACT domain | CALCULATE historical_frequency(domain) and shannon_entropy(domain) | ALERT IF frequency < 5th_percentile OR entropy > 3.5
  - question: Does a machine learning model classify a regsvr32.exe execution event as malicious based on its combined features?
    context: This question leverages machine learning to perform a more holistic assessment of a regsvr32.exe execution. Instead of relying on a single indicator, a classification model can consider multiple features simultaneously (e.g., parent process, command-line structure, domain rarity) to identify complex patterns indicative of malicious behavior. This approach can detect sophisticated attacks that might evade simpler rule-based detections.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek dns.log
      - All Windows Endpoints and Servers; Network Egress Points; DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH regsvr32_event | EXTRACT features (parent_process, cmd_length, has_url, domain_rarity) | SCORE with classification_model | ALERT IF score > 0.9
  - question: Is regsvr32.exe being spawned by an unusual parent process, such as a Microsoft Office application or scripting engine?
    context: This question targets a common infection vector where malicious documents or scripts spawn regsvr32.exe to carry out the next stage of an attack. Legitimate use of regsvr32.exe is typically initiated by system processes like svchost.exe. Seeing it launched by an Office application, browser, or script interpreter is highly anomalous and a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE process_name = 'regsvr32.exe' AND parent_process IN ('winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe', 'mshta.exe', 'wscript.exe', 'powershell.exe') | ALERT on match
  - question: Is the observed parent-child relationship for a regsvr32.exe execution statistically rare within the enterprise?
    context: This question aims to identify anomalous process chains by baselining normal activity. By building a historical model of which processes typically spawn others, analysts can flag new or infrequent parent-child pairings involving regsvr32.exe. This statistical approach can uncover novel attacker techniques that don't match predefined lists of suspicious parents.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH new regsvr32_event | LOOKUP historical_frequency(parent_process, 'regsvr32.exe') | ALERT IF frequency < 0.01%
  - question: Does an anomaly detection model identify the process execution chain leading to regsvr32.exe as an outlier?
    context: This question uses an unsupervised machine learning model to detect unusual process execution trees without prior labeling. An Isolation Forest or similar model can learn what normal process lineage looks like across the environment. It can then flag any execution path involving regsvr32.exe that significantly deviates from this learned baseline, providing a powerful way to find previously unseen malicious behavior.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH regsvr32_event | VECTORIZE process_tree | SCORE with anomaly_detection_model | ALERT on high anomaly_score
  - question: Is regsvr32.exe loading a DLL from a non-standard or user-writable directory?
    context: This question focuses on the location of the DLL being executed. Adversaries often drop their malicious payloads into user-writable directories like Temp or AppData to bypass permissions restrictions on system folders. Legitimate DLLs for regsvr32 are almost always located in protected system directories like System32. Alerting on executions from unusual locations, while using an allow-list for known exceptions, is an effective detection strategy.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, focusing on user profile directories and temporary folders
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE process_name = 'regsvr32.exe' | PARSE dll_path from command_line | IF dll_path MATCHES ('C:\\Users\\', 'C:\\ProgramData\\', '\\AppData\\', 'C:\\Windows\\Temp\\') AND NOT in allow_list THEN ALERT
  - question: Is regsvr32.exe loading a DLL from a directory path that is statistically rare or appears randomized?
    context: This question helps detect adversary attempts to hide malicious DLLs by using randomized file or directory names. By calculating the entropy of the path, analysts can identify names that look algorithmically generated. Furthermore, by baselining common DLL locations for regsvr32.exe, any execution from a historically rare directory can be flagged as suspicious, even if the path itself doesn't match a predefined pattern.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, focusing on user profile directories and temporary folders
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH new regsvr32_event | PARSE dll_path | CALCULATE path_entropy and historical_directory_frequency | ALERT IF entropy > 95th_percentile OR directory_frequency < 1%
  - question: Does a one-class anomaly detection model, trained on benign activity, classify a regsvr32.exe execution as abnormal?
    context: This question uses a machine learning approach that is ideal for scenarios where malicious examples are rare or unavailable for training. A One-Class SVM learns a tight boundary around what constitutes 'normal' regsvr32.exe behavior based on features like the DLL path structure and parent process. Any new event that falls outside this boundary is flagged as an anomaly, allowing for the detection of novel threats without needing to define what "bad" looks like beforehand.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, focusing on user profile directories and temporary folders
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH regsvr32_event | EXTRACT features (path_depth, path_chars, parent_process) | SCORE with one_class_svm_model | ALERT IF classified as anomaly
  - question: Is regsvr32.exe spawning a command-line interpreter or another script execution process?
    context: This question looks for a high-fidelity indicator of malicious activity. Legitimate use of regsvr32.exe is for registering or unregistering COM components; it should not be spawning child processes like cmd.exe or powershell.exe. Such behavior is a classic sign that an attacker is using regsvr32.exe as a proxy to launch further commands or scripts on the system, and it should be treated as a critical alert.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Windows Event ID 5156
      - All Windows Endpoints and Servers; Network Egress Gateways
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE parent_process = 'regsvr32.exe' AND process_name IN ('cmd.exe', 'powershell.exe', 'pwsh.exe', 'wscript.exe', 'cscript.exe', 'rundll32.exe') | ALERT on match
  - question: Is regsvr32.exe initiating any outbound network connections, especially to uncommon ports?
    context: This question targets another highly anomalous behavior. The regsvr32.exe process itself does not typically make network connections (though it may load a DLL that does). Direct network activity from regsvr32.exe is a strong red flag. By correlating this with the rarity of the destination port across the entire enterprise, analysts can prioritize the most suspicious connections, such as command-and-control (C2) traffic on non-standard ports.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Windows Event ID 5156
      - All Windows Endpoints and Servers; Network Egress Gateways
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH network_connection_events WHERE process_name = 'regsvr32.exe' | CALCULATE historical_port_frequency(destination_port) | ALERT, prioritizing if port_frequency < 10th_percentile
  - question: Following a suspicious regsvr32.exe execution, does the host exhibit anomalous network behavior?
    context: This question provides a method for post-detection confirmation and impact assessment. After a suspicious regsvr32.exe event, an attacker's payload may begin C2 communication or data exfiltration. By triggering a focused time-series analysis of the host's network traffic immediately following the event, a security system can detect subsequent anomalous spikes in data transfer or connection counts, providing strong corroborating evidence of a successful compromise.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Windows Event ID 5156
      - All Windows Endpoints and Servers; Network Egress Gateways
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON suspicious_regsvr32_alert for host | MONITOR network_traffic(host) for 15 mins | APPLY time_series_model | ALERT IF traffic deviates > 3 standard_deviations from forecast
  - question: Is regsvr32.exe being executed with the '/n' and '/i:' switches, indicative of the 'Squiblydoo' technique?
    context: This question targets a very specific and well-known abuse pattern of regsvr32.exe. The combination of the '/n' (no UI) and '/i:' (install) switches allows an attacker to execute a script from a DLL without registering it, bypassing many security controls. This pattern has no known legitimate use and is a definitive sign of malicious intent, warranting a critical-severity alert.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE process_name = 'regsvr32.exe' AND command_line CONTAINS '/n' AND command_line CONTAINS '/i:' | ALERT on match
  - question: How many times and on which hosts has the 'Squiblydoo' technique been observed across the enterprise?
    context: This question focuses on situational awareness and incident scoping. Since any use of the '/n /i:' combination is malicious, tracking its occurrence over time provides a clear view of an ongoing campaign. A dashboard can help analysts quickly identify the scope of an attack by showing which hosts are affected and what specific payloads (the file or URL passed to '/i:') are being used.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_events WHERE process_name = 'regsvr32.exe' AND command_line CONTAINS '/n' AND command_line CONTAINS '/i:' | COUNT by host, payload | DISPLAY on dashboard
  - question: Can the context of a 'Squiblydoo' execution be correlated with known threat actor campaigns?
    context: This question aims to provide immediate context and potential attribution for an incident. When a high-fidelity 'Squiblydoo' alert triggers, the associated details (like the parent process or the payload URL) can be automatically compared against a database of known threat actor tactics, techniques, and procedures (TTPs). This can help analysts quickly understand who might be behind the attack and what their likely objectives are, enabling a more effective and targeted response.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON squiblydoo_alert | EXTRACT features (parent_process, payload, user) | CORRELATE features with threat_actor_ttp_database | REPORT potential attribution