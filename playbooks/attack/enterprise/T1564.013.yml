name: T1564.013: Bind Mounts
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook addresses the threat of adversaries using bind mounts to hide malicious processes or files from standard inspection tools. It provides investigative steps to detect the use of the 'mount' command for bind mounting (especially involving /proc), identify discrepancies between kernel-level and user-space process listings, correlate bind mount events with subsequent command-and-control (C2) network traffic, and detect anomalous outbound connections from hosts suspected of bind mount activity.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has the 'mount' command been executed with arguments indicating a bind mount, such as '--bind', '-o bind', or '-B', especially involving the /proc filesystem?
  context: |
    This question aims to directly detect the execution of bind mount commands. Adversaries use these commands to mount one part of the filesystem onto another, which can be used to obscure malicious files or running processes. The presence of '/proc/' is particularly suspicious as it can be used to hide processes from standard monitoring tools. A high-priority alert is warranted to investigate potential defense evasion.
  answer_sources:
  - Windows Security Event ID 4688
  - Linux auditd logs
  - Sysmon for Linux Event ID 1
  - Critical Linux servers, container host nodes (Kubernetes, Docker), and developer workstations using Windows Subsystem for Linux (WSL).
  range: last 90 days
  queries:
  - pseudocode: SEARCH process:creation AND process_name:"mount" AND command_line:("--bind" OR "-o bind" OR "-B")
- question: Is there an anomalous volume of 'mount' command executions by any user or on any host compared to their established baseline?
  context: |
    This question seeks to identify unusual patterns of 'mount' command usage that might indicate malicious activity, even if the individual commands do not appear overtly malicious. By baselining normal activity and alerting on statistical deviations (e.g., exceeding the 99th percentile), analysts can uncover sophisticated adversaries who try to blend in by using legitimate system utilities for malicious purposes.
  answer_sources:
  - Windows Security Event ID 4688
  - Linux auditd logs
  - Sysmon for Linux Event ID 1
  - Critical Linux servers, container host nodes (Kubernetes, Docker), and developer workstations using Windows Subsystem for Linux (WSL).
  range: last 90 days
  queries:
  - pseudocode: COUNT process:creation AND process_name:"mount" BY user, host OVER 24h. ALERT if count > 99th_percentile_baseline.
- question: Can recent 'mount' command executions be classified as suspicious based on a machine learning model trained on contextual features?
  context: |
    This question leverages machine learning to provide a more nuanced detection of malicious 'mount' usage. A logistic regression model can analyze various features like the parent process, user context, and time of day to score the likelihood of an event being malicious. This approach helps identify subtle or novel attack patterns that might be missed by simple signature-based rules.
  answer_sources:
  - Windows Security Event ID 4688
  - Linux auditd logs
  - Sysmon for Linux Event ID 1
  - Critical Linux servers, container host nodes (Kubernetes, Docker), and developer workstations using Windows Subsystem for Linux (WSL).
  range: last 90 days
  queries:
  - pseudocode: APPLY ML_model:logistic_regression_mount_classifier TO (process:creation AND process_name:"mount"). ALERT if prediction == "suspicious".
- question: Are there discrepancies between kernel-aware process lists and the contents of the /proc filesystem, suggesting hidden processes?
  context: |
    This question addresses a core technique for hiding processes on Linux systems. If a process is running (visible to the kernel) but its corresponding PID directory in /proc is missing, it's a strong indicator that a rootkit or a similar tool is using a bind mount to hide the process from user-space tools like 'ps' or 'top'. Detecting such discrepancies is critical for uncovering stealthy malware.
  answer_sources:
  - EDR kernel-level process listings
  - Osquery ('processes' table)
  - Custom audit script output comparing 'ps' with 'ls /proc'
  - High-value Linux servers, bastion hosts, servers hosting sensitive data, and containerized environments.
  range: last 90 days
  queries:
  - pseudocode: COMPARE kernel_process_list WITH filesystem_proc_list. ALERT on any PID in kernel_list NOT IN proc_list.
- question: Has there been a statistically significant increase in the number of mismatched or hidden PIDs on any given host over time?
  context: |
    This question uses statistical process control to monitor the health of process visibility on a system. While a single, transient mismatch might be a system glitch, a sustained or sudden increase in the count of hidden PIDs is a strong anomaly. Using a C-chart helps differentiate between random noise and a significant deviation from the norm, indicating a potential compromise.
  answer_sources:
  - EDR kernel-level process listings
  - Osquery ('processes' table)
  - Custom audit script output comparing 'ps' with 'ls /proc'
  - High-value Linux servers, bastion hosts, servers hosting sensitive data, and containerized environments.
  range: last 90 days
  queries:
  - pseudocode: TRACK count_of_mismatched_PIDs over time. APPLY SPC C-chart. ALERT if count > upper_control_limit.
- question: Does the current process table state on a host show a high anomaly score when compared to a baseline model, potentially indicating a hidden process?
  context: |
    This question employs an unsupervised machine learning model (an autoencoder) to learn the normal state of a system's process table. When a significant change occurs, such as a process being hidden via a bind mount, the model will struggle to reconstruct the current state, resulting in a high reconstruction error or anomaly score. This provides a powerful way to detect novel or unknown tampering techniques.
  answer_sources:
  - EDR kernel-level process listings
  - Osquery ('processes' table)
  - Custom audit script output comparing 'ps' with 'ls /proc'
  - High-value Linux servers, bastion hosts, servers hosting sensitive data, and containerized environments.
  range: last 90 days
  queries:
  - pseudocode: APPLY ML_model:autoencoder_process_table TO current_process_state. ALERT if reconstruction_error > threshold.
- question: Following a bind mount event on a host, did the same host connect to any known command-and-control (C2) infrastructure within a 60-minute window?
  context: |
    This question aims to correlate a suspicious host action (bind mount) with suspicious network activity (C2 communication). An adversary might use a bind mount to hide their malware and then have that malware "call home." By linking these two events in a tight time window, an analyst can build a high-confidence alert that points directly to a compromised host.
  answer_sources:
  - Windows Security Event ID 4688
  - Linux auditd logs
  - Zeek conn.log
  - Zeek dns.log
  - Network egress points, DNS resolvers, critical Linux servers, and developer workstations.
  range: last 90 days
  queries:
  - pseudocode: CORRELATE (process:creation AND command_line:"mount --bind") with (network:connection AND destination_ip IN c2_threat_feed) ON host within 60 minutes.
- question: After a bind mount event, did the host exhibit network beaconing behavior, characterized by connections with highly regular time intervals?
  context: |
    This question looks for a common C2 communication pattern: automated beaconing. Malicious implants often check in with their C2 server at regular intervals. A very low standard deviation in the time between connections to the same destination is a strong statistical indicator of this machine-generated traffic. Detecting this pattern after a bind mount event strengthens the case for a malicious implant being hidden on the system.
  answer_sources:
  - Windows Security Event ID 4688
  - Linux auditd logs
  - Zeek conn.log
  - Zeek dns.log
  - Network egress points, DNS resolvers, critical Linux servers, and developer workstations.
  range: last 90 days
  queries:
  - pseudocode: IF (process:creation AND command_line:"mount --bind"), THEN ANALYZE subsequent_network_traffic for 60m. CALCULATE std_dev of inter-arrival_times for repeating destinations. ALERT if std_dev < threshold.
- question: Did a host's network traffic show a significant anomaly score from an LSTM autoencoder model immediately following a bind mount event?
  context: |
    This question uses a sophisticated time-series machine learning model (LSTM autoencoder) to learn the normal "rhythm" of a host's network traffic. When a bind mount occurs, potentially hiding a malicious process, this question checks if the subsequent network activity deviates from the learned normal behavior. A spike in the anomaly score provides strong evidence that the hidden process is engaging in unusual network communications.
  answer_sources:
  - Windows Security Event ID 4688
  - Linux auditd logs
  - Zeek conn.log
  - Zeek dns.log
  - Network egress points, DNS resolvers, critical Linux servers, and developer workstations.
  range: last 90 days
  queries:
  - pseudocode: IF (process:creation AND command_line:"mount --bind"), THEN MONITOR ML_model:lstm_autoencoder_network_traffic for host. ALERT if anomaly_score spikes.
- question: Has a host, previously flagged for suspicious bind mount activity, attempted to resolve any DNS domains known to be malicious?
  context: |
    This question focuses investigative resources on hosts that are already considered high-risk due to prior suspicious activity. By placing these hosts on a watchlist, security tools can apply more stringent monitoring. Checking their DNS queries against a threat intelligence feed of malicious domains is an effective way to confirm a compromise, as malware often uses domain names for C2 communication.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network traffic logs at the internet gateway, internal network segments, and from corporate DNS servers.
  range: last 90 days
  queries:
  - pseudocode: SEARCH dns:query AND source_ip IN watchlist:bind_mount_activity AND query_domain IN malicious_domain_feed. ALERT on match.
- question: Are watchlisted hosts making DNS requests for domains that are statistically rare across the entire enterprise?
  context: |
    This question helps detect connections to newly created or obscure C2 infrastructure that may not yet be on threat intelligence feeds. Adversaries often use Domain Generation Algorithms (DGAs) or register new domains for their campaigns. These domains will appear as rare or unique within an organization's typical DNS traffic. Alerting on such statistical outliers for high-risk hosts is a powerful proactive detection method.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network traffic logs at the internet gateway, internal network segments, and from corporate DNS servers.
  range: last 90 days
  queries:
  - pseudocode: For source_ip IN watchlist:bind_mount_activity, CALCULATE rarity_score for each DNS query. ALERT if rarity_score > 99.9th_percentile.
- question: Have any watchlisted hosts initiated network connections to destination Autonomous System Numbers (ASNs) or countries that are anomalous compared to their historical profile?
  context: |
    This question moves beyond individual domains or IPs to look at network topology for anomalies. By clustering a host's historical connections by ASN and country, a profile of "normal" network behavior is created. A connection to a new, previously unseen ASN or country from a high-risk host is a significant anomaly. This can indicate an adversary is using hosting infrastructure in unusual geographic locations or providers, which warrants immediate investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network traffic logs at the internet gateway, internal network segments, and from corporate DNS servers.
  range: last 90 days
  queries:
  - pseudocode: For source_ip IN watchlist:bind_mount_activity, CLUSTER historical destinations by ASN/country. ALERT if new connection falls outside established clusters.