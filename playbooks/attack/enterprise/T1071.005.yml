name: 'T1071.005: Publish-Subscribe Protocols'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: |
  This playbook helps determine if an adversary is using publish-subscribe protocols (e.g., MQTT, XMPP, AMQP) for command and control. It provides guidance on investigating internal hosts establishing pub/sub connections to known malicious infrastructure, analyzing protocol metadata for malware signatures, detecting deviations in traffic profiles, identifying connections to unauthorized or suspicious brokers, analyzing topic usage for anomalies, and correlating pub/sub network activity with subsequent high-risk process executions on hosts.
type: 'technique'
related:
  - 'TA0011: Command and Control'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Are internal hosts connecting to known malicious IPs or domains using common publish-subscribe protocol ports?'
    context: |
      This question aims to identify direct C2 communication by cross-referencing network connection and DNS logs with a high-confidence threat intelligence (CTI) feed. A match indicates a high probability that a host is communicating with known adversary infrastructure using a pub/sub protocol, warranting an immediate, high-priority investigation.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Enterprise network egress points (e.g., firewalls, proxies)'
      - 'Internal DNS resolvers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SELECT * FROM network_logs WHERE (destination_port IN [1883, 8883, 5222, 5269]) AND (destination_ip IN cti_feed OR destination_domain IN cti_feed)'
  - question: 'Is there a statistically significant increase in the number of unique internal hosts connecting to CTI-flagged pub/sub infrastructure?'
    context: |
      This question helps detect the scale of a potential C2 campaign. A sudden spike in the number of unique internal systems connecting to known malicious pub/sub servers, exceeding a historical baseline, could signify a widespread infection or a new phase of an attack. This moves beyond a single host compromise to identify a broader campaign.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Enterprise network egress points (e.g., firewalls, proxies)'
      - 'Internal DNS resolvers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'AGGREGATE unique_count(source_ip, destination_ip) per hour WHERE destination is in CTI_feed. ALERT if count > 95th_percentile(90-day_baseline).'
  - question: 'Can we proactively identify malicious pub/sub connections using a machine learning model, even if the destination is not on a CTI feed?'
    context: |
      This question seeks to build a predictive model that can identify malicious pub/sub C2 traffic based on its characteristics, not just known bad destinations. By training a model on features like ASN reputation, connection duration, and data volume, it's possible to flag suspicious connections that use new or unknown C2 infrastructure, providing an early warning system.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Enterprise network egress points (e.g., firewalls, proxies)'
      - 'Internal DNS resolvers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SCORE pub/sub_connections with logistic_regression_model(features=[cti_match, asn_rep, duration, bytes]). ALERT if probability_malicious > 0.8.'
  - question: 'Does pub/sub metadata, such as MQTT topics or XMPP JIDs, contain known signatures of malware or C2 tools?'
    context: |
      This question focuses on inspecting the application-layer data within pub/sub protocols. Malware often uses specific patterns, hardcoded strings, or formats (like GUIDs or base64) in metadata fields for C2. Applying Yara or regex rules allows for the direct detection of these indicators within network traffic, providing strong evidence of a specific malware family or tool being used.
    answer_sources:
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Network sensors with application layer visibility (e.g., Zeek sensors)'
      - 'Internal or cloud-hosted message brokers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SCAN mqtt.log, xmpp.log fields (topic, client_id, username) with Yara/regex rules for malware_signatures. ALERT on match.'
  - question: 'Is there an unusually high level of randomness (entropy) in pub/sub metadata fields, suggesting algorithmic generation?'
    context: |
      This question aims to detect algorithmically generated C2 data. Adversaries often use random strings for identifiers or topics to evade signature-based detection. By calculating the Shannon entropy of fields like `topic` and `client_id` and comparing it to a baseline of normal traffic, we can identify sessions with unusually random data, which is a strong indicator of automated, non-human C2 communication.
    answer_sources:
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Network sensors with application layer visibility (e.g., Zeek sensors)'
      - 'Internal or cloud-hosted message brokers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'CALCULATE entropy(topic, client_id) for each session. ALERT if entropy > 98th_percentile(baseline_entropy).'
  - question: 'Can we use an anomaly detection model to identify pub/sub sessions with metadata that deviates from normal, legitimate patterns?'
    context: |
      This question proposes using unsupervised machine learning to find 'unknown unknowns'. By training a model (like a one-class SVM or isolation forest) exclusively on legitimate pub/sub metadata, it learns the profile of normal activity. Any new session that the model flags as an outlier or anomaly is, by definition, different from normal and warrants investigation for potential C2 activity, even if it doesn't match a known signature.
    answer_sources:
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Network sensors with application layer visibility (e.g., Zeek sensors)'
      - 'Internal or cloud-hosted message brokers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SCORE new pub/sub sessions with one_class_svm_model(features=[string_length, char_dist, n_grams]). ALERT if session is outlier.'
  - question: 'Are there any pub/sub connections exhibiting extreme characteristics, such as unusually long duration or an excessive number of connections?'
    context: |
      This question is designed to catch blatant anomalies using simple, static rules. C2 channels may be kept open for long periods (long hauling) or involve rapid, numerous connections for beaconing. Setting high, fixed thresholds (e.g., duration > 24 hours, connections > 1000/hr) provides a straightforward way to flag behavior that is almost certainly not legitimate user or system activity.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Host network interfaces'
      - 'Network segment gateways'
      - 'Enterprise network egress points'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'ALERT if pub/sub connection_duration > 24h OR if host_connection_count > 1000/hr.'
  - question: 'Has a specific host''s pub/sub traffic volume, connection count, or duration deviated significantly from its own historical behavior?'
    context: |
      This question focuses on host-level behavioral profiling. Every host has a typical pattern of network activity. By establishing a rolling baseline for each host's pub/sub traffic (e.g., data volume, connection frequency), we can automatically detect when a host's behavior changes dramatically. A sudden spike exceeding its own 99th percentile is a strong indicator that the host's function has changed, possibly due to a C2 implant becoming active.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Host network interfaces'
      - 'Network segment gateways'
      - 'Enterprise network egress points'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'FOR each host, calculate daily_metrics(connection_count, data_volume, mean_duration). ALERT if daily_metric > 99th_percentile(host_30_day_baseline).'
  - question: 'Can machine learning models detect anomalies in a host''s pub/sub traffic patterns over time or in comparison to its peers?'
    context: |
      This question employs two advanced ML techniques. First, time-series forecasting (like Prophet or ARIMA) can predict a host's expected traffic volume and alert when the actual volume deviates, catching subtle changes. Second, clustering algorithms group similar hosts (peer grouping). When a host's behavior causes it to shift away from its peer group, it becomes an outlier, suggesting a compromise or role change that warrants investigation.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Host network interfaces'
      - 'Network segment gateways'
      - 'Enterprise network egress points'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'FORECAST hourly pub/sub volume per host; ALERT on significant deviation. CLUSTER hosts by traffic patterns; ALERT if host becomes an outlier in its cluster.'
  - question: 'Is an internal host connecting to an external pub/sub broker that is not on the organization''s approved allow-list?'
    context: |
      This question leverages a 'known good' approach. By maintaining an allow-list of sanctioned pub/sub services, any connection to a destination *not* on that list is immediately suspicious. This method effectively filters out legitimate traffic and focuses analyst attention on unauthorized and potentially malicious communications. Enriching this with the initiating process from the endpoint provides critical context for the investigation.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Windows Event ID 4688'
      - 'Internal DNS resolvers'
      - 'Enterprise network egress points'
      - 'Endpoint devices'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SELECT * FROM pub/sub_connections WHERE destination NOT IN allow_list. ENRICH with process_name from endpoint logs.'
  - question: 'Are hosts connecting to rare, non-allow-listed pub/sub destinations that are also recently registered or have a low reputation?'
    context: |
      This question helps to prioritize investigations among non-allow-listed connections. Legitimate, but unlisted, services are typically used by many hosts. Adversary C2 infrastructure, however, is often used by only a few targeted victims, making it 'rare' or low-prevalence. By identifying these rare destinations and correlating them with other suspicious attributes like recent domain registration, we can pinpoint high-risk C2 servers.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Windows Event ID 4688'
      - 'Internal DNS resolvers'
      - 'Enterprise network egress points'
      - 'Endpoint devices'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'CALCULATE prevalence for non-allow-listed destinations. For destinations in bottom_5_percentile_prevalence, CHECK domain_age and reputation. ALERT on suspicious findings.'
  - question: 'Can clustering algorithms identify small groups of hosts communicating with unique, non-allow-listed infrastructure?'
    context: |
      This question uses clustering to find conspirators. While a legitimate service might create a large cluster of connections with similar characteristics, targeted C2 traffic will often form small, distinct clusters or be identified as outliers (noise points by DBSCAN). These small groups of hosts communicating with a unique destination are highly indicative of a targeted attack and should be investigated as a priority.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Windows Event ID 4688'
      - 'Internal DNS resolvers'
      - 'Enterprise network egress points'
      - 'Endpoint devices'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'CLUSTER non-allow-listed connections using DBSCAN(features=[dest_asn, dest_country, volume]). INVESTIGATE small clusters and noise_points.'
  - question: 'Are pub/sub topics containing keywords associated with command execution or data exfiltration?'
    context: |
      This is a direct, signature-based question. Adversaries may use descriptive, human-readable strings in pub/sub topics to manage their C2 channels (e.g., 'cmd', 'upload', 'whoami'). Scanning for these specific keywords within topic names can provide immediate and strong evidence of malicious intent, triggering a high-priority alert for an analyst to investigate the associated session.
    answer_sources:
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Network sensors with application layer visibility'
      - 'Internal hosts generating pub/sub traffic'
      - 'Message broker servers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SCAN mqtt.log topic_field for keywords [''cmd'', ''exec'', ''shell'', ''upload'', ''download'']. ALERT on match.'
  - question: 'Is a host using a pub/sub topic for the first time, or is a topic being used that has abnormally high entropy?'
    context: |
      This question uses two statistical methods to find anomalous topic usage. First, flagging the first time a host uses a specific topic can reveal new, potentially malicious activity. Second, calculating the entropy of topic strings can identify algorithmically generated names used to evade signature detection. A topic with very high entropy is unlikely to be created by a human and is suspicious.
    answer_sources:
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Network sensors with application layer visibility'
      - 'Internal hosts generating pub/sub traffic'
      - 'Message broker servers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'ALERT if host uses a new topic. CALCULATE entropy(topic_string); ALERT if entropy > 99th_percentile.'
  - question: 'Can NLP topic modeling identify new pub/sub topics that do not fit into any of the organization''s established communication themes?'
    context: |
      This question applies advanced NLP to understand the 'language' of your organization's pub/sub traffic. By modeling the entire collection of topic names, the algorithm (e.g., LDA) learns the normal 'themes' or categories of communication. When a new topic appears that doesn't fit well into any of these established themes, it is flagged as anomalous, providing a powerful way to detect novel C2 channels that don't match any known pattern.
    answer_sources:
      - 'Zeek mqtt.log'
      - 'Zeek xmpp.log'
      - 'Network sensors with application layer visibility'
      - 'Internal hosts generating pub/sub traffic'
      - 'Message broker servers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'MODEL all topics with LDA to find themes. SCORE new topics against themes. ALERT if topic has low probability for all known themes.'
  - question: 'Is a pub/sub network connection immediately followed by the execution of a suspicious process on the same host?'
    context: |
      This question seeks to establish a direct causal link between receiving a command via a pub/sub channel and executing it. By creating a tight temporal correlation rule (e.g., within 30 seconds) between a network event and a suspicious process creation (like powershell.exe or a process in a temp directory), we can build a high-fidelity alert that strongly suggests a command was received and acted upon.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek mqtt.log'
      - 'Windows Event ID 4688'
      - 'Endpoint devices (workstations and servers)'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'CORRELATE on host_id: (pub/sub network_event) followed by (suspicious process_event) within 30 seconds. ALERT on correlation.'
  - question: 'Is a host exhibiting an unusual increase in the frequency of suspicious processes being executed immediately after pub/sub network activity?'
    context: |
      This question builds upon the symbolic correlation by looking for statistical deviations over time. While a single correlated event is suspicious, a sudden increase in the rate of these events on a specific host is a major red flag. It could indicate that an adversary is actively using the C2 channel. Baselining this behavior per-host and alerting on spikes helps to identify when a compromised host becomes active.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek mqtt.log'
      - 'Windows Event ID 4688'
      - 'Endpoint devices (workstations and servers)'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'CALCULATE daily rate of correlated_events per host. ALERT if rate > 99th_percentile(host_30_day_baseline).'
  - question: 'Can a machine learning model be used to score the risk of a process execution that occurs shortly after pub/sub traffic?'
    context: |
      This question aims to create a sophisticated risk scoring system for correlated events. Instead of a binary alert, a supervised model (like Random Forest) can evaluate a combination of features (time delta, IP reputation, process name, parent process, command-line arguments) to assign a risk score. This allows analysts to prioritize the most dangerous-looking events, reducing alert fatigue and focusing on the highest-probability threats.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek mqtt.log'
      - 'Windows Event ID 4688'
      - 'Endpoint devices (workstations and servers)'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - query_type: 'pseudocode'
        query: 'SCORE correlated event_pairs with random_forest_model(features=[time_delta, ip_rep, process_name, parent_process, cmd_args]). ALERT on high_risk_score.'