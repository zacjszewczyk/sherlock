name: T1055.003: Thread Execution Hijacking
id: f3a4b2c1-d0e9-4f8a-b7c6-5d4e3f2a1b09
description: This playbook helps identify adversaries attempting to elevate privileges or evade defenses using Thread Execution Hijacking (T1055.003). It focuses on detecting suspicious process access events, particularly when a process attempts to write to the memory of another, often higher-integrity, process. The investigation looks for known malicious processes initiating access, statistically rare access patterns between processes of different integrity levels, rapid sequences of access requests indicative of manipulation, and subsequent malicious activity (like accessing sensitive resources or making unusual network connections) from a process that was recently targeted for access.
type: technique
related:
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious process attempting to access a higher-privilege process with memory write permissions?
    context: This question aims to detect a classic privilege escalation pattern where a confirmed malicious process attempts to inject code into a process with more permissions. By joining process access logs with threat intelligence, analysts can directly identify this high-confidence indicator of compromise.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4688
      - User Workstations
      - Critical Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Sysmon EID 10
          JOIN with threat_intel_feed ON source_process_hash
          WHERE source_integrity_level < target_integrity_level
          AND granted_access IN (0x0020, 0x0008, 0x1F0FFF)
          ALERT high_severity
  - question: Is a process demonstrating statistically rare access to a higher-integrity process with write permissions?
    context: This question helps uncover novel or unknown threats that aren't on threat intelligence feeds. By establishing a baseline of normal process interactions, analysts can flag statistically improbable events, such as a low-integrity process writing to a high-integrity one for the first time, which is highly indicative of a hijacking attempt.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4688
      - User Workstations
      - Critical Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          PROFILE frequency of (SourceImage, TargetImage, GrantedAccess) tuples from Sysmon EID 10
          SEARCH Sysmon EID 10
          WHERE source_integrity_level < target_integrity_level
          AND granted_access includes memory_write_permissions
          AND frequency_of_tuple < 1st_percentile
          FLAG as anomalous
  - question: Can a machine learning model identify process access events as malicious based on their attributes?
    context: This question leverages supervised machine learning to automate the detection of complex hijacking patterns. By training a model on features like process names, integrity levels, and access rights, analysts can create a sophisticated detection mechanism that can score and alert on suspicious events in real-time with a high degree of accuracy.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4688
      - User Workstations
      - Critical Application Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          INPUT new Sysmon EID 10 event
          EXTRACT features (SourceImage, TargetImage, IntegrityLevels, GrantedAccess, parent_process, is_on_ti_feed)
          SCORE with pre-trained classification model
          IF classification == 'malicious' AND confidence_score > 0.9
          ALERT high_severity
  - question: Is a process rapidly requesting thread suspension, memory writing, and context setting against another process?
    context: This question looks for the specific sequence of actions required to perform thread hijacking. An attacker must typically suspend a thread, write malicious code into its memory space, and then alter the thread's context to execute that code. Detecting this combination of access requests from a non-debugger process within a short time window is a strong indicator of an active hijacking attempt.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 8
      - All Windows Endpoints and Servers, especially those running critical services.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Sysmon EID 10
          GROUP by SourceProcessGUID, TargetProcessGUID over 2_second_window
          WHERE SourceImage NOT IN (debugger_allowlist)
          AND set_of_GrantedAccess contains (0x0002, 0x0020, 0x0100)
          TRIGGER alert
  - question: Is a process exhibiting an unusual variety of access requests, suggesting exploratory or malicious behavior?
    context: Benign processes typically request the same limited set of access rights repeatedly. This question aims to detect an adversary's process that is probing or manipulating other processes by looking for a sudden, anomalous increase in the variety (entropy) of access rights it requests. Such a deviation from baseline behavior can signal a compromise.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 8
      - All Windows Endpoints and Servers, especially those running critical services.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each process over 5_minute_window
          CALCULATE shannon_entropy of GrantedAccess codes from Sysmon EID 10
          COMPARE to historical baseline for that process_name
          IF current_entropy > (baseline_mean + 3 * baseline_std_dev)
          ALERT anomaly
  - question: Does a process's sequence of actions deviate from learned benign behavior?
    context: This question uses an unsupervised learning model (LSTM autoencoder) to understand the "normal" sequence of operations for a process. When a process is hijacked, its subsequent actions will likely not match its trained profile, resulting in a high reconstruction error from the model. This allows for the detection of novel hijacking techniques without pre-defined rules.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 8
      - All Windows Endpoints and Servers, especially those running critical services.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          INPUT sequence of (EventID, GrantedAccess, TargetImage) for a process
          FEED into pre-trained LSTM autoencoder model
          IF reconstruction_error > anomaly_threshold
          FLAG process as potential hijacking attempt
  - question: Is a low-integrity process successfully opening a handle to a high-integrity process with write or context-setting rights?
    context: This question targets the core of a privilege escalation attempt. A process with low or medium integrity should never have a legitimate reason to write to the memory of a high or system integrity process. This rule directly detects this explicit violation of the Windows security model, serving as a high-fidelity alert for thread hijacking.
    answer_sources:
      - Sysmon Event ID 10
      - All Windows Endpoints and Servers, with a focus on systems processing sensitive data.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH Sysmon EID 10
          WHERE SourceIntegrityLevel IN ('Low', 'Medium')
          AND TargetIntegrityLevel IN ('High', 'System')
          AND GrantedAccess IN (0x0020, 0x0100)
          ALERT high_severity
  - question: Has a statistically improbable, high-risk process access event occurred?
    context: This question uses a probabilistic approach to find the "needles in the haystack." By baselining all process access combinations across the enterprise, any event that is both high-risk (low-to-high integrity with write access) and extremely rare (e.g., <0.01% probability) can be automatically flagged as a significant anomaly requiring immediate investigation.
    answer_sources:
      - Sysmon Event ID 10
      - All Windows Endpoints and Servers, with a focus on systems processing sensitive data.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          CALCULATE historical probability of all (SourceIntegrityLevel, TargetIntegrityLevel, GrantedAccess) tuples
          SEARCH new Sysmon EID 10 event
          IF event_is_low_to_high_integrity_write
          AND probability_of_tuple < 0.0001
          FLAG as high-risk anomaly
  - question: Are there outlier clusters of process access events that represent rare and potentially malicious interactions?
    context: This question applies density-based clustering to identify anomalous process interactions without pre-defined rules. Normal, frequent activities will form large, dense clusters. Malicious activities, like thread hijacking, are often rare and will appear as small, isolated clusters or noise points, making them easy to spot for an analyst.
    answer_sources:
      - Sysmon Event ID 10
      - All Windows Endpoints and Servers, with a focus on systems processing sensitive data.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          APPLY DBSCAN clustering to Sysmon EID 10 data using features (SourceIntegrityLevel, TargetIntegrityLevel, GrantedAccess)
          IDENTIFY outlier points or small clusters
          INVESTIGATE these rare interaction patterns
  - question: After being targeted by a suspicious access event, did a process attempt to access sensitive system resources like the SAM or LSA secrets?
    context: This question helps confirm a successful compromise by linking a potential hijacking event with post-exploitation activity. If a process is targeted for injection and then immediately tries to access credentials or dump LSASS, it's highly likely the hijack was successful and the adversary is escalating their attack.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4663
      - Windows Event ID 4657
      - Sysmon Event ID 3
      - Zeek conn.log
      - Domain Controllers
      - Certificate Authorities
      - Servers hosting LSA secrets
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY suspicious Sysmon EID 10 event, get TargetProcessGUID
          MONITOR TargetProcessGUID for 5 minutes
          IF TargetProcessGUID accesses '\\SAM' (EID 4663)
          OR accesses 'HKLM\\SECURITY\\Policy\\Secrets' (EID 4657)
          OR creates lsass.exe dump (Sysmon EID 1)
          TRIGGER critical alert
  - question: Following a potential hijack, did the target process perform a series of statistically rare actions?
    context: This question seeks to identify a compromised process by its abnormal post-hijack behavior. By baselining the normal actions of a process (child processes, network activity, etc.), any deviation after a suspicious access event can be scored for rarity. A high cumulative rarity score indicates the process is no longer behaving as expected and is likely compromised.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4663
      - Windows Event ID 4657
      - Sysmon Event ID 3
      - Zeek conn.log
      - Domain Controllers
      - Certificate Authorities
      - Servers hosting LSA secrets
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY high-risk Sysmon EID 10 event, get target process
          MONITOR target process actions for 10 minutes
          SCORE rarity of each action against its historical baseline
          IF cumulative_rarity_score > 99th_percentile
          FLAG for investigation
  - question: Did a critical system process exhibit anomalous behavior after being targeted by a high-risk access event?
    context: This question applies anomaly detection to the behavior of critical processes (like lsass.exe) post-injection. Since these processes have highly predictable behavior, any deviation in metrics like network traffic or CPU usage after a potential hijack event serves as strong corroborating evidence of a successful compromise.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4663
      - Windows Event ID 4657
      - Sysmon Event ID 3
      - Zeek conn.log
      - Domain Controllers
      - Certificate Authorities
      - Servers hosting LSA secrets
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY high-risk Sysmon EID 10 targeting a critical process
          FEED subsequent behavioral metrics (CPU, network, I/O) into a pre-trained anomaly detection model (e.g., Isolation Forest)
          IF model classifies behavior as 'anomaly'
          ALERT as confirmed hijack
  - question: Is a trusted process making network connections to a known malicious destination after being targeted for memory-write access?
    context: This question aims to detect defense evasion where an adversary hijacks a trusted process (e.g., svchost.exe) to bypass firewalls. By correlating a suspicious process access event with a subsequent outbound connection to a malicious IP from a threat feed, analysts can catch the adversary using a legitimate process for C2 communications.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Sysmon Event ID 10
      - Sysmon Event ID 3
      - Network Egress Points
      - DNS Servers
      - User Workstations
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH for network connection (Sysmon EID 3 or Zeek) to malicious_IP
          IF initiating_process is a common OS process (e.g., svchost.exe)
          SEARCH for Sysmon EID 10 in preceding 5 minutes where process was the target
          IF found, ALERT
  - question: Is a trusted process, after being targeted for injection, connecting to a geographically or organizationally rare network destination?
    context: This question helps find C2 communications that aren't on a threat feed. Trusted processes usually connect to a predictable set of destinations. If, after a potential hijack, a process connects to a country or network (ASN) it has never connected to before, it's a strong anomaly indicative of malicious C2 activity masquerading as legitimate traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Sysmon Event ID 10
      - Sysmon Event ID 3
      - Network Egress Points
      - DNS Servers
      - User Workstations
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY process targeted by potential injection (Sysmon EID 10)
          MONITOR subsequent network connections (Zeek conn.log)
          COMPARE destination country/ASN to historical baseline for that process
          IF destination is not in top 95% of historical destinations
          FLAG as anomalous connection
  - question: Can a machine learning model classify network connections from a recently targeted process as malicious?
    context: This question uses a trained model to scrutinize network traffic from a potentially hijacked process. By analyzing rich network features (port, duration, data volume, TLS fingerprint), the model can identify subtle signs of malicious C2 communication that might otherwise be missed, providing a powerful detection layer for evasive threats.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Sysmon Event ID 10
      - Sysmon Event ID 3
      - Network Egress Points
      - DNS Servers
      - User Workstations
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY whitelisted process targeted by Sysmon EID 10
          FEED subsequent network connections (Zeek logs) to classification model
          IF model classifies connection as 'malicious' with high confidence
          TRIGGER alert
  - question: Is a commonly whitelisted process being accessed with memory-write permissions?
    context: Adversaries specifically target common, trusted processes (like browsers or system services) for hijacking because their network activity is often ignored. This question creates a watchlist of these high-value targets and alerts whenever any process attempts to write to their memory, providing early warning of a likely defense evasion attempt.
    answer_sources:
      - Sysmon Event ID 10
      - User Workstations
      - Application Servers
      - any system with internet access.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          DEFINE watchlist = ['explorer.exe', 'svchost.exe', 'chrome.exe', 'firefox.exe']
          SEARCH Sysmon EID 10
          WHERE TargetImage IN watchlist
          AND GrantedAccess IN (0x0020, 0x0100)
          ALERT medium_severity
  - question: Is there a spike in suspicious access attempts against a specific, commonly abused process?
    context: This question helps detect a targeted campaign against a specific application. While a single access attempt might be noise, a sudden increase in the number of attempts to write to 'svchost.exe' across the enterprise, for example, is a strong indicator of a widespread, automated attack and warrants immediate investigation.
    answer_sources:
      - Sysmon Event ID 10
      - User Workstations
      - Application Servers
      - any system with internet access.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each process on watchlist
          CALCULATE daily count of suspicious access attempts (Sysmon EID 10 with write perms)
          COMPARE to historical baseline for that process
          IF daily_count > (baseline_mean + 3 * baseline_std_dev)
          ALERT on potential campaign
  - question: Are there anomalous interactions between distinct communities of processes?
    context: This question uses graph analysis to model the ecosystem of process interactions. Normal operations form tight clusters (e.g., Office apps interacting with each other). An edge that bridges two unrelated clusters, like a Word document process accessing a core system service like svchost.exe, is a structural anomaly highly indicative of an evasion attempt.
    answer_sources:
      - Sysmon Event ID 10
      - User Workstations
      - Application Servers
      - any system with internet access.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          MODEL Sysmon EID 10 data as a graph (processes=nodes, access=edges)
          APPLY community detection algorithm
          IDENTIFY and ALERT on edges that connect nodes in disparate communities
  - question: After being targeted for injection, did a legitimate process spawn an uncharacteristic child process like cmd.exe?
    context: This question links a potential cause (process injection) with a common effect (spawning a shell). A process like 'svchost.exe' should not be spawning 'cmd.exe'. If this behavior is observed shortly after 'svchost.exe' was the target of a memory-write event, it strongly suggests the injection was successful and the adversary is now executing commands.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints
      - Domain Controllers
      - DNS Servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY suspicious Sysmon EID 10 event, get TargetProcessGUID
          MONITOR for 5 minutes
          IF TargetProcessGUID is ParentProcessGUID for child process ('cmd.exe', 'powershell.exe') in Sysmon EID 1
          TRIGGER alert
  - question: Following a potential hijack, did the target process spawn a rare child process or make a high-entropy DNS query?
    context: This question uses multiple data points to confirm a compromise. It checks if the hijacked process spawned a child that is statistically rare for it (e.g., explorer.exe spawning ftp.exe). Concurrently, it checks for signs of algorithmic domain generation (DGA) in DNS queries, which is a common C2 technique. A hit on either is a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints
      - Domain Controllers
      - DNS Servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY target process from suspicious Sysmon EID 10
          MONITOR subsequent activity
          FLAG if child process is in bottom 1% of historical frequency
          FLAG if DNS query from host has Shannon entropy in 99th percentile
  - question: Did the behavior of a whitelisted process (child processes, network activity) become anomalous after it was targeted for injection?
    context: This question uses a holistic, multivariate model to detect subtle changes in a process's behavior post-injection. By monitoring multiple behavioral metrics simultaneously, an anomaly detection algorithm can spot deviations from the norm that might be missed when looking at each metric in isolation, providing a robust method for detecting a successful hijack.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 10
      - Zeek conn.log
      - Zeek dns.log
      - All Windows Endpoints
      - Domain Controllers
      - DNS Servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY whitelisted process targeted by suspicious Sysmon EID 10
          FEED subsequent time series data (child process rate, network rate, DNS entropy) into anomaly detection model
          IF model flags a significant anomaly
          ALERT on likely hijack
  - question: Is a process communicating over a non-standard port shortly after being the target of a suspicious access event?
    context: This question aims to detect hijacked processes being used for C2 on unusual ports. By defining the expected network behavior for common applications (e.g., browsers use ports 80/443), any connection to a non-standard port, especially after a potential injection event, becomes a high-confidence indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Sysmon Event ID 3
      - Sysmon Event ID 10
      - Network Egress Points
      - Internal Network Segments
      - DNS servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          DEFINE process-to-port allowlist (e.g., 'chrome.exe' -> [80, 443])
          SEARCH for network connection (Sysmon EID 3 or Zeek)
          IF process is on allowlist AND destination_port is NOT on its list
          AND process was recently targeted in suspicious Sysmon EID 10
          TRIGGER alert
  - question: Is a process using a network protocol or port that is statistically rare for it, following a potential injection?
    context: This question moves beyond static rules to a data-driven approach. By creating a historical frequency distribution of all (protocol, port) pairs for each process, it can detect when a potentially hijacked process begins communicating in a way that is abnormal for it. This can uncover novel C2 channels that don't use commonly known ports.
    answer_sources:
      - Zeek conn.log
      - Sysmon Event ID 3
      - Sysmon Event ID 10
      - Network Egress Points
      - Internal Network Segments
      - DNS servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          IDENTIFY process targeted for injection (Sysmon EID 10)
          FOR subsequent network connections
          CHECK historical frequency of (protocol, destination_port) pair for that process_name
          IF frequency < 1%
          FLAG as anomalous network behavior
  - question: Is a critical system process that should never connect to the network initiating any outbound connection?
    context: This question establishes a "zero-trust" policy for core system processes that have no legitimate reason to initiate outbound network traffic (e.g., lsass.exe, winlogon.exe). Any network connection from these processes is an immediate, high-confidence indicator of a severe compromise, likely stemming from a process injection or other hijacking technique.
    answer_sources:
      - Zeek conn.log
      - Sysmon Event ID 3
      - Sysmon Event ID 10
      - Network Egress Points
      - Internal Network Segments
      - DNS servers.
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          DEFINE no_network_process_list = ['lsass.exe', 'winlogon.exe']
          TRAIN One-Class SVM model on benign data for these processes
          FEED any new network event (Sysmon EID 3) from these processes to the model
          IF model classifies as 'anomaly'
          TREAT as critical compromise alert