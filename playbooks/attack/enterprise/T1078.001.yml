name: T1078.001: Default Accounts
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: >
  This playbook aims to detect adversarial use of default accounts across the attack lifecycle. This includes identifying initial access via successful remote logins from external IPs, particularly for dormant or rarely used accounts, and detecting precursor scanning activity. It also covers persistence techniques, such as a default account creating a scheduled task or service, or a non-interactive account spawning a shell. Privilege escalation is addressed by looking for default accounts running credential dumping tools or adding users to privileged groups. Finally, it helps uncover defense evasion tactics like a default account disabling security services, clearing audit logs, or bypassing network proxies.
type: technique
related:
  - TA0001: Initial Access
  - TA0003: Persistence
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known default accounts being used for successful remote logins from external IP addresses?
    context: >
      This question aims to detect the most direct form of default account abuse for initial access. Adversaries often scan for internet-facing systems and attempt to log in with common default credentials like 'admin' or 'root'. A successful remote login (Logon Type 3 or 10) from a non-internal (non-RFC1918) IP address using a username from a predefined watchlist is a high-confidence indicator of a compromise. Cross-referencing with network logs helps confirm the external origin of the connection.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Application/Appliance Authentication Logs
      - NAI: DMZ-hosted application servers, VPN Concentrators, Internet-facing network appliances (firewalls, routers), Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          SEARCH authentication logs (WinEvent:4624) WHERE logon_type IN [3, 10] AND username IN <default_account_watchlist> AND source_ip NOT IN <rfc1918_ranges>.
  - question: Has a rarely used or dormant default account successfully authenticated from an external source?
    context: >
      Adversaries may discover and use default accounts that are rarely or never used by legitimate administrators. This question identifies anomalous logins by focusing on statistical rarity. By calculating the historical login frequency for all accounts, a successful login from an external IP by an account in the bottom percentile (e.g., 5%) is flagged. This is especially significant if the account is a known default, indicating the activation of a forgotten or dormant account.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Application/Appliance Authentication Logs
      - NAI: DMZ-hosted application servers, VPN Concentrators, Internet-facing network appliances (firewalls, routers), Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          For each external successful login, CALCULATE historical login frequency for the username over 90 days. ALERT if frequency is in bottom 5th percentile.
  - question: Can we use machine learning to predict if an external login is suspicious default account abuse?
    context: >
      This question leverages machine learning to build a nuanced detection model. By training a classifier on features of an authentication event—such as whether the username is a default, the IP's geographic origin and reputation (ASN), time of day, and historical login patterns from that source—the model can learn to distinguish between benign administrative access and malicious login attempts, providing a probabilistic score of risk for each external login.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Application/Appliance Authentication Logs
      - NAI: DMZ-hosted application servers, VPN Concentrators, Internet-facing network appliances (firewalls, routers), Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL Random Forest. FEATURES: is_default_user, source_ip_geo, source_ip_asn, time_of_day, historical_success_ratio. PREDICT if login is 'suspicious'.
  - question: Are external IPs making HTTP requests using User-Agent strings associated with known scanning or exploitation tools?
    context: >
      Before attempting to use default credentials, adversaries often use automated tools to discover login pages. This question aims to detect this precursor activity by searching for HTTP requests from external IPs that contain User-Agent strings of common offensive security tools like 'metasploit', 'nmap', or 'hydra'. An alert on such a request, especially if targeted at a login page, indicates that a system is being actively profiled for attack.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - NAI: Internet gateway/edge firewalls, Externally-facing web servers, DMZ network segments
    range: last 90 days
    queries:
      - pseudocode: >
          SEARCH http logs (Zeek:http.log) WHERE source_ip IS external AND user_agent IN <scanner_tool_list>.
  - question: Is a single external IP address exhibiting scanning behavior by attempting to connect to an unusually high number of hosts or ports?
    context: >
      This question seeks to identify scanning behavior by analyzing connection patterns. An attacker probing a network will connect to many different hosts or ports from a single source IP in a short time. By grouping connection logs by source IP and counting the unique destination hosts and ports within a small window (e.g., 5 minutes), we can identify IPs that exceed a statistical threshold (e.g., 99th percentile), which is indicative of horizontal or vertical scanning.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - NAI: Internet gateway/edge firewalls, Externally-facing web servers, DMZ network segments
    range: last 90 days
    queries:
      - pseudocode: >
          From conn logs, GROUP BY source_ip over 5 mins. COUNT unique destination_ips, destination_ports. ALERT if count > 99th percentile.
  - question: Can unsupervised clustering identify external IP addresses that are acting as scanners?
    context: >
      This question uses machine learning to automatically group IP addresses based on their network behavior, separating normal traffic from scanners. By feeding features like the number of unique hosts/ports contacted and the ratio of successful to rejected connections into a clustering algorithm like DBSCAN, IPs with similar, aggressive scanning patterns will be grouped together or identified as outliers. This allows for the discovery of scanning activity without pre-defined rules or thresholds.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - NAI: Internet gateway/edge firewalls, Externally-facing web servers, DMZ network segments
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL DBSCAN. FEATURES: unique_dest_ip_count, unique_dest_port_count, success_to_reject_ratio. IDENTIFY outlier clusters as scanners.
  - question: Has a built-in default account successfully authenticated to a specific host for the first time?
    context: >
      This question detects the novel use of a default account on a specific system. By maintaining a historical record of all successful (hostname, username) login pairs, any new successful login by a default account that has never been seen on that host before is flagged. This is a simple but powerful way to detect lateral movement or initial access to a new machine using a common, built-in account like 'Administrator' or 'root'.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Application/Appliance Authentication Logs
      - NAI: Domain Controllers, Member Servers, Endpoint workstations, Virtualization Hosts (ESXi)
    range: last 90 days
    queries:
      - pseudocode: >
          MAINTAIN state table of (hostname, username) login pairs. ALERT if new login event involves a default account and the pair is not in the table.
  - question: Is a successful login by a default account a statistical anomaly based on the account's historical activity on that host?
    context: >
      This question identifies anomalous logins by focusing on rarity. For each host, a baseline of accounts that have logged in over the last 180 days is established. A successful login by a default account that has a historical login count of zero on that specific asset is a high-severity statistical anomaly. The anomaly's score can be increased if the login is remote (Type 3 or 10), indicating a higher risk.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Application/Appliance Authentication Logs
      - NAI: Domain Controllers, Member Servers, Endpoint workstations, Virtualization Hosts (ESXi)
    range: last 180 days
    queries:
      - pseudocode: >
          For each host, BASELINE login history. ALERT if a default account logs in successfully but its historical login count for that host is zero.
  - question: Can machine learning identify anomalous login behaviors involving default accounts?
    context: >
      This question uses unsupervised machine learning to find logins that do not conform to established patterns. By clustering login events based on features like hostname, username, source IP location, and time of day, the algorithm learns what 'normal' activity looks like. Any login involving a default account that is marked as an outlier or noise by the algorithm is flagged for investigation, as it represents a deviation from all known good behaviors.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Application/Appliance Authentication Logs
      - NAI: Domain Controllers, Member Servers, Endpoint workstations, Virtualization Hosts (ESXi)
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL DBSCAN. FEATURES: hostname, username, source_ip_geo, time_of_day. ALERT on logins involving default accounts that are flagged as outliers.
  - question: Is a default account being targeted by a credential stuffing or password spraying attack?
    context: >
      This question aims to detect two common brute-force variants. A credential stuffing attack is identified when a high number of failed logins for a single default username are observed from many distinct source IPs. A password spraying attack is identified when a high number of failed logins for many different usernames originate from a single source IP. Defining thresholds (e.g., >10 sources in 15 mins) creates a high-fidelity alert for these attack patterns.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - NAI: Authentication servers (Active Directory), Externally-facing services, VPN endpoints
    range: last 90 days
    queries:
      - pseudocode: >
          RULE 1 (Stuffing): ALERT on >10 distinct source IPs for 1 default user in 15 mins. RULE 2 (Spraying): ALERT on >20 distinct users from 1 source IP in 15 mins.
  - question: Are there statistically significant spikes in failed login attempts indicative of credential stuffing or password spraying?
    context: >
      This question uses statistical deviations to detect brute-force attacks. By analyzing failed logins over a sliding window, we can spot anomalies. For potential credential stuffing, we alert if the number of distinct source IPs for a single default username exceeds its moving average by a set number of standard deviations. For password spraying, we alert if the number of distinct usernames from a single source IP exceeds its baseline.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - NAI: Authentication servers (Active Directory), Externally-facing services, VPN endpoints
    range: last 90 days
    queries:
      - pseudocode: >
          Over a 30-min window, calculate distinct source IPs per user and distinct users per source IP. ALERT if count is >3 standard deviations above the average.
  - question: Can a time-series model detect a large-scale brute-force attack against default accounts?
    context: >
      This question uses a machine learning model to detect significant deviations in the overall volume of failed logins. By training a time-series model (like ARIMA or LSTM) on the normal minute-by-minute rate of failed authentications (Event ID 4625), the system can learn the typical patterns of login failures. An alert is generated when the observed volume suddenly and significantly exceeds the model's forecasted volume, indicating a potential large-scale attack.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - NAI: Authentication servers (Active Directory), Externally-facing services, VPN endpoints
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL LSTM on failed login volume per minute. ALERT if observed volume significantly deviates from the model's forecast.
  - question: Is a process executed by a default account making a network connection to a known malicious destination?
    context: >
      This question seeks to find command-and-control (C2) activity by cross-referencing network connections with threat intelligence. It works by identifying processes running under a default account and then checking the destination IP addresses of their network connections against a feed of known malicious IPs. A match provides a high-confidence indicator that a compromised default account is being used to maintain persistence.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - NAI: Endpoint devices, Servers, Network egress points
    range: last 90 days
    queries:
      - pseudocode: >
          JOIN process events (4688) with network logs (Zeek) for default accounts. ALERT if destination_ip is in <threat_intel_feed>.
  - question: Is a process run by a default account connecting to statistically rare domains or IP addresses?
    context: >
      This question aims to find C2 activity by looking for anomalous network destinations. Instead of relying on known-bad indicators, it identifies connections to destinations that are rarely seen across the entire organization. This could be a newly registered domain or an IP address with a very low connection count. Such statistically rare connections made by a process running as a default account are highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - NAI: Endpoint devices, Servers, Network egress points
    range: last 90 days
    queries:
      - pseudocode: >
          For connections from default account processes, FLAG destination IPs/domains in the bottom 5th percentile of prevalence across the organization.
  - question: Can machine learning detect C2 beaconing behavior from processes running under default accounts?
    context: >
      This question uses a supervised model to identify the rhythmic, periodic network traffic characteristic of C2 beaconing. By extracting features like connection duration, bytes sent/received, and the time between connections to the same destination, a classifier can be trained to distinguish this pattern from normal network traffic. Applying this model to connections from default account processes can reveal hidden persistence mechanisms.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - NAI: Endpoint devices, Servers, Network egress points
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL Random Forest to classify network flows. FEATURES: duration, bytes_sent, inter-arrival_time. PREDICT if flow from default account is 'beaconing'.
  - question: Has a default account created or modified a common persistence mechanism like a Scheduled Task, Service, or Registry Run Key?
    context: >
      This question looks for direct evidence of an adversary establishing persistence. The creation of a scheduled task (Event ID 4698), a new service (Event ID 7045), or modification of a registry run key (Event ID 4657) by a built-in default account is inherently suspicious. Such actions are rarely legitimate and are a common technique for ensuring malware or backdoors survive a system reboot.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Windows Event ID 7045
      - Windows Event ID 4657
      - NAI: Endpoint workstations, Servers (especially Domain Controllers and critical application servers)
    range: last 90 days
    queries:
      - pseudocode: >
          ALERT if Event ID IN [4698, 7045, 4657] AND Subject/Username is a known default account.
  - question: Does a new persistence mechanism created by a default account contain obfuscated commands or point to an unusual location?
    context: >
      This question seeks to identify malicious persistence entries by analyzing their properties. Adversaries often use obfuscation to hide their commands, which can be detected by measuring the character entropy of the command-line string. A high entropy score is anomalous. Additionally, pointing the persistence mechanism to an executable in a world-writable directory like C:\Users\Public is a common tactic to look for.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Windows Event ID 7045
      - Windows Event ID 4657
      - NAI: Endpoint workstations, Servers (especially Domain Controllers and critical application servers)
    range: last 90 days
    queries:
      - pseudocode: >
          For new persistence by default accounts, CALCULATE entropy of command string. ALERT if entropy or executable path is anomalous.
  - question: Can machine learning predict if a new service or task created by a default account is malicious?
    context: >
      This question uses a classification model to assess the risk of new persistence mechanisms. By training a model with features like the creating account (is it default?), executable path, presence of suspicious arguments (e.g., 'powershell -enc'), and the executable's hash reputation, the system can make an intelligent prediction about whether the new task or service is malicious, going beyond simple rule-based detections.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Windows Event ID 7045
      - Windows Event ID 4657
      - NAI: Endpoint workstations, Servers (especially Domain Controllers and critical application servers)
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL a classifier. FEATURES: creating_account_type, exe_path, suspicious_args, hash_reputation. PREDICT if new persistence is 'malicious'.
  - question: Has a non-interactive default service account spawned an interactive shell like PowerShell or Command Prompt?
    context: >
      This question targets a classic privilege escalation and lateral movement technique. Service accounts are meant for non-interactive processes. If a process like 'services.exe' spawns an interactive shell ('cmd.exe', 'powershell.exe') under the context of a default service account, it is a strong indicator that an attacker has compromised the account and is using it for hands-on-keyboard activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - NAI: Application Servers, Database Servers, Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          ALERT on process creation (4688) WHERE parent_process is 'services.exe' AND new_process IN ['powershell.exe', 'cmd.exe'] AND user is service account.
  - question: Is a default service account exhibiting anomalous behavior, such as creating new child processes or making unusual network connections?
    context: >
      This question aims to detect compromised service accounts by baselining their normal activity. For each default service account, a historical profile of typical parent-child process relationships and outbound network destinations is built. Any deviation from this baseline, such as spawning a new type of process or connecting to a new destination ASN, is flagged. A scoring system can be used to raise an alert when multiple deviations occur.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - NAI: Application Servers, Database Servers, Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          BASELINE normal process and network activity for each service account. SCORE and ALERT on deviations (e.g., new child process, new destination port).
  - question: Can graph-based anomaly detection identify when a default service account is being used improperly?
    context: >
      This question models system activity as a graph, where nodes are entities like processes and accounts, and edges represent actions between them. By training a model on normal activity, it learns the expected relationships. An anomaly, such as a new, previously unseen edge connecting a default web service account node to a 'powershell.exe' node, would be immediately flagged as a high-risk deviation from the learned graph of normal behavior.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - NAI: Application Servers, Database Servers, Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL system activity as a graph. TRAIN on baseline behavior. ALERT on new, high-risk edges involving default accounts (e.g., service -> powershell).
  - question: Has a previously disabled default account been re-enabled and then immediately used to log in?
    context: >
      This question detects a high-confidence attack pattern. Adversaries may enable a disabled default account for their use. This is a noisy action that can be detected. By creating a rule that chains two events together—an account enablement (Event ID 4722) followed closely by a successful logon by that same account (Event ID 4624)—we can generate a very reliable alert for malicious activity.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4722
      - Windows Event ID 4725
      - NAI: Domain Controllers, Authentication Logs Archive
    range: last 90 days
    queries:
      - pseudocode: >
          ALERT when Event 4722 (Account Enabled) for a default account is followed by Event 4624 (Successful Logon) for the same account within 5 minutes.
  - question: Has a dormant default account, which has not been used for a long time, suddenly been used to log in?
    context: >
      This question focuses on the activation of dormant accounts. By tracking the time since the last successful login for every default account, we can flag any new login where that time delta is unusually large (e.g., > 90 days, or in the 95th percentile). This is a strong statistical indicator of potential compromise, as old, forgotten accounts are prime targets for attackers. The risk is higher if the login occurs at an anomalous time.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4722
      - Windows Event ID 4725
      - NAI: Domain Controllers, Authentication Logs Archive
    range: last 90 days
    queries:
      - pseudocode: >
          For each successful login, CALCULATE days since last login for that account. ALERT if days > 95th percentile (e.g., 90 days).
  - question: Can a time-series model detect the sudden activation of a dormant default account?
    context: >
      This question applies time-series anomaly detection to the login frequency of individual default accounts. A model is trained on the daily login counts for each account to learn its normal rhythm. For a dormant account, this rhythm is a flat line at zero. An alert is generated when the observed login count for a previously dormant account significantly exceeds the model's forecast (which would be zero), indicating a sudden, anomalous activation.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4722
      - Windows Event ID 4725
      - NAI: Domain Controllers, Authentication Logs Archive
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL time-series of daily logins for each default account. ALERT if observed logins for a dormant account exceed the forecast.
  - question: Is a default account being used to execute known credential theft tools like Mimikatz?
    context: >
      This question looks for the most direct evidence of credential dumping. By scanning the command-line arguments of every process executed by a default account (from Event ID 4688), we can search for specific strings and patterns associated with known credential theft tools. A match for signatures like 'mimikatz', 'sekurlsa::logonpasswords', or 'procdump -ma lsass.exe' is a critical, high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - NAI: All servers and endpoints, especially Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          SEARCH process creation events (4688) where user is a default account AND command line contains signatures for 'mimikatz', 'procdump lsass', etc.
  - question: Is a default account executing commands with unusually long or obfuscated arguments?
    context: >
      This question aims to detect malicious commands that are not caught by signature-based methods. Adversaries often use encoding or obfuscation to hide their commands. This results in command-line strings that are either unusually long or have high character entropy (randomness). By baselining the normal length and entropy of commands run by default accounts, we can alert when a new command exceeds these baselines by a significant margin (e.g., 3 standard deviations).
    answer_sources:
      - Windows Event ID 4688
      - NAI: All servers and endpoints, especially Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          BASELINE average length/entropy of commands from default accounts. ALERT if a new command's length/entropy is >3 standard deviations from the baseline.
  - question: Can machine learning classify command lines executed by default accounts as malicious?
    context: >
      This question uses a text classification model to determine if a command is malicious based on its content. By training a model on a large, labeled dataset of benign and malicious command lines, it can learn the characteristics of each. All new commands executed by default accounts can then be fed to the model for classification. An alert is triggered if the model flags a command as 'malicious' with high confidence.
    answer_sources:
      - Windows Event ID 4688
      - NAI: All servers and endpoints, especially Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL Naive Bayes on command lines. FEATURES: TF-IDF vectors. PREDICT if a new command from a default account is 'malicious'.
  - question: Has a default account added another user to a high-privilege group like 'Domain Admins'?
    context: >
      This question detects a critical privilege escalation action. The act of adding a user to a powerful administrative group (e.g., Administrators, Domain Admins, Enterprise Admins) is a key objective for an attacker. If the account performing this action is a built-in default account, it is extremely suspicious and almost never a legitimate administrative action. Monitoring for these specific events (4732, 4728, 4756) provides a critical, high-fidelity alert.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - NAI: Domain Controllers, High-value servers
    range: last 90 days
    queries:
      - pseudocode: >
          ALERT on Event ID [4732, 4728, 4756] where a member is added to a privileged group AND the action is performed by a default account.
  - question: Is a group membership change performed by a default account a statistical outlier?
    context: >
      This question identifies anomalous privilege escalation by focusing on rarity. In a stable environment, most default accounts should never modify group memberships. By maintaining a baseline of which accounts normally add members to which groups, any change that deviates from this pattern can be flagged. A default account that has never before modified a group suddenly adding a user to 'Domain Admins' is a 'first-time' activity and a major statistical anomaly.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - NAI: Domain Controllers, High-value servers
    range: last 90 days
    queries:
      - pseudocode: >
          BASELINE which accounts modify which groups. ALERT if a default account performs a group modification for the first time, especially to a privileged group.
  - question: Can a graph-based model of Active Directory detect risky privilege escalation by a default account?
    context: >
      This question models Active Directory as a graph, with users and groups as nodes and memberships as edges. Any change to this graph, such as adding a 'member of' edge, can be scored for risk. A default account node creating a new edge from a user node to a high-privilege group node (like 'Domain Admins') would be flagged as a high-risk event, providing a contextual and relational view of the privilege escalation attempt.
    answer_sources:
      - Windows Event ID 4732
      - Windows Event ID 4728
      - Windows Event ID 4756
      - NAI: Domain Controllers, High-value servers
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL Active Directory as a graph. SCORE the risk of any graph modification. ALERT on high-risk changes, like a default account adding a user to a privileged group.
  - question: Has a default account, not typically used for administration, performed a privileged action for the first time?
    context: >
      This question identifies when a default account is used outside of its intended role. Many default accounts (e.g., for applications) should never perform administrative actions like creating users (Event ID 4720) or services (Event ID 7045). By keeping a state table of (account, privileged_action) pairs, we can detect the first time a specific default account performs a specific privileged action and generate a high-priority alert.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 7045
      - NAI: Domain Controllers, Member Servers, Endpoint workstations
    range: last 90 days
    queries:
      - pseudocode: >
          MAINTAIN a state table of (account, privileged_event). ALERT if a default account performs a privileged action not in its history.
  - question: Has a default account shown a sudden spike in the frequency of privileged actions?
    context: >
      This question uses statistics to find anomalous behavior. For each default account, we track the rate of privileged actions over time. For most default accounts, this rate should be zero. A sudden increase in the count of events like user creations or service installations from an account that historically performs none is a significant statistical anomaly. Alerting if the daily count simply exceeds zero is an effective strategy.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 7045
      - NAI: Domain Controllers, Member Servers, Endpoint workstations
    range: last 90 days
    queries:
      - pseudocode: >
          TRACK the daily count of privileged actions per default account. ALERT if the daily count for an account that is normally zero becomes > 0.
  - question: Is a default account performing actions that are uncharacteristic of its peer group?
    context: >
      This question uses peer group analysis to spot outliers. Default accounts can be grouped by role (e.g., OS accounts, database accounts, virtualization accounts). By modeling the typical behaviors of each group, we can identify when one account deviates. For example, if the 'vpxuser' account (a VMware account) suddenly starts creating local users on a host, it is behaving unlike its peers and should be flagged as an anomaly.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 7045
      - NAI: Domain Controllers, Member Servers, Endpoint workstations
    range: last 90 days
    queries:
      - pseudocode: >
          GROUP default accounts by role. MODEL the typical behavior of each group. ALERT if an account performs actions that are anomalous for its peer group.
  - question: Did a process get created under a high-privilege default account shortly after a non-administrative user logged in?
    context: >
      This question aims to detect local privilege escalation exploits. The attack pattern involves a low-privilege user logging in, running an exploit, and causing a new process to be created under a high-privilege context like the SYSTEM account. By correlating a non-admin login (Event ID 4624) with a subsequent process creation (Event ID 4688) under a default admin account on the same host, we can detect this sequence of events.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4648
      - NAI: Endpoint workstations, Jump Servers, Terminal Servers
    range: last 90 days
    queries:
      - pseudocode: >
          CORRELATE on one host: non-admin login (4624) followed within 2 minutes by process creation (4688) under a privileged default account (e.g., SYSTEM).
  - question: Is a process being created under a default account's security context but linked to a different, lower-privileged user's logon session?
    context: >
      This question looks for a statistical rarity that indicates privilege escalation. Each process creation event includes a Logon ID that links it to a user's logon session. If a process is created under the 'Administrator' account, but its Logon ID belongs to an interactive session from a standard user, this is a strong sign of an exploit. Baselining these relationships can help spot this anomalous association.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4648
      - NAI: Endpoint workstations, Jump Servers, Terminal Servers
    range: last 90 days
    queries:
      - pseudocode: >
          ALERT if a process's user is a privileged default account, but its Logon ID maps to a different, lower-privileged user's session.
  - question: Can a sequence-based machine learning model detect an anomalous user session indicative of privilege escalation?
    context: >
      This question uses a neural network to learn what a normal user session looks like from start to finish. A session is modeled as a sequence of events (login, process creations, etc.). A sequence-to-sequence autoencoder is trained on benign sessions. When a new session is analyzed, if the model has a high reconstruction error, it means the sequence is anomalous. A low-privilege login followed by high-privilege process creation would produce a high error and trigger an alert.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4648
      - NAI: Endpoint workstations, Jump Servers, Terminal Servers
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL user sessions with a sequence-to-sequence autoencoder. ALERT on sessions with a high reconstruction error, indicating an anomalous sequence.
  - question: Is a default account being used to disable security services, clear audit logs, or alter firewall rules?
    context: >
      This question looks for active defense evasion. By monitoring process command lines (Event ID 4688) for specific commands executed by default accounts, we can detect attempts to weaken a system's defenses. Commands like 'wevtutil.exe cl Security', 'netsh advfirewall set allprofiles state off', or 'Set-MpPreference -DisableRealtimeMonitoring $true' are high-confidence indicators of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - NAI: All servers and endpoints
    range: last 90 days
    queries:
      - pseudocode: >
          SEARCH process events (4688) for command lines matching a watchlist of defense evasion commands, executed by a default account.
  - question: Is a default account executing sensitive system commands more frequently than expected?
    context: >
      This question uses statistical frequency to detect anomalous use of sensitive utilities. In a well-managed environment, default accounts should rarely, if ever, run commands like 'wevtutil', 'auditpol', or 'netsh'. By tracking the daily execution count of these commands by default accounts, any count greater than zero can be treated as a statistical anomaly that warrants an immediate investigation.
    answer_sources:
      - Windows Event ID 4688
      - NAI: All servers and endpoints
    range: last 90 days
    queries:
      - pseudocode: >
          For default accounts, TRACK daily count of executions for sensitive commands ('wevtutil', 'netsh'). ALERT if count > 0.
  - question: Can natural language processing (NLP) be used to identify the intent of commands run by default accounts?
    context: >
      This question applies NLP to understand what a command is trying to do, even if it's obfuscated. A model can be trained to classify command-line arguments into categories like 'file-operation', 'network-config', or 'security-tampering'. If a command executed by a default account is classified as 'security-tampering', it provides a strong, context-aware signal of malicious intent that can trigger an investigation.
    answer_sources:
      - Windows Event ID 4688
      - NAI: All servers and endpoints
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL NLP classifier on command line intent. PREDICT category of commands from default accounts. ALERT if classified as 'security-tampering'.
  - question: Has a default account changed the system audit policy?
    context: >
      This question detects a direct attempt to tamper with security logging. Windows Event ID 4719 is generated whenever the system's audit policy is changed. This is a highly sensitive action. If the account that initiated this change is a default account, it is a critical finding and a clear sign that an adversary is attempting to cover their tracks by disabling security auditing.
    answer_sources:
      - Windows Event ID 4719
      - Windows Event ID 4688
      - NAI: Domain Controllers, Endpoint devices, Servers
    range: last 90 days
    queries:
      - pseudocode: >
          ALERT on any instance of Event ID 4719 where the Subject Account Name is a default account.
  - question: Has a critical security setting been changed by a default account outside of a planned change window?
    context: >
      This question detects unauthorized configuration changes by comparing system state over time. By taking periodic snapshots of critical security settings (like firewall rules or audit policies) and comparing them to a known-good baseline, any deviation can be identified. Correlating this change with logs that show it was made by a default account, especially outside of a maintenance window, indicates a statistically significant and suspicious event.
    answer_sources:
      - Windows Event ID 4719
      - Windows Event ID 4688
      - NAI: Domain Controllers, Endpoint devices, Servers
    range: last 90 days
    queries:
      - pseudocode: >
          PERIODICALLY compare security configurations to a baseline. If a deviation is found, CORRELATE with logs to see if a default account made the change.
  - question: Can a machine learning model detect anomalous changes to security configurations made by default accounts?
    context: >
      This question uses a time-series model to understand the normal state of security configurations over time. The model learns what settings are typically enabled or disabled. If a default account makes a change that causes the system's state to deviate significantly from the predicted normal state (e.g., suddenly disabling a firewall profile that has been enabled for years), the model flags this as an anomaly requiring investigation.
    answer_sources:
      - Windows Event ID 4719
      - Windows Event ID 4688
      - NAI: Domain Controllers, Endpoint devices, Servers
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL a time-series of security configuration states. ALERT if a change by a default account causes a state to deviate from the forecast.
  - question: Has a default account accessed, modified, or deleted critical security log files?
    context: >
      This question detects direct log tampering. By enabling file system auditing (SACLs) on sensitive directories like 'C:\Windows\System32\winevt\Logs', we can generate an alert (Event ID 4663) whenever any account attempts to access these files. If the account name is a default account and the access is for writing or deleting a log file (e.g., '.evtx'), it is a critical indicator of an adversary trying to erase their tracks.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - NAI: Log servers, All endpoints and servers where logs are stored locally
    range: last 90 days
    queries:
      - pseudocode: >
          ENABLE SACLs on log directories. ALERT on Event ID 4663 where Account Name is a default account and Object Name is a log file (e.g., *.evtx).
  - question: Is a default account exhibiting anomalous file access patterns in sensitive directories?
    context: >
      This question identifies suspicious file interaction by looking for statistical deviations. By profiling the normal file access patterns of default accounts, we can detect unusual activity. An alert could be triggered if a default account accesses a number of files in a sensitive directory that exceeds its normal baseline, or if it accesses file types (like '.evtx' or '.zip') that it has never touched before, possibly indicating log collection for exfiltration.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - NAI: Log servers, All endpoints and servers where logs are stored locally
    range: last 90 days
    queries:
      - pseudocode: >
          PROFILE normal file access for default accounts. ALERT if an account accesses an anomalous number or type of files in a sensitive directory.
  - question: Can a machine learning model detect anomalous file access by a default account?
    context: >
      This question uses a one-class SVM model to learn the boundary of 'normal' file access behavior for default accounts. The model is trained on features from benign access events, including file path, process name, and access type. Any new file access by a default account that falls outside this learned boundary is classified as an anomaly, providing a powerful way to detect novel or unexpected file interactions.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - NAI: Log servers, All endpoints and servers where logs are stored locally
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL One-Class SVM on benign file access patterns for default accounts. ALERT on any access event classified as an anomaly.
  - question: Is a host with an active default account session bypassing the corporate proxy to connect directly to the internet?
    context: >
      This question is designed to detect policy violations that could indicate C2 communication or data exfiltration. In many corporate environments, all web traffic must go through a proxy. By correlating active default account sessions on a host with network logs, we can create a rule that alerts when a direct connection to an external IP on port 80 or 443 is observed, but no corresponding entry exists in the proxy logs. This is a clear signature of proxy bypass.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4624
      - NAI: Network egress points, Proxy servers, Endpoint devices
    range: last 90 days
    queries:
      - pseudocode: >
          On a host with a default account session, ALERT if direct external connection on port 80/443 is seen in firewall/Zeek logs but not in proxy logs.
  - question: Has the ratio of proxied to direct internet traffic from a host changed significantly after a default account logged in?
    context: >
      This question uses a statistical approach to detect proxy bypass. For each endpoint, a baseline ratio of proxied versus direct-to-internet traffic is established. If this ratio dramatically shifts towards more direct connections immediately following a login by a default account, it is a strong anomaly. This indicates a change in the host's behavior that may be tied to the default account's activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4624
      - NAI: Network egress points, Proxy servers, Endpoint devices
    range: last 90 days
    queries:
      - pseudocode: >
          BASELINE ratio of proxied vs. direct traffic per host. ALERT if the ratio shifts significantly toward 'direct' after a default account login.
  - question: Can machine learning distinguish between legitimate proxied traffic and suspicious non-proxied traffic from a default account session?
    context: >
      This question uses a classifier to identify suspicious direct-to-internet traffic. The model is trained on network flow data to learn the characteristics of normal proxied and non-proxied traffic. It is then applied to all network flows from hosts with active default account sessions. If a flow is classified as 'suspicious non-proxied' (e.g., it has characteristics of web traffic but is not logged by the proxy), it is flagged as a potential policy bypass for investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Windows Event ID 4624
      - NAI: Network egress points, Proxy servers, Endpoint devices
    range: last 90 days
    queries:
      - pseudocode: >
          MODEL a classifier to distinguish proxied vs. non-proxied traffic. ALERT on traffic from default account sessions classified as 'suspicious non-proxied'.