name: T1016.002: Wi-Fi Discovery
id: d3e0b9a0-1c2d-4e8f-9a1b-3c4d5e6f7a8b
description: This playbook helps investigate if an adversary is attempting to discover Wi-Fi network information on compromised systems. This includes detecting the execution of known malicious tools by their file hash, the use of native utilities like 'netsh.exe' or 'powershell.exe' with specific commands to enumerate Wi-Fi profiles and keys, and identifying unusual process chains where these commands are spawned by non-standard parent processes like web browsers or office applications. It also covers correlating Wi-Fi discovery activity with subsequent data staging or network exfiltration and detecting discovery techniques on Linux and macOS systems, such as accessing configuration files or using the 'security' command to retrieve passwords.
type: technique
related:
- TA0007: Discovery
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a process been executed from a file whose hash matches a known indicator for Wi-Fi credential theft tools?
  context: This question aims to identify the execution of known malicious tools by directly matching the file hash of running processes against a curated threat intelligence feed. A match provides a high-confidence indicator of compromise, suggesting an adversary is using a recognized tool like Agent Tesla to steal Wi-Fi credentials. This is a direct, signature-based detection method.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows Sysmon Event ID 1
  - Threat intelligence feed of known malicious file hashes (e.g., SHA256)
  - All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process_creation_event (Sysmon EID 1, Windows EID 4688)
        CALCULATE file_hash for process_executable
        IF file_hash IN known_malicious_hashes_feed
          GENERATE high-severity alert
- question: Has a process executed from a rare or unique file hash that is not on an organizational allowlist?
  context: This question seeks to uncover new or targeted malicious tools by identifying file hashes with very low prevalence across the enterprise. Adversaries often use custom or newly compiled malware that won't be present on many systems. By calculating the number of unique hosts a file hash has appeared on over time and flagging those with statistically insignificant prevalence (e.g., bottom 1st percentile), analysts can surface suspicious executables that might be missed by signature-based methods.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows Sysmon Event ID 1
  - Organizational file hash allowlist
  - All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      # Over a 30-day rolling window
      CALCULATE prevalence (unique host count) for all file_hashes
      FOR each new file_hash not in allowlist
        IF prevalence(file_hash) < 1st_percentile_of_all_prevalences
          FLAG for manual review
- question: Does a newly observed file hash have characteristics suggesting it is a malicious tool for Wi-Fi discovery?
  context: This question leverages a machine learning model to score the reputation of file hashes. The model is trained on various features like hash prevalence, its age in the environment (first-seen/last-seen), and whether it has been associated with suspicious command-line arguments. This approach provides a more nuanced classification (benign, suspicious, malicious) than simple signature matching or prevalence counting, helping to prioritize analyst efforts on the most likely threats.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows Sysmon Event ID 1
  - Historical process execution data (hashes, command lines, timestamps)
  - All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new file_hash
        EXTRACT features (prevalence, age, associated_args, etc.)
        APPLY pre-trained reputation_model to features
        GET classification_score (benign, suspicious, malicious)
        IF classification_score is 'suspicious' or 'malicious'
          PRIORITIZE for review
- question: Has a user executed a native Windows command (netsh, powershell) specifically to enumerate or expose Wi-Fi keys?
  context: This question uses a high-fidelity detection rule to monitor process command lines and PowerShell script blocks for regular expressions that match known Wi-Fi discovery patterns, such as 'netsh wlan show profile' or 'key=clear'. An alert from this rule indicates a direct attempt to gather Wi-Fi information. The priority of the alert can be elevated if the command originates from a non-IT user or an interactive session, as this is less likely to be legitimate administrative activity.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows PowerShell Event ID 4104 (Script Block Logging)
  - Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR process command lines (EID 4688) and PowerShell script blocks (EID 4104)
      FOR each event
        IF command_line MATCHES REGEX `/(netsh|powershell).*wlan.*(show|get).*(profile|key=clear)/i`
          GENERATE alert
          IF user_is_not_IT_staff OR logon_is_interactive
            ELEVATE alert priority
- question: Is a user's execution of Wi-Fi discovery commands anomalous compared to their own historical activity?
  context: This question aims to detect malicious activity by identifying deviations from a user's normal behavior. For each user and host combination, a 30-day baseline of execution frequency and command-line complexity (entropy) for 'netsh.exe' and 'powershell.exe' is established. An alert is triggered if a user runs a Wi-Fi discovery command and either the execution count for that utility is unusually high (e.g., exceeds the 95th percentile of their baseline) or the command itself is an outlier, suggesting activity that is not typical for that user.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows PowerShell Event ID 4104 (Script Block Logging)
  - Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      # For each user-host pair, establish 30-day baseline of netsh/powershell frequency and arg entropy
      ON execution of Wi-Fi discovery command
        IF execution_frequency > 95th_percentile_of_baseline OR command_entropy is outlier
          TRIGGER alert
- question: Does a sequence of command-line executions, including Wi-Fi discovery, deviate from the normal behavior for that user's role?
  context: This question uses a sequence analysis model (like a Hidden Markov Model or LSTM) to understand the typical order of operations for different user roles. The model learns common command sequences for roles like developers or IT admins. It can then flag instances where Wi-Fi discovery commands appear in an anomalous context, such as immediately after a user opens a document from an email or just before connecting to a new domain, which could indicate a compromise chain.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows PowerShell Event ID 4104 (Script Block Logging)
  - Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Train a sequence analysis model on command-line history per user role
      FOR each new command sequence
        IF sequence contains Wi-Fi discovery command AND model flags sequence as anomalous
          FLAG for investigation
- question: Has a Wi-Fi discovery command been executed by a process spawned from an unusual parent application like a browser or Office document?
  context: This question identifies suspicious activity by looking at the process lineage. Legitimate administrative commands are typically run from an administrative shell. If a command-line interpreter executing Wi-Fi discovery commands is spawned by a non-standard parent process like a web browser (chrome.exe), email client (OUTLOOK.EXE), or Office application (WINWORD.EXE), it strongly suggests that an exploit or malicious macro was used to initiate the discovery activity.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows Sysmon Event ID 1
  - Corporate endpoints (laptops, desktops), Servers running user-facing applications.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE non_standard_parents = [WINWORD.EXE, EXCEL.EXE, chrome.exe, AcroRd32.exe, etc.]
      FOR each process_creation_event with Wi-Fi discovery arguments
        IF parent_process IN non_standard_parents
          GENERATE alert
- question: Is the parent-child process relationship that led to a Wi-Fi discovery command statistically rare in the environment?
  context: This question aims to find unusual execution chains by analyzing their prevalence. By querying process logs over a 30-day baseline, we can calculate how often every unique parent-child process pair occurs across the enterprise. An alert is triggered if a Wi-Fi discovery command is executed via a parent-child pair (e.g., 'WINWORD.EXE' spawning 'cmd.exe') that is in the bottom 1st percentile of observed frequencies, indicating a highly unusual and potentially malicious execution path.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows Sysmon Event ID 1
  - Corporate endpoints (laptops, desktops), Servers running user-facing applications.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      # Over a 30-day baseline, calculate frequency of all parent-child process pairs
      ON execution of Wi-Fi discovery command
        GET parent_child_pair
        IF frequency(parent_child_pair) < 1st_percentile_of_all_frequencies
          GENERATE alert
- question: Can the process lineage leading to a Wi-Fi discovery command be classified as suspicious based on its features?
  context: This question uses a machine learning classifier to evaluate the legitimacy of a process creation event. The model is trained on features such as the parent process name, its integrity level, the child process name, and command-line arguments. It learns the patterns of both benign administrative activity and known malicious activity. When a new 'netsh.exe' or 'powershell.exe' process is created, the model classifies it, allowing analysts to focus on events deemed 'suspicious discovery activity'.
  answer_sources:
  - Windows Security Event ID 4688 with command line logging enabled
  - Windows Sysmon Event ID 1
  - Corporate endpoints (laptops, desktops), Servers running user-facing applications.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Train classification model on features from process creation events
      FOR each new process creation involving netsh.exe or powershell.exe
        EXTRACT features (parent name, parent integrity, child name, args)
        APPLY model to classify event as 'benign' or 'suspicious'
        IF classification is 'suspicious'
          GENERATE alert
- question: Did a Wi-Fi discovery command shortly precede a file creation, a connection to a known-bad IP, or a DNS query for a malicious domain?
  context: This question seeks to link Wi-Fi discovery with subsequent malicious actions by using a time-based correlation rule. It triggers an alert if a Wi-Fi discovery command is observed, and then, within a short 5-minute window on the same host, one of the following occurs: a file is created by the same process (indicating data staging), a network connection is made to an IP on a threat intelligence blocklist, or a DNS query is made for a known malicious domain (indicating C2 communication or data exfiltration).
  answer_sources:
  - Windows Event ID 4688
  - Windows Sysmon Event ID 11 (FileCreate)
  - Zeek conn.log
  - Zeek dns.log
  - Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON Wi-Fi discovery command event on host H by process P at time T
        MONITOR for 5 minutes:
        - FileCreate event (EID 11) on host H from process P
        - Network connection (Zeek conn) from host H to IP on blocklist
        - DNS query (Zeek dns) from host H for domain on blocklist
        IF any of these occur
          GENERATE correlation alert
- question: Following a Wi-Fi discovery command, did the host exhibit anomalous network behavior, such as unusually large data egress or communication with a rare domain?
  context: This question looks for statistical anomalies in network traffic immediately following a Wi-Fi discovery event. For each host, a 30-day baseline of outbound data volume per destination and requested domain frequency is established. If a Wi-Fi discovery command is executed, an alert is triggered if, within the next 10 minutes, the host either sends an amount of data that exceeds the 99th percentile of its normal behavior or resolves a domain that is among the 1% least frequently requested across the entire enterprise, suggesting data exfiltration to a new or suspicious location.
  answer_sources:
  - Windows Event ID 4688
  - Windows Sysmon Event ID 11 (FileCreate)
  - Zeek conn.log
  - Zeek dns.log
  - Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      # Establish 30-day baseline of outbound data volume and domain request frequency
      ON Wi-Fi discovery command event on host H at time T
        MONITOR for 10 minutes:
        IF outbound_data_to_dest > 99th_percentile_baseline OR requested_domain_prevalence < 1st_percentile
          GENERATE alert
- question: Does a time-series model detect a significant network anomaly immediately following a Wi-Fi discovery command?
  context: This question applies a machine learning model to detect anomalies in network telemetry over time. A time-series model (like ARIMAX or LSTM) is trained on metrics like bytes out, unique destinations, and connection counts for each host. The occurrence of a Wi-Fi discovery command is fed into the model as an external (exogenous) event. A high-priority alert is generated if the model detects a significant anomaly in the network data immediately after the command that cannot be explained by normal historical patterns, trends, or seasonality.
  answer_sources:
  - Windows Event ID 4688
  - Windows Sysmon Event ID 11 (FileCreate)
  - Zeek conn.log
  - Zeek dns.log
  - Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Train time-series anomaly model on per-host network telemetry
      ON Wi-Fi discovery command event
        INPUT event into model as exogenous variable
        IF model detects significant anomaly in subsequent network time-series
          GENERATE high-priority alert
- question: Has a process on a Linux or macOS system attempted to directly access Wi-Fi credential files or use system commands to retrieve Wi-Fi passwords?
  context: This question provides symbolic detection logic for non-Windows platforms. On Linux, it involves creating a rule to alert on any process reading files within the `/etc/NetworkManager/system-connections/` directory, while excluding legitimate processes like NetworkManager itself. On macOS, it alerts on the execution of the `security find-generic-password` command with flags used to display passwords, especially when run by a non-interactive shell or a non-administrative user.
  answer_sources:
  - Linux Auditd logs
  - macOS Endpoint Security Framework logs
  - Linux servers and workstations, macOS endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # On Linux
      MONITOR file reads in /etc/NetworkManager/system-connections/
      IF reading_process is not in [NetworkManager, ...allowlist]
        GENERATE alert

      # On macOS
      MONITOR execution of `security find-generic-password` with `-g` or `-w` flags
      IF process is from non-interactive shell OR user is not admin
        GENERATE alert
- question: Is the access to Wi-Fi configuration files or the use of password-retrieval commands on Linux/macOS anomalous for a given user or host?
  context: This question uses statistical baselining to find unusual activity on Linux and macOS. For Linux, it establishes a baseline of normal file access patterns in `/etc/NetworkManager/` and alerts if a user or process accesses these sensitive files for the first time. For macOS, it baselines each user's historical usage of the `security` command and triggers an alert if their use of `security find-generic-password` exceeds their normal frequency (e.g., 95th percentile) or uses different argument patterns.
  answer_sources:
  - Linux Auditd logs
  - macOS Endpoint Security Framework logs
  - Linux servers and workstations, macOS endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # On Linux
      BASELINE access patterns for /etc/NetworkManager/
      IF user or process accesses files for the first time
        GENERATE alert

      # On macOS
      BASELINE `security` command usage per user
      IF `find-generic-password` usage > 95th_percentile_frequency OR arguments are anomalous
        GENERATE alert
- question: Can a sequence of commands or file accesses on a Linux/macOS system, including Wi-Fi discovery actions, be classified as anomalous by a machine learning model?
  context: This question uses an anomaly detection model (like a one-class SVM or isolation forest) trained on benign activity to identify malicious sequences. The model learns what normal command sequences and file access patterns look like for privileged users on Linux and macOS. It then scores new activity in near real-time, flagging command sequences that include Wi-Fi discovery actions (like reading config files or running the `security` command) that the model classifies as anomalous.
  answer_sources:
  - Linux Auditd logs
  - macOS Endpoint Security Framework logs
  - Linux servers and workstations, macOS endpoints.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Train one-class SVM or isolation forest on benign command/file access sequences
      FOR each new activity sequence
        SCORE sequence with model
        IF sequence contains Wi-Fi discovery actions AND score is anomalous
          FLAG for investigation