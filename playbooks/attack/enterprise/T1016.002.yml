name: T1016.002: Wi-Fi Discovery
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook focuses on detecting adversary attempts to discover Wi-Fi network information, such as network names (SSIDs), saved profiles, and stored credentials, on compromised systems. This is a common reconnaissance activity performed to enable lateral movement or persistence. Detections should focus on the execution of known malicious tools (e.g., Agent Tesla), the use of native operating system utilities (`netsh`, `powershell`, `security`) for Wi-Fi enumeration, unusual process execution chains (e.g., a web browser spawning a command shell), and the temporal correlation of discovery commands with subsequent data staging or network exfiltration activities across Windows, Linux, and macOS platforms.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious tool, such as Agent Tesla, being executed to discover Wi-Fi information?
    context: This question aims to detect the use of pre-identified malicious software associated with Wi-Fi credential theft. By comparing the cryptographic hash of executed files against a threat intelligence feed of known malicious indicators, we can quickly identify known threats with high confidence, indicating a likely compromise.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows Sysmon Event ID 1
      - All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_events | HASH file_executable | JOIN with threat_intel_feed_of_hashes | WHERE match_found RETURN hostname, process_name, hash
  - question: Is an unusually rare or previously unseen executable being run on endpoints, potentially indicating a new or targeted Wi-Fi discovery tool?
    context: This question helps identify potentially malicious tools that are not yet on threat intelligence feeds. By baselining the prevalence of all executed file hashes across the enterprise, we can flag outliers. A file running on only one or a very small number of machines is suspicious and could be a custom-compiled or newly deployed tool used for discovery.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows Sysmon Event ID 1
      - All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.
    range: last 30 days
    queries:
      - statistical: SEARCH process_creation_events over last 30 days | EXCLUDE hashes from allowlist | GROUP by file_hash, count(unique_hosts) as prevalence | WHERE prevalence <= threshold (e.g., 1st percentile) RETURN file_hash, prevalence
  - question: Can we use machine learning to predictively score the reputation of newly observed file hashes to identify potential Wi-Fi discovery tools?
    context: This question moves beyond simple prevalence counts to a more sophisticated, predictive approach. By training a model on features like hash prevalence, first-seen timestamps, and association with suspicious command-line arguments, we can automatically classify the risk of a new file. This helps prioritize analyst attention on the most likely malicious executables.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows Sysmon Event ID 1
      - All corporate endpoints, with a focus on mobile devices (laptops) and workstations of users with privileged network access.
    range: last 90 days
    queries:
      - machine_learning: INPUT process_event_features (prevalence, first_seen, etc.) | INVOKE ML_model_for_hash_reputation | WHERE score is 'suspicious' or 'malicious' RETURN file_hash, score, hostname
  - question: Are native Windows utilities like 'netsh.exe' or 'powershell.exe' being used with specific commands to enumerate Wi-Fi profiles or retrieve saved keys?
    context: Adversaries often use built-in system tools ("living off the land") to avoid detection. This question looks for the specific command-line patterns associated with Wi-Fi discovery, such as 'netsh wlan show profiles' or commands to show keys in cleartext. Finding this activity, especially from non-IT users, is a strong indicator of reconnaissance.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.
    range: last 90 days
    queries:
      - symbolic: SEARCH process_events OR powershell_script_blocks | FILTER command_line contains regex /(netsh|powershell).*wlan.*(show|get).*(profile|key=clear)/i | RETURN hostname, user, command_line
  - question: Is a user executing Wi-Fi discovery commands with a frequency or complexity that is anomalous compared to their own historical activity?
    context: This question aims to detect suspicious activity even when the commands themselves might be legitimate for some users (like IT admins). By establishing a baseline of normal command execution frequency and argument complexity for each user, we can flag deviations. A sudden spike in Wi-Fi discovery commands from a user who rarely performs such actions is highly suspicious.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.
    range: last 30 days
    queries:
      - statistical: SEARCH process_events for user over last 30 days | CALCULATE baseline_frequency and baseline_entropy for 'netsh' and 'powershell' | IF current_command is wifi_discovery AND (frequency > 95th_percentile OR entropy is outlier) | ALERT
  - question: Is a Wi-Fi discovery command being executed as part of an anomalous sequence of actions for a specific user role?
    context: Malicious activity often follows a predictable, albeit malicious, pattern (e.g., open email attachment, run command, exfiltrate data). This question uses sequence analysis models to learn the normal command progressions for different user roles. An alert is generated when a Wi-Fi discovery command appears in a context that deviates from these learned benign sequences, indicating it may be part of an attack chain.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - Corporate endpoints (laptops, desktops), Helpdesk and IT administrator workstations.
    range: last 90 days
    queries:
      - machine_learning: INPUT command_sequence_for_user | INVOKE ML_sequence_model (HMM/LSTM) | IF sequence containing wifi_discovery_command is anomalous | ALERT
  - question: Is a command-line interpreter executing Wi-Fi discovery commands being spawned by an unusual parent process like a web browser or office application?
    context: Legitimate administrative activity is typically initiated from an administrator's interactive shell. A web browser or a document editor spawning a command shell to run discovery commands is a classic indicator of compromise, often resulting from a user clicking a malicious link or opening a weaponized document.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows Sysmon Event ID 1
      - Corporate endpoints (laptops, desktops), Servers running user-facing applications.
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_events | WHERE parent_process in (WINWORD.EXE, EXCEL.EXE, chrome.exe, etc.) AND child_process in (cmd.exe, powershell.exe) AND child_command_line contains wifi_discovery_pattern | ALERT
  - question: Has a Wi-Fi discovery command been executed via a parent-child process relationship that is statistically rare across the entire enterprise?
    context: This question helps identify suspicious execution chains by looking for process relationships that are highly infrequent. By calculating the prevalence of all parent-child pairs, we can flag the execution of Wi-Fi discovery commands from a pair that is in the bottom percentile of frequency, indicating it is not a standard or common execution path.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows Sysmon Event ID 1
      - Corporate endpoints (laptops, desktops), Servers running user-facing applications.
    range: last 30 days
    queries:
      - statistical: SEARCH process_creation_events over 30 days | GROUP by parent_process, child_process | CALCULATE frequency | IF current_event is wifi_discovery AND parent_child_pair_frequency <= 1st_percentile | ALERT
  - question: Can a machine learning model classify a process creation event involving Wi-Fi discovery as either benign administrative activity or suspicious based on its process lineage and other features?
    context: This question leverages a machine learning classifier to automate the decision-making process. By training a model on features like parent process name, integrity level, and command-line arguments, the system can learn the complex patterns that distinguish legitimate administrative use of discovery tools from malicious use, providing a more nuanced detection capability than simple rules.
    answer_sources:
      - Windows Security Event ID 4688 with command line logging enabled
      - Windows Sysmon Event ID 1
      - Corporate endpoints (laptops, desktops), Servers running user-facing applications.
    range: last 90 days
    queries:
      - machine_learning: INPUT process_event_features (parent_name, parent_integrity, etc.) | INVOKE ML_classifier | IF classification is 'suspicious discovery activity' | ALERT
  - question: Is the execution of a Wi-Fi discovery command immediately followed by data staging (e.g., writing to a file) or network exfiltration to a known suspicious destination?
    context: Adversaries don't just discover information; they collect it and send it out. This question looks for this logical next step by correlating Wi-Fi discovery commands with subsequent file creation events or network connections to destinations on threat intelligence blocklists within a short time window (e.g., 5 minutes). This combination of events provides strong evidence of an active attack.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 11 (FileCreate)
      - Zeek conn.log
      - Zeek dns.log
      - Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.
    range: last 90 days
    queries:
      - symbolic: CORRELATE (process_event with wifi_discovery) with (file_creation_event OR network_connection_to_blocked_ip OR dns_query_for_malicious_domain) on same_host within 5 minutes | ALERT
  - question: After a Wi-Fi discovery command is run on a host, is there a statistically anomalous spike in outbound data volume or a connection to an unusually rare domain?
    context: This question seeks to detect exfiltration even when the destination is not on a known blocklist. By baselining normal network behavior for each host, we can detect anomalies. A sudden, large data transfer or a connection to a domain rarely visited by anyone in the organization, occurring shortly after a discovery command, is a strong indicator of data exfiltration.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 11 (FileCreate)
      - Zeek conn.log
      - Zeek dns.log
      - Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.
    range: last 30 days
    queries:
      - statistical: WHEN wifi_discovery_command_detected on host: MONITOR network_logs for that host for 10 minutes | IF outbound_data_volume > 99th_percentile_baseline OR destination_domain_prevalence < 1st_percentile | ALERT
  - question: Can a time-series model detect a network anomaly immediately following a Wi-Fi discovery command that cannot be explained by normal host behavior?
    context: This is a sophisticated approach that uses a time-series model to continuously monitor a host's network activity. The Wi-Fi discovery command is fed into the model as an external event. The model's job is to determine if any subsequent network behavior is a statistically significant anomaly that goes beyond normal patterns. This can detect subtle exfiltration techniques that might be missed by simple thresholding.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 11 (FileCreate)
      - Zeek conn.log
      - Zeek dns.log
      - Corporate endpoints (laptops, desktops), Network egress points (e.g., firewalls, proxies), DNS servers.
    range: last 90 days
    queries:
      - machine_learning: INPUT host_network_timeseries AND wifi_discovery_event as external_input | INVOKE ML_timeseries_model (ARIMAX/LSTM) | IF model_detects_significant_anomaly_post_event | ALERT
  - question: Is a process on a Linux or macOS host accessing sensitive Wi-Fi configuration files or executing commands to retrieve keychain passwords?
    context: This question addresses the same adversary objective on non-Windows platforms. It looks for specific indicators, such as reading files in `/etc/NetworkManager/system-connections/` on Linux or using the `security find-generic-password` command on macOS. Unauthorized access of this type is a clear sign of a discovery attempt.
    answer_sources:
      - Linux Auditd logs
      - macOS Endpoint Security Framework logs
      - Linux servers and workstations, macOS endpoints.
    range: last 90 days
    queries:
      - symbolic: SEARCH audit_logs | ON Linux: WHERE file_path contains '/etc/NetworkManager/system-connections/' AND process not in allowlist | ON macOS: WHERE command_line contains 'security find-generic-password' with '-g' or '-w' flags | ALERT
  - question: Is a user or process on a Linux/macOS host accessing Wi-Fi configuration files or using password retrieval commands in a way that is anomalous compared to their historical baseline?
    context: Similar to the statistical approach on Windows, this question aims to find unusual behavior. It establishes a baseline of normal activity for each user. An alert is triggered if a user who has never accessed Wi--Fi configuration files before suddenly does, or if a user's usage of the `security` command deviates significantly from their established pattern.
    answer_sources:
      - Linux Auditd logs
      - macOS Endpoint Security Framework logs
      - Linux servers and workstations, macOS endpoints.
    range: last 90 days
    queries:
      - statistical: SEARCH audit_logs | ON Linux: IF process accesses '/etc/NetworkManager/' for the first_time | ON macOS: IF 'security find-generic-password' usage > 95th_percentile of user's baseline | ALERT
  - question: Can a machine learning model, trained only on benign activity, identify anomalous command sequences or file access patterns related to Wi-Fi discovery on Linux or macOS?
    context: This question uses anomaly detection models like One-Class SVM or Isolation Forest, which are ideal for scenarios where malicious examples are rare. The model learns what "normal" activity looks like for privileged users and then flags any sequence of commands or file accesses that deviates from this learned normal state, effectively identifying novel or unusual attack patterns.
    answer_sources:
      - Linux Auditd logs
      - macOS Endpoint Security Framework logs
      - Linux servers and workstations, macOS endpoints.
    range: last 90 days
    queries:
      - machine_learning: INPUT command_and_file_access_sequence | INVOKE ML_anomaly_detection_model (Isolation Forest) | IF sequence containing wifi_discovery_activity is scored as anomalous | ALERT