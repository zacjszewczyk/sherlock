name: 'T1047: Windows Management Instrumentation'
id: 'f4d4f8e8-3a1b-4b9c-8f0a-1e2d3c4b5a6b'
description: 'This playbook helps analysts determine if an adversary is executing commands or payloads using Windows Management Instrumentation (WMI). It provides investigative questions to detect malicious WMI usage through several key indicators: analysis of command-line arguments for known malicious strings, obfuscation, or high entropy; identification of sensitive WMI class/method invocations used for execution or persistence; monitoring for anomalous network traffic on WMI-related ports indicative of lateral movement; correlating remote logons with subsequent WMI execution; and identifying WMI processes spawned by unusual parent processes like Office applications or web browsers.'
type: 'technique'
related:
  - 'TA0002: Execution'
contributors:
  - 'Zachary Szewczyk'
  - 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Are there any WMI-related command-line arguments or PowerShell script blocks that match known malicious strings, commands, or obfuscation flags?'
    context: 'This question aims to find direct evidence of malicious WMI usage by searching for specific, known-bad indicators. Adversaries often use commands like "wmic.exe shadowcopy delete" to destroy backups or "process call create" for execution. Similarly, PowerShell obfuscation flags like "-e", "-enc", or "-EncodedCommand" are common techniques to hide malicious payloads executed via WMI. Detecting these provides a high-confidence signal of compromise.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Windows PowerShell Event ID 4103'
      - 'Applicable to All Windows Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'SEARCH process_logs OR powershell_logs WHERE (command_line CONTAINS "wmic.exe" OR command_line CONTAINS "Get-WmiObject" OR command_line CONTAINS "Invoke-WmiMethod") AND (command_line MATCHES_REGEX "shadowcopy delete|process call create|-e|-enc|-EncodedCommand")'
  - question: 'Are there any WMI-related command lines or PowerShell script blocks with unusually high character entropy compared to the host-specific baseline?'
    context: 'Adversaries frequently obfuscate or encode their commands to evade simple string-based detections. This obfuscation often results in a command line with high character randomness, or entropy. By calculating the entropy of WMI command lines and comparing it to a learned baseline for each host, we can detect potentially obfuscated malicious commands that would otherwise be missed. An alert on a high entropy score suggests an attempt to hide execution.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Windows PowerShell Event ID 4103'
      - 'Applicable to All Windows Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'CALCULATE entropy(command_line) for process_logs and powershell_logs | GROUPBY host | ALERT where entropy > 3_std_dev_from_mean OR entropy > 95th_percentile'
  - question: 'Have any WMI-related command lines been classified as malicious by a machine learning model based on features like length, entropy, and keyword presence?'
    context: 'This question leverages a machine learning model to provide a more nuanced and adaptive detection method than static rules or simple statistical thresholds. By training a classifier on a variety of features (e.g., command length, entropy, specific keywords), the model can identify complex patterns indicative of malicious activity. A high probability score from the model serves as a strong indicator that a WMI command is malicious, even if it uses novel obfuscation techniques.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Windows PowerShell Event ID 4103'
      - 'Applicable to All Windows Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'INPUT process_logs and powershell_logs INTO ML_model(features=["length", "entropy", "keywords"]) | ALERT where prediction_score > threshold'
  - question: 'Has WMI been used to create a persistent event subscription or to directly create a process or delete shadow copies?'
    context: 'This question looks for specific, high-confidence indicators of malicious WMI usage for persistence, execution, and defense evasion. Creating a WMI event subscription via "__FilterToConsumerBinding" is a well-known persistence technique. Similarly, direct calls to "Win32_Process.Create" for execution or "Win32_ShadowCopy.Delete" to destroy backups are strong signs of malicious intent.'
    answer_sources:
      - 'Microsoft-Windows-WMI-Activity/Operational Event ID 5861'
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Applicable to Domain Controllers, Critical Application Servers, Management Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'SEARCH wmi_activity_logs WHERE event_id=5861 AND operation CONTAINS "__FilterToConsumerBinding" | OR SEARCH command_line_logs WHERE command_line MATCHES "Win32_Process.Create|Win32_ShadowCopy.Delete"'
  - question: 'Has any user or host invoked a WMI class and method pair that is statistically rare for that entity or for the entire organization?'
    context: 'Legitimate software and administrative tasks tend to use a predictable set of WMI classes and methods. Adversaries, however, may use less common combinations for malicious purposes. By baselining normal WMI activity for each user and host, we can identify deviations. An alert on a statistically rare WMI class/method pair suggests an unusual action that may be part of an attack, such as lateral movement or reconnaissance.'
    answer_sources:
      - 'Microsoft-Windows-WMI-Activity/Operational Event ID 5861'
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Applicable to Domain Controllers, Critical Application Servers, Management Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'CALCULATE frequency of (wmi_class, wmi_method) pairs from wmi_activity_logs | GROUPBY host, user | ALERT where frequency < 1st_percentile_for_entity'
  - question: 'Have any sequences of WMI calls been observed that deviate significantly from learned normal behavior, as identified by an autoencoder model?'
    context: 'This question uses an unsupervised learning approach to detect novel attack patterns. An autoencoder is trained to "reconstruct" normal sequences of WMI calls. When it encounters a malicious sequence that does not fit the learned patterns (e.g., reconnaissance followed by execution), it will fail to reconstruct it accurately, resulting in a high "reconstruction error." This technique can flag sophisticated, multi-step WMI-based attacks that might not trigger individual rule-based alerts.'
    answer_sources:
      - 'Microsoft-Windows-WMI-Activity/Operational Event ID 5861'
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Applicable to Domain Controllers, Critical Application Servers, Management Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'INPUT sequences of (wmi_class, wmi_method) INTO autoencoder_model | ALERT where reconstruction_error > threshold'
  - question: 'Are there any network connections on WMI-related ports (135, 5985, 5986) between hosts that are not on the approved communication allow-list?'
    context: 'This question aims to detect lateral movement using WMI by enforcing network segmentation rules. Legitimate remote WMI usage typically originates from a small set of dedicated management servers. Any WMI traffic between hosts that are not on this pre-approved list, especially workstation-to-workstation traffic, is highly suspicious and could indicate an adversary moving through the network.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dce_rpc.log'
      - 'Applicable to Network Egress/Ingress Points, Core Network Switches, Server VLANs'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'SEARCH network_logs WHERE dest_port IN (135, 5985, 5986) AND (source_ip, dest_ip) NOT IN management_allow_list'
  - question: 'Has the volume of network traffic on WMI-related ports significantly exceeded the statistically forecasted baseline for any network segment or key server?'
    context: 'Adversaries using WMI for large-scale lateral movement (e.g., deploying ransomware) or data exfiltration will generate a significant spike in network traffic. This question uses time-series analysis to model normal traffic patterns on WMI ports. A sudden, anomalous increase in byte volume or connection counts that exceeds the forecasted norm is a strong indicator of a widespread, automated attack.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dce_rpc.log'
      - 'Applicable to Network Egress/Ingress Points, Core Network Switches, Server VLANs'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'MODEL timeseries of network_traffic on ports (135, 5985, 5986) | GROUPBY network_segment | ALERT where current_traffic > 99th_percentile_of_forecast'
  - question: 'Does the network communication graph show anomalous new connections between host communities or a sudden increase in a host''s importance, suggesting WMI-based lateral movement?'
    context: 'This question models the network as a graph to identify sophisticated lateral movement patterns. In this model, hosts are nodes and WMI connections are edges. An adversary moving between different network segments (e.g., from a compromised development machine to a finance server) creates a new, anomalous edge in the graph. Similarly, if an adversary uses a single machine to pivot to many others, that machine''s "centrality" in the graph will spike. This approach detects the structural changes in communication patterns caused by an attack.'
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dce_rpc.log'
      - 'Applicable to Network Egress/Ingress Points, Core Network Switches, Server VLANs'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'BUILD graph from network_logs (nodes=hosts, edges=wmi_connections) | ANALYZE graph for new_edges_between_communities OR sudden_increase_in_node_centrality'
  - question: 'Has a remote network logon been immediately followed by WMI-based process execution originating from the same source IP address?'
    context: 'This question correlates two distinct events to build a high-fidelity picture of remote execution. A remote logon (Logon Type 3) followed closely by WMI-based process creation from the same source IP is the classic signature for an adversary using WMI for lateral movement. By linking the authentication event with the execution event, we can confidently identify remote attacks in progress. This becomes especially critical if the source is not a known management server.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Zeek conn.log'
      - 'Applicable to Authentication Servers (Domain Controllers), High-Value Servers, Endpoint Subnets'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'CORRELATE logon_events (type=3) with process_events (wmic, powershell) WHERE logon.dest_host = process.host AND logon.source_ip = process.remote_source AND time_diff < 5_minutes'
  - question: 'Has a user account initiated a remote WMI session from an unusual source host, to an unusual destination host, or at an unusual time compared to their established profile?'
    context: 'This question seeks to identify credential abuse by baselining user-specific remote WMI behavior. System administrators typically have predictable patterns of remote access. If an adversary compromises an administrator''s account, they are likely to use it in ways that deviate from this pattern—for example, logging in from a different workstation, accessing a server they don''t normally manage, or performing actions outside of normal business hours. Detecting these statistical outliers can reveal a compromised account.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Zeek conn.log'
      - 'Applicable to Authentication Servers (Domain Controllers), High-Value Servers, Endpoint Subnets'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'PROFILE user behavior for remote WMI (source_host, dest_host, time) | ALERT on new WMI session where source, destination, or time is outlier based on IQR method'
  - question: 'Have any remote WMI sessions been identified as anomalous because they do not fit into any established cluster of normal activity?'
    context: 'This question uses unsupervised clustering to automatically define "normal" remote WMI activity without pre-defined rules. The DBSCAN algorithm groups historical sessions into clusters based on multiple features (source location, destination role, user role, time). A new WMI session that does not fit into any of these learned clusters is flagged as "noise" or an anomaly. This is a powerful method for detecting novel attack vectors, as it identifies activity that is fundamentally different from anything seen before.'
    answer_sources:
      - 'Windows Event ID 4624'
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Zeek conn.log'
      - 'Applicable to Authentication Servers (Domain Controllers), High-Value Servers, Endpoint Subnets'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'CLUSTER historical WMI sessions with DBSCAN on features (source_geo, dest_host, user_role, time) | CLASSIFY new sessions | ALERT if session is classified as "noise"'
  - question: 'Has a WMI-related process (wmic.exe, powershell.exe) been launched by a parent process that is not on the approved list of standard shells and administrative tools?'
    context: 'This question focuses on detecting suspicious process ancestry. Legitimate WMI execution is almost always initiated by a user in a command shell, a system service, or a management console. If a process like Microsoft Word (WINWORD.EXE) or a web browser spawns a WMI process, it is a very strong indicator of a phishing attack or drive-by download where a malicious macro or exploit is attempting to execute code.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Applicable to All Windows Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'SEARCH process_creation_logs WHERE child_process IN ("wmic.exe", "powershell.exe") AND parent_process NOT IN ("cmd.exe", "explorer.exe", "services.exe", "taskeng.exe", "mmc.exe")'
  - question: 'Has a WMI-related process been spawned by a parent process where that specific parent-child relationship is statistically rare across the enterprise?'
    context: 'This question moves beyond a static allow-list to a probabilistic approach. By analyzing vast amounts of process creation data, we can determine the normal probability of any given parent process launching a WMI-related child. A process lineage that is extremely rare (e.g., has a very low calculated probability) is highly suspicious. This can help uncover novel or environment-specific attack techniques that might not be caught by a generic allow-list.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Applicable to All Windows Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'CALCULATE probability(child_process | parent_process) from historical process_logs | ALERT on new process creation where P(wmic.exe | parent_process) < 0.01'
  - question: 'Has a machine learning model predicted that a WMI-related process creation event is malicious based on its full context (parent process, command line, user, etc.)?'
    context: 'This question employs a sophisticated classifier to make a holistic judgment about a process creation event. Instead of just looking at the parent process name, a random forest model can evaluate a wide array of features simultaneously, such as the parent''s file path, its integrity level, the user who initiated the action, and the full command line of the child process. This allows it to detect subtle and complex malicious patterns that would be nearly impossible to define with rules or simple statistics.'
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Applicable to All Windows Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode': 'INPUT process_creation_event INTO ML_model(features=["parent_name", "parent_path", "integrity_level", "child_cmd", "user"]) | ALERT where prediction is "malicious" with high_confidence'