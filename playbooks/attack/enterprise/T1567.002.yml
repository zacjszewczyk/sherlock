name: T1567.002: Exfiltration to Cloud Storage
id: a8d5e0f6-9b1c-4e8a-8f0d-7c3a9e2b1d0a
description: |
  This playbook helps answer the primary investigative question: "Has the adversary exfiltrated sensitive data using cloud storage services?". It provides a structured approach to detect various indicators of this technique, such as network connections to unsanctioned or malicious cloud providers, the use of command-line tools for data uploads, the sequence of data archiving followed by a large upload, anomalously large data transfer volumes, and uploads initiated by non-interactive or system-level processes. The goal is to identify covert data exfiltration by analyzing network, endpoint, and process logs for these suspicious patterns.
type: technique
related:
  - TA0010: Exfiltration
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts connecting to unsanctioned or known malicious cloud storage providers by cross-referencing network logs with allow/deny lists?
    context: |
      This question aims to identify direct violations of corporate policy or communication with known adversary infrastructure. By continuously joining network destination information (IP addresses, SNI names) against a curated allow-list of sanctioned cloud services and a deny-list from threat intelligence, analysts can generate high-fidelity alerts on connections that are explicitly forbidden or highly suspicious. This is a foundational, signature-based check for exfiltration channels.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Internet Gateway / Egress Points
      - Enterprise DNS Resolvers
    range: last 90 days
    queries:
      - symbolic: JOIN (conn.log.dest_ip, ssl.log.sni) AGAINST (allow_list, deny_list); ALERT ON (NOT IN allow_list) OR (IN deny_list);
  - question: Can we identify potentially new or unsanctioned cloud storage domains by finding those with anomalously low connection frequencies across the enterprise?
    context: |
      This question helps uncover covert exfiltration channels that are not yet on threat intelligence feeds. By calculating the connection frequency to all cloud domains over a 30-day window, analysts can baseline normal usage. Domains that are rarely connected to (e.g., bottom 1st percentile) or have not been seen in the last 90 days may represent either unsanctioned "shadow IT" or newly established adversary infrastructure, flagging them for review.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Internet Gateway / Egress Points
      - Enterprise DNS Resolvers
    range: last 90 days
    queries:
      - statistical: CALCULATE frequency of connections to cloud domains over 30 days; IDENTIFY domains in bottom 1st percentile or not seen in 90 days; FLAG for review;
  - question: Can a machine learning model classify new connections to cloud storage domains as malicious based on their network traffic characteristics?
    context: |
      This question focuses on proactively identifying malicious connections using a predictive model. By training a Random Forest classifier on a rich set of features from network logs (e.g., SNI, JA3/JA3S hash, ASN, duration, bytes sent/received) using a labeled dataset of known-good and known-bad connections, the model can learn the subtle characteristics of malicious traffic. It can then score new connections, providing a probabilistic assessment to alert on activity classified as malicious with high confidence, reducing analyst fatigue from false positives.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Internet Gateway / Egress Points
      - Enterprise DNS Resolvers
    range: last 90 days
    queries:
      - machine_learning: TRAIN Random Forest on (SNI, JA3, ASN, duration, bytes) from labeled data; SCORE new connections; ALERT on high-confidence malicious classification;
  - question: Are there command-line executions on endpoints that match known syntax for cloud exfiltration tools?
    context: |
      This question seeks to find direct evidence of an adversary using common utilities to exfiltrate data. By applying regular expression matching on endpoint command-line logs (e.g., Windows Event ID 4688, PowerShell Event ID 4104), analysts can detect the specific syntax of tools like 'rclone copy', 'aws s3 cp', 'az storage blob upload', or 'curl -T'. This provides high-fidelity evidence of an exfiltration attempt in progress or post-compromise activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Zeek http.log
      - User Workstations
      - Production Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - symbolic: SEARCH command_line_logs FOR regex('rclone copy|aws s3 cp|az storage blob upload|curl -T|Write-S3Object'); ALERT on match;
  - question: Can we detect potentially obfuscated or suspicious commands by identifying command-line strings with unusually high entropy?
    context: |
      This question addresses the detection of obfuscated commands that may not match known signatures. By calculating the Shannon entropy of a command-line string, we measure its randomness. Adversaries often use encoding or obfuscation to hide their scripts, which results in higher entropy. By baselining the normal entropy for legitimate processes (e.g., 'powershell.exe') and alerting when a command's entropy exceeds a statistical threshold (e.g., 3 standard deviations), analysts can uncover hidden malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Zeek http.log
      - User Workstations
      - Production Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - statistical: CALCULATE Shannon entropy for each command string; BASELINE per process name; ALERT if entropy > (baseline + 3 * std_dev);
  - question: Can a machine learning model identify novel or obfuscated exfiltration commands by flagging them as outliers from a baseline of normal activity?
    context: |
      This question aims to detect unknown or zero-day command-line attacks. By using a one-class SVM model trained on TF-IDF vectors of known-good command lines, the system learns the boundary of "normal" command-line activity. Any new command that falls outside this learned boundary is classified as an outlier. This approach is powerful for identifying novel adversary techniques without relying on pre-existing signatures.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Zeek http.log
      - User Workstations
      - Production Servers
      - Domain Controllers
    range: last 90 days
    queries:
      - machine_learning: GENERATE TF-IDF vectors from command strings; TRAIN one-class SVM on baseline data; CLASSIFY new commands; ALERT on outliers;
  - question: Has a host created a large archive file and then immediately uploaded a large volume of data to a cloud provider?
    context: |
      This question looks for the classic "smash and grab" exfiltration pattern: staging data into a compressed file and then uploading it. A stateful rule correlates a process creation event for an archiving utility (7z.exe, WinRAR.exe) with a subsequent outbound network connection from the same host to a cloud provider. If this sequence occurs within a short window (e.g., 15 minutes) and involves a large data upload (e.g., >100MB), it is a strong indicator of malicious data exfiltration.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Critical Asset Subnets
      - File Servers
      - User Workstations
    range: last 90 days
    queries:
      - symbolic: CORRELATE (process_create for archiver) with (network_conn to cloud) on same host within 15 mins; ALERT if upload > 100MB;
  - question: Are there hosts performing the 'archive and upload' sequence significantly faster than the organizational baseline, or with an unusually large upload size?
    context: |
      This question refines the detection of the 'archive and upload' pattern by adding statistical context. It establishes a baseline for the normal time delta between archiving and uploading. A sequence that occurs much faster than the 95th percentile suggests automated (and likely malicious) activity. Additionally, flagging uploads that are in the top 5% for that specific host adds another layer of anomaly detection, helping to distinguish malicious bulk transfers from benign user activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Critical Asset Subnets
      - File Servers
      - User Workstations
    range: last 90 days
    queries:
      - statistical: BASELINE time delta between (archive event) and (large upload); ALERT if delta is anomalously short OR upload size is in top 5% for host;
  - question: Can a sequence analysis model detect anomalous chains of events, such as 'archive -> upload to rare cloud provider', that indicate exfiltration?
    context: |
      This question applies machine learning to understand the context and probability of event sequences. A model like an LSTM or HMM is trained on normal sequences of process and network events. It can then evaluate new sequences and flag those with a low probability of occurring based on historical data. A sequence like '7z.exe execution -> outbound connection to a rarely seen cloud provider with >100MB upload' would be a very low-probability event, generating a high-confidence alert.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Critical Asset Subnets
      - File Servers
      - User Workstations
    range: last 90 days
    queries:
      - machine_learning: TRAIN sequence model (HMM/LSTM) on event logs; CALCULATE probability of new event sequences; ALERT on low-probability sequences like (archive -> large upload to rare destination);
  - question: Are there any single, large data uploads to cloud storage that exceed a defined threshold?
    context: |
      This question focuses on detecting bulk data exfiltration using a simple, high-impact rule. It triggers an alert on any single network connection to a known cloud storage provider where the total bytes sent exceeds a large, hard threshold (e.g., 1 GB) and the duration is relatively short (e.g., less than one hour). This is effective for catching unsubtle, large-scale data theft.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway / Egress Points
    range: last 90 days
    queries:
      - symbolic: SEARCH conn.log where (destination is cloud) AND (bytes_sent > 1GB) AND (duration < 1 hour); ALERT on match;
  - question: Are any hosts exhibiting a daily upload volume to cloud storage that is anomalous compared to their own baseline, or a highly asymmetric traffic ratio?
    context: |
      This question uses statistical baselining to find abnormal data transfer behavior. It has two parts: first, it tracks a 30-day rolling baseline of daily upload volume for each host, alerting if a day's total exceeds the 99th percentile. Second, it inspects individual connections for a high ratio of sent-to-received bytes (e.g., > 100:1), which is a strong indicator of data upload rather than interactive browsing. Combining these provides robust anomaly detection.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway / Egress Points
    range: last 90 days
    queries:
      - statistical: BASELINE daily upload volume per host; ALERT if daily_volume > 99th percentile; Also, ALERT if (bytes_sent / bytes_received > 100) AND (bytes_sent > 50MB);
  - question: Can a time-series forecasting model predict and detect anomalous spikes in a host's hourly data upload volume to cloud providers?
    context: |
      This question uses machine learning to model the normal "rhythm" of a host's network activity. A time-series model (like SARIMA) is used to predict the expected range of a host's upload volume for each hour. If the actual observed volume exceeds the upper bound of the model's 99% confidence interval for a sustained period (e.g., two consecutive hours), it indicates a significant deviation from normal behavior and triggers an alert.
    answer_sources:
      - Zeek conn.log
      - Internet Gateway / Egress Points
    range: last 90 days
    queries:
      - machine_learning: FORECAST expected hourly upload volume per host using SARIMA; ALERT if actual volume exceeds 99% confidence interval for 2 consecutive hours;
  - question: Is a system account or a non-interactive process initiating a data upload to a cloud storage service?
    context: |
      This question seeks to identify high-risk exfiltration originating from compromised systems or automated scripts. By correlating process creation logs, logon events, and network logs, a high-severity alert can be generated if a process running under a privileged account (e.g., 'NT AUTHORITY\SYSTEM') or from a non-interactive session (e.g., a background service) initiates a connection to a cloud provider. This type of activity is almost always unauthorized and indicative of a compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Production Servers
      - Application Servers
    range: last 90 days
    queries:
      - symbolic: CORRELATE process_logs, logon_logs, network_logs; ALERT if (process_user is SYSTEM) OR (logon_type is non-interactive) AND (destination is cloud);
  - question: Are there rare or first-seen combinations of process, user, and cloud destination that could indicate anomalous exfiltration?
    context: |
      This question focuses on finding unusual activity by tracking combinations of actors and actions. The system builds a frequency table of (process_name, user_name, destination_cloud_domain) tuples over a 30-day period. It then alerts on the first-ever occurrence of a new tuple or on tuples that are statistically rare (e.g., seen fewer than 5 times). This can quickly surface suspicious behavior, such as a database server process suddenly connecting to a file-sharing site.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Production Servers
      - Application Servers
    range: last 90 days
    queries:
      - statistical: CREATE frequency table of (process, user, cloud_destination) tuples over 30 days; ALERT on first-seen tuples or tuples with frequency < 5;
  - question: Can a clustering algorithm identify anomalous activity by finding outliers that don't fit into normal behavioral clusters of process, user, and network activity?
    context: |
      This question uses unsupervised machine learning to find outliers without pre-labeled data. A density-based clustering algorithm (like DBSCAN) groups correlated events into clusters of "normal" behavior based on features like process name, user, logon type, and destination. Any event that does not belong to a cluster is considered noise or an outlier. These outliers represent activity that does not conform to any established pattern and should be investigated as potentially malicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - Production Servers
      - Application Servers
    range: last 90 days
    queries:
      - machine_learning: CLUSTER correlated events using DBSCAN on features (process, user, logon_type, dest_asn, volume); IDENTIFY and ALERT on noise/outlier points;