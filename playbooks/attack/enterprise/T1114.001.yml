name: T1114.001: Local Email Collection
id: d2b1f8c0-5e6a-4b9c-8d7e-3f4a5b6c7d8e
description: This playbook helps analysts investigate whether an adversary has collected sensitive data from local email files, such as Outlook .pst or .ost files. It provides questions to detect this activity by identifying known malicious processes accessing these files, suspicious command-line executions targeting email data, processes that access email files and then initiate anomalous network connections, staging of email files in temporary directories, and a single process or user accessing email files from multiple user profiles.
type: technique
related:
- TA0009: Collection
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Has a known malicious process accessed local email files (.pst or .ost)?
  context: This question seeks to identify classic indicators of compromise (IOCs). By monitoring access to sensitive email archive files (.pst, .ost) and correlating the accessing process with threat intelligence feeds, analysts can detect known malware attempting to collect data. The logic involves linking a file access event (like Windows Event ID 4663) to its parent process creation event (like Windows Event ID 4688) to retrieve the process hash for comparison against a list of known malicious hashes.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations
  - Executive laptops
  - Mail archive servers
  - Backup servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FIND file access events WHERE file_name ENDS WITH '.pst' OR '.ost'
      FOR EACH event:
        JOIN with process creation events ON process_id
        LOOKUP process_hash IN threat_intelligence_feed
        IF match FOUND, ALERT
- question: Is a rare process with a high-entropy file path accessing local email files?
  context: This question focuses on detecting novel or obfuscated malware. Adversaries often use randomly named executables placed in unusual directories to evade signature-based detection. This query identifies processes that are uncommon across the enterprise (low prevalence) and have a high-entropy file path, which are strong indicators of suspicious activity, especially when combined with access to sensitive email data.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations
  - Executive laptops
  - Mail archive servers
  - Backup servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FIND processes that accessed '.pst' OR '.ost' files
      FOR EACH process:
        CALCULATE prevalence of process_name across enterprise
        CALCULATE entropy of process_file_path
        IF prevalence is low AND entropy is high, ALERT
- question: Is a process accessing email files exhibiting characteristics of malicious collection, as identified by a machine learning model?
  context: This question leverages a machine learning model to move beyond simple heuristics. By training a classifier (like a random forest) on a rich feature set—including process name, parent process, command-line details, path entropy, and file access patterns—the model can learn the subtle, complex relationships that distinguish benign behavior (e.g., an email client indexing files) from malicious collection activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations
  - Executive laptops
  - Mail archive servers
  - Backup servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH new process/file-access event pair:
        EXTRACT features (process_name, parent_process, cmd_line, path_entropy, accessed_email_file)
        INPUT features into trained Random Forest model
        IF model classifies as 'malicious', ALERT
- question: Has a command-line interpreter been used to copy or archive local email files?
  context: Adversaries frequently use built-in "living-off-the-land" binaries (LOLBins) like cmd.exe, powershell.exe, and robocopy.exe to perform actions, as they are less likely to be blocked. This question looks for specific command-line patterns associated with copying or archiving .pst/.ost files, which is a common technique for staging data before exfiltration.
  answer_sources:
  - Windows Event ID 4688
  - User workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - Administrative jump boxes
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FIND process creation events for (cmd.exe, powershell.exe, robocopy.exe)
      APPLY regex to command_line arguments to find patterns like 'copy *.pst', 'robocopy ... *.ost'
      IF regex matches, ALERT
- question: Has a rare command-line signature targeting email files been observed on the network?
  context: This question helps detect unusual or unique command-line activity. While an administrator might legitimately run a script involving .pst files, the exact command-line signature (process + arguments) is often consistent. An adversary's command will likely be rare or unique. By calculating a rarity score for any command that references .pst or .ost files, analysts can surface novel suspicious activity.
  answer_sources:
  - Windows Event ID 4688
  - User workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - Administrative jump boxes
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH command-line event referencing '.pst' or '.ost':
        CREATE signature from process_name and arguments
        CALCULATE rarity score of signature based on 30-day baseline
        IF rarity_score is in top 99th percentile, ALERT
- question: Is a command-line string referencing email files classified as suspicious by an NLP model?
  context: This question uses Natural Language Processing (NLP) to understand the intent behind a command line. A simple keyword match might flag a benign administrative script. An NLP model, trained on labeled examples, can better distinguish between a command like 'run_backup_outlook.ps1' (benign) and 'Compress-Archive -Path *.pst -DestinationPath C:\Temp\out.zip' (suspicious collection), providing higher-fidelity alerts.
  answer_sources:
  - Windows Event ID 4688
  - User workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - Administrative jump boxes
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH new command-line event referencing email files:
        VECTORIZE command_line string using TF-IDF
        INPUT vector into trained Logistic Regression model
        IF model classifies as 'suspicious', ALERT
- question: Has a non-allowlisted process accessed an email file and then made a connection to a known malicious IP address?
  context: This question correlates internal host activity with network data to detect data exfiltration. The logic is that an adversary might use a custom tool (not on the allowlist) to access email data and then immediately exfiltrate it. This stateful rule connects the file access event with a subsequent suspicious network connection from the same host, creating a high-confidence alert.
  answer_sources:
  - Windows Event ID 4663
  - Zeek conn.log
  - User workstations
  - Network egress points (Firewalls, Proxies)
  - DNS servers
  - Cloud storage gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRIGGER when a process NOT IN 'Email-Access-Allowlist' accesses a '.pst' or '.ost' file
      WITHIN 5 minutes, if the same host connects to an IP in a malicious threat feed:
        GENERATE high-severity ALERT
- question: Has a process, after accessing an email file, exhibited anomalous network behavior compared to its baseline?
  context: This question aims to detect exfiltration by focusing on behavioral anomalies. A process might be legitimate, but its network activity could be suspicious. By baselining the typical network behavior (e.g., average data sent, common ports) for each process, this query can flag when a process sends an unusually large amount of data after accessing a .pst file, which could indicate exfiltration.
  answer_sources:
  - Windows Event ID 4663
  - Zeek conn.log
  - User workstations
  - Network egress points (Firewalls, Proxies)
  - DNS servers
  - Cloud storage gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH process accessing '.pst' or '.ost' files:
        COMPARE subsequent network connection 'bytes_sent' to its historical baseline
        IF 'bytes_sent' is > 3 standard deviations from the mean, ALERT
- question: Does a host's outbound network traffic show anomalies, detected by a time-series model, immediately after a process accessed an email file?
  context: This question provides a host-centric view of exfiltration. Instead of focusing on a single process, it models the normal outbound traffic pattern for an entire host. When a file access event on a .pst/.ost file is observed, the host's subsequent network traffic is analyzed by the model. A significant anomaly score suggests a deviation from normal behavior, such as a large data transfer, which could be an exfiltration event.
  answer_sources:
  - Windows Event ID 4663
  - Zeek conn.log
  - User workstations
  - Network egress points (Firewalls, Proxies)
  - DNS servers
  - Cloud storage gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      WHEN a process accesses '.pst' or '.ost' file on a host:
        FEED subsequent outbound traffic volume from that host into a trained LSTM Autoencoder model
        IF anomaly score from model exceeds threshold, ALERT
- question: Has a command-line utility been used to copy an email file to a common staging directory?
  context: Adversaries often copy sensitive files to temporary or publicly accessible directories (like C:\Windows\Temp or C:\PerfLogs) before compressing and exfiltrating them. This query specifically looks for the use of common command-line tools to move .pst or .ost files into these known staging areas, which is a strong indicator of malicious intent.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - User workstations
  - File servers
  - Publicly writable network shares
  - Temporary file directories
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FIND process creation events for (cmd.exe, powershell.exe, robocopy.exe)
      SEARCH command line for patterns copying '.pst' or '.ost' to a staging directory (e.g., 'C:\PerfLogs\')
      IF pattern matches, ALERT
- question: Has a process written an unusually high number of files to a staging directory shortly after reading an email file?
  context: This question uses statistical analysis to detect staging behavior. An adversary might read a large .pst file and then break it into smaller, chunked files in a temporary directory to evade detection. This query identifies this by flagging a statistically significant increase in file write operations to staging directories by a process, especially if that activity immediately follows a read from an email file.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - User workstations
  - File servers
  - Publicly writable network shares
  - Temporary file directories
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR for read events on '.pst' or '.ost' files
      FOR the process that performed the read:
        COUNT file write operations to staging directories within a 10-minute window
        IF write count is > 95th percentile of user's daily activity, ALERT
- question: Does a process-file interaction graph show a 'read-email-then-write-to-temp' pattern indicative of staging?
  context: This question uses graph analysis to detect a specific sequence of malicious behavior. By modeling interactions as a graph, analysts can search for a specific sub-pattern: a non-standard process (1) reads a .pst/.ost file, and then (2) the same process writes a new file to a temporary directory. Discovering this 'read-then-write-to-temp' pattern is a high-confidence indicator of data staging.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - User workstations
  - File servers
  - Publicly writable network shares
  - Temporary file directories
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CONSTRUCT a graph of process-file interactions
      SEARCH for a subgraph pattern where:
        (process_A)-[reads]->(file.pst)
        AND (process_A)-[writes]->(file_B in temp_dir)
        AND process_A is not 'outlook.exe'
      IF pattern is found, ALERT
- question: Has a non-allowlisted account or process accessed email files from multiple different user profiles within a short time frame?
  context: This question is designed to detect lateral movement and widespread data collection. A normal user or process typically only accesses their own .pst/.ost file. An adversary who has compromised an endpoint may use a single process to iterate through multiple user directories to collect as much email data as possible. This query alerts when a non-administrative account accesses email files from multiple user profiles.
  answer_sources:
  - Windows Event ID 4663
  - File servers hosting roaming profiles
  - Shared workstations
  - Citrix/VDI servers
  - Backup and archive servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR file access to '.pst' and '.ost' files
      IF a user/process NOT IN allowlist accesses files from >1 unique user profile path within 1 hour:
        TRIGGER high-severity ALERT
- question: Has a user account accessed an anomalous number of distinct user email profiles compared to its baseline?
  context: This question uses statistical baselining to detect abnormal access patterns. While an administrator might legitimately access multiple users' files, their activity will form a baseline. This query establishes a normal baseline for each user account and alerts when an account suddenly accesses a number of unique user email profiles that is a significant deviation (e.g., >3 standard deviations) from its own established norm.
  answer_sources:
  - Windows Event ID 4663
  - File servers hosting roaming profiles
  - Shared workstations
  - Citrix/VDI servers
  - Backup and archive servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR EACH source user:
        AGGREGATE .pst/.ost access events over 1 hour
        COUNT unique user profiles in the file paths
        BASELINE this count for each source user
        IF current count > (baseline + 3 * standard_deviation) OR > 2, ALERT
- question: Does unsupervised clustering of file access events reveal outlier activity, such as one user accessing multiple profiles' email files?
  context: This question uses machine learning to find "unknown unknowns." By feeding file access event features (source user, process, target profile) into a clustering algorithm like DBSCAN, the model can automatically group "normal" activity into a large cluster. Any events that do not fit this cluster are flagged as outliers or small, anomalous clusters, representing suspicious patterns like one user accessing many profiles' files.
  answer_sources:
  - Windows Event ID 4663
  - File servers hosting roaming profiles
  - Shared workstations
  - Citrix/VDI servers
  - Backup and archive servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT file access events (source_user, process, target_user) into DBSCAN model
      THE model will group normal, single-user access into a dense cluster
      FLAG any event identified by DBSCAN as an outlier or part of a small, sparse cluster for investigation