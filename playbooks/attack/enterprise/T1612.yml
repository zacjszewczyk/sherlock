name: "T1612: Build Image on Host"
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: "This playbook helps investigate whether an adversary is building malicious container images on hosts to evade defenses. This involves detecting suspicious build activities such as building an image that immediately initiates network connections to known malicious destinations, using obfuscated or unusual command-line arguments, building images on unauthorized hosts or by unauthorized users, connecting to non-standard repositories during a build, or a suspicious sequence of building an image, running it, and the resulting container exhibiting malicious network behavior like C2 beaconing."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Is a recently built container image associated with network connections to known malicious indicators?"
    context: "Adversaries may build an image containing malware or a C2 client. Immediately after the build, this image might be used to initiate contact with malicious infrastructure. Correlating the build event with subsequent network traffic to known malicious IPs, domains, or files within a short time window is a high-fidelity method for detection."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek files.log"
      - "Container host systems"
      - "CI/CD pipeline servers"
      - "Network egress points"
      - "DNS resolvers"
    range: "last 90 days"
    queries:
      - "SEARCH process logs for 'docker build'. For each host, SEARCH network/file logs within 5 minutes after build. JOIN destination IPs/domains/file hashes with threat intel. ALERT on match."
  - question: "Are container build processes making DNS requests to domains with unusually high entropy, possibly indicating DGA usage?"
    context: "Domain Generation Algorithms (DGAs) are used by malware to dynamically generate C2 domains, making them hard to block. High character randomness (entropy) in DNS queries made during a container build can indicate that the build process is fetching resources from a DGA-based C2 infrastructure."
    answer_sources:
      - "Zeek dns.log"
      - "Container host systems"
      - "CI/CD pipeline servers"
      - "Network egress points"
      - "DNS resolvers"
    range: "last 90 days"
    queries:
      - "FOR each 'docker build' event, ANALYZE associated DNS logs. CALCULATE Shannon entropy of query names. COMPARE to 30-day baseline. ALERT if entropy > 95th percentile."
  - question: "Does the network traffic profile of a container build process match patterns previously associated with malicious activity?"
    context: "Malicious build processes may exhibit distinct network behaviors, such as specific TLS fingerprints (JA3/JA3S), connection durations, or data volumes. By training a machine learning model on labeled historical data, we can automatically classify new builds and flag those that resemble known malicious patterns for investigation."
    answer_sources:
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Container host systems"
      - "CI/CD pipeline servers"
      - "Network egress points"
      - "DNS resolvers"
    range: "last 90 days"
    queries:
      - "FOR each 'docker build' event, EXTRACT network features (JA3/S, port, volume, duration). APPLY pre-trained classification model. ALERT on 'malicious' classification with high confidence."
  - question: "Are container build commands using arguments or flags commonly associated with defense evasion or obfuscation?"
    context: "Adversaries may use specific command-line flags to hide their activities. For example, '--no-cache' forces a re-download of potentially malicious layers, using '-f' with a temporary file path can hide the Dockerfile, and piping from 'curl' can execute a remote Dockerfile without saving it to disk. Detecting these flags is key to uncovering evasion."
    answer_sources:
      - "Windows Event ID 4688"
      - "Container host systems"
      - "Developer workstations"
      - "CI/CD pipeline servers"
    range: "last 90 days"
    queries:
      - "SEARCH process logs for 'docker build' or 'buildah'. SCAN command-line arguments for suspicious patterns (e.g., '--no-cache', '-f /tmp/', 'curl | docker build'). ALERT on match."
  - question: "Is a user executing a container build command with arguments that significantly deviate from their own historical usage?"
    context: "Developers and CI/CD systems often use repetitive build commands. A sudden change in the flags and arguments used by a specific user can indicate a compromised account or an insider threat attempting an unusual, potentially malicious, build. This is a form of user-specific behavioral anomaly detection."
    answer_sources:
      - "Windows Event ID 4688"
      - "Container host systems"
      - "Developer workstations"
      - "CI/CD pipeline servers"
    range: "last 90 days"
    queries:
      - "FOR each 'docker build' event, TOKENIZE command-line arguments. COMPARE with user's 90-day historical argument sets using Jaccard similarity. ALERT if score is below threshold (e.g., < 0.2)."
  - question: "Are there any container build commands with a structurally unusual or rare combination of arguments compared to the organization's baseline?"
    context: "While a build command may not match a specific known-bad pattern, it might still be anomalous when compared to all build activity across the organization. Unsupervised learning can identify these outliers, which could represent novel attack techniques or misconfigurations, without prior knowledge of what 'bad' looks like."
    answer_sources:
      - "Windows Event ID 4688"
      - "Container host systems"
      - "Developer workstations"
      - "CI/CD pipeline servers"
    range: "last 90 days"
    queries:
      - "TOKENIZE command-line arguments for all 'docker build' events. APPLY unsupervised anomaly detection model (e.g., Isolation Forest). ALERT on high-scoring outliers."
  - question: "Is a container image being built on an unauthorized host or by an unauthorized user?"
    context: "Container builds should only occur on designated systems (e.g., developer workstations, CI/CD servers) by authorized personnel. A build occurring on a production database server, domain controller, or by a user from the finance department is highly suspicious and could indicate lateral movement and misuse of a compromised asset."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain controllers"
      - "Production application servers"
      - "Database servers"
      - "Container host systems"
      - "Identity and Access Management (IAM) systems"
    range: "last 90 days"
    queries:
      - "SEARCH for 'docker build' process events. CHECK if hostname and username are in the authorized build host/user allow-lists. ALERT if not in lists."
  - question: "Has a container build occurred for the first time on a host that has never been used for builds before?"
    context: "This is a simple yet effective method to detect the initial misuse of a compromised host. If a system has no history of build activity, the very first 'docker build' command is a significant anomaly that warrants immediate investigation as it violates the established baseline for that machine's role."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain controllers"
      - "Production application servers"
      - "Database servers"
      - "Container host systems"
      - "Identity and Access Management (IAM) systems"
    range: "last 90 days"
    queries:
      - "FOR each 'docker build' event, CHECK historical build frequency for the host over the last 30 days. ALERT if historical frequency is zero."
  - question: "Does a container build event deviate from the established profile of legitimate build activity based on user, host, and time?"
    context: "Legitimate build activities often follow a pattern (e.g., specific developer groups on CI/CD hosts during business hours). A machine learning model can learn this multi-faceted 'normal' profile. An event that doesn't fit—such as a build by a marketing user on a file server at 3 AM—can be flagged as an anomaly."
    answer_sources:
      - "Windows Event ID 4688"
      - "Domain controllers"
      - "Production application servers"
      - "Database servers"
      - "Container host systems"
      - "Identity and Access Management (IAM) systems"
    range: "last 90 days"
    queries:
      - "EXTRACT features from 'docker build' events (user group, host role, time of day). APPLY pre-trained One-Class SVM model. ALERT on events classified as anomalies."
  - question: "During a build process, is the host connecting to unapproved or non-standard container registries, package repositories, or source code sites?"
    context: "Organizations typically use a limited set of trusted registries and repositories. A container build process that reaches out to an unknown or unapproved external source could be downloading a malicious base image, malicious packages, or exfiltrating data. This is a violation of supply chain security policy."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Network egress points"
      - "DNS resolvers"
      - "Container host systems"
    range: "last 90 days"
    queries:
      - "CORRELATE 'docker build' events with network logs. COMPARE destination IPs/domains against allow-list of approved registries/repositories. ALERT on connections to non-allow-listed destinations."
  - question: "Is a container build process connecting to a network (ASN) that is rarely or never used for legitimate builds?"
    context: "Most legitimate build dependencies are hosted within a predictable set of corporate or major cloud provider networks (ASNs). A connection to a rare, residential, or foreign ASN during a build is anomalous and could indicate communication with an adversary-controlled server."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Network egress points"
      - "DNS resolvers"
      - "Container host systems"
    range: "last 90 days"
    queries:
      - "DURING a build, identify destination ASNs from network logs. COMPARE against 30-day baseline of common ASNs. ALERT if ASN is rare (e.g., not in top 98%)."
  - question: "Is a container build process downloading an unusually large amount of data from a non-allow-listed destination?"
    context: "Even if a connection is made to a non-allow-listed source, the volume of data transferred provides additional context. A massive download from an unexpected source is more suspicious than a small one and could indicate the retrieval of large malicious payloads or tools."
    answer_sources:
      - "Zeek conn.log"
      - "Network egress points"
      - "DNS resolvers"
      - "Container host systems"
    range: "last 90 days"
    queries:
      - "FORECAST expected data volume to non-allow-listed destinations during builds. DURING a build, measure actual data transferred. ALERT if actual volume significantly exceeds forecast."
  - question: "Has a newly built image been immediately run, resulting in a container that connects to a known command-and-control server?"
    context: "The sequence of events—build, run, C2 connection—is a classic attack pattern. The adversary builds a custom image with their C2 client, immediately executes it, and establishes a foothold. Correlating these three events in a short time frame provides a very strong signal of a successful compromise."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Container host systems"
      - "Network egress points"
      - "Internal network segments"
    range: "last 90 days"
    queries:
      - "DETECT sequence: 'docker build', then 'docker run' of new image on same host within 10 mins. CHECK subsequent network traffic from host. ALERT if connections are made to known C2 IPs."
  - question: "After a 'build-then-run' sequence, does the resulting container exhibit highly periodic network beaconing?"
    context: "Command-and-control (C2) implants often 'beacon' back to the C2 server at regular intervals (e.g., every 60 seconds). This highly periodic traffic has a very low time variance, which is distinct from normal user or application traffic. Detecting this rhythmic pattern after a build-run sequence can uncover C2 channels."
    answer_sources:
      - "Zeek conn.log"
      - "Container host systems"
      - "Network egress points"
      - "Internal network segments"
    range: "last 90 days"
    queries:
      - "AFTER a 'build-then-run' sequence, analyze outbound connection timestamps. CALCULATE standard deviation of time deltas between connections. ALERT if deviation is near zero, indicating beaconing."
  - question: "Does the sequence of system events following a 'build-then-run' action deviate from the normal patterns of legitimate container deployments?"
    context: "A legitimate application deployment has a characteristic sequence of events (e.g., process starts, connects to database). A malicious deployment will have a different sequence (e.g., enumerates system info, connects to external C2). A sequence analysis model can learn 'legitimate' sequences and flag any deployment that follows an improbable, and therefore suspicious, path."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Container host systems"
      - "Network egress points"
      - "Internal network segments"
    range: "last 90 days"
    queries:
      - "TRAIN a sequence model (HMM) on event chains (process, network, file) after legitimate deployments. FEED event sequence from new 'build-then-run' into model. ALERT if sequence probability is low."