name: 'T1105: Ingress Tool Transfer'
id: f9d3a1b2-c3e4-4f5a-6b7c-8d9e0f1a2b3c
description: "Investigates whether an adversary is transferring tools or files into the network, potentially from external infrastructure staged for this purpose. This is identified by observing network connections or file transfers matching threat intelligence; command-line utilities (e.g., powershell.exe, certutil.exe) executing downloads; network connections with unusually high responder-to-originator byte ratios; common applications (e.g., WINWORD.EXE) spawning shell processes that download files; connections to non-corporate cloud storage or code repositories from non-browser processes; file type masquerading where file extensions do not match their actual content; and downloads from newly registered domains or legitimate hosting services in an anomalous manner."
type: technique
related:
  - 'TA0011: Command and Control'
  - 'TA0042: Resource Development'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: Are network connections or file transfers occurring with indicators (IP, domain, hash) that match known malicious threat intelligence?
    context: This question aims to identify direct evidence of tool transfer by correlating network and file activity with external threat intelligence feeds. A match on an IP address, domain name, TLS certificate, or file hash provides a high-confidence signal that malicious infrastructure or malware is involved in the activity, warranting immediate investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek files.log
      - Internet gateways, external-facing web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          JOIN Zeek conn, dns, http, ssl logs ON connection_uid
          MATCH conn.destination_ip, dns.query, http.host, ssl.server_name AGAINST threat_intel_feed
          SEPARATELY:
          MATCH files.log md5, sha1 AGAINST malware_hash_repository
          IF match THEN ALERT
  - question: Are files with high-entropy (randomly generated) names being transferred, potentially indicating malware?
    context: Adversaries often use randomly generated filenames for malware to evade simple signature-based detections. By calculating the Shannon entropy of filenames and comparing them against a baseline of normal activity, we can identify statistically unusual filenames that are likely to be machine-generated and potentially malicious.
    answer_sources:
      - Zeek files.log
      - Internet gateways, external-facing web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each file in files.log:
            entropy = CALCULATE_SHANNON_ENTROPY(file.name)
            baseline_99th_percentile = GET_BASELINE_ENTROPY(last 30 days)
            IF entropy > baseline_99th_percentile THEN FLAG for review
  - question: Can machine learning models identify malicious network connections based on their characteristics, even without a known bad indicator?
    context: This question uses a supervised machine learning model to proactively identify malicious network traffic that may not match existing threat intelligence. By training on features like connection duration, byte counts, protocol details (JA3/JA3S), and domain characteristics, the model can learn the subtle patterns of malicious tool transfers and flag suspicious connections that would otherwise be missed.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Internet gateways, external-facing web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each new outbound connection:
            features = EXTRACT_FEATURES(conn.log, ssl.log, http.log)
            score = ML_MODEL_PREDICT(features)
            IF score > 0.9 THEN ALERT
  - question: Are built-in command-line utilities (like PowerShell, CertUtil, BITSAdmin) being used to download files from the internet?
    context: Adversaries frequently abuse legitimate, pre-installed Windows utilities, known as Living-off-the-Land Binaries (LOLBins), to download tools and malware. This helps them blend in with normal administrative activity and avoid detection. This question focuses on finding specific command-line patterns associated with file downloads using these tools.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, application servers, and domain controllers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH Windows Event ID 4688
          WHERE ProcessName IN ('powershell.exe', 'certutil.exe', 'bitsadmin.exe', 'curl.exe', 'wget.exe')
          AND CommandLine MATCHES REGEX for 'IEX', 'DownloadString', '-urlcache', '/transfer', '-O'
          IF match THEN ALERT
  - question: Are there command lines for common utilities that are statistically rare or anomalous compared to an established baseline?
    context: Beyond looking for specific keywords, this question seeks to identify malicious commands by finding statistical outliers. By calculating the Term Frequency-Inverse Document Frequency (TF-IDF) of command-line arguments, we can flag commands that use rare terms or combinations of terms, which often correspond to malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, application servers, and domain controllers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each command line for monitored processes:
            tokens = PARSE_ARGUMENTS(command line)
            cumulative_score = SUM(TF-IDF(token) for token in tokens)
            baseline_top_1_percent = GET_BASELINE_TF-IDF_SCORE(last 30 days)
            IF cumulative_score > baseline_top_1_percent THEN FLAG for review
  - question: Can a machine learning model detect anomalous command-line invocations for common LOLBins?
    context: This question employs an autoencoder, a type of unsupervised machine learning model, to learn the structure of normal command lines for tools like PowerShell. When an adversary uses a novel or complex command, it will deviate from the learned patterns, resulting in a high 'reconstruction error' and flagging it as a potential threat.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, application servers, and domain controllers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each new command line for monitored LOLBins:
            reconstruction_error = AUTOENCODER_MODEL_EVAL(command line)
            IF reconstruction_error is high THEN FLAG as anomaly
  - question: Are there large, one-way network transfers occurring over non-web protocols?
    context: This question aims to find large file downloads that are not part of normal web browsing. A high ratio of data received (responder bytes) versus data sent (originator bytes), especially for large transfers over non-HTTP/S ports, is a strong indicator of a tool or malware being downloaded to a host.
    answer_sources:
      - Zeek conn.log
      - Network egress and ingress points, server farm network segments, and critical asset subnets.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH Zeek conn.log
          WHERE protocol IS NOT 'http' OR 'https'
          AND resp_bytes > 5MB
          AND (resp_bytes / (orig_bytes + resp_bytes)) > 0.99
          IF match THEN ALERT
  - question: Are there statistically significant spikes in the amount of data being downloaded in a single connection?
    context: This question establishes a historical baseline for the typical download size for specific network paths (source-destination-port). It then looks for connections that dramatically exceed this baseline (e.g., by more than 3 standard deviations), which could indicate an anomalous and potentially malicious file transfer.
    answer_sources:
      - Zeek conn.log
      - Network egress and ingress points, server farm network segments, and critical asset subnets.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each new connection:
            baseline = GET_HISTORICAL_BASELINE(src, dst, dport, last 30 days)
            IF connection.resp_bytes > (baseline.mean + 3 * baseline.std_dev) THEN ALERT
  - question: Is there an anomalous volume of data being transferred to critical assets or network segments over time?
    context: Instead of looking at single connections, this question applies time-series forecasting to aggregate network traffic volumes. By modeling the expected daily and weekly patterns of data ingress, it can detect when the actual volume of data being received significantly exceeds the predicted amount, indicating a potential large-scale tool transfer or data staging event.
    answer_sources:
      - Zeek conn.log
      - Network egress and ingress points, server farm network segments, and critical asset subnets.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          AGGREGATE resp_bytes in 1-hour bins for critical segment
          FORECAST expected volume using SARIMA model
          IF actual_volume > upper_bound_of_prediction THEN ALERT
  - question: Is a common user application spawning a shell, which then makes an outbound network connection?
    context: This question looks for a classic attack chain where a user application like a web browser or office document is exploited. The application spawns a command shell or script interpreter, which then connects to the internet, likely to download a secondary payload. Correlating these three events in sequence provides a strong signal of a successful exploit.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Windows Event ID 4663
      - User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          CORRELATE events where:
          1. Parent (WINWORD.EXE, CHROME.EXE) spawns Child (cmd.exe, powershell.exe) [EID 4688]
          2. Child process makes outbound network connection [EID 5156]
          IF sequence matches THEN ALERT
  - question: Are there any rare or never-before-seen parent-child process relationships occurring?
    context: Adversaries often create unusual process execution chains, such as an email client spawning a certificate utility (OUTLOOK.EXE -> certutil.exe). By building a frequency table of all parent-child process pairs in the environment, we can flag any pair that is statistically rare, as it deviates from normal system and user behavior.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          MAINTAIN frequency table of all parent-child process pairs over 30 days
          FOR each new pair observed:
            IF frequency < low_threshold (e.g., 10 occurrences) THEN FLAG as anomalous
  - question: Can graph-based analysis identify abnormal process execution chains?
    context: This question models process activity as a graph, where processes are nodes and parent-child relationships are edges. By applying graph-based anomaly detection algorithms, we can identify entire subgraphs or 'motifs' of process interaction that are abnormal, such as a browser spawning a shell that downloads a file, which would be flagged as a deviation from the learned normal process behaviors.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          CONSTRUCT process execution graphs from Event ID 4688
          APPLY graph anomaly detection algorithm (e.g., GraphSAGE)
          FLAG rare or abnormal subgraphs for investigation
  - question: Is a non-browser process making connections to unsanctioned cloud storage or code repository services?
    context: Adversaries may use legitimate services like Pastebin or GitHub to host malicious tools. While browser access to these sites might be normal, a script interpreter (powershell.exe) or system utility (rundll32.exe) connecting to them is highly suspicious. This question correlates network connections to these services with the process that initiated them to find this anomalous behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Internet gateways, DNS resolvers, and endpoint process monitoring.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          MAINTAIN list of unsanctioned service domains
          CORRELATE network logs (DNS, SSL) with process logs (EID 4688)
          IF connection to unsanctioned domain AND process is NOT an approved browser THEN ALERT
  - question: Is there a statistical anomaly in the volume of traffic to unsanctioned file sharing services from any single host?
    context: This question establishes a baseline profile for each host's traffic patterns to different categories of websites. A sudden, significant increase in the percentage of traffic directed to 'Unsanctioned File Sharing' sites for a particular host, compared to its own 30-day history, indicates a behavioral change that could be related to malicious tool transfer.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - Internet gateways, DNS resolvers, and endpoint process monitoring.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          PROFILE daily percentage of traffic by category for each host
          CALCULATE 30-day rolling average and standard deviation
          IF percent_to_unauthorized_sharing > (average + 3 * std_dev) THEN ALERT
  - question: Can clustering algorithms identify hosts with outlier network behaviors?
    context: This question uses unsupervised machine learning to group hosts with similar network traffic profiles. Hosts that do not fit well into any cluster are flagged as 'noise' or outliers. These outlier hosts have unique network behaviors—such as unusual port usage, high SNI entropy, or strange JA3 hashes—that may indicate connections to C2 infrastructure or unauthorized file transfer services.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Internet gateways, DNS resolvers, and endpoint process monitoring.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          EXTRACT feature vectors from Zeek logs for each host
          APPLY DBSCAN clustering algorithm
          INVESTIGATE hosts flagged as noise/outliers
  - question: Is a file being downloaded from a source IP or domain that matches a CTI feed?
    context: This is a high-confidence detection that correlates file downloads directly with known-bad infrastructure. By checking the source domain or IP of a file transfer against a Cyber Threat Intelligence (CTI) feed, a match provides strong evidence that the downloaded file is associated with a malicious campaign.
    answer_sources:
      - Zeek http.log
      - Zeek file.log
      - Zeek dns.log
      - CTI Feed
      - Internet gateways, web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          MATCH http.log `host` and dns.log `query` against CTI feed
          IF match, JOIN on UID to find corresponding file.log entry
          IF file download from CTI-flagged source THEN ALERT
  - question: Can a risk score based on domain prevalence and CTI data identify suspicious downloads?
    context: This question creates a more nuanced risk score than a simple CTI match. It combines the rarity of a domain (inverse prevalence) with its CTI reputation. A file download from a domain that is both rarely seen in the organization and has a negative CTI score is significantly riskier and more likely to be malicious than a download from a popular domain.
    answer_sources:
      - Zeek http.log
      - Zeek file.log
      - Zeek dns.log
      - CTI Feed
      - Internet gateways, web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each file download:
            prevalence = GET_DOMAIN_PREVALENCE(last 90 days)
            cti_score = GET_CTI_SCORE(domain)
            risk_score = COMBINE(1/prevalence, cti_score)
            IF risk_score > 99th_percentile THEN ALERT
  - question: Can a machine learning model predict if a file download is malicious based on network and CTI features?
    context: This question uses a supervised classification model to score file downloads in real-time. By training on a wide range of features—such as the user agent, file MIME type, file size, source ASN, domain age, and CTI score—the model can learn to identify complex patterns indicative of malicious downloads that rule-based systems might miss.
    answer_sources:
      - Zeek http.log
      - Zeek file.log
      - Zeek dns.log
      - CTI Feed
      - Internet gateways, web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          FOR each new download:
            features = EXTRACT_FEATURES(http.log, file.log, domain_age, etc.)
            prediction = ML_MODEL_PREDICT(features)
            IF prediction > 0.90 THEN ALERT
  - question: Are LOLBins being executed with command-line arguments indicating a file download?
    context: This is a direct hunt for the abuse of Living-Off-the-Land Binaries (LOLBins) for tool transfer. By using regular expressions to scan command lines for specific utilities (certutil, bitsadmin, powershell, curl, wget) and their associated download flags, we can catch adversaries in the act of pulling files onto a system.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, database servers), user workstations, and application servers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH process creation logs (EID 4688, Sysmon 1)
          WHERE ProcessCommandLine MATCHES REGEX for `certutil -urlcache`, `bitsadmin /transfer`, etc.
          IF match THEN ALERT
  - question: Is there an anomalous LOLBin execution based on parent process rarity or command-line entropy?
    context: This question seeks to find LOLBin abuse through two forms of anomaly detection. First, it flags rare parent-child process relationships (e.g., a non-standard process launching PowerShell). Second, it identifies when a LOLBin is executed with an unusually complex or random-looking command line (high entropy), which often indicates obfuscated or malicious code.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, database servers), user workstations, and application servers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          BASELINE parent-child frequency and command-line entropy for LOLBins
          ALERT IF new execution has a rare parent (bottom 1% frequency)
          OR ALERT IF command-line entropy > 98th percentile for that process
  - question: Is there a time-series anomaly in the frequency of LOLBin download commands across the enterprise?
    context: This question aggregates all LOLBin download commands across the network and analyzes their frequency over time. A time-series model learns the normal rhythm (e.g., more activity during business hours). A sudden, unexpected spike in this activity, outside the forecasted range, could indicate a widespread, coordinated campaign involving tool downloads.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, database servers), user workstations, and application servers.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          AGGREGATE count of LOLBin download commands per hour
          MODEL normal seasonality with SARIMA
          ALERT IF observed count significantly exceeds forecast
  - question: Is a file being downloaded that is masquerading as a different file type?
    context: Adversaries often disguise executables as benign files (e.g., naming malware 'image.jpg') to trick users and bypass simple filters. This question detects such masquerading by comparing the file extension in the URL with the actual file type determined by deep packet inspection (magic byte analysis). A mismatch, like an executable file with a '.jpg' extension, is highly suspicious.
    answer_sources:
      - Zeek file.log
      - Zeek http.log
      - Internet gateways and network sensor tap points where traffic is mirrored.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          JOIN file.log and http.log on connection UID
          ALERT IF file.log.is_exe IS TRUE
          AND http.log.uri ENDS WITH non-exe extension (.jpg, .png, .txt, etc.)
  - question: Are there statistically rare combinations of file extension, server-provided MIME type, and inferred file type?
    context: This question goes beyond simple extension vs. content mismatches and looks for unusual triplets of file-type indicators. By tracking the frequency of every combination seen on the network, it can flag any new, low-frequency triplet as anomalous. This can uncover novel or subtle masquerading techniques.
    answer_sources:
      - Zeek file.log
      - Zeek http.log
      - Internet gateways and network sensor tap points where traffic is mirrored.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          MAINTAIN frequency table of (URI extension, HTTP MIME type, Inferred MIME type)
          ALERT IF a new triplet's frequency falls below a low threshold (e.g., 0.1%)
          AND the inferred type is an executable or script
  - question: Can an unsupervised machine learning model detect anomalous file transfers indicative of masquerading?
    context: This question uses an Isolation Forest model to find outliers among file transfers. It considers multiple features simultaneously, including the file extension, MIME types, file size, and connection duration. The model can identify unusual combinations of these features that represent a deviation from normal patterns, effectively flagging sophisticated file masquerading attempts.
    answer_sources:
      - Zeek file.log
      - Zeek http.log
      - Internet gateways and network sensor tap points where traffic is mirrored.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          CREATE feature vectors from URI extension, MIME types, file size, etc.
          APPLY Isolation Forest model to identify outliers
          FLAG outliers as potential file masquerading
  - question: Is an executable file being downloaded from a Newly Registered Domain (NRD)?
    context: Adversaries frequently use newly registered domains for malicious campaigns, as these domains have no established reputation. This question sequences multiple events: a DNS query for a domain registered within the last 60 days, a subsequent connection to that domain's IP, and the download of an executable file. This chain of events is a strong indicator of a malicious tool transfer.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek file.log
      - WHOIS Data
      - Internal DNS resolvers, DNS forwarders, and internet gateways.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          ENRICH DNS logs with WHOIS data for domain age
          IF domain age < 60 days:
            CORRELATE with conn.log to see if host connects to resolved IP
            CORRELATE with file.log to see if an executable is downloaded
            IF all three events occur, ALERT
  - question: Is a file being downloaded from a domain with a high-risk score based on age, entropy, and prevalence?
    context: This question develops a composite risk score for domains to better prioritize alerts. It combines multiple risky characteristics: a young domain age, high entropy in the domain name (suggesting it's machine-generated), a low DNS TTL value (common in fast-flux networks), and low prevalence within the organization. A file download from a domain with a high aggregate score is a significant red flag.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek file.log
      - WHOIS Data
      - Internal DNS resolvers, DNS forwarders, and internet gateways.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          CALCULATE domain risk score based on (age, entropy, TTL, prevalence)
          ALERT when a file download occurs from a domain with a risk score > 99th percentile
  - question: Does graph analysis reveal a group of internal hosts communicating with a cluster of related NRDs?
    context: This question uses graph analysis to find coordinated campaigns. It looks for patterns where multiple internal hosts suddenly start communicating with a group of related newly registered domains. A subsequent download of similar files across this group strongly suggests a targeted attack where the adversary is directing multiple compromised hosts to the same malicious infrastructure.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek file.log
      - WHOIS Data
      - Internal DNS resolvers, DNS forwarders, and internet gateways.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          CONSTRUCT communication graph of (internal hosts, domains, external IPs)
          USE graph algorithm to detect community of hosts communicating with cluster of NRDs
          FLAG for investigation
  - question: Is a file being downloaded from a legitimate code or file hosting service by a host that should not be doing so?
    context: Adversaries abuse trusted sites like GitHub and Pastebin to host malware. This question identifies this abuse by creating a watchlist of hosts (e.g., servers in the HR department) that have no legitimate reason to download files from these services. An alert is generated if any host on this watchlist initiates a download from a pre-defined list of such file-sharing domains.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek file.log
      - Active Directory
      - Internet gateways, developer workstations, and servers or endpoints that are expected to interact with code repositories or file sharing services.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          DEFINE watchlist of restricted hosts (e.g., by IP, department)
          DEFINE list of code/file hosting domains
          ALERT IF a host from watchlist downloads from a defined domain
  - question: Is a host exhibiting anomalous download behavior from legitimate file-sharing sites?
    context: Even on hosts where downloads from sites like GitHub are expected (e.g., developer workstations), the nature of the download can be anomalous. This question establishes a baseline of normal activity for each host, including typical file sizes and types. It then uses statistical methods (Interquartile Range) to detect outlier downloads, such as an unusually large file or a file type never before seen from that host.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek file.log
      - Active Directory
      - Internet gateways, developer workstations, and servers or endpoints that are expected to interact with code repositories or file sharing services.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          BASELINE 30-day profile of file MIME types and sizes per host for file-sharing sites
          USE IQR method to find outliers
          ALERT IF new download's size is an outlier OR MIME type is new for that host
  - question: Can a machine learning model detect anomalous download activity for a specific user or user group?
    context: This question builds a highly tailored anomaly detection model for an individual user or a user group (e.g., 'Sales'). The model learns the normal patterns of their download activity from file-sharing platforms, considering features like the time of day, user agent, and file types. Any activity that deviates significantly from this learned 'normal' behavior is flagged as an anomaly, potentially indicating a compromised account being used to download malicious tools.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek file.log
      - Active Directory
      - Internet gateways, developer workstations, and servers or endpoints that are expected to interact with code repositories or file sharing services.
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          TRAIN a one-class SVM model on normal download features for a user/group
          APPLY model to new download activity
          FLAG any download classified as an anomaly