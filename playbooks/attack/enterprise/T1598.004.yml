name: T1598.004: Spearphishing Voice
id: 0c2b9a7e-1f8d-4a1b-9c3f-5d6e8a7b0c1d
description: This playbook addresses the information requirement, "Is the adversary conducting reconnaissance using spearphishing via voice? (PIR)". It provides investigative steps to detect vishing-related activities by monitoring for several key indicators: internal hosts connecting to known malicious vishing infrastructure; the unauthorized installation or execution of remote administration tools; process execution originating from downloaded disk images or archives; anomalous remote authentications that follow visits to low-reputation domains; and web browsers or Office applications spawning script interpreters that initiate network connections.
type: technique
related:
- TA0043: Reconnaissance
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are internal hosts connecting to or resolving domains/IPs known to be associated with vishing campaigns?
  context: This question aims to identify direct connections to malicious infrastructure. Matching network logs against a high-fidelity threat intelligence feed focused on vishing is the most direct way to detect this activity. A positive match is a strong indicator of compromise and requires immediate investigation.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - Network egress points
  - DNS resolvers
  - Web proxies
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH network_logs (dns, connection, http) | JOIN with vishing_threat_intel_feed ON destination_ip OR domain OR http_host | IF match_found, CREATE high_severity_alert
- question: Are internal hosts visiting newly registered, low-prevalence domains with potentially algorithmically generated names?
  context: Adversaries often use newly registered domains (NRDs) for phishing campaigns. This question helps uncover suspicious domains that aren't yet on threat lists by analyzing their age, rarity within the organization, and subdomain randomness (entropy). A combination of these factors suggests a domain was created for malicious purposes.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - Zeek http.log
  - WHOIS data
  - Network egress points
  - DNS resolvers
  - Web proxies
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each destination_domain in network_logs: GET registration_date from WHOIS. GET historical_visitor_count. GET subdomain_entropy. IF registration_date < 30_days_ago AND visitor_count < 0.1%_of_total_hosts AND entropy > 3.5, CREATE alert
- question: Can machine learning models identify suspicious DNS and HTTP requests based on features like domain age, entropy, and keyword presence?
  context: This question leverages machine learning to proactively score the 'maliciousness' of web traffic. By training a model on various features (e.g., domain age, TLD, subdomain entropy, keywords like 'support' or 'mfa'), the system can flag suspicious requests that may not meet rigid rule-based criteria, allowing for the detection of novel threats.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - WHOIS data
  - Network egress points
  - DNS resolvers
  - Web proxies
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each dns/http_request: EXTRACT features (domain_age, entropy, TLD, keywords, etc.). INPUT features into classification_model. IF model_output_score > 0.90, CREATE alert
- question: Has an unapproved remote administration tool been installed or executed on an endpoint?
  context: Vishing attackers often trick users into installing legitimate remote administration tools to gain access. This question focuses on detecting the presence of any such tool that is not on a pre-approved company allow-list. An alert for an unapproved tool is a strong signal of a potential security incident.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 11707
  - Windows Event ID 4697
  - Windows Event ID 7045
  - All user workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - and servers not designated for IT administration.
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation_logs (EID 4688) OR software_install_logs (EID 11707) OR service_install_logs (EID 7045, 4697) | IF process_name OR file_hash OR signing_cert NOT IN approved_remote_admin_tools_list, CREATE alert
- question: Is a remote administration tool being used by a user whose role does not typically require it, or is it the first time this user or host has used the tool?
  context: Even approved tools can be used maliciously. This question seeks to identify anomalous usage by comparing the user's role against a list of authorized user groups for that specific tool. It also highlights first-time usage, which could indicate the start of a vishing-initiated takeover.
  answer_sources:
  - Windows Event ID 4688
  - All user workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - and servers not designated for IT administration.
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each remote_admin_tool_execution: GET user_role. IF user_role NOT IN tool_authorized_roles, CREATE alert. IF is_first_time_execution_for_user OR is_first_time_execution_for_host, CREATE alert.
- question: Does the current usage of a remote administration tool deviate from the historically normal patterns for that user or user group?
  context: This question uses a time-series model to learn what 'normal' remote tool usage looks like (e.g., time of day, session duration, network destinations). It can then automatically flag activity that deviates significantly from this learned baseline, such as an IT admin tool being used at 3 AM from an unusual IP, which could indicate a compromised account.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - All user workstations
  - Virtual Desktop Infrastructure (VDI) instances
  - and servers not designated for IT administration.
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each remote_admin_tool_usage_event: INPUT event_sequence into time_series_model. GET reconstruction_error. IF reconstruction_error > threshold, CREATE alert.
- question: Has a script interpreter or suspicious process been executed from a recently downloaded disk image (ISO) or archive (ZIP)?
  context: Adversaries use ISO and ZIP files to bypass email gateways and user warnings. This question looks for the specific chain of events where a user downloads one of these file types, and shortly after, a process is launched from the mounted image or a temporary extraction folder. This is a common and high-confidence vishing TTP.
  answer_sources:
  - Zeek files.log
  - Windows Event ID 4688
  - Network egress points
  - User workstations
  - Email gateway
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: ON file_download (type=ISO/ZIP) for host_ip: START monitoring process_creation on host_ip for 5_minutes. IF process_path matches mounted_drive_path OR temp_extraction_path AND process_name is script_interpreter, CREATE alert.
- question: Has a user downloaded an unusual type of file (e.g., an ISO) that they do not normally handle?
  context: This question focuses on user behavior. Most non-IT users rarely, if ever, download disk images. By baselining the types of files each user typically downloads, the system can flag when a user downloads a rare file type for them, like an ISO, which could be part of a vishing lure.
  answer_sources:
  - Zeek files.log
  - Network egress points
  - User workstations
  - Email gateway
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each user_file_download: GET MIME_type. CALCULATE historical_download_frequency_for_user(MIME_type). IF frequency_percentile < 5th, CREATE low_severity_alert. ENRICH with source_reputation.
- question: Can a machine learning model detect the specific sequence of events corresponding to a malicious ISO/ZIP execution?
  context: This question applies a more advanced, sequence-aware model to detect the full attack chain with high fidelity. By training a model to recognize the specific sequence of a download, a malicious file creation (like a .LNK), and a script execution, this method can reduce false positives and accurately identify this attack pattern.
  answer_sources:
  - Zeek files.log
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Network egress points
  - User workstations
  - Email gateway
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: COLLECT event_sequences (download, file_create, process_exec) per host. INPUT sequence into sequence_analysis_model. IF model classifies sequence as malicious, CREATE high_severity_alert.
- question: Did a user successfully log in remotely shortly after visiting a known phishing domain?
  context: This is a critical correlation. If a user visits a site known for credential harvesting and then their credentials are used for a successful remote login (VPN, RDP, etc.) within minutes, it's highly probable that their credentials have been compromised and are being actively used by an attacker.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - VPN Authentication Logs
  - Network egress points
  - VPN concentrators
  - Domain Controllers
  - Cloud IAM services
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: ON web_visit to phishing_domain by user: START monitoring remote_logins for user for 15_minutes. IF successful_remote_login (Type 3 or 10) by user, CREATE high_severity_alert.
- question: Has a remote login occurred from a new or unusual location (country, network) or at an abnormal time for a specific user?
  context: This question implements the classic 'impossible travel' and time-based anomaly detection. By baselining where and when a user normally logs in from, the system can score and flag new logins that deviate from this pattern (e.g., a login from a new country or at 3 AM for a 9-to-5 employee), indicating a possible account takeover.
  answer_sources:
  - Windows Event ID 4624
  - VPN Authentication Logs
  - Zeek conn.log
  - Network egress points
  - VPN concentrators
  - Domain Controllers
  - Cloud IAM services
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each successful_remote_login: GET source_country, source_ASN, time_of_day. COMPARE against user's 30-day baseline. CALCULATE risk_score based on deviations. IF risk_score > threshold, CREATE alert.
- question: Is a user's remote login behavior significantly different from both their own history and the typical behavior of their peers?
  context: User and Entity Behavior Analytics (UEBA) provides a more sophisticated approach than simple baselining. This question asks if a user's login behavior is not only anomalous for them but also for their peer group (e.g., other accountants, other developers). A developer logging in from a new ASN might be normal for that peer group, but an accountant doing so might be highly anomalous.
  answer_sources:
  - Windows Event ID 4624
  - VPN Authentication Logs
  - Zeek conn.log
  - Network egress points
  - VPN concentrators
  - Domain Controllers
  - Cloud IAM services
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each user_remote_login: INPUT user_behavior into UEBA_model. IF model flags deviation from self_baseline AND peer_group_baseline, CREATE alert.
- question: Has a web browser or Microsoft Office application spawned a script interpreter (like PowerShell) that then made an outbound network connection?
  context: This is a classic indicator of compromise. Legitimate user activity rarely involves a browser or Word document directly launching PowerShell to connect to the internet. This behavior is a common pattern for executing malicious payloads delivered via phishing links or macro-enabled documents.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - User workstations
  - Terminal servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH process_creation (EID 4688) WHERE parent_process IN (browsers, office_apps) AND child_process IN (script_interpreters). IF child_process_id makes outbound_network_connection (EID 5156 or conn.log), CREATE alert.
- question: Is a script interpreter being executed with an unusually long or complex (high-entropy) command line?
  context: Adversaries often encode or obfuscate their PowerShell/Wscript payloads to evade signature detection. This results in very long and random-looking command lines. This question aims to detect this obfuscation by measuring the length and Shannon entropy of the command line, flagging executions that are statistical outliers.
  answer_sources:
  - Windows Event ID 4688 (with command-line logging enabled)
  - User workstations
  - Terminal servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each script_interpreter_execution (EID 4688): CALCULATE command_line_entropy and command_line_length. IF entropy > 4.5 OR length > 99th_percentile, CREATE alert.
- question: Can a machine learning model analyze the content of a script (from the command line) and determine if it is malicious, even if it's obfuscated?
  context: This question proposes a sophisticated detection method that goes beyond simple command-line metrics. By parsing the script's structure (using an Abstract Syntax Tree) or its components (tokens), a machine learning model can learn the fundamental patterns of malicious scripts, allowing it to identify threats even when they are heavily obfuscated or novel.
  answer_sources:
  - Windows Event ID 4688 (with command-line logging enabled)
  - User workstations
  - Terminal servers
  range: Last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each script_interpreter_execution (EID 4688): EXTRACT script_block from command_line. PARSE into AST or tokens. INPUT into script_classification_model. IF model_confidence is high for 'malicious', CREATE alert.