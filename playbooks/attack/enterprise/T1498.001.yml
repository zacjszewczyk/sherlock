name: T1498.001: Direct Network Flood
id: 2c8a9f6e-1d4b-4a5c-8b7f-3d4e5f6a7b8c
description: This playbook helps determine if an adversary is attempting to cause a denial of service (DoS) via direct network flooding. It provides investigative questions to detect various flood characteristics, such as anomalous traffic volume from known malicious sources, packet-level signatures of DDoS tools, sustained surges in packet or byte rates, a decrease in traffic source entropy, an unusual ratio of high source IPs to low data volume, and a sharp increase in non-established TCP sessions. The goal is to identify and confirm a DoS attack by analyzing network traffic patterns and comparing them against established baselines and known attack signatures.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any direct network connections from source IPs known to be associated with botnets or DDoS attacks?
  context: This question aims to identify any traffic originating from sources that are already blacklisted in threat intelligence feeds for malicious activities like DDoS attacks or botnet command and control. A direct match provides a high-confidence indicator that the observed traffic is part of a malicious campaign.
  answer_sources:
  - Zeek conn.log
  - Internet gateways
  - Border routers and firewalls
  - External-facing web servers
  - DNS servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log WHERE source_ip IN threat_intel_feed_of_botnets_or_ddos_sources
- question: Is there an anomalous percentage of inbound traffic volume or connection count from known malicious IPs targeting a specific service?
  context: This question moves beyond simple matches to identify when known malicious sources constitute an unusually large portion of the total traffic to a service. This helps detect coordinated attacks that may not be individually large but are significant in aggregate, by comparing the current percentage of malicious traffic against a 30-day historical baseline.
  answer_sources:
  - Zeek conn.log
  - Internet gateways
  - Border routers and firewalls
  - External-facing web servers
  - DNS servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE percentage of traffic (bytes, connections) from threat_intel_ips over 1-min windows; ALERT if percentage > 99th_percentile_of_30_day_baseline
- question: Does the volume of traffic from known malicious IPs significantly exceed the forecasted volume for this time period?
  context: This question uses predictive modeling to identify sophisticated attacks. By forecasting the 'normal' or expected amount of background noise from known malicious IPs, it can detect when a coordinated campaign begins, causing a sudden spike that deviates significantly from the predicted trend and its confidence interval.
  answer_sources:
  - Zeek conn.log
  - Internet gateways
  - Border routers and firewalls
  - External-facing web servers
  - DNS servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FORECAST expected traffic volume from threat_intel_ips; ALERT if observed_volume > forecasted_volume_confidence_interval
- question: Does network traffic exhibit packet-level signatures of known DDoS attack tools?
  context: This question looks for specific, static indicators associated with common DDoS tools, such as fixed packet sizes (e.g., 1024 bytes in a UDP flood) or unusual TCP flag combinations (e.g., SYN+FIN). A match provides a strong indication that an automated attack tool is being used against a target.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Network security monitoring sensors (e.g., Zeek sensors at network chokepoints)
  - DMZ segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network traffic for static_signatures (e.g., fixed_packet_size=1024, tcp_flags=SYN+FIN)
- question: Is there an anomalously low variation in packet sizes combined with a high packet-per-second rate, suggesting a homogenous flood?
  context: This question aims to detect flood attacks that use uniform packets. Legitimate traffic typically has a wide variety of packet sizes. When an attack tool sends a flood of identical packets, the standard deviation of packet sizes will drop close to zero. Combining this with a high packet rate is a strong statistical indicator of a flood.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Network security monitoring sensors (e.g., Zeek sensors at network chokepoints)
  - DMZ segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE packet_size_std_dev and pps over 30-sec windows; ALERT if std_dev < 5th_percentile AND pps > 95th_percentile
- question: Can machine learning models classify current traffic flows as being part of a known flood attack type?
  context: This question leverages a trained machine learning classifier to analyze multiple traffic features (protocol, packet length, inter-arrival time, etc.) in near-real-time. This approach can identify complex attack patterns that may not be caught by simple symbolic or statistical rules, providing a more robust and adaptable detection method.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Network security monitoring sensors (e.g., Zeek sensors at network chokepoints)
  - DMZ segments
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY pre-trained classification model to live traffic flows; ALERT if classification is 'flood_attack'
- question: Has traffic to a critical service breached pre-defined static thresholds for packet or byte rates?
  context: This question uses a simple, high-watermark approach to detect brute-force volume attacks. By setting absolute limits for acceptable traffic rates to critical services, any sustained breach of these thresholds can be immediately flagged as a potential denial-of-service event, providing a clear and immediate signal.
  answer_sources:
  - Zeek conn.log
  - Critical application servers (e.g., authentication, database)
  - Network load balancers
  - API Gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MONITOR PPS and BPS to critical services; ALERT if rate > static_threshold (e.g., 50k PPS) for > 10 seconds
- question: Is the current traffic rate to a critical service statistically anomalous compared to its historical baseline?
  context: This question provides a more dynamic approach than static thresholds by comparing current traffic volume to the service's own historical norms. This method, known as baselining, is effective at detecting attacks that might not cross a high static threshold but are highly unusual for the targeted service, especially those with variable traffic patterns.
  answer_sources:
  - Zeek conn.log
  - Critical application servers (e.g., authentication, database)
  - Network load balancers
  - API Gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE PPS and BPS over 1-min intervals; ALERT if current_rate > 99th_percentile_of_30_day_baseline for 3 consecutive intervals
- question: Is the current traffic volume to a key service anomalous when accounting for normal cyclical patterns like time of day?
  context: This question uses advanced time series analysis to distinguish a true attack from a legitimate, predictable traffic spike (e.g., a flash sale). By modeling normal seasonality (time of day, day of week), the model can identify surges in traffic that are genuinely abnormal and not just part of regular business cycles.
  answer_sources:
  - Zeek conn.log
  - Critical application servers (e.g., authentication, database)
  - Network load balancers
  - API Gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY time series anomaly detection model to PPS/BPS data; ALERT if current observation is flagged as anomalous
- question: Has the protocol mix for a service become unusually homogenous, dominated by a single protocol?
  context: This question seeks to identify attacks where an adversary floods a service with a single type of traffic, such as a UDP or ICMP flood against a web server that normally only receives TCP traffic. A sudden, drastic shift in the protocol distribution, where one protocol dominates, is a strong indicator of a targeted flood attack.
  answer_sources:
  - Zeek conn.log
  - Public-facing DNS and NTP servers
  - API gateways
  - VoIP services
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MONITOR protocol ratio for services; ALERT if single_protocol_ratio > 75% for > 1 minute
- question: Has the randomness (entropy) of source IPs, ports, or protocols for a service dropped significantly below its normal baseline?
  context: This question uses Shannon entropy as a measure of randomness or complexity in traffic. Legitimate traffic is typically diverse (high entropy). A flood attack, often coming from a limited set of sources or using a single protocol, will cause this diversity to plummet, resulting in a statistically significant drop in entropy compared to the historical norm.
  answer_sources:
  - Zeek conn.log
  - Public-facing DNS and NTP servers
  - API gateways
  - VoIP services
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE Shannon entropy of source IPs, ports, protocols over 1-min windows; ALERT if entropy < (baseline_mean - 2 * std_dev)
- question: Has a new, large, and dense cluster of similar traffic appeared that is not part of the normal traffic profile?
  context: This question applies unsupervised machine learning to group traffic flows based on their characteristics. The emergence of a new, tightly-packed cluster of traffic that wasn't present in historical data indicates a new, coordinated activity. This is characteristic of a flood attack where many connections share similar features (protocol, packet size, etc.).
  answer_sources:
  - Zeek conn.log
  - Public-facing DNS and NTP servers
  - API gateways
  - VoIP services
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY clustering algorithm (e.g., DBSCAN) to traffic features; ALERT on emergence of new, large, dense cluster
- question: Has a service received connections from an extremely high number of unique sources, where each source sends very little data?
  context: This question aims to detect distributed attacks where many different sources (e.g., a botnet) send small, incomplete, or trivial requests to a single service. This pattern, characterized by a high source IP count and low data volume per source, is designed to exhaust connection resources on the target. A simple rule with hard thresholds can catch blatant examples of this.
  answer_sources:
  - Zeek conn.log
  - VPN concentrators
  - User authentication services
  - Customer-facing web portals
  range: last 90 days
  queries:
  - technology: pseudocode
    query: COUNT unique source IPs and avg_bytes_per_connection over 1-min window; ALERT if unique_ips > 20000 AND avg_bytes < 200
- question: Is a service experiencing a statistically unusual combination of a high unique source IP count and a low average data volume per source?
  context: This question refines the symbolic approach by using historical baselines. It looks for a simultaneous anomaly; the number of unique clients is much higher than normal, while the amount of data each client sends is much lower than normal. This statistical correlation is a strong indicator of a distributed resource exhaustion attack.
  answer_sources:
  - Zeek conn.log
  - VPN concentrators
  - User authentication services
  - Customer-facing web portals
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE unique_source_ips and avg_bytes_per_source over 5-min windows; ALERT if unique_ips > 98th_percentile AND avg_bytes < 10th_percentile
- question: Does the relationship between unique source IP count, average bytes per source, and connection rate deviate from the learned norm?
  context: This question uses a more advanced model that learns the normal, complex relationship between multiple traffic metrics. It can detect subtle, sophisticated attacks (like low-and-slow floods) where individual metrics might not be anomalous, but their combination is. The model flags any deviation from this learned multi-dimensional 'normal' behavior.
  answer_sources:
  - Zeek conn.log
  - VPN concentrators
  - User authentication services
  - Customer-facing web portals
  range: last 90 days
  queries:
  - technology: pseudocode
    query: APPLY multivariate anomaly detection model to features (unique_ips, avg_bytes, conn_rate); ALERT if observation is anomalous
- question: Has a dedicated network sensor (like Zeek) or a target host's OS generated a specific alert for a SYN flood or resource exhaustion?
  context: This question relies on explicit, high-confidence alerts generated by security tools or operating systems that are specifically designed to detect SYN floods. An alert from Zeek's notice log or a Windows Event ID 2004 (Resource-Exhaustion-Detector) provides direct evidence of an attack and its impact on the target.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Windows Event ID 2004
  - Any public-facing server offering TCP-based services (e.g., web, SSH, RDP)
  - Authentication servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH for Zeek notice 'Scan::SYN_Flood' OR Windows Event ID 2004
- question: Is there a statistically significant increase in the number of failed or incomplete TCP connections to a specific service?
  context: This question aims to detect SYN floods by monitoring the rate of non-established TCP sessions. In a SYN flood, the attacker sends many SYN packets but never completes the handshake, leaving many half-open connections (state S0). A sharp, statistically significant spike in these failed connection states compared to a historical baseline is a strong indicator of such an attack.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Windows Event ID 2004
  - Any public-facing server offering TCP-based services (e.g., web, SSH, RDP)
  - Authentication servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: COUNT connections with conn_state S0, S1, or REJ per minute; ALERT if count > (baseline_mean + 3 * std_dev)
- question: Is the ratio of successful to unsuccessful TCP connections significantly different from what a predictive model expects?
  context: This question uses machine learning to model the normal relationship between established and non-established connections, accounting for factors like time of day. An attack like a SYN flood will drastically skew this ratio towards non-established connections. When the observed ratio deviates significantly from the model's prediction (a large residual error), it signals an anomaly characteristic of a flood.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Windows Event ID 2004
  - Any public-facing server offering TCP-based services (e.g., web, SSH, RDP)
  - Authentication servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PREDICT expected ratio of established_to_non-established connections; ALERT if residual_error is large