name: T1498.001: Direct Network Flood
id: 5a9b1c2d-3e4f-4a5b-8c6d-7e8f9a0b1c2d
description: This playbook helps investigate whether an adversary is attempting to cause a denial of service via a direct network flood (T1498.001). This involves identifying anomalous traffic volumes from known threat sources, traffic matching signatures of DDoS tools, sustained surges in packets or bytes per second, a decrease in the randomness (entropy) of traffic sources, a high ratio of unique source IPs to low data volume, and a sharp increase in incomplete TCP sessions, which can indicate SYN or TCP floods.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are we observing network connections from IP addresses known to be associated with botnets or DDoS attacks?
    context: This question aims to identify initial indicators of a coordinated attack by checking inbound traffic against a threat intelligence feed of known malicious IPs. A match provides a strong, direct signal that the observed traffic is not benign and is likely part of a DDoS campaign.
    answer_sources:
      - Zeek conn.log
      - Internet gateways, Border routers and firewalls, External-facing web servers, DNS servers
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - search: pseudocode
        query: SEARCH Zeek conn.log WHERE source_ip IN (threat_intel_list) | RETURN count by destination_ip, destination_port
  - question: Is an anomalous percentage of inbound traffic volume or connection count originating from known malicious IPs?
    context: This question moves beyond simple matches to quantify the impact. By comparing the current percentage of traffic from malicious IPs against a historical baseline, analysts can determine if the volume is statistically significant and constitutes a flood, rather than just isolated probes.
    answer_sources:
      - Zeek conn.log
      - Internet gateways, Border routers and firewalls, External-facing web servers, DNS servers
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - search: pseudocode
        query: CALCULATE percentage of traffic (bytes, connections) from threat_intel_list over 1-min windows | COMPARE to 30-day baseline for each service | ALERT if current_percentage > 99th_percentile_baseline
  - question: Is the observed traffic volume from known malicious IPs significantly exceeding forecasted levels?
    context: This question uses predictive modeling to detect sophisticated, coordinated campaigns. A time series forecast establishes an expected range for traffic from malicious sources. A significant deviation from this forecast suggests an organized attack that is abnormal even for known bad actors, potentially indicating a new or escalating campaign.
    answer_sources:
      - Zeek conn.log
      - Internet gateways, Border routers and firewalls, External-facing web servers, DNS servers
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - search: pseudocode
        query: FORECAST expected traffic volume from threat_intel_list using time series model | ALERT if observed_volume > upper_confidence_bound_of_forecast
  - question: Are we detecting network traffic with packet characteristics that match signatures of known DDoS attack tools?
    context: This question looks for specific, static fingerprints left by common DDoS tools, such as fixed packet sizes or unusual TCP flag combinations. A positive match is a high-confidence indicator that a specific attack tool is being used against a target.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network security monitoring sensors (e.g., Zeek sensors at network chokepoints), DMZ segments
    range: last 90 days
    queries:
      - search: pseudocode
        query: SEARCH network traffic for static signatures (e.g., UDP packet size = 1024, TCP flags = SYN+FIN) | ALERT on match
  - question: Is there an anomalously low variation in packet sizes combined with a high packet-per-second rate?
    context: This question identifies flood attacks that use homogenous packets. Legitimate traffic typically has varied packet sizes. A standard deviation of packet sizes approaching zero, coupled with a high packet rate, strongly suggests a simple, brute-force flood attack where the attacker is sending a stream of identical packets.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network security monitoring sensors (e.g., Zeek sensors at network chokepoints), DMZ segments
    range: last 90 days
    queries:
      - search: pseudocode
        query: CALCULATE standard_deviation of packet_size and packets_per_second over 30-sec windows | ALERT if std_dev < 5th_percentile_baseline AND pps > 95th_percentile_baseline
  - question: Can we classify inbound traffic flows as malicious floods based on their packet-level features?
    context: This question applies machine learning to automate the detection of various flood types. By training a model on labeled data, it can learn the subtle, combined characteristics of malicious traffic (like protocol, packet length, inter-arrival time) and classify new, unseen traffic in near-real-time, enabling a faster and more nuanced response than static rules.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network security monitoring sensors (e.g., Zeek sensors at network chokepoints), DMZ segments
    range: last 90 days
    queries:
      - search: pseudocode
        query: APPLY pre-trained classification model to inbound traffic features | CLASSIFY flow as benign or specific flood_type | ALERT on malicious classification
  - question: Has the traffic rate (PPS or BPS) for any critical service breached a pre-defined static threshold?
    context: This question provides a basic but essential safety net. By setting a hard, absolute limit on acceptable traffic volume for critical services, analysts can quickly detect egregious, high-volume floods that surpass any reasonable operational capacity. This is a first line of defense against simple, overwhelming attacks.
    answer_sources:
      - Zeek conn.log
      - Critical application servers (e.g., authentication, database), Network load balancers, API Gateways
    range: last 90 days
    queries:
      - search: pseudocode
        query: MONITOR PPS and BPS for critical services | ALERT if rate > static_threshold (e.g., 50k PPS) for > 10 seconds
  - question: Is the current traffic rate for a critical service statistically anomalous compared to its historical baseline?
    context: This question refines volume-based detection by using a dynamic, learned baseline. Unlike a static threshold, this approach adapts to the normal fluctuations of each service. An alert triggers only when traffic significantly exceeds the service's own normal behavior (e.g., its 99th percentile), reducing false positives from natural traffic spikes.
    answer_sources:
      - Zeek conn.log
      - Critical application servers (e.g., authentication, database), Network load balancers, API Gateways
    range: last 90 days
    queries:
      - search: pseudocode
        query: CALCULATE current PPS/BPS over 1-min intervals | COMPARE to 30-day baseline for each service | ALERT if current_rate > 99th_percentile_baseline for 3 consecutive intervals
  - question: Is the current traffic volume for a key service anomalous, even after accounting for normal cyclical patterns?
    context: This question uses advanced anomaly detection to find attacks hidden within normal business cycles. Models learn the expected daily and weekly traffic rhythms for each service. An alert is generated only when a spike in traffic cannot be explained by these normal patterns, allowing for the detection of attacks that might otherwise be dismissed as regular peak usage.
    answer_sources:
      - Zeek conn.log
      - Critical application servers (e.g., authentication, database), Network load balancers, API Gateways
    range: last 90 days
    queries:
      - search: pseudocode
        query: APPLY time series anomaly detection model to PPS/BPS data | IDENTIFY anomalous data points not explained by seasonality | ALERT on anomaly
  - question: Is a service that normally receives diverse protocols suddenly dominated by a single protocol?
    context: This question checks for a loss of traffic diversity, a common indicator of a flood. For instance, a web server should primarily see TCP traffic. A sudden, overwhelming flood of UDP or ICMP traffic to that server indicates a protocol-based attack and a significant deviation from normal operations.
    answer_sources:
      - Zeek conn.log
      - Public-facing DNS and NTP servers, API gateways, VoIP services
    range: last 90 days
    queries:
      - search: pseudocode
        query: CALCULATE ratio of single protocol traffic to total traffic for a service | ALERT if ratio > 75% for > 1 minute
  - question: Has the randomness (entropy) of source IPs, source ports, or protocols for a service dropped significantly below its baseline?
    context: This question quantifies the homogeneity of traffic. Legitimate user traffic is diverse, resulting in high entropy. A DDoS flood, often originating from coordinated sources using similar methods, is homogenous, causing a sharp drop in entropy. Monitoring for a statistically significant drop can effectively detect such coordinated, non-diverse attacks.
    answer_sources:
      - Zeek conn.log
      - Public-facing DNS and NTP servers, API gateways, VoIP services
    range: last 90 days
    queries:
      - search: pseudocode
        query: CALCULATE Shannon entropy of source_ip, source_port, protocol over 1-min windows | ALERT if entropy < (baseline_mean - 2 * baseline_std_dev)
  - question: Does clustering of traffic features reveal a new, large, and dense group of similar connections not seen historically?
    context: This question uses clustering to find anomalous groups of traffic. The algorithm groups connections by their features. The sudden appearance of a large, dense cluster of very similar connections (e.g., same protocol, similar packet size) that doesn't match any known benign traffic profile is a strong indicator of a new, coordinated flood campaign.
    answer_sources:
      - Zeek conn.log
      - Public-facing DNS and NTP servers, API gateways, VoIP services
    range: last 90 days
    queries:
      - search: pseudocode
        query: APPLY clustering algorithm (e.g., DBSCAN) on traffic features | IDENTIFY new, large, dense clusters not in baseline | ALERT on new cluster emergence
  - question: Are we seeing an extremely high number of unique source IPs establishing very small connections to a service?
    context: This question looks for a classic 'hit-and-run' or low-volume flood pattern from a large botnet. A massive number of sources sending tiny amounts of data is not typical user behavior and is often designed to overwhelm connection state tables or application logic without high bandwidth. A static rule can catch blatant examples of this.
    answer_sources:
      - Zeek conn.log
      - VPN concentrators, User authentication services, Customer-facing web portals
    range: last 90 days
    queries:
      - search: pseudocode
        query: COUNT unique source IPs and average bytes per connection over 1-min window | ALERT if unique_ips > 20,000 AND avg_bytes < 200
  - question: Is the count of unique source IPs anomalously high while the average data transferred per source is anomalously low?
    context: This question statistically validates the pattern of many sources sending little data. By comparing both metrics against their historical baselines, it can detect when the relationship between them becomes abnormal. This is more robust than a static rule, as it adapts to what's normal for a specific service (e.g., some services naturally have many users sending small requests).
    answer_sources:
      - Zeek conn.log
      - VPN concentrators, User authentication services, Customer-facing web portals
    range: last 90 days
    queries:
      - search: pseudocode
        query: CALCULATE unique source IP count and avg bytes per source over 5-min windows | ALERT if ip_count > 98th_percentile_baseline AND avg_bytes < 10th_percentile_baseline
  - question: Does a multivariate model detect an anomalous relationship between unique source IP count, average bytes per source, and connection rate?
    context: This question uses a model that understands the complex, normal interplay between multiple traffic metrics. It can detect sophisticated low-and-slow attacks where individual metrics might not seem very anomalous, but their combination is highly irregular. This approach is effective against attackers trying to stay 'under the radar' of single-metric thresholds.
    answer_sources:
      - Zeek conn.log
      - VPN concentrators, User authentication services, Customer-facing web portals
    range: last 90 days
    queries:
      - search: pseudocode
        query: APPLY multivariate anomaly detection model (e.g., Isolation Forest) to feature set (unique IPs, avg bytes, conn rate) | ALERT on detected anomaly
  - question: Is Zeek generating SYN flood notices, and can this be correlated with resource exhaustion events on the target host?
    context: This question combines a high-confidence network alert with host-based evidence for confirmation. A Zeek `Scan::SYN_Flood` notice is a strong indicator of an attack. Correlating this with a Windows Event ID 2004 (or similar OS-level resource exhaustion event) confirms the attack is having a tangible impact on the target server's ability to handle connections.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Windows Event ID 2004
      - Any public-facing server offering TCP-based services (e.g., web, SSH, RDP), Authentication servers
    range: last 90 days
    queries:
      - search: pseudocode
        query: MONITOR Zeek notice.log for `Scan::SYN_Flood` | ON alert, SEARCH for Windows Event ID 2004 on target host within same time window | CORRELATE and raise severity
  - question: Is there a statistically significant increase in the rate of non-established TCP connections (e.g., S0, S1, REJ) to a specific service?
    context: This question quantifies the symptoms of a SYN or TCP flood by tracking the rate of failed or incomplete connections. A sudden, sharp increase in these connection states, far exceeding the normal baseline, indicates that a server is being overwhelmed with connection requests that it cannot complete, a hallmark of a connection-state exhaustion attack.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Windows Event ID 2004
      - Any public-facing server offering TCP-based services (e.g., web, SSH, RDP), Authentication servers
    range: last 90 days
    queries:
      - search: pseudocode
        query: COUNT connections with state 'S0', 'S1', 'REJ' per minute | ALERT if count > (baseline_mean + 3 * baseline_std_dev)
  - question: Is the observed ratio of established to non-established TCP connections significantly different from the predicted ratio?
    context: This question uses a predictive model to understand the normal relationship between successful and failed connections. The model learns the expected ratio based on time of day and other factors. An alert is triggered when the actual number of non-established connections is far higher than predicted, indicating an anomaly that is characteristic of a SYN flood, while accounting for normal fluctuations in connection failures.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Windows Event ID 2004
      - Any public-facing server offering TCP-based services (e.g., web, SSH, RDP), Authentication servers
    range: last 90 days
    queries:
      - search: pseudocode
        query: PREDICT expected ratio of established (SF) to non-established (S0, S1, REJ) connections | CALCULATE residual error between actual and predicted | ALERT if residual error is large