name: T1005: Data from Local System
id: 5e9b8f0a-6d1c-4b87-9d7a-1e2f3a4b5c6d
description: This playbook focuses on detecting adversaries collecting data from local systems, a key step in preparation for exfiltration. It addresses the core question, 'Has an adversary staged or searched for local system data?' The playbook provides investigative questions and queries to identify this activity through various lenses, including: the execution of known data staging utilities (e.g., secretsdump.py, SharpHound), the use of command-line tools for recursive file discovery and archiving (e.g., `dir /s`, `zip`), mass file access events indicating enumeration or copying, anomalous access to sensitive file paths by unexpected processes (e.g., a web server reading NTDS.dit), and the theft of configuration files from network devices.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation events that match known malicious data staging or collection utilities?
    context: This question aims to identify the use of well-known adversary tools for data collection. It involves continuously monitoring process creation events (like Windows Event ID 4688 or Sysmon Event ID 1) and comparing the file hashes (SHA256, MD5) and process names against a threat intelligence feed of indicators for utilities like secretsdump.py, SharpHound.exe, Rubeus.exe, or 7z.exe. A match is a high-fidelity indicator of malicious collection activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, Database Servers)
      - Executive workstations
      - Developer endpoints
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - "pseudocode: SEARCH process_creation_events WHERE (process_hash IN known_malicious_hashes OR process_name IN known_malicious_names)"
  - question: Have any rarely seen processes been executed, potentially indicating non-standard collection software?
    context: This question helps uncover custom or uncommon adversary tools by focusing on rarity. It involves calculating the prevalence of a process's file hash across all endpoints over a 30-day window. If a process hash is observed on a very small number of systems (e.g., fewer than 5) or a tiny percentage of the total endpoint population (e.g., less than 0.1%), it is flagged for review as it could be non-standard software used by an adversary.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, Database Servers)
      - Executive workstations
      - Developer endpoints
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - "pseudocode: SEARCH process_creation_events | GROUP BY process_hash | COUNT unique endpoints | FILTER endpoint_count < 5"
  - question: Can we use a machine learning model to predict if a process creation event is associated with malicious data collection?
    context: This question leverages machine learning to score process events for maliciousness. A trained binary classification model (e.g., Random Forest) analyzes features from process creation events, including parent process, user context, command-line length and entropy, and the statistical rarity of the process hash. Events receiving a high probability score for being malicious are flagged for analyst review.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, Database Servers)
      - Executive workstations
      - Developer endpoints
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - "pseudocode: SEARCH process_creation_events | INVOKE ML_model_for_collection_activity | FILTER score > threshold"
  - question: Have any command-line interpreters or scripting hosts been executed with arguments indicating file discovery, content searching, or data archiving?
    context: This question seeks to find evidence of data collection directly from command-line activity. It requires scanning command-line arguments (from Sysmon EID 1/Event ID 4688) and PowerShell script block content (Event ID 4104) for suspicious patterns. Using regular expressions, one can detect combinations of search commands (`dir /s`, `findstr`, `Get-ChildItem -Recurse`), keywords for sensitive data (`password`, `secret`), sensitive file extensions (`*.kdbx`, `*.pem`), and archiving tools (`tar`, `zip`).
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - Sysmon Event ID 1
      - User workstations
      - File servers
      - SharePoint servers
      - Code repositories
      - Application servers
    range: last 90 days
    queries:
      - "pseudocode: SEARCH commandline_events OR powershell_script_blocks WHERE command_line MATCHES REGEX for_collection_patterns"
  - question: Are there any command-line executions with unusually high entropy, possibly indicating obfuscation?
    context: This question attempts to identify obfuscated commands or data passed through the command line. It involves calculating the Shannon entropy of command-line arguments for processes like cmd.exe and powershell.exe. By establishing a baseline entropy score for normal activity, any execution whose entropy value significantly exceeds the historical norm (e.g., 99th percentile) can be flagged as anomalous.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - Sysmon Event ID 1
      - User workstations
      - File servers
      - SharePoint servers
      - Code repositories
      - Application servers
    range: last 90 days
    queries:
      - "pseudocode: SEARCH commandline_events | CALCULATE entropy(command_line) | FILTER entropy > baseline_99th_percentile"
  - question: Has a time-series model detected an anomalous spike in the frequency of file search or archiving commands for any user or host?
    context: This question uses a time-series model (e.g., Seasonal-ARIMA) to detect unusual bursts of collection activity. The model learns the normal daily and weekly rhythm of file search and archiving commands for each user and host. An alert is triggered if the observed frequency of these commands significantly deviates from the model's forecasted range, indicating a potential collection event outside of normal behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - Sysmon Event ID 1
      - User workstations
      - File servers
      - SharePoint servers
      - Code repositories
      - Application servers
    range: last 90 days
    queries:
      - "pseudocode: SEARCH commandline_events | TIME_SERIES_ANALYSIS on collection_command_frequency | FILTER anomaly_detected"
  - question: Has any single process accessed an unusually large number of unique files or directories in a short time frame?
    context: This question uses a rule-based approach to detect mass file access, which is indicative of enumeration or staging. An alert is triggered if a single Process ID is observed reading a high number of unique files (e.g., >500) from many unique directories (e.g., >20) within a short window (e.g., 5 minutes). It is critical to maintain an exclusion list for benign processes like backup services (wbengine.exe) and search indexers (SearchIndexer.exe).
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - File servers containing sensitive PII/PHI/Financial data
      - Critical system directories (e.g., C:\Windows\System32)
      - User profile directories
      - Cloud storage synchronization folders (e.g., OneDrive, Dropbox) on endpoints
    range: last 90 days
    queries:
      - "pseudocode: SEARCH file_access_events | GROUP BY ProcessID over 5min | COUNT unique files, unique directories | FILTER unique_files > 500 AND unique_directories > 20"
  - question: Has any process instance exceeded the historical baseline for the number of unique files accessed per minute?
    context: This question provides a more dynamic, statistical method for detecting mass file access. It involves establishing a historical baseline for the number of 'unique files accessed per minute' for each specific process name. An alert is raised if a new instance of a process exceeds a high percentile (e.g., 99.5th) of its historical distribution, indicating it is behaving abnormally compared to its peers.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - File servers containing sensitive PII/PHI/Financial data
      - Critical system directories (e.g., C:\Windows\System32)
      - User profile directories
      - Cloud storage synchronization folders (e.g., OneDrive, Dropbox) on endpoints
    range: last 90 days
    queries:
      - "pseudocode: SEARCH file_access_events | COUNT unique files per minute per process_instance | FILTER count > historical_99.5th_percentile for process_name"
  - question: Can a clustering algorithm identify anomalous file access patterns that don't match known benign, high-volume activities?
    context: This question uses an unsupervised machine learning approach (e.g., DBSCAN) to find outlier file access behavior. By using features like ProcessName, UserName, FileExtension, and HourOfDay, the algorithm can group normal, high-volume activity (like backups) into dense clusters. Any file access pattern that does not belong to an established cluster is marked as a 'noise' point and should be flagged as an anomalous outlier for investigation.
    answer_sources:
      - Windows Event ID 4663
      - Sysmon Event ID 11
      - File servers containing sensitive PII/PHI/Financial data
      - Critical system directories (e.g., C:\Windows\System32)
      - User profile directories
      - Cloud storage synchronization folders (e.g., OneDrive, Dropbox) on endpoints
    range: last 90 days
    queries:
      - "pseudocode: SEARCH file_access_events | APPLY DBSCAN clustering with features(ProcessName, UserName, etc.) | FILTER cluster_label == 'noise'"
  - question: Have there been any high-fidelity, anomalous process relationships or attempts to access critical system files?
    context: This question focuses on creating specific, high-confidence rules to detect known bad behavior. This includes monitoring for unusual parent-child process chains (e.g., `winword.exe` spawning `powershell.exe`, or a web server process `w3wp.exe` spawning `cmd.exe`) and flagging any attempt by a non-SYSTEM account to read the `NTDS.dit` database or the SAM/SYSTEM/SECURITY registry hives.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Web servers (IIS, Apache)
      - Application servers
      - Domain Controllers
      - Endpoints with local administrator privileges
    range: last 90 days
    queries:
      - "pseudocode: SEARCH process_events OR file_access_events WHERE (parent_child_pair IN anomalous_list) OR (target_file == 'NTDS.dit' AND user != 'SYSTEM')"
  - question: Has any process accessed a file path that is statistically rare for its name and the user context?
    context: This question baselines normal file access patterns to find rare and suspicious occurrences. It involves calculating the historical prevalence of a `(ProcessName, DirectoryPrefix, UserName)` tuple. If a combination is observed that is extremely rare (e.g., seen less than 0.01% of the time), it is flagged. An example of a rare tuple would be `(w3wp.exe, C:\Users\, DefaultAppPool)`.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Web servers (IIS, Apache)
      - Application servers
      - Domain Controllers
      - Endpoints with local administrator privileges
    range: last 90 days
    queries:
      - "pseudocode: SEARCH file_access_events | CALCULATE prevalence of (ProcessName, DirectoryPrefix, UserName) tuple | FILTER prevalence < 0.01%"
  - question: Has a UEBA model detected significant deviation from a user's or host's established 'file access fingerprint'?
    context: This question uses a User and Entity Behavior Analytics (UEBA) model to build a comprehensive 'file access fingerprint' for each user and host. This profile includes the applications they typically run, the directory paths and file types they access, and their hours of activity. An alert should trigger when a user's current activity significantly deviates from their established profile, such as a user suddenly accessing file shares belonging to a different department.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Web servers (IIS, Apache)
      - Application servers
      - Domain Controllers
      - Endpoints with local administrator privileges
    range: last 90 days
    queries:
      - "pseudocode: SEARCH user_activity_logs | INVOKE UEBA_file_access_model | FILTER anomaly_score > threshold"
  - question: Has a command been executed on a network device to display, copy, or transfer its configuration file to a remote location?
    context: This question aims to detect the theft of network device configurations by monitoring syslog data. It uses regular expressions to detect commands such as `show running-config`, `copy running-config tftp:`, or `scp export configuration`. A high-severity alert should be generated for any command that copies the configuration to a remote location (TFTP, SCP, FTP), especially if the destination is an external or unknown IP.
    answer_sources:
      - Zeek syslog.log
      - Zeek conn.log
      - Core network switches
      - Edge routers
      - Firewalls
      - VPN concentrators
      - Wireless LAN Controllers
    range: last 90 days
    queries:
      - "pseudocode: SEARCH syslog WHERE message MATCHES REGEX for_config_export_commands AND destination_is_remote"
  - question: Have network device administrative sessions originated from rare IP addresses, or has there been a spike in configuration-viewing commands?
    context: This question combines network and log data to find suspicious administrative sessions. It involves correlating the source IP from a syslog message with Zeek conn.log data to calculate the rarity of the source IP, ASN, and geographic location. Alerts are triggered for sessions from outside whitelisted management subnets or from historically unseen ASNs. It also baselines command frequency per admin account to alert on spikes in configuration-viewing commands.
    answer_sources:
      - Zeek syslog.log
      - Zeek conn.log
      - Core network switches
      - Edge routers
      - Firewalls
      - VPN concentrators
      - Wireless LAN Controllers
    range: last 90 days
    queries:
      - "pseudocode: SEARCH syslog JOIN conn_log | CALCULATE rarity of source_ip_asn_geo | ALERT if source_is_rare OR command_frequency > baseline"
  - question: Has a sequence analysis model detected an anomalous chain of commands within a network device administrative session, such as an immediate configuration export?
    context: This question uses a sequence analysis model (e.g., Markov Chain) to learn common command chains within administrative sessions. It flags sessions containing unusual sequences, such as a configuration export command (`copy running-config`) without any preceding diagnostic commands (`show interface`, `debug`), as this may indicate 'smash and grab' behavior rather than legitimate troubleshooting.
    answer_sources:
      - Zeek syslog.log
      - Zeek conn.log
      - Core network switches
      - Edge routers
      - Firewalls
      - VPN concentrators
      - Wireless LAN Controllers
    range: last 90 days
    queries:
      - "pseudocode: SEARCH syslog | MODEL command_sequences_per_session | FILTER sequence_is_anomalous (e.g., export without diagnostics)"