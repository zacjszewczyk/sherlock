name: T1003.001: LSASS Memory
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate attempts by an adversary to access credentials from LSASS (Local Security Authority Subsystem Service) memory. This is achieved by searching for various indicators of compromise, including the execution of known credential dumping tools identified by file hash, the use of suspicious command-line arguments, tampering with LSA Security Packages in the registry, direct memory access requests to the lsass.exe process by unauthorized applications, and the correlation of LSASS access with subsequent network exfiltration activity.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a process executed whose file hash is a known indicator of a credential dumping tool?
    context: This question aims to detect the use of well-known credential dumping utilities like Mimikatz or procdump by matching the file hash of executed processes against a threat intelligence feed of malicious hashes. A direct match provides a high-confidence signal that an adversary is attempting to harvest credentials.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Search process creation logs (WEVT 4688, Sysmon 1) for file hashes matching known credential dumper tool hashes.
  - question: Has a statistically rare process accessed the LSASS process?
    context: This question seeks to identify novel or uncommon tools used for credential dumping that may not be on known hash lists. By calculating the prevalence of all process hashes across the enterprise that access lsass.exe, we can flag executables that are exceptionally rare (e.g., seen on only one host), which could indicate a custom or modified adversary tool.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 30 days
    queries:
      - language: pseudocode
        query: Calculate hash prevalence from process logs. Alert on rare hashes for processes accessing lsass.exe.
  - question: Has a machine learning model classified a new process execution as a likely credential dumping attempt?
    context: This question leverages a supervised machine learning model to proactively identify malicious process executions based on a combination of features like file path, parent process, command-line arguments, and hash reputation. A high-probability score from the model indicates a sophisticated or obfuscated threat that might evade simpler detection methods.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Run process metadata through a trained ML classifier. Alert on high 'malicious' probability scores.
  - question: Has a process been executed with command-line arguments indicative of LSASS memory dumping?
    context: This question looks for explicit commands used to dump LSASS memory. By searching command-line arguments for specific strings and patterns like 'sekurlsa::logonPasswords' or 'procdump.exe -ma lsass.exe', analysts can detect overt attempts to use legitimate or malicious tools to extract credentials.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Search process command lines in logs (WEVT 4688, Sysmon 1) for regex patterns matching LSASS dump commands.
  - question: Has a process been executed with an unusually complex or obfuscated command line?
    context: Adversaries often obfuscate their commands to evade simple keyword-based detection. This question aims to identify such attempts by calculating the Shannon entropy of command-line arguments. A command with an abnormally high entropy score compared to the baseline for that process suggests obfuscation, packing, or randomization, which are common characteristics of malicious scripts.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Calculate Shannon entropy for command lines. Alert on scores above the 99th percentile for the given process name.
  - question: Has an NLP model identified a command line as semantically similar to known malicious commands?
    context: This question employs an advanced NLP model to analyze the structure and meaning of command-line arguments, going beyond simple keyword or entropy analysis. This allows for the detection of novel or variant malicious commands that are semantically similar to known attack patterns, even if they use different syntax or tools.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Feed command-line arguments into a fine-tuned NLP classifier. Alert on high 'malicious' probability.
  - question: Has a non-standard or unapproved Security Support Provider (SSP) been added to the LSA configuration in the registry?
    context: This question aims to detect a persistence technique where an adversary registers a malicious DLL as a Security Support Provider (SSP). This allows the DLL to be loaded into the LSASS process, giving it access to cleartext credentials. Monitoring for additions to the 'Security Packages' registry key that are not on a pre-defined allow-list of legitimate SSPs is a direct way to detect this activity.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers, Active Directory Certificate Services (AD CS) Servers, Privileged Access Workstations
    range: last 90 days
    queries:
      - language: pseudocode
        query: Monitor registry keys for LSA Security Packages. Alert on any DLL added that is not on the approved SSP list.
  - question: Has a new Security Support Provider (SSP) been loaded from a statistically unusual file path?
    context: Legitimate SSPs are typically located in standard system directories. Adversaries may place their malicious SSP DLLs in non-standard locations like user profiles or temporary folders. This question identifies such behavior by baselining the file paths of all SSPs in the environment and alerting when a new SSP is loaded from a rare or suspicious path.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers, Active Directory Certificate Services (AD CS) Servers, Privileged Access Workstations
    range: last 90 days
    queries:
      - language: pseudocode
        query: Analyze file paths of new SSPs. Alert if the path is statistically rare (e.g., in a temp or user directory).
  - question: Has there been an anomalous spike in modification activity for the LSA Security Packages registry keys on any single host?
    context: An adversary might make multiple changes to the LSA registry keys while installing, testing, or removing a malicious SSP. This question uses a time-series model to detect a sudden burst of such modifications on a host, which would deviate from its normal baseline activity and could indicate tampering.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers, Active Directory Certificate Services (AD CS) Servers, Privileged Access Workstations
    range: last 90 days
    queries:
      - language: pseudocode
        query: Use a time-series model on LSA registry key modification counts. Alert on spikes departing from the host's baseline.
  - question: Has an unauthorized or non-standard process attempted to read the memory of lsass.exe?
    context: Direct memory access to the LSASS process is the core of this technique. This question seeks to detect this by monitoring process access events (ideally from Sysmon Event ID 10) and alerting when any process not on a strict allow-list of legitimate system processes (e.g., wininit.exe) attempts to access lsass.exe with high-risk permissions like PROCESS_VM_READ.
    answer_sources:
      - Sysmon Event ID 10
      - Windows Event ID 4656
      - Windows Event ID 4663
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Monitor Sysmon Event 10. Alert when a process not on the allow-list accesses lsass.exe with high-risk permissions.
  - question: Has a statistically rare or never-before-seen process-parent combination been observed accessing lsass.exe?
    context: This question enhances detection by building a statistical baseline of normal process interactions with lsass.exe. It tracks which processes (SourceImage) and their parents (ParentImage) legitimately access LSASS. An alert on a new or very infrequent combination can uncover credential dumping attempts from masquerading processes or those launched through an unusual execution chain.
    answer_sources:
      - Sysmon Event ID 10
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 30 days
    queries:
      - language: pseudocode
        query: Baseline (SourceImage, ParentImage) tuples that access LSASS. Alert on new or statistically rare tuples.
  - question: Has a graph-based anomaly detection model identified a suspicious new process interaction with lsass.exe?
    context: This question models the system's process activity as a complex graph of interactions. A graph-based model can learn the normal structure of these interactions across the enterprise. It can then detect an anomalous event, such as a process like powershell.exe directly accessing lsass.exe if this is not a learned, legitimate behavior, indicating a deviation from the norm that may signal an attack.
    answer_sources:
      - Sysmon Event ID 10
      - Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: Model process interactions as a graph. Alert when a new edge is created representing anomalous access to lsass.exe.
  - question: Has a process accessed LSASS memory and then immediately initiated an outbound network connection?
    context: After dumping credentials, an adversary's next step is often to exfiltrate them. This question correlates LSASS memory access events with subsequent network connection events from the same process within a short time window. An alert is triggered if the connection is made to an external, non-allow-listed destination, providing strong evidence of credential theft and exfiltration.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 3
      - Zeek conn.log
      - Domain Controllers, Privileged Access Workstations, Network Egress Points (Firewalls, Proxies)
    range: last 90 days
    queries:
      - language: pseudocode
        query: Correlate Sysmon Event 10 (LSASS access) with Sysmon Event 3 (network connect) from the same ProcessGuid within 60s. Alert if destination is external and not on allow-list.
  - question: Did a process that accessed LSASS memory subsequently connect to a statistically uncommon destination port?
    context: Legitimate processes that interact with LSASS and the network typically use standard, predictable ports. This question baselines the destination ports used by such processes. An alert on a connection to a rare or non-standard port following LSASS access could indicate an adversary using a custom command-and-control channel for exfiltration.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 3
      - Zeek conn.log
      - Domain Controllers, Privileged Access Workstations, Network Egress Points (Firewalls, Proxies)
    range: last 90 days
    queries:
      - language: pseudocode
        query: For processes accessing LSASS, join with network logs. Alert if a connection is made to a statistically rare destination port.
  - question: Has a sequence analysis model detected an anomalous pattern of network activity following LSASS memory access?
    context: This question uses a sophisticated sequence analysis model to learn the normal patterns of behavior (e.g., timing, frequency, network characteristics) that follow a legitimate LSASS access event. The model can then identify when a new sequence of events (LSASS access followed by a network connection) has a very low probability of being benign, indicating a likely attack sequence.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 3
      - Zeek conn.log
      - Domain Controllers, Privileged Access Workstations, Network Egress Points (Firewalls, Proxies)
    range: last 90 days
    queries:
      - language: pseudocode
        query: Feed LSASS access and network events into a sequence model. Alert when an observed sequence has a low probability under the benign model.