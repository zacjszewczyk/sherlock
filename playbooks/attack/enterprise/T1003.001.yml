name: "T1003.001: LSASS Memory"
id: "f3a1b9c8-7d6e-4f5a-8b3c-2d1e0f9a8b7c"
description: "This playbook helps investigate whether an adversary has attempted to access credentials from the Local Security Authority Subsystem Service (LSASS) process memory. Adversaries dump credentials from LSASS to obtain plaintext passwords, hashes, and Kerberos tickets for use in lateral movement. This playbook provides questions to detect this activity by analyzing process creation events for known malicious tool hashes or suspicious command-line arguments, monitoring for unauthorized registry modifications that install malicious Security Support Providers (SSPs), identifying direct and anomalous process access to lsass.exe, and correlating LSASS access with subsequent network exfiltration activity."
type: "technique"
related: 
  - "TA0006: Credential Access"
contributors: 
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Have any processes been executed whose file hash is a known indicator of a credential dumping tool?"
    context: "This question aims to identify the direct execution of known malicious tools like Mimikatz or procdump by matching their file hashes against a threat intelligence feed. An exact match provides a high-confidence signal that an adversary is attempting to dump credentials from LSASS memory."
    answer_sources: 
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "SEARCH process_creation_logs WHERE process_hash IN known_malicious_hashes"
  - question: "Has a statistically rare process accessed the LSASS process?"
    context: "This question seeks to uncover unknown or custom credential dumping tools by identifying processes that are not widely distributed across the enterprise. A process that accesses lsass.exe and is found on very few endpoints (e.g., a single host) is highly suspicious, even if its hash is not on a known-bad list."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "CALCULATE prevalence of process_hashes over 30 days. SEARCH process_access_logs for lsass.exe. ALERT if accessing_process_hash is rare (e.g., < 0.1% prevalence)."
  - question: "Has a machine learning model classified any new process execution as a potential credential dumping attempt?"
    context: "This question leverages a machine learning model trained on process metadata to predict the likelihood of malicious activity. The model can identify subtle patterns and combinations of features (like parent process, command line, and hash reputation) that are indicative of credential dumping, providing a more sophisticated detection layer than static rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "INPUT process_metadata into ML_classifier. ALERT if prediction is 'malicious' with high confidence."
  - question: "Has a process been executed with command-line arguments known to be associated with LSASS memory dumping?"
    context: "This question focuses on detecting credential dumping attempts by searching for specific commands and flags used by tools like Mimikatz, procdump, and rundll32. The presence of strings like 'sekurlsa::logonPasswords' or 'comsvcs.dll, MiniDump' in command-line logs is a strong indicator of an attack."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "SEARCH process_creation_logs WHERE command_line MATCHES regex_patterns_for_lsass_dumping."
  - question: "Has a process been executed with an unusually complex or high-entropy command line, potentially indicating obfuscation?"
    context: "This question aims to detect obfuscated commands that adversaries use to evade simple keyword-based detection. A command line with an abnormally high entropy score compared to its typical baseline suggests that it might be packed, encoded, or randomized to hide malicious intent."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "CALCULATE entropy of command_line. ALERT if entropy > baseline_threshold for that process_name."
  - question: "Has a Natural Language Processing (NLP) model identified any command-line arguments as likely to be malicious?"
    context: "This question applies an advanced NLP model to analyze the structure and meaning of command-line arguments. Unlike regex, this approach can understand the context and semantics, allowing it to detect novel or cleverly disguised malicious commands that don't match known patterns."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "INPUT command_line_string into NLP_model. ALERT if model predicts 'malicious' with high probability."
  - question: "Has an unauthorized or non-standard Security Support Provider (SSP) been added to the LSA configuration in the registry?"
    context: "This question checks for a persistence technique where an adversary registers a malicious DLL as a Security Support Provider. This allows the malicious code to be loaded into the LSASS process at startup, giving it access to credentials. Any SSP not on an approved list is highly suspicious."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 13"
      - "Domain Controllers, Active Directory Certificate Services (AD CS) Servers, Privileged Access Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode": "SEARCH registry_modification_logs for 'HKLM\\...\\Security Packages'. ALERT if added_DLL NOT IN approved_ssp_list."
  - question: "Has a new Security Support Provider (SSP) been loaded from a non-standard or statistically rare file path?"
    context: "This question builds on the previous one by analyzing the location of the SSP DLL. Legitimate SSPs are located in standard system directories. An SSP being loaded from a temporary folder, user profile, or other unusual location is a strong indicator that it is malicious."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 13"
      - "Domain Controllers, Active Directory Certificate Services (AD CS) Servers, Privileged Access Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode": "FOR new_ssp_dlls, CALCULATE path_prevalence. ALERT if path is statistically rare (e.g., C:\\Users\\, C:\\Temp\\)."
  - question: "Has there been an anomalous spike in the frequency of modifications to LSA-related registry keys on any single host?"
    context: "This question uses time-series analysis to detect abnormal behavior. A sudden burst of changes to the LSA Security Packages registry keys on a host, compared to its historical baseline, could signify an adversary's attempts to install, test, or troubleshoot a malicious SSP."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 13"
      - "Domain Controllers, Active Directory Certificate Services (AD CS) Servers, Privileged Access Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode": "MONITOR count of LSA_registry_modifications per host over time. ALERT if a spike deviates from the historical baseline (e.g., using ARIMA or LSTM)."
  - question: "Has an unauthorized process attempted to access LSASS process memory with high-risk permissions?"
    context: "This question seeks to directly detect the core of the attack: a process reading from LSASS memory. By maintaining an allow-list of legitimate system processes that are expected to interact with LSASS, any other process requesting high-risk access (like PROCESS_VM_READ) can be flagged as a potential threat."
    answer_sources:
      - "Sysmon Event ID 10"
      - "Windows Event ID 4656"
      - "Windows Event ID 4663"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "SEARCH process_access_logs WHERE TargetImage is 'lsass.exe' AND GrantedAccess is high_risk. ALERT if SourceImage NOT IN lsass_accessor_allow_list."
  - question: "Has LSASS been accessed by a process, or a parent-child process combination, that is statistically rare or has never been seen before?"
    context: "This question uses baselining to detect anomalous LSASS access without a static allow-list. It learns which processes and parent-process pairs normally interact with LSASS on each host and flags any new or infrequent interaction as suspicious, which can help uncover novel attack tools or living-off-the-land techniques."
    answer_sources:
      - "Sysmon Event ID 10"
      - "Windows Event ID 4656"
      - "Windows Event ID 4663"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "BASELINE normal (SourceImage, ParentImage) tuples accessing lsass.exe. ALERT on new or rare tuples. MONITOR daily access counts per SourceImage and ALERT on Z-score anomalies."
  - question: "Has a graph-based analysis detected an anomalous process interaction with lsass.exe?"
    context: "This question models the system's process interactions as a graph, where an edge from process A to process B means A accessed B. A trained model learns the normal graph structure of the enterprise. An alert is generated when a new edge is created—for example, a previously unseen process accessing lsass.exe—that deviates from this learned normal behavior."
    answer_sources:
      - "Sysmon Event ID 10"
      - "Windows Event ID 4656"
      - "Windows Event ID 4663"
      - "Domain Controllers, Privileged Access Workstations, Critical Application Servers, Tier 0/1 Servers"
    range: "last 90 days"
    queries:
      - "pseudocode": "MODEL process interactions as a graph. TRAIN on normal activity. ALERT when a new, anomalous edge to the 'lsass.exe' node is created."
  - question: "Has a process accessed LSASS memory and then immediately initiated an outbound network connection to an external address?"
    context: "This question looks for the common attack chain of dumping credentials and then exfiltrating them. By correlating an LSASS memory access event with a subsequent network connection event from the same process within a short time frame, it provides a high-confidence indicator of credential theft and exfiltration."
    answer_sources:
      - "Sysmon Event ID 10"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Domain Controllers, Privileged Access Workstations, Network Egress Points (Firewalls, Proxies)"
    range: "last 90 days"
    queries:
      - "pseudocode": "CORRELATE process_access_to_lsass (Sysmon 10) with network_connection (Sysmon 3) from the same ProcessGuid within 60s. ALERT if destination_ip is external and not allow-listed."
  - question: "After accessing LSASS, did a process connect to a destination port that is unusual for that process?"
    context: "This question aims to detect exfiltration attempts by focusing on the network behavior of a process after it accesses LSASS. Even if the destination IP is internal, connecting to an uncommon port (e.g., a high, non-standard port) could indicate data staging or C2 communication and is therefore suspicious."
    answer_sources:
      - "Sysmon Event ID 10"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Domain Controllers, Privileged Access Workstations, Network Egress Points (Firewalls, Proxies)"
    range: "last 90 days"
    queries:
      - "pseudocode": "FOR processes accessing LSASS, BASELINE common destination_ports from network logs. ALERT if a subsequent connection uses a statistically rare port."
  - question: "Has a sequence analysis model detected an improbable or anomalous sequence of LSASS access followed by a network connection?"
    context: "This question uses a sophisticated model to learn the normal sequence and timing between a process accessing LSASS and making a network connection. An alert is triggered if an observed sequence is highly improbable under the learned model, which could indicate a malicious process whose behavior (e.g., time to exfiltrate, destination features) differs from legitimate processes."
    answer_sources:
      - "Sysmon Event ID 10"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Domain Controllers, Privileged Access Workstations, Network Egress Points (Firewalls, Proxies)"
    range: "last 90 days"
    queries:
      - "pseudocode": "INPUT LSASS_access and network_connection event sequences into HMM/LSTM model. ALERT if an observed sequence has a low probability under the trained model."