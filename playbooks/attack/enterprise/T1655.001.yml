name: "T1655.001: Match Legitimate Name or Location"
id: c4b1d3a2-6f8e-4a0b-9c7d-5e6f8a9b0c1d
description: This playbook helps determine if an adversary is using masquerading techniques on corporate mobile devices to evade detection. It focuses on identifying mobile applications that mimic legitimate ones through their package name, display name, or icon but have different signing certificates or appear on threat intelligence feeds. It also investigates anomalous network behavior from these suspect applications, such as communication with malicious domains, high-entropy DNS queries, connections to unusual ports, or the use of malicious TLS fingerprints (JA3).
type: technique
related:
  - "TA0030: Defense Evasion"
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any installed mobile applications on corporate devices known to be malicious based on threat intelligence feeds?
    context: This question seeks to identify overtly malicious applications that are masquerading by checking their package names and signing certificates against a database of known malicious indicators. A direct match is a strong signal of a compromised device and provides a high-confidence starting point for an investigation.
    answer_sources:
      - Mobile Device Management (MDM) Application Inventory Log
      - Threat Intelligence Feeds
      - Mobile Device Management (MDM) server database
      - Cloud-hosted MDM administrative consoles
      - Corporate-managed iOS and Android devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH MDM logs FOR all app package names and certificate hashes. JOIN results with threat intelligence feed ON package name or certificate hash. RETURN devices with matching apps.
  - question: Are there any installed mobile applications that appear to be typosquatting or using a legitimate display name with an unauthorized signing certificate?
    context: This question aims to uncover more subtle masquerading attempts. Adversaries may create apps with names very similar to legitimate ones (typosquatting) or reuse a legitimate app's display name but sign it with their own malicious certificate. This analysis helps detect these impersonation techniques by comparing installed apps against an organizational allowlist and checking for certificate inconsistencies.
    answer_sources:
      - Mobile Device Management (MDM) Application Inventory Log
      - Organizational Application Allowlist
      - Mobile Device Management (MDM) server database
      - Cloud-hosted MDM administrative consoles
      - Corporate-managed iOS and Android devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH MDM logs daily. GROUP apps by display name. COUNT unique certificates per group. ALERT if count > 1. CALCULATE Levenshtein distance between installed app package names and allowlist. ALERT if 0 < distance < 3.
  - question: Can we identify potentially masquerading applications by using a machine learning model to analyze their manifest characteristics?
    context: This question uses a data science approach to proactively identify suspicious applications. By training a Random Forest model on features from the app manifest (like requested permissions, exported components, and package name structure), it's possible to classify applications as potential masquerades even without prior threat intelligence. A high confidence score from the model indicates the app's characteristics are statistically similar to known malicious or masquerading apps.
    answer_sources:
      - Mobile Device Management (MDM) Application Inventory Log
      - Application Manifest Data
      - Mobile Device Management (MDM) server database
      - Cloud-hosted MDM administrative consoles
      - Corporate-managed iOS and Android devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT manifest features (permissions, activities, package name entropy) for all apps. INPUT features into trained Random Forest model. ALERT on apps classified as 'masquerade' with confidence > 0.90.
  - question: Is a suspected masquerading application communicating with known malicious domains or using known malicious TLS fingerprints?
    context: Once an application is suspected of masquerading, this question focuses on verifying its maliciousness by analyzing its network traffic. It checks if the application is communicating with domains or IPs listed in threat intelligence feeds or if its TLS/SSL client fingerprint (JA3 hash) matches those of known malware families. A positive match provides strong evidence that the application is malicious.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Mobile Device Management (MDM) Application Inventory Log
      - Threat Intelligence Feeds
      - Network egress points (Firewalls, Proxies)
      - Corporate WiFi network segments
      - VPN concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: GET IP of device with suspect app from MDM. FILTER Zeek logs for that IP. JOIN dns.log with malicious domain feed. JOIN ssl.log JA3 hashes with malicious JA3 feed. ALERT on any match.
  - question: Does a suspected masquerading application exhibit anomalous network behavior, such as using high-entropy domains, unusual ports, or abnormal data transfer ratios?
    context: This question seeks to identify malicious behavior by comparing a suspect application's network activity against established baselines. High-entropy domains can indicate Domain Generation Algorithms (DGAs) used by malware. Deviations from normal port usage or data transfer patterns can signal command-and-control (C2) communication or data exfiltration, distinguishing the suspect app from the legitimate one it imitates.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Mobile Device Management (MDM) Application Inventory Log
      - Network egress points (Firewalls, Proxies)
      - Corporate WiFi network segments
      - VPN concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR suspect app traffic, CALCULATE Shannon entropy for DNS queries; ALERT if > 99th percentile. COMPARE destination ports to legitimate app's baseline; ALERT on new ports. CALCULATE outbound/inbound byte ratio; ALERT if deviation > 3 standard deviations from baseline.
  - question: Can we detect anomalous network traffic patterns from a suspected masquerading application using a machine learning model?
    context: This question applies an advanced machine learning technique (an LSTM Autoencoder) to detect subtle anomalies in network behavior over time. The model is trained on the normal network patterns of a legitimate application. When traffic from a suspect application is fed into the model, a high "reconstruction error" means the traffic does not conform to the learned normal patterns. This is a powerful method for detecting novel or sophisticated evasion techniques that might not be caught by simple signature-based or statistical methods.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - Mobile Device Management (MDM) Application Inventory Log
      - Network egress points (Firewalls, Proxies)
      - Corporate WiFi network segments
      - VPN concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR suspect app, CREATE 5-minute time-series vectors of network features (connection count, unique IPs, bytes, DNS count). INPUT vectors into LSTM Autoencoder model. ALERT if reconstruction error > 99th percentile threshold.