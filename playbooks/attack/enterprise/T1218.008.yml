name: T1218.008: Odbcconf
id: 5a8e0a3d-4c3e-4f1a-8c9d-1b2e7f6d5c4b
description: This playbook helps investigate whether an adversary is abusing the ODBC configuration utility (odbcconf.exe) to proxy the execution of malicious code, thereby evading defenses. Key indicators of this activity include odbcconf.exe loading a DLL with a known malicious hash, execution with command-line arguments containing '/A {REGSVR ...}', being spawned by an unusual parent process like an Office application or browser, loading a DLL that was recently written to a temporary or user-writable directory, or odbcconf.exe spawning suspicious child processes (like cmd.exe or powershell.exe) or initiating anomalous outbound network connections.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is odbcconf.exe loading a DLL module that is a known malicious indicator based on its file hash?
  context: This question seeks to identify direct evidence of compromise. Adversaries may use odbcconf.exe to execute a malicious DLL. By comparing the hash (e.g., SHA256) of every DLL loaded by odbcconf.exe against a curated threat intelligence feed of known malicious file hashes, we can detect the presence of known malware with high confidence. A match indicates that a recognized malicious payload was executed via this technique.
  answer_sources:
  - Sysmon Event ID 7
  - User Workstations
  - Application Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH module load events (Sysmon Event ID 7) WHERE process_image = 'odbcconf.exe'. FOR EACH event, LOOKUP loaded_module_hash IN threat_intelligence_feed. ALERT on match.
- question: Is odbcconf.exe loading a DLL that is statistically rare within the environment?
  context: This question aims to uncover unknown or custom malware not present in threat intelligence feeds. Adversary tools and payloads are often not widely distributed across an enterprise, unlike legitimate system DLLs. By calculating the prevalence of each DLL loaded by odbcconf.exe (i.e., on how many unique systems it's seen), we can flag rare DLLs for investigation. A very low prevalence suggests the file may be part of a targeted attack.
  answer_sources:
  - Sysmon Event ID 7
  - User Workstations
  - Application Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH module load events (Sysmon Event ID 7) WHERE process_image = 'odbcconf.exe' over last 90 days. GROUP by loaded_module_hash. COUNT unique hosts. ALERT where host_count < threshold (e.g., 5).
- question: Does a DLL loaded by odbcconf.exe exhibit features characteristic of malware, according to a machine learning model?
  context: This question uses machine learning to predict if a DLL is malicious based on its intrinsic properties, even if it's never been seen before. A model trained on features like file entropy, PE header anomalies, and suspicious imported functions can score DLLs loaded by odbcconf.exe. A high maliciousness score from the model serves as a strong signal for investigation, helping to detect novel or obfuscated threats.
  answer_sources:
  - Sysmon Event ID 7
  - User Workstations
  - Application Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: ON module load event (Sysmon Event ID 7) WHERE process_image = 'odbcconf.exe', EXTRACT features from loaded DLL. APPLY classification model. ALERT if malicious_probability > threshold.
- question: Is odbcconf.exe being executed with the '/A {REGSVR ...}' command-line pattern?
  context: This question looks for a high-fidelity indicator of compromise. The '/A {REGSVR ...}' argument is a specific pattern used with odbcconf.exe to register and execute a malicious DLL. Detecting this command-line pattern provides strong evidence that an adversary is attempting to proxy code execution through this utility.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Application Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process creation WHERE process_name = 'odbcconf.exe' AND command_line contains regex '(?i)/A\\s+\\{REGSVR'. ALERT on match.
- question: Does an odbcconf.exe execution have an unusually high-entropy command line?
  context: This question helps detect obfuscated or complex commands. Malicious commands, especially those containing encoded payloads or randomized file paths, often have higher information entropy than legitimate, predictable commands. A spike in command-line entropy compared to a learned baseline can indicate suspicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Application Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR EACH odbcconf.exe process creation, CALCULATE entropy of command_line. ALERT if entropy > baseline_99th_percentile.
- question: Does the command-line structure of an odbcconf.exe execution fall outside of normal, clustered usage patterns?
  context: This question identifies anomalous command structures. Legitimate use of odbcconf.exe tends to follow predictable patterns. By clustering all observed command lines, anomalous or rare patterns that do not fit into large, common clusters can be identified as outliers, potentially indicating malicious or non-standard use.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Application Servers
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR EACH odbcconf.exe process creation, TOKENIZE command_line into feature vector. APPLY clustering algorithm (e.g., DBSCAN). ALERT if event is flagged as noise/outlier.
- question: Is odbcconf.exe being launched by a suspicious parent process like an Office application, script interpreter, or web browser?
  context: This question focuses on identifying anomalous process lineage. Legitimate execution of odbcconf.exe is typically initiated by system processes or installers. Execution by a user application like WINWORD.EXE, OUTLOOK.EXE, or POWERSHELL.EXE is highly irregular and is a common pattern for attacks originating from phishing documents or malicious scripts.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Application Servers
  - Email Servers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process creation WHERE process_name = 'odbcconf.exe' AND parent_process_name IN ('winword.exe', 'excel.exe', 'outlook.exe', 'powershell.exe', 'wscript.exe'). ALERT on match.
- question: Is the parent-child relationship for an odbcconf.exe execution statistically rare across the enterprise?
  context: This question identifies unusual process chains without relying on a predefined list of "bad" parents. By baselining all parent-child relationships over time, any odbcconf.exe execution that stems from a parent process that has rarely or never launched it before can be flagged as anomalous and worthy of investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Application Servers
  - Email Servers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR EACH odbcconf.exe process creation, CHECK prevalence of (parent_process, 'odbcconf.exe') pair across the enterprise. ALERT if prevalence < threshold (e.g., seen on <1% of hosts).
- question: Is the parent process of an odbcconf.exe execution identified as an outlier by an anomaly detection model?
  context: This question uses a machine learning model, such as an Isolation Forest, to learn the profile of legitimate parent-child process pairs. When a new execution occurs, the model can quickly score its legitimacy. If the pair is deemed an outlier, it signifies a deviation from normal behavior that requires investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User Workstations
  - Application Servers
  - Email Servers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: ON odbcconf.exe process creation, APPLY anomaly detection model (e.g., Isolation Forest) to (parent_process, child_process) pair. ALERT if score indicates an outlier.
- question: Was a DLL written to a temporary or user-writable directory and then immediately loaded by odbcconf.exe?
  context: This question looks for the classic "drop and execute" pattern. Adversaries often write their payload to a non-standard, writable location like %TEMP% or C:\\Users\\Public and then use a utility like odbcconf.exe to execute it. Correlating a file-write event with a subsequent module-load or process-creation event within a short time window is a strong indicator of this behavior.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 7
  - Windows Event ID 4688
  - User Workstations
  - Download/Temp Directories on Servers
  - Publicly Writable Shares
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: CORRELATE file_creation (Sysmon EID 11) WHERE file_path CONTAINS ('/Users/', '/ProgramData/') AND file_name ENDS WITH '.dll' WITH module_load (Sysmon EID 7) WHERE process_image = 'odbcconf.exe' AND loaded_module_path = file_path. ALERT if time_delta < 5 minutes on same host.
- question: Is the time between a DLL being written to a temporary directory and its execution by odbcconf.exe a statistical outlier?
  context: This question aims to identify adversary automation. Attackers often execute their dropped payloads almost instantly, whereas legitimate software installations might have longer, more variable delays. By analyzing the time delta between file-write and execution, an unusually short delay can be flagged as suspicious behavior typical of an automated attack script.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 7
  - Windows Event ID 4688
  - User Workstations
  - Download/Temp Directories on Servers
  - Publicly Writable Shares
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FOR EACH 'odbcconf.exe' execution of a DLL in a temp directory, CALCULATE time_delta from file_write. ALERT if time_delta is in the lowest 5th percentile of historical values.
- question: Does the sequence of events 'DLL write to temp directory' followed by 'odbcconf.exe loads DLL' represent an anomalous sequence for the host?
  context: This question uses a sequence analysis model (e.g., LSTM) to learn the normal flow of events on a host. A legitimate process might involve many steps, while an attack might be a short, sharp sequence. The model can identify when the sequence of a DLL being written and then immediately executed by odbcconf.exe is highly improbable based on the host's learned normal behavior.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 7
  - Windows Event ID 4688
  - User Workstations
  - Download/Temp Directories on Servers
  - Publicly Writable Shares
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: ON event sequence ['DLL write to temp dir', 'odbcconf.exe loads DLL'], APPLY sequence analysis model (e.g., LSTM). ALERT if model flags the sequence as a high-risk anomaly.
- question: Did odbcconf.exe spawn a suspicious child process or lead to network connections with known malicious infrastructure?
  context: This question investigates post-execution activity. The goal of payload execution is often to establish command-and-control or perform further actions. This can be observed by odbcconf.exe spawning a shell (cmd.exe, powershell.exe) or by the host making network connections to IPs/domains on a threat intelligence list shortly after the execution.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Application Servers
  - Network Egress Points
  - DNS servers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH for process creation where parent_process = 'odbcconf.exe' AND child_process IN ('cmd.exe', 'powershell.exe'). ALSO, CORRELATE 'odbcconf.exe' execution with subsequent network connections WHERE destination_ip IN threat_intel_feed. ALERT on match.
- question: Following an odbcconf.exe execution, did the host exhibit anomalous network behavior, such as a spike in new connections or queries to high-entropy domains?
  context: This question looks for signs of C2 communication. A newly compromised host may begin beaconing, which can manifest as a sudden increase in the number of unique destination IPs it connects to. It may also use Domain Generation Algorithms (DGAs), resulting in DNS queries for high-entropy or newly registered domains (NRDs).
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - User Workstations
  - Application Servers
  - Network Egress Points
  - DNS servers
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: AFTER 'odbcconf.exe' execution, MONITOR host network traffic. ALERT if count of new destination_ips > 98th percentile baseline. ALERT on DNS queries for high-entropy or newly-registered domains.
- question: Did the host's network traffic patterns become anomalous according to a time series model immediately following an odbcconf.exe execution?
  context: This question uses a machine learning model to detect subtle changes in network behavior. Models like Prophet or an autoencoder can learn the normal 'rhythm' of a host's network activity (e.g., bytes out, connection frequency). A significant deviation from this learned pattern after an odbcconf.exe execution can indicate C2 activity or data exfiltration.
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - User Workstations
  - Network Egress Points
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: AFTER 'odbcconf.exe' execution, FEED subsequent network time-series data (bytes_out, connection_count) into anomaly detection model. ALERT if model flags period as anomalous.