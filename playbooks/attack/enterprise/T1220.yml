name: T1220: XSL Script Processing
id: 5a8e1b9c-2f0d-4b8a-9c6d-7e3f4a5b6c1d
description: This playbook helps investigate potential defense evasion using XSL Script Processing (T1220). It focuses on identifying adversaries executing malicious scripts embedded within XSL files. Key indicators include the use of `wmic.exe` or `msxsl.exe` to initiate outbound network connections to known malicious or rare destinations, execution with suspicious command-line arguments (such as `wmic.exe` with `/FORMAT` pointing to a remote URL or temporary file), the presence and unusual execution of `msxsl.exe` (which is not a default Windows binary), suspicious process ancestry (e.g., Office applications spawning `wmic.exe`), and subsequent network activity characteristic of command-and-control (C2) communication following the initial execution.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has `wmic.exe` or `msxsl.exe` initiated a network connection to a destination IP or domain known to be malicious?
    context: This question aims to detect a common attack pattern where legitimate Windows utilities are used to download or execute the next stage of an attack from a malicious server. By joining process creation events with network logs and cross-referencing the destination against a threat intelligence feed, analysts can identify high-confidence instances of malicious activity. An alert from this query indicates a direct link between the XSL processing tool and a known-bad infrastructure.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network perimeter firewalls, outbound web proxies, corporate DNS resolvers, and all Windows workstations and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name IN ('wmic.exe', 'msxsl.exe') | JOIN network_connection_logs ON process_id | LOOKUP destination_ip_or_domain IN threat_intel_feed WHERE category IN ('malware C2', 'malicious script hosting') | ALERT
  - question: Has `wmic.exe` or `msxsl.exe` connected to a domain that is rarely accessed by other hosts in the enterprise?
    context: Adversaries often use newly registered or purpose-built domains for their operations, which are unlikely to be visited by normal users. This question identifies statistically anomalous connections by flagging domains that very few hosts in the organization have contacted. Such rarity is a strong indicator of suspicious activity, even in the absence of a specific threat intelligence match.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network perimeter firewalls, outbound web proxies, corporate DNS resolvers, and all Windows workstations and servers.
    range: last 30 days
    queries:
      - technology: pseudocode
        query: SEARCH network_logs WHERE source_process IN ('wmic.exe', 'msxsl.exe') OVER last_30_days | GROUP BY destination_domain | CALCULATE distinct_host_count | FILTER distinct_host_count IS IN bottom_1_percentile | ALERT
  - question: Can we identify high-risk network connections from `wmic.exe` or `msxsl.exe` using a machine learning model?
    context: This question leverages a supervised machine learning model to score the risk of network connections from XSL processing tools. By considering a richer set of features beyond just the destination, such as TLS fingerprinting (JA3/JA3S), domain characteristics (age, entropy), and URL structure, the model can detect more subtle or novel threats that might evade simpler symbolic or statistical checks.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Zeek ssl.log
      - Network perimeter firewalls, outbound web proxies, corporate DNS resolvers, and all Windows workstations and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features (dest_ip_rep, ja3, domain_entropy, domain_age, url_params) from network_logs for wmic.exe/msxsl.exe | INPUT features into Random_Forest_Classifier | IF risk_score > threshold THEN ALERT
  - question: Has `wmic.exe` been executed with the `/FORMAT` switch pointing to a remote URL or a file in a temporary/user-writable directory?
    context: The `/FORMAT` switch in `wmic.exe` can be abused to fetch and execute a remote XSL script by providing a URL. It can also be used to execute a script dropped in a non-standard location like a user's temporary folder. This question directly targets this abuse pattern, as legitimate use of `/FORMAT` with remote files or from temporary directories is extremely rare and highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Windows workstations and servers, with heightened scrutiny on systems outside of developer or system administrator groups.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name == 'wmic.exe' AND command_line CONTAINS '/FORMAT:' | IF command_line MATCHES ('/FORMAT:http', '/FORMAT:https') OR file_path IN ('C:\\Users\\*', 'C:\\AppData\\*', 'C:\\Temp\\*') THEN ALERT
  - question: Are there `wmic.exe /FORMAT` executions where the file path argument has unusually high entropy?
    context: To evade signature-based detection, malware often uses randomized file names for the scripts it drops. This results in file paths with high character randomness, or entropy. This question seeks to identify such evasive behavior by flagging `wmic.exe` executions where the file path specified in the `/FORMAT` argument is a statistical outlier in terms of entropy compared to normal usage.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Windows workstations and servers, with heightened scrutiny on systems outside of developer or system administrator groups.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name == 'wmic.exe' AND command_line CONTAINS '/FORMAT:' | EXTRACT file_path | CALCULATE entropy(file_path) | IF entropy > baseline_top_5_percentile THEN ALERT
  - question: Can an unsupervised anomaly detection model identify outlier executions of `wmic.exe`?
    context: This question uses an unsupervised model, like an Isolation Forest, to find `wmic.exe` executions that don't conform to established normal behavior. The model analyzes multiple features of the execution (parent process, command-line length, presence of URLs, etc.) simultaneously. This approach is powerful for detecting novel or unusual variations of the technique without prior knowledge of what 'bad' looks like.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Windows workstations and servers, with heightened scrutiny on systems outside of developer or system administrator groups.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features (parent_process, cmd_length, special_chars, has_url, is_temp_path) from wmic.exe executions | INPUT features into Isolation_Forest_Model | IF model_flags_as_outlier THEN ALERT
  - question: Has `msxsl.exe` been executed with a remote file URL or with input/output files that do not have standard `.xml` or `.xsl` extensions?
    context: The `msxsl.exe` utility is designed to process XML and XSL files. Its use with remote files (via URL) or files disguised with other extensions (like `.txt`, `.jpg`) is a strong indicator of malicious intent. This question also checks the file hash of `msxsl.exe` itself, as its presence alone is suspicious since it's not a default Windows utility and may have been dropped by an adversary.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - File systems of all Windows workstations and servers. The presence of the msxsl.exe binary itself constitutes an NAI, as it is not installed by default and must be dropped by an adversary.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name == 'msxsl.exe' | IF command_line CONTAINS ('http://', 'https://') OR file_arguments_not_ending_with ('.xml', '.xsl') OR process_hash NOT IN known_good_hashes THEN ALERT
  - question: Which unauthorized hosts have `msxsl.exe` on their file system, and are there executions from anomalous parent processes?
    context: Since `msxsl.exe` is not a standard part of Windows, its mere presence is anomalous. This question first identifies all hosts where the binary exists for inventory and investigation. For hosts where it might be legitimate (e.g., developer machines), it then statistically baselines the parent processes. An execution spawned from an unexpected parent, like an email client, would be flagged as a deviation from the norm and highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - File systems of all Windows workstations and servers. The presence of the msxsl.exe binary itself constitutes an NAI, as it is not installed by default and must be dropped by an adversary.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_system_inventory for 'msxsl.exe' | FILTER hosts not in authorized_list | ALERT | FOR authorized_hosts, SEARCH process_creation_logs where process_name == 'msxsl.exe' | IF parent_process not in baseline_parents THEN ALERT
  - question: Is there a sudden, anomalous spike in the enterprise-wide execution count of `msxsl.exe`?
    context: A widespread malware campaign could lead to a sudden increase in `msxsl.exe` executions across many hosts. This question uses a time-series model (like ARIMA) to forecast the expected number of daily executions. If the actual count significantly exceeds this forecast, it suggests a coordinated, anomalous event that warrants immediate investigation into the hosts responsible for the spike.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - File systems of all Windows workstations and servers. The presence of the msxsl.exe binary itself constitutes an NAI, as it is not installed by default and must be dropped by an adversary.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE daily_count('msxsl.exe') | INPUT into ARIMA_time_series_model | IF observed_count > forecasted_confidence_interval THEN ALERT
  - question: Has `wmic.exe` or `msxsl.exe` been spawned by a Microsoft Office application, browser, or common scripting engine?
    context: "`wmic.exe` is a system administration tool and `msxsl.exe` is a developer tool. Neither should typically be launched directly by user-facing applications like Word, Excel, or Outlook. This question creates a high-fidelity alert for this specific, suspicious parent-child relationship, which is a common pattern for macro-based or script-based attacks."
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations, particularly those belonging to users in non-IT roles such as Finance, HR, and Sales, where developer tool execution is not expected.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name IN ('wmic.exe', 'msxsl.exe') AND parent_process_name IN ('winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe', 'mshta.exe', 'cscript.exe', 'wscript.exe') | ALERT
  - question: Has `wmic.exe` or `msxsl.exe` been executed as part of a rare or never-before-seen parent-child process combination?
    context: Adversaries may use novel or uncommon parent processes to launch their tools, which might not be on a predefined blocklist. This question takes a statistical approach by baselining all parent-child process relationships across the environment. Any execution of `wmic.exe` or `msxsl.exe` from a parent that has rarely or never been observed before is flagged as anomalous and potentially malicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations, particularly those belonging to users in non-IT roles such as Finance, HR, and Sales, where developer tool execution is not expected.
    range: last 30 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name IN ('wmic.exe', 'msxsl.exe') OVER last_30_days | LOOKUP parent_child_pair_frequency | IF frequency is new OR in bottom_1_percentile THEN ALERT
  - question: Can a graph-based model detect anomalous process execution chains that lead to the execution of `wmic.exe` or `msxsl.exe`?
    context: This question models process activity as a graph to understand the full execution chain. A graph-based anomaly detection algorithm can identify entire paths that are structurally different from normal activity. For example, it could flag a chain starting from an email attachment that leads through several processes to an eventual `wmic.exe` call, even if each individual parent-child link isn't suspicious on its own.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations, particularly those belonging to users in non-IT roles such as Finance, HR, and Sales, where developer tool execution is not expected.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CONSTRUCT process_execution_graph | APPLY graph_anomaly_detection_algorithm | IF path leading to 'wmic.exe' or 'msxsl.exe' is anomalous THEN ALERT
  - question: Following a suspicious `wmic.exe` or `msxsl.exe` execution, did the host immediately initiate a direct-to-IP network connection on a non-standard port?
    context: This question correlates two distinct suspicious events: the execution of an XSL script and subsequent network traffic that attempts to bypass normal controls. A process making a direct-to-IP connection (bypassing DNS) on a non-standard port within minutes of a suspicious XSL execution is a strong indicator of a successful compromise and the establishment of a command-and-control channel.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek files.log
      - Network egress points, host-based network monitoring on endpoints, and hosts identified as having recently executed suspicious XSL processing.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on suspicious_xsl_execution_alert | SEARCH network_logs from same host in next 5 minutes | IF connection is direct_to_ip AND destination_port is non_standard THEN ALERT
  - question: After a suspicious XSL processing event, did the host exhibit network traffic with C2 characteristics like beaconing or high-entropy data transfer?
    context: This question looks for statistical evidence of command-and-control activity following a potential compromise. It checks for two key indicators: robotic, periodic callbacks (beaconing) identified by a low standard deviation in time between connections, and encrypted or packed data transfer identified by high payload entropy. Finding these patterns strengthens the case that the initial XSL execution was malicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek files.log
      - Network egress points, host-based network monitoring on endpoints, and hosts identified as having recently executed suspicious XSL processing.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on suspicious_xsl_execution_alert | ANALYZE subsequent network_traffic from host | CALCULATE time_interval_std_dev for connections to same destination | CALCULATE payload_entropy | IF std_dev is near zero OR entropy is high THEN ALERT
  - question: Does a host's network behavior significantly deviate from its normal baseline after a suspicious XSL execution event?
    context: This question uses an autoencoder, a type of unsupervised machine learning model, to learn a profile of a host's normal network activity. After a suspicious XSL event is detected on that host, its subsequent network traffic is fed to the model. If the model cannot accurately reconstruct the traffic (i.e., there is a high reconstruction error), it means the traffic is a significant deviation from the norm, flagging a potential C2 or data exfiltration channel established by the malicious script.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek files.log
      - Network egress points, host-based network monitoring on endpoints, and hosts identified as having recently executed suspicious XSL processing.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRIGGER on suspicious_xsl_execution_alert | FEED subsequent network_traffic from host into pre-trained autoencoder_model for that host | IF reconstruction_error > threshold THEN ALERT