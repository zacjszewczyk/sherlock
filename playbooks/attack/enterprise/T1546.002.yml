name: T1546.002: Screensaver
id: f4b3c2d1-0e9f-4a8b-9c7d-6e5f4a3b2c1d
description: This playbook helps investigate whether an adversary is establishing persistence or elevating privileges by manipulating Windows screensaver configurations. This involves detecting the execution of malicious or anomalous screensaver (.scr) files, monitoring for suspicious modifications to screensaver-related registry keys, and identifying unusual behaviors associated with screensaver processes. Key indicators include screensavers executing from non-standard locations, making network connections, spawning command shells or known malicious tools, accessing sensitive system resources like LSASS memory or the SAM file, or being launched with obfuscated command-line arguments. The goal is to differentiate legitimate screensaver activity from malicious use of this feature for persistence and privilege escalation.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a known malicious screensaver executable running in the environment?
  context: This question looks for the execution of screensaver files (.scr) whose file hash matches a known malicious indicator from threat intelligence. A positive match is a high-fidelity indicator of compromise, suggesting an adversary is using a recognized malicious tool for persistence.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process execution logs on all Windows workstations and servers.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs WHERE process_name ENDS_WITH '.scr' | HASH process_image | LOOKUP hash in threat_intel_feed | RETURN events WHERE hash_is_malicious
- question: Has an unusually rare screensaver executable been executed?
  context: This question identifies screensaver executions that are statistical outliers based on their frequency across the enterprise. Adversaries may use custom or rarely seen executables that would not appear in standard threat intelligence. Flagging executions of '.scr' files that are in the bottom 5th percentile of prevalence helps uncover these potentially malicious, low-and-slow persistence mechanisms.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process execution logs on all Windows workstations and servers.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs WHERE process_name ENDS_WITH '.scr' OVER last_30_days | COUNT by process_hash | CALCULATE frequency_percentile | SEARCH process_creation_logs WHERE process_name ENDS_WITH '.scr' | FILTER where process_hash_percentile < 5
- question: Does a screensaver execution exhibit characteristics of malicious behavior based on a machine learning model?
  context: This question leverages a machine learning model to classify screensaver executions as benign or malicious. The model analyzes various features like file path entropy, parent process, and command-line arguments to identify subtle patterns indicative of compromise that may be missed by signature-based or simple statistical methods. A high confidence malicious score from the model suggests a sophisticated attempt at persistence.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process execution logs on all Windows workstations and servers.
  range: last 90 days
  queries:
  - pseudocode: FOR each process_creation_event WHERE process_name ENDS_WITH '.scr' | EXTRACT features (path_entropy, parent_process, cmd_args, user_context) | APPLY trained_classification_model | ALERT on events with high_malicious_score
- question: Has the screensaver registry key been modified to point to an executable in a non-standard location or to disable the secure screensaver setting?
  context: This question checks for direct manipulation of the Windows registry to set a custom screensaver for persistence. An adversary might change the 'SCRNSAVE.exe' value to point to their malware outside of the default System32/SysWOW64 directories, or set 'ScreenSaverIsSecure' to '0' to bypass security features. These are direct, high-confidence indicators of this persistence technique.
  answer_sources:
  - Windows Event ID 4657
  - Endpoint registry monitoring logs on all Windows workstations.
  range: last 90 days
  queries:
  - pseudocode: SEARCH registry_modification_logs WHERE (object_name CONTAINS 'SCRNSAVE.exe' AND new_value NOT IN ('C:\\Windows\\System32\\*', 'C:\\Windows\\SysWOW64\\*')) OR (object_name CONTAINS 'ScreenSaverIsSecure' AND new_value IS '0')
- question: Has an uncommon process modified the screensaver registry key, or is the new executable path statistically anomalous?
  context: This question identifies suspicious registry modifications by focusing on statistical outliers. Legitimate changes are typically made by a small set of common processes. A modification by a rare process (not in the 95th percentile) is suspicious. Additionally, a file path with unusually high entropy (randomness) written to the key can indicate an attempt to obfuscate the malicious executable's location.
  answer_sources:
  - Windows Event ID 4657
  - Endpoint registry monitoring logs on all Windows workstations.
  range: last 90 days
  queries:
  - pseudocode: SEARCH registry_modification_logs WHERE object_name CONTAINS 'SCRNSAVE.exe' | BASELINE modifying_process_frequency | ALERT on modifying_process_in_bottom_5_percent | CALCULATE entropy of new_value_path | ALERT on path_entropy > 2_std_dev_from_mean
- question: Is there an anomalous spike in the frequency of screensaver-related registry modifications on a host?
  context: This question uses a time-series model to detect unusual bursts of activity related to screensaver registry changes. A sudden increase in modifications, exceeding the predicted forecast, could indicate an automated script or adversary tool rapidly attempting to establish or alter a persistence mechanism across one or more systems.
  answer_sources:
  - Windows Event ID 4657
  - Endpoint registry monitoring logs on all Windows workstations.
  range: last 90 days
  queries:
  - pseudocode: COUNT screensaver_registry_mods_per_host per_hour | APPLY time_series_anomaly_model (ARIMA) | ALERT when observed_count > predicted_interval
- question: Did a screensaver process initiate an external network connection shortly after execution?
  context: This question correlates the execution of a screensaver file with subsequent network activity. Legitimate screensavers are typically self-contained and should not initiate outbound network connections. A '.scr' process making an external connection within 60 seconds of launch is a strong indicator of malicious activity, such as C2 communication or data exfiltration.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Endpoint process execution logs on all Windows hosts and network traffic logs from core network sensors or egress points.
  range: last 90 days
  queries:
  - pseudocode: JOIN process_logs (WHERE process_name ENDS_WITH '.scr') with network_logs ON host_ip WHERE time_diff < 60_seconds | ALERT on any match
- question: Is a network connection from a screensaver process associated with high-risk indicators?
  context: This question assesses the risk of network connections originating from screensaver processes. It enriches the destination IP with threat intelligence and scores the connection based on factors like IP reputation, rarity of the Autonomous System Number (ASN), and use of uncommon ports. A high cumulative risk score suggests the connection is likely malicious, even if the executable itself is unknown.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Endpoint process execution logs on all Windows hosts and network traffic logs from core network sensors or egress points.
  range: last 90 days
  queries:
  - pseudocode: FOR network_connections from '.scr'_process | ENRICH dest_ip with threat_intel, geo_ip | CALCULATE risk_score based on ip_rep, asn_rarity, port_rarity | ALERT if risk_score > threshold
- question: Does a network connection from a screensaver process deviate from the established baseline of normal enterprise network traffic?
  context: This question uses an unsupervised machine learning model to identify network connections from '.scr' processes that are anomalous compared to the organization's normal traffic profile. The model learns what benign traffic looks like and flags any connection that is an outlier, effectively detecting C2 channels or exfiltration attempts that use non-standard protocols, ports, or data patterns.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Endpoint process execution logs on all Windows hosts and network traffic logs from core network sensors or egress points.
  range: last 90 days
  queries:
  - pseudocode: FOR network_connections from '.scr'_process | EXTRACT features (port, protocol, bytes_sent, duration) | APPLY trained_outlier_detection_model (Isolation Forest) | ALERT on connections flagged as outliers
- question: Has a screensaver been executed from a user-writable or non-standard directory?
  context: This question detects screensavers running from locations where they do not typically reside. Legitimate screensavers are stored in system directories like System32. Execution from user-specific paths such as 'C:\Users\', 'AppData', or 'Temp' is highly suspicious and often indicates that an adversary has dropped a payload in a location where they have write permissions.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process execution logs on all Windows hosts, with a focus on file paths originating from user-writable directories.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs WHERE process_name ENDS_WITH '.scr' AND process_path CONTAINS ('Users', 'AppData', 'Temp', 'Downloads', 'ProgramData') AND process_path NOT CONTAINS 'System32'
- question: Is a screensaver running from a statistically rare directory or does its filename exhibit high entropy?
  context: This question identifies anomalous execution locations and filenames. By baselining all directories where '.scr' files normally run, any execution from a rare location (bottom 5th percentile) can be flagged. Additionally, adversaries often use randomized filenames to evade simple signature detection; a filename with high Shannon entropy is a strong indicator of such behavior.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process execution logs on all Windows hosts, with a focus on file paths originating from user-writable directories.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs WHERE process_name ENDS_WITH '.scr' | BASELINE parent_directory_frequency | ALERT on execution_from_rare_directory (< 5th_percentile) | CALCULATE entropy of filename | ALERT on high_entropy_filename
- question: Does the execution path of a screensaver fall into an anomalous cluster based on its location?
  context: This question uses clustering to identify outlier execution paths. Legitimate screensaver paths will form dense, predictable clusters. A malicious screensaver dropped in an unusual location will be identified as noise or part of a very small, sparse cluster by an algorithm like DBSCAN, providing a robust way to detect atypical file placements.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process execution logs on all Windows hosts, with a focus on file paths originating from user-writable directories.
  range: last 90 days
  queries:
  - pseudocode: FOR all '.scr'_execution_paths | VECTORIZE path (e.g., TF-IDF) | APPLY clustering_algorithm (DBSCAN) | ALERT on paths classified as noise or in small clusters
- question: Did a screensaver process spawn a child process that is a known privilege escalation tool?
  context: This question looks for a high-confidence indicator of privilege escalation where a screensaver is used as a launcher for a known malicious tool. By checking the file hash of any child process against a curated list of indicators for tools like Mimikatz or BadPotato, we can directly identify attempts to elevate privileges.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process lineage data from all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs WHERE parent_process_name ENDS_WITH '.scr' | HASH child_process_image | LOOKUP child_hash in privesc_tool_iocs | ALERT on match
- question: Has a screensaver process spawned a statistically improbable or unusual child process?
  context: This question aims to detect unknown or novel privilege escalation tools by focusing on anomalous process relationships. By baselining normal parent-child process pairs for screensavers, any new or rare relationship (e.g., a screensaver spawning a process with a conditional probability below 0.1%) can be flagged as suspicious and worthy of investigation.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process lineage data from all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: BASELINE conditional_probability of child_process given parent_is_'.scr' | FOR new_process_creation_events | IF parent_is_'.scr' AND probability_of_child < 0.1% THEN ALERT
- question: Does the process tree originating from a screensaver execution appear anomalous according to a graph-based model?
  context: This question models process activity as a graph to detect complex, multi-step privilege escalation attempts. A machine learning model trained on benign process trees can identify anomalous structures, such as an unusual sequence of child processes or unexpected tree depth, that deviate from normal behavior following a screensaver launch.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process lineage data from all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: FOR each process_tree where root_process_is_'.scr' | REPRESENT tree as graph | APPLY graph_anomaly_detection_model | ALERT on trees with anomalous nodes or structure
- question: Was a legitimate screensaver launched with suspicious or non-standard command-line arguments?
  context: This question inspects the command-line arguments used to launch legitimate screensavers. Adversaries may abuse trusted executables by passing malicious commands or scripts as arguments. This query looks for known malicious patterns (like 'IEX', 'DownloadString', Base64), or any arguments beyond the standard '/s', '/c', or '/p' switches, which strongly indicates misuse.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process command-line logs on all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs for known_screensaver_executables | REGEX_MATCH on command_line for (base64, 'IEX', 'DownloadString', non_standard_switches) | ALERT on match
- question: Does the command line of a screensaver execution have statistically high entropy?
  context: This question identifies obfuscated or randomized command-line payloads by measuring their Shannon entropy. Legitimate command lines have low entropy and are predictable. A command line with an entropy score significantly higher than the baseline for that specific screensaver suggests it contains randomized or encoded data, a common tactic for hiding malicious code.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process command-line logs on all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: FOR each screensaver_execution | CALCULATE shannon_entropy of command_line | BASELINE mean_entropy_per_screensaver | ALERT if entropy > 3_std_dev_from_mean
- question: Is a screensaver's command line classified as malicious by a trained machine learning model?
  context: This question uses a supervised machine learning model to score the maliciousness of command-line arguments. By training on features derived from natural language processing (NLP), the model can learn the subtle characteristics of malicious command lines, enabling it to detect novel or complex obfuscation techniques that might evade simpler methods.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process command-line logs on all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: FOR each screensaver_execution | EXTRACT NLP_features from command_line | APPLY trained_classifier_model | ALERT on high_malice_score
- question: Did a screensaver process spawn a command shell or a child process with a higher integrity level?
  context: This question detects a common privilege escalation pattern where an initial payload (the screensaver) is used to launch a more powerful interactive shell (cmd, PowerShell) or a new process with elevated permissions. Legitimate screensavers should never do this, making such an event a high-fidelity indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process lineage and integrity level data from all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_creation_logs WHERE parent_process_name ENDS_WITH '.scr' AND (child_process_name IN ('cmd.exe', 'powershell.exe', ...) OR child_integrity_level > parent_integrity_level)
- question: Has a screensaver spawned a child process that is statistically rare across the enterprise?
  context: This question provides a broader approach to detecting unusual child processes beyond just command shells. By identifying any child process that is not among the 99% most common children spawned by screensavers, this method can uncover novel or custom tools used by an adversary for their next stage.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process lineage and integrity level data from all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: BUILD frequency_table of child_processes from '.scr'_parents | FOR new_process_creation_events | IF parent_is_'.scr' AND child_process NOT IN top_99_percent_frequency THEN ALERT
- question: Does the process tree originating from a screensaver show a high reconstruction error when analyzed by an autoencoder model?
  context: This question uses an autoencoder, a type of neural network, to learn the structure of normal process activity following a screensaver launch. Malicious activity, which deviates from this learned norm (e.g., by spawning unexpected processes or changing integrity levels), will result in a high reconstruction error, flagging the entire process tree as anomalous.
  answer_sources:
  - Windows Event ID 4688
  - Endpoint process lineage and integrity level data from all Windows hosts.
  range: last 90 days
  queries:
  - pseudocode: FOR each process_tree from '.scr'_process | EXTRACT feature_vector | PASS through trained_autoencoder_model | ALERT if reconstruction_error > threshold
- question: Did a screensaver process or its descendants attempt to access highly sensitive system resources?
  context: This question identifies critical post-exploitation activity by correlating a screensaver launch with subsequent attempts to access sensitive resources. Access to LSASS process memory, the SAM file, or the SECURITY registry hive is a hallmark of credential theft and privilege escalation. A screensaver process performing these actions is a critical threat indicator.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Windows Event ID 4657
  - Endpoint object access logs on all Windows hosts, and specifically on Domain Controllers for sensitive directory files (NTDS.dit).
  range: last 90 days
  queries:
  - pseudocode: CORRELATE process_logs (for '.scr' PIDs) with object_access_logs ON ProcessID | ALERT if object_name IN ('lsass.exe', 'SAM', 'ntds.dit', 'HKLM\\SECURITY')
- question: Has a screensaver process accessed any file or registry objects outside of its established baseline?
  context: This question aims to detect suspicious resource access by identifying statistical outliers. Legitimate screensavers have a very limited and predictable set of resources they interact with. Any access to an object not in this narrow baseline, especially in user directories or system configuration folders, is anomalous and warrants investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Windows Event ID 4657
  - Endpoint object access logs on all Windows hosts, and specifically on Domain Controllers for sensitive directory files (NTDS.dit).
  range: last 90 days
  queries:
  - pseudocode: BASELINE file_and_registry_objects accessed by legitimate '.scr'_processes | FOR object_access_events from '.scr'_process | IF accessed_object NOT IN baseline THEN ALERT
- question: Does the sequence of system calls or object accesses following a screensaver launch appear anomalous?
  context: This question uses a sequence-based model (like an LSTM) to understand the *order* of operations following a screensaver launch. Adversary actions often follow a logical, but malicious, sequence (e.g., file open -> process access -> registry write). The model learns benign sequences and flags any sequence that deviates, detecting the entire malicious chain of activity rather than just a single event.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Windows Event ID 4657
  - Endpoint object access logs on all Windows hosts, and specifically on Domain Controllers for sensitive directory files (NTDS.dit).
  range: last 90 days
  queries:
  - pseudocode: FOR each '.scr'_process | CAPTURE sequence of subsequent object_access_events | FEED sequence into trained_LSTM_model | ALERT if sequence is flagged as anomalous