name: T1125: Video Capture
id: c1a2e3f4-b5d6-4c7e-8f9a-0b1c2d3e4f5a
description: This playbook helps determine if an adversary is capturing video from endpoint devices. It looks for evidence such as the execution of known video capture malware, the misuse of legitimate utilities (like PowerShell or ffmpeg) for screen recording, unauthorized processes accessing video hardware, suspicious creation of video files in staging directories, and unusual network traffic patterns indicative of video data exfiltration. [1]
type: technique
related:
- TA0009: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any processes been created that match known malicious indicators for video capture malware?
  context: This question aims to identify direct evidence of video capture malware by cross-referencing process execution events with threat intelligence feeds. A match provides a high-confidence signal that a known malicious tool, such as FruitFly or Proton, is active on an endpoint, indicating a compromise specifically geared towards video surveillance.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from User workstations and laptops, particularly those assigned to executives, developers, and system administrators.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events (e.g., WinEventID:4688, SysmonID:1)
      JOIN process_name, file_hash with threat_intelligence_feed on indicator
      WHERE indicator_technique = "T1125"
      RETURN host, timestamp, process_name, file_hash
- question: Is known video capture malware being launched by an unusually rare parent process?
  context: This question helps to add context to a confirmed malware detection. Legitimate processes typically have common parent processes (e.g., explorer.exe, services.exe). When malware is launched by a rare or unique parent process, it can indicate a more sophisticated or unusual execution chain, such as being spawned by another piece of malware or a script, which warrants further investigation.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from User workstations and laptops, particularly those assigned to executives, developers, and system administrators.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events where process_matches_known_indicator
      CALCULATE prevalence of parent_process across enterprise
      FILTER parent_process_prevalence < 5th_percentile
      RETURN host, parent_process, child_process
- question: Have any process creation events been flagged by a machine learning model as potentially malicious and related to video capture?
  context: This question leverages a machine learning model to detect novel or unknown threats that might not be in a threat intelligence feed. By analyzing a combination of process features, the model can identify anomalous patterns consistent with malicious behavior. A high maliciousness score from the model serves as a proactive alert for potential video capture activity that evades signature-based detection.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from User workstations and laptops, particularly those assigned to executives, developers, and system administrators.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      STREAM process_creation_events to ML_model
      FILTER model_score > high_threshold
      RETURN host, process_name, model_score, contributing_features
- question: Are legitimate utilities like PowerShell or ffmpeg being executed with command-line arguments that suggest they are being used for video capture?
  context: Adversaries often abuse legitimate tools ('living off the land') to avoid detection. This question focuses on finding such abuse by searching for specific command-line patterns used to initiate video capture via tools that are not primarily designed for that purpose in an interactive user session. Detecting these patterns can reveal malicious scripting or non-interactive use.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from User workstations and laptops, particularly those belonging to high-value targets.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events with command_line
      FILTER (process_name = "powershell.exe" and command_line matches "DirectShowLib") OR (process_name = "ffmpeg.exe" and command_line matches "-f dshow")
      RETURN host, user, full_command_line
- question: Are video-capable utilities being run with command-line arguments that are highly dissimilar from historical, benign usage for a given user or host?
  context: This question aims to identify anomalous usage of legitimate tools by establishing a baseline of normal behavior. Malicious command lines are often unique or rare compared to the routine commands an administrator or user might run. A low similarity score against a historical baseline of benign commands suggests the execution is an outlier and potentially malicious.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from User workstations and laptops, particularly those belonging to high-value targets.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH process_creation_events for "powershell.exe", "ffmpeg.exe"
      TOKENIZE command_line_args
      COMPARE with historical_benign_arg_sets using Jaccard_similarity
      FILTER similarity_score < 10th_percentile
      RETURN host, user, command_line, similarity_score
- question: Has a Natural Language Processing (NLP) model classified the command-line arguments of a video-capable utility as malicious?
  context: This question uses a sophisticated NLP model to understand the intent behind a command line, rather than just matching simple patterns. The model is trained to distinguish between benign and malicious command structures, allowing it to detect novel or obfuscated malicious commands that might evade regex or simple similarity checks.
  answer_sources:
  - Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from User workstations and laptops, particularly those belonging to high-value targets.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      STREAM process_creation_events for "powershell.exe", "ffmpeg.exe" to NLP_command_line_model
      FILTER classification = "malicious"
      RETURN host, user, command_line, model_confidence
- question: Has a process that is not on the approved application allowlist accessed a video capture device?
  context: This question directly targets the unauthorized use of webcam hardware. By monitoring for processes that request access to video devices and comparing them against a list of known-good video conferencing applications, analysts can quickly identify suspicious or unapproved software attempting to activate a webcam.
  answer_sources:
  - Sysmon Event ID 10, Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from all endpoints equipped with integrated or peripheral webcams.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH SysmonID:10 where TargetObject matches "\\Device\\Video*" and CallTrace contains "dxgkrnl.sys"
      FILTER SourceImage NOT IN video_app_allowlist
      RETURN host, user, SourceImage
- question: Has a rare or uncommon process been observed accessing video devices across the enterprise?
  context: This question uses the principle of 'rarity is suspicious'. While a process accessing a video device might not be on an explicit blocklist, if it is only running on a handful of machines in the entire organization, it is an anomaly worth investigating. This helps uncover custom malware or niche tools that wouldn't be caught by allowlist-based rules.
  answer_sources:
  - Sysmon Event ID 10, Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from all endpoints equipped with integrated or peripheral webcams.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH SysmonID:10 where TargetObject matches "\\Device\\Video*"
      CALCULATE prevalence of SourceImage across enterprise
      FILTER prevalence < 5th_percentile
      RETURN SourceImage, prevalence_count
- question: Has an autoencoder model detected an anomalous video device access event that deviates from learned legitimate behavior?
  context: This question employs an unsupervised machine learning model (an autoencoder) to build a profile of what 'normal' video device access looks like. When a new event occurs that the model cannot accurately reconstruct (resulting in a high reconstruction error), it signifies a significant deviation from the norm. This is effective for detecting novel attack patterns without prior labeling of malicious data.
  answer_sources:
  - Sysmon Event ID 10, Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from all endpoints equipped with integrated or peripheral webcams.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      STREAM SysmonID:10 events to autoencoder_model
      CALCULATE reconstruction_error
      FILTER reconstruction_error > high_threshold
      RETURN host, user, SourceImage, error_score
- question: Has a non-allowlisted application created a video or image file in a common staging directory?
  context: This question looks for the output of a video capture. After capturing video or images, malware needs to store the files somewhere before exfiltration. Common staging areas like TEMP or APPDATA are frequently used. This rule flags the suspicious creation of media files in these locations by any application not approved for video conferencing.
  answer_sources:
  - Sysmon Event ID 11, Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from common staging directories on user endpoints, such as %APPDATA%, %TEMP%, C:\Users\Public, and temporary internet file locations.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH SysmonID:11 where TargetFilename ends with (.mp4, .avi, .jpg) AND file_path in (TEMP, APPDATA, PUBLIC)
      FILTER Image NOT IN video_app_allowlist
      RETURN host, Image, TargetFilename
- question: Have any video or image files been created with high-entropy (random-looking) filenames?
  context: This question seeks to identify files created by automated processes. Malware often generates random filenames (e.g., 'a8d3j9c.mp4') to avoid static detection and collisions. These random names have high Shannon entropy compared to human-created names (e.g., 'meeting_notes.jpg'). Flagging high-entropy filenames is a good heuristic for spotting programmatic file creation.
  answer_sources:
  - Sysmon Event ID 11, Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from common staging directories on user endpoints, such as %APPDATA%, %TEMP%, C:\Users\Public, and temporary internet file locations.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH SysmonID:11 where TargetFilename ends with (.mp4, .avi, .jpg)
      CALCULATE shannon_entropy of TargetFilename
      FILTER entropy > 3.5
      RETURN host, TargetFilename, entropy
- question: Has a clustering algorithm (DBSCAN) identified a dense group of file creation events that may indicate periodic video capture?
  context: This question attempts to find malware that periodically captures and saves video or screenshots. This behavior would create a dense cluster of file creation events with similar attributes (e.g., same process, same directory, regular time intervals). The DBSCAN algorithm is well-suited to find these dense clusters and separate them from sparse, normal user activity.
  answer_sources:
  - Sysmon Event ID 11, Windows Event ID 4688, Sysmon Event ID 1. Data should be collected from common staging directories on user endpoints, such as %APPDATA%, %TEMP%, C:\Users\Public, and temporary internet file locations.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH SysmonID:11
      FEATURE_EXTRACT (file_size, dir_path, process, time_delta)
      APPLY DBSCAN clustering
      IDENTIFY dense_clusters
      RETURN cluster_id, cluster_members
- question: Following a potential video capture event on a host, was there a subsequent network transfer of video or image files to an unapproved destination?
  context: This question connects host-based evidence of video capture with network-based evidence of exfiltration. A detection of video capture is significant, but seeing the captured data being sent off-network shortly after provides a much stronger, more complete picture of the attack lifecycle, confirming the adversary's intent and success.
  answer_sources:
  - Zeek conn.log, Zeek files.log, Sysmon Event ID 1, Sysmon Event ID 10, Sysmon Event ID 11. Data should be collected from network egress points (e.g., firewalls, proxies) and the network interfaces of individual endpoints.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      CORRELATE T1125_host_alert WITH network_file_transfers within 10_minutes
      WHERE file_mime_type is "video/*" or "image/*" AND destination NOT IN approved_destinations
      RETURN host, destination, file_name, timestamp
- question: Has a host exhibited an anomalous spike in outbound network traffic that exceeds its historical baseline?
  context: This question looks for unusually large data transfers that could represent the exfiltration of captured video files, which are typically large. By comparing a host's current traffic to its own historical baseline, this method can detect anomalies specific to that host's normal behavior, reducing false positives from generically 'chatty' machines.
  answer_sources:
  - Zeek conn.log, Zeek files.log, Sysmon Event ID 1, Sysmon Event ID 10, Sysmon Event ID 11. Data should be collected from network egress points (e.g., firewalls, proxies) and the network interfaces of individual endpoints.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each_host, CALCULATE hourly_outbound_baseline (e.g., 99th percentile) from Zeek_conn_logs
      ALERT if current_hour_outbound_bytes > baseline
      PRIORITIZE if host had recent T1125_alert
      RETURN host, current_bytes, baseline_bytes
- question: Has a time series forecasting model detected an outbound traffic volume that significantly deviates from its predicted forecast?
  context: This question uses a more advanced statistical method to detect exfiltration. A time series model (like SARIMA or LSTM) can learn complex patterns, including seasonality (e.g., daily/weekly cycles), in a host's network behavior. An alert is generated only when the actual traffic significantly deviates from what the model predicted, making it highly effective at spotting true anomalies that break established patterns.
  answer_sources:
  - Zeek conn.log, Zeek files.log, Sysmon Event ID 1, Sysmon Event ID 10, Sysmon Event ID 11. Data should be collected from network egress points (e.g., firewalls, proxies) and the network interfaces of individual endpoints.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each_host, TRAIN time_series_model on historical_outbound_traffic
      FORECAST expected_traffic for current_time
      CALCULATE residual (actual - forecast)
      ALERT if residual is anomalous
      RETURN host, actual_traffic, forecasted_traffic, residual