name: 'T1029: Scheduled Transfer'
id: 'c4a1b2d3-e4f5-4a6b-7c8d-9e0f1a2b3c4d'
description: This playbook helps identify if an adversary is exfiltrating data using scheduled transfers. It focuses on detecting various indicators, such as time series of outbound network connections with fixed, repeating intervals to suspicious destinations; newly created or modified scheduled tasks with commands related to data staging and transfer; sequences of connections with statistically regular inter-arrival times and anomalous payload sizes; recurring data transfers over covert channels like DNS or ICMP; and unsigned processes from non-standard paths that access many files before initiating periodic outbound connections.
type: technique
related:
  - 'TA0010: Exfiltration'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: How can I identify recurring network connections to known malicious destinations by correlating DNS and connection logs?
    context: This question aims to uncover the most direct evidence of scheduled exfiltration: a host repeatedly "calling home" to a known command-and-control (C2) server. By joining DNS requests with network connection logs and comparing destinations against a threat intelligence feed, analysts can pinpoint compromised hosts that are beaconing out to malicious infrastructure on a fixed schedule.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Feed
      - 'Network Egress Points (e.g., Firewalls, Proxies), DNS Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN conn_logs and dns_logs | FILTER destination_ip or resolved_domain in threat_feed | GROUP BY source_ip, destination | ANALYZE timestamps for regular intervals

  - question: Can statistical analysis of connection time intervals reveal regularly scheduled network traffic (beaconing) that might indicate data exfiltration?
    context: This question focuses on identifying the behavior of scheduled transfers, even if the destination is not yet known to be malicious. Malware often uses a fixed interval to communicate. By calculating the time difference between consecutive connections for each source-destination pair, a very low standard deviation ($$ \sigma_{\Delta t} \approx 0 $$) points to automated, machine-like communication characteristic of beaconing. Focusing on traffic outside business hours helps filter out legitimate, user-driven activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Feed
      - 'Network Egress Points (e.g., Firewalls, Proxies), DNS Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM conn_logs | GROUP BY source_ip, destination_ip | CALCULATE time_delta between consecutive connections | COMPUTE standard_deviation(time_delta) | FILTER std_dev is near zero AND time is outside business_hours

  - question: How can machine learning be used to automatically cluster and identify previously unknown, periodic network traffic patterns indicative of scheduled exfiltration?
    context: This question leverages machine learning to discover novel or unknown scheduled transfer channels. Unlike statistical methods that look at one pair at a time, time series clustering can group various traffic patterns based on their shape and periodicity. This allows analysts to find hosts with highly regular communication patterns, even to destinations not on a threat feed, and then manually investigate these clusters to identify new malicious infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Feed
      - 'Network Egress Points (e.g., Firewalls, Proxies), DNS Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM conn_logs | FOR each internal_host | APPLY K-Shape clustering on connection time_series | INSPECT clusters with high regularity (low variance) and connections to low-reputation domains

  - question: Are there new or modified scheduled tasks containing commands associated with data exfiltration tools or techniques?
    context: This question focuses on detecting the persistence mechanism for scheduled transfers directly on the host. Adversaries create scheduled tasks to automate data staging, compression, and exfiltration. By monitoring for new tasks (Windows Event ID 4698, 4702) and scanning their command lines for specific keywords (e.g., `rclone`, `curl`, `tar`, `Invoke-WebRequest`), analysts can catch the adversary's automation scripts at the point of creation.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - 'Domain Controllers (for GPO-based tasks), Critical Application Servers, User Workstations, File Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM security_event_logs | FILTER event_id is 4698 or 4702 | SEARCH command_line for 'rclone', 'curl', 'wget', 'tar', 'Invoke-WebRequest', 'Start-BitsTransfer' | CORRELATE with powershell_logs for deobfuscated content

  - question: Can the entropy of scheduled task command-line arguments indicate obfuscated or malicious commands?
    context: This question uses a statistical property, Shannon entropy, to find malicious activity that keyword-based searches might miss. Adversaries often encode or obfuscate their commands to evade detection. A high entropy score in a command line suggests a high degree of randomness, which is characteristic of encoded data (like Base64) but not of normal, human-readable commands. This can flag suspicious scheduled tasks for further investigation.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - 'Domain Controllers (for GPO-based tasks), Critical Application Servers, User Workstations, File Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM security_event_logs | FILTER event_id is 4698 | CALCULATE shannon_entropy(command_line_arguments) | FILTER entropy > 6.0 AND user is not SYSTEM AND path is non-standard

  - question: Can a machine learning model be trained to classify scheduled tasks as benign or malicious based on their command-line properties?
    context: This question proposes building a proactive detection capability for malicious scheduled tasks. By training a classifier on features like command length, character types, keywords, and entropy from known good and bad examples, the model can learn to automatically assign a 'suspicion score' to all new tasks. This automates the analysis process and can catch novel threats that match the general patterns of malicious commands.
    answer_sources:
      - Windows Event ID 4698
      - Windows Event ID 4702
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - 'Domain Controllers (for GPO-based tasks), Critical Application Servers, User Workstations, File Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features (length, char_freq, entropy) from scheduled_task_logs | TRAIN classification model (e.g., Random Forest) on labeled data | DEPLOY model to score new tasks in real-time

  - question: Are sensitive internal hosts making recurring, non-business-hour connections to destinations not on an approved allowlist?
    context: This question applies a targeted, policy-based approach to high-value assets. By defining a watchlist of sensitive systems and an allowlist of approved destinations, any recurring connection from a sensitive host to an unknown destination, especially during off-hours, becomes highly suspicious. This method provides high-fidelity alerts by focusing on the most critical assets and deviations from expected behavior.
    answer_sources:
      - Zeek conn.log
      - Asset Inventory Database
      - 'Network Egress Points, VPN Concentrators, High-Value Asset Subnets'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN conn_logs with asset_inventory | FILTER host is on sensitive_watchlist AND connection_time is non-business_hours | ALERT if destination is not in application_allowlist

  - question: Can we detect scheduled exfiltration by identifying recurring connections with anomalously large data transfer sizes?
    context: This question combines periodicity with volume analysis. While beaconing establishes a connection, exfiltration sends the data. This approach first establishes a baseline of normal data transfer sizes for each host. It then looks for recurring connections (identified via time delta analysis) where the amount of data sent is a statistical outlier (e.g., in the 95th percentile). This combination is a strong indicator of a scheduled task periodically exfiltrating large volumes of data.
    answer_sources:
      - Zeek conn.log
      - Asset Inventory Database
      - 'Network Egress Points, VPN Concentrators, High-Value Asset Subnets'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, BASELINE outbound_data_size per destination | IDENTIFY recurring connections using time_delta analysis | ALERT if average_transfer_size > 95th_percentile_of_baseline

  - question: Can time series forecasting models predict scheduled connections, thereby confirming their automated nature?
    context: This question uses predictive analytics to confirm suspicion. If a connection is truly scheduled, its timing should be predictable. By applying a forecasting model (like ARIMA or Prophet) to a series of connections, the model can predict when the next event should occur. If a connection then happens at exactly the predicted time, it strongly validates the hypothesis that the traffic is automated by a machine, not a human.
    answer_sources:
      - Zeek conn.log
      - Asset Inventory Database
      - 'Network Egress Points, VPN Concentrators, High-Value Asset Subnets'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each source-destination_pair | TRAIN time-series model (e.g., Prophet) on connection timestamps | PREDICT next timestamp | FLAG if actual connection matches prediction AND payload_size is anomalous

  - question: Are there large, periodic data transfers occurring over covert channels or encrypted channels with self-signed certificates?
    context: This question targets adversaries attempting to hide exfiltration within seemingly benign or encrypted traffic. By monitoring for specific red flags—such as TLS connections using self-signed certificates, high-volume DNS TXT queries, or unusual JA3/JA3S hashes—analysts can identify covert channels. Correlating these events with connection logs to check for periodic, high-volume transfers can uncover sophisticated exfiltration attempts.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - 'Network Egress Points, DNS Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM ssl_logs | FIND connections with self-signed_certs or malicious_JA3_hashes | FROM dns_logs | FIND high_volume_TXT_queries | CORRELATE with conn_logs for large, periodic transfers

  - question: Is any host exhibiting a recurring, daily spike in data transfer volume over unusual protocols like DNS or ICMP?
    context: This question looks for anomalies in data volume on a per-protocol basis. Most protocols have a typical daily traffic profile. By establishing a baseline (e.g., the 99th percentile) for daily data sent over protocols not designed for bulk transfer (like DNS and ICMP), any day that significantly exceeds this threshold is an anomaly. If these anomalous days for a single host occur at a regular interval (e.g., every Tuesday), it suggests a scheduled exfiltration task.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - 'Network Egress Points, DNS Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each host, PROFILE daily_bytes_sent per protocol | CALCULATE 99th_percentile_baseline for DNS, ICMP | FLAG days where total_bytes > baseline | CHECK if flagged days for a host occur at a regular interval

  - question: Can an anomaly detection model identify recurring covert exfiltration attempts by analyzing connection metadata?
    context: This question proposes using an unsupervised machine learning model to find the "unknown unknowns." An Isolation Forest or similar algorithm can learn the characteristics of normal network connections by looking at a combination of features (port, protocol, byte count, time of day, etc.). It can then flag connections that are highly anomalous outliers. Analysts can then examine if these flagged anomalies are recurring on a schedule, which could indicate a stealthy, scheduled exfiltration channel.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - 'Network Egress Points, DNS Servers'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN anomaly_detection model (e.g., Isolation Forest) on connection features (port, proto, bytes, hour) | SCORE new connections for anomalousness | ANALYZE highly_anomalous events for periodicity

  - question: Is there evidence of an unsigned process executing from a non-standard path, accessing many files, and then initiating a network connection?
    context: This question reconstructs the initial stages of a data exfiltration event on an endpoint. It seeks to chain together a sequence of suspicious activities: 1) A potentially malicious process starts (unsigned, unusual location). 2) The process stages data (accesses an unusually high number of files). 3) The process initiates an outbound connection to exfiltrate the staged data. Correlating these events (Sysmon and Windows Events) provides strong, host-based evidence of data collection followed by transfer.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Windows Event ID 4663
      - Zeek conn.log
      - 'File Servers, User Workstations with access to sensitive data, Code Repositories, Endpoint devices of privileged users'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FIND Sysmon_EID1 where signed=false and path is non-standard | CORRELATE ProcessGuid with Win_EID4663 | IF file_access_count is high and files are sensitive, CORRELATE with Sysmon_EID3 or Zeek logs within 5 mins

  - question: Are non-standard or unsigned processes exhibiting abnormal "file access bursts" that correlate with subsequent network beaconing?
    context: This question focuses on statistically identifying the data staging phase. By baselining the normal file access behavior of processes on a host, it becomes possible to spot outliers. An alert is triggered when a non-standard or unsigned process accesses a number of files that is statistically anomalous (e.g., >3 standard deviations above the mean). If this "file access burst" is then followed by the appearance of periodic network beaconing from the same host, it strongly suggests a data staging and exfiltration operation.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Windows Event ID 4663
      - Zeek conn.log
      - 'File Servers, User Workstations with access to sensitive data, Code Repositories, Endpoint devices of privileged users'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: COUNT unique file_access_events per ProcessGuid in 1-min window | BASELINE counts for standard processes | ALERT on unsigned processes with outlier access_counts | CORRELATE with subsequent periodic network activity from same host

  - question: Can a sequence analysis model be used to detect the full attack chain of data staging and scheduled exfiltration?
    context: This question proposes using a sophisticated machine learning model to recognize a complex pattern of events over time. A Hidden Markov Model or similar sequence model can be trained to identify the specific chronological pattern of [Unsigned Process Start] -> [High-Volume File Access] -> [Periodic Network Connection]. By deploying this model to score real-time event sequences from endpoints and the network, it can automatically flag activity that matches this known malicious sequence with a high degree of confidence.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Windows Event ID 4663
      - Zeek conn.log
      - 'File Servers, User Workstations with access to sensitive data, Code Repositories, Endpoint devices of privileged users'
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN sequence model (e.g., HMM) on labeled event sequences (Sysmon, Zeek) | DEPLOY model to score real-time event sequences | FLAG sequences matching malicious pattern with high probability