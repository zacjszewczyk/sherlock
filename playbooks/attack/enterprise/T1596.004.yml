name: T1596.004: CDNs
id: e1b2c3d4-a5f6-7890-1234-567890abcdef
description: Investigates if an adversary is gathering information about the organization's Content Delivery Networks (CDNs). This includes detecting reconnaissance attempts from malicious IPs or tools, scanning for sensitive URL paths, identifying subdomain enumeration or directory bruteforcing, discovering direct connections to origin servers that bypass the CDN, and finding internal reconnaissance for CDN-related secrets.
type: technique
related: TA0043: Reconnaissance
contributors: Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any CDN asset requests originated from IPs or used User-Agents associated with known threats or reconnaissance tools?
  context: This question aims to identify low-hanging fruit: reconnaissance activity from known malicious infrastructure or tools. By correlating network logs with threat intelligence feeds, analysts can quickly spot and block obvious scanning attempts from sources like TOR exit nodes or IPs flagged for malicious behavior, or tools like Nuclei and Nmap. A match provides a high-confidence signal of a targeted or opportunistic probe.
  answer_sources: Zeek http.log, Zeek conn.log, Internet gateway, Web application firewalls (WAFs), CDN management consoles, Network Security Monitoring (NSM) sensors, Subscribed threat intelligence feeds
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek logs (conn.log, http.log) WHERE source_ip IN (threat_intel_feed_ips) OR user_agent IN (recon_tool_user_agents); ALERT on match.
- question: Are any external IPs exhibiting an unusually high request rate to our CDN assets compared to normal traffic patterns?
  context: This question helps detect scanners or probing tools that are not yet on a public blocklist. By establishing a baseline of normal request rates, we can statistically identify outliers. An IP making significantly more requests than 95% of other external IPs is likely not a normal user and could be performing automated scanning or enumeration. This method provides a dynamic way to find previously unknown threats.
  answer_sources: Zeek http.log, Zeek conn.log, Internet gateway, Web application firewalls (WAFs), CDN management consoles, Network Security Monitoring (NSM) sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE request rate per minute for each source_ip over last 24 hours; CALCULATE 95th percentile of all source_ip request rates; FLAG source_ips WHERE request_rate > 95th_percentile.
- question: Can we use a machine learning model to score and identify individual HTTP requests that are likely part of a reconnaissance attempt?
  context: This question seeks to apply a more sophisticated, feature-based detection method. Unlike simple rate analysis, a machine learning model can consider multiple indicators simultaneously, such as IP reputation, ASN, User-Agent rarity, and header anomalies. This provides a more nuanced risk score for each request, enabling the detection of subtle or advanced reconnaissance techniques that might evade simpler symbolic or statistical checks. A high score (e.g., >0.9) serves as a strong signal for investigation.
  answer_sources: Zeek http.log, Zeek conn.log, Internet gateway, Web application firewalls (WAFs), CDN management consoles, Network Security Monitoring (NSM) sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each HTTP request, EXTRACT features (IP reputation, ASN, User-Agent, headers); INPUT features into classification model; ALERT on requests WHERE model_score > 0.9.
- question: Have any external IPs attempted to access known sensitive or non-public URL paths on our CDN assets?
  context: This question focuses on detecting targeted probes for common vulnerabilities or information disclosure vectors, such as exposed Git repositories (`/.git/config`) or environment files (`/.env`). By maintaining a watchlist of these sensitive paths, analysts can create high-fidelity alerts. An attempt to access these files is a strong indicator of an adversary looking for misconfigurations or exposed credentials.
  answer_sources: Zeek http.log, Web servers hosting CDN content, Application log aggregators, SIEM
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log WHERE source_ip is external AND uri IN (sensitive_path_watchlist); ALERT on match.
- question: Are any external IPs generating a statistically significant high rate of client or server errors (4xx/5xx) on our CDN assets?
  context: This question aims to identify directory or file enumeration activities. Attackers often scan for hidden content, which results in a high number of "Not Found" (404) or other error responses. A normal user will have a very low error rate. By flagging IPs with an error rate that is a statistical anomaly (e.g., more than 3 standard deviations above the mean), we can detect automated scanning tools trying to map out the web application's structure.
  answer_sources: Zeek http.log, Web servers hosting CDN content, Application log aggregators, SIEM
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each external source_ip, CALCULATE ratio of 4xx/5xx responses to total requests; CALCULATE mean and standard deviation of error rate for all external IPs; FLAG source_ips WHERE error_rate > (mean + 3 * std_dev).
- question: Can we use a sequence analysis model to distinguish between normal user browsing patterns and automated scanning sequences?
  context: This question addresses the limitation of looking at requests in isolation. A sequence analysis model, like an LSTM, learns the typical order and flow of pages a human user visits. Automated scanning tools, in contrast, request URIs in an alphabetical, random, or otherwise non-human sequence. By flagging sessions whose sequence of URI requests has a low probability of being a normal user journey, this method can detect sophisticated enumeration that might not trigger rate- or error-based alerts.
  answer_sources: Zeek http.log, Web servers hosting CDN content, Application log aggregators, SIEM
  range: last 90 days
  queries:
  - technology: pseudocode
    query: GROUP http.log by source_ip into sessions; CREATE sequences of requested URIs for each session; INPUT URI sequence into trained LSTM model; ALERT on sessions where probability is below a benign threshold.
- question: Are any source IPs generating a high volume of DNS queries for non-existent subdomains?
  context: This question is designed to detect subdomain enumeration, a common reconnaissance technique where an attacker tries to discover hidden or forgotten subdomains. Tools performing this activity often use a wordlist, leading to a large number of queries for names that do not exist, which return an NXDOMAIN (Non-Existent Domain) response. A simple threshold-based rule (e.g., >50 NXDOMAINs in a minute) is a highly effective way to catch this brute-force discovery behavior.
  answer_sources: Zeek dns.log, Authoritative and recursive DNS servers, Internet gateway, Network Security Monitoring (NSM) sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: COUNT NXDOMAIN responses per source_ip in Zeek dns.log over 1-minute windows; ALERT if count > 50.
- question: Are any source IPs making HTTP requests to URLs with unusually high character entropy, suggesting directory brute-forcing?
  context: This question helps identify scanning for randomly generated or hard-to-guess file/directory names. While normal URLs have relatively low entropy (e.g., `/products/item123`), brute-force tools may use randomized strings (e.g., `/bak-2a8f-9b3d.zip`), resulting in high character entropy. By calculating the Shannon entropy of requested URIs and flagging IPs with scores in the top percentile, we can detect this type of fuzzing or brute-force behavior.
  answer_sources: Zeek http.log, Authoritative and recursive DNS servers, Internet gateway, Network Security Monitoring (NSM) sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each source_ip, CALCULATE Shannon entropy of all requested URIs in a 10-minute window; CALCULATE 98th percentile of entropy scores for all IPs; FLAG IPs with entropy > 98th_percentile.
- question: Can we use clustering to automatically identify IPs whose web traffic behavior is anomalous compared to the majority of normal users?
  context: This question proposes an unsupervised machine learning approach to find outliers without pre-defining what "bad" looks like. By plotting each source IP in a multi-dimensional space based on features like request count, unique URI ratio, and request timing, a clustering algorithm like DBSCAN can identify the large, dense "cluster" of normal users. IPs that fall outside this cluster are, by definition, outliers and warrant investigation. This can catch a wide variety of scanning behaviors that deviate from the norm.
  answer_sources: Zeek http.log, Zeek dns.log, Authoritative and recursive DNS servers, Internet gateway, Network Security Monitoring (NSM) sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: AGGREGATE web traffic features (request count, unique URI ratio, etc.) per source_ip; APPLY DBSCAN clustering algorithm to the aggregated data; ALERT on IPs classified as noise/outliers.
- question: Are external, non-CDN IPs making direct connections to our origin servers?
  context: This question aims to detect attempts to bypass CDN security protections (like WAFs) by communicating directly with the origin server. Adversaries search for the origin server's real IP to attack it. A connection from an external IP that isn't a known CDN provider directly to an origin server, confirmed by matching the public TLS certificate, is a high-confidence indicator of an attempt to circumvent defenses.
  answer_sources: Zeek conn.log, Zeek ssl.log, Origin web servers, Network perimeter firewalls, Network taps monitoring server-to-internet traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek ssl.log for connections to origin_server_ips; ALERT if source_ip is external AND source_ip NOT IN cdn_ip_list AND certificate_serial IN public_cert_list.
- question: Are our origin servers receiving traffic from unexpected Autonomous Systems (ASNs)?
  context: This question provides a broader, network-level view of the same problem. Traffic to origin servers should almost exclusively come from the ASNs of your CDN providers or corporate networks. By baselining the expected source ASNs, any connection from an ASN with a history of zero or very few connections is highly anomalous and suggests a potential origin discovery attempt. This is useful for detecting probes from unusual network locations.
  answer_sources: Zeek conn.log, Zeek ssl.log, Origin web servers, Network perimeter firewalls, Network taps monitoring server-to-internet traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: BASELINE source ASNs connecting to origin_server_ips over 30 days; MONITOR new connections in Zeek conn.log; ALERT on connections from any source ASN not in the established baseline.
- question: Is there an anomalous spike in the volume of direct, non-CDN traffic to our origin servers?
  context: This question uses time-series analysis to detect sudden changes in traffic patterns. While some small amount of non-CDN traffic might be normal (e.g., for administrative purposes), a large, unexpected spike is a strong indicator of a problem. A forecasting model can predict the expected traffic volume with a confidence interval. If the actual traffic exceeds this prediction, it signals a statistically significant anomaly, possibly indicating a large-scale scan or attack against the origin servers.
  answer_sources: Zeek conn.log, Zeek ssl.log, Origin web servers, Network perimeter firewalls, Network taps monitoring server-to-internet traffic
  range: last 90 days
  queries:
  - technology: pseudocode
    query: TRAIN time-series model on daily non-CDN traffic volume to origin servers; FORECAST expected volume for today with confidence bounds; ALERT if observed_volume > upper_confidence_bound.
- question: Are non-developer or non-CI/CD systems running commands to search for CDN secrets or configuration details?
  context: This question targets internal reconnaissance, where an attacker who has already compromised a workstation might be looking for credentials or configuration files to escalate their access. Searching for keywords like 'cdn_api_key' or 'origin_server' using tools like `grep` or `findstr` on an endpoint where this is not expected behavior (e.g., a finance workstation) is a strong signal of malicious insider activity or a compromised host.
  answer_sources: Zeek dns.log, Windows Event ID 4663, Windows Event ID 4688, Developer workstations, CI/CD pipeline servers, Internal DNS servers, Version control systems, Endpoint Detection and Response (EDR) agents
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MONITOR WinEvent:4688 where (ProcessName is 'grep.exe', 'findstr.exe', etc.) AND (CommandLine contains 'cdn_api_key', 'origin_server', etc.); ALERT if HostRole is not 'Developer' or 'CI/CD'.
- question: Are internal hosts making DNS queries that are statistically rare for their assigned role?
  context: This question helps to identify anomalous network behavior on internal hosts. A host's role (e.g., finance, HR, developer) dictates its normal network activity. If a host from the finance department, which never interacts with cloud infrastructure, suddenly makes a DNS query for a CDN provider's API endpoint (e.g., `api.cloudflare.com`), this is a statistical rarity for its role-based peer group and is highly suspicious. It could indicate an attacker using a compromised host for reconnaissance.
  answer_sources: Zeek dns.log, Windows Event ID 4663, Windows Event ID 4688, Developer workstations, CI/CD pipeline servers, Internal DNS servers, Version control systems, Endpoint Detection and Response (EDR) agents
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PROFILE historical DNS queries per host role; FOR each new DNS query, CALCULATE its frequency for the source host's role; ALERT if query frequency is in the bottom 1st percentile for that role.
- question: Is any user's file access or process execution behavior a significant outlier compared to their peer group?
  context: This question leverages User and Entity Behavior Analytics (UEBA) to spot compromised accounts or malicious insiders. By grouping users by role or department, a model can learn the normal "profile" of activity for that group (e.g., common processes run, types of files accessed). If a user suddenly starts accessing network configuration files or running reconnaissance tools that are not typical for their peers, the model will flag them as a behavioral outlier, prompting an investigation.
  answer_sources: Zeek dns.log, Windows Event ID 4663, Windows Event ID 4688, Developer workstations, CI/CD pipeline servers, Internal DNS servers, Version control systems, Endpoint Detection and Response (EDR) agents
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL baseline file access (WinEvent:4663) and process execution (WinEvent:4688) for each user peer group; CONTINUOUSLY monitor user activity; ALERT if a user's activity deviates > 2 standard deviations from their group's profile.