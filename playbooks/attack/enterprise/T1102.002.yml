name: T1102.002: Bidirectional Communication
id: 569e54d3-8b77-4f05-8968-3e42f9b87f53
description: This playbook helps investigate whether an adversary is using legitimate web services for command and control (C2) communication. It focuses on identifying malicious activity hidden within seemingly normal traffic by detecting connections to known-bad infrastructure, anomalous traffic patterns such as unusual URI structures or rare User-Agent strings, periodic 'heartbeat' beaconing, high-entropy payloads, and suspicious process-level behavior where non-standard or server processes initiate outbound connections to consumer-grade services like social media, cloud storage, or code repositories.
type: technique
related:
  - TA0011: Command And Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any network connections to legitimate web services resolving to or communicating with destinations matching known-malicious indicators from threat intelligence feeds?
    context: This question aims to find direct evidence of C2 communication by checking if DNS queries, HTTP host headers, URIs, or destination IP addresses match indicators of compromise (IoCs) from threat intelligence. A match provides a high-confidence signal that a legitimate service is being abused as a proxy for malicious infrastructure.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - Zeek conn.log
      - Egress network gateways
      - DNS resolvers
      - forward proxy servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dns.log, http.log, conn.log WHERE (query IN threat_intel_domains OR host IN threat_intel_domains OR uri IN threat_intel_urls OR id.resp_h IN threat_intel_ips) | ALERT
  - question: Are there any unusually rare URI paths being accessed within legitimate web service domains that could indicate a unique C2 endpoint?
    context: Adversaries often use unique, hard-to-guess URIs for their C2 endpoints within legitimate services to avoid discovery. By calculating the access frequency of all URIs for a given service across the enterprise, we can identify statistical outliers. Extremely rare URIs are highly suspicious as they are unlikely to be part of the service's normal public-facing functionality.
    answer_sources:
      - Zeek http.log
      - Egress network gateways
      - DNS resolvers
      - forward proxy servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http.log WHERE domain IN legitimate_web_services | STATS count(uri) as uri_count BY domain | CALCULATE percentile(uri_count, 99.9) | FILTER uri_count > percentile | INVESTIGATE
  - question: Are there any suspicious-looking DNS queries, based on machine learning analysis, that resolve to IPs associated with legitimate web services?
    context: This question uses a machine learning model to proactively identify potentially malicious domains that haven't yet appeared on threat intelligence lists. The model scores DNS queries based on features like entropy and structure. A high 'malicious' score for a domain that resolves to an IP of a known cloud or web service provider could indicate DGA (Domain Generation Algorithm) or other C2 techniques hiding behind a legitimate CDN or cloud provider.
    answer_sources:
      - Zeek dns.log
      - Egress network gateways
      - DNS resolvers
      - forward proxy servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dns.log | APPLY ML_model(features: entropy, length, char_ratio, subdomain_count) as score | WHERE score > 0.9 AND resolved_ip IN legitimate_service_ip_ranges | ALERT
  - question: Are any HTTP requests to legitimate web services exhibiting signatures (User-Agent, URI, POST body) that match known C2 frameworks like Cobalt Strike or Empire?
    context: This question focuses on detecting known adversary tools by their unique network signatures. C2 frameworks often have default or configurable patterns in their HTTP traffic. Matching these patterns with regex or YARA rules provides a strong indication that a specific tool is being used for C2 within the environment, even if the destination is a legitimate service.
    answer_sources:
      - Zeek http.log
      - Egress network gateways
      - forward proxy servers with TLS inspection capabilities
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http.log | SCAN user_agent, uri, post_body WITH YARA(ruleset: c2_frameworks) | ALERT on match
  - question: Are any endpoints using exceptionally rare or previously unseen User-Agent strings when connecting to a specific legitimate web service?
    context: While adversaries can spoof User-Agent strings, they may use non-standard or uncommon ones for their C2 tools. By baselining the User-Agents typically used to access a particular service (e.g., api.dropbox.com), we can spot anomalies. A host using a User-Agent that is statistically rare or has never been seen before for that service is suspicious and warrants investigation.
    answer_sources:
      - Zeek http.log
      - Egress network gateways
      - forward proxy servers with TLS inspection capabilities
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http.log | BASELINE user_agent per service over 30 days | COMPARE current traffic to baseline | ALERT on new or rare (<0.1% frequency) user_agents
  - question: Are there any HTTP requests with anomalous URI structures that deviate from the normal patterns learned by a machine learning model?
    context: This question uses an unsupervised machine learning model (an LSTM autoencoder) to learn the 'grammar' of legitimate URI paths for a service. C2 communications often use URI structures that differ from normal user activity. The model will flag URIs that it cannot reconstruct accurately (i.e., have a high reconstruction error), indicating they are structurally anomalous and potentially malicious.
    answer_sources:
      - Zeek http.log
      - Egress network gateways
      - forward proxy servers with TLS inspection capabilities
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http.log | APPLY ML_autoencoder(uri) as reconstruction_error | WHERE reconstruction_error > 3 * stdev(reconstruction_error) | ALERT
  - question: Are there any connections to legitimate web services that exhibit characteristics of 'low and slow' data exfiltration, such as a high ratio of uploaded to downloaded data?
    context: This question aims to detect data exfiltration disguised as normal web traffic. A connection where the amount of data sent from the internal host (`orig_bytes`) is significantly larger than the data received (`resp_bytes`), especially in many small packets, is a classic indicator of data being slowly uploaded or exfiltrated via a C2 channel.
    answer_sources:
      - Zeek conn.log
      - Egress network gateways
      - network tap/span ports with full packet capture or deep packet inspection
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH conn.log WHERE (orig_bytes > 5 * resp_bytes) AND (orig_bytes > 1024) AND (resp_pkts > orig_pkts) AND destination IN whitelisted_web_services | ALERT
  - question: Are any internal hosts exhibiting machine-like 'heartbeat' beaconing to a web service, or are they sending highly randomized/encrypted data payloads?
    context: C2 implants regularly 'beacon' out to their control server to check for new commands. This communication is often periodic, resulting in a very low standard deviation in the time between connections. This question looks for that machine-like timing. It also checks the entropy of the data being sent; a high entropy score suggests the data is encrypted or randomized, which is common for C2 payloads but not for typical web traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Egress network gateways
      - network tap/span ports with full packet capture or deep packet inspection
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH conn.log | CALCULATE time_delta_stdev between connections per host-destination pair | SEARCH http.log, files.log | CALCULATE entropy of POST bodies or files | ALERT WHERE time_delta_stdev < 5s OR entropy > 7.5
  - question: Are there any significant spikes in a host's outbound web traffic that cannot be explained by its normal daily or weekly patterns?
    context: This question uses time-series analysis to model a host's normal network behavior. By decomposing the traffic data into trend, seasonal (e.g., daily/weekly cycles), and residual components, we can isolate the 'unexplained' noise. A large, anomalous spike in the residual data indicates a burst of traffic that doesn't fit the host's established patterns and could represent a C2-driven event like data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Egress network gateways
      - network tap/span ports with full packet capture or deep packet inspection
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH conn.log | AGGREGATE sum(orig_bytes) by host, 10m_interval | APPLY STL_decomposition | ALERT on residual > 3 * stdev(residual)
  - question: Are any suspicious processes, such as script interpreters or executables in temporary user directories, making network connections to social media, cloud storage, or code repository sites?
    context: This question tries to identify malicious execution chains on an endpoint. Adversaries often use built-in Windows tools (`rundll32.exe`, `mshta.exe`) or place their malware in non-standard, user-writable locations (`%APPDATA%`, `%TEMP%`). When a process from one of these suspicious locations or a known living-off-the-land binary connects to a web service commonly used for C2, it is a strong indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint devices (workstations, servers)
      - Domain Controllers
      - Virtual Desktop Infrastructure (VDI) hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN (Sysmon_ID1 on ProcessGuid) with (Sysmon_ID3 on ProcessGuid) | WHERE (process_path CONTAINS ('rundll32.exe', 'mshta.exe', 'cscript.exe') OR process_path IN ('%APPDATA%', '%TEMP%', '%PUBLIC%')) AND (destination_domain IN ('Social Media', 'Cloud Storage', 'Code Repository')) | ALERT
  - question: Are there any processes initiating network connections that were spawned by an unusual or statistically rare parent process?
    context: Malware often creates anomalous parent-child process relationships, such as Microsoft Word (`winword.exe`) spawning PowerShell (`powershell.exe`). By baselining normal parent-child relationships across the environment, we can detect these rare occurrences. When such an anomalous process also makes a network connection, it significantly increases the likelihood of malicious activity.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Endpoint devices (workstations, servers)
      - Domain Controllers
      - Virtual Desktop Infrastructure (VDI) hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Sysmon_ID1 | BASELINE parent_process frequency per child_process | JOIN with Sysmon_ID3 | ALERT where parent_process_frequency < 1%
  - question: Can we identify isolated clusters of activity involving processes, files, and network connections that are disconnected from the main graph of benign system activity?
    context: This question models system activity as a large graph. Benign operations are typically highly interconnected. Malicious execution chains (e.g., an email attachment opens Word, which runs a macro to launch PowerShell, which connects to Pastebin) often form small, isolated 'islands' or clusters in this graph. Using graph analysis algorithms to find these outlier communities can effectively uncover the entire attack chain.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Endpoint devices (workstations, servers)
      - Domain Controllers
      - Virtual Desktop Infrastructure (VDI) hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BUILD graph from process, file, and network events | RUN clustering_algorithm | IDENTIFY and ALERT on small, disconnected clusters
  - question: Is a critical server (like a Domain Controller or database server) connecting to any destination that is not on its pre-approved network egress allow-list?
    context: Critical servers should have predictable and restricted network behavior. Their outbound connections should be limited to a small, well-defined set of destinations required for patching, administration, or business function. Any connection to a destination not on this strict allow-list is a high-fidelity indicator of a potential compromise or misconfiguration and must be investigated immediately.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Server subnets
      - critical asset network segments
      - data center core network taps
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_logs from critical_server_group | WHERE destination NOT IN server_allow_list | CRITICAL_ALERT
  - question: Has a server suddenly started communicating with a significant number of new, previously unseen domains compared to its 30-day baseline?
    context: This question provides a dynamic way to detect changes in a server's network behavior without a rigid allow-list. The Jaccard index measures the similarity between the domains contacted today versus the domains contacted over the past month. A sudden drop in this score indicates the server is talking to many new places, which could be a sign that an adversary has compromised it and is using it for C2 or further network discovery.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Server subnets
      - critical asset network segments
      - data center core network taps
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE unique domains per server over 30 days | CALCULATE Jaccard_index(daily_domains, baseline_domains) | ALERT if Jaccard_index < 0.8
  - question: Are any network connections from a server being flagged as anomalous outliers by a machine learning model trained on its normal behavior?
    context: This question uses an anomaly detection model (One-Class SVM) to create a sophisticated, multi-dimensional profile of a server's normal network traffic. The model learns what 'good' looks like based on features like port, protocol, and data volume. Any new connection that falls outside this learned boundary is classified as an 'outlier' and flagged for investigation, providing a powerful way to detect novel threats.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Server subnets
      - critical asset network segments
      - data center core network taps
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN OC-SVM model on baseline server traffic | APPLY model to new connections | ALERT on connections classified as 'outlier'