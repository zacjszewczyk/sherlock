name: T1069: Permission Groups Discovery
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: >
  Has the adversary attempted to discover permission groups or settings within the network?
  This playbook focuses on identifying adversary actions aimed at enumerating permission groups and access control settings across an environment. This includes tracking the execution of known discovery tools (e.g., BloodHound, AdFind), the use of built-in utilities (e.g., 'net group') with suspicious parameters, enumeration within containerized environments (e.g., 'kubectl auth can-i'), and the correlation of these discovery events with subsequent lateral movement or credential access techniques. The goal is to detect reconnaissance that precedes privilege escalation or lateral movement.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Have any processes been created that match a watchlist of known discovery tools by name, hash, or certificate?"
    context: >
      Adversaries often use well-known reconnaissance tools like BloodHound, SharpHound, or AdFind.exe to map out Active Directory permissions. This question aims to find direct evidence of these tools being run by querying process creation logs for matches against a curated watchlist of tool filenames, their file hashes, and associated code-signing certificates. A match is a strong indicator of active discovery.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Endpoint Detection and Response (EDR) Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs
          WHERE process_name IN (watchlist_tool_names)
          OR process_hash IN (watchlist_tool_hashes)
          OR signer_certificate IN (watchlist_tool_certs)
  - question: "Have any common system utilities (e.g., net.exe, whoami.exe) been executed from an unusually rare file path?"
    context: >
      To evade detections based on process names, adversaries may copy legitimate system utilities to non-standard locations (e.g., C:\PerfLogs\, %APPDATA%) before execution. This question uses a statistical approach to find such masquerading. By baselining normal execution paths for common utilities, it flags any execution from a statistically improbable location (e.g., below the 1st percentile of frequency), which could indicate malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Endpoint Detection and Response (EDR) Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE baseline of execution paths for common_utilities over last 30 days
          CALCULATE frequency for each path
          SEARCH process_creation_logs in last 90 days
          WHERE process_name IN (common_utilities)
          AND path_frequency < 1st_percentile_of_baseline
  - question: "Can a machine learning model identify suspicious discovery activity by analyzing process execution features?"
    context: >
      This question proposes using a machine learning classifier (e.g., random forest) to detect subtle or complex discovery behaviors that are difficult to capture with simple rules. The model is trained on historical data and scores new process creations based on a combination of features like the parent process (e.g., cmd.exe vs. explorer.exe), path rarity, command-line entropy, and code-signing status. A high score from the model indicates a high probability of malicious discovery.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Endpoint Detection and Response (EDR) Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new process_creation_event:
            EXTRACT features (parent_process, path_rarity, cmd_args, entropy, etc.)
            APPLY pre-trained_random_forest_model
            IF score > threshold:
              ALERT as potential_discovery_activity
  - question: "Are there any command-line executions or PowerShell scripts containing strings used for enumerating Active Directory groups or permissions?"
    context: >
      Adversaries frequently use built-in command-line tools and PowerShell cmdlets to enumerate Active Directory groups, users, and permissions. This question involves searching process command-line arguments and PowerShell script block logs for specific strings and commands (e.g., 'net group /domain', 'Get-ADGroupMember', 'dsquery') that are indicative of this enumeration activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - PowerShell Gateways
      - SIEM/Log Aggregation Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH command_line_logs and powershell_script_block_logs
          WHERE content MATCHES REGEX for ('net group', 'Get-ADGroupMember', 'Get-Acl', 'whoami /groups', 'dsquery')
  - question: "Has any user executed an anomalously high number or variety of discovery commands compared to their own baseline?"
    context: >
      While a single discovery command may be benign, a rapid succession of many different discovery commands by a single user is suspicious. This question aims to detect such behavior by first establishing a baseline of normal discovery command usage for each user. It then alerts if a user's activity in a given time frame (e.g., an hour) shows an unusually high count or variety (entropy) of discovery commands compared to their historical average.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - PowerShell Gateways
      - SIEM/Log Aggregation Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user:
            DEFINE baseline of discovery command count and variety over last 30 days
            CALCULATE hourly command count and entropy
            ALERT if hourly_count > (daily_average + 3 * std_dev)
            OR if hourly_entropy > 95th_percentile_of_baseline
  - question: "Is there an enterprise-wide spike in discovery command usage that deviates from normal administrative patterns?"
    context: >
      This question takes a macro view to identify large-scale or coordinated discovery activity across the enterprise. It uses a time-series anomaly detection model (e.g., ARIMA) trained on historical data of enterprise-wide discovery command counts. The model forecasts the expected volume of activity for any given time interval. An alert is generated if the observed volume significantly exceeds the forecast, indicating a potential widespread attack or tool execution.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - PowerShell Gateways
      - SIEM/Log Aggregation Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE discovery command counts per 15-minute interval enterprise-wide
          APPLY trained time-series anomaly detection model
          ALERT if observed_count significantly deviates from forecasted_count
  - question: "Has anyone executed container orchestration commands to enumerate permissions within a containerized environment?"
    context: >
      As environments increasingly use containers, adversaries are adapting to discover permissions within them. This question looks for the use of tools like 'kubectl' and 'docker' with specific arguments (e.g., 'auth can-i', 'get rolebindings', 'docker inspect') that enumerate roles, permissions, and configurations in Kubernetes or Docker environments. These logs can be found in process creation events or specific container audit logs.
    answer_sources:
      - Windows Event ID 4688
      - Kubernetes API Server Audit Logs
      - Container Runtime Logs
      - Container Host Servers (Windows)
      - Kubernetes Master Nodes
      - CI/CD Pipeline Servers
      - Cloud Provider Audit Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs and kubernetes_audit_logs
          WHERE command MATCHES ('kubectl', 'docker')
          AND arguments MATCHES ('auth can-i', 'get rolebindings', 'describe role', 'inspect')
  - question: "Has a user or service account queried an unusually large number of distinct container namespaces or resources?"
    context: >
      A compromised user or service account may be used to perform broad reconnaissance across a container environment. This question establishes a baseline for how many distinct namespaces or containers an account typically interacts with. An alert is triggered if an account suddenly queries a number of resources that is a statistical outlier (e.g., more than 3 standard deviations from its norm), or if the queries originate from an unauthorized IP address.
    answer_sources:
      - Windows Event ID 4688
      - Kubernetes API Server Audit Logs
      - Container Runtime Logs
      - Container Host Servers (Windows)
      - Kubernetes Master Nodes
      - CI/CD Pipeline Servers
      - Cloud Provider Audit Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user/service_account:
            DEFINE baseline of distinct namespaces/containers queried per hour
            ALERT if hourly_queried_count > (baseline_average + 3 * std_dev)
            OR if source_ip NOT IN (authorized_admin_subnets)
  - question: "Can anomalous user sessions in Kubernetes be identified by clustering API audit log activity?"
    context: >
      This question applies unsupervised machine learning to detect suspicious activity in Kubernetes. By ingesting API audit logs, it uses a clustering algorithm (e.g., K-Means) to group user sessions based on behavioral features like source IP, API verbs used, and number of resources queried. Small, isolated clusters often represent behavior that deviates from the norm, such as an attacker's exploratory actions, and should be prioritized for investigation.
    answer_sources:
      - Windows Event ID 4688
      - Kubernetes API Server Audit Logs
      - Container Runtime Logs
      - Container Host Servers (Windows)
      - Kubernetes Master Nodes
      - CI/CD Pipeline Servers
      - Cloud Provider Audit Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INGEST Kubernetes API audit logs
          GROUP events into user sessions
          EXTRACT features (source_ip, user_agent, verb_counts, resource_counts, duration)
          APPLY K-Means clustering to sessions
          REVIEW small, isolated clusters for anomalous behavior
  - question: "Has a non-administrative user account attempted to enumerate the membership of a privileged group?"
    context: >
      Enumerating the membership of highly privileged groups like 'Domain Admins' or 'Enterprise Admins' is a common step for an adversary seeking to escalate privileges. This question focuses on creating a high-fidelity alert by triggering when a user who is NOT in a pre-defined list of administrators generates an event for enumerating a privileged group's members (e.g., Windows Event ID 4799 or 4798).
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - User and Entity Behavior Analytics (UEBA) Platform
      - SIEM Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH group_enumeration_logs (Event ID 4798, 4799)
          WHERE subject_account NOT IN (authorized_admin_list)
          AND target_group IN (privileged_group_watchlist)
  - question: "Has any user performed group enumeration at a time that is anomalous for their peer group?"
    context: >
      Adversaries may operate outside of normal business hours to avoid detection. This question uses peer group analysis to identify this behavior. It establishes a baseline of normal working hours for different roles (e.g., 'Help Desk', 'Developers') based on when they typically perform enumeration tasks. An alert is generated if a user performs enumeration at a time of day or day of the week that is highly unusual for their peers.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - User and Entity Behavior Analytics (UEBA) Platform
      - SIEM Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each peer_group:
            DEFINE baseline of enumeration activity by hour_of_day and day_of_week
          SEARCH for enumeration events
          WHERE user_peer_group is known
          AND event_time falls in a near-zero frequency bucket for that peer_group
  - question: "Can a machine learning model distinguish between benign and malicious group enumeration events?"
    context: >
      To reduce false positives from legitimate administrative activity, this question proposes using a machine learning model (e.g., One-Class SVM) that is trained exclusively on benign enumeration events. The model learns the multi-dimensional boundary of 'normal' behavior based on features like the user, source host, target group, and time of day. Any new event that falls outside this learned boundary is flagged as a potential anomaly requiring investigation.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - User and Entity Behavior Analytics (UEBA) Platform
      - SIEM Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN One-Class SVM model on benign enumeration events (Event IDs 4798, 4799)
          FOR each new enumeration event:
            EXTRACT features (user, host, group, time_of_day)
            APPLY model to event
            IF model classifies event as outlier:
              ALERT as anomalous enumeration
  - question: "Has a discovery event been followed by a credential access or lateral movement event from the same user or host within a short time window?"
    context: >
      Discovery is rarely the end goal; it is reconnaissance for a subsequent action. This question aims to add critical context by correlating a T1069 discovery alert with follow-on malicious activity. It creates a rule that if a discovery alert is followed within 60 minutes by a credential access (e.g., LSASS read) or lateral movement (e.g., remote RDP logon) alert from the same entity, the initial discovery alert is escalated to a high-severity incident.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Entire Enterprise Network (via SIEM correlation)
      - Key Lateral Movement Paths (e.g., workstation-to-server, server-to-DC)
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRIGGER on T1069_alert for a user/host
          SEARCH for Credential_Access_alert OR Lateral_Movement_alert
          WHERE entity is same user/host
          AND timestamp is within 60 minutes of T1069_alert
          IF found, ESCALATE T1069_alert to high-severity incident
  - question: "Can a user's risk score be dynamically increased based on observing a sequence of suspicious ATT&CK techniques?"
    context: >
      This question proposes a more dynamic approach to risk scoring than simple rule correlation. It uses a transition matrix based on historical incident data to understand common attack sequences. When a user triggers a T1069 discovery alert, their risk score increases. If they then perform another action, the score increases again by an amount weighted by how rare that particular sequence of techniques is. An alert is fired when the user's cumulative score crosses a threshold.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Entire Enterprise Network (via SIEM correlation)
      - Key Lateral Movement Paths (e.g., workstation-to-server, server-to-DC)
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE ATT&CK technique transition matrix from historical data
          ON T1069_alert for user:
            INCREMENT user_risk_score
          ON subsequent_technique_alert for same user:
            INCREMENT user_risk_score by weight(T1069 -> subsequent_technique)
          IF user_risk_score > threshold:
            ALERT
  - question: "Can a graph-based machine learning model identify entire malicious attack paths involving discovery?"
    context: >
      This question represents a sophisticated approach to attack detection by modeling entity behavior as a graph. Users and hosts are nodes, and observed ATT&CK techniques are timed, directed edges between them. When a T1069 event occurs, a new edge is added. A Graph Neural Network (GNN) trained on known attack paths can then analyze subgraphs originating from that discovery event to classify the entire sequence of actions as benign or malicious, providing a holistic view of the attack.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Entire Enterprise Network (via SIEM correlation)
      - Key Lateral Movement Paths (e.g., workstation-to-server, server-to-DC)
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL entity behavior as a graph (nodes: users/hosts, edges: ATT&CK techniques)
          ON T1069_event:
            CREATE new edge in the graph
          USE path-finding algorithm to identify event chains (subgraphs)
          APPLY trained Graph Neural Network to classify subgraph as benign/malicious