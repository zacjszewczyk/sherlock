name: T1069: Permission Groups Discovery
id: 9a8b7c6d-5e4f-4a3b-2c1d-0e9f8a7b6c5d
description: 'This playbook addresses the information requirement: Has the adversary attempted to discover permission groups or settings within the network? It provides investigative methods to detect adversarial discovery of permission groups by identifying the execution of known discovery tools (e.g., BloodHound, SharpHound), the use of common system utilities from non-standard paths, and the presence of specific command-line strings or PowerShell scripts used for enumeration (e.g., ''net group /domain'', ''Get-ADGroupMember''). The playbook also covers discovery within containerized environments by monitoring orchestration commands (e.g., ''kubectl auth can-i''). Further, it details how to detect when non-administrative accounts attempt to enumerate privileged groups and how to correlate initial discovery events with subsequent credential access or lateral movement activities to identify a broader attack chain.'
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any known discovery tools been executed based on their filename, file hash, or code-signing certificate?
    context: This question aims to identify the direct execution of well-known reconnaissance tools like BloodHound/SharpHound or AdFind. By maintaining a watchlist of specific indicators (filenames, hashes, certificates) and querying process creation logs, analysts can detect overt instances of discovery activity. A match provides a strong signal that an adversary is mapping out the Active Directory environment.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Endpoint Detection and Response (EDR) Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name IN (watchlist) OR file_hash IN (watchlist) OR signing_certificate IN (watchlist)
  - question: Have any common system utilities (e.g., net.exe, whoami.exe) been executed from an unusual or rare file path?
    context: This question focuses on detecting "living off the land" techniques, where adversaries use legitimate system tools for malicious purposes. By establishing a baseline of normal execution paths for utilities like net.exe, analysts can spot anomalies. An execution from a statistically rare location (e.g., a user's downloads folder instead of System32) is highly suspicious and can indicate that an adversary has placed a copy of the tool to evade simple detection.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Endpoint Detection and Response (EDR) Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE frequency of execution_path for common_utilities over 30_days. SEARCH process_creation_logs WHERE process_name IN (common_utilities) AND execution_path_frequency < 1st_percentile.
  - question: Can we identify potentially malicious discovery activity by scoring new process creations with a machine learning model?
    context: This question leverages a machine learning model to identify more subtle or novel discovery techniques. By training a classifier on various features of a process execution event (parent process, path rarity, command-line characteristics), the model can learn the complex patterns of both benign and malicious activity. This allows for the detection of suspicious behavior that may not match any known signatures or statistical outliers, providing a more robust and adaptive detection capability.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - User Workstations
      - Endpoint Detection and Response (EDR) Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT new_process_event_features (parent_process, path_rarity, arg_count, etc.) INTO trained_random_forest_model. OUTPUT classification_score. ALERT if score > threshold.
  - question: Are there command-line executions or PowerShell scripts containing strings associated with Active Directory enumeration?
    context: This question seeks to find direct evidence of discovery activity by searching for specific command-line patterns and PowerShell cmdlets. Adversaries frequently use built-in tools and scripts to query for groups, users, and permissions. Monitoring for strings like 'net group', 'Get-ADGroupMember', or 'dsquery' in process and script logs is a highly effective symbolic detection method for this behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - PowerShell Gateways
      - SIEM/Log Aggregation Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH command_line_logs OR powershell_script_logs FOR REGEX ('net group', 'Get-ADGroupMember', 'whoami /groups', etc.)
  - question: Has any user exhibited an unusual pattern or volume of discovery commands compared to their own baseline?
    context: This question aims to detect anomalous user behavior by focusing on the frequency and variety of discovery commands. An adversary, unlike a typical user or administrator, may run a large number of different enumeration commands in a short period. By baselining each user's normal activity, we can flag sudden spikes in command count or variety (entropy), which could indicate a compromised account being used for reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - PowerShell Gateways
      - SIEM/Log Aggregation Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each_user, BASELINE daily_command_count and command_set_entropy. ALERT if hourly_count > (avg + 3*stdev) OR hourly_entropy > 95th_percentile.
  - question: Was there a network-wide spike in discovery command volume that deviates from normal administrative patterns?
    context: This question uses a macro-level, time-series view to detect large-scale or automated discovery activity that might be missed when looking at individual users. By modeling the normal rhythm of discovery commands across the entire enterprise (e.g., more during business hours, less on weekends), an anomaly detection model can flag significant deviations. A sudden, unexpected surge in these commands could signal a widespread, automated reconnaissance campaign.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Sysmon Event ID 1
      - Domain Controllers
      - Member Servers
      - PowerShell Gateways
      - SIEM/Log Aggregation Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: AGGREGATE discovery_command_count per 15min. INPUT time_series into ARIMA_model. ALERT if observed_count significantly exceeds forecasted_count.
  - question: Have any container orchestration commands been used to enumerate permissions or access controls?
    context: This question focuses on extending discovery detection into containerized environments like Kubernetes and Docker. Adversaries who gain a foothold in such an environment will use tools like 'kubectl' or 'docker' to understand their permissions. Monitoring for specific sub-commands related to authorization and access control (e.g., 'auth can-i', 'describe role') is critical for securing these modern platforms.
    answer_sources:
      - Windows Event ID 4688
      - Kubernetes API Server Audit Logs
      - Container Runtime Logs
      - Container Host Servers (Windows)
      - Kubernetes Master Nodes
      - CI/CD Pipeline Servers
      - Cloud Provider Audit Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs OR k8s_audit_logs FOR process_name IN ('kubectl', 'docker') AND arguments IN ('auth can-i', 'get rolebindings', 'docker inspect').
  - question: Is any user or service account querying an unusually high number of container namespaces or resources?
    context: This question provides a statistical method to detect anomalous enumeration in container environments. A legitimate user or service account typically interacts with a predictable set of namespaces or containers. By baselining this activity, we can detect when an account suddenly starts querying a much larger number of resources than usual, which may indicate an adversary exploring the environment beyond their intended scope.
    answer_sources:
      - Windows Event ID 4688
      - Kubernetes API Server Audit Logs
      - Container Runtime Logs
      - Container Host Servers (Windows)
      - Kubernetes Master Nodes
      - CI/CD Pipeline Servers
      - Cloud Provider Audit Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each_account, BASELINE hourly_distinct_namespace_query_count. ALERT if count > (avg + 3*stdev) OR source_ip NOT IN admin_subnets.
  - question: Can we identify anomalous user sessions in Kubernetes by clustering API audit log activity?
    context: This question applies unsupervised machine learning to find suspicious activity in Kubernetes without pre-existing labels. By grouping user sessions based on behavioral features (e.g., IP, verbs used, resources queried), we can identify outliers. Small, isolated clusters often represent unique, non-standard behavior that deviates from the common patterns of administrators or automated systems, making them prime candidates for investigation as potential adversarial exploration.
    answer_sources:
      - Windows Event ID 4688
      - Kubernetes API Server Audit Logs
      - Container Runtime Logs
      - Container Host Servers (Windows)
      - Kubernetes Master Nodes
      - CI/CD Pipeline Servers
      - Cloud Provider Audit Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER k8s_api_sessions using K-Means on features (source_ip, verb_counts, etc.). REVIEW small or isolated clusters for anomalous behavior.
  - question: Has a non-administrative user attempted to enumerate the membership of a privileged group?
    context: This question provides a high-fidelity detection by correlating user identity with target group privilege. The enumeration of sensitive groups like 'Domain Admins' or 'Enterprise Admins' is typically only performed by a small, known set of administrative accounts. An alert triggering on this activity from any other account is a strong indicator of privilege escalation reconnaissance.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - User and Entity Behavior Analytics (UEBA) Platform
      - SIEM Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH group_enumeration_logs (EventID 4798, 4799) WHERE subject_account NOT IN (admin_list) AND target_group IN (privileged_group_list).
  - question: Has any user performed group enumeration at a time that is unusual for their peer group?
    context: This question uses peer group analysis to contextualize the timing of an action. While group enumeration might be normal for a help desk user during business hours, the same action performed at 3 AM on a Sunday is anomalous. By baselining the activity patterns for different roles (e.g., 'Developers', 'Help Desk'), we can identify when a user's actions fall outside the normal operational tempo of their peers, suggesting their account may be compromised.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - User and Entity Behavior Analytics (UEBA) Platform
      - SIEM Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each_peer_group, BASELINE enumeration_activity by hour_of_day/day_of_week. ALERT if user_activity occurs during a near-zero frequency time bucket for their peer group.
  - question: Can we use a machine learning model to identify group enumeration events that fall outside the boundary of normal behavior?
    context: This question proposes using a One-Class SVM model to create a sophisticated, multi-dimensional profile of 'normal' group enumeration. Instead of relying on a single factor like time or user role, the model learns the complex interplay between user, source, target, and time. Any new event that falls outside this learned boundary of normalcy is flagged as a potential anomaly, allowing for the detection of novel or subtle attack patterns.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Domain Controllers
      - User and Entity Behavior Analytics (UEBA) Platform
      - SIEM Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN One-Class SVM on benign_enumeration_events. PREDICT if new_event is 'inlier' or 'outlier'. ALERT on 'outlier'.
  - question: Has a user or host that performed permission discovery subsequently engaged in credential access or lateral movement?
    context: This question is crucial for connecting the dots of an attack chain. Permission discovery is rarely the end goal; it is a precursor to other actions. By creating a correlation rule that looks for discovery activity followed closely by credential access (e.g., LSASS dumping) or lateral movement (e.g., remote login) from the same entity, analysts can automatically escalate a low-level discovery alert into a high-severity incident, indicating an active intrusion.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Entire Enterprise Network (via SIEM correlation)
      - Key Lateral Movement Paths (e.g., workstation-to-server, server-to-DC)
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: IF T1069_alert FOR user/host, THEN monitor for 60min. IF T1003_alert OR T1021_alert FROM same user/host, ESCALATE T1069_alert to high_severity_incident.
  - question: Can we identify high-risk users by scoring them based on the sequence of their observed ATT&CK techniques?
    context: This question introduces a risk-scoring model based on attack path analysis. Not all technique sequences are equally likely or dangerous. By maintaining a statistical model of observed technique transitions from past incidents, we can assign a risk score to a user's actions. A T1069 discovery event followed by a commonly associated next step would increase a user's risk score more significantly, allowing for dynamic threat prioritization.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Entire Enterprise Network (via SIEM correlation)
      - Key Lateral Movement Paths (e.g., workstation-to-server, server-to-DC)
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON T1069_alert, increment user_risk_score. ON subsequent_technique_alert, increment score by weighted_value from technique_transition_matrix. ALERT if score > threshold.
  - question: Can we classify sequences of user and host activities as malicious attack paths using a graph-based machine learning model?
    context: This question represents a state-of-the-art approach to threat detection by modeling entity behavior as a graph. Users and hosts are nodes, and their actions (ATT&CK techniques) are timed, directed edges. This structure allows a Graph Neural Network (GNN) to learn the complex relational and temporal patterns of a full attack path. This moves beyond simple event correlation to classifying the entire subgraph of activity, enabling the detection of long, slow, and sophisticated attack chains that would otherwise be missed.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Windows Event ID 4799
      - Windows Event ID 4624
      - Windows Event ID 4648
      - Zeek conn.log
      - Zeek dce_rpc.log
      - Entire Enterprise Network (via SIEM correlation)
      - Key Lateral Movement Paths (e.g., workstation-to-server, server-to-DC)
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL behavior as graph (nodes=entities, edges=techniques). USE GNN to classify subgraphs (paths) originating from T1069 event as benign or malicious.