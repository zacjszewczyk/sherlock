name: T1498: Network Denial of Service
id: 5e9e0f3a-7a8c-4f1b-8c2d-9a6b7c0d1e2f
description: This playbook helps determine if an adversary is attempting to disrupt network availability through a Network Denial of Service (DoS) attack. It provides investigative questions to detect various DoS techniques, including volumetric floods from known malicious sources, application-layer attacks targeting web services, reflection and amplification attacks using UDP services, and general anomalous shifts in traffic volume or characteristics. The goal is to identify connections from threat-listed IPs, slow-and-low attacks, DNS/NTP amplification, sustained traffic spikes beyond baselines, and unusual changes in traffic entropy or protocol composition.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any inbound network connections originating from IP addresses known to be associated with DDoS, botnets, or stresser services?
  context: This question aims to proactively identify connections from sources already flagged by the security community as malicious. Matching inbound traffic against a high-confidence threat intelligence feed is a primary, high-fidelity method for detecting the initial stages of a DoS attack or identifying participation in a botnet.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Internet Gateway/Firewall
  - Edge Routers
  - Public-facing server segments
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek conn.log OR Windows Event ID 5156)
      | join source_ip with threat_intel_feed on ip_address where category in ('DDoS', 'botnet', 'stresser')
      | alert on match
- question: Which known malicious source IPs are generating the most traffic or connections to our network in the last hour?
  context: After identifying connections from known malicious IPs, it's crucial to prioritize the most active threats. This question helps security analysts focus their response efforts by quantifying the impact of each malicious source, allowing them to block the most aggressive attackers first.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Internet Gateway/Firewall
  - Edge Routers
  - Public-facing server segments
  range: Last 1 hour
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek conn.log OR Windows Event ID 5156) in last 1 hour where source_ip in (known_malicious_ips)
      | stats count, sum(bytes) by source_ip
      | sort by count desc
      | limit 10
- question: Can we use machine learning to assign a real-time risk score to inbound connections based on their characteristics and known DoS indicators?
  context: This question moves beyond simple signature matching to a more sophisticated, predictive approach. By training a model on historical data, we can identify subtle patterns and combinations of features (like connection duration, protocol, and source reputation) that indicate a likely DoS attack, even from previously unseen sources.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 5156
  - Internet Gateway/Firewall
  - Edge Routers
  - Public-facing server segments
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      stream new connections from (Zeek conn.log)
      | extract_features(duration, protocol, service, byte_counts)
      | lookup source_ip in threat_intel_feed
      | apply_model(DoS_Classifier)
      | alert where risk_score > threshold
- question: Are any inbound HTTP/S sessions using User-Agent strings associated with known DoS attack tools?
  context: Application-layer DoS attacks often use specific tools that leave identifiable fingerprints, such as a unique User-Agent string. This question focuses on detecting these explicit indicators to quickly identify common, tool-based attacks like Slowloris, LOIC, RUDY, or Hulk.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Public-facing Web Servers
  - Application Load Balancers
  - API Gateways
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek http.log)
      | where user_agent in (known_dos_tool_list)
      | alert on match
- question: Are there any unusually long-lasting web connections with abnormally low data transfer rates, indicative of a slow-and-low attack?
  context: "Slow-and-low" attacks aim to exhaust server resources by keeping connections open for extended periods while sending minimal data. This question helps detect such attacks, which might not trigger volume-based alerts, by identifying connections that deviate from normal behavior in terms of duration and throughput.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Public-facing Web Servers
  - Application Load Balancers
  - API Gateways
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek conn.log) where dest_port in (80, 443)
      | calculate transfer_rate = (orig_bytes + resp_bytes) / duration
      | where duration > 300 AND transfer_rate < baseline_5th_percentile
      | alert on match
- question: Can we identify anomalous clusters or outliers in web traffic behavior that may represent a novel application-layer DoS attack?
  context: Sophisticated or new DoS attacks may not match known signatures. This question uses unsupervised machine learning to model what "normal" web traffic looks like based on multiple features. By flagging connections that don't fit into any normal cluster, analysts can uncover previously unknown or evolving attack patterns.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Public-facing Web Servers
  - Application Load Balancers
  - API Gateways
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      stream web traffic from (Zeek conn.log, Zeek http.log)
      | extract_features(duration, total_bytes, request_body_len, response_body_len)
      | apply_model(DBSCAN_Clustering)
      | alert where cluster_label == 'outlier'
- question: Are we receiving DNS queries from external sources that are commonly abused for amplification attacks, such as 'ANY' queries or requests for large record types?
  context: DNS amplification is a common DoS technique where an attacker sends a small query that elicits a very large response. This question targets the specific query types (like 'ANY', 'DNSKEY', or 'RRSIG') that are frequently exploited for this purpose, allowing for early detection of potential reflection attacks using your infrastructure.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ntp.log
  - Public DNS Servers
  - NTP Servers
  - Misconfigured Memcached servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek dns.log)
      | where source_ip is external AND query_type in ('ANY', 'DNSKEY', 'RRSIG')
      | alert on match
- question: Are any UDP services (like DNS, NTP, etc.) exhibiting an abnormally high amplification factor, suggesting they are being used in a reflection/amplification attack?
  context: A core indicator of a reflection/amplification attack is a disproportionately large response compared to the initial request. This question focuses on quantifying this "amplification factor" (response bytes / request bytes) for abusable UDP services and alerting when it exceeds a statistically determined baseline.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ntp.log
  - Public DNS Servers
  - NTP Servers
  - Misconfigured Memcached servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek conn.log) where protocol == 'udp' AND dest_port in (53, 123, 389, 11211)
      | calculate amplification_factor = resp_bytes / orig_bytes
      | where amplification_factor > baseline_99th_percentile
      | alert on match
- question: Can we use anomaly detection models to identify UDP sessions that are statistical outliers and may represent a reflection/amplification attack?
  context: This question employs machine learning to build a more comprehensive profile of normal UDP traffic. By analyzing multiple features simultaneously (port, amplification factor, packet count, duration), an Isolation Forest or similar model can detect anomalous sessions that might be missed by single-threshold rules, providing a more robust defense against varied amplification attacks.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ntp.log
  - Public DNS Servers
  - NTP Servers
  - Misconfigured Memcached servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      stream UDP traffic from (Zeek conn.log)
      | extract_features(dest_port, amplification_factor, packet_count, duration)
      | apply_model(Isolation_Forest_Anomaly)
      | alert where anomaly_score > threshold
- question: Has inbound traffic volume or connection rate on critical assets surpassed pre-defined 'emergency' thresholds?
  context: This question provides a simple but effective safety net. By setting absolute, high-watermark thresholds on critical infrastructure, we can ensure that a massive, unambiguous flood of traffic triggers an immediate, high-priority alert, acting as a "circuit breaker" for the most severe volumetric attacks.
  answer_sources:
  - Zeek conn.log
  - Zeek dstats.log
  - Windows Event ID 5157
  - Network Choke Points (e.g., firewalls, core switches)
  - Critical Application Servers
  - Entire Subnets
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek dstats.log OR Windows Event ID 5157)
      | where (connections_per_sec > 10000) OR (inbound_bps > 1000000000) OR (wfp_blocks_per_min > 5000)
      | alert on match
- question: Is the current inbound traffic volume or new connection rate significantly higher than the typical baseline for this specific time of day and day of the week?
  context: Network traffic naturally fluctuates. This question aims to distinguish a genuine DoS attack from a normal peak in traffic. By creating dynamic, seasonal baselines (e.g., what's normal for a Monday at 10 AM), we can detect statistically significant deviations that are more likely to be malicious.
  answer_sources:
  - Zeek conn.log
  - Zeek dstats.log
  - Windows Event ID 5157
  - Network Choke Points (e.g., firewalls, core switches)
  - Critical Application Servers
  - Entire Subnets
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek dstats.log) over 5-minute intervals
      | compare current_traffic_volume to historical_baseline(hour_of_day, day_of_week)
      | alert where current_traffic_volume > (mean + 3 * stdev)
- question: Is the observed traffic volume significantly and persistently exceeding what our time-series forecasting model predicted?
  context: This is an advanced form of baselining that uses models like ARIMA or Prophet to predict future traffic. By comparing real-time traffic to the forecast, we can detect anomalies with greater precision. An alert is triggered when traffic not only deviates from the norm but does so consistently, reducing false positives from brief, random spikes.
  answer_sources:
  - Zeek conn.log
  - Zeek dstats.log
  - Windows Event ID 5157
  - Network Choke Points (e.g., firewalls, core switches)
  - Critical Application Servers
  - Entire Subnets
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      stream traffic data from (Zeek dstats.log)
      | forecast(model=Prophet, metric=inbound_bps, interval=5m)
      | alert where actual_value > forecast_upper_bound
- question: Are we observing network packets with unusual or illegitimate TCP flag combinations that violate standard protocol behavior?
  context: Certain DoS techniques involve sending malformed TCP packets with flag combinations that should never occur in legitimate communication (e.g., SYN and FIN set in the same packet). This question targets these protocol-level anomalies, which are strong indicators of scanning or a specialized DoS attack.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway/Firewall
  - Load Balancers
  - Any network segment receiving external traffic
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek conn.log)
      | where tcp_flags_history contains ('ShAD') OR is_empty(tcp_flags)
      | alert on match
- question: Has the diversity (entropy) of source IP addresses in inbound traffic significantly changed compared to its normal baseline?
  context: A distributed denial-of-service (DDoS) attack from a large botnet will have very high source IP entropy (many different sources). Conversely, a simple DoS from a single or small number of sources will have very low entropy. This question monitors for significant shifts in this diversity, which can indicate either type of attack when compared to a learned baseline.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway/Firewall
  - Load Balancers
  - Any network segment receiving external traffic
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      search (Zeek conn.log) over 5-minute windows
      | calculate shannon_entropy(source_ip) as current_entropy
      | compare current_entropy to historical_baseline(hour_of_day, day_of_week)
      | alert where abs(current_entropy - mean) > (3 * stdev)
- question: Is the overall 'state' of our network traffic, defined by a combination of multiple metrics, currently in an anomalous condition?
  context: This question uses advanced analytics to create a holistic view of the network's health. Instead of looking at one metric at a time, PCA and Mahalanobis distance analyze the relationships between many metrics at once. An alert signifies that the entire traffic profile has shifted into a state that is statistically different from anything seen during the normal training period, indicating a potentially complex or novel attack.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway/Firewall
  - Load Balancers
  - Any network segment receiving external traffic
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |-
      stream traffic data from (Zeek conn.log) over 5-minute windows
      | create_feature_vector(protocol_ratios, avg_packet_size, src_ip_entropy)
      | apply_model(PCA)
      | calculate mahalanobis_distance from normal_centroid
      | alert where distance > threshold