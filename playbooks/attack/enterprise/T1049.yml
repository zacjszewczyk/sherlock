name: T1049: System Network Connections Discovery
id: 5c9f1b9e-6d3a-4e8f-9a1b-7c8d9e0f1a2b
description: >
  This playbook helps determine if an adversary is attempting to discover network connections from compromised systems. It focuses on identifying the execution of known malicious or unauthorized dual-use discovery tools, the use of native command-line utilities (netstat, arp, etc.) with reconnaissance arguments, suspicious PowerShell or WMI activity enumerating network configurations, anomalous network traffic patterns indicative of scanning, unusual parent-child process relationships involving network utilities, and a single user account running discovery commands from an unusually high number of hosts.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Has a process been executed whose file hash is a known indicator of a malicious network reconnaissance tool?"
    context: "This question aims to detect the presence of known malicious tools by matching process file hashes against a threat intelligence feed. A match is a high-confidence indicator that an adversary has introduced a tool specifically for network discovery, bypassing defenses that might focus only on process names or command lines."
    answer_sources:
      - Windows Event ID 4688
      - Zeek software.log
      - Applicable Systems: All Endpoints (Workstations and Laptops), Critical Servers (e.g., Domain Controllers, Application Servers), DMZ Servers, Developer Workstations, Administrator Jump Boxes
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "SEARCH process_creation_logs WHERE process_hash IN threat_intel_feed_hashes"
  - question: "Is a dual-use network discovery tool (like nmap or netcat) being executed on a host with a frequency that is anomalous compared to its historical baseline?"
    context: "Legitimate administrators may use dual-use tools, but their usage patterns are often predictable. This question seeks to identify when a tool's execution frequency on a specific host deviates significantly from its normal behavior, which could indicate malicious use by an adversary or an insider threat. It's particularly useful for detecting unauthorized use of approved tools."
    answer_sources:
      - Windows Event ID 4688
      - Zeek software.log
      - Applicable Systems: All Endpoints (Workstations and Laptops), Critical Servers (e.g., Domain Controllers, Application Servers), DMZ Servers, Developer Workstations, Administrator Jump Boxes
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "SEARCH process_creation_logs for dual_use_tool_names | GROUPBY host, day | CALCULATE execution_count | COMPARE count to historical_baseline_95th_percentile | ALERT if count > baseline"
  - question: "Does a machine learning model classify a process execution event as malicious based on its combined features?"
    context: "This question leverages a machine learning model to perform a holistic assessment of a process execution event. The model considers multiple features simultaneously (process name, parent, command line, user, hash) to identify subtle patterns that might be missed by simple rules. A high-malice score from a well-trained model can surface sophisticated or previously unseen discovery activity."
    answer_sources:
      - Windows Event ID 4688
      - Zeek software.log
      - Applicable Systems: All Endpoints (Workstations and Laptops), Critical Servers (e.g., Domain Controllers, Application Servers), DMZ Servers, Developer Workstations, Administrator Jump Boxes
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "INPUT process_execution_event_features INTO ML_model | GET prediction_score | ALERT if score > 0.9"
  - question: "Has a native Windows discovery utility (e.g., net.exe, netstat.exe, arp.exe) been executed with command-line arguments indicative of network reconnaissance?"
    context: "Adversaries often 'live off the land' by using built-in system tools to perform discovery, as this blends in with normal administrative activity. This question focuses on identifying specific command-line patterns (e.g., 'net view /domain', 'arp -a') that are strongly associated with reconnaissance rather than routine tasks. It helps separate malicious from benign use of these common utilities."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Applicable Systems: All Endpoints (Workstations and Laptops), Jump Servers, Domain Controllers, Internal Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "SEARCH process_creation_logs WHERE process_name IN (net.exe, netstat.exe, ...) AND command_line MATCHES ('*view /domain*', '*stat -anop*', '*arp -a*', ...)"
  - question: "Is a user executing discovery utilities with a variety or pattern of command-line arguments that is unusual for their own historical behavior?"
    context: "This question uses behavioral analytics to detect anomalous command-line usage. A sudden increase in the complexity or variety of arguments (high entropy) could indicate manual, exploratory reconnaissance by an adversary. Conversely, very low entropy could indicate the repeated, automated execution of a discovery script. Both deviate from a user's normal, day-to-day command usage."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Applicable Systems: All Endpoints (Workstations and Laptops), Jump Servers, Domain Controllers, Internal Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each user_session | CALCULATE shannon_entropy of command_line_arguments | COMPARE entropy to user_historical_baseline | ALERT if deviation > 3_std_dev"
  - question: "Has a network discovery command occurred as part of a sequence of commands that is characteristic of an attack?"
    context: "Single commands can be misleading, but the sequence of commands tells a story. This question uses a sequence analysis model (like an LSTM) to understand the context in which a discovery command was run. A 'netstat' command following 'whoami' and preceding 'net use' is far more suspicious than one run in isolation. This helps identify discovery as a step in a larger attack chain (e.g., post-initial access, pre-lateral movement)."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Applicable Systems: All Endpoints (Workstations and Laptops), Jump Servers, Domain Controllers, Internal Application Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "INPUT command_line_session_sequence INTO LSTM_model | GET anomaly_score | ALERT if score is high AND sequence contains discovery_command"
  - question: "Has a PowerShell script been executed that contains cmdlets, WMI classes, or .NET methods used for network discovery, potentially with obfuscation?"
    context: "PowerShell is a powerful tool for both administrators and adversaries. This question looks for the direct use of PowerShell capabilities (like 'Get-NetTCPConnection') to perform network reconnaissance. The check for obfuscation is critical, as adversaries frequently try to hide their commands from simple keyword-based searches."
    answer_sources:
      - Windows Event ID 4104
      - Windows Event ID 4688
      - Microsoft-Windows-WMI-Activity/Operational Event ID 5858
      - Applicable Systems: All Windows Endpoints and Servers, Systems with PowerShell Remoting Enabled, Exchange Servers, SharePoint Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "SEARCH powershell_script_block_logs FOR keywords ('Get-NetTCPConnection', 'Win32_PingStatus', ...) OR obfuscation_patterns"
  - question: "Does a PowerShell script block exhibit a character distribution that is statistically different from typical benign scripts, suggesting obfuscation or packed code?"
    context: "This question provides a way to detect obfuscated or encrypted PowerShell scripts without needing to de-obfuscate them. Malicious scripts that are packed or heavily obfuscated have a different statistical profile (character frequency) than plain-text administrative scripts. A high Chi-squared distance score serves as a strong indicator that the script is unusual and warrants deeper inspection, especially if it also contains network-related keywords."
    answer_sources:
      - Windows Event ID 4104
      - Windows Event ID 4688
      - Microsoft-Windows-WMI-Activity/Operational Event ID 5858
      - Applicable Systems: All Windows Endpoints and Servers, Systems with PowerShell Remoting Enabled, Exchange Servers, SharePoint Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each powershell_script_block | CALCULATE character_frequency | CALCULATE chi_squared_distance from benign_baseline | ALERT if distance_score is high"
  - question: "Does an advanced NLP model classify a PowerShell script's content and structure as suspicious or malicious reconnaissance?"
    context: "This question applies sophisticated NLP models, like BERT, to understand the intent of a PowerShell script by analyzing its code structure (via its Abstract Syntax Tree) and content. This method is more resilient to simple obfuscation than keyword matching and can learn the nuanced differences between benign and malicious scripts, leading to higher-fidelity alerts for suspicious reconnaissance activity."
    answer_sources:
      - Windows Event ID 4104
      - Windows Event ID 4688
      - Microsoft-Windows-WMI-Activity/Operational Event ID 5858
      - Applicable Systems: All Windows Endpoints and Servers, Systems with PowerShell Remoting Enabled, Exchange Servers, SharePoint Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "INPUT powershell_script_text_and_AST INTO NLP_classifier | GET classification_label | ALERT if label IS 'Suspicious Recon' OR 'Malicious Execution'"
  - question: "Is a single host attempting to connect to an unusually large number of other internal hosts in a short time frame, indicative of a network sweep?"
    context: "This question seeks to identify classic network scanning behavior. Normal workstations or servers typically communicate with a limited set of other hosts. A sudden 'fan-out' where one host tries to contact many others is a strong sign of active reconnaissance, such as a ping sweep or port scan, to map the internal network."
    answer_sources:
      - Zeek conn.log
      - Firewall Deny/Accept Logs
      - Applicable Systems: Internal network segments (East-West traffic), Network Security Monitoring Sensor locations, VPC/VNet Flow Log aggregation points, Core network switch SPAN/TAP ports
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FROM network_logs in 5_min_window | GROUPBY source_ip | COUNT unique destination_ip | ALERT if unique_count > 25 AND source_ip NOT IN allowlist"
  - question: "Has a host's network connection behavior changed to communicate with a number of unique destinations or ports that is anomalous for that specific host?"
    context: "Unlike a static threshold, this question uses a dynamic, per-host baseline to detect anomalous behavior. A server that normally talks to 50 hosts might not trigger a static alert if it scans 20 more. However, a workstation that normally talks to 5 hosts and suddenly contacts 25 is highly anomalous. This tailored approach reduces false positives and detects deviations from a host's established role."
    answer_sources:
      - Zeek conn.log
      - Firewall Deny/Accept Logs
      - Applicable Systems: Internal network segments (East-West traffic), Network Security Monitoring Sensor locations, VPC/VNet Flow Log aggregation points, Core network switch SPAN/TAP ports
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each host | CALCULATE unique_destinations_per_hour | COMPARE to host_30_day_baseline | ALERT if count > 99th_percentile_of_baseline"
  - question: "Does a machine learning clustering model identify specific network connections as outliers that do not fit into any normal traffic patterns?"
    context: "This question uses an unsupervised learning approach to find the 'unknown unknowns' in network traffic. The DBSCAN algorithm automatically groups together 'normal' traffic that is dense and interconnected. Connections that don't belong to any cluster are flagged as noise or outliers. These outliers often represent the sparse, widespread traffic patterns of a network scan, which stands out from the dense clusters of regular client-server communication."
    answer_sources:
      - Zeek conn.log
      - Firewall Deny/Accept Logs
      - Applicable Systems: Internal network segments (East-West traffic), Network Security Monitoring Sensor locations, VPC/VNet Flow Log aggregation points, Core network switch SPAN/TAP ports
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "INPUT network_connection_features INTO DBSCAN_model | IDENTIFY outlier_connections | ALERT on outliers"
  - question: "Has a network discovery utility been launched by a parent process that should never spawn it, such as an Office application or web server?"
    context: "This is a high-confidence detection method based on identifying illogical or forbidden process lineage. An application like Microsoft Word or Outlook has no legitimate reason to spawn 'netstat.exe' or 'ipconfig.exe'. Such an event is a strong indicator of compromise, often resulting from the execution of a malicious macro or exploit."
    answer_sources:
      - Windows Event ID 4688
      - Applicable Systems: Web Servers, User Workstations, Application Servers, Microsoft Office 365 / Exchange servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "SEARCH process_creation_logs WHERE (parent_process IS 'winword.exe' AND child_process IS 'net.exe') OR (parent_process IS 'outlook.exe' AND child_process IS 'ipconfig.exe') ..."
  - question: "Has a statistically rare parent-child process relationship occurred, where the child is a network discovery tool?"
    context: "This question moves beyond a static list of forbidden pairs to a data-driven approach. By analyzing all parent-child relationships across the enterprise, it can identify any new or very rare combination involving a discovery tool. This can detect novel attack vectors or adversary activity that doesn't use the most common 'Office-spawns-cmd' pattern."
    answer_sources:
      - Windows Event ID 4688
      - Applicable Systems: Web Servers, User Workstations, Application Servers, Microsoft Office 365 / Exchange servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "SEARCH process_creation_logs for new_parent_child_relationship WHERE child_process IS discovery_tool | LOOKUP relationship in enterprise_frequency_table | ALERT if frequency < 5"
  - question: "Does a process execution chain involving a network discovery tool deviate structurally from all previously seen benign process chains?"
    context: "This question uses advanced graph-based analysis to model entire process execution trees (e.g., A spawns B, which spawns C and D). A machine learning model is trained to recognize the 'shape' of normal process trees. It can then flag an entire chain as anomalous, even if individual parent-child pairs seem plausible. This is effective at detecting complex execution chains designed to evade simpler detection logic."
    answer_sources:
      - Windows Event ID 4688
      - Applicable Systems: Web Servers, User Workstations, Application Servers, Microsoft Office 365 / Exchange servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "BUILD process_tree from process_creation_events | INPUT tree_structure into graph_neural_network | GET anomaly_score | ALERT if score is high AND leaf_node IS discovery_tool"
  - question: "Is a single user account executing network discovery commands from an abnormally high number of different computers in a short time frame?"
    context: "This question seeks to identify an adversary who has compromised a user account and is using it to perform reconnaissance from multiple systems. A typical user or even an administrator usually works from one or a small number of machines. Seeing the same account run 'netstat' on five different workstations within an hour is highly suspicious and indicative of lateral movement and discovery."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Applicable Systems: Domain Controllers (for login events), All Endpoints and Servers (for process events), Identity and Access Management Systems, Centralized SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "JOIN logon_events, process_events on user_account | IN 1_hour_window, COUNT unique hosts where discovery_command was run | ALERT if unique_host_count > 3 AND user NOT IN allowlist"
  - question: "Is a user running discovery commands from a number of unique hosts that is anomalous compared to their own historical behavior?"
    context: "This question refines the previous one by creating a personalized baseline for each user. An administrator who routinely touches 10 servers a day won't trigger an alert for visiting an 11th. However, a user from the finance department who has never run a discovery command from any host other than their own workstation will trigger an immediate alert if they run one from a second machine. This customizes detection to the user's role."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Applicable Systems: Domain Controllers (for login events), All Endpoints and Servers (for process events), Identity and Access Management Systems, Centralized SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each user | COUNT daily unique hosts for discovery_commands | COMPARE count to user_historical_baseline | ALERT if count > 3_std_dev_from_average"
  - question: "Does a UEBA platform identify a user's overall activity as anomalous, especially when that activity includes running discovery tools from multiple hosts?"
    context: "This question leverages a dedicated UEBA system to contextualize the discovery activity. A UEBA platform considers a wide range of behaviors (logon times, hosts accessed, processes run, data accessed) to create a holistic risk score for a user. An alert for 'user ran discovery command from 3 hosts' becomes much more severe when the UEBA platform adds that the logons were at 3 AM from a new geographic location, making it a powerful tool for prioritizing alerts."
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Applicable Systems: Domain Controllers (for login events), All Endpoints and Servers (for process events), Identity and Access Management Systems, Centralized SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "INPUT user_activity_logs into UEBA_system | GET user_anomaly_score | INVESTIGATE user if score is high, especially if activity includes multi-host discovery"