name: T1221: Template Injection
id: 97891223-9c86-4f47-8a90-888941f173b9
description: This playbook focuses on detecting adversaries leveraging remote document templates to execute malicious code for defense evasion. It identifies attacks where Office applications (e.g., Word, Excel) are manipulated to download and execute code from a remote source, often triggered by opening a malicious document. Indicators include Office applications making network connections to suspicious destinations, spawning unusual child processes (like PowerShell or cmd.exe) with obfuscated commands, the presence of specific control words in RTF files pointing to remote URLs, outbound SMB connections to external IPs for credential theft, and correlated sequences of network activity followed by local process execution.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage, Inc.
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are Office applications making network connections to destinations (URLs, domains, IPs) or downloading files that are known to be malicious based on threat intelligence?
  context: This question aims to detect the most straightforward indicator of compromise: communication with a known-bad entity. By comparing network traffic and file downloads from Office applications against threat intelligence feeds, we can quickly identify confirmed malicious activity associated with template injection.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 22
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek files.log
  - Perimeter firewall logs
  - Web proxy logs
  - DNS server logs
  - User workstations
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      SEARCH network_logs OR file_logs WHERE process_name IN (winword.exe, excel.exe, powerpnt.exe)
      JOIN threat_intelligence_feed ON (destination_ip OR destination_domain OR file_hash)
      RETURN matching_events
- question: Are Office applications connecting to statistically rare or uncommon domains compared to the organization's historical baseline?
  context: Adversaries often use newly registered or obscure domains for command and control or payload delivery. This question helps identify such anomalies by flagging connections to domains that have rarely or never been seen before in the organization's network traffic, which could indicate a template injection attack.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 22
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek files.log
  - Perimeter firewall logs
  - Web proxy logs
  - DNS server logs
  - User workstations
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Step 1: Build baseline of domain frequency from last 90 days of DNS logs
      // Step 2: For new network connections from Office apps
      SEARCH network_logs WHERE process_name IN (winword.exe, excel.exe, powerpnt.exe)
      // Step 3: Check if destination_domain frequency is in bottom 5th percentile
      IF frequency(destination_domain) < percentile(all_domain_frequencies, 5)
      ALERT
- question: Are Office applications requesting URLs that have lexical features (e.g., high entropy, strange characters) suggestive of being algorithmically generated or malicious?
  context: This question applies machine learning to proactively identify malicious URLs that may not yet be on any threat intelligence feed. By analyzing the structure and characteristics of a URL, a model can predict its likelihood of being malicious, providing an early warning for potential template injection attempts.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 22
  - Zeek http.log
  - Zeek dns.log
  - Zeek conn.log
  - Zeek files.log
  - Perimeter firewall logs
  - Web proxy logs
  - DNS server logs
  - User workstations
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // For each URL requested by an Office application:
      INPUT url
      EXTRACT lexical_features (length, entropy, special_chars, etc.)
      PREDICT is_malicious = classification_model(lexical_features)
      IF is_malicious > high_confidence_threshold
      ALERT
- question: Are Office applications spawning child processes with command-line arguments containing known malicious patterns, such as those used for downloading and executing code?
  context: After a malicious template is loaded, it often executes a command to download the next stage of the attack. This question looks for the tell-tale signs of this activity by searching for specific, high-confidence strings and commands (like 'IEX(New-Object Net.WebClient).DownloadString') in the command lines of processes created by Office applications.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Terminal servers
  - Virtual Desktop Infrastructure (VDI) hosts
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      SEARCH process_creation_logs WHERE parent_process_name IN (winword.exe, excel.exe, powerpnt.exe)
      AND command_line MATCHES REGEX ('IEX.*DownloadString', 'mshta.exe http', 'certutil -urlcache', 'rundll32.exe javascript:')
      ALERT
- question: Are child processes spawned by Office applications using unusually complex or high-entropy command-line arguments, suggesting obfuscation?
  context: To evade simple signature-based detection, adversaries often obfuscate or encode their commands. This results in command-line arguments with high entropy (randomness). This question helps detect such evasion techniques by flagging command lines that are statistically more complex than normal.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Terminal servers
  - Virtual Desktop Infrastructure (VDI) hosts
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Step 1: Build baseline of normal command-line entropy for Office child processes
      // Step 2: For new process creation events from Office apps
      SEARCH process_creation_logs WHERE parent_process_name IN (winword.exe, excel.exe, powerpnt.exe)
      CALCULATE entropy(command_line)
      IF entropy > percentile(baseline_entropies, 98)
      ALERT
- question: Are the command-line arguments used by child processes of Office applications being classified as malicious by a trained machine learning model?
  context: This question leverages a machine learning model trained on a vast corpus of known good and bad command lines. It provides a sophisticated way to detect novel or complex malicious commands that might be missed by static rules or entropy analysis alone, offering a more robust defense against evolving threats.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Terminal servers
  - Virtual Desktop Infrastructure (VDI) hosts
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // For each command line from an Office child process:
      INPUT command_line
      EXTRACT features (e.g., TF-IDF)
      PREDICT is_malicious = classification_model(features)
      IF is_malicious
      ALERT
- question: Are Rich Text Format (RTF) files being created or observed on the network that contain control words pointing to a remote template via HTTP/S or a UNC path?
  context: A specific technique for template injection involves embedding a '*\template' control word in an RTF file that forces the application to fetch a template from a remote location. This question directly hunts for this artifact within RTF files to detect the attack at the file level.
  answer_sources:
  - Zeek files.log
  - Sysmon Event ID 11
  - Network egress points
  - Email gateway file attachments
  - User workstations' file systems
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      SEARCH file_creation_logs (Sysmon EID 11) OR network_file_logs (Zeek files.log) WHERE file_extension = 'rtf'
      SCAN file_content FOR REGEX ('\*\\template http', '\*\\template \\\\')
      ALERT on match
- question: Is there a sudden and statistically significant spike in the number of RTF files containing the '*\template' control word, suggesting a potential campaign?
  context: While some legitimate RTF files may use remote templates, a widespread attack campaign will likely cause a sudden increase in their prevalence. This question uses time-series analysis to detect such anomalies, distinguishing a potential attack from normal, baseline activity.
  answer_sources:
  - Zeek files.log
  - Sysmon Event ID 11
  - Network egress points
  - Email gateway file attachments
  - User workstations' file systems
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Step 1: Create 30-day moving average and standard deviation of count of RTF files with '*\template'
      // Step 2: Monitor daily count
      COUNT rtf_files WHERE content CONTAINS '*\template'
      IF daily_count > (moving_average + 3 * standard_deviation)
      ALERT
- question: Are new RTF files being classified as malicious by a machine learning model trained on file characteristics like the presence of remote template indicators?
  context: This question moves beyond a single indicator within an RTF file and uses a machine learning model to consider multiple features at once (e.g., file size, object count, presence of specific control words). This holistic analysis can more accurately identify malicious RTF files designed for template injection.
  answer_sources:
  - Zeek files.log
  - Sysmon Event ID 11
  - Network egress points
  - Email gateway file attachments
  - User workstations' file systems
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // For each new RTF file:
      INPUT rtf_file
      EXTRACT features (has_template_http, file_size, object_count, etc.)
      PREDICT is_malicious = classification_model(features)
      IF is_malicious
      ALERT
- question: Are Office applications spawning child processes that are not on a pre-defined allow-list of normal behavior?
  context: This question implements a strict security posture by defining what is "normal" and alerting on any deviation. Since Office applications typically have a predictable set of child processes, any process creation outside this allow-list, especially of command shells or LOLBins, is highly suspicious and warrants immediate investigation.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Application servers
  - Terminal servers
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Define allow-list: e.g., WINWORD.EXE -> [AllowedChild1.exe, AllowedChild2.exe]
      SEARCH process_creation_logs WHERE parent_process_name IN (winword.exe, excel.exe, powerpnt.exe)
      IF child_process_name NOT IN allow_list[parent_process_name]
      ALERT
- question: Are we observing parent-child process relationships involving Office applications that are statistically rare for a specific host or for the entire organization?
  context: This is an anomaly detection approach that learns the normal process behaviors on a per-host or enterprise-wide basis. It can uncover template injection attacks that use less common but still legitimate binaries as child processes, which might be missed by a static allow-list. An alert is triggered when a rare or first-seen process relationship occurs.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Application servers
  - Terminal servers
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Step 1: Build baseline of parent-child relationship probabilities over last 30 days
      // Step 2: For new process creation events
      SEARCH process_creation_logs WHERE parent_process_name IN (winword.exe, excel.exe, powerpnt.exe)
      CALCULATE probability(parent_process_name, child_process_name)
      IF probability < 0.01
      ALERT
- question: Are unsupervised machine learning models identifying process creation events from Office applications as anomalous outliers?
  context: This question uses advanced anomaly detection (like an Isolation Forest) to model complex patterns of normal process activity. The model can identify subtle deviations that indicate malicious behavior without prior labeling of good or bad events, making it effective against zero-day or novel process execution chains.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Application servers
  - Terminal servers
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // For each new process creation event from an Office app:
      INPUT event_features (parent_name, child_name, user, etc.)
      PREDICT is_outlier = anomaly_detection_model(event_features)
      IF is_outlier
      ALERT
- question: Are Office applications making outbound SMB connections to external, non-private IP addresses?
  context: Outbound SMB traffic from a user workstation to the public internet is highly unusual and a strong indicator of an attempt to capture NTLM credentials via a malicious template. This question creates a high-fidelity alert for this specific, suspicious behavior.
  answer_sources:
  - Zeek conn.log
  - Windows Security Event ID 5156
  - Sysmon Event ID 3
  - Perimeter firewall logs
  - User workstations
  - Internal network segments
  - Domain Controllers
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      SEARCH network_logs WHERE process_name IN (winword.exe, excel.exe, powerpnt.exe)
      AND destination_port = 445
      AND destination_ip IS NOT private_ip_range
      ALERT
- question: Are users' Office applications initiating SMB connections to internal servers they do not typically access?
  context: Adversaries may use template injection to move laterally or access sensitive data on internal file shares. This question establishes a baseline of normal user-to-server SMB access and alerts on deviations, potentially catching an attacker using a compromised account to pivot within the network.
  answer_sources:
  - Zeek conn.log
  - Windows Security Event ID 5156
  - Sysmon Event ID 3
  - Perimeter firewall logs
  - User workstations
  - Internal network segments
  - Domain Controllers
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Step 1: For each user, build baseline of normal SMB destination servers over 30 days
      // Step 2: For new SMB connections from Office apps
      SEARCH network_logs WHERE process_name IN (winword.exe, excel.exe, powerpnt.exe) AND destination_port = 445
      IF destination_server NOT IN user_baseline[user]
      ALERT
- question: Is there a statistically anomalous spike in the overall volume of outbound SMB traffic originating from Office applications across the enterprise?
  context: A large-scale phishing campaign using template injection for credential theft could result in a sudden, enterprise-wide increase in outbound SMB traffic. This question uses time-series forecasting to model expected traffic volume and alert on significant deviations that could indicate such a widespread attack.
  answer_sources:
  - Zeek conn.log
  - Windows Security Event ID 5156
  - Sysmon Event ID 3
  - Perimeter firewall logs
  - User workstations
  - Internal network segments
  - Domain Controllers
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Step 1: Train time-series model on historical volume of outbound SMB from Office apps
      // Step 2: Monitor current volume
      CALCULATE current_volume
      FORECAST expected_volume = time_series_model(history)
      IF current_volume > (expected_volume + threshold)
      ALERT
- question: Are Office applications connecting to a known-bad domain and then, within a short time frame, spawning a suspicious child process like a command shell or scripting interpreter?
  context: This question correlates two distinct but related suspicious events into a single, high-confidence alert. This sequence—downloading a payload from a malicious site and then executing it—is the classic pattern for template injection, and detecting this chain of events is a powerful way to identify an active compromise.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Sysmon Event ID 22
  - Zeek conn.log
  - Zeek dns.log
  - SIEM correlation engine
  - User workstations
  - DNS server logs
  - Web proxy logs
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // Stateful rule, correlated by host and process ID
      WHEN (network_event WHERE process_name IN (winword.exe, excel.exe, powerpnt.exe) AND destination_domain IN CTI_blocklist)
      FOLLOWED BY (process_creation_event WHERE parent_process_id = network_event.process_id AND child_process_name IN (powershell.exe, cmd.exe))
      WITHIN 60 seconds
      ALERT
- question: Are hosts accumulating a high composite risk score based on a series of suspicious activities related to Office applications occurring in a short time window?
  context: Not all suspicious events are definitive proof of an attack. This question uses a risk-scoring model to aggregate multiple lower-confidence indicators (e.g., connection to a rare domain, spawning a shell). If enough of these events happen in close succession on one host, their combined score can cross a threshold, generating a high-priority alert that is more resilient to noise than any single indicator.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Sysmon Event ID 22
  - Zeek conn.log
  - Zeek dns.log
  - SIEM correlation engine
  - User workstations
  - DNS server logs
  - Web proxy logs
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // For each host, over a 5-minute window:
      CALCULATE risk_score = 0
      IF (office_app_spawns_cmd) risk_score += 15
      IF (office_app_connects_to_rare_domain) risk_score += 25
      // ... other rules
      IF risk_score > 35
      ALERT
- question: Are machine learning models identifying the sequence of events originating from Office applications (e.g., network connection followed by process creation) as anomalous compared to learned normal sequences?
  context: This question applies sophisticated sequence-based modeling (like an LSTM autoencoder) to learn the "normal grammar" of system events on a host. It can detect a malicious template injection attack by recognizing that the resulting chain of events (e.g., Word -> network -> PowerShell) violates the established patterns of normal behavior, even if each individual event is not inherently suspicious.
  answer_sources:
  - Windows Security Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Sysmon Event ID 22
  - Zeek conn.log
  - Zeek dns.log
  - SIEM correlation engine
  - User workstations
  - DNS server logs
  - Web proxy logs
  range: Last 90 days
  queries:
  - search_technology: Pseudocode
    query: |
      // For each host, create a sequence of recent events
      INPUT event_sequence
      CALCULATE reconstruction_error = sequence_model(event_sequence)
      IF event_sequence involves an Office app AND reconstruction_error > threshold
      ALERT