name: T1505.003: Web Shell
id: f5c6b7a8-1d9e-4f3c-8a2b-6e9d0f1a2b3c
description: This playbook helps investigate whether an adversary has established persistence by implanting a web shell on a server. It focuses on detecting the initial interaction with a web shell through anomalous HTTP/S requests matching threat intelligence, containing command-like structures, or exhibiting high entropy. It also looks for post-exploitation activity, such as a web server process spawning unusual child processes (e.g., command interpreters), making unexpected outbound network connections for C2 or data exfiltration, or writing new executable files (.php, .aspx) to web-accessible directories.
type: technique
related:
- TA0003: Persistence
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are inbound HTTP/S requests to web servers matching known malicious IPs or web shell URIs from threat intelligence feeds?
  context: This question aims to detect initial web shell interaction by comparing incoming traffic against curated lists of known-bad indicators. A match provides a high-confidence signal that an adversary is attempting to communicate with or has just placed a web shell. It's a fundamental check for known threats.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log AND http.log WHERE (conn.source_ip IN threat_intel_ips) OR (http.uri IN threat_intel_uris)
- question: Is any source IP exhibiting an unusually high ratio of POST requests compared to the established baseline for a specific web application?
  context: Web shells are often controlled via POST requests to send commands and receive output. Normal users typically have a much lower POST-to-total request ratio. A high ratio, especially with a low total request count, can indicate targeted, interactive command-and-control activity through a web shell rather than typical browsing behavior.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log GROUP BY source_ip | CALCULATE post_ratio = (COUNT(method="POST") / COUNT(*)) | WHERE post_ratio > baseline_95th_percentile AND COUNT(*) < 10
- question: Are there any inbound web requests being classified as malicious by a machine learning model based on their network and application-layer features?
  context: This question leverages a predictive model to identify suspicious requests that may not match known signatures. The model analyzes a combination of features (source ASN, User-Agent, URI structure, etc.) to score the likelihood of a request being malicious, allowing for the detection of novel or previously unseen web shell activity.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek logs | INVOKE ML_model(features) | WHERE malicious_probability > 0.9
- question: Do any HTTP requests contain URI parameters or POST bodies with strings matching common command execution functions or obfuscation techniques?
  context: Adversaries often use built-in functions like eval(), exec(), or shell_exec() within web shell payloads to execute system commands. This question directly searches for these highly suspicious function calls or common encoding patterns (like base64_decode) within the request content, serving as a strong indicator of a web shell being used.
  answer_sources:
  - Zeek http.log
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log WHERE uri CONTAINS regex('eval\(|exec\(|passthru\(|shell_exec\(|base64_decode') OR post_body CONTAINS regex(...)
- question: Are any HTTP requests exhibiting unusually high entropy in their URI query parameters or POST bodies compared to the baseline for that specific URI?
  context: To evade signature-based detection, attackers often obfuscate or encrypt the commands sent to a web shell. This process significantly increases the character randomness, or entropy, of the data. A spike in entropy for a specific URI, compared to its normal traffic, suggests that obfuscated or encrypted content is being passed, which is a common characteristic of web shell communication.
  answer_sources:
  - Zeek http.log
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log | CALCULATE entropy(uri_parameters), entropy(post_body) | GROUP BY uri | WHERE entropy > baseline_98th_percentile_for_uri
- question: Has an anomaly detection model identified any HTTP requests as significant outliers based on their structural features?
  context: This question uses an unsupervised model to find requests that "don't look like the others" for a given application. By modeling normal traffic patterns based on features like URI length, parameter count, and entropy, the model can flag requests that deviate significantly, which could represent novel or unknown web shell activity that doesn't rely on specific signatures.
  answer_sources:
  - Zeek http.log
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek http.log | INVOKE anomaly_detection_model(features) | WHERE is_outlier = true
- question: Has a web server process spawned a suspicious child process, such as a command-line interpreter or a known reconnaissance tool?
  context: Web servers should not typically spawn processes like cmd.exe or powershell.exe. Such an event is a very strong indicator that a web shell has been used to execute a command on the server, bridging the gap from web application compromise to interactive system control.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Application Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs WHERE parent_process IN ('w3wp.exe', 'httpd.exe', ...) AND child_process IN ('cmd.exe', 'powershell.exe', 'whoami.exe', ...)
- question: Has a web server process spawned a child process with an unusually long or complex command line?
  context: Attackers often use long and complex command lines to execute fileless payloads, obfuscated scripts, or chained commands directly from the web shell. This question seeks to identify such commands by measuring the length and entropy of command-line arguments and comparing them to a historical baseline. A significant deviation (high Z-score) suggests an anomalous and potentially malicious command execution.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Application Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs WHERE parent_process IN ('w3wp.exe', ...) | CALCULATE zscore(command_line_length), zscore(command_line_entropy) | WHERE zscore_length > 3 AND zscore_entropy > 3
- question: Are there any process creation events originating from a web server that are flagged as anomalous by a clustering model?
  context: This question applies unsupervised machine learning to baseline all normal parent-child process relationships and command-line patterns. Any new process creation event that does not fit into an established "normal" cluster is flagged as an anomaly. This is effective for detecting novel attack patterns or the use of legitimate tools in an illegitimate context (living-off-the-land).
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Application Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_logs WHERE parent_process IN ('w3wp.exe', ...) | INVOKE clustering_model(features) | WHERE is_anomaly = true
- question: Has a web server initiated an outbound network connection to a known malicious IP, a restricted internal subnet, a non-standard port, or a suspicious domain?
  context: After gaining execution via a web shell, an adversary may initiate a connection back to their command-and-control (C2) server or to another internal system for lateral movement. This question checks for these connections, which are highly anomalous for a web server, by comparing destinations against threat intelligence, internal network policy, and baselines of standard ports.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH network_logs WHERE source_ip IS web_server AND ((destination_ip IN threat_intel_feed) OR (destination_port NOT IN (80, 443, ...)) OR (dns_query IN c2_domain_feed))
- question: Is a web server making outbound connections to a rare destination port or transferring an unusually large amount of data?
  context: This question uses statistical analysis to find deviations from a web server's normal network behavior. A connection to a port that is rarely ever used by that server could indicate a C2 channel on a non-standard port. Similarly, a sudden, massive data transfer could be a sign of data exfiltration. Both are strong indicators of post-compromise activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log WHERE source_ip IS web_server | WHERE (destination_port_frequency < 0.01) OR (total_bytes > 99th_percentile_baseline)
- question: Does the volume of outbound data from a web server significantly exceed the forecasted amount predicted by a time-series model?
  context: This question aims to detect subtle C2 communication or data exfiltration that might not be large enough to trigger a simple threshold alert. By forecasting the expected data volume for any given time, the model can identify statistically significant excesses that could represent periodic C2 beacons or slow data leakage, which are often missed by other methods.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - DMZ Web Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH Zeek conn.log AGGREGATE sum(outbound_bytes) by hour | INVOKE time_series_model() | WHERE actual_bytes > forecast_upper_bound
- question: Has a web server process written a new file with a web-executable extension (.php, .aspx, etc.) to a web root directory?
  context: This is a classic indicator of web shell implantation. A vulnerability is often exploited to make the web server process itself write the shell file to a location where it can then be accessed via a web browser. Monitoring for this specific action—a web process creating an executable web file—provides a high-fidelity alert for persistence establishment.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Web Server File Systems
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_logs WHERE process_name IN ('w3wp.exe', ...) AND target_directory IS web_root AND target_filename ENDS WITH ('.php', '.aspx', '.jsp', ...)
- question: Has a file with a rare or previously unseen extension been created in a web application directory?
  context: Attackers may use uncommon extensions or misspellings to hide their web shells and evade simple detection rules. This question establishes a baseline of all file extensions normally found within a specific application's directories. The appearance of a new, rare extension is anomalous and could indicate that an adversary has planted a file, warranting investigation.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Web Server File Systems
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH file_creation_logs WHERE target_directory IS web_root | CALCULATE extension_frequency | WHERE frequency < 0.005 OR is_new_extension = true
- question: Has a newly created file been classified as a malicious web shell by a machine learning model that analyzes its content?
  context: This question provides the most advanced detection capability by moving beyond metadata (filename, process) to analyze the actual content of newly created files. A model trained on the source code of both legitimate files and malicious shells can identify suspicious code structures, obfuscation, and functionality, allowing it to detect even highly sophisticated or novel web shells at the moment of creation.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Web Server File Systems
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: ON file_creation_event: GET file_content | INVOKE CNN_classifier(file_content) | WHERE classification = 'malicious'