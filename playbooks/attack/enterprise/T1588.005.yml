name: T1588.005: Exploits
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps to determine if an adversary has acquired exploits for use against the enterprise. It focuses on identifying activities such as internal hosts connecting to known exploit repositories, the transfer of files matching exploit patterns, observing mass scanning activity indicative of exploit testing, and detecting behavioral sequences on endpoints that align with finding, downloading, and executing an exploit.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Is an internal host, not part of a security research group, connecting to known exploit repositories, hacking forums, or exploit kit C2 servers?
  context: A direct connection from a standard corporate host to a domain or IP address known for hosting exploits is a strong indicator of an adversary (or insider) attempting to acquire tools. This question leverages threat intelligence to identify high-confidence suspicious activity while filtering out legitimate traffic from authorized security teams.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Corporate network egress points
  - DNS resolvers
  - Web proxies
  - Threat Intelligence Feeds
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Zeek conn.log OR dns.log
      JOIN destination_ip OR dns_answer ON threat_intel_feed(category="exploit")
      WHERE source_ip NOT IN authorized_research_IP_range
      RETURN source_ip, destination_ip, destination_port, domain_queried
- question: Is an internal host querying for exceptionally rare domains that might be associated with exploit delivery?
  context: Adversaries often use newly registered or obscure domains for staging and delivering malicious payloads like exploits. By calculating the rarity of domains queried across the enterprise, analysts can uncover hosts communicating with domains that have very few or no other clients. This method can help detect connections to unknown or emergent malicious infrastructure.
  answer_sources:
  - Zeek dns.log
  - Corporate network egress points
  - DNS resolvers
  - Web proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE rarity of all second-level domains in dns.log over 30 days
      FOR each new DNS query
        IF domain_rarity > 99.9th percentile
          AND (domain_age < 90 days OR dns_ttl is low)
          ALERT on host and rare domain
- question: Can we use machine learning to predict if an outbound connection from a non-research host is likely related to exploit acquisition activity?
  context: Signature-based detections can miss novel threats. This question proposes using a Random Forest classifier trained on connection metadata (duration, bytes transferred, protocol), DNS features (query length, entropy), and IP reputation. Applying this model to new outbound connections can generate a probability score, enabling analysts to proactively investigate activity that is statistically likely to be malicious, even without a specific signature.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Corporate network egress points
  - DNS resolvers
  - Web proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new outbound connection from non-research host
        EXTRACT features (duration, bytes, proto, port, query_len, entropy, etc.)
        APPLY pre-trained Random Forest model
        IF probability_score > threshold
          ALERT for manual investigation
- question: Has a non-authorized user or host downloaded a file that appears to be an exploit based on its filename or hash?
  context: Adversaries may download exploit code directly onto a compromised host. This question focuses on detecting these transfers by searching for filenames that match common exploit naming conventions (e.g., 'cve-2025-1234.py', 'poc.sh') or by matching file hashes against a known list of public exploits. Correlating the destination host with identity data is critical to filter out legitimate activity by security researchers or developers.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Web proxies
  - Network taps at egress points
  - Endpoint devices
  - File servers
  - Active Directory
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH files.log for filename matching regex 'cve-[0-9]{4,}-[0-9]{4,}' OR hash in known_exploit_hashes
      GET destination_host from file event
      LOOKUP host's user in Active Directory
      IF user NOT IN authorized_security_group
        ALERT on user, host, and file
- question: Has a host downloaded a file with a MIME type that is unusual for that specific host or its peer group?
  context: This question uses behavioral analysis to spot anomalies. Every host and user group (e.g., Finance, HR) has a typical pattern of file downloads. If a host in the Finance department, which normally only downloads PDFs and spreadsheets, suddenly downloads a Python script or a Perl module, it represents a significant deviation from baseline behavior that warrants investigation.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Web proxies
  - Network taps at egress points
  - Endpoint devices
  - File servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MAINTAIN baseline of downloaded MIME types per host and per peer group
      FOR each new file download
        IF MIME type is rare for host AND rare for its peer group
          ALERT on anomalous download activity
- question: Can a deep learning model detect anomalous file download sequences on a host that might indicate exploit acquisition?
  context: This question proposes using a more advanced behavioral model, an LSTM autoencoder, to learn the normal sequence and timing of a host's file downloads. An adversary acquiring an exploit might download an unusual file type from an unusual source in rapid succession. This activity would create a sequence that the model, trained on benign data, cannot accurately reconstruct, resulting in a high reconstruction error and triggering an alert.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Web proxies
  - Network taps at egress points
  - Endpoint devices
  - File servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each host, feed sequence of file download events into a pre-trained LSTM autoencoder
      CALCULATE reconstruction error for the sequence
      IF reconstruction_error > anomaly_threshold
        ALERT on host for anomalous download behavior
- question: Are we observing a sudden spike in inbound connection attempts from many different sources to a specific port, especially one tied to a newly disclosed vulnerability?
  context: When a new, remotely exploitable vulnerability is disclosed, adversaries often begin mass-scanning the internet to find vulnerable systems. This question aims to detect this scanning activity by looking for a large number of unique source IPs attempting to connect to a single destination port across the enterprise within a short time frame. This is a classic indicator of widespread, opportunistic exploitation attempts.
  answer_sources:
  - Zeek conn.log
  - External-facing firewalls
  - Demilitarized Zone (DMZ) network segments
  - Internet gateway
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT count(distinct source_ip) as unique_sources, destination_port
      FROM inbound_connections
      GROUP BY destination_port over 1 hour
      WHERE unique_sources > 50 AND destination_port IN cve_watchlist
      ALERT on potential mass scanning
- question: Has the hourly count of unique source IPs for any external-facing port exceeded its normal historical baseline?
  context: This question provides a statistical method to detect scanning activity without relying on a pre-defined watchlist. By creating a rolling 30-day baseline of normal traffic for each external port, we can statistically identify when the current volume of unique source IPs is abnormally high (e.g., exceeds the 99.5th percentile). This can help detect scanning for zero-day vulnerabilities or on non-standard ports.
  answer_sources:
  - Zeek conn.log
  - External-facing firewalls
  - Demilitarized Zone (DMZ) network segments
  - Internet gateway
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each external port
        CALCULATE 30-day baseline of unique_source_ips_per_hour
        GET current_hour_count
        IF current_hour_count > 99.5th percentile of baseline
          ALERT on anomalous traffic spike
- question: Can a time-series forecasting model predict and detect anomalous inbound traffic volumes indicative of scanning activity in near real-time?
  context: This question proposes a proactive, predictive approach using a time-series model like ARIMA. The model learns the normal minute-by-minute rhythm of inbound traffic to a critical port and forecasts the expected volume for the next minute. If the observed traffic significantly breaches the forecast's confidence interval, it provides an immediate, high-fidelity alert of an anomaly, such as the start of a scanning wave.
  answer_sources:
  - Zeek conn.log
  - External-facing firewalls
  - Demilitarized Zone (DMZ) network segments
  - Internet gateway
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each critical port
        APPLY pre-trained ARIMA model to per-minute unique source IP counts
        FORECAST expected volume and confidence interval for next minute
        IF observed_volume > upper_confidence_bound
          ALERT on predictive traffic anomaly
- question: Has a non-research host visited a vulnerability database, then a code repository, then downloaded a script, and finally executed that script within a short timeframe?
  context: This question describes a high-fidelity 'attack chain' for manual exploit acquisition. An actor researches a vulnerability, finds proof-of-concept code, downloads it, and runs it. By creating a stateful correlation rule that looks for this specific sequence of events (e.g., DNS query to vuln site -> DNS query to GitHub -> file download -> process creation) from a single host in a short window, we can detect this behavior with high confidence.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Developer environments
  - Web proxies
  - DNS Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE sequence: [DNS(vuln_site), DNS(repo_site), FileDownload(script), ProcessCreate(script)]
      FOR each host, track events over a 2-hour window
      IF event sequence matches defined pattern AND host NOT IN research_group
        ALERT on 'Exploit Acquisition' chain
- question: Has any user accumulated a high risk score based on a series of weighted actions like visiting rare domains, downloading scripts, and executing them?
  context: Instead of a rigid sequence, this question uses a flexible risk-scoring model. Individual suspicious actions (e.g., visiting a rare domain, downloading a script) are assigned a risk weight. These scores are summed for each user over a rolling time window. An alert is triggered when a user's score exceeds a statistical threshold (e.g., 3 standard deviations above their personal baseline), indicating a significant accumulation of risky behavior.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Developer environments
  - Web proxies
  - DNS Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE risk scores for actions (e.g., download_script: +10)
      FOR each user, sum risk scores over a 1-hour window
      COMPARE score to user's historical baseline
      IF current_score > (baseline + 3 * stdev)
        ALERT on high-risk user activity
- question: Can a machine learning model trained on normal user behavior sequences identify a user session that is highly unlikely and therefore suspicious?
  context: This question uses a Hidden Markov Model (HMM) to learn the normal transition probabilities between different user actions (e.g., the probability of 'process execution' following 'file download'). A sequence of actions corresponding to exploit acquisition would have a very low probability under a model trained on benign sessions. By calculating the likelihood of each user's real-time event sequence, we can flag sessions that are so improbable they are likely malicious.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - User workstations
  - Developer environments
  - Web proxies
  - DNS Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each user's stream of events
        APPLY pre-trained Hidden Markov Model
        CALCULATE log-likelihood of the event sequence
        IF log-likelihood is below anomaly threshold
          ALERT on anomalous user behavior sequence