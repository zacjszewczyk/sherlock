name: T1218: System Binary Proxy Execution
id: d8a2b5c7-9e4f-4d1a-8b3c-0e7f1a9b6d4e
description: >-
  Investigates whether adversaries are attempting to evade defenses by using trusted system binaries to execute malicious code. This playbook looks for signs of system binary proxy execution, such as rundll32.exe or msiexec.exe, being used to load remote objects or files matching known IOCs. It also checks for execution from uncommon directories, invocation by unusual parent processes like Office applications, anomalous network activity initiated by these binaries, and specific process chains like Office App -> Scripting Host -> System Binary.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known system binary proxies being executed with command-line arguments referencing files or URLs that match known indicators of compromise (IOCs)?
    context: >-
      This question aims to identify the most direct abuse of system binaries: using them to execute malicious code referenced by a file path or URL. By matching these artifacts (file hashes, URLs) against a threat intelligence feed, analysts can quickly detect known threats that leverage this evasion technique. This is a high-confidence, low-effort check for recognized malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1 (Process Creation)
      - Sysmon Event ID 7 (Image Load)
      - All Windows Endpoints and Servers; Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process_creation_events (Sysmon_ID=1, WinEvent_ID=4688)
          WHERE process_name IN ('rundll32.exe', 'regsvr32.exe', 'msiexec.exe')
          EXTRACT file_or_url from command_line
          LOOKUP hash(file) or url against threat_intel_feed
          RETURN events WHERE match_found
  - question: Can we prioritize IOC matches related to system binary proxy execution by scoring the rarity of the parent process and user context?
    context: >-
      Not all IOC hits are equal. An IOC triggered by a rare parent process (e.g., winword.exe launching rundll32.exe) or a highly privileged user is more suspicious than one from a common system process. This question focuses on enriching IOC alerts with contextual prevalence data to create a risk score, allowing analysts to focus on the highest-risk events and reduce alert fatigue.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1 (Process Creation)
      - Sysmon Event ID 7 (Image Load)
      - All Windows Endpoints and Servers; Threat Intelligence Platform
    range: last 30 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each IOC_hit from previous query
          CALCULATE prevalence of parent_process_name across enterprise in last 30 days
          CALCULATE prevalence of user_account across enterprise in last 30 days
          SCORE risk based on inverse prevalence (rarer = higher score)
          RETURN IOC_hit with risk_score > threshold
  - question: Can we use a machine learning model to automatically classify and triage alerts for system binary proxy execution based on historical analyst feedback?
    context: >-
      This question explores using machine learning to automate the triage process for IOC alerts. By training a model on previously labeled true and false positives, the system can learn the subtle characteristics of malicious versus benign activity. This helps prioritize new alerts by predicting their likelihood of being a true positive, enabling security teams to respond faster to the most critical threats.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1 (Process Creation)
      - Sysmon Event ID 7 (Image Load)
      - All Windows Endpoints and Servers; Threat Intelligence Platform
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each new IOC_alert
          EXTRACT features (process_lineage, user, host_criticality, parent_prevalence)
          INPUT features into trained_classifier_model (e.g., Gradient Boosting)
          PREDICT classification (true_positive_probability)
          RETURN alert with probability > confidence_threshold
  - question: Is a system binary proxy loading a file from an atypical or user-writable directory like Temp, Public, or PerfLogs?
    context: >-
      Adversaries often drop malicious payloads into world-writable or less-monitored directories to execute them via a proxy binary. This question uses a rule-based approach to flag executions from suspicious locations such as temporary folders, public user directories, or unusual network shares. This method is effective for catching common TTPs where adversaries stage files in predictable, non-standard locations.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - File systems of all Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process_creation_events (Sysmon_ID=1, WinEvent_ID=4688)
          WHERE process_name IN ('rundll32.exe', 'mshta.exe')
          AND command_line CONTAINS ('\\AppData\\Local\\Temp\\', '\\Users\\Public\\', 'C:\\PerfLogs\\')
          RETURN matching_events
  - question: Is a system binary proxy loading a file from a directory that is statistically rare for that specific binary across the enterprise?
    context: >-
      This question moves beyond a static list of "bad" directories and uses statistical analysis to find anomalies. By building a historical baseline of which directories a specific proxy binary (like rundll32.exe) normally loads files from, we can flag any execution that deviates from this norm. This can uncover novel or targeted attacks that use locations not on a predefined blocklist.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - File systems of all Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          BASELINE directory_prevalence for each proxy_binary over last 90 days
          SEARCH new process_creation_events
          FOR each event
          IF directory in command_line is in bottom 5th percentile of prevalence for that binary
          RETURN event as anomalous
  - question: Can we identify anomalous system binary executions by clustering their command-line features and flagging outliers?
    context: >-
      This question uses unsupervised machine learning to find unusual execution patterns without prior knowledge of what is "bad". By clustering command lines based on features like directory paths and arguments, we can identify normal groups of behavior. Any execution that doesn't fit into a well-established cluster (i.e., is an outlier or part of a very small cluster) is considered suspicious and worthy of investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - File systems of all Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          EXTRACT features (directory_path, file_extension, arguments) from command_lines
          APPLY clustering algorithm (e.g., DBSCAN) to features
          ANALYZE clusters with low member counts
          FOR new executions, IDENTIFY if they are outliers or belong to a sparse cluster
          RETURN anomalous executions
  - question: Is a system binary proxy being launched directly by a Microsoft Office application or a web browser?
    context: >-
      Legitimate parent-child process relationships are typically predictable. A web browser or Office application spawning a system proxy like rundll32.exe is highly suspicious and a common pattern for macro-based or drive-by-download attacks. This question uses a simple but effective rule to whitelist expected behavior and alert on this specific, high-risk parent-child relationship.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - All Windows Endpoints and Servers, particularly those with Microsoft Office Suite or web browsers installed.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process_creation_events (Sysmon_ID=1, WinEvent_ID=4688)
          WHERE child_process IN ('rundll32.exe', 'mshta.exe', 'regsvr32.exe')
          AND parent_process IN ('winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe', 'chrome.exe', 'firefox.exe', 'msedge.exe')
          RETURN matching_events
  - question: Are there new or extremely rare parent-child process relationships involving a system binary proxy?
    context: >-
      This question uses frequency analysis to detect anomalous parent-child process relationships. By baselining all parent-child pairs over a 30-day period, the system can automatically flag any new relationship that has never been seen before, or any relationship that occurs so infrequently (e.g., less than 0.1% of the time) that it represents a significant deviation from normal operations.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - All Windows Endpoints and Servers, particularly those with Microsoft Office Suite or web browsers installed.
    range: last 30 days
    queries:
      - technology: pseudocode
        query: >-
          BASELINE frequency of all parent-child pairs over last 30 days
          FOR each new process_creation event involving a proxy_binary
          IF parent-child pair is new OR frequency < 0.1%
          RETURN event as anomalous
  - question: Can graph analysis reveal system binary proxy executions that bridge otherwise disconnected software communities, such as an Office app interacting with an OS service?
    context: >-
      This question applies graph theory to model the entire enterprise's process activity. Normal software behavior forms distinct "communities" or clusters in the graph (e.g., Office apps, OS services). An attack often manifests as an anomalous edge connecting two separate communities. This advanced technique can detect sophisticated attacks that create unusual process chains.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - All Windows Endpoints and Servers, particularly those with Microsoft Office Suite or web browsers installed.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          BUILD process relationship graph using ProcessGUIDs
          APPLY community detection algorithm (e.g., Louvain) to identify clusters
          FOR new process_creation events
          IF the event creates an edge between two distinct communities
          SCORE event as highly anomalous and RETURN
  - question: Is a system binary proxy like regsvr32.exe or cmstp.exe making an outbound network connection?
    context: >-
      Certain system binaries, like `regsvr32.exe` and `cmstp.exe`, are often abused to download and execute malicious payloads. While some may have legitimate network capabilities, an outbound connection to a non-internal IP address is highly suspicious. This question uses a behavioral rule to join process and network data to detect when these specific proxies 'phone home'.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Windows Event ID 4663
      - Sysmon Event ID 3 (Network Connection)
      - Sysmon Event ID 11 (File Create)
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          JOIN process_events (Sysmon_ID=1) with network_events (Sysmon_ID=3, Zeek) on process_guid
          WHERE process_name IN ('regsvr32.exe', 'cmstp.exe')
          AND destination_ip is not RFC1918
          RETURN matching_events
  - question: Is a system binary proxy exhibiting network behavior that deviates significantly from its established baseline in terms of data volume, duration, or port entropy?
    context: >-
      This question focuses on detecting anomalous network activity by establishing a baseline of what is normal for each proxy binary. By monitoring metrics like bytes sent, connection duration, and the variety of destination ports, we can flag any execution whose network behavior deviates statistically (e.g., by more than 3 standard deviations) from its profile. This can catch C2 communication or data exfiltration.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Windows Event ID 4663
      - Sysmon Event ID 3 (Network Connection)
      - Sysmon Event ID 11 (File Create)
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          BASELINE network metrics (avg_bytes, duration, port_entropy) for each proxy_binary
          FOR each new network_connection from a proxy_binary
          IF any metric > (baseline_mean + 3 * baseline_std_dev)
          RETURN connection as anomalous
  - question: Can a machine learning model be used to classify outbound network connections from system binary proxies as benign or suspicious?
    context: >-
      This question leverages a supervised machine learning model to automatically assess the risk of network connections made by proxy binaries. By training on labeled data (e.g., from past incidents), the model can learn to distinguish between benign and malicious connections based on features like duration, data volume, and protocol state, providing a confidence score for analysts to prioritize their work.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Windows Event ID 4663
      - Sysmon Event ID 3 (Network Connection)
      - Sysmon Event ID 11 (File Create)
      - Zeek conn.log
      - Zeek http.log
      - Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each new network_connection from a proxy_binary
          EXTRACT features (duration, orig_bytes, resp_bytes, proto, conn_state)
          INPUT features into trained_classifier_model (e.g., Random Forest)
          PREDICT classification ('benign' or 'suspicious')
          RETURN connection with 'suspicious' prediction and high confidence_score
  - question: Has a process execution chain of Office App -> Scripting Host -> System Binary Proxy occurred within a short time window?
    context: >-
      This question looks for a classic attack chain used in phishing campaigns. A malicious document (Office App) executes a script (Scripting Host), which in turn uses a trusted system binary to download or run the final payload. Correlating these process creations by lineage (parent-child relationships) within a tight timeframe (e.g., 60 seconds) is a high-fidelity indicator of this specific attack pattern.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - All Windows Endpoints, especially those used by front-office personnel or executives.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH for process chains (using ParentProcessID or ProcessGUID) within a 60-second window
          WHERE Grandparent IN ('winword.exe', 'excel.exe')
          AND Parent IN ('cmd.exe', 'powershell.exe', 'wscript.exe')
          AND Child IN ('rundll32.exe', 'msiexec.exe')
          RETURN matching chains
  - question: Are we observing a statistically rare 3-process execution chain that matches the generic pattern of a user application spawning a script that then spawns a system binary?
    context: >-
      This question generalizes the previous one by looking for any rare process chain that fits a suspicious pattern, rather than just specific process names. By calculating the frequency of all 3-process chains across the enterprise, we can flag any chain that is highly unusual (e.g., seen less than 5 times) and matches the 'User App -> Script -> System Binary' model. This helps find novel variations of the attack pattern.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - All Windows Endpoints, especially those used by front-office personnel or executives.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CALCULATE frequency of all 3-process chains over last 90 days
          SEARCH for chains matching pattern 'User App -> Scripting Host -> System Binary'
          IF chain_frequency < 5
          RETURN chain as anomalous
  - question: Can a sequence-based machine learning model detect anomalous process execution chains that deviate from normal, learned behavior?
    context: >-
      This question applies advanced machine learning, specifically sequence modeling (like an LSTM autoencoder), to learn the "grammar" of normal process execution chains. The model is trained on benign sequences. When a new, malicious chain is observed, the model will struggle to reconstruct it, resulting in a high "reconstruction error." This error signals a significant deviation from normalcy and flags the chain as a high-priority anomaly.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1 (Process Creation)
      - All Windows Endpoints, especially those used by front-office personnel or executives.
    range: last 30 days
    queries:
      - technology: pseudocode
        query: >-
          TRAIN LSTM autoencoder model on benign process chains from last 30 days
          FOR each new observed process chain
          CALCULATE reconstruction_error using the trained model
          IF reconstruction_error > anomaly_threshold
          RETURN chain as anomalous