name: T1543.003: Windows Service
id: 5a1b9c8d-0e7f-4d6a-9b3c-2f8e1a7b0d5e
description: This playbook helps investigate if an adversary is establishing persistence or escalating privileges by creating, modifying, or hijacking Windows services. It focuses on identifying indicators such as the creation of services with known-malicious binaries or names, the use of Living-Off-the-Land Binaries (LOLBAS) in service commands, the installation of services in atypical directories, out-of-band service creations not aligned with change management, insecure modifications to high-privilege services, and anomalous process or network activity originating from service processes.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a newly created Windows service associated with a known malicious hash or service name?
  context: Adversaries often reuse malware or name services in predictable ways. This question aims to detect persistence attempts by correlating artifacts from new service creation events (the service name and the executable file's hash) against threat intelligence feeds. A match is a high-confidence indicator of compromise.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers
  - Critical Application Servers
  - Endpoint Workstations
  - Threat Intelligence Platforms
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each service creation event, GET service_name and file_path. HASH file_path to get file_hash. SEARCH threat_intel_feeds for service_name OR file_hash. ALERT on match.
- question: Is a newly created Windows service using a name or file path that is statistically rare across the enterprise?
  context: Legitimate software tends to install services with consistent names and in standard locations (e.g., Program Files). Adversaries may use randomized names or place binaries in unusual directories. This question identifies outliers by comparing new service names and paths against a baseline of normal activity, flagging those that are exceptionally uncommon (e.g., appear on less than 1% of endpoints).
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers
  - Critical Application Servers
  - Endpoint Workstations
  - Threat Intelligence Platforms
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service, GET service_name and file_path. CALCULATE frequency of service_name and file_path across all hosts. IF frequency < 1% threshold, ALERT.
- question: Does a machine learning model classify a new service as malicious based on its properties?
  context: This question applies a predictive model to score the likelihood of a new service being malicious. The model is trained on features like service name entropy, file path characteristics (depth, location), and binary properties (entropy, digital signature, imported functions). It provides a more nuanced detection capability than simple rule-based methods.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers
  - Critical Application Servers
  - Endpoint Workstations
  - Threat Intelligence Platforms
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service, EXTRACT features (name entropy, path depth, binary signature, etc.). INPUT features into classification_model. IF model_confidence is 'high' for 'malicious', ALERT.
- question: Is a new service configured to execute a Living-Off-the-Land Binary (LOLBAS) with suspicious command-line arguments?
  context: Adversaries abuse legitimate system utilities (LOLBAS) to execute malicious code, evade defenses, and blend in. This question looks for new services where the executable path points to a known LOLBAS (like powershell.exe or rundll32.exe) and the command includes high-risk arguments used for obfuscation, remote downloads, or inline execution.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers
  - Critical Application Servers
  - Endpoint Workstations
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service, PARSE ImagePath. IF executable is known_LOLBAS AND arguments contain suspicious_patterns ('-enc', 'http:', etc.), ALERT.
- question: Does the command-line of a new LOLBAS-based service exhibit unusually high length or entropy compared to a historical baseline?
  context: Malicious commands executed via LOLBAS are often long and obfuscated (e.g., Base64 encoded), resulting in higher character counts and entropy than benign commands. This question establishes a baseline for normal argument length and entropy for each LOLBAS and flags new service commands that exceed the 95th percentile, indicating potential obfuscation.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers
  - Critical Application Servers
  - Endpoint Workstations
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new LOLBAS service, CALCULATE argument_length and argument_entropy. IF length OR entropy > 95th percentile of baseline for that LOLBAS, ALERT.
- question: Does a machine learning classifier identify the command-line arguments of a new service as malicious?
  context: This question uses natural language processing techniques (Bag-of-Words, TF-IDF) to convert command-line arguments into numerical features. A classifier is then trained to distinguish between argument patterns seen in benign and malicious commands, allowing it to detect novel combinations of flags and arguments indicative of malicious activity.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Domain Controllers
  - Critical Application Servers
  - Endpoint Workstations
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service command, VECTORIZE arguments using TF-IDF. INPUT vectors into classification_model. IF model classifies as 'suspicious', ALERT.
- question: Is a new Windows service's executable located in an unauthorized or suspicious directory?
  context: Legitimate services are typically installed in protected system directories. Adversaries often drop their payloads in less-restricted locations like user profiles or temporary folders. This question checks if the binary path for a new service is on a denylist of atypical locations (e.g., C:\Users, C:\Windows\Temp), which is a strong indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Endpoint Workstations
  - Multi-user Terminal Servers
  - File Servers
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service, EXTRACT directory from file_path. IF directory is in denylist (e.g., 'C:\\Users\\', 'C:\\Windows\\Temp\\'), ALERT.
- question: Is a new service's executable located in a directory that is statistically rare for service installations across the environment?
  context: Beyond a static denylist, this question identifies anomalous service locations by calculating their prevalence. By flagging new services installed in parent directories that are exceptionally uncommon (e.g., used by less than 1% of all services), analysts can uncover adversary attempts to hide in obscure corners of the filesystem.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Endpoint Workstations
  - Multi-user Terminal Servers
  - File Servers
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service, GET parent_directory. CALCULATE frequency of parent_directory across all services. IF frequency < 1% threshold, ALERT.
- question: Does an anomaly detection model identify a new service's executable path as structurally different from known-good service paths?
  context: This question employs an unsupervised machine learning model (Isolation Forest) to learn the typical structure of legitimate service installation paths. The model can then score new paths, flagging those that are structurally anomalous (e.g., different depth, unusual character patterns) even if the path isn't on a denylist or statistically rare, catching more subtle deviations.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Endpoint Workstations
  - Multi-user Terminal Servers
  - File Servers
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new service, GET file_path. SCORE file_path with Isolation Forest model. IF anomaly_score is high, ALERT.
- question: Was a new auto-start service created on a host without a corresponding authorized change ticket or scheduled activity?
  context: In a managed environment, software installations and service creations should align with documented change management processes. This question correlates the creation of a new auto-start service with change management system logs (e.g., ServiceNow, Jira). A new service appearing outside of an approved change window is highly suspicious.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Change Management System Logs
  - Change Management Systems (e.g., ServiceNow, Jira)
  - Software Deployment Servers (e.g., SCCM)
  - Endpoint Workstations
  - SIEM Correlation Engine
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each new auto-start service event, GET hostname and timestamp. QUERY change_management_logs for approved_ticket for hostname near timestamp. IF no ticket found, ALERT.
- question: Was there a burst of auto-start service creation activity on a host that is anomalous compared to its own historical baseline?
  context: Adversary activity, such as a worm spreading or a toolkit being deployed, can cause a sudden spike in service installations. This question establishes a baseline of normal service creation frequency for each host (e.g., by hour of the day) and uses standard deviation to detect unusual bursts of activity that deviate significantly from the norm.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Change Management System Logs
  - Change Management Systems (e.g., ServiceNow, Jira)
  - Software Deployment Servers (e.g., SCCM)
  - Endpoint Workstations
  - SIEM Correlation Engine
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each host, COUNT new auto-start services per hour. CALCULATE mean and std_dev from baseline. IF current_hour_count > (mean + 3 * std_dev), ALERT.
- question: Did the number of new service installations deviate significantly from what a time-series forecasting model predicted?
  context: This question uses a more sophisticated time-series model (e.g., ARIMA) to forecast the expected number of service installations across the enterprise or for specific host groups. The model accounts for trends and seasonality. An observed count that falls far outside the model's prediction interval indicates a statistically significant anomaly that warrants investigation.
  answer_sources:
  - Windows Event ID 4697
  - Windows Event ID 7045
  - Change Management System Logs
  - Change Management Systems (e.g., ServiceNow, Jira)
  - Software Deployment Servers (e.g., SCCM)
  - Endpoint Workstations
  - SIEM Correlation Engine
  range: last 90 days
  queries:
  - type: pseudocode
    query: INPUT time-series of service installations into forecasting_model. GET predicted_count and confidence_interval. IF actual_count is outside interval, ALERT.
- question: Was the executable path or file of a critical, high-privilege service modified to an unauthorized or unsigned binary?
  context: Adversaries may hijack existing, trusted services to gain persistence and elevated privileges. This question focuses on protecting critical services by baselining their executable paths and file hashes. It alerts on any modification (to the registry ImagePath or the file on disk) that results in an unsigned or untrusted binary, indicating a likely service hijack.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Domain Controllers
  - Tier 0 Servers
  - Privileged Access Workstations (PAWs)
  - Registry Hives on Endpoints
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON registry/file modification of critical_service, GET new file_path/hash. CHECK digital signature of new binary. IF binary is unsigned or signer is not approved, ALERT.
- question: Was a critical service's configuration or binary modified by an unexpected process?
  context: Modifications to critical services should only be performed by trusted system processes like patch installers (e.g., TrustedInstaller.exe). This question identifies suspicious modifications by checking the name of the process that initiated the change. A modification coming from a non-standard process (e.g., explorer.exe, cmd.exe) is a statistical anomaly and a red flag for service hijacking.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Domain Controllers
  - Tier 0 Servers
  - Privileged Access Workstations (PAWs)
  - Registry Hives on Endpoints
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON modification of critical_service, GET modifying_process_name. IF process_name is not in allowlist ('TrustedInstaller.exe', etc.), ALERT.
- question: Does a machine learning model classify the modification of a service as malicious hijacking rather than legitimate patching?
  context: To reduce false positives from legitimate patching, this question uses a classification model to score all service modification events. By training on features like the modifying process, user context, time of day, and properties of the new binary, the model can learn to distinguish the subtle patterns of malicious hijacking from benign administrative activity.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Domain Controllers
  - Tier 0 Servers
  - Privileged Access Workstations (PAWs)
  - Registry Hives on Endpoints
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON service modification, EXTRACT features (process name, user, time, new binary properties). INPUT features into classification_model. IF model classifies as 'malicious', ALERT.
- question: Was a SYSTEM-level service modified by a user who is not a standard administrator?
  context: Modifying a service that runs with SYSTEM privileges should be restricted to a small set of administrative accounts. This question detects privilege escalation via misconfigured service permissions (ACLs). It triggers an alert if a service running as LocalSystem is modified by a user who does not belong to a standard administrative group (like Domain Admins), indicating abuse of excessive permissions.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Active Directory Logs
  - Application Servers
  - Legacy Systems
  - Endpoint Workstations
  - Active Directory Domain Controllers
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON service registry modification, IF service runs as SYSTEM, GET modifying_user. QUERY AD for user's groups. IF user not in admin_groups, ALERT.
- question: Was a service modified by a user from a group that has never historically modified that specific service?
  context: This question provides a more granular approach to detecting permission abuse by creating a behavioral baseline for each service. It profiles which user groups normally modify a given service. An alert is triggered if a modification is performed by a user from a group with no history of touching that service, flagging it as a high-confidence anomaly.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Active Directory Logs
  - Application Servers
  - Legacy Systems
  - Endpoint Workstations
  - Active Directory Domain Controllers
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON service modification, GET service_name and user_groups. CHECK baseline for modification_frequency of user_groups for service_name. IF frequency is 0%, ALERT.
- question: Did a user modify a service in a way that deviates from the behavior of their peer group?
  context: Users with similar job roles tend to perform similar actions. This question uses peer group analysis (clustering) to model the typical behavior for different user roles. It then flags a user modifying a service if that action is an outlier compared to the normal activities of their peers, suggesting a compromised account or insider threat.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Active Directory Logs
  - Application Servers
  - Legacy Systems
  - Endpoint Workstations
  - Active Directory Domain Controllers
  range: last 90 days
  queries:
  - type: pseudocode
    query: CLUSTER users into peer_groups based on activity. ON service modification by a user, CALCULATE deviation from their peer_group's normal behavior. IF deviation is high, ALERT.
- question: Did a high-privilege service process (services.exe, svchost.exe) spawn a suspicious child process or connect to a known-bad destination?
  context: High-privilege service hosts like `services.exe` and `svchost.exe` should not typically spawn interactive shells or connect to untrusted network locations. This question looks for classic signs of a compromised service by alerting when one of these parent processes either spawns a blacklisted child process (like cmd.exe) or initiates a network connection to a destination on a threat intelligence feed.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Internal Network Segments
  - DNS Servers
  - Internet Gateways
  - Endpoint Workstations
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON process creation, IF parent is 'services.exe' or 'svchost.exe' AND child is on denylist, ALERT. ON network connection, IF source process is service AND destination is on threat_feed, ALERT.
- question: Did a service process spawn a child process or make a network connection that is statistically rare for that service?
  context: This question moves beyond static denylists to find anomalous behavior by baselining the normal activity of each service. It flags any child process that has never been seen before for a given parent service. For network connections, it identifies rare destinations by looking at properties like ASN, country, or destination port, and also flags rare TLS fingerprints (JA3/JA3S) which can indicate unusual client software.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Internal Network Segments
  - DNS Servers
  - Internet Gateways
  - Endpoint Workstations
  range: last 90 days
  queries:
  - type: pseudocode
    query: ON process/network event from service, CHECK if child_process_name, destination_ASN, destination_port, or JA3S_hash are rare (<1% prevalence) in baseline for that service. IF rare, ALERT.
- question: Does a graph-based anomaly detection model identify a service's process and network activity as a structurally rare or suspicious chain of events?
  context: Adversary actions often form a chain (e.g., service spawns shell, shell connects to C2). This question models all process and network events in a graph database to analyze these relationships. Graph anomaly detection algorithms can then score entire subgraphs of activity, identifying chains that are structurally rare or contain anomalous components, even if each individual event is not suspicious on its own.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Internal Network Segments
  - DNS Servers
  - Internet Gateways
  - Endpoint Workstations
  range: last 90 days
  queries:
  - type: pseudocode
    query: MODEL process and network events as a graph. USE graph anomaly algorithm to score subgraphs (e.g., process->child->connection). IF subgraph score is high, ALERT.
- question: Was a previously disabled or manual-start service abruptly reconfigured to auto-start and then immediately started?
  context: Adversaries may enable and start a dormant service to execute their payload. This question uses a stateful detection rule to look for a specific, high-confidence sequence of events a service's start type being changed to 'Auto-Start', followed closely by the service entering a 'Running' state. This rapid sequence, especially for a service that is normally disabled, is highly indicative of malicious activity.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 7036
  - Windows Event ID 4688
  - Zeek conn.log
  - Critical Application Servers
  - Databases
  - Endpoint Workstations
  - SIEM Correlation Engine
  range: last 90 days
  queries:
  - type: pseudocode
    query: TRIGGER on sequence (1) service start_type changed to 'Auto' -> (2) same service state becomes 'Running', within 5 minutes. IF sequence occurs, ALERT.
- question: Did a service undergo a sequence of state changes and actions that is historically improbable?
  context: This question builds on the previous one by calculating the historical probability of specific event chains for each service. By looking at the transitional probability of a multi-step sequence (e.g., StartType changed, then Service Started, then Anomalous Child Process spawned), analysts can identify and score event chains that almost never occur during legitimate operations, providing a data-driven way to find suspicious behavior.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 7036
  - Windows Event ID 4688
  - Zeek conn.log
  - Critical Application Servers
  - Databases
  - Endpoint Workstations
  - SIEM Correlation Engine
  range: last 90 days
  queries:
  - type: pseudocode
    query: FOR each service, CALCULATE probability of event sequence (e.g., config_change -> start -> anomalous_child). IF observed sequence has very low historical probability, ALERT.
- question: Did a Hidden Markov Model (HMM) detect an improbable sequence of state transitions and events for a service?
  context: This question employs a sophisticated statistical model (HMM) to learn the legitimate lifecycle of services, including their states (e.g., Disabled, Running) and the events associated with them. An adversary forcing an improbable state transition (like from Disabled directly to Auto-Running) followed by an anomalous event (like spawning a shell) would be recognized by the HMM as a very low-probability sequence, allowing for the detection of complex, multi-stage attacks.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Windows Event ID 7036
  - Windows Event ID 4688
  - Zeek conn.log
  - Critical Application Servers
  - Databases
  - Endpoint Workstations
  - SIEM Correlation Engine
  range: last 90 days
  queries:
  - type: pseudocode
    query: TRAIN HMM on legitimate service event sequences. FEED new event sequences into HMM. IF sequence probability is below threshold, ALERT.