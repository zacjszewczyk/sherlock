name: T1550.002: Pass the Hash
id: 2b81f27e-c246-448f-a29f-34988f80415d
description: This playbook helps investigate whether an adversary is bypassing authentication mechanisms or moving laterally using stolen NTLM hashes (Pass-the-Hash). It focuses on identifying suspicious NTLM network logons (LogonType 3) by correlating them with various contextual clues. These clues include logons from IPs on threat lists, logons followed by rapid service or process creation with high-entropy or malicious names, network logons from hosts where the user has not recently logged in interactively, machine account logons from non-standard servers, and first-time user-host access patterns. The playbook also addresses lateral movement by looking for logons to high-value assets from unauthorized workstations, logon chains across multiple hosts, fan-out activity to numerous destinations, and the characteristic sequence of an Overpass-the-Hash attack where an NTLM logon is immediately followed by a Kerberos ticket request.
type: technique
related:
  - TA0005: Defense Evasion
  - TA0008: Lateral Movement
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: "Are there any NTLM network logons (LogonType 3) where the source or destination IP address matches a known malicious IP from threat intelligence or internal watchlists?"
    context: "This question aims to detect Pass-the-Hash attempts by cross-referencing network logon events with known indicators of compromise. An NTLM logon involving an IP address associated with previous malicious activity is a strong signal that an adversary's infrastructure is interacting with the environment, potentially using stolen credentials. A direct match should be treated as a high-confidence alert."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Threat Intelligence Feed
      - Domain Controllers
      - Member Servers
      - Threat Intelligence Platforms
      - SIEM
      - Network Egress/Ingress Points
    range: "last 90 days"
    queries:
      - query_name: "Symbolic IP Match on NTLM Logon"
        query_language: "pseudocode"
        query: |
          FOR each NTLM LogonType 3 event (EventID 4624)
            CHECK if event.Source_IP OR event.Destination_IP in Threat_Intelligence_Watchlist
            IF true, ALERT
  - question: "Are there any NTLM network logons with an unusually high risk score based on the reputation of the source and destination IP addresses?"
    context: "This question moves beyond simple blocklisting to a more nuanced, risk-based approach. By scoring logons based on IP reputation (e.g., how many threat feeds an IP appears on), we can identify connections that are statistically unusual and high-risk. An alert on a score exceeding the 95th percentile suggests a logon is significantly riskier than the vast majority of network logons and may indicate a PtH attempt from a suspicious source."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Threat Intelligence Feed
      - Domain Controllers
      - Member Servers
      - Threat Intelligence Platforms
      - SIEM
      - Network Egress/Ingress Points
    range: "last 90 days"
    queries:
      - query_name: "Statistical IP Risk Score on NTLM Logon"
        query_language: "pseudocode"
        query: |
          FOR each NTLM LogonType 3 event
            CALCULATE RiskScore based on IP_reputation(Source_IP) and IP_reputation(Destination_IP)
          COMPUTE 95th_percentile of all RiskScores over last 90 days
          FOR each new NTLM LogonType 3 event
            IF event.RiskScore > 95th_percentile, ALERT
  - question: "Have any NTLM network logons been classified as highly likely to be malicious by a machine learning model?"
    context: "This question leverages a predictive model to identify likely Pass-the-Hash attempts. By training a model on features like IP reputation, user privileges, and historical connection data, the system can learn the complex patterns that distinguish malicious logons from benign ones. A prediction probability above a high threshold (e.g., 85%) serves as a sophisticated alert that synthesizes multiple weak signals into one high-confidence finding."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Threat Intelligence Feed
      - Domain Controllers
      - Member Servers
      - Threat Intelligence Platforms
      - SIEM
      - Network Egress/Ingress Points
    range: "last 90 days"
    queries:
      - query_name: "ML Malicious Logon Classification"
        query_language: "pseudocode"
        query: |
          FOR each NTLM LogonType 3 event
            EXTRACT features (IsSourceOnThreatList, UserPrivilegeLevel, etc.)
            PREDICT probability = ML_Model.predict(features)
            IF probability > 0.85, ALERT
  - question: "Has a network logon been followed within 5 minutes by the creation of a service or process with a name matching known malicious tools?"
    context: "Adversaries using PtH often immediately create a service or process on the target system for remote execution. This question looks for that specific sequence of events, using pattern matching for well-known malicious service names (like 'PSEXESVC' used by PsExec) or command-line arguments from common hacking tools. A match provides strong evidence of post-compromise activity immediately following lateral movement."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Zeek dce_rpc.log
      - Zeek smb_files.log
      - Authentication, process creation, and service creation logs from all servers and workstations; network traffic inspection points.
    range: "last 90 days"
    queries:
      - query_name: "Malicious Service/Process after NTLM Logon"
        query_language: "pseudocode"
        query: |
          WHEN NTLM LogonType 3 event (A) to Target_Host
            LOOK for Service Creation (7045) or Process Creation (4688) event (B) on Target_Host within 5 minutes
            IF B.ServiceName MATCHES regex('PSEXESVC') OR B.CommandLine MATCHES regex('impacket|mimikatz')
            THEN ALERT
  - question: "Following a network logon, has a service or named pipe been created with a name that has a statistically anomalous high entropy?"
    context: "To evade signature-based detection, malicious tools often generate random names for services or pipes. These random names typically have high Shannon entropy compared to human-readable, legitimate names. This question aims to detect such tools by calculating the entropy of new service/pipe names created after a logon and flagging any that are statistical outliers, indicating likely machine-generated names."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Zeek dce_rpc.log
      - Zeek smb_files.log
      - Authentication, process creation, and service creation logs from all servers and workstations; network traffic inspection points.
    range: "last 90 days"
    queries:
      - query_name: "High Entropy Service Name after NTLM Logon"
        query_language: "pseudocode"
        query: |
          ESTABLISH baseline entropy for service/pipe names
          WHEN NTLM LogonType 3 event to Target_Host
            LOOK for new Service/Pipe creation on Target_Host
            CALCULATE entropy of new Service/Pipe name
            IF entropy > (baseline_mean + 3 * baseline_stdev) OR entropy > 4.0
            THEN ALERT
  - question: "Has a machine learning model detected an anomalous sequence of events following a network logon, such as a logon followed by high-entropy service creation?"
    context: "This question uses a sequence analysis model to understand the 'normal story' of what happens after a user logs on. The model learns common event sequences. An attack, like PtH followed by remote code execution, creates a sequence that deviates significantly from this learned norm (e.g., network logon -> create random service -> spawn command shell). The model flags these rare and suspicious sequences."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Zeek dce_rpc.log
      - Zeek smb_files.log
      - Authentication, process creation, and service creation logs from all servers and workstations; network traffic inspection points.
    range: "last 90 days"
    queries:
      - query_name: "ML Anomalous Event Sequence after NTLM Logon"
        query_language: "pseudocode"
        query: |
          FOR each event stream per host
            INPUT sequence [Logon, ServiceCreate, ProcessCreate, ...]
            CALCULATE anomaly_score = Sequence_Model.predict(sequence)
            IF anomaly_score > threshold
            THEN ALERT on the anomalous sequence
  - question: "Are there NTLM network logons (LogonType 3) from a user on a source host where that same user has not had a recent interactive logon (LogonType 2 or 10)?"
    context: "This question seeks to identify a classic Pass-the-Hash indicator. A user's hash might be stolen and used for network access from a host they are not actively, interactively logged into. By checking for a preceding interactive logon (local or RDP) by the same user on the source machine within a 24-hour window, we can flag network logons that lack this expected context, suggesting the credential was used without the user's presence."
    answer_sources:
      - Windows Event ID 4624
      - Centralized authentication logs (Windows Event ID 4624) from all domain-joined workstations and servers.
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Check for Missing Interactive Logon"
        query_language: "pseudocode"
        query: |
          FOR each successful NTLM LogonType 3 event for User U from Source S
            QUERY logs on Source S for successful LogonType 2 or 10 for User U in last 24 hours
            IF no such event exists, ALERT
  - question: "Are there users whose ratio of network logons to interactive logons has dropped dramatically?"
    context: "This question analyzes user logon behavior statistically. A legitimate user's activity typically involves a mix of interactive (Type 2/10) and network (Type 3) logons. If an adversary steals a user's hash, they will generate many network logons without corresponding interactive sessions, causing the ratio to plummet. Monitoring this ratio and alerting on significant drops can reveal accounts being used for widespread lateral movement via PtH."
    answer_sources:
      - Windows Event ID 4624
      - Centralized authentication logs (Windows Event ID 4624) from all domain-joined workstations and servers.
    range: "last 90 days"
    queries:
      - query_name: "Statistical Analysis of Logon Type Ratio"
        query_language: "pseudocode"
        query: |
          FOR each User, establish baseline of (InteractiveLogons / NetworkLogons) ratio
          ON a daily basis, recalculate the ratio
          IF current_ratio < 5th_percentile of user's historical ratio, ALERT
  - question: "Has a clustering algorithm identified a group of network logons for a user that is not associated with any interactive logons?"
    context: "This question uses machine learning to find anomalous groups of activity. By clustering logon events based on user, host, and logon type, normal activity will form clusters containing both interactive and network logons. A PtH attack campaign would create a distinct cluster of only network (Type 3) logons for a user, isolated from any interactive (Type 2/10) activity. The algorithm can automatically identify these suspicious, isolated clusters for investigation."
    answer_sources:
      - Windows Event ID 4624
      - Centralized authentication logs (Windows Event ID 4624) from all domain-joined workstations and servers.
    range: "last 90 days"
    queries:
      - query_name: "ML Clustering of Logon Types"
        query_language: "pseudocode"
        query: |
          CLUSTER all logon events using features [user, source_host, logon_type, time]
          IDENTIFY clusters containing only LogonType 3 events for a given user/host
          IF such a cluster is not associated with a LogonType 2/10 cluster for the same user/host, ALERT
  - question: "Has a machine account (name ending in '$') performed a network logon from a host that is not an authorized server like a Domain Controller?"
    context: "Machine accounts are for service-to-service communication, which typically follows predictable paths (e.g., member server to DC). An adversary might use a compromised machine account's hash to move laterally from an unexpected host, like a user workstation. This question uses a simple allow-list of authorized servers to detect when a machine account logon originates from an unauthorized source, which is highly indicative of abuse."
    answer_sources:
      - Windows Event ID 4624
      - Asset Inventory/CMDB
      - Domain Controller and Member Server Authentication Logs
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Check for Unauthorized Machine Account Logon"
        query_language: "pseudocode"
        query: |
          MAINTAIN allow-list of authorized admin server IPs
          FOR each NTLM LogonType 3 event (EventID 4624)
            IF event.AccountName ends with '$' AND event.Source_IP is NOT in allow-list
            THEN ALERT
  - question: "Are there machine account network logons originating from statistically rare source hosts?"
    context: "This question aims to find unusual machine-to-machine communication without relying on a manually maintained allow-list. By profiling the normal frequency of logons from all source hosts using machine accounts, we can establish a baseline. A logon from a host that very rarely, or never, uses a machine account for network logons would be a statistical outlier. This deviation from normal patterns could indicate a compromised workstation being used to pivot with a machine account hash."
    answer_sources:
      - Windows Event ID 4624
      - Asset Inventory/CMDB
      - Domain Controller and Member Server Authentication Logs
    range: "last 90 days"
    queries:
      - query_name: "Statistical Rarity of Machine Account Source"
        query_language: "pseudocode"
        query: |
          PROFILE frequency of machine account logons from every source host
          FOR each new machine account logon
            IF logon_frequency_for_source_host is in bottom 1st percentile
            THEN ALERT
  - question: "Has a machine learning model classified a machine account's logon activity as anomalous?"
    context: "This question uses a one-class SVM or similar anomaly detection model to learn the multi-faceted 'normal' behavior of machine account logons, considering features like source, destination, and time of day. The model creates a boundary around this normal activity. Any new logon that falls outside this boundary is flagged as an anomaly. This is effective at catching PtH attacks that use machine accounts in ways that are subtly different from established patterns but might not be caught by simple rules."
    answer_sources:
      - Windows Event ID 4624
      - Asset Inventory/CMDB
      - Domain Controller and Member Server Authentication Logs
    range: "last 90 days"
    queries:
      - query_name: "ML Anomaly Detection on Machine Account Logons"
        query_language: "pseudocode"
        query: |
          TRAIN one-class SVM model on legitimate machine account logon features [source, destination, time]
          FOR each new machine account logon
            IF model.classifies(logon) as anomaly
            THEN ALERT
  - question: "Has a user, especially a privileged one, performed a network logon between a source and destination host pair for the very first time?"
    context: "User access patterns, while dynamic, are often repetitive. An adversary moving laterally with a stolen hash will likely create connections between hosts that the legitimate user has never made before. This question establishes a long-term baseline (90+ days) of 'normal' source-destination pairs for each user and alerts on any new pair. Such an alert is a strong indicator of lateral movement, especially when a privileged account is involved."
    answer_sources:
      - Windows Event ID 4624
      - Centralized, long-term historical authentication logs (e.g., >90 days)
      - Identity and Access Management (IAM) database
      - CMDB
    range: "last 90 days"
    queries:
      - query_name: "Symbolic First-Time User-Host Pair Logon"
        query_language: "pseudocode"
        query: |
          FOR each user, MAINTAIN baseline of (Source_Host, Dest_Host) pairs from last 90 days
          FOR each new NTLM LogonType 3 event
            IF (event.Source_Host, event.Dest_Host) pair is NOT in user's baseline
            THEN ALERT (escalate if user is privileged)
  - question: "Has a user's host access pattern changed significantly compared to their historical baseline?"
    context: "This question quantifies changes in a user's access behavior. Instead of just looking for a single new connection, it uses the Jaccard similarity index to compare the set of hosts a user accessed today with their historical set. A sharp drop in the similarity score indicates the user is suddenly accessing a very different set of machines. This could be legitimate (e.g., new project) but is also a key indicator of an account being used for broad lateral movement."
    answer_sources:
      - Windows Event ID 4624
      - Centralized, long-term historical authentication logs (e.g., >90 days)
      - Identity and Access Management (IAM) database
      - CMDB
    range: "last 90 days"
    queries:
      - query_name: "Statistical Change in User Access Patterns"
        query_language: "pseudocode"
        query: |
          FOR each user, create historical baseline set of accessed hosts
          ON a daily basis, create set of hosts accessed today
          CALCULATE Jaccard_Index(today_set, baseline_set)
          IF Jaccard_Index < 0.5, ALERT
  - question: "Has a link prediction model flagged a user-to-host logon as a highly improbable connection?"
    context: "This question treats the user-host logon history as a network graph and uses machine learning to predict likely future connections (links). A well-trained model can forecast that a user is likely to access certain hosts based on their role and past behavior. If a logon occurs that the model assigned a very low probability, it means the connection is highly unexpected and anomalous, making it a strong candidate for a malicious PtH-driven connection."
    answer_sources:
      - Windows Event ID 4624
      - Centralized, long-term historical authentication logs (e.g., >90 days)
      - Identity and Access Management (IAM) database
      - CMDB
    range: "last 90 days"
    queries:
      - query_name: "ML Link Prediction for User-Host Logon"
        query_language: "pseudocode"
        query: |
          MODEL user-host logons as a graph
          USE link prediction algorithm to forecast connection probabilities
          FOR each new logon
            IF predicted_probability for this (user, host) link is very low
            THEN ALERT
  - question: "Has a network logon occurred to a high-value asset from a workstation not on the authorized administrative source list?"
    context: "This is a critical defense-in-depth question. Access to high-value assets like Domain Controllers or critical database servers should be strictly controlled and originate only from designated secure administrative workstations or jump boxes. This query enforces that policy by alerting on any NTLM network logon to a high-value asset that comes from an unauthorized source IP, which is a major red flag for lateral movement."
    answer_sources:
      - Windows Event ID 4624
      - Asset Inventory/CMDB
      - High-Value Asset Inventory (CMDB)
      - Domain Controller Security Logs
      - Critical Server Security Logs
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Unauthorized Access to High-Value Asset"
        query_language: "pseudocode"
        query: |
          MAINTAIN list of High_Value_Asset_IPs
          MAINTAIN list of Authorized_Admin_IPs
          FOR each NTLM LogonType 3 event
            IF event.Destination_IP in High_Value_Asset_IPs AND event.Source_IP NOT in Authorized_Admin_IPs
            THEN ALERT
  - question: "Are there any network logons with an anomalously high risk score, calculated based on the criticality of the source and destination assets?"
    context: "This question provides a quantitative risk assessment of lateral movement. Not all lateral movement is equal; a logon from one workstation to another is less concerning than a logon from a workstation to a domain controller. By assigning criticality tiers to all assets and calculating a risk score for each connection (e.g., source_tier * destination_tier), we can statistically identify and alert on connections that are unusually risky compared to the norm."
    answer_sources:
      - Windows Event ID 4624
      - Asset Inventory/CMDB
      - High-Value Asset Inventory (CMDB)
      - Domain Controller Security Logs
      - Critical Server Security Logs
    range: "last 90 days"
    queries:
      - query_name: "Statistical Risk Scoring of Lateral Movement"
        query_language: "pseudocode"
        query: |
          ASSIGN criticality tier to each asset
          FOR each NTLM LogonType 3, CALCULATE RiskScore = SourceAsset.Tier * DestAsset.Tier
          COMPUTE 99th_percentile of all RiskScores
          IF new_logon.RiskScore > 99th_percentile, ALERT
  - question: "Has a machine learning model predicted a high risk score for a lateral movement NTLM logon?"
    context: "This question uses a supervised machine learning model to proactively identify high-risk lateral movement. The model is trained on various features, including the criticality of the source and destination assets, the privilege level of the user account, and the historical frequency of the connection path. It can learn complex relationships to predict the likelihood of a logon being part of a malicious lateral movement attempt, flagging those with a high predicted risk."
    answer_sources:
      - Windows Event ID 4624
      - Asset Inventory/CMDB
      - High-Value Asset Inventory (CMDB)
      - Domain Controller Security Logs
      - Critical Server Security Logs
    range: "last 90 days"
    queries:
      - query_name: "ML Prediction of High-Risk Lateral Movement"
        query_language: "pseudocode"
        query: |
          TRAIN classifier on features [SourceTier, DestTier, UserPrivilege, PathFrequency]
          FOR each new NTLM LogonType 3 event
            PREDICT risk_score = model.predict(event_features)
            IF risk_score > threshold, ALERT
  - question: "Has a network logon from a source to a target host been immediately followed by remote execution on the target?"
    context: "This question looks for the explicit 'logon then execute' pattern of lateral movement. After using PtH to gain access to a target machine, an attacker will almost immediately perform an action, such as creating a remote service, a scheduled task, or using WMI to run a process. This query correlates a successful NTLM logon with subsequent remote execution events (like process creation from services.exe or wmiprvse.exe) occurring within a short time window (e.g., 2 minutes)."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Windows Event ID 4698
      - Zeek dce_rpc.log
      - Endpoint Process Creation, Service, and Task Scheduler Logs
      - Network Inspection Points (for DCE/RPC traffic)
      - Server Authentication Logs
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Logon Followed by Remote Execution"
        query_language: "pseudocode"
        query: |
          WHEN NTLM LogonType 3 from Source S to Target T
            LOOK within 2 mins on T for Process Create with parent 'services.exe' or 'wmiprvse.exe'
            OR Service Create event from S
            OR Scheduled Task Create event from S
            IF found, ALERT
  - question: "Are there any source-target pairs where the time between network logon and remote execution is a statistical outlier?"
    context: "Automated lateral movement tools are efficient. The time delay between a successful PtH logon and the subsequent remote command execution is often very short and consistent. This question analyzes this time delta across all source-target pairs in the environment. If a specific pair exhibits a time delay that is a low-percentile outlier (i.e., extremely fast), it suggests the activity is automated and likely malicious."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Windows Event ID 4698
      - Zeek dce_rpc.log
      - Endpoint Process Creation, Service, and Task Scheduler Logs
      - Network Inspection Points (for DCE/RPC traffic)
      - Server Authentication Logs
    range: "last 90 days"
    queries:
      - query_name: "Statistical Analysis of Logon-to-Execution Time Delta"
        query_language: "pseudocode"
        query: |
          FOR each (Source, Target) pair, CALCULATE time delta between Logon and Remote_Execution
          IDENTIFY pairs where the time delta is in the lowest 1st percentile
          ALERT on these outlier pairs
  - question: "Has a sequence analysis model flagged a series of events as an anomalous lateral movement pattern?"
    context: "This question leverages a machine learning model trained on event sequences to identify attacks. Normal administrative activity has a certain rhythm and sequence. An attack, such as [NTLM Logon -> DCE/RPC Service Create -> Process Create from Service], creates an event sequence that is rare and structurally different. The model, trained on legitimate event streams, will flag this sequence as a high-scoring anomaly, indicating a likely lateral movement attack."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Windows Event ID 4698
      - Zeek dce_rpc.log
      - Endpoint Process Creation, Service, and Task Scheduler Logs
      - Network Inspection Points (for DCE/RPC traffic)
      - Server Authentication Logs
    range: "last 90 days"
    queries:
      - query_name: "ML Detection of Anomalous Lateral Movement Sequence"
        query_language: "pseudocode"
        query: |
          TRAIN sequence model on event streams per host
          FOR each new event sequence [event1, event2, event3, ...]
            CALCULATE anomaly_score = model.predict(sequence)
            IF anomaly_score > threshold AND sequence matches [Logon, SvcCreate, ProcCreate] pattern
            THEN ALERT
  - question: "Has a single user account or source host performed network logons to an unusually high number of unique destinations in a short time?"
    context: "This question aims to detect the 'fan-out' pattern characteristic of automated lateral movement scripts. After compromising an account, an attacker may use a script to attempt to log into dozens or hundreds of other machines in rapid succession to find one they can access. This query sets a simple threshold (e.g., >20 unique destinations in 10 minutes) to detect this brute-force style of lateral movement."
    answer_sources:
      - Windows Event ID 4624
      - Centralized Authentication Logs from all Endpoints and Servers
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Detection of Logon Fan-Out"
        query_language: "pseudocode"
        query: |
          FOR each 10-minute window
            COUNT unique destinations per source_IP/user for NTLM LogonType 3
            IF count > 20, ALERT
  - question: "Is any source host connecting to a number of unique destinations that is statistically significant compared to its own baseline?"
    context: "This question provides a more dynamic way to detect fan-out activity. Instead of a fixed global threshold, it establishes a baseline for each individual host's typical connection behavior. An alert is triggered only when a host's activity (number of unique NTLM destinations per hour) exceeds its own normal behavior by a significant margin (e.g., 3 standard deviations). This helps reduce false positives from naturally 'chatty' servers while still catching anomalous spikes from compromised hosts."
    answer_sources:
      - Windows Event ID 4624
      - Centralized Authentication Logs from all Endpoints and Servers
    range: "last 90 days"
    queries:
      - query_name: "Statistical Detection of Logon Fan-Out"
        query_language: "pseudocode"
        query: |
          FOR each source_host, establish baseline of unique_destinations_per_hour
          MONITOR this count in a sliding window
          IF current_count > (baseline_mean + 3 * baseline_stdev), ALERT
  - question: "Has a time-series forecasting model predicted a significant spike in the number of unique destinations for a source host?"
    context: "This is a sophisticated approach to detecting fan-out activity. A time-series model (like SARIMA) is used to learn the normal rhythm and seasonality of a host's connection patterns and forecast an expected range for its future activity. If the actual observed number of unique destinations suddenly and significantly exceeds the model's forecasted upper confidence bound, it's a strong mathematical signal of an anomalous spike consistent with automated lateral movement."
    answer_sources:
      - Windows Event ID 4624
      - Centralized Authentication Logs from all Endpoints and Servers
    range: "last 90 days"
    queries:
      - query_name: "ML-Based Fan-Out Anomaly Detection"
        query_language: "pseudocode"
        query: |
          FOR each source_host, train time-series model on unique destination counts
          FORECAST upper confidence bound for next time period
          IF observed_count > forecasted_upper_bound, ALERT
  - question: "Are there any network logons that violate the established network segmentation policy?"
    context: "This question operationalizes network architecture rules for threat detection. By codifying segmentation policies (e.g., User VLANs cannot directly access Database VLANs) and enriching logon events with network zone information, we can create high-fidelity alerts for any logon that crosses a forbidden boundary. This is a simple but powerful way to detect lateral movement that violates security design principles."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Network Flow Logs
      - Firewall Logs
      - Centralized Authentication Logs
      - Network Architecture Policies
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Network Segmentation Violation"
        query_language: "pseudocode"
        query: |
          DEFINE network segmentation rules (e.g., zone_A cannot connect to zone_B)
          FOR each NTLM logon event
            ENRICH with source_zone and destination_zone
            IF connection violates a defined rule, ALERT
  - question: "Have any statistically rare or unusually long chains of sequential network logons been observed?"
    context: "This question models lateral movement as a graph of connections. An attacker pivoting through multiple machines creates a 'chain' of logons (A -> B -> C). This query constructs the logon graph and analyzes it to find these chains. An alert is triggered if a chain is longer than a normal baseline (e.g., >2 hops) or if the specific path taken is statistically very rare, suggesting an attacker is forging a new path through the network."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Network Flow Logs
      - Firewall Logs
      - Centralized Authentication Logs
      - Network Architecture Policies
    range: "last 90 days"
    queries:
      - query_name: "Statistical Analysis of Logon Chains"
        query_language: "pseudocode"
        query: |
          CONSTRUCT directed graph of NTLM logons between hosts
          FIND all paths (chains) in the graph
          CALCULATE frequency and length of all paths
          IF new path is longer than baseline_max OR is statistically rare, ALERT
  - question: "Has anomaly detection on graph embeddings identified a host that has significantly changed its connection behavior?"
    context: "This question uses advanced machine learning to find compromised pivot points. A graph embedding algorithm (like Node2Vec) converts each host's position and connection patterns in the logon graph into a mathematical vector. When a host is compromised and used to pivot, it starts connecting to a new cluster of hosts, causing its vector representation to shift significantly. Anomaly detection on these vectors can identify hosts whose behavior has fundamentally changed, indicating a likely compromise."
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Network Flow Logs
      - Firewall Logs
      - Centralized Authentication Logs
      - Network Architecture Policies
    range: "last 90 days"
    queries:
      - query_name: "ML Graph Embedding Anomaly Detection"
        query_language: "pseudocode"
        query: |
          LEARN vector embeddings for each host based on logon graph
          MONITOR vectors for significant changes over time
          IF a host's vector shifts into an anomalous position, ALERT
  - question: "On a Domain Controller, has a user's successful NTLM network logon been followed within seconds by a Kerberos ticket request from the same user and IP?"
    context: "This question targets a specific, advanced variant of Pass-the-Hash called 'Overpass-the-Hash'. In this attack, an adversary uses a user's NTLM hash to authenticate to a DC (via NTLM) and then immediately requests a Kerberos TGT. This query creates a tight correlation rule on DCs to look for this exact sequence: a successful NTLM logon (Event 4624) followed within 10 seconds by a Kerberos TGT/Service Ticket request (Event 4768/4769) from the identical user and source IP."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Domain Controller Security Logs
    range: "last 90 days"
    queries:
      - query_name: "Symbolic Detection of Overpass-the-Hash"
        query_language: "pseudocode"
        query: |
          ON a Domain Controller:
          WHEN successful NTLM LogonType 3 (4624) for User U from IP I
            LOOK within 10 seconds for Kerberos TGT (4768) or Service Ticket (4769) request for User U from IP I
            IF found, ALERT
  - question: "Are there any source IPs whose time delay between NTLM logons to a DC and subsequent Kerberos requests is a low-percentile outlier?"
    context: "This question aims to statistically detect the automated nature of Overpass-the-Hash tools. A legitimate, complex process might involve an NTLM logon and a later Kerberos request, but an attack tool will perform the sequence almost instantaneously. By analyzing the time delay between these two events for all source IPs, we can flag any IP whose average delay is extremely short (e.g., < 1 second or in the 1st percentile), indicating the machine-speed execution of an attack tool."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4768
      - Windows Event ID 4769
      - Domain Controller Security Logs
    range: "last 90 days"
    queries:
      - query_name: "Statistical Analysis of NTLM-to-Kerberos Time Delay"
        query_language: "pseudocode"
        query: |
          FOR each source IP authenticating to a DC:
            CALCULATE average time delay between NTLM logon and subsequent Kerberos request
          FLAG any source IP whose average delay is a low-percentile outlier (e.g., < 1st percentile)
  - question: "Has a Bayesian network model flagged an authentication sequence on a DC as having an anomalously high probability of being an attack?"
    context: "This question uses a probabilistic model to detect Overpass-the-Hash. A Bayesian network can be trained on DC authentication logs to learn the conditional probabilities of different event sequences (e.g., what is the probability of a Kerberos request, given a preceding NTLM logon from the same user?). An attack sequence will result in a conditional probability that is anomalously high compared to normal behavior, which the model will flag."
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4678
      - Windows Event ID 4769
      - Domain Controller Security Logs
    range: "last 90 days"
    queries:
      - query_name: "ML Bayesian Network for Attack Sequence"
        query_language: "pseudocode"
        query: |
          TRAIN Bayesian network on DC authentication event sequences
          FOR each new sequence:
            CALCULATE P(Kerberos_Request | NTLM_Logon) for the given user/source
            IF this probability is anomalously high based on the model, ALERT