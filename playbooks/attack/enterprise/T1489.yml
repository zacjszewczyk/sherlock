name: T1489: Service Stop
id: e4a2b1c0-d3e4-4f5a-b6c7-d8e9f0a1b2c3
description: This playbook focuses on detecting an adversary's attempt to disrupt system availability by stopping services, a technique associated with impact. It looks for indicators such as the execution of service control commands (net stop, sc stop) by malicious processes or any process stopping critical security services (e.g., WinDefend, Sysmon). It also identifies suspicious behavior like a single user or host stopping numerous distinct services in a short time, or the targeted stoppage of data protection services (VSS, SQLWriter) followed by data deletion or exfiltration activities. Additionally, the playbook monitors for unauthorized modifications to a service's startup configuration to disable it, and flags anomalous spikes in service stop events that exceed host-specific or group-wide baselines.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a process known to be malicious, or any process, executed a command to stop a critical security service?
    context: This question aims to detect two primary scenarios. The first is when a process, whose hash is found on a threat intelligence watchlist, attempts to stop a service using common command-line tools like 'net stop', 'sc stop', or 'Stop-Service'. The second, higher-severity scenario is a defense evasion technique where any process, regardless of its reputation, attempts to stop a critical security service such as an antivirus ('WinDefend'), system monitor ('SysmonSvc'), or an Endpoint Detection and Response (EDR) agent ('MsSense'). Disabling these services is a common precursor to further malicious activity.
    answer_sources: Windows Event ID 4688, Windows Event ID 7036. Data should be collected from all managed endpoints and servers, especially security infrastructure servers hosting AV/EDR management consoles.
    range: last 90 days
    queries:
      - search: SIEM
        query: SEARCH process creation events (EID 4688) for 'net.exe', 'sc.exe', 'powershell.exe' with 'stop' arguments. JOIN with threat intel hash list. ALERT on match. OR, SEARCH service stop events (EID 7036) where service name is in critical service watchlist. ALERT on match.
  - question: Is a process using an unusually complex or rare command-line argument to stop a service, potentially indicating obfuscation?
    context: Adversaries often obfuscate commands to evade simple keyword-based detection. This question focuses on identifying such evasion by analyzing the statistical properties of command-line arguments. By establishing a baseline of normal command-line argument patterns and their complexity (entropy), we can flag outliers. A command that uses service-stop keywords but has an abnormally high entropy score (e.g., in the top 5th percentile) suggests that the attacker may be using randomization or other obfuscation methods to hide their actions.
    answer_sources: Windows Event ID 4688, Windows Event ID 7036. Data should be collected from all managed endpoints and servers, especially security infrastructure servers hosting AV/EDR management consoles.
    range: last 90 days
    queries:
      - search: Data Analytics Platform
        query: FOR each command line from process creation events (EID 4688) containing 'stop' keywords, CALCULATE argument entropy. IF entropy > 95th percentile of historical entropy for that parent process, ALERT for review.
  - question: Can a machine learning model classify a service stop command as malicious based on its execution context and characteristics?
    context: This question leverages machine learning to move beyond simple rules. By training a classification model (e.g., Random Forest) on a rich set of features from historical data (parent process, user, command structure, target service), the system can learn the subtle patterns that differentiate legitimate administrative actions from malicious activity. An alert from this model indicates a high-confidence prediction of malicious intent based on a holistic understanding of system behavior.
    answer_sources: Windows Event ID 4688, Windows Event ID 7036. Data should be collected from all managed endpoints and servers, especially security infrastructure servers hosting AV/EDR management consoles.
    range: last 90 days
    queries:
      - search: Machine Learning Model
        query: INPUT features (parent process, user, command args, target service) from events (EID 4688, 7036) into trained classification model. IF model prediction is 'malicious' with confidence > threshold, ALERT.
  - question: Has a single user or host stopped an unusually high number of distinct services in a very short time frame?
    context: While stopping a single service can be a normal administrative task, stopping many different services in quick succession from a single source is highly anomalous. This behavior often indicates an automated script or adversary attempting to broadly disrupt a system's functionality or disable multiple security tools at once. This question aims to detect this 'mass service stop' activity by counting distinct services stopped by a user or from a host within a 60-second window.
    answer_sources: Windows Event ID 4688, Windows Event ID 7036. Data should be collected from all managed endpoints and servers, with a focus on server groups hosting the same application (e.g., web farms, database clusters).
    range: last 90 days
    queries:
      - search: SIEM
        query: AGGREGATE service stop events (EID 7036, 4688) by user and source host. COUNT distinct services stopped. IF count > 5 within a 60-second window, TRIGGER alert.
  - question: Has a host experienced a statistically significant spike in service stop events compared to its normal baseline?
    context: This question seeks to identify anomalous bursts of service stop activity on a per-host basis. By establishing a dynamic baseline of normal activity (e.g., a 30-day moving average and standard deviation), we can detect sudden increases that deviate significantly from the norm. An alert is triggered if the number of service stops in a short interval (e.g., 5 minutes) exceeds a statistical threshold like the mean plus three standard deviations ($$ \mu + 3\sigma $$), indicating a potential attack or system issue.
    answer_sources: Windows Event ID 4688, Windows Event ID 7036. Data should be collected from all managed endpoints and servers, with a focus on server groups hosting the same application (e.g., web farms, database clusters).
    range: last 90 days
    queries:
      - search: SIEM / Data Analytics Platform
        query: FOR each host, CALCULATE 30-day hourly baseline (mean, std dev) of service stop events (EID 7036). IF count of events in a 5-minute interval > (mean + 3 * std dev), TRIGGER alert.
  - question: Does a cluster of service stop events indicate a concentrated burst of activity across time, hosts, and users?
    context: This question uses unsupervised machine learning to find 'hotspots' of service stop activity without relying on pre-defined thresholds. A density-based clustering algorithm like DBSCAN can analyze all service stop events, grouping them based on their proximity in time and across entities (hosts, users). A dense cluster represents a burst of activity that is abnormal, automatically identifying a potential 'mass service stop' event for an analyst to investigate.
    answer_sources: Windows Event ID 4688, Windows Event ID 7036. Data should be collected from all managed endpoints and servers, with a focus on server groups hosting the same application (e.g., web farms, database clusters).
    range: last 90 days
    queries:
      - search: Machine Learning Model
        query: APPLY DBSCAN clustering to service stop events using features (timestamp, hostname, user). IDENTIFY dense clusters. FLAG clusters as anomalous 'mass service stop' events.
  - question: Has a data protection service been stopped shortly before evidence of data destruction or exfiltration?
    context: This question looks for a common ransomware attack pattern: disabling defenses before causing impact. Adversaries often stop data protection services like Volume Shadow Copy ('VSS') or SQL Writer ('SQLWriter') to prevent recovery. This is frequently followed by deleting shadow copies, encrypting/deleting large volumes of files, or exfiltrating data. Detecting this specific sequence of events provides a high-confidence indicator of an active ransomware attack or data destruction attempt.
    answer_sources: Windows Event ID 7036, Windows Event ID 4688, Windows Event ID 4663, Zeek conn.log, Zeek files.log. Data should be collected from file servers, database servers, virtualization hosts, backup infrastructure servers, and network egress points.
    range: last 90 days
    queries:
      - search: SIEM
        query: TRIGGER on service stop (EID 7036) for 'VSS' or 'SQLWriter'. IF within 15 mins on same host, (a) vssadmin delete shadows (EID 4688) OR (b) file mods (EID 4663) > 1000 OR (c) outbound bytes (Zeek conn.log) > 100MB, TRIGGER critical alert.
  - question: Following the stop of a critical data service, did the host's outbound network traffic exceed its normal high-water mark?
    context: This question aims to detect data exfiltration that occurs immediately after an adversary disables a data protection service. By first establishing a baseline for normal peak outbound traffic for each host (e.g., the 99th percentile over 30 days), we can create a sensitive trigger. When a critical service like 'VSS' is stopped, the system enters a heightened monitoring state for that host. If its outbound traffic then exceeds its established maximum normal baseline, it strongly suggests data is being stolen.
    answer_sources: Windows Event ID 7036, Zeek conn.log. Data should be collected from file servers, database servers, virtualization hosts, backup infrastructure servers, and network egress points.
    range: last 90 days
    queries:
      - search: Data Analytics Platform
        query: FOR each host, CALCULATE 99th percentile of hourly outbound data (Zeek conn.log) over 30 days. ON service stop (EID 7036) for 'VSS' or 'SQLWriter', MONITOR host for 30 mins. IF outbound traffic in 5-min interval > 99th percentile baseline, ALERT.
  - question: Does the sequence of system events on a host match the pattern of a ransomware attack, specifically the transition from defense evasion to impact?
    context: This question uses a sophisticated state-based model (a Hidden Markov Model) to understand the narrative of an attack. The model is trained to recognize the typical stages of a ransomware attack. It ingests a real-time stream of various security events. An alert is triggered if the model detects a high-probability transition from a 'Service_Stop_Defense_Evasion' state (e.g., 'VSS' service is stopped) directly into an 'Impact_Data_Encryption' state (e.g., high volume of file modifications), indicating the attack is progressing as expected.
    answer_sources: Windows Event ID 7036, Windows Event ID 4688, Windows Event ID 4663, Zeek conn.log, Zeek files.log. Data should be collected from file servers, database servers, virtualization hosts, backup infrastructure servers, and network egress points.
    range: last 90 days
    queries:
      - search: Machine Learning Model
        query: FEED real-time events (EID 7036, 4688, 4663, Zeek) into trained HMM. IF model transitions from 'Service_Stop_Defense_Evasion' state to 'Impact_Data_Encryption' state with high probability, ALERT.
  - question: Has a service's configuration been modified to a disabled state or had its executable path changed by an unauthorized process?
    context: This question detects a persistence and defense evasion technique where an adversary permanently disables a service or hijacks it by changing its binary path. Legitimate changes are typically performed by a small set of OS or administrative tools (e.g., services.exe, patch management software). An alert is triggered if a registry key for a service (under HKLM\\SYSTEM\\CurrentControlSet\\Services\\) is modified by any process not on this allowlist. The severity is increased if this occurs shortly after the security logs were cleared.
    answer_sources: Windows Event ID 4657, Windows Event ID 7040, Windows Event ID 1102. Data should be collected from Domain Controllers, critical application servers, and endpoint workstations.
    range: last 90 days
    queries:
      - search: SIEM
        query: SEARCH for registry modifications (EID 4657) to 'Start' or 'ImagePath' values under HKLM\\...\\Services\\*. IF initiating process is NOT on allowlist, ALERT. INCREASE severity if preceded by log clear (EID 1102) within 1 hour.
  - question: Has a service configuration change occurred that is highly unusual based on the combination of who, what, where, and when?
    context: Legitimate service configuration changes often follow predictable patterns. This question seeks to find outliers by calculating a rarity score for each change event. It considers a combination of factors: the process making the change, the user account, the target service, and the time/day of the week. An event that has a highly unusual combination of these attributes (e.g., a non-IT user disabling a security service on a weekend via an unexpected process) would receive a high rarity score and be flagged for investigation.
    answer_sources: Windows Event ID 4657, Windows Event ID 7040. Data should be collected from Domain Controllers, critical application servers, and endpoint workstations.
    range: last 90 days
    queries:
      - search: Data Analytics Platform
        query: FOR each service config change (EID 7040/4657), CREATE a tuple (Process, User, Service, Day, Hour). CALCULATE rarity score based on historical frequency of the tuple. IF score > 98th percentile, ALERT.
  - question: Does a service configuration change deviate significantly from historically normal patterns, as identified by a neural network?
    context: This question uses an autoencoder neural network to learn the deep patterns of normal service configuration changes. The model is trained on historical data, learning to reconstruct legitimate events with very low error. When a new, live event is fed through the model, the model attempts to reconstruct it. If the event is anomalous (i.e., it doesn't fit the learned patterns), the reconstruction error will be high, triggering an alert. This can detect novel or complex deviations that rule-based systems might miss.
    answer_sources: Windows Event ID 4657, Windows Event ID 7040. Data should be collected from Domain Controllers, critical application servers, and endpoint workstations.
    range: last 90 days
    queries:
      - search: Machine Learning Model
        query: INPUT features (process, user, service, time) of a config change event (EID 4657/7040) into trained autoencoder. IF reconstruction error is high, FLAG as anomalous and ALERT.
  - question: Has a single service, such as Microsoft Exchange, stopped on a significant percentage of servers within a specific asset group?
    context: This question is designed to detect a targeted, widespread outage of a critical application. It moves beyond single-host analysis to a group-level perspective. By defining logical asset groups (e.g., all Exchange Servers), the system can monitor for a single service stopping concurrently across many hosts in that group. If more than a certain percentage (e.g., 20%) of the asset group reports the same service stopping within a short window, it signals a potentially coordinated attack or major operational failure affecting a critical business function.
    answer_sources: Windows Event ID 7036. Data should be collected from logically grouped assets such as all Domain Controllers, all Exchange servers, all VDI instances, or all hosts within a specific production subnet.
    range: last 90 days
    queries:
      - search: SIEM
        query: DEFINE asset groups (e.g., 'Exchange Servers'). IF a single service name is in stop events (EID 7036) from > 20% of hosts in its group within a 5-minute window, ALERT.
  - question: Has a single host experienced an abnormally high number of different services stopping within an hour?
    context: This question is looking for an unusually broad service disruption on a single machine. While a few services stopping might be normal, a large number of *unique* services entering a stopped state indicates a significant problem. By calculating a baseline for the hourly count of unique stopped services for each host (e.g., its 99th percentile over 30 days), we can alert when this host-specific threshold is breached, suggesting a potential compromise or severe instability on that machine.
    answer_sources: Windows Event ID 7036. Data should be collected from logically grouped assets such as all Domain Controllers, all Exchange servers, all VDI instances, or all hosts within a specific production subnet.
    range: last 90 days
    queries:
      - search: Data Analytics Platform
        query: FOR each host, CALCULATE baseline of hourly unique service stops (from EID 7036) over 30 days. IF current hourly count > 99th percentile of baseline, ALERT.
  - question: Has there been a sudden, enterprise-wide spike in service stop events that is not explained by normal operational patterns?
    context: This question provides a macro-level view of service stability across the entire organization. By applying time-series analysis to the total count of service stop events per minute, we can decompose the data into its normal trend and seasonal (daily/weekly) patterns. What remains is the residual, or unexplained, variation. An anomaly detection algorithm (like Isolation Forest) applied to this residual can effectively identify significant, coordinated spikes in service stops across the enterprise that are not part of normal business operations, potentially indicating a large-scale attack.
    answer_sources: Windows Event ID 7036. Data should be collected from logically grouped assets such as all Domain Controllers, all Exchange servers, all VDI instances, or all hosts within a specific production subnet.
    range: last 90 days
    queries:
      - search: Time-Series Analysis / ML
        query: AGGREGATE enterprise-wide service stops (EID 7036) per minute. DECOMPOSE time-series into trend, seasonality, and residual. APPLY anomaly detection (e.g., Isolation Forest) to residual component. ALERT on significant anomalies.