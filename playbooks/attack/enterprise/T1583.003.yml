name: T1583.003: Virtual Private Server
id: 5792d47f-8531-402a-9f5b-57771746f366
description: This playbook focuses on detecting adversarial use of Virtual Private Servers (VPS). Adversaries acquire VPS infrastructure for various operational purposes, such as hosting command and control (C2) servers, staging data for exfiltration, or launching attacks. Detection involves identifying connections from internal networks to suspicious external endpoints. Key indicators include traffic to IPs, domains, or certificates on threat intelligence feeds; anomalous connection patterns to VPS provider networks; use of C2-specific signatures like JA3/JA3S hashes; connections to newly registered or high-entropy domains; beaconing behavior characterized by regular connection intervals; and the use of suspicious TLS certificates, such as those that are self-signed or have very short validity periods.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Have any internal hosts connected to an external IP, domain, or service whose certificate is listed on a threat intelligence feed as known malicious VPS infrastructure?
  context: Adversaries frequently use compromised or leased Virtual Private Servers (VPS) as part of their operational infrastructure. By correlating outbound network traffic with threat intelligence feeds that specifically track malicious VPS infrastructure, analysts can proactively identify connections to known-bad destinations, providing an early warning of potential compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Zeek x509.log
  - Threat Intelligence Feed
  - Network Egress Points (e.g., Internet Gateway, Firewalls, Proxies)
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      JOIN (conn_logs, dns_logs, x509_logs) WITH threat_intel_vps_feed
      ON (destination_ip OR query_name OR certificate_hash)
      WHERE event_time > now() - 90d
      RETURN source_ip, destination_ip, query_name, timestamp
- question: Is any internal host connecting to Autonomous Systems (ASNs) of major VPS providers at an anomalously high rate compared to historical baselines?
  context: While connecting to a VPS provider is not inherently malicious, a sudden or unusually high volume of connections from a single host to such providers can indicate C2 activity or data staging. Baselining normal behavior and alerting on statistical deviations helps uncover this activity, even when the destination IPs are not on a threat list.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Zeek x509.log
  - Threat Intelligence Feed
  - Network Egress Points (e.g., Internet Gateway, Firewalls, Proxies)
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR each source_ip:
        current_connections = COUNT connections to VPS_ASNs in last 24h
        baseline = 95th_percentile(COUNT connections to VPS_ASNs per day over last 30d)
        IF current_connections > baseline THEN ALERT
- question: Can a machine learning model identify high-risk outbound connections to potential VPS infrastructure that may be used for C2?
  context: A supervised machine learning model can synthesize multiple weak signals—such as destination ASN, port, data volume, and domain reputation—into a single, high-fidelity risk score. This allows for the detection of novel threats that may not match specific IOCs or simple heuristic rules, providing a more robust and adaptive detection capability.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Zeek x509.log
  - Threat Intelligence Feed
  - Network Egress Points (e.g., Internet Gateway, Firewalls, Proxies)
  - Internal DNS Resolvers
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR each new_connection:
        features = EXTRACT (destination_asn, port, data_volume, domain_rep)
        risk_score = C2_CLASSIFICATION_MODEL.predict(features)
        IF risk_score > HIGH_RISK_THRESHOLD THEN ALERT
- question: Have any outbound connections exhibited JA3/JA3S hashes or service banners that match signatures of known Command and Control (C2) frameworks?
  context: Specific C2 frameworks (e.g., Cobalt Strike, Sliver) often use unique cryptographic libraries or server configurations, resulting in distinct fingerprints in the TLS handshake (JA3/JA3S) or server banner. Matching these signatures provides a high-fidelity indicator that a specific C2 tool is active on the network.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Network Egress Points (e.g., Internet Gateway, Firewalls, Proxies)
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH ssl_logs OR conn_logs
      WHERE ja3_hash IN known_c2_ja3_list
      OR ja3s_hash IN known_c2_ja3s_list
      OR service_banner IN known_c2_banner_list
      RETURN source_ip, destination_ip, ja3_hash, service_banner
- question: Are internal hosts making TLS connections using rare JA3/JA3S hashes, particularly to destinations within VPS provider networks?
  context: Common applications like web browsers or operating system services produce a limited set of well-known JA3 hashes. A JA3/JA3S hash that is rare across the enterprise suggests the use of a non-standard client, a common characteristic of malware. The suspicion level increases if the destination is also a known VPS provider.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Network Egress Points (e.g., Internet Gateway, Firewalls, Proxies)
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      frequency = CALCULATE frequency of each ja3_hash in last 30d
      SEARCH ssl_logs
      WHERE frequency[ja3_hash] < 0.001
      AND destination_ip_asn IN vps_provider_list
      RETURN source_ip, destination_ip, ja3_hash
- question: Can unsupervised clustering identify anomalous groups of TLS handshakes that are distinct from those generated by benign applications?
  context: Unsupervised machine learning, such as clustering algorithms, can group network connections based on their attributes (JA3, cipher suites, extensions) without pre-existing labels. This can automatically surface small, distinct clusters of activity that represent novel or unknown C2 channels, separating them from the large clusters of known, benign traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Network Egress Points (e.g., Internet Gateway, Firewalls, Proxies)
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      features = EXTRACT (ja3, ja3s, cipher_suites, extensions) from ssl_logs
      clusters = DBSCAN(features)
      INVESTIGATE small outlier clusters
- question: Are internal hosts connecting to domains hosted on dynamic DNS (DDNS) providers?
  context: Adversaries leverage DDNS providers to rapidly change the IP address associated with their C2 domain, complicating blocking efforts. Since most corporate environments have little to no legitimate business need for connecting to DDNS services, such connections are highly suspicious and warrant investigation.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS Data
  - Passive DNS Data
  - Internal DNS Resolvers
  - Network Egress Points (e.g., Internet Gateway, Firewalls)
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH dns_logs
      WHERE query_name ENDS WITH entry in ddns_provider_list
      AND EXISTS (conn_log where destination_ip == dns_answer)
      RETURN source_ip, query_name
- question: Are hosts connecting to domains that were registered very recently and have high-entropy (random-looking) names?
  context: Adversaries often use Domain Generation Algorithms (DGAs) to create a large number of pseudo-random domain names for C2, registering them just before use. The combination of a newly registered domain (e.g., < 30 days old) and a high Shannon entropy score is a strong indicator of algorithmically generated C2 infrastructure.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS Data
  - Passive DNS Data
  - Internal DNS Resolvers
  - Network Egress Points (e.g., Internet Gateway, Firewalls)
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR each new_domain in dns_logs:
        age = GET_WHOIS_REGISTRATION_AGE(new_domain)
        entropy = CALCULATE_SHANNON_ENTROPY(new_domain)
        IF age < 30 days AND entropy > 3.5 THEN ALERT
- question: Has there been a sudden, anomalous spike in DNS queries for a newly observed and suspicious domain?
  context: When a malware campaign begins or a botnet is activated, multiple infected hosts may start beaconing to a C2 server around the same time, causing a sudden surge in DNS queries for the C2 domain. A time-series forecasting model can detect this spike against a baseline of normal query volume for new domains.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - WHOIS Data
  - Passive DNS Data
  - Internal DNS Resolvers
  - Network Egress Points (e.g., Internet Gateway, Firewalls)
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      MODEL query volume for newly_observed_domains over time
      IF actual_query_volume for a domain > predicted_confidence_interval
      AND domain has suspicious_features
      THEN ALERT
- question: Are there any connections to known VPS provider IP ranges that use common C2 ports or exhibit a service mismatch (e.g., non-DNS traffic over port 53)?
  context: Adversaries may use well-known ports for C2 (e.g., 50050 for Cobalt Strike) or attempt to masquerade their traffic by tunneling it over a common port like 53 (DNS) or 443 (HTTPS). Detecting connections to VPS providers on these ports, especially when the observed protocol doesn't match the port's standard use, is a strong C2 indicator.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 3
  - Network Egress Points (e.g., Internet Gateway, Firewalls)
  - Monitored Endpoint Devices
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH conn_logs
      WHERE destination_ip in vps_provider_ranges
      AND (destination_port IN c2_port_list OR (destination_port=53 AND service != 'DNS'))
      RETURN source_ip, destination_ip, destination_port, service
- question: Have we observed any recurring connections to a single destination that exhibit highly regular timing (low jitter) or an anomalously large data transfer volume?
  context: Automated C2 implants often "heartbeat" at precise, regular intervals, resulting in a low standard deviation in the time between connections. This regularity is a classic sign of beaconing. Additionally, a sudden transfer of a large volume of data within one of these connections can be indicative of data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 3
  - Network Egress Points (e.g., Internet Gateway, Firewalls)
  - Monitored Endpoint Devices
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR each src_dst_pair:
        time_deltas = CALCULATE time differences between connections in last 24h
        jitter = STDEV(time_deltas)
        volume_zscore = ZSCORE(total_bytes vs 30d_baseline)
        IF jitter < 2.0 OR volume_zscore > 3.0 THEN ALERT
- question: Can a sequence analysis model (like an LSTM) detect deviations from a host's normal, learned pattern of network connections?
  context: Every host has a unique rhythm of network activity based on its user and software. A Long Short-Term Memory (LSTM) network can learn this normal sequence of connections. When a new process, such as a malware implant, begins communicating, it will likely deviate from this learned pattern, allowing the model to flag it as an anomaly.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 3
  - Network Egress Points (e.g., Internet Gateway, Firewalls)
  - Monitored Endpoint Devices
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR each new_connection from a host:
        predicted_next = LSTM_MODEL.predict(host's_connection_history)
        IF new_connection is a significant deviation from predicted_next THEN ALERT
- question: Are any hosts connecting to external services that are using self-signed TLS certificates?
  context: Adversaries often use self-signed certificates for their C2 infrastructure because they are free and easy to generate. While some internal enterprise services may use them, an external-facing service using a self-signed certificate is a significant red flag, as legitimate public services almost always use certificates from trusted Certificate Authorities (CAs).
  answer_sources:
  - Zeek x509.log
  - Zeek ssl.log
  - Network Egress Points with TLS Inspection Capabilities
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH x509_logs
      WHERE certificate_issuer == certificate_subject
      AND NOT source_ip IN approved_management_servers
      RETURN source_ip, destination_ip, certificate_subject
- question: Are hosts connecting to services using TLS certificates with an unusually short validity period, especially if the domain is also newly registered?
  context: Adversaries frequently use free Certificate Authorities (e.g., Let's Encrypt) to issue short-lived certificates (typically 90 days or less) for their disposable C2 infrastructure. Identifying certificates in the bottom percentile of validity periods, especially when correlated with other risk factors like a recent domain registration date, is an effective way to hunt for malicious servers.
  answer_sources:
  - Zeek x509.log
  - Zeek ssl.log
  - Network Egress Points with TLS Inspection Capabilities
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      validity_dist = CALCULATE distribution of all cert validity periods
      fifth_percentile = GET_PERCENTILE(validity_dist, 5)
      SEARCH x509_logs
      WHERE cert_validity_days < fifth_percentile
      AND domain_registration_age < 30 days
      RETURN source_ip, destination_ip, cert_validity_days
- question: Can a machine learning model identify malicious TLS certificates by analyzing their collective attributes?
  context: A classifier model can be trained on a variety of certificate features (validity period, issuer, key length, presence of SANs, self-signed status) to produce a holistic risk score. This approach can identify malicious certificates that may not trigger any single rule but are suspicious when their attributes are viewed in combination.
  answer_sources:
  - Zeek x509.log
  - Zeek ssl.log
  - Network Egress Points with TLS Inspection Capabilities
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR each new_certificate:
        features = EXTRACT (validity, issuer, key_length, is_self_signed)
        risk_score = CERT_CLASSIFICATION_MODEL.predict(features)
        IF risk_score > HIGH_RISK_THRESHOLD THEN ALERT