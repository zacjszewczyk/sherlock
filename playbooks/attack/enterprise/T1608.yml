name: T1608: Stage Capabilities
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook focuses on identifying if an adversary is staging or utilizing pre-positioned capabilities to support operations. This involves detecting outbound network connections to malicious infrastructure (C2 servers, malware distribution points), identifying suspicious network artifacts (rare User-Agents, JA3/JA3S hashes), flagging high-risk connection characteristics (non-standard ports, self-signed certs), analyzing domain characteristics for maliciousness (newly registered, DGA, typosquatting), and detecting ingress tool transfers from file-sharing sites.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts connecting to external destinations that match high-confidence threat intelligence feeds?
    context: This action aims to find direct connections to known malicious infrastructure like command and control (C2) servers or malware distribution points by correlating network logs with CTI. A match is a strong indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - DNS resolvers
      - Internal network segments
    range: last 90 days
    queries:
      - pseudocode: JOIN (conn.log.dest_ip, http.log.host, dns.log.query) WITH CTI_feed.indicator WHERE type IN ('C2', 'malware', 'phishing')
  - question: Are internal hosts connecting to rare external destinations that also appear on threat intelligence feeds?
    context: This action identifies connections to destinations that are both uncommon within the organization and listed on CTI feeds (even lower-confidence ones). This helps uncover targeted or emerging threats that might not be widespread.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - DNS resolvers
      - Internal network segments
    range: last 30 days
    queries:
      - pseudocode: 1. CALCULATE prevalence(destination) over 30d. 2. RISK_SCORE = combine(prevalence, CTI_match). 3. FIND destination WHERE prevalence < 5th_percentile AND CTI_match = true
  - question: Can we use a machine learning model to predictively identify malicious outbound connections that don't match known indicators?
    context: This question explores a proactive approach. By training a model on various network flow features, it's possible to identify suspicious outbound activity (potential C2 or malware downloads) that lacks a known signature, based on its characteristics.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - DNS resolvers
      - Internal network segments
    range: last 90 days
    queries:
      - pseudocode: 1. EXTRACT features (port, proto, bytes, duration, CTI_flag, IP_rep) from labeled flows. 2. TRAIN classifier (e.g., Gradient Boosting). 3. DEPLOY model to score new connections in real-time.
  - question: Are any outbound HTTP or TLS connections using headers or handshake artifacts (User-Agent, URI, JA3/JA3S) that match known malicious signatures?
    context: This seeks to identify adversary tooling by matching specific, known-bad artifacts in network traffic against a signature list. It's a high-fidelity method for detecting specific malware families or attack tools.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - Encrypted traffic inspection points
    range: last 90 days
    queries:
      - pseudocode: SCAN http.log, ssl.log FOR UserAgent, URI, JA3, JA3S IN malicious_signature_list
  - question: Are any hosts using extremely rare User-Agent strings or JA3/JA3S hashes within the organization?
    context: This question focuses on anomaly detection. Tools or malware used by an adversary are often rare compared to standard applications. Identifying connections with very uncommon artifacts can uncover novel or targeted threats.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - Encrypted traffic inspection points
    range: last 30 days
    queries:
      - pseudocode: 1. CALCULATE prevalence(UserAgent, JA3, JA3S) over 30d. 2. FIND connections WHERE prevalence < 1st_percentile
  - question: Can we identify previously unknown C2 channels by clustering HTTP and TLS connections based on their artifacts?
    context: This uses unsupervised machine learning to group connections by their characteristics (JA3, JA3S, etc.). Small, distinct clusters that don't map to known legitimate software may represent new or unknown adversary C2 infrastructure.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - Encrypted traffic inspection points
    range: last 90 days
    queries:
      - pseudocode: 1. CREATE feature vectors (JA3, JA3S, TLS_extensions, UserAgent). 2. APPLY clustering (e.g., DBSCAN). 3. ANALYZE small, outlier clusters.
  - question: Are there outbound connections exhibiting high-risk characteristics like services on non-standard ports, self-signed certificates, or connections to dynamic DNS providers?
    context: This question looks for well-known red flags often used by adversaries to evade detection or quickly stand up infrastructure. Each of these characteristics, while not malicious in isolation, is a strong indicator when combined or in certain contexts.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek x509.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: 1. ALERT if conn.log.service != standard_port. 2. ALERT if x509.log.issuer == x509.log.subject. 3. ALERT if dns.log.query IN dynamic_dns_provider_list.
  - question: Are any connections using TLS certificates with unusually short validity periods or connecting to statistically outlier ports for a given service?
    context: This question uses statistical baselining to find anomalies. Adversaries often use free, short-lived certificates. Comparing these against a baseline of normal activity can help surface suspicious connections.
    answer_sources:
      - Zeek conn.log
      - Zeek x509.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: 1. FIND certs WHERE validity_duration < 5th_percentile. 2. For each service, FIND connections to ports that are statistical outliers.
  - question: Is there a statistically significant spike in the daily count of new, unseen certificate issuers or subjects?
    context: This question uses time series analysis to detect campaign-level activity. A sudden increase in new certificate subjects/issuers could indicate an adversary registering a batch of new domains for an upcoming or ongoing operation.
    answer_sources:
      - Zeek x509.log
      - Egress points (e.g., Firewalls, Web Proxies)
      - DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: 1. MODEL daily count of new(issuer, subject) with time series (e.g., Holt-Winters). 2. ALERT on significant spikes above forecast.
  - question: Are internal hosts connecting to recently registered domains or domains that appear to be typosquatted versions of legitimate sites?
    context: This question addresses two common adversary techniques. Newly registered domains are often used for malicious campaigns, and typosquatting is used to trick users. Detecting connections to either type of domain is a strong signal of potential malicious activity.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS resolvers
      - Egress points (e.g., Firewalls, Web Proxies)
    range: last 90 days
    queries:
      - pseudocode: 1. For each domain, get WHOIS creation_date. ALERT if < 60 days. 2. For each domain, check Levenshtein distance <= 2 against critical_domain_list.
  - question: Are DNS queries being made for domains with high character entropy, suggesting they were algorithmically generated (DGA)?
    context: This question aims to detect malware C2 communication that uses Domain Generation Algorithms (DGA). These domains often appear random and have high entropy compared to human-readable domain names.
    answer_sources:
      - Zeek dns.log
      - DNS resolvers
      - Egress points (e.g., Firewalls, Web Proxies)
    range: last 90 days
    queries:
      - pseudocode: 1. For each domain, CALCULATE Shannon entropy. 2. COMPARE to baseline distribution. 3. FLAG domains with entropy > 95th_percentile.
  - question: Can a deep learning model proactively identify and classify DGA domains in real-time DNS traffic?
    context: This explores a more advanced method for detecting DGAs. A trained deep learning model (like an LSTM) can learn the patterns of algorithmically generated domains and classify them with high accuracy, catching variants that might evade simpler entropy checks.
    answer_sources:
      - Zeek dns.log
      - DNS resolvers
      - Egress points (e.g., Firewalls, Web Proxies)
    range: last 90 days
    queries:
      - pseudocode: 1. TRAIN LSTM model on labeled DGA/legit domains. 2. DEPLOY model to classify new domains from dns.log. 3. INVESTIGATE domains with confidence > 0.90.
  - question: Is there evidence of a file being downloaded from a file-sharing site and then immediately executed on a host?
    context: This question looks for a common attack chain, Ingress Tool Transfer. By correlating a network download event from a risky source with a subsequent process creation event on the same host, we can detect the staging and execution of malicious tools.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Endpoint devices
      - Egress points (e.g., Web Proxies)
    range: last 90 days
    queries:
      - pseudocode: CORRELATE (download from file-sharing_site) with (process_creation of downloaded_file) on same_host within 5 minutes.
  - question: Are users or hosts downloading file types or from source domains that are anomalous compared to their historical behavior?
    context: This question uses behavioral baselining to spot suspicious downloads. For example, an accountant suddenly downloading a compiled executable from GitHub is an anomaly that warrants investigation, even if the file itself isn't known-bad.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Endpoint devices
      - Egress points (e.g., Web Proxies)
    range: last 90 days
    queries:
      - pseudocode: 1. PROFILE normal file_type and source_domain per user/host. 2. IDENTIFY and ALERT on statistical deviations from the profile.
  - question: Can we detect malicious tool transfers by identifying anomalous sequences of endpoint events following a file download?
    context: This question moves beyond simple correlation to analyze the entire chain of events. An anomalous sequence like 'browser -> download -> unzip -> execute' is much more indicative of malicious activity and can be detected by a sequence analysis model.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Endpoint devices
      - Egress points (e.g., Web Proxies)
    range: last 90 days
    queries:
      - pseudocode: 1. MODEL normal event sequences post-download. 2. ALERT on anomalous sequences (e.g., browser -> download -> unzip -> execute).