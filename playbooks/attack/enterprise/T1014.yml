name: T1014: Rootkit
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook helps investigate if an adversary has deployed a rootkit to hide their presence and evade defenses. This is accomplished by looking for a variety of indicators, including: persistent, low-volume network beaconing indicative of command-and-control channels; the loading of unsigned, untrusted, or unusually located kernel drivers; the anomalous use of system utilities like sc.exe or bcdedit.exe to install services or drivers; discrepancies between network-level and endpoint-level connection logs which suggest hidden processes; direct modification of boot sectors or configurations via tools like bootsect.exe or raw disk access; and a sudden increase in system instability, application crashes, or the targeted termination of security tools.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any network connections or DNS queries to known rootkit C2 infrastructure?
    context: |
      This question aims to identify direct communication with malicious servers associated with rootkits. By comparing outbound network traffic against a threat intelligence feed of known command-and-control (C2) IPs and domains, we can quickly spot confirmed malicious activity, which is a high-fidelity indicator of a rootkit infection.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet Gateway, DNS Resolvers, Network Security Monitoring (NSM) Sensor Grid
    range: last 90 days
    queries:
      - pseudocode: "SIEM: `SELECT * FROM zeek_conn OR zeek_dns WHERE destination_ip IN (threat_intel_feed) OR destination_domain IN (threat_intel_feed)`"
  - question: Are any internal hosts exhibiting automated, periodic network beaconing behavior indicative of a rootkit?
    context: |
      This question seeks to find covert C2 channels that are not yet on threat intelligence feeds. Rootkits often use low-and-slow communication patterns to evade detection. By analyzing network connection metadata for high frequency, low data volume, and low jitter (consistent timing), we can identify automated, non-human traffic patterns that suggest a C2 beacon.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet Gateway, DNS Resolvers, Network Security Monitoring (NSM) Sensor Grid
    range: last 90 days
    queries:
      - pseudocode: "Analytics Platform: `SEARCH zeek_conn.log | GROUP BY source_ip, destination_ip, time_window | CALCULATE connection_count, total_bytes, time_jitter | FILTER connection_count > 95th_percentile AND total_bytes < 5th_percentile AND time_jitter < 10th_percentile`"
  - question: Does any host's network traffic pattern deviate significantly from its established baseline, suggesting a new C2 channel?
    context: |
      This question uses machine learning to detect subtle changes in a host's network behavior. By modeling the normal patterns of connection counts, data volumes, and unique destinations over time, an anomaly detection model can flag periods where a host's activity is statistically unusual, potentially revealing a rootkit that has recently been activated or has altered its C2 communication.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet Gateway, DNS Resolvers, Network Security Monitoring (NSM) Sensor Grid
    range: last 90 days
    queries:
      - pseudocode: "ML Model: `APPLY time_series_anomaly_detection ON (connection_count, total_bytes, unique_destinations) PER host PER hour`"
  - question: Have any unsigned, untrusted, or improperly located kernel drivers been loaded?
    context: |
      This question looks for direct evidence of a malicious driver being loaded into the kernel. Rootkits often rely on kernel drivers to gain high-level privileges and hide their activities. Checking for drivers that fail code integrity checks, are unsigned, or are located in non-standard system directories are strong indicators of a rootkit's presence.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 6 (Sysmon)
      - Windows Code Integrity Event IDs 3033, 3063, 3077
      - Domain Controllers, Critical Application Servers, Privileged User Workstations, All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: "SIEM: `SELECT * FROM sysmon_eid_6 WHERE (signed = 'false' OR signature_status != 'valid') OR (image_loaded NOT LIKE '%system32\\drivers%' AND image_name IN (common_driver_list)) OR event_id IN (3033, 3063, 3077)`"
  - question: Have any kernel drivers with very low prevalence or names that mimic legitimate drivers been loaded?
    context: |
      This question aims to identify suspicious drivers by their rarity or deceptive naming. Adversaries often use custom-compiled drivers that will be unique to a compromised environment. By identifying drivers with extremely low prevalence (e.g., seen on only one machine) or filenames that are a slight misspelling of legitimate drivers (typosquatting), we can uncover rootkit components designed to blend in.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 6 (Sysmon)
      - Windows Code Integrity Event IDs 3033, 3063, 3077
      - Domain Controllers, Critical Application Servers, Privileged User Workstations, All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: "Analytics Platform: `SEARCH sysmon_eid_6 | CALCULATE prevalence(hash, signature) | FILTER prevalence < 1% | CALCULATE levenshtein_distance(image_name, known_good_drivers) | FILTER distance IN (1, 2)`"
  - question: Can we predict if a driver load event is malicious based on its collective attributes?
    context: |
      This question leverages a machine learning classifier to make a holistic judgment on whether a driver is malicious. Instead of relying on a single rule, the model considers multiple features simultaneously—such as signature status, hash prevalence, and path entropy—to identify complex patterns associated with malicious drivers that might be missed by simpler symbolic or statistical checks.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 6 (Sysmon)
      - Windows Code Integrity Event IDs 3033, 3063, 3077
      - Domain Controllers, Critical Application Servers, Privileged User Workstations, All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: "ML Model: `APPLY classification_model ON features(signed, signature, hash_prevalence, path_entropy) FROM sysmon_eid_6`"
  - question: Have system utilities for installing services or drivers been executed by an unusual parent process?
    context: |
      This question searches for the misuse of legitimate system tools to install rootkit components. Utilities like `sc.exe` and `bcdedit.exe` are typically run from administrative consoles. When they are spawned by non-standard parent processes, such as a web browser or a Microsoft Office application, it is a strong signal that an exploit has been used to gain execution and is now attempting to establish persistence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - All Endpoints and Servers, especially user workstations and publicly accessible servers.
    range: last 90 days
    queries:
      - pseudocode: "SIEM: `SELECT * FROM sysmon_eid_1 WHERE (command_line CONTAINS 'sc.exe create' OR 'bcdedit /set' OR 'PnPUtil /add-driver') AND parent_image NOT IN (allowlist)`"
  - question: Have any rare or never-before-seen parent-child process relationships involving service/driver installation utilities occurred?
    context: |
      This question focuses on identifying anomalous process chains by baselining normal activity. Every organization has typical parent-child process relationships. By tracking these relationships and alerting on new or extremely rare chains (e.g., `outlook.exe` -> `cmd.exe` -> `sc.exe`), we can detect novel execution paths used by an adversary to install a rootkit.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - All Endpoints and Servers, especially user workstations and publicly accessible servers.
    range: last 90 days
    queries:
      - pseudocode: "Analytics Platform: `SEARCH sysmon_eid_1 | BASELINE parent_child_relationships | ALERT ON new_relationship OR rare_relationship_frequency`"
  - question: Are there outlier clusters of command-line activity related to rootkit installation techniques?
    context: |
      This question uses clustering to find unusual command-line executions without prior knowledge of what is 'bad'. By converting command-line arguments into numerical vectors, a clustering algorithm can group together common, legitimate commands. Any commands that do not fit into these large clusters are flagged as outliers, which could represent an adversary's unique or obfuscated installation commands.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - All Endpoints and Servers, especially user workstations and publicly accessible servers.
    range: last 90 days
    queries:
      - pseudocode: "ML Model: `VECTORIZE command_line_arguments | APPLY clustering_algorithm | IDENTIFY outlier_clusters`"
  - question: Has a newly created service immediately initiated an external network connection to an unapproved destination?
    context: |
      This question correlates service creation with network activity to find malicious services establishing C2 communication. A legitimate service rarely needs to connect to an unknown external IP immediately upon installation. This correlated event is a high-fidelity indicator of a persistent backdoor or rootkit component being activated.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4688
      - Windows Event ID 3 (Sysmon)
      - Zeek conn.log
      - All Endpoints and Servers, Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: "SIEM Correlation: `TRIGGER on new_service_creation (EID 7045) | IF associated_process (EID 4688) makes_external_connection (Sysmon EID 3) within 60s to non-allowlisted_ip THEN ALERT`"
  - question: Are there network connections observed at the network layer that are not reported by the host operating system?
    context: |
      This question aims to find hidden network connections, a classic sign of a rootkit. A rootkit may hook low-level networking functions to hide its communication from endpoint monitoring tools. By comparing network-level logs (Zeek) with endpoint-level logs (Sysmon), a significant number of mismatches for a host suggests that a rootkit is actively hiding its network activity.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4688
      - Windows Event ID 3 (Sysmon)
      - Zeek conn.log
      - All Endpoints and Servers, Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: "Analytics Platform: `JOIN zeek_conn.log AND sysmon_eid_3 on connection_tuple | COUNT connections_in_zeek_but_not_sysmon PER host | ALERT if count > baseline + 3*stdev`"
  - question: Are there any processes initiating network connections that are disconnected from the host's normal activity graph?
    context: |
      This question models host activity as a graph to find isolated, suspicious behavior. Normal user and system activity forms interconnected communities of processes. A process spawned by a rootkit (e.g., via injection) that then makes a network connection might appear as an isolated node or a small, disconnected component in this graph, making it a clear anomaly.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4688
      - Windows Event ID 3 (Sysmon)
      - Zeek conn.log
      - All Endpoints and Servers, Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: "ML Model: `BUILD activity_graph from Sysmon EID 1, 3 | APPLY community_detection | IDENTIFY outlier_nodes_with_network_connections`"
  - question: Have any utilities that modify boot sectors or raw disk been executed by unauthorized processes?
    context: |
      This question targets a highly privileged and dangerous activity: modification of the system's boot process. A bootkit, a type of rootkit, infects the master boot record (MBR) or bootloader. Direct execution of tools like `bootsect.exe` or raw write access to `PhysicalDrive0` by any process not on a strict allowlist of disk management tools is a critical alert and a strong indicator of a bootkit.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 9 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - System Partitions on all hosts, Boot sectors of physical disks on servers and workstations.
    range: last 90 days
    queries:
      - pseudocode: "SIEM: `SELECT * FROM sysmon_eid_1 WHERE image_name IN ('bootsect.exe', 'fdisk.exe') OR (event_id IN (9, 11) AND target_device = '\\\\.\\PhysicalDrive0' AND image NOT IN (allowlist))`"
  - question: Has any process with a low enterprise-wide prevalence performed a raw disk access?
    context: |
      This question hunts for unusual processes performing raw disk access. While some legitimate tools need this capability, it is a rare and powerful permission. By baselining which processes normally perform this action, we can flag any new or rare process doing so as highly suspicious, as it could be a custom tool used by an adversary to install a bootkit.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 9 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - System Partitions on all hosts, Boot sectors of physical disks on servers and workstations.
    range: last 90 days
    queries:
      - pseudocode: "Analytics Platform: `SEARCH sysmon_eid_9 | CALCULATE prevalence(image) | ALERT if prevalence is low OR image is not in baseline`"
  - question: Are there any administrative tool executions that are outliers compared to normal benign administrative behavior?
    context: |
      This question uses a one-class anomaly detection model to distinguish malicious use of administrative tools from normal use. The model is trained exclusively on known-good administrative activity. When an adversary uses a tool like `bcdedit.exe` with unusual parameters, from an odd parent process, or at an odd time, the model will flag it as a deviation from the learned 'normal' behavior, indicating potential misuse for rootkit installation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 9 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - System Partitions on all hosts, Boot sectors of physical disks on servers and workstations.
    range: last 90 days
    queries:
      - pseudocode: "ML Model: `TRAIN one_class_svm on benign_admin_actions | PREDICT on new sysmon_eid_1 events | ALERT on outliers`"
  - question: Have any essential security agent processes been terminated?
    context: |
      This question looks for the most direct form of defense evasion: disabling security tools. Rootkits often attempt to terminate antivirus, EDR, or other monitoring agents to operate undetected. The termination of a known security process is a critical, high-priority event that requires immediate investigation, as it indicates an active and aggressive adversary on the host.
    answer_sources:
      - Windows Event ID 1000
      - Windows Event ID 1001
      - Windows Event ID 7031
      - Windows Event ID 7034
      - Windows Event ID 5 (Sysmon)
      - All Endpoints and Servers, especially hosts with critical security agents installed.
    range: last 90 days
    queries:
      - pseudocode: "SIEM: `SELECT * FROM sysmon_eid_5 WHERE terminated_image IN (security_agent_list)`"
  - question: Is there a statistically significant increase in application crashes or service failures on any host?
    context: |
      This question uses system instability as a potential indicator of a rootkit. A poorly written or aggressive rootkit can cause conflicts by hooking system functions, leading to an unusual number of application crashes or service failures. By monitoring the rate of these failure events and comparing it to a historical baseline, we can detect hosts suffering from instability that may be caused by a rootkit.
    answer_sources:
      - Windows Event ID 1000
      - Windows Event ID 1001
      - Windows Event ID 7031
      - Windows Event ID 7034
      - Windows Event ID 5 (Sysmon)
      - All Endpoints and Servers, especially hosts with critical security agents installed.
    range: last 90 days
    queries:
      - pseudocode: "Analytics Platform: `SEARCH failure_events (1000, 1001, 7031, 7034) | COUNT by host, hour | ALERT if count > hourly_baseline + 3*stdev`"
  - question: Are there any hosts exhibiting an anomalous combination of system failures and security tool terminations?
    context: |
      This question uses an unsupervised machine learning model to find hosts that are 'unhealthy' in a way that suggests a rootkit. An Isolation Forest is particularly good at finding outliers based on a combination of factors. A host might not have enough crashes to trigger a statistical alert, but a moderate number of crashes combined with a single security agent termination is a highly anomalous pattern that this model can detect.
    answer_sources:
      - Windows Event ID 1000
      - Windows Event ID 1001
      - Windows Event ID 7031
      - Windows Event ID 7034
      - Windows Event ID 5 (Sysmon)
      - All Endpoints and Servers, especially hosts with critical security agents installed.
    range: last 90 days
    queries:
      - pseudocode: "ML Model: `APPLY isolation_forest ON feature_vector[count(crashes), count(failures), count(terminations)] PER host, PER hour | ALERT on anomalies`"