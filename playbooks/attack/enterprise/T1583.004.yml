name: T1583.004: Server
id: 8e52a5d2-8f90-4d43-9a3d-4c8d76d434d3
description: This playbook helps determine if an adversary is developing server resources for use in operations. It focuses on identifying internal hosts connecting to external infrastructure that exhibits malicious characteristics, such as being listed on high-confidence threat intelligence feeds, using SSL/TLS artifacts (certificates, JA3/JA3S) associated with Command and Control (C2) frameworks, being a newly registered domain (NRD), or being the target of concurrent queries from multiple internal hosts, suggesting C2 rallying.
type: technique
related:
  - TA0042: Resource Development
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any internal hosts connected to or resolved domains/IPs present on high-confidence threat intelligence feeds?
    context: This question aims to detect direct communication with known adversary infrastructure. Matching network or DNS logs against a curated watchlist of malicious indicators is a fundamental and high-fidelity method for identifying potential compromises or reconnaissance activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Threat Intelligence Platform Data
      - Network Egress Points
      - DNS Resolvers
      - Endpoint Devices
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          watchlist = get_threat_intel_ips_and_domains()
          network_events = search network_logs where (destination_ip in watchlist or destination_domain in watchlist)
          dns_events = search dns_logs where (query in watchlist)
          return network_events + dns_events
  - question: Are threat intelligence matches associated with low-prevalence destinations across the enterprise?
    context: This question helps prioritize alerts by focusing on uncommon activity. Legitimate services matched on threat feeds are often contacted by many hosts, creating noise. By isolating connections to destinations seen by only a few hosts, analysts can focus on activity that is more likely to be targeted and malicious.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Threat Intelligence Platform Data
      - Network Egress Points
      - DNS Resolvers
      - Endpoint Devices
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          for each alert:
             destination = alert.destination
             prevalence = count(unique source_hosts) where destination = destination in last 30d
             if prevalence < 5:
               prioritize_alert(alert)
  - question: Can we use a machine learning model to score the maliciousness of connections that match threat intelligence?
    context: This question seeks to automate the triage process by applying machine learning. A supervised model trained on features like connection duration, data volume, and port can learn the patterns of benign vs. malicious traffic, allowing for automated scoring and escalation of high-probability malicious events, reducing analyst workload.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - Threat Intelligence Platform Data
      - Network Egress Points
      - DNS Resolvers
      - Endpoint Devices
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          model = load_classification_model()
          for each new_connection matching threat_intel:
             features = extract_features(new_connection)
             score = model.predict(features)
             if score > 0.90:
               escalate_alert(new_connection)
  - question: Have any internal hosts initiated SSL/TLS sessions whose certificate, JA3/JA3S hash, or HTTP header matches a known malicious C2 profile?
    context: This question focuses on identifying adversary C2 channels by fingerprinting their network traffic. Many C2 frameworks use default or recognizable values in their SSL/TLS and HTTP configurations. Matching these signatures in real-time provides a high-confidence way to detect active C2 communication.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - Zeek ja3.log
      - Network Egress Points
      - Proxies with SSL/TLS Inspection
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          c2_signatures = get_c2_signatures()
          ssl_events = search ssl_logs where (cert_subject in c2_signatures.subjects or ja3 in c2_signatures.ja3)
          http_events = search http_logs where (server_header in c2_signatures.headers)
          return ssl_events + http_events
  - question: Are we observing external SSL/TLS connections with unusually low-entropy certificate subject or issuer fields?
    context: This question attempts to find auto-generated or default C2 certificates that lack the complexity of legitimate certificates. Low Shannon entropy in these fields can indicate non-random, simple strings (e.g., empty or default values), which are common in malware C2 frameworks. Flagging these anomalies helps uncover previously unknown C2 infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - Zeek ja3.log
      - Network Egress Points
      - Proxies with SSL/TLS Inspection
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          entropy_threshold = calculate_baseline_entropy_threshold()
          for each ssl_connection:
             subject_entropy = shannon_entropy(connection.cert_subject)
             issuer_entropy = shannon_entropy(connection.cert_issuer)
             if subject_entropy < entropy_threshold or issuer_entropy < entropy_threshold:
               flag_for_review(connection)
  - question: Can we identify outlier clusters of SSL/TLS sessions that deviate from normal traffic patterns?
    context: This question uses unsupervised machine learning to find "needles in a haystack." By clustering all SSL/TLS connections based on their technical attributes, legitimate traffic to popular services will form large, dense clusters. Small, isolated clusters often represent unique or rare activity, such as connections to bespoke C2 servers, making them prime candidates for investigation.
    answer_sources:
      - Zeek ssl.log
      - Zeek http.log
      - Zeek ja3.log
      - Network Egress Points
      - Proxies with SSL/TLS Inspection
      - Network Security Monitoring (NSM) Sensors
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          features = extract_features_from_ssl_logs(validity, key_length, algorithm, ja3)
          clusters = dbscan_cluster(features)
          outlier_clusters = find_small_isolated_clusters(clusters)
          investigate(outlier_clusters)
  - question: Have any internal hosts connected to an external domain that was registered within the last 60 days and has not been seen before in the environment?
    context: This question targets the adversary tactic of using newly registered domains (NRDs) for campaigns, as they are less likely to be on reputation blocklists. By identifying connections to domains that are both new to the world (recently registered) and new to the enterprise (not in a historical baseline), analysts can quickly spot potential phishing, malware delivery, or C2 infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 22
      - Passive DNS Data
      - WHOIS Data
      - Network Egress Points
      - DNS Resolvers
      - Endpoint Devices
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          baseline_domains = get_domains_seen_in_last_90d()
          for each new_connection:
             domain = new_connection.domain
             if domain not in baseline_domains:
               whois_data = whois_lookup(domain)
               if whois_data.creation_date > (today - 60 days):
                 alert("Newly Registered Domain Contacted")
  - question: Can we risk-score newly observed domains based on their linguistic and statistical properties to identify suspicious ones?
    context: This question aims to proactively identify malicious domains, even without a known registration date, by analyzing their structure. Adversaries often use algorithmically generated domains (DGAs) or employ other tricks that result in names with high entropy, odd character ratios, or rare TLDs. Scoring these properties helps distinguish potentially malicious domains from benign new ones.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 22
      - Passive DNS Data
      - WHOIS Data
      - Network Egress Points
      - DNS Resolvers
      - Endpoint Devices
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          for each newly_observed_domain:
             score = 0
             score += score_length(domain)
             score += score_entropy(domain)
             score += score_char_ratio(domain)
             score += score_tld_rarity(domain)
             if score > risk_threshold:
               flag_domain(domain, score)
  - question: Is there an anomalous spike in the daily volume of newly observed domains being contacted by hosts?
    context: This question provides a macro-level view to detect large-scale campaigns. A sudden, statistically significant increase in the number of new domains being accessed across the enterprise can signal the start of a coordinated attack, such as a widespread phishing campaign or a malware variant activating its C2 function, prompting a broader investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 22
      - Passive DNS Data
      - WHOIS Data
      - Network Egress Points
      - DNS Resolvers
      - Endpoint Devices
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          daily_new_domain_counts = aggregate_daily_counts(newly_observed_domains)
          anomalies = find_anomalies_in_timeseries(daily_new_domain_counts)
          for each anomaly:
             alert("Anomalous spike in new domains", anomaly.date)
             investigate_domains_from(anomaly.date)
  - question: Are multiple hosts simultaneously querying a new, uncommon external domain within a short time frame?
    context: This question seeks to identify C2 "rallying" or "beaconing" behavior. When a group of compromised machines activate, they often query the same C2 domain around the same time. Detecting a sudden burst of queries from many distinct hosts to a domain that is new to the environment is a strong indicator of a coordinated C2 callback.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 22
      - Internal DNS Resolvers
      - Network Egress Points
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          for each 5_minute_window:
             queries_by_domain = group_by(dns_logs, domain)
             for domain, queries in queries_by_domain:
               unique_hosts = count_unique(queries.source_host)
               is_new = is_domain_first_seen_in_last_24h(domain)
               if unique_hosts > 50 and is_new:
                 alert("Suspected C2 Rallying", domain)
  - question: Has any domain experienced a statistically significant spike in the number of unique clients querying it?
    context: This question uses statistical baselining to detect abnormal query patterns over a longer period. A sudden spike in the number of clients querying a domain, exceeding its normal historical behavior (e.g., a 3-sigma event), can indicate that a dormant malware implant has been activated or that a new wave of infections is beaconing to the same C2 server.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 22
      - Internal DNS Resolvers
      - Network Egress Points
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          for each domain:
             hourly_counts = get_hourly_query_counts_for_last_14d(domain)
             mean, std_dev = calculate_stats(hourly_counts)
             current_hour_count = get_current_hour_count(domain)
             if current_hour_count > (mean + 3 * std_dev):
               alert("Statistically significant query spike", domain)
  - question: Can we detect subtle, abrupt shifts in the query volume patterns for specific domains over time?
    context: This question employs a more advanced statistical technique to find changes that are not just simple spikes. A change point detection algorithm can identify sustained shifts in the mean or variance of query volume, which might indicate a C2 server switching from a low-and-slow beaconing mode to a more active data exfiltration phase, or the start of a new campaign phase using existing infrastructure.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 22
      - Internal DNS Resolvers
      - Network Egress Points
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          for each domain:
             query_timeseries = get_query_timeseries(domain)
             change_points = find_change_points(query_timeseries)
             if change_points detected:
               alert("Change in query pattern detected for domain", domain)