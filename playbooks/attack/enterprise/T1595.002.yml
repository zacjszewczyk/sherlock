name: T1595.002: Vulnerability Scanning
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook helps answer the question: Is the adversary performing vulnerability scanning against our external-facing infrastructure? It focuses on identifying various scanning techniques, including the use of threat-intelligence-flagged IPs, web-based vulnerability probes, banner grabbing, vertical and horizontal port scans, and the correlation of multiple low-fidelity events into a high-fidelity incident. Evidence for this activity can be found in sources like Zeek logs, firewall logs, and web server logs. The playbook aims to detect scans indicated by connections from known malicious actors, requests using scanner-like User-Agents or targeting sensitive paths, short-duration connections without authentication, a single source connecting to many ports on one host or one port on many hosts, and sequences of related low-fidelity alerts from a single source IP.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an inbound connection originating from an IP address known for scanning, malicious activity, or anonymization services?
    context: |
      This question aims to identify initial reconnaissance activity by cross-referencing inbound connection source IPs with threat intelligence feeds. A match for categories like 'scanner', 'malicious', 'TOR', or 'proxy' is a strong indicator that the connection is not benign and may be the start of a targeted attack or automated scanning.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Network Perimeter Firewall
      - Threat Intelligence Platform
      - Cloud Network Security Groups
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each connection in network logs:
            LOOKUP source_ip in threat_intel_db
            IF source_ip.category IN ['scanner', 'malicious', 'TOR', 'proxy']:
              ALERT (source_ip, category)
  - question: Is a known malicious or scanning IP showing abnormally persistent connection activity compared to its peers?
    context: |
      This question builds on the previous one by looking for unusual volume from an already flagged IP. While a single connection from a known scanner might be noise, an unusually high number of connections from that same IP suggests more persistent, possibly targeted, reconnaissance. This helps differentiate automated background noise from a potentially dedicated adversary.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Network Perimeter Firewall
      - Threat Intelligence Platform
      - Cloud Network Security Groups
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE 95th_percentile_count per threat_intel_category over 24h
          FOR each flagged_ip:
            COUNT connections over 24h as ip_connection_count
            IF ip_connection_count > 95th_percentile_count for its category:
              ALERT (flagged_ip, ip_connection_count)
  - question: Can we predict if a connection from a CTI-flagged IP is part of a targeted reconnaissance campaign using machine learning?
    context: |
      This question moves from simple heuristics to advanced analytics. By training a classifier with features like connection count, port diversity, and connection states, we can develop a model to score the likelihood that activity from a flagged IP is part of a sophisticated, targeted campaign rather than random scanning. A high probability score would warrant immediate, high-priority investigation.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Network Perimeter Firewall
      - Threat Intelligence Platform
      - Cloud Network Security Groups
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each connection from a flagged_ip:
            EXTRACT features (category, conn_count_24h, distinct_ports, state_ratios)
            CALCULATE probability = logistic_regression_model.predict(features)
            IF probability > 0.9:
              ALERT (source_ip, probability)
  - question: Are inbound web requests using User-Agents of known scanning tools or probing for sensitive files/paths?
    context: |
      This question seeks to identify web-based reconnaissance by inspecting HTTP request headers and URIs. Attackers and automated tools often use specific User-Agent strings (e.g., 'nmap', 'sqlmap') or request common sensitive paths (e.g., '/.git/config', '/wp-admin') to find vulnerabilities. Matching against a list of these indicators is a direct way to detect scanning activity.
    answer_sources:
      - Zeek http.log
      - Windows IIS Logs
      - Internet-facing Web Servers
      - Web Application Firewalls
      - Application Gateways
      - Load Balancers
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE scanner_ua_regex = 'nmap|sqlmap|nikto'
          DEFINE sensitive_path_regex = '/\.env|/\.git|/wp-admin'
          FOR each http_request in web_logs:
            IF http_request.user_agent MATCHES scanner_ua_regex OR http_request.uri MATCHES sensitive_path_regex:
              ALERT (source_ip, user_agent, uri)
  - question: Is a source IP generating an abnormally high ratio of HTTP errors, indicative of forced browsing or fuzzing?
    context: |
      This question identifies aggressive scanning techniques like forced browsing or API fuzzing. When an attacker systematically tries to guess file/directory names or API endpoints, they generate a large number of requests for non-existent resources, resulting in a high rate of 4xx (Client Error) or 5xx (Server Error) responses. A high error ratio from a single IP is a strong signal of this behavior.
    answer_sources:
      - Zeek http.log
      - Windows IIS Logs
      - Internet-facing Web Servers
      - Web Application Firewalls
      - Application Gateways
      - Load Balancers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each source_ip in 5-minute window:
            CALCULATE total_requests
            CALCULATE error_requests (status 4xx or 5xx)
            CALCULATE error_ratio = error_requests / total_requests
            IF error_ratio > 0.8 AND total_requests >= 20:
              ALERT (source_ip, error_ratio)
  - question: Can web request URIs be classified as malicious probes (e.g., SQLi, Path Traversal) using an NLP model?
    context: |
      This question applies Natural Language Processing (NLP) to move beyond simple regex matching for greater accuracy in detecting web attacks. A trained model can understand the structure and intent of a URI, classifying it as a specific attack type like SQL Injection or Path Traversal, even if it uses obfuscation techniques that a simple regex might miss. This allows for more sophisticated and resilient detection.
    answer_sources:
      - Zeek http.log
      - Windows IIS Logs
      - Internet-facing Web Servers
      - Web Application Firewalls
      - Application Gateways
      - Load Balancers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each http_request in web_logs:
            CLASSIFY request.uri using NLP_model
            IF classification NOT 'Benign Navigation':
              AGGREGATE by source_ip and classification
              IF count for a source_ip is high:
                ALERT (source_ip, classification, count)
  - question: Are external IPs making very short connections to services without attempting to authenticate, suggesting banner grabbing?
    context: |
      This question aims to detect banner grabbing, a technique where an adversary connects to a port simply to see the service banner (e.g., 'SSH-2.0-OpenSSH_7.4') and then immediately disconnects. This is identified by correlating network connection logs (showing a short-lived connection) with the absence of an authentication attempt in the corresponding protocol-specific log.
    answer_sources:
      - Zeek conn.log
      - Zeek ssh.log
      - Zeek rdp.log
      - Windows Event ID 5156
      - DMZ Servers
      - VPN Concentrators
      - Externally-facing servers hosting SSH/RDP/FTP
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each connection in conn_log with state 'S1' or 'RSTO' and duration < 2s:
            LOOKUP connection_uid in protocol_logs (e.g. ssh.log) within 30s
            IF no successful auth event found:
              ALERT (source_ip, dest_port, duration)
  - question: Is a source IP exhibiting a significantly lower successful authentication rate for a service compared to the baseline, indicating failed login attempts or connection aborts?
    context: |
      This question identifies reconnaissance or brute-force precursors by baselining normal authentication behavior. A source IP that connects frequently but has a success rate in the bottom 5th percentile is anomalous. This could represent an attacker testing for open ports (and aborting), checking for default credentials, or performing a slow brute-force attack.
    answer_sources:
      - Zeek conn.log
      - Zeek ssh.log
      - Zeek rdp.log
      - Windows Event ID 5156
      - DMZ Servers
      - VPN Concentrators
      - Externally-facing servers hosting SSH/RDP/FTP
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each sensitive_port (22, 3389):
            ESTABLISH baseline auth_success_ratio per hour
            FOR each source_ip:
              CALCULATE source_ip_auth_success_ratio
              IF source_ip_auth_success_ratio is in bottom 5th percentile:
                ALERT (source_ip, dest_port, ratio)
  - question: Is there an anomalous spike in the number of extremely short-duration connections to a specific service port, indicating automated banner grabbing?
    context: |
      This question uses time-series anomaly detection to find automated banner grabbing at scale. While a few short connections can be noise, a sudden, statistically significant increase in the number of these connections from a single IP is a strong indicator of an automated tool systematically fingerprinting services across a network.
    answer_sources:
      - Zeek conn.log
      - Zeek ssh.log
      - Zeek rdp.log
      - Windows Event ID 5156
      - DMZ Servers
      - VPN Concentrators
      - Externally-facing servers hosting SSH/RDP/FTP
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each dest_port:
            MODEL time-series of connection 'duration' using IsolationForest
            IDENTIFY anomalously short durations
            GROUP anomalies by source_ip
            IF spike in anomaly count for a source_ip:
              ALERT (source_ip, dest_port)
  - question: Is a single source IP connecting to a large number of distinct ports on one host in a short time frame?
    context: |
      This question is designed to detect a classic vertical port scan. This activity, where an attacker probes many ports on a single target machine to see which services are open, is a fundamental step in reconnaissance. A simple threshold rule (e.g., >50 ports in <60 seconds) is highly effective at catching this behavior.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Network Perimeter Firewall
      - Edge Routers
      - Cloud Network Security Groups
      - Individual Host Firewalls
    range: last 90 days
    queries:
      - pseudocode: |
          AGGREGATE connections by source_ip, dest_ip over 60s window
          COUNT unique dest_ports
          IF unique_dest_port_count > 50:
            ALERT (source_ip, dest_ip, port_count)
  - question: Does the destination port activity from a source IP show high entropy, characteristic of a random port scan?
    context: |
      This question uses a statistical measure, Shannon entropy, to detect port scanning. Normal traffic is often repetitive, targeting common ports like 80 and 443, resulting in low entropy. A port scan, however, involves probing many different, often random, ports, which creates a high-entropy signal. This can detect scans that are slower or more spread out than those caught by simple threshold rules.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Network Perimeter Firewall
      - Edge Routers
      - Cloud Network Security Groups
      - Individual Host Firewalls
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each source_ip in 5-minute window:
            CALCULATE shannon_entropy of destination_ports contacted
            IF entropy > 3.5 OR entropy > 99th percentile of all source IPs:
              ALERT (source_ip, entropy_score)
  - question: Can we identify rapid vertical port scans by clustering connection events based on time and destination port?
    context: |
      This question applies a machine learning clustering algorithm (DBSCAN) to find port scans. When plotted on a graph of time vs. port number, a rapid scan appears as a dense, vertical line of data points. DBSCAN is effective at finding these dense clusters, allowing it to identify scanning behavior even amidst noisy, benign traffic.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Network Perimeter Firewall
      - Edge Routers
      - Cloud Network Security Groups
      - Individual Host Firewalls
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each source_ip:
            CREATE dataset of (timestamp, dest_port)
            RUN DBSCAN on dataset
            IF a dense cluster is found that is narrow in time and wide in port:
              ALERT (source_ip, cluster_details)
  - question: Is a single source IP connecting to the same port across a large number of different hosts in a short time frame?
    context: |
      This question is designed to detect a horizontal port scan or network sweep. This is when an attacker looks for a specific open port (e.g., 3389 for RDP) across an entire range of hosts. A simple rule that alerts when one IP contacts the same port on more than 20 hosts in under a minute is a very effective way to catch this reconnaissance technique.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Network Perimeter Firewall
      - Edge Routers
      - Cloud Network Security Groups
      - Subnet Gateways
    range: last 90 days
    queries:
      - pseudocode: |
          AGGREGATE connections by source_ip, dest_port over 60s window
          COUNT unique dest_ips
          IF unique_dest_ip_count > 20:
            ALERT (source_ip, dest_port, host_count)
  - question: For a given service port, is a source IP contacting an anomalously high number of unique hosts compared to the baseline?
    context: |
      This question provides a more dynamic way to detect network sweeps by comparing activity against a learned baseline. For any given port, some IPs (like patch management servers) may normally contact many hosts. This method alerts only when a source IP's activity exceeds the 99th percentile for that specific port, indicating it is behaving abnormally even for a high-traffic service.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Network Perimeter Firewall
      - Edge Routers
      - Cloud Network Security Groups
      - Subnet Gateways
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each dest_port in 5-minute window:
            CALCULATE 99th percentile for unique_dest_hosts_contacted per source_ip
            FOR each source_ip contacting that port:
              COUNT unique_dest_hosts as source_host_count
              IF source_host_count > 99th percentile:
                ALERT (source_ip, dest_port, source_host_count)
  - question: Is there an anomalous spike in the number of unique hosts being contacted on a specific port, indicating a network sweep?
    context: |
      This question uses time-series anomaly detection to spot network sweeps. It models the 'normal' count of unique hosts an IP contacts on a specific port over time. A sudden, sharp increase in this count, detected as an anomaly by the model, signals that the IP has abruptly started a network sweep, allowing for detection of uncharacteristic behavior.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 5156
      - Network Perimeter Firewall
      - Edge Routers
      - Cloud Network Security Groups
      - Subnet Gateways
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each high-traffic port and source_ip:
            MODEL time-series of unique_dest_host_count
            USE S-H-ESD to detect anomalous spikes
            IF spike is detected:
              ALERT (source_ip, dest_port, spike_details)
  - question: Is a source IP triggering a sequence of related alerts, such as a port scan followed by a web application probe on a discovered port?
    context: |
      This question focuses on correlating multiple, distinct alerts into a single, higher-confidence incident. A port scan alert by itself might be low-priority, but if the same IP immediately follows up with a web probe on a port it just discovered, it's a strong indicator of active, targeted reconnaissance. This correlation logic connects the dots of an attack chain.
    answer_sources:
      - SIEM Alerts
      - Zeek conn.log
      - Zeek http.log
      - SIEM / Log Aggregation Platform
      - Security Orchestration, Automation, and Response (SOAR) Platform
    range: last 90 days
    queries:
      - pseudocode: |
          ON 'Port Scan' alert (Alert A) for source_ip:
            WATCH for 'Web App Probe' alert (Alert B) from same source_ip within 60 mins
            IF Alert B target_host/port was discovered in Alert A:
              CREATE high-priority 'Multi-Stage Recon' meta-alert
  - question: Does the cumulative risk score of all alerts generated by a single source IP exceed a threshold, indicating multi-stage reconnaissance?
    context: |
      This question implements Risk-Based Alerting (RBA) to quantify the threat from a source IP. Individual, low-fidelity alerts (e.g., a single CTI hit) are assigned a small risk score. As an IP generates more suspicious alerts, its score accumulates. When the total score crosses a threshold, it signifies a high probability of malicious intent, allowing analysts to focus on the riskiest entities rather than individual noisy alerts.
    answer_sources:
      - SIEM Alerts
      - Zeek conn.log
      - Zeek http.log
      - SIEM / Log Aggregation Platform
      - Security Orchestration, Automation, and Response (SOAR) Platform
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE risk_scores: {'Port Scan': 10, 'Web Probe': 15, 'CTI Hit': 25}
          FOR each source_ip:
            SUM risk scores of all alerts in a 1-hour sliding window
            IF total_risk_score > 40:
              CREATE 'High-Risk Entity' incident
  - question: Does the sequence of alerts from a source IP match a known malicious TTP sequence identified through pattern mining?
    context: |
      This question represents the most advanced form of correlation, using machine learning to discover common attack patterns (TTPs) from historical data. A model can be trained to recognize sequences like 'CTI Hit -> Port Scan -> Web Probe'. This model can then analyze the live stream of alerts and flag a source IP in real-time if its actions match a known malicious sequence, effectively predicting the adversary's next steps.
    answer_sources:
      - SIEM Alerts
      - Zeek conn.log
      - Zeek http.log
      - SIEM / Log Aggregation Platform
      - Security Orchestration, Automation, and Response (SOAR) Platform
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN sequence pattern model (e.g., PrefixSpan) on historical alert data
          DEPLOY model to analyze live alert stream
          FOR each source_ip:
            ANALYZE sequence of alerts generated
            IF sequence matches a known malicious pattern:
              ALERT ('Malicious TTP Detected', source_ip, pattern_name)