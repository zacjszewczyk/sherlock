name: T1556.009: Conditional Access Policies
id: a8d1b0c2-3e4f-4a5b-8c6d-9e7f0a1b2c3d
description: This playbook investigates the manipulation of Conditional Access Policies
  for adversary persistence, defense evasion, and credential access. Adversaries may
  weaken or misconfigure these policies to achieve their objectives. This can manifest
  as successful logins from high-risk IP addresses that should be blocked, the establishment
  of new 'trusted locations' from unusual network ranges, a reduction in required
  multi-factor authentication (MFA) challenges, or access from non-compliant or
  unmanaged devices. It also covers bypassing explicit deny lists, using public cloud
  IPs to evade geo-fencing, executing impossible travel scenarios, and leveraging
  compromised credentials or legacy authentication protocols that should be blocked
  by risk-based policies. The goal is to identify policy failures that allow unauthorized
  access.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are successful authentications originating from IP addresses with a known
    malicious reputation?
  context: This question aims to detect a direct bypass of risk-based conditional
    access policies. Policies should block logins from high-risk sources like TOR
    exit nodes, known C2 servers, or anonymizing proxies. A successful login from
    such an IP indicates that a policy has been disabled, misconfigured, or maliciously
    modified to allow the connection, providing a strong signal of compromise.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta), Threat Intelligence Platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each successful_login_event
        GET source_ip from event
        QUERY threat_intel_feed for reputation of source_ip
        IF reputation is 'high-risk' or 'malicious'
          ALERT on successful_login_event
- question: Are there successful logins from source IPs with a risk score that is
    anomalously high compared to the organization's recent baseline?
  context: This question moves beyond static blocklists to detect relative risk.
    By establishing a dynamic baseline of 'normal' IP risk scores for successful
    logins, it can identify outliers. A login from an IP whose risk score is significantly
    higher than the typical risk profile for the organization suggests that a risk-based
    policy may have failed to block an unusually suspicious connection.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta), Threat Intelligence Platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE baseline_risk = 99th_percentile(ip_risk_score) for all successful_logins in last 24_hours
      FOR each new_successful_login
        GET source_ip_risk_score from threat_intel
        IF source_ip_risk_score > baseline_risk
          ALERT on new_successful_login
- question: Is a machine learning model identifying successful authentications as
    malicious, suggesting a policy failure?
  context: This question uses a predictive model to find logins that should have
    been blocked. A classification model trained on features like IP reputation,
    geolocation, time, and user history can assign a probability of maliciousness
    to each login. When a login that was successfully authenticated receives a high
    malicious probability score, it indicates the existing conditional access policies
    failed to catch it.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta), Threat Intelligence Platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each successful_login_event
        EXTRACT features (source_ip_geo, asn, time_of_day, user_history, device_info, threat_intel_score)
        PREDICT probability = classification_model.predict(features)
        IF probability is 'high'
          ALERT on successful_login_event
- question: Are successful external logins occurring from Autonomous Systems (ASNs)
    that are not on the approved corporate allow-list?
  context: This question helps detect when an adversary establishes persistence by
    adding a new, unapproved 'trusted location' to a conditional access policy. Organizations
    typically have a known set of ASNs for their corporate offices, VPNs, and trusted
    partners. A successful login from an ASN outside this list is a strong indicator
    that an overly permissive rule has been created.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - AWS CloudTrail logs
  - VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra ID, Okta), Network
    Gateway, Cloud IAM configuration portals
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE approved_asns = [list of corporate, partner, vpn ASNs]
      FOR each successful_external_login
        GET source_asn
        IF source_asn NOT IN approved_asns
          ALERT on successful_external_login
- question: Is a user suddenly authenticating exclusively from a new, rare ASN, indicating
    a potential shift to an adversary-controlled location?
  context: This question looks for suspicious changes in a user's access patterns.
    By calculating the Shannon entropy of a user's source ASNs, we can measure the
    randomness of their login locations. A sudden drop in entropy means their logins
    are becoming less random, and if this new consolidated location is an ASN rarely
    used across the organization, it strongly suggests a new, suspicious 'trusted
    location' has been configured for that user.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - AWS CloudTrail logs
  - VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra ID, Okta), Network
    Gateway, Cloud IAM configuration portals
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each user
        CALCULATE shannon_entropy of source_asns over last 24_hours
        COMPARE to user's historical baseline entropy
        IF entropy drops significantly AND new_asn is rare_globally
          ALERT on user activity
- question: Is there an anomalous spike in successful logins from a new or previously
    unused ASN?
  context: This question uses time series forecasting to detect the emergence of
    a new trusted location. For any given ASN, especially one that is not normally
    used, the expected number of successful logins should be zero or very low. A
    forecasting model can predict this expected count. If the actual number of logins
    observed is a significant anomaly compared to the forecast, it signals that the
    ASN is being newly leveraged for access.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - AWS CloudTrail logs
  - VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra ID, Okta), Network
    Gateway, Cloud IAM configuration portals
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each source_asn
        FORECAST expected_login_count using time_series_model (e.g., ARIMA)
        GET actual_login_count for current time_window
        IF actual_login_count is a statistical anomaly compared to forecast
          ALERT on source_asn
- question: Are users in MFA-required groups successfully logging in without completing
    an MFA challenge?
  context: This question directly checks for the non-enforcement of MFA, a critical
    security control. If a user is part of a group that requires MFA, every successful
    login should be accompanied by a corresponding MFA success event. The absence
    of this event within a short time window of the login indicates that a policy
    has been weakened to no longer require MFA for that user or group.
  answer_sources:
  - Entra ID Sign-in logs
  - Okta System Log
  - Windows ADFS Event Logs
  - Windows Event ID 4624
  - Cloud Identity Provider Portals (e.g., Entra ID, Okta), Active Directory Federation
    Services (ADFS) Servers, RADIUS Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each successful_login for user in MFA_required_group
        LOOK for corresponding MFA_success_event within 5 minutes
        IF MFA_success_event is NOT found
          ALERT on the successful_login
- question: Has the ratio of MFA-enforced logins for a critical user group dropped
    significantly below its normal baseline?
  context: This question looks for statistical deviations in MFA enforcement over
    time. By calculating a rolling average of the MFA success ratio for a user group,
    we can establish a normal baseline. A sudden, sharp drop in this ratio (e.g.,
    more than 3 standard deviations below the average) is a strong statistical indicator
    that a policy has been changed to weaken MFA controls for that group.
  answer_sources:
  - Entra ID Sign-in logs
  - Okta System Log
  - Windows ADFS Event Logs
  - Windows Event ID 4624
  - Cloud Identity Provider Portals (e.g., Entra ID, Okta), Active Directory Federation
    Services (ADFS) Servers, RADIUS Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each critical_user_group
        CALCULATE rolling_7day_baseline (mean, stddev) of (MFA_logins / total_logins)
        CALCULATE current_day_ratio
        IF current_day_ratio < (mean - 3 * stddev)
          ALERT on user_group
- question: Is an anomaly detection model flagging a sudden change in the MFA enforcement
    rate for critical user groups?
  context: This question uses machine learning to automatically detect unexpected
    changes in MFA behavior. A time series anomaly detection model can learn the
    normal patterns and fluctuations of the MFA enforcement ratio. An alert from
    the model signifies a deviation from this learned norm that is not explained
    by typical variations, pointing to a potential policy modification.
  answer_sources:
  - Entra ID Sign-in logs
  - Okta System Log
  - Windows ADFS Event Logs
  - Windows Event ID 4624
  - Cloud Identity Provider Portals (e.g., Entra ID, Okta), Active Directory Federation
    Services (ADFS) Servers, RADIUS Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each critical_user_group
        INPUT time_series of MFA_enforcement_ratio into anomaly_detection_model
        IF model detects an anomaly
          ALERT on user_group
- question: Are successful logins occurring from devices with client fingerprints
    (User-Agent, JA3) that do not match managed corporate assets?
  context: This question aims to identify when policies meant to block unmanaged
    devices have failed. By maintaining an allow-list of known-good client fingerprints
    from corporate devices, any successful login from a device with a fingerprint
    not on this list indicates a non-compliant device has gained access, suggesting
    a policy bypass.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Cloud Application Frontends, VPN Portals, Endpoint Devices, Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE allow_list_fingerprints = [list of known good JA3s and User-Agents]
      FOR each successful_login
        GET client_fingerprint (JA3, User-Agent)
        IF client_fingerprint NOT IN allow_list_fingerprints
          ALERT on successful_login
- question: Are successful logins occurring from devices with unusually rare client
    fingerprints?
  context: This question identifies non-compliant devices by looking for statistical
    rarity rather than a static allow-list. Most corporate devices will share a limited
    set of User-Agent strings and JA3 hashes. A successful login from a client whose
    fingerprint is extremely rare across the organization (e.g., seen in less than
    0.1% of authentications) is anomalous and likely an unmanaged device that has
    bypassed policy.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Cloud Application Frontends, VPN Portals, Endpoint Devices, Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      PROFILE rarity of all client_fingerprints over last 30 days
      FOR each successful_login
        GET client_fingerprint
        IF rarity(client_fingerprint) < 0.1%
          ALERT on successful_login
- question: Can successful logins be grouped into anomalous clusters based on their
    client and network characteristics?
  context: This question uses clustering algorithms to find groups of suspicious
    logins that might represent non-compliant devices. By grouping logins based on
    features like User-Agent, JA3 hash, IP geolocation, and time, a small, dense
    cluster of events with unusual characteristics can be identified. This may reveal
    a set of adversary-controlled devices that are now permitted access due to a policy
    change.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Cloud Application Frontends, VPN Portals, Endpoint Devices, Web Proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      CLUSTER successful_logins using features (User-Agent, JA3, IP_geo, time)
      IDENTIFY small, dense clusters with unusual features
      IF such a cluster is found
        ALERT on all logins in the cluster
- question: Have any successful authentications occurred from IPs or countries that
    are on an explicit deny list?
  context: This is a direct test for policy failure or evasion. If an organization
    maintains a list of IPs or countries from which access is forbidden, a successful
    login from a source on that list is a critical security event. It implies that
    the conditional access policy enforcing this block has been disabled, deleted,
    or maliciously modified.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE deny_list_ips = [...]
      DEFINE deny_list_countries = [...]
      FOR each successful_login
        GET source_ip, source_country
        IF source_ip IN deny_list_ips OR source_country IN deny_list_countries
          ALERT with high_priority
- question: Are there any successful logins from deny-listed locations, which should
    have a count of zero?
  context: This question treats policy enforcement as a baseline of zero. For any
    IP or country on a deny list, the expected number of successful logins is zero.
    Therefore, any observed count greater than zero is, by definition, a statistically
    significant deviation from the policy-defined baseline and constitutes a clear
    violation that requires an alert.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MONITOR count of successful_logins where source_ip or source_country is on deny_list
      IF count > 0
        ALERT on the violation
- question: Is a machine learning model detecting that a successful login should
    have been blocked by a deny list policy?
  context: This question uses a simple classifier to model the deny list policy.
    The model is trained to predict that any login from a deny-listed location should
    not be allowed. If a real-world successful login event is fed to the model and
    it predicts the login should have been blocked, it highlights a "false negative"
    in the policy's enforcement, indicating it was evaded.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      TRAIN classifier model on (source_ip, country) to predict is_login_allowed=0 for deny-listed locations
      FOR each successful_login
        GET features (source_ip, country)
        PREDICT should_be_allowed = model.predict(features)
        IF should_be_allowed == 0
          ALERT on policy evasion
- question: Are successful logins originating from non-sanctioned public cloud IP
    ranges?
  context: This question aims to detect adversaries using public cloud infrastructure
    (e.g., AWS, Azure, GCP) to bypass geo-fencing or IP reputation blocks. Organizations
    should maintain an allow-list of cloud IP ranges used for legitimate business.
    A successful login from a cloud provider IP not on this list is suspicious and
    could indicate an attempt to launder the source location of an attack.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - AWS CloudTrail logs
  - GCP Audit Logs
  - VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra ID, Okta), Public
    Cloud Tenant (AWS, Azure, GCP)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE sanctioned_cloud_ips = [list of approved cloud IP ranges]
      FOR each successful_login
        GET source_ip_hosting_provider
        IF hosting_provider is 'cloud' AND source_ip NOT IN sanctioned_cloud_ips
          ALERT on login
- question: Is any user showing an anomalous proportion of successful logins from
    non-sanctioned cloud providers?
  context: This question establishes a behavioral baseline for each user's use of
    cloud infrastructure for access. For most users, this should be zero or near-zero.
    An alert is triggered if the percentage of a user's logins from unapproved cloud
    IPs suddenly exceeds a threshold or is a statistical outlier compared to their
    peers, suggesting their account may be used to bypass controls.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - AWS CloudTrail logs
  - GCP Audit Logs
  - VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra ID, Okta), Public
    Cloud Tenant (AWS, Azure, GCP)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each user
        CALCULATE proportion = (logins_from_unsanctioned_cloud / total_logins) in last 24_hours
        IF proportion > 5% OR is statistical_outlier compared to peers
          ALERT on user
- question: Is there a sudden spike in the overall volume of successful logins from
    non-sanctioned cloud providers?
  context: This question uses time series anomaly detection to monitor the aggregate
    use of non-sanctioned cloud IPs for access. The model learns the normal baseline,
    which should be close to zero. A sudden, anomalous spike in this volume across
    the organization indicates that an adversary may be leveraging cloud infrastructure
    at scale to bypass network-based conditional access controls.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4624
  - AWS CloudTrail logs
  - GCP Audit Logs
  - VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra ID, Okta), Public
    Cloud Tenant (AWS, Azure, GCP)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL time_series of login_volume_from_unsanctioned_cloud
      IF model detects anomalous spike
        ALERT on volume increase
- question: Has a single user account successfully logged in from two geographically
    distant locations in an impossible amount of time?
  context: This question is designed to detect "impossible travel" scenarios, which
    are a classic indicator of account compromise and a failure of location-based
    access controls. By calculating the required travel speed between two consecutive
    login locations for a user, a speed exceeding a physical impossibility (e.g.,
    faster than a commercial jet) indicates that the account is being used from multiple
    locations simultaneously.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Cloud Identity Provider Portals (e.g., Entra ID, Okta), VPN Concentrators, Authentication
    Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each new_successful_login for a user
        GET previous_login_location and timestamp
        CALCULATE distance and time_difference
        CALCULATE required_speed = distance / time_difference
        IF required_speed > 1000 km/h
          ALERT as impossible_travel
- question: Has a user account logged in with a travel speed that is a statistical
    outlier compared to all inter-login travel speeds?
  context: This question refines the "impossible travel" detection by using a dynamic,
    data-driven threshold instead of a fixed speed. By analyzing the distribution
    of all travel speeds calculated between logins across the organization, we can
    identify speeds that are statistical outliers (e.g., in the 99.9th percentile).
    This approach can catch events that are not strictly impossible but are highly
    improbable, while accounting for legitimate fast travel.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Cloud Identity Provider Portals (e.g., Entra ID, Okta), VPN Concentrators, Authentication
    Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      CALCULATE distribution of all observed travel_speeds between logins
      DEFINE threshold = 99.9th_percentile of distribution
      FOR each new_successful_login for a user
        CALCULATE required_speed
        IF required_speed > threshold
          ALERT as anomalous_travel
- question: Is a user's sequence of login locations anomalous compared to their learned
    normal travel patterns?
  context: This question uses advanced sequence modeling to detect sophisticated
    bypasses of location controls. An LSTM-based autoencoder can learn a user's typical
    login location patterns and trajectories. A new login that results in a high
    reconstruction error from the model is considered anomalous because it doesn't
    fit the user's established pattern, indicating a potential compromise even if
    it doesn't trigger a simple impossible travel rule.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Okta System Log
  - Cloud Identity Provider Portals (e.g., Entra ID, Okta), VPN Concentrators, Authentication
    Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each user
        TRAIN sequence_anomaly_model on historical login_location_trajectory
      FOR each new_login
        CALCULATE reconstruction_error using the model
        IF reconstruction_error is high
          ALERT on anomalous login sequence
- question: Has a successful login occurred from a country or ASN that is on a 'zero-login'
    list?
  context: This question uses a simple but effective rule for environments with a
    well-defined geographic footprint. If an organization has a list of countries
    or ASNs where no business is conducted and from which logins are not expected,
    any single successful login from a source on this list is a high-fidelity alert
    indicating a policy bypass.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE zero_login_locations = [list of countries/ASNs with no business]
      FOR each successful_login
        GET source_country, source_asn
        IF source_country IN zero_login_locations OR source_asn IN zero_login_locations
          ALERT on login
- question: Is there a sudden, statistically significant surge in successful logins
    from a country or ASN that historically has very low activity?
  context: This question aims to detect the emergence of a new attack origin by monitoring
    for statistical shifts in login volume. For each country or ASN, a baseline of
    normal login activity is established. A sudden spike in logins that significantly
    exceeds this baseline (e.g., more than 4 standard deviations above the mean) indicates
    an anomalous surge of activity from that location, potentially due to a policy
    change.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each source_country_or_asn
        CALCULATE 30-day_baseline (mean, stddev) of login_counts
        GET current_1hour_login_count
        IF current_1hour_login_count > (mean + 4 * stddev)
          ALERT on surge from location
- question: Has a change point detection algorithm identified an abrupt and persistent
    shift in login volume from a specific country or ASN?
  context: This question uses change point detection to automatically find lasting
    shifts in login patterns. Unlike simple spike detection, these algorithms can
    identify a durable change in the statistical properties of the login time series
    from a location. Such a change indicates a new, persistent pattern of activity
    has begun, which could be the result of a malicious policy modification allowing
    access from a new region.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Entra ID Sign-in logs
  - Edge Firewalls, VPN Concentrators, Cloud Identity Provider Portals (e.g., Entra
    ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each source_country_or_asn
        APPLY change_point_detection_algorithm to time_series of login_volumes
        IF algorithm detects a significant change point
          ALERT on new activity pattern from location
- question: Has a user account with known-compromised credentials successfully authenticated?
  context: This question checks for a failure of risk-based policies that should
    prevent the use of breached credentials. By comparing successfully authenticated
    usernames against a feed of known-compromised credentials (e.g., from haveibeenpwned),
    any match represents a critical failure. The policy should have blocked the login
    or forced an immediate password reset.
  answer_sources:
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Okta System Log
  - Authentication Servers (e.g., Domain Controllers), Cloud Identity Provider Portals
    (e.g., Entra ID, Okta), Threat Intelligence Platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      DEFINE compromised_accounts = [list from threat intel feed]
      FOR each successful_login
        GET username
        IF username IN compromised_accounts
          ALERT with high_priority
- question: Has a user with compromised credentials logged in with other anomalous
    behaviors?
  context: This question adds layers of risk to increase alert fidelity. A successful
    login from a compromised account is already bad, but if that login also exhibits
    behavior that is anomalous for that specific user (e.g., occurring at an unusual
    time or from a new location), it dramatically increases the likelihood that the
    login is malicious and that multiple security controls have failed.
  answer_sources:
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Okta System Log
  - Authentication Servers (e.g., Domain Controllers), Cloud Identity Provider Portals
    (e.g., Entra ID, Okta), Threat Intelligence Platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each successful_login
        IF username is on compromised_list AND login_attributes are statistical_outlier for user
          ALERT on high-risk successful login
- question: Is a machine learning model flagging a successful login from a compromised
    account as malicious?
  context: This question uses a predictive model to confirm policy failure. The model,
    which includes a feature for whether a credential is known to be compromised,
    should assign a very high risk score to any login attempt from such an account.
    If that login attempt is successful, it confirms that the conditional access policy
    failed to act on the high-risk signal provided by the compromised credential
    status.
  answer_sources:
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Okta System Log
  - Authentication Servers (e.g., Domain Controllers), Cloud Identity Provider Portals
    (e.g., Entra ID, Okta), Threat Intelligence Platforms
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each successful_login
        EXTRACT features including 'is_credential_compromised'
        PREDICT probability = classification_model.predict(features)
        IF probability is 'high' AND 'is_credential_compromised' is true
          ALERT on policy failure
- question: Have any successful external logins occurred using legacy authentication
    protocols?
  context: This question seeks to identify the use of insecure, legacy protocols
    (like POP, IMAP, SMTP AUTH) which often cannot enforce modern controls like MFA.
    A conditional access policy should block such protocols from external sources.
    Any successful authentication using one of these protocols from an external IP
    indicates a policy is missing, disabled, or has been maliciously modified to
    allow a less secure access method.
  answer_sources:
  - Entra ID Sign-in logs
  - Okta System Log
  - Zeek conn.log
  - Windows Event ID 4624
  - Mail Servers (Exchange, O365), Legacy Application Servers, Edge Firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each successful_login from external_ip
        GET client_application or protocol
        IF protocol IN [POP, IMAP, SMTP_AUTH, etc.]
          ALERT on legacy authentication
- question: Is there a sudden spike in legacy authentication usage, either by a specific
    user or organization-wide?
  context: This question establishes a baseline for legacy authentication usage to
    detect anomalous changes. For a user who never uses legacy protocols, a single
    successful legacy login is suspicious. At an organizational level, a sudden spike
    in the overall percentage of legacy authentications suggests a broad policy change
    has occurred, weakening security for many users at once.
  answer_sources:
  - Entra ID Sign-in logs
  - Okta System Log
  - Zeek conn.log
  - Windows Event ID 4624
  - Mail Servers (Exchange, O365), Legacy Application Servers, Edge Firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      BASELINE legacy_auth_usage per user and organization-wide
      MONITOR for sudden increases or deviations from baseline
      IF user with 0% baseline has legacy_auth OR org_wide % spikes > 95th_percentile
        ALERT
- question: Is an anomaly detection model detecting a spike in the volume of legacy
    authentication?
  context: This question automates the detection of changes in legacy protocol usage.
    A time series anomaly detection model can learn the normal (and hopefully near-zero)
    baseline of successful legacy authentications. The model can then automatically
    flag any sudden spikes or sustained increases from this baseline, providing an
    early warning that a policy intended to block legacy authentication may have
    been removed or weakened.
  answer_sources:
  - Entra ID Sign-in logs
  - Okta System Log
  - Zeek conn.log
  - Windows Event ID 4624
  - Mail Servers (Exchange, O365), Legacy Application Servers, Edge Firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL time_series of successful_legacy_auth_volume
      IF model detects an anomalous increase
        ALERT on potential policy change
- question: Has a single external IP address successfully authenticated to a high
    number of distinct user accounts in a short time?
  context: This question is designed to detect successful credential stuffing or
    password spraying attacks. Such attacks involve one source IP attempting to log
    in to many different accounts. A high count of *successful* logins from one IP
    to many accounts indicates the attack was effective and that MFA was not enforced,
    as it should have been, to stop the automated attack.
  answer_sources:
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Okta System Log
  - Authentication Servers (e.g., Domain Controllers), Web Application Firewalls,
    Cloud Identity Provider Portals (e.g., Entra ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      COUNT distinct users per source_ip in 1_hour_window
      IF count > 10
        ALERT on potential credential stuffing
- question: Is any single IP address responsible for a statistically anomalous number
    of successful logins to distinct accounts?
  context: This question uses a dynamic threshold to detect credential stuffing,
    making it more robust than a fixed rule. By calculating the normal distribution
    of unique successful logins per source IP, we can identify any IP whose activity
    is a statistical outlier (e.g., 4 standard deviations above the mean). This flags
    an IP performing a successful large-scale attack that bypassed MFA or other preventative
    controls.
  answer_sources:
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Okta System Log
  - Authentication Servers (e.g., Domain Controllers), Web Application Firewalls,
    Cloud Identity Provider Portals (e.g., Entra ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      CALCULATE mean and stddev of unique_logins_per_ip in 1_hour_window
      FOR each source_ip
        IF unique_logins_count > (mean + 4 * stddev)
          ALERT on outlier activity
- question: Can successful logins be grouped into a dense cluster originating from
    a single IP to many different accounts?
  context: This question uses clustering to identify successful password spraying
    or credential stuffing campaigns. A clustering algorithm like DBSCAN can group
    login events based on features like source IP and User-Agent. A dense cluster
    of successful logins all originating from the same IP but for many different
    user accounts is a strong signature of an automated attack that has bypassed
    MFA policies.
  answer_sources:
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Okta System Log
  - Authentication Servers (e.g., Domain Controllers), Web Application Firewalls,
    Cloud Identity Provider Portals (e.g., Entra ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      CLUSTER successful_logins on (source_ip, user_agent, time)
      IDENTIFY dense clusters where source_ip is constant but user_account is varied
      IF such a cluster is found
        ALERT on password spray attack
- question: Has a sequence of many failed logins been immediately followed by a successful
    login from the same IP?
  context: This question looks for the classic pattern of a brute-force or password
    spraying attack culminating in a success. A stateful rule can track the number
    of failures from a user/IP pair. When this count exceeds a threshold and is then
    reset by a success from the same IP, it indicates the attacker has found the
    correct password. This event requires investigation, as controls should have
    locked the account or challenged with MFA.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Authentication Servers (e.g., Domain Controllers), Cloud Identity Provider Portals
    (e.g., Entra ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each user/ip pair, track failed_login_count
      IF failed_login_count > threshold AND next event is success within 15 mins
        ALERT on brute-force success
- question: Following a brute-force attempt, was the subsequent successful login
    also anomalous based on the user's normal behavior?
  context: This question adds behavioral context to a brute-force success to increase
    confidence in the alert. After detecting a brute-force sequence, the subsequent
    successful login is scored against the user's baseline profile. If the successful
    login is also highly anomalous (e.g., from a new country, at an odd time), it
    compounds the suspicion and strongly suggests a compromise and policy bypass.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Authentication Servers (e.g., Domain Controllers), Cloud Identity Provider Portals
    (e.g., Entra ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      ON brute-force_success_alert
        GET successful_login_attributes (location, time, etc.)
        SCORE attributes against user's historical baseline
        IF score is highly anomalous
          INCREASE alert severity
- question: Did a user's login sequence transition from a 'Failed Login Spree' state
    to an 'Anomalous Success' state?
  context: This question uses a Hidden Markov Model (HMM) to model user login behavior
    as a sequence of states. A transition from a state representing numerous failed
    logins directly to a state representing a successful but anomalous login (e.g.,
    new location) would be a very low-probability sequence in a properly trained
    model. Detecting this improbable state transition provides a sophisticated signal
    of a likely compromise and policy failure.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Entra ID Sign-in logs
  - Authentication Servers (e.g., Domain Controllers), Cloud Identity Provider Portals
    (e.g., Entra ID, Okta)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      MODEL user login sequences with HMM (states: 'Normal', 'Failed Spree', 'Anomalous Success')
      FOR each new login sequence
        IF sequence shows transition from 'Failed Spree' to 'Anomalous Success'
          ALERT on low-probability sequence