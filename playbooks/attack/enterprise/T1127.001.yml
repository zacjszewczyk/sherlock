name: T1127.001: MSBuild
id: 3a17e8bc-1d4e-4f5b-871c-4e8929e0649c
description: |
  This playbook helps investigate if an adversary is executing malicious code via the MSBuild utility to evade defenses. It focuses on identifying several key indicators of misuse. These include MSBuild.exe executing project files that are known to be malicious via threat intelligence hash matching, or making network connections to known malicious destinations. The playbook also looks for suspicious execution patterns, such as running project files from non-standard directories (e.g., %TEMP%, %APPDATA%) or with unusual file extensions. It further investigates the context of the execution by checking for anomalous parent processes (e.g., Microsoft Office applications instead of development tools) and analyzing network traffic originating from MSBuild.exe for signs of command-and-control (C2) activity like beaconing or connections to domains generated by algorithms (DGA).
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is MSBuild.exe executing a malicious project file or connecting to a known-malicious C2 destination?
  context: |
    This question aims to identify clear-cut malicious activity by cross-referencing artifacts associated with MSBuild execution against known threat intelligence. A match on a file hash indicates the use of a known malicious tool or payload, while a match on a destination IP suggests communication with a command-and-control server. This provides high-confidence alerts based on previously identified threats.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek files.log
  - NAI: Developer workstations, CI/CD build servers, Internet gateway, Egress points
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE process_name = "MSBuild.exe"
    JOIN network_events ON source_ip
    EXTRACT project_file_path from command_line
    GET file_hash for project_file_path
    LOOKUP file_hash in threat_intel_feed
    LOOKUP destination_ip in threat_intel_feed
    RETURN events where either lookup is a match
- question: Is MSBuild.exe making network connections to rare or unusual destinations within the enterprise?
  context: |
    Adversaries often use novel or unique infrastructure for C2 communications to avoid detection based on known indicators. By identifying destinations that are rarely contacted by any system in the enterprise, analysts can uncover potential C2 channels that would otherwise be missed by reputation-based checks. A high rarity score suggests the destination is not part of normal business or development activity.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - NAI: Developer workstations, CI/CD build servers, Internet gateway, Egress points
  range: last 90 days
  queries:
  - |
    SEARCH network_events WHERE process_name = "MSBuild.exe"
    FOR each destination_ip, domain, ASN:
      CALCULATE frequency across all enterprise traffic over last 30 days
      CALCULATE percentile_rank
      FLAG connections where percentile_rank > 99
    RETURN flagged connections
- question: Can machine learning models classify MSBuild.exe network connections as suspicious based on their characteristics?
  context: |
    This question leverages machine learning to automate the detection of anomalous network behavior that might indicate C2 activity. By training a model on features like port, data volume, and connection duration from legitimate traffic, the model can learn to distinguish normal patterns (like fetching packages from nuget.org) from suspicious ones that warrant further investigation.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - NAI: Developer workstations, CI/CD build servers, Internet gateway, Egress points
  range: last 90 days
  queries:
  - |
    SEARCH network_events WHERE process_name = "MSBuild.exe"
    EXTRACT features (dest_port, orig_bytes, resp_bytes, duration, dest_ip_reputation)
    APPLY pre-trained classification model (e.g., Random Forest)
    FLAG connections classified as 'suspicious' with high confidence
    RETURN flagged connections
- question: Is MSBuild.exe being executed with a project file located in an unusual directory or with a non-standard file extension?
  context: |
    Legitimate build processes typically use project files stored in dedicated development directories. Adversaries often place their malicious project files in temporary or user-writable locations like %APPDATA% or %TEMP% to evade detection and operate within user context. Similarly, using non-standard file extensions (e.g., .txt) is a tactic to disguise the file's true purpose. This question helps identify such outliers.
  answer_sources:
  - Windows Event ID 4688
  - NAI: User workstations, Application servers, Domain Controllers, All Windows endpoints
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE process_name = "MSBuild.exe"
    PARSE project_file_path from command_line
    ALERT if project_file_path matches regex for non-standard locations (e.g., AppData, Temp, Public)
    ALERT if project_file_extension is not in allowlist (e.g., .csproj, .vbproj, .sln)
    RETURN alerted events
- question: Does the command line for an MSBuild.exe execution show high entropy, suggesting obfuscation or an inline task?
  context: |
    Adversaries may embed malicious code directly into the command line or obfuscate the project file path. These actions often increase the randomness or complexity of the command-line string, which can be measured using Shannon entropy. A command line with an unusually high entropy score, compared to a baseline of normal build commands, is a strong indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - NAI: User workstations, Application servers, Domain Controllers, All Windows endpoints
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE process_name = "MSBuild.exe"
    FOR each event:
      CALCULATE Shannon entropy of the command_line string
    ESTABLISH baseline entropy from known-good builds
    FLAG events where entropy > 95th percentile of baseline
    RETURN flagged events
- question: Is an MSBuild.exe execution an outlier when compared to a model of legitimate command-line behavior?
  context: |
    This question employs an anomaly detection model to identify MSBuild.exe executions that deviate from established normal patterns. By training a model like an Isolation Forest on features from legitimate command lines (e.g., argument count, path depth), the system can flag any new execution that doesn't conform to the learned norm, providing a powerful way to catch novel or unusual attack variations.
  answer_sources:
  - Windows Event ID 4688
  - NAI: User workstations, Application servers, Domain Controllers, All Windows endpoints
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE process_name = "MSBuild.exe"
    EXTRACT features (arg_count, path_depth, char_dist, flags) from command_line
    APPLY pre-trained anomaly detection model (e.g., Isolation Forest)
    FLAG events identified as outliers
    RETURN flagged events
- question: Was MSBuild.exe spawned by an unusual parent process, such as an Office application or script interpreter?
  context: |
    In a legitimate context, MSBuild.exe is typically launched by development environments (like Visual Studio), command prompts, or CI/CD tools. An adversary might launch MSBuild.exe from a compromised process, such as a Microsoft Office application (WINWORD.EXE) after a user opens a malicious document, or a scripting host (wscript.exe). This question seeks to identify these illegitimate parent-child relationships.
  answer_sources:
  - Windows Event ID 4688
  - NAI: User workstations, File servers, Microsoft Office 365/Exchange servers, Application servers
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE process_name = "MSBuild.exe"
    GET parent_process_name
    ALERT if parent_process_name is NOT in allowlist (e.g., devenv.exe, cmd.exe)
    PAY special attention to parents like WINWORD.EXE, OUTLOOK.EXE, wscript.exe
    RETURN alerted events
- question: Is the parent-child process relationship for an MSBuild.exe execution statistically rare in the environment?
  context: |
    This question uses statistical analysis to find anomalous process chains. Even if a parent process is plausible (e.g., cmd.exe), its occurrence might be extremely rare on a specific host or in a specific context. By identifying parent-child pairs that are statistical outliers (i.e., very infrequent), analysts can uncover subtle or targeted malicious activity that might otherwise be overlooked.
  answer_sources:
  - Windows Event ID 4688
  - NAI: User workstations, File servers, Microsoft Office 365/Exchange servers, Application servers
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE child_process = "MSBuild.exe" over last 30 days
    GROUP BY parent_process, child_process
    CALCULATE frequency of each pair
    FLAG pairs in the bottom 5th percentile of frequency
    RETURN flagged events
- question: Does the sequence of process executions leading to MSBuild.exe's launch deviate from the normal temporal baseline for that host?
  context: |
    This is a more advanced approach that considers not just the immediate parent but the entire chain of events leading to an MSBuild.exe execution. A sequence-based model (like an LSTM autoencoder) can learn the normal "rhythm" of process activity on a host. It can then flag instances where MSBuild.exe is launched in an unexpected order or context, indicating a potential deviation caused by an adversary's actions.
  answer_sources:
  - Windows Event ID 4688
  - NAI: User workstations, File servers, Microsoft Office 365/Exchange servers, Application servers
  range: last 90 days
  queries:
  - |
    FOR each host:
      MODEL process execution sequences as a time series or temporal graph
      TRAIN sequence-based anomaly model (e.g., LSTM autoencoder) on normal sequences
      APPLY model to new process execution sequences
      FLAG sequences where MSBuild.exe appears in an anomalous context
    RETURN flagged sequences
- question: Is MSBuild.exe associated with DNS queries that appear to be generated by a Domain Generation Algorithm (DGA)?
  context: |
    Adversaries use DGAs to rapidly generate a large number of domain names for C2 rendezvous points, making it difficult to block them by name. These domains often have a distinct, algorithmically generated look (e.g., long strings of random characters). This question aims to detect DGA activity by correlating MSBuild processes with DNS logs and searching for these characteristic query patterns.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - NAI: Internet gateway, DNS servers, Proxy servers, User workstations, CI/CD build servers
  range: last 90 days
  queries:
  - |
    SEARCH process_events WHERE process_name = "MSBuild.exe"
    CORRELATE with dns_logs on source_ip and timestamp
    FOR each correlated DNS query:
      APPLY regex for DGA patterns (e.g., long random string, known dynamic DNS)
      ALERT on matches
    RETURN alerted events
- question: Does network traffic from MSBuild.exe exhibit signs of C2 beaconing or high-entropy domain lookups?
  context: |
    C2 implants often "beacon" out to their control server at regular intervals. This creates a highly periodic pattern in network connection logs, which can be detected by analyzing the time between connections to a specific destination. A low standard deviation in these time deltas is a strong sign of automated, non-human traffic. Additionally, high entropy in a domain name is a classic indicator of DGA, complementing the regex-based approach.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - NAI: Internet gateway, DNS servers, Proxy servers, User workstations, CI/CD build servers
  range: last 90 days
  queries:
  - |
    SEARCH network_events WHERE process_name = "MSBuild.exe"
    GROUP by src_ip, dest_ip
    CALCULATE time deltas between connections
    CALCULATE standard deviation of deltas
    ALERT if std_dev is very low (e.g., < 1s)

    SEARCH dns_logs correlated with MSBuild.exe
    CALCULATE Shannon entropy of domain query
    ALERT if entropy is high (e.g., > 3.5)
    RETURN alerted events
- question: Does network traffic associated with MSBuild.exe show anomalous deviations from a forecasted baseline of behavior?
  context: |
    This question uses time-series forecasting to detect unexpected changes in network behavior. By modeling normal traffic patterns (like data volume and connection counts) for MSBuild.exe on a per-host basis, the system can predict what "should" be happening. A significant deviation from this forecast, such as a sudden spike in outbound data, could indicate malicious activity like data exfiltration or the downloading of a second-stage payload.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - NAI: Internet gateway, DNS servers, Proxy servers, User workstations, CI/CD build servers
  range: last 90 days
  queries:
  - |
    FOR each source_ip with MSBuild.exe traffic:
      MODEL network features (bytes, count, duration) as a multivariate time series
      FORECAST expected behavior
      FLAG significant deviations between observed and forecasted values
    RETURN flagged deviations