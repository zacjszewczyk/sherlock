name: 'T1127.001: MSBuild'
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook helps investigate whether an adversary is leveraging the MSBuild utility to execute malicious code and evade defenses. It focuses on identifying suspicious MSBuild executions by analyzing process command lines, parent-child relationships, file paths, and network behavior. Key indicators include MSBuild making outbound connections to known-malicious IPs or rare destinations, using project files from non-standard locations, being spawned by unusual parent processes like Microsoft Office applications, or exhibiting network traffic patterns indicative of C2 communication like beaconing or DGA.
type: technique
related:
  - 'TA0005: Defense Evasion'
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is MSBuild executing a known malicious project file or connecting to a known malicious C2 destination?
    context: |
      This question aims to find direct evidence of compromise by correlating MSBuild process activity with threat intelligence. A match on either a file hash or a network destination IP is a high-fidelity indicator that an adversary is using MSBuild for malicious code execution or C2 communication.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Developer workstations
      - CI/CD build servers
      - Internet gateway
      - Egress points
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH process events for MSBuild.exe
          JOIN with network logs on source_ip, timestamp
          EXTRACT project file path from command line
          IF file content available:
            CALCULATE file hash (SHA256)
            MATCH hash against malicious file intelligence feed
          MATCH destination_ip from network logs against C2 intelligence feed
          ALERT on any match
  - question: Is MSBuild connecting to an unusually rare destination IP, domain, or ASN within the enterprise?
    context: |
      Adversaries often use novel or dedicated infrastructure for C2, which appears as rare or unique in an organization's network traffic. Identifying MSBuild connections to statistically rare destinations helps uncover potential C2 channels that are not yet on threat intelligence feeds. This is a powerful statistical method for finding unknown threats.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Developer workstations
      - CI/CD build servers
      - Internet gateway
      - Egress points
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH network logs for connections from MSBuild.exe processes
          FOR each destination IP, domain, and ASN:
            CALCULATE frequency across all enterprise traffic over 30 days
            CALCULATE percentile rank of frequency
            FLAG if rank > 99th percentile for review
  - question: Can network connections from MSBuild.exe be classified as suspicious based on their characteristics?
    context: |
      This question applies machine learning to distinguish between legitimate MSBuild network activity (like fetching packages from nuget.org) and malicious activity. By training a model on features like port, data volume, and connection duration, we can automatically flag connections that deviate from the norm and resemble C2 communication patterns, even for previously unseen destinations.
    answer_sources:
      - Zeek conn.log
      - Developer workstations
      - CI/CD build servers
      - Internet gateway
      - Egress points
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each network connection from an MSBuild.exe process:
            EXTRACT features (destination port, data volume, connection duration, IP reputation)
            APPLY pre-trained classification model (e.g., Random Forest)
            FLAG if classified as 'suspicious' with high confidence
  - question: Is MSBuild being executed with a project file located in a non-standard directory or with an unusual file extension?
    context: |
      Adversaries often drop malicious payloads in temporary or user-specific directories like %APPDATA% or %TEMP% to evade detection and persist. Legitimate build processes typically use project files from dedicated source code repositories. This question helps identify suspicious MSBuild usage by flagging executions that use files from unusual locations or with deceptive extensions.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Application servers
      - Domain Controllers
      - All Windows endpoints
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH process events for MSBuild.exe
          PARSE command line to extract project file path and extension
          ALERT if file path matches regex for non-standard locations (e.g., 'C:\Users\.*\AppData', 'C:\Windows\Temp')
          ALERT if file extension is not in an allowlist (e.g., .csproj, .vbproj, .sln, .xml)
  - question: Does the command line for an MSBuild execution exhibit high entropy, suggesting obfuscation or inline tasks?
    context: |
      Adversaries may embed heavily obfuscated scripts or payloads directly into the command line to avoid creating separate malicious files. This often results in a command-line string with high randomness, or entropy. By comparing the entropy of a command line against a baseline of normal activity, we can spot potentially malicious, obfuscated commands.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Application servers
      - Domain Controllers
      - All Windows endpoints
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each MSBuild.exe process event:
            CALCULATE Shannon entropy of the command-line string
            COMPARE entropy to a pre-computed baseline of normal build processes
            FLAG if entropy score exceeds the 95th percentile of the baseline
  - question: Is the structure of an MSBuild command line anomalous compared to established legitimate build patterns?
    context: |
      This question uses an unsupervised machine learning model to detect deviations from normal MSBuild command-line structures. By learning the characteristics of legitimate commands (like argument count, path depth, etc.), the model can identify outliers that don't fit the pattern, which could represent an adversary's attempt to misuse the utility in a novel way.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Application servers
      - Domain Controllers
      - All Windows endpoints
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each MSBuild.exe command line:
            EXTRACT features (argument count, path depth, character distribution, flag usage)
            APPLY pre-trained anomaly detection model (e.g., Isolation Forest)
            FLAG if the instance is identified as an outlier
  - question: Was MSBuild spawned by an unexpected or unauthorized parent process?
    context: |
      MSBuild is typically launched by development environments (like Visual Studio), command-line shells, or other build tools. An adversary might trigger MSBuild from a compromised application, such as a Microsoft Office document with a malicious macro. This question identifies such suspicious execution chains by checking the parent process against an allowlist of expected initiators.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - File servers
      - Microsoft Office 365/Exchange servers
      - Application servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          SEARCH process events for MSBuild.exe
          IDENTIFY the parent process name for each event
          ALERT if parent process is not on an allowlist (e.g., 'devenv.exe', 'cmd.exe', 'powershell.exe')
          INCREASE severity if parent is 'WINWORD.EXE', 'EXCEL.EXE', 'OUTLOOK.EXE', or 'wscript.exe'
  - question: Is the parent-child process relationship for an MSBuild execution statistically rare?
    context: |
      This question moves beyond a static allowlist to statistically identify unusual execution chains. By analyzing the frequency of all parent-child pairs involving MSBuild over time, we can flag pairs that occur very rarely. This can uncover novel attack vectors or misconfigurations that would be missed by a predefined list of "bad" parents.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - File servers
      - Microsoft Office 365/Exchange servers
      - Application servers
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: |
          AGGREGATE all parent-child process pairs where child is MSBuild.exe over 30 days
          CALCULATE a frequency distribution of these pairs
          FLAG any pair that falls in the bottom 5th percentile of frequency for review
  - question: Does the sequence of processes leading to an MSBuild execution deviate from the normal temporal baseline for that host?
    context: |
      Attacks are not single events but a sequence of actions. This advanced question aims to model the entire chain of process executions on a host. A sequence-based anomaly detection model can learn what "normal" looks like and flag instances where MSBuild is executed as part of an unusual sequence, providing deeper context than just looking at the immediate parent.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - File servers
      - Microsoft Office 365/Exchange servers
      - Application servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each host:
            MODEL the normal sequences of process executions over time
            APPLY a sequence anomaly detection model (e.g., LSTM autoencoder) to new data
            FLAG any sequence where MSBuild.exe appears in an anomalous context
  - question: Is MSBuild making DNS requests for domains that appear to be generated by an algorithm (DGA)?
    context: |
      Domain Generation Algorithms (DGAs) are used by malware to create a large number of potential C2 domains, making them difficult to block. This question focuses on identifying DNS queries made by MSBuild that match patterns of DGA, such as long, random-looking domain names, which is a strong indicator of a C2 channel.
    answer_sources:
      - Windows Event ID 4688
      - Zeek dns.log
      - Internet gateway
      - DNS servers
      - Proxy servers
      - User workstations
      - CI/CD build servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          JOIN MSBuild process events with DNS logs on source_ip and timestamp
          FOR each correlated DNS query:
            APPLY regex to query field to detect DGA patterns (e.g., '^[a-z0-9]{20,}\\.')
            ALERT on match
  - question: Is MSBuild exhibiting network beaconing behavior or making DNS queries with high entropy?
    context: |
      This question looks for two classic C2 indicators. The first is beaconing, where malware communicates with its C2 server at regular, predictable intervals. The second is high-entropy domain names, a hallmark of DGAs. Identifying either of these behaviors in network traffic from MSBuild is a strong signal of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateway
      - DNS servers
      - User workstations
      - CI/CD build servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          // Beaconing Detection
          GROUP MSBuild network connections by source/destination IP pair
          CALCULATE time deltas between consecutive connections
          CALCULATE standard deviation of time deltas
          ALERT if standard deviation is very low (e.g., < 1s for a 60s beacon)

          // DGA Detection
          CALCULATE Shannon entropy of the domain name in DNS queries from MSBuild
          ALERT if entropy score is high (e.g., > 3.5)
  - question: Does the network traffic pattern from MSBuild on a given host deviate significantly from its forecasted behavior?
    context: |
      This question uses time-series forecasting to establish a baseline of normal network behavior for MSBuild on a per-host basis. By modeling features like data volume and connection counts over time, we can predict what "normal" should look like. Any significant, unpredicted spike or change in behavior can indicate an anomaly like data exfiltration or a new C2 connection.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Internet gateway
      - DNS servers
      - User workstations
      - CI/CD build servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: |
          FOR each source IP with MSBuild activity:
            BUILD a multivariate time-series model of network features (e.g., bytes out, connection count, duration)
            FORECAST expected behavior based on historical data
            FLAG significant deviations between the observed and forecasted values