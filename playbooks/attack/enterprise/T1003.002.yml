name: T1003.002: Security Account Manager
id: 3a9a951c-a12d-4890-8e01-9c6f24419888
description: This playbook focuses on detecting attempts by adversaries to access credentials stored in the Security Account Manager (SAM) database. It covers multiple vectors of attack, including the execution of known credential dumping tools, the misuse of system utilities like reg.exe or vssadmin.exe to create copies of SAM or SYSTEM hives, direct unauthorized access to the SAM file itself, memory scraping of the LSASS process, and direct unauthorized access to the SAM and SYSTEM registry hives. The goal is to identify these credential access activities on critical assets such as Domain Controllers, Tier 0/1 Servers, and Administrator Workstations.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a known credential dumping tool been executed on the network?
    context: This question seeks to identify the direct execution of malicious tools designed to dump credentials. Adversaries often use well-known utilities like mimikatz, gsecdump, or secretsdump.py. Detection can be achieved through symbolic methods like matching process names or hashes against a threat intelligence list. Statistical methods can also be effective by looking for anomalies in process name characteristics, such as high entropy, especially when executed from unusual parent processes or temporary directories. More advanced detection can use machine learning models trained to classify process executions as malicious based on a variety of features like parent process, command-line arguments, and user context.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Command-line and process execution logs on critical assets like Domain Controllers, Tier 0/1 Servers, and Administrator Workstations.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE process_name IN (credential_dumping_tool_list) OR process_hash IN (credential_dumping_tool_hash_list)
      - technology: pseudocode
        query: SEARCH process_creation_logs | CALCULATE entropy(process_name) | DETECT where entropy > baseline_threshold AND process_path IN (temp_dirs)
      - technology: pseudocode
        query: INPUT process_creation_event | APPLY ML_credential_dumper_model | DETECT where classification == 'malicious' AND confidence > 0.9

  - question: Have system utilities been used to save or copy the SAM or SYSTEM registry hives?
    context: Adversaries may 'live off the land' by using legitimate system utilities to access credential data, thereby avoiding the introduction of external tools. This question looks for the misuse of programs like `reg.exe`, `vssadmin.exe`, or `ntdsutil.exe`. Symbolic detection involves searching command-line arguments for specific patterns associated with saving hives or creating shadow copies. Statistical analysis can identify hosts executing these commands at an anomalous frequency. Time-series analysis can also be used to detect unusual spikes in commands like `vssadmin create shadow` that deviate from normal backup schedules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Command-line and process execution logs on critical assets, particularly Domain Controllers and Tier 0 Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE (process_name == 'reg.exe' AND command_line MATCHES 'save hklm\\(sam|system)') OR (process_name == 'vssadmin.exe' AND command_line MATCHES 'create shadow')
      - technology: pseudocode
        query: SEARCH process_creation_logs | COUNT suspicious_commands BY host, time_window | DETECT where count > baseline_95th_percentile
      - technology: pseudocode
        query: INPUT hourly_vssadmin_create_count | APPLY time_series_anomaly_model | DETECT where anomaly_score is high

  - question: Has a non-whitelisted process accessed the SAM database file directly?
    context: This question focuses on detecting direct and unauthorized access to the SAM file located at `%SystemRoot%\system32\config\SAM`. Since the SAM file is locked during normal system operation, adversaries need special methods to access it. Symbolic detection relies on enabling file system auditing (SACLs) on the SAM file and alerting on any access from a process not on a pre-defined whitelist of legitimate processes (like lsass.exe). Statistical methods can flag access from statistically rare processes. Unsupervised machine learning models, like an Isolation Forest, can be trained on normal file access patterns to identify anomalous access events based on features like process name, user, and time of day.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 11 (Sysmon)
      - File system audit logs on Domain Controllers and Tier 0 Servers, specifically monitoring the %SystemRoot%\system32\config\ directory.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH file_access_logs WHERE target_file == '...\\config\\SAM' AND process_name NOT IN (sam_access_whitelist)
      - technology: pseudocode
        query: SEARCH file_access_logs WHERE target_file == '...\\config\\SAM' | CALCULATE frequency(process_name) | DETECT where frequency < 1st_percentile
      - technology: pseudocode
        query: INPUT sam_file_access_event | APPLY ML_file_access_anomaly_model | DETECT where anomaly_score is high

  - question: Has an unauthorized process attempted to read the memory of the LSASS process?
    context: The Local Security Authority Subsystem Service (LSASS) process stores credentials in memory for active user sessions. Adversaries target this process to extract these credentials. This question aims to detect such attempts by monitoring for process access events. A symbolic approach involves monitoring Sysmon Event ID 10 for any process not on a whitelist that requests read access (`PROCESS_VM_READ`) to `lsass.exe`. Statistical methods can flag processes that have rarely or never accessed LSASS before. Graph-based machine learning can model normal process interactions and identify any anomalous process attempting to connect to the LSASS process.
    answer_sources:
      - Windows Event ID 10 (Sysmon)
      - Process memory access logs on critical assets like Domain Controllers, Tier 0/1 Servers, and Administrator Workstations.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_access_logs WHERE target_process == 'lsass.exe' AND source_process NOT IN (lsass_access_whitelist) AND access_mask CONTAINS 'PROCESS_VM_READ'
      - technology: pseudocode
        query: SEARCH process_access_logs WHERE target_process == 'lsass.exe' | CALCULATE historical_frequency(source_process) | DETECT where historical_frequency is 'rare' or 'new'
      - technology: pseudocode
        query: INPUT process_interaction_graph | APPLY community_detection_algorithm | DETECT source_process attempting to access 'lsass.exe' that is not in an established community

  - question: Has a non-whitelisted process accessed the HKLM\SAM or HKLM\SYSTEM registry hives?
    context: Similar to direct file access, adversaries may attempt to access or export the SAM and SYSTEM registry hives directly through registry operations. This question focuses on identifying these unauthorized registry access events. A symbolic approach requires enabling registry auditing and alerting whenever a non-whitelisted process accesses the `HKLM\SAM` or `HKLM\SYSTEM` keys. Statistical analysis can be used to detect anomalous spikes in the rate of access to these keys by any given process. Sequence analysis models, like a Hidden Markov Model, can learn legitimate sequences of actions and flag anomalous sequences, such as a non-interactive shell spawning a process that immediately accesses these sensitive hives.
    answer_sources:
      - Windows Event ID 4656
      - Windows Event ID 12 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - Windows Registry audit logs on Domain Controllers, Tier 0/1 Servers, and Administrator Workstations, specifically monitoring the HKLM\SAM and HKLM\SYSTEM hives.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH registry_access_logs WHERE target_key MATCHES '\\REGISTRY\\MACHINE\\(SAM|SYSTEM)' AND process_name NOT IN (registry_access_whitelist)
      - technology: pseudocode
        query: SEARCH registry_access_logs WHERE target_key MATCHES 'HKLM\\SAM' | CALCULATE access_rate_per_process | DETECT where z_score(access_rate) > 3.0
      - technology: pseudocode
        query: INPUT user_process_action_sequence | APPLY HMM_sequence_model | DETECT where sequence_probability is low AND action includes 'access HKLM\\SAM'