name: T1218.004: InstallUtil
id: 5c8a6f4e-1b3a-4f9d-8b7c-2e6a9d0f1e2a
description: This playbook helps investigate whether an adversary has executed code via InstallUtil.exe for defense evasion. The investigation focuses on identifying executions where the assembly's hash is known-bad or statistically rare; executions using the '/u' (uninstall) switch from non-standard directories; executions spawned by anomalous parent processes like Office applications or web browsers; executions followed by suspicious outbound network connections to rare or malicious destinations; and executions of files recently downloaded from the network.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an assembly executed by InstallUtil.exe identified as malicious by a known-bad hash in our threat intelligence feeds?
    context: This question aims to detect the use of known malicious payloads with InstallUtil.exe. By extracting the file hash of the .NET assembly being executed and comparing it against a database of malicious file hashes, an analyst can quickly identify a confirmed compromise. A match is a high-fidelity indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File systems and process logs on all Windows endpoints and servers, with heightened monitoring on developer workstations, build servers, and application servers where .NET is prevalent.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process creation event WHERE process_name == 'InstallUtil.exe'
            EXTRACT command_line_argument as target_assembly_path
            CALCULATE or RETRIEVE sha256_hash for target_assembly_path
            IF sha256_hash IN threat_intelligence_database
              ALERT 'Known malicious assembly executed by InstallUtil.exe'
  - question: Has InstallUtil.exe executed a .NET assembly that is statistically rare or new to the environment?
    context: This question seeks to identify anomalous or non-standard software being executed by InstallUtil.exe. By baselining all assembly hashes executed by InstallUtil.exe across the enterprise, analysts can flag any hash that is new or has only been seen on a very small number of hosts. This can indicate the presence of custom malware or unauthorized tools.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File systems and process logs on all Windows endpoints and servers, with heightened monitoring on developer workstations, build servers, and application servers where .NET is prevalent.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each InstallUtil.exe execution
            EXTRACT assembly_hash from event
            QUERY historical database for prevalence and host_count of assembly_hash
            IF prevalence == 1 OR host_count == 1
              ALERT 'Statistically rare assembly executed by InstallUtil.exe'
  - question: Does a static binary analysis model classify a .NET assembly executed by InstallUtil.exe as potentially malicious?
    context: This question addresses the detection of novel or unknown threats that are not present in threat intelligence feeds. By applying a machine learning model to analyze the features of the .NET assembly itself (e.g., entropy, imported functions, string values), analysts can score the file's likelihood of being malicious and prioritize suspicious, high-scoring assemblies for deeper reverse engineering.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File systems and process logs on all Windows endpoints and servers, with heightened monitoring on developer workstations, build servers, and application servers where .NET is prevalent.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new assembly_hash executed by InstallUtil.exe
            EXTRACT binary features (entropy, imports, strings) from the assembly file
            APPLY classification model to features
            CALCULATE maliciousness_score
            IF maliciousness_score > threshold
              ALERT 'High-probability malicious assembly executed by InstallUtil.exe'
  - question: Is InstallUtil.exe being used with an uninstall switch to execute an assembly from a non-standard or user-writable directory?
    context: Adversaries often abuse the '/u' or '/uninstall' switch of InstallUtil.exe to execute code. Legitimate software uninstallations typically run from protected directories like 'Program Files'. This question looks for the combination of the uninstall switch and execution from a suspicious location (e.g., C:\Users, C:\Windows\Temp), which is a strong indicator of malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process execution logs on all Windows endpoints and servers, particularly those of non-developer users where software installation is infrequent.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process creation event WHERE process_name == 'InstallUtil.exe'
            EXTRACT command_line and target_path
            IF ('/u' IN command_line OR '/uninstall' IN command_line) AND (target_path MATCHES 'C:\Users\*' OR 'C:\ProgramData\*' OR 'C:\Windows\Temp\*')
              ALERT 'InstallUtil uninstall from suspicious location'
  - question: Does the file path of an assembly executed by InstallUtil.exe exhibit anomalous characteristics like high entropy or unusual directory depth?
    context: This question aims to detect malware that uses obfuscated or randomized file paths to evade detection. By establishing a baseline for normal path characteristics (string entropy, directory depth) of assemblies used by InstallUtil.exe, analysts can flag executions where the path is an outlier, suggesting it may have been programmatically generated by a malicious tool.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process execution logs on all Windows endpoints and servers, particularly those of non-developer users where software installation is infrequent.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each InstallUtil.exe execution
            EXTRACT target_path
            CALCULATE path_entropy and path_depth
            COMPARE path_entropy and path_depth against historical baseline
            IF path_entropy > 95th_percentile OR path_depth deviates > 2_stddev
              ALERT 'Anomalous file path used with InstallUtil.exe'
  - question: Does a machine learning model assign a high risk score to an InstallUtil.exe execution based on its command line, path, parent process, and user context?
    context: This question uses a holistic, model-based approach to risk assessment. Instead of relying on a single indicator, it combines multiple weak signals (e.g., use of '/u' switch, path location, parent process, user account) into a logistic regression classifier. This allows for more nuanced detection, flagging events that are collectively suspicious even if no single feature is definitively malicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process execution logs on all Windows endpoints and servers, particularly those of non-developer users where software installation is infrequent.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each InstallUtil.exe execution
            EXTRACT features (has_uninstall_switch, path_location_type, parent_process, user_context)
            APPLY logistic regression model to features
            CALCULATE risk_score
            IF risk_score > threshold
              ALERT 'High-risk InstallUtil.exe execution detected'
  - question: Was InstallUtil.exe launched by a process not typically associated with software installation, such as an Office application, web browser, or script interpreter?
    context: This question focuses on identifying malicious process chains. Legitimate InstallUtil.exe executions are typically spawned by installers or development environments. When the parent process is an application like Word, Excel, PowerShell, or a browser, it strongly suggests that a malicious document, script, or downloaded file was the initial vector of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process lineage data from all Windows endpoints and servers, with a focus on user workstations running common productivity software.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE non_standard_parents = ['winword.exe', 'excel.exe', 'powershell.exe', 'wscript.exe', 'chrome.exe']
          FOR each process creation event WHERE process_name == 'InstallUtil.exe'
            GET parent_process_name
            IF parent_process_name IN non_standard_parents
              ALERT 'InstallUtil.exe spawned by non-standard parent'
  - question: Has InstallUtil.exe been executed by a parent process that is statistically rare or has never been observed in the environment before?
    context: This question uses anomaly detection to find suspicious process lineage. By creating a baseline of all legitimate parent-child relationships involving InstallUtil.exe, any execution spawned by a parent process that is new to the environment or seen very infrequently can be flagged as anomalous and worthy of investigation. This can help detect novel attack patterns.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process lineage data from all Windows endpoints and servers, with a focus on user workstations running common productivity software.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each InstallUtil.exe execution
            GET parent_process_name
            QUERY historical database for frequency of parent_process_name
            IF frequency < 1% OR parent_process_name IS new
              ALERT 'Rare parent process for InstallUtil.exe detected'
  - question: Does an unsupervised clustering model identify an InstallUtil.exe execution as an anomaly based on its process context (parent, grandparent, arguments, user)?
    context: This question applies unsupervised machine learning to find outliers without predefined rules. By grouping similar InstallUtil.exe executions into clusters based on contextual features, any execution that does not fit into an established "normal" cluster is identified as a noise point or anomaly. This is effective for detecting sophisticated or unusual attack techniques that might evade rule-based systems.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Process lineage data from all Windows endpoints and servers, with a focus on user workstations running common productivity software.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          COLLECT feature vectors (parent_process, command_line, user) for all InstallUtil.exe executions
          APPLY DBSCAN clustering algorithm to feature vectors
          FOR each execution classified as 'noise'
            ALERT 'Anomalous InstallUtil.exe execution cluster identified'
  - question: Shortly after an InstallUtil.exe execution, did the host initiate a network connection to a known malicious IP address or domain?
    context: This question links process execution to subsequent network activity to detect command and control (C2) communication. An outbound connection to a destination on a threat intelligence blocklist occurring within moments of an InstallUtil.exe execution is a strong indicator that a malicious payload was successfully run and is now "calling home."
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network traffic logs from network security monitoring sensors (e.g., Zeek) at egress points, DNS server query logs, and process/network event logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each InstallUtil.exe execution at time T on host H
            SEARCH for network connections from host H between T and T+60s
            FOR each connection
              GET destination_ip, destination_domain
              IF destination_ip OR destination_domain IN threat_intelligence_database
                ALERT 'Post-InstallUtil execution C2 connection to known bad destination'
  - question: Following an InstallUtil.exe execution, did the host make a network connection to a destination (IP, port, domain) that is statistically rare for the enterprise?
    context: This question aims to detect C2 activity by identifying anomalous network destinations, even if they are not on a known blocklist. A connection to an IP address or domain never before seen in the enterprise, or on a non-standard port, is suspicious. When this activity is temporally linked to an InstallUtil.exe execution, it raises the probability of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network traffic logs from network security monitoring sensors (e.g., Zeek) at egress points, DNS server query logs, and process/network event logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each network connection within 60s of an InstallUtil.exe execution
            GET destination_ip, destination_port, destination_domain
            CALCULATE rarity_score based on historical prevalence of IP, port, and domain
            IF rarity_score > threshold
              ALERT 'Post-InstallUtil execution connection to statistically rare destination'
  - question: Did a host's network behavior (e.g., data volume, connection frequency, beaconing patterns) deviate significantly from its normal baseline after an InstallUtil.exe execution?
    context: This question looks for behavioral changes on a host post-execution. A malicious implant installed via InstallUtil.exe may alter the host's network patterns, for example, by starting a regular C2 beacon, exfiltrating data (increasing outbound bytes), or connecting more frequently. Detecting such a deviation from the host's established baseline using a time-series model can uncover the presence of an active implant.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek dns.log
      - Network traffic logs from network security monitoring sensors (e.g., Zeek) at egress points, DNS server query logs, and process/network event logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host with an InstallUtil.exe execution
            APPLY time-series anomaly detection model to host's network metrics (outbound_bytes, connection_freq)
            IF model flags significant anomaly following the execution time
              ALERT 'Anomalous network behavior detected on host after InstallUtil execution'
  - question: Was a file recently created on disk (especially from a browser or email client) and then immediately executed by InstallUtil.exe?
    context: This question targets the common "download and execute" attack chain. Adversaries deliver payloads via phishing emails or malicious downloads. Correlating a file creation event (Sysmon Event ID 11) with a subsequent execution of that file by InstallUtil.exe within a very short time window (e.g., <5 minutes) is a strong indicator of this technique.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Zeek files.log
      - Network file transfer logs from network security monitoring sensors (e.g., Zeek) and file system/process creation logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each file creation event for file F at time T1
            SEARCH for InstallUtil.exe execution of file F at time T2
            IF T2 - T1 < 5 minutes
              ALERT 'Download-and-execute sequence detected with InstallUtil.exe'
  - question: Did the time between a file being written to disk and its execution by InstallUtil.exe occur with suspicious speed (e.g., in the bottom 5th percentile of observed times)?
    context: This question refines the "download and execute" detection by focusing on the speed of execution. Automated attacks will often execute a payload almost instantaneously after it is written to disk. By baselining the typical time delta between file writes and executions, analysts can flag sequences that are statistically much faster than normal, suggesting automated, non-interactive malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Zeek files.log
      - Network file transfer logs from network security monitoring sensors (e.g., Zeek) and file system/process creation logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE time_delta between file_write and InstallUtil_execution for all instances
          CALCULATE distribution of time_delta
          FOR each new instance
            IF its time_delta < 5th_percentile
              ALERT 'Anomalously fast execution after file write by InstallUtil.exe'
  - question: Does a graph-based analysis of system activity reveal a rare or anomalous sequence of events leading to an InstallUtil.exe execution?
    context: This advanced question models system activity as a graph to uncover complex attack chains. By representing processes, files, and network connections as nodes and their interactions as edges, an algorithm can identify and score entire event sequences. A rare path, such as 'browser.exe -> downloads -> temp.dll -> executed_by -> InstallUtil.exe', can be flagged as a high-scoring anomaly even if individual events are not suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Zeek files.log
      - Network file transfer logs from network security monitoring sensors (e.g., Zeek) and file system/process creation logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL process, file, and network events as a graph
          IDENTIFY all paths leading to an InstallUtil.exe execution node
          SCORE each path based on the rarity of its edges/nodes
          IF path_score > threshold
            ALERT 'Anomalous event chain leading to InstallUtil.exe execution detected'