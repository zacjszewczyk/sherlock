name: T1639: Exfiltration Over Alternative Protocol
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  Investigates whether an adversary has exfiltrated data from a corporate mobile device using a non-standard or alternative network protocol. This playbook focuses on detecting unusual network behaviors indicative of exfiltration. Key indicators include mobile devices initiating outbound connections with protocols not seen in their historical baseline (e.g., FTP, IRC, SMB), or when the volume of outbound data in a single connection significantly exceeds statistical norms for that protocol across the mobile fleet. It also addresses DNS tunneling by analyzing high query rates, unusual query name entropy, high ratios of TXT/NULL requests, and queries to low-prevalence domains. Additionally, it scrutinizes HTTP/S traffic for abnormally large POST requests and periodic 'heartbeat' connections to non-corporate or newly registered domains, which could signal command-and-control communication.
type: technique
related: [TA0036: Exfiltration]
contributors: [Zachary Szewczyk, Ask Sage]
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a mobile device connecting to a destination IP or port associated with known command-and-control (C2) or data exfiltration services?
    context: |
      Adversaries often use known malicious infrastructure for command-and-control or to stage exfiltrated data. Identifying connections from corporate mobile devices to these blacklisted IPs or ports is a high-fidelity indicator of a potential compromise and active data theft. This check serves as a first-line defense by correlating live network traffic against curated threat intelligence.
    answer_sources: [Zeek conn.log, Corporate Wi-Fi network segments, guest networks, VPN concentrators, cloud proxies, Mobile Device Management (MDM) platform logs, Threat Intelligence Feeds]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each connection IN zeek_conn_logs WHERE source_ip IN mobile_ip_space:
            IF destination_ip OR destination_port IN threat_intel_feed:
              ALERT (connection_details)
  - question: Is a mobile device using a network protocol that is anomalous for its own history, or is it sending an unusually large amount of data for a given protocol compared to its peers?
    context: |
      This question aims to detect two types of anomalies. First, it identifies when a device starts using a protocol it has not used in the past 30 days, which could indicate a new, unauthorized tool or malware. Second, it flags connections where the amount of outbound data is a statistical outlier compared to all other mobile devices. This can catch bulk data transfers hidden within otherwise legitimate protocols.
    answer_sources: [Zeek conn.log, Corporate Wi-Fi network segments, guest networks, VPN concentrators, cloud proxies, Mobile Device Management (MDM) platform logs]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Anomaly
          FOR each device IN mobile_devices:
            current_protocols = GET_protocols(device, last_24_hours)
            baseline_protocols = GET_protocols(device, last_30_days)
            IF any protocol in current_protocols NOT IN baseline_protocols:
              ALERT (device, new_protocol)

          // Statistical Anomaly
          thresholds = CALCULATE_99th_percentile(outbound_bytes) PER protocol FOR all_mobile_devices
          FOR each connection IN zeek_conn_logs WHERE source_ip IN mobile_ip_space:
            IF connection.outbound_bytes > thresholds[connection.protocol]:
              ALERT (connection_details)
  - question: Does a mobile device's network connection exhibit a combination of characteristics (protocol, port, duration, bytes) that an unsupervised machine learning model flags as anomalous?
    context: |
      Adversary TTPs can be subtle and may not trigger simple rule-based alerts. This question leverages an unsupervised anomaly detection model (Isolation Forest) to identify connections that are outliers based on multiple features simultaneously. Such models can uncover novel or complex exfiltration patterns that deviate from normal network behavior without prior knowledge of the attack method.
    answer_sources: [Zeek conn.log, Corporate Wi-Fi network segments, guest networks, VPN concentrators, cloud proxies, Mobile Device Management (MDM) platform logs]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each connection IN zeek_conn_logs WHERE source_ip IN mobile_ip_space:
            features = EXTRACT_features(protocol, port, duration, orig_bytes, resp_bytes)
            anomaly_score = isolation_forest_model.predict(features)
            IF anomaly_score is outlier:
              ALERT (connection_details, anomaly_score)
  - question: Is a mobile device making DNS queries to domains known to be malicious or associated with DNS tunneling services?
    context: |
      DNS is a fundamental protocol and is often permitted through firewalls, making it an attractive channel for C2 and data exfiltration. This question focuses on detecting DNS requests from mobile devices to domains that are on a blocklist of known malicious infrastructure or dynamic DNS providers, which are commonly abused by attackers for tunneling data.
    answer_sources: [Zeek dns.log, Internal DNS resolvers, network egress points, Cloud Access Security Broker (CASB) logs, Mobile Device Management (MDM) platform logs, Threat Intelligence Feeds]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each dns_query IN zeek_dns_logs WHERE source_ip IN mobile_ip_space:
            IF dns_query.domain IN malicious_domain_blocklist:
              ALERT (dns_query_details)
  - question: Does a mobile device's DNS traffic show statistical deviations from its own baseline or from its peers, such as unusually high query volume, high-entropy query names, or an excessive ratio of TXT/NULL requests?
    context: |
      DNS tunneling often creates statistical artifacts. This question seeks to identify these artifacts by baselining normal DNS behavior for each device. A sudden spike in query volume, an increase in query name complexity (measured by Shannon entropy, as encoded data looks random), or a high proportion of TXT/NULL record requests (which can carry larger data payloads) are strong indicators of potential DNS-based exfiltration.
    answer_sources: [Zeek dns.log, Internal DNS resolvers, network egress points, Cloud Access Security Broker (CASB) logs, Mobile Device Management (MDM) platform logs]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each device IN mobile_devices:
            baseline = CALCULATE_30_day_dns_baseline(device) // volume, length, entropy
            daily_metrics = CALCULATE_daily_dns_metrics(device)
            IF daily_metrics DEVIATES > 3_std_dev FROM baseline:
              ALERT (device, deviation_details)

            txt_null_ratio = CALCULATE_txt_null_ratio(device)
            fleet_threshold = CALCULATE_95th_percentile_ratio(all_mobile_devices)
            IF txt_null_ratio > fleet_threshold:
              ALERT (device, high_txt_null_ratio)
  - question: Does a mobile device's DNS query exhibit characteristics that a supervised machine learning model, trained on known tunneling traffic, classifies as malicious?
    context: |
      This question employs a supervised machine learning approach (Random Forest) to classify individual DNS queries. By training a model on features that are effective at distinguishing between legitimate and tunneling-related DNS traffic (like query length, entropy, character patterns), this method can detect malicious queries with high precision, even if the domain itself is not on a blocklist.
    answer_sources: [Zeek dns.log, Internal DNS resolvers, network egress points, Cloud Access Security Broker (CASB) logs, Mobile Device Management (MDM) platform logs]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each dns_query IN zeek_dns_logs WHERE source_ip IN mobile_ip_space:
            features = EXTRACT_dns_features(dns_query)
            malicious_prob = random_forest_model.predict_proba(features)
            IF malicious_prob > 0.85:
              ALERT (dns_query_details, malicious_prob)
  - question: Is a mobile device sending a large HTTP/S POST request (over 500KB) to a known malicious domain or a newly registered domain (NRD)?
    context: |
      Adversaries use HTTP/S POST requests to exfiltrate data. This question targets a specific, high-risk scenario: a large data upload to a suspicious destination. By combining data size thresholds with domain reputation (known malicious or newly registered, which are often used for attacks), this query can effectively pinpoint likely data exfiltration events over common web protocols.
    answer_sources: [Zeek http.log, Zeek ssl.log, Zeek conn.log, Zeek files.log, Web proxies, internet gateways, VPN concentrators with SSL/TLS inspection capabilities, mobile application security gateways, Cloud Access Security Broker (CASB) platforms, Threat Intelligence Feeds]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each connection IN zeek_conn_logs WHERE source_ip IN mobile_ip_space:
            http_log = FIND_http_log(connection.uid)
            ssl_log = FIND_ssl_log(connection.uid)
            domain = http_log.host OR ssl_log.server_name
            IF http_log.method == "POST" AND connection.orig_bytes > 500KB:
              IF domain IN malicious_or_nrd_feed:
                ALERT (connection_details, domain)
  - question: Is a mobile device making an unusually large HTTP/S connection, or exhibiting periodic, machine-like 'heartbeat' traffic to a specific destination?
    context: |
      This question addresses two common exfiltration and C2 patterns over HTTP/S. First, it identifies bulk data transfers by flagging any connection whose size is a statistical outlier compared to the entire mobile fleet. Second, it detects C2 beaconing by looking for highly regular, periodic connections (low standard deviation of inter-arrival time) to a single destination. This machine-like regularity is a strong indicator of automated malware activity.
    answer_sources: [Zeek conn.log, Web proxies, internet gateways, VPN concentrators with SSL/TLS inspection capabilities, mobile application security gateways, Cloud Access Security Broker (CASB) platforms]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Data Volume Anomaly
          threshold = CALCULATE_99th_percentile(outbound_bytes) for ports 80, 443
          FOR each connection IN http_https_traffic:
            IF connection.outbound_bytes > threshold:
              ALERT (connection_details)

          // Beaconing Anomaly
          FOR each device_destination_pair:
            time_deltas = CALCULATE_inter_arrival_times(connections)
            IF STDEV(time_deltas) < 2.0 AND COUNT(connections)/hour > 10:
              ALERT (pair, "Potential Beaconing")
  - question: Is a mobile device generating HTTP/S traffic using a client fingerprint (JA3/JA3S, User-Agent) that is rare or unknown compared to sanctioned applications in the environment?
    context: |
      Malware often uses custom or non-standard libraries for network communication, resulting in unique TLS fingerprints (JA3/JA3S) and User-Agent strings. This question uses clustering to establish a baseline of 'normal' client fingerprints from approved applications. Any traffic originating from a client whose fingerprint is an outlier (i.e., belongs to a small, isolated cluster) is considered suspicious and warrants investigation, especially if it's also associated with other risky behaviors like large uploads.
    answer_sources: [Zeek http.log, Zeek ssl.log, Web proxies, internet gateways, VPN concentrators with SSL/TLS inspection capabilities, mobile application security gateways, Cloud Access Security Broker (CASB) platforms]
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          fingerprints = EXTRACT_ja3_ua_from_traffic()
          clusters = KMEANS_cluster(fingerprints)
          outlier_clusters = IDENTIFY_small_or_new_clusters(clusters)
          FOR each connection:
            IF connection.fingerprint IN outlier_clusters:
              ALERT (connection_details, "Outlier client fingerprint")