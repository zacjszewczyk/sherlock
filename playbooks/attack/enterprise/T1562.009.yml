name: "T1562.009: Safe Mode Boot"
id: "4a8f9b9a-1b5e-4c7f-9d3a-6b8c4e0f1a2b"
description: "This playbook is designed to help investigators determine if an adversary is attempting to evade defenses by forcing a system to boot into Safe Mode. It covers multiple detection angles, including the execution of known malicious tools or system utilities (like bcdedit.exe) to modify boot configurations, direct modification of registry keys controlling safe mode behavior (HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\), and analysis of post-boot activity to identify anomalies. The playbook focuses on detecting not only the setup for the evasion, but also the subsequent suspicious process and network activity that occurs after a reboot into a degraded security state, and provides methods to correlate these events into a high-fidelity attack sequence."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are processes being executed that match known malicious hashes associated with safe mode boot tooling?"
    context: "This question aims to identify the direct execution of known malicious tools used to manipulate boot configurations. By ingesting process creation events and correlating their file hashes against a threat intelligence feed, we can detect the presence of specific malware designed for this evasion technique."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, Critical Application Servers, Domain Controllers, Executive Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_events | WHERE event_id = 4688 | HASH process_image | LOOKUP threat_intel_feed on hash | IF match THEN ALERT"
  - question: "If a known malicious process is found, is it being spawned by a parent process that rarely does so?"
    context: "This question adds a layer of statistical analysis to reduce false positives and prioritize alerts. A malicious process spawned by a common, benign parent (like 'winword.exe') can indicate a phishing or document-based attack vector. By identifying parent-child relationships that are historically rare across the enterprise, we can increase the confidence that the activity is malicious."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, Critical Application Servers, Domain Controllers, Executive Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: ON alert from previous query | GET parent_process_name | CALCULATE historical prevalence of parent_process -> child_process | IF prevalence < 10th percentile THEN INCREASE_RISK_SCORE"
  - question: "Can we use a machine learning model to predict in real-time if a new process event is part of a 'Safe Mode Boot' attack?"
    context: "This question explores a proactive, predictive approach. A supervised classification model can learn complex patterns from various features like process name, parent process, command-line arguments, and threat intelligence data. This allows for the detection of not just known threats, but also new or variant threats that exhibit similar characteristics to previously observed attacks."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, Critical Application Servers, Domain Controllers, Executive Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: ON new process_event | EXTRACT features (process_name, parent_name, cmd_line, user, hash_on_feed) | SCORE with trained_classification_model | IF score > threshold THEN ALERT"
  - question: "Is a boot configuration utility like 'bcdedit.exe' or 'bootcfg.exe' being executed with command-line arguments to enable safe mode?"
    context: "This is a direct detection for the technique. Adversaries often use built-in Windows utilities to modify the boot configuration. Monitoring for the specific execution of 'bcdedit.exe' or 'bootcfg.exe' with command-line arguments containing 'safeboot' provides a high-fidelity indicator of an attempt to set up a safe mode boot."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, Domain Controllers, Infrastructure Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_events | WHERE event_id = 4688 AND process_name IN ('bcdedit.exe', 'bootcfg.exe') AND command_line CONTAINS 'safeboot' | ALERT"
  - question: "Is the execution of 'bcdedit.exe' anomalous for a specific user or host, or are the command-line arguments used statistically rare?"
    context: "While 'bcdedit.exe' can be used for legitimate administrative tasks, its usage is typically infrequent. This question aims to find outliers by baselining normal activity. A sudden spike in executions for a particular user or host, or the use of command-line arguments that are rarely seen in the environment, can indicate misuse of the tool for defense evasion."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, Domain Controllers, Infrastructure Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: BASELINE 'bcdedit.exe' counts per user/host | IF daily_count > 99th_percentile THEN ALERT | BASELINE 'bcdedit.exe' command_line prevalence | IF prevalence < 5th_percentile THEN ALERT"
  - question: "Can an anomaly detection model distinguish malicious 'bcdedit.exe' executions from normal administrative activity?"
    context: "This question applies machine learning to profile legitimate 'bcdedit.exe' usage. By training a model on features like command-line length, parent process, and time of day, we can create a sophisticated baseline of normalcy. The model can then score new executions, flagging those that deviate significantly, which are more likely to be malicious."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows Endpoints, Domain Controllers, Infrastructure Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON 'bcdedit.exe' execution | EXTRACT features (cmd_line_length, arg_count, parent_process, user_type, time_of_day) | SCORE with trained_anomaly_model | IF score indicates anomaly THEN ALERT"
  - question: "Are Windows Registry keys related to Safe Boot being modified to add new services or drivers, or are 'Run' keys being modified for execution in safe mode?"
    context: "This question targets a specific persistence mechanism used with safe mode booting. Adversaries modify the 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\' key to allow their malicious service or driver to run in safe mode. They also may prefix a 'Run' key value with an asterisk '*' to ensure a program executes. Monitoring for these exact modifications provides a strong signal of this technique."
    answer_sources:
      - "Windows Event ID 4657"
      - "All Windows Endpoints, Critical Application Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH registry_events | WHERE event_id = 4657 AND (object_name CONTAINS '\\SafeBoot\\' OR (object_name CONTAINS '\\Run' AND value_name STARTSWITH '*')) | ALERT"
  - question: "Is a process that is not on a known allowlist modifying 'SafeBoot' registry keys, or is a legitimate process doing so with unusual frequency?"
    context: "This question helps filter out noise from legitimate system updates or software installations. By maintaining an allowlist of trusted processes (like 'TrustedInstaller.exe') that can modify these keys, we can focus on modifications from unexpected processes. Additionally, flagging unusual frequency of modifications by otherwise legitimate processes can uncover abuse of trusted tools."
    answer_sources:
      - "Windows Event ID 4657"
      - "All Windows Endpoints, Critical Application Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON 'SafeBoot' registry_mod | GET modifying_process | IF process NOT IN allowlist THEN (CALCULATE historical frequency of mod by process | IF frequency > 3_std_dev THEN ALERT) ELSE IGNORE"
  - question: "Can a machine learning model be trained to classify registry modifications to 'SafeBoot' keys as either benign or malicious?"
    context: "This question seeks to automate the complex task of distinguishing benign from malicious changes. A classification model can learn the subtle differences based on features like the modifying process, its parent, and the specific data being written. This can improve detection accuracy and reduce the workload on analysts by automatically filtering out benign but uncommon system changes."
    answer_sources:
      - "Windows Event ID 4657"
      - "All Windows Endpoints, Critical Application Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON 'SafeBoot' registry_mod | EXTRACT features (process_name, parent_process, user, data_written) | SCORE with trained_classification_model | IF classification is 'malicious' THEN ALERT"
  - question: "Following a system boot, are there indicators of a degraded security state (e.g., security agents not starting) combined with suspicious process or network activity?"
    context: "The primary goal of booting into safe mode for an adversary is to disable security tools. This question looks for the effect: a boot event that isn't followed by the expected security agent start-up events. In this 'degraded state,' the subsequent execution of scripting engines or connections to low-reputation IPs becomes highly suspicious."
    answer_sources:
      - "Windows Event ID 6009"
      - "Windows Event ID 4624"
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "All Windows Endpoints, Network Egress Points, Authentication Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON boot_event (6009) | IF expected_security_agent_starts are ABSENT | THEN MONITOR for 'powershell.exe', 'cscript.exe' (4688) OR connections to low-reputation_IPs (Zeek) | ALERT"
  - question: "In the first 15 minutes after a host boots, is the number of unique processes or the entropy of outbound destination ports statistically anomalous compared to that host's baseline?"
    context: "This question establishes a behavioral baseline for the immediate post-boot period of each host. A system booting into safe mode for malicious purposes will likely exhibit different behavior than a normal boot. A significant deviation, such as an unusually high number of processes being executed or connections to a wide variety of ports, can be a strong indicator of an anomaly."
    answer_sources:
      - "Windows Event ID 6009"
      - "Windows Event ID 4624"
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "All Windows Endpoints, Network Egress Points, Authentication Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON boot_event (6009) | WITHIN 15 mins | CALCULATE unique_process_count and dest_port_entropy | COMPARE to host_baseline | IF count or entropy > 95th_percentile THEN ALERT"
  - question: "Can a time-series anomaly detection model identify boot sequences that deviate significantly from a learned pattern of normal boot activity?"
    context: "This question proposes using a sophisticated model, like an LSTM Autoencoder, to learn the entire sequence of a normal boot process across multiple data streams (CPU, network, process creation). When a new boot sequence occurs, the model attempts to reconstruct it. A high reconstruction error means the sequence is very different from normal, indicating a potential compromise, such as activity in a safe mode environment."
    answer_sources:
      - "Windows Event ID 6009"
      - "Windows Event ID 4624"
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "All Windows Endpoints, Network Egress Points, Authentication Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON boot_event | FEED time-series_data (process_rate, network_io, cpu) to LSTM_autoencoder | IF reconstruction_error > threshold THEN ALERT"
  - question: "Has a boot configuration modification been followed by a system reboot on the same host within a 30-minute window?"
    context: "This question correlates key events in the attack chain to create a high-fidelity alert. The sequence of a specific 'bcdedit' command or 'SafeBoot' registry write (Event A), followed closely by a system reboot (Event B), is highly indicative of an adversary executing this technique. This stateful correlation filters out isolated, potentially benign events."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4657"
      - "Windows Event ID 1074"
      - "All Windows Endpoints and Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "pseudocode: CORRELATE on host | IF (Event A: 'bcdedit /set safeboot' OR 'SafeBoot' registry write) is followed by (Event B: reboot event 1074) within 30 mins | THEN FIRE high_fidelity_alert"
  - question: "Can we create a cumulative risk score for a sequence of events, triggering an alert only when a threshold is surpassed?"
    context: "This question moves beyond simple correlation to a more nuanced risk-based approach. Instead of a binary alert, we assign scores to different events in a potential attack chain. For example, a 'bcdedit' command gets a base score, which is increased if the parent process is rare, and increased further if anomalous network activity follows the subsequent reboot. This reduces alerts for low-risk sequences and prioritizes high-risk ones."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4657"
      - "Windows Event ID 1074"
      - "All Windows Endpoints and Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "pseudocode: ON 'bcdedit' execution, assign score | IF parent_process is rare, add points | IF reboot follows, add points | IF post-reboot activity is anomalous, add points | IF total_score > threshold THEN ALERT"
  - question: "Can a sequence analysis model, like a Hidden Markov Model, be used to calculate the probability that an observed sequence of events matches a known 'Safe Mode Boot' attack pattern?"
    context: "This question applies a sophisticated sequence analysis model to understand the adversary's state transitions. By defining states like 'Benign,' 'Setup,' 'Reboot,' and 'Payload,' an HMM can be trained to recognize the path an adversary takes. It then calculates the probability that a new sequence of events from a host matches this malicious path, providing a powerful, probabilistic detection method."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4657"
      - "Windows Event ID 1074"
      - "All Windows Endpoints and Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "pseudocode: FEED event_sequence to trained_HMM | CALCULATE probability of sequence matching 'malicious' state_path | IF probability > threshold THEN ALERT"