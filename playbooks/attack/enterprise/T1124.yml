name: 'T1124: System Time Discovery'
id: '5e8e3a9c-4f8a-4d6b-8f9c-1a2b3c4d5e6f'
description: |
  This playbook addresses the adversary technique of discovering system time and time zone information. It provides investigative context for identifying this behavior through several indicators: process creation events matching known malicious tool hashes, anomalous execution of built-in time discovery utilities, suspicious outbound Network Time Protocol (NTP) communications, and unauthorized time discovery commands on network devices or hypervisors, as well as unusual Windows API calls related to system time.
type: 'technique'
related:
  - 'TA0007: Discovery'
contributors: 'Zachary Szewczyk, Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: 'Has a process been created whose file hash matches a known malicious reconnaissance tool on a threat intelligence feed?'
    context: |
      This question aims to detect the initial execution of known malicious tools used for reconnaissance. A match against a threat intelligence feed is a strong indicator of compromise, suggesting an adversary is using off-the-shelf or previously identified malware to gather system information, such as time, as a precursor to further action.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'Executive Workstations'
      - 'Domain Controllers'
      - 'Critical Application Servers'
      - 'Developer Endpoints'
    range: 'last 90 days'
    queries:
      - 'Search process creation events (WinEvent 4688, Sysmon 1). For each event, lookup the process hash against the threat intelligence feed. Alert on match.'
  - question: 'Is there a widespread or trending detection of malicious reconnaissance tool hashes across the environment?'
    context: |
      This question moves beyond single detections to identify broader campaigns. A sudden increase or widespread distribution of a specific malicious hash can indicate an automated or large-scale attack. Tracking this trend helps prioritize incidents and understand the scope of a potential breach.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'Executive Workstations'
      - 'Domain Controllers'
      - 'Critical Application Servers'
      - 'Developer Endpoints'
    range: 'last 90 days'
    queries:
      - 'Aggregate malicious hash detections by host, user, and time. Compare current detection rates against a 90-day baseline. Alert if the rate exceeds the 95th percentile.'
  - question: 'Can the detected malicious process activity be attributed to a known threat actor or campaign?'
    context: |
      This question focuses on threat attribution and intelligence. By clustering similar malicious events based on features like hash, user, and parent process, analysts can link new activity to existing threat profiles. This aids in understanding the adversary''s TTPs and predicting their next moves.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Sysmon Event ID 1'
      - 'Executive Workstations'
      - 'Domain Controllers'
      - 'Critical Application Servers'
      - 'Developer Endpoints'
    range: 'last 90 days'
    queries:
      - 'Input features of the new malicious process event (hash, user, host, parent) into a clustering model (e.g., DBSCAN). Determine if it belongs to an existing cluster or forms a new one.'
  - question: 'Are built-in time discovery utilities being executed by an unusual parent process or from a suspicious script?'
    context: |
      Adversaries often use legitimate system tools ("living off the land") to avoid detection. This question helps identify when these tools are used in a suspicious context, such as being spawned by a non-standard parent process (e.g., a Word document macro) or an obfuscated PowerShell script, which is a strong indicator of malicious reconnaissance.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Sysmon Event ID 1'
      - 'All Windows endpoints and servers, with a focus on hosts not designated as NTP servers within the environment (e.g., standard user workstations, application servers).'
    range: 'last 90 days'
    queries:
      - 'Search process creation events for time discovery commands (`net time`, `w32tm`, etc.). Alert if the parent process is not on the allowlist (explorer.exe, services.exe). Search PowerShell logs (Event 4104) for `Get-Date` from non-interactive sessions.'
  - question: 'Is there an anomalous frequency or pattern of time discovery command execution for a specific user or host?'
    context: |
      This question uses behavioral analytics to detect deviations from normal activity. A user or system that suddenly starts executing time discovery commands at a high frequency may be compromised. Analyzing command entropy can also reveal automated or scripted reconnaissance, where discovery commands are mixed with other commands in a short burst.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Sysmon Event ID 1'
      - 'All Windows endpoints and servers, with a focus on hosts not designated as NTP servers within the environment (e.g., standard user workstations, application servers).'
    range: 'last 90 days'
    queries:
      - 'For each user-host, compare the hourly count of time discovery commands against its 30-day baseline. Alert if it exceeds the 99th percentile. Separately, calculate command entropy in 5-minute windows; alert on high entropy windows containing time commands.'
  - question: 'Does a machine learning model classify the execution of a time discovery command as malicious?'
    context: |
      This question leverages machine learning to make a holistic judgment about an event''s maliciousness. By training a model on various contextual features (parent process, user, time of day), it can identify subtle, complex patterns of malicious activity that might be missed by simple rule-based detections.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows PowerShell Event ID 4104'
      - 'Sysmon Event ID 1'
      - 'All Windows endpoints and servers, with a focus on hosts not designated as NTP servers within the environment (e.g., standard user workstations, application servers).'
    range: 'last 90 days'
    queries:
      - 'Input features of a new time discovery command execution into a trained classification model (e.g., Random Forest). Alert if the event is classified as ''malicious'' with high confidence (>0.8).'
  - question: 'Is a host communicating with an unapproved external NTP server?'
    context: |
      Organizations typically use a specific set of internal or trusted external NTP servers. A host attempting to connect to an unauthorized NTP server could be an indicator of an adversary trying to bypass internal controls to get an accurate timestamp, or it could be a sign of C2 communication disguised as NTP traffic.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek ntp.log'
      - 'Network Egress Points'
      - 'Firewall and Network Gateway logs'
      - 'DNS Servers'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - 'Search network logs (Zeek conn.log) for destination port 123/UDP. Compare the destination IP against an allowlist of approved NTP servers. Alert on any connection to a non-allowlisted IP.'
  - question: 'Is a host generating an anomalously high volume of NTP traffic?'
    context: |
      Normal NTP traffic is typically low-volume and periodic. A sudden spike in the number of NTP queries from a single host can indicate malicious activity, such as a script repeatedly checking the time or a tool using the NTP protocol for data exfiltration or C2 heartbeat signals.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek ntp.log'
      - 'Network Egress Points'
      - 'Firewall and Network Gateway logs'
      - 'DNS Servers'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - 'For each host, calculate the mean and standard deviation of hourly NTP connection counts over 30 days. Alert if the current hourly count is more than 3 standard deviations above the mean.'
  - question: 'Does a machine learning model identify the host''s NTP traffic as a significant deviation from normal patterns?'
    context: |
      This question uses an unsupervised learning approach to detect novel or complex anomalies in NTP traffic. An autoencoder trained on normal traffic patterns can flag any event that it cannot "reconstruct" well, indicating a deviation in attributes like source-destination pairs, volume, or timing that might not be caught by simple thresholding rules.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek ntp.log'
      - 'Network Egress Points'
      - 'Firewall and Network Gateway logs'
      - 'DNS Servers'
      - 'Domain Controllers'
    range: 'last 90 days'
    queries:
      - 'Input features of new NTP traffic (source/dest IP, volume, timing) into a trained autoencoder model. Alert if the reconstruction error for the event is anomalously high.'
  - question: 'Is a non-administrative user executing time discovery commands on critical network infrastructure or hypervisors?'
    context: |
      Access to and configuration of time settings on network devices and hypervisors is a privileged operation. A regular user account performing these actions is highly suspicious and could indicate a compromised account being used to gather information about the core infrastructure.
    answer_sources:
      - 'Sysmon Event ID 1'
      - 'Network device AAA logs'
      - 'Hypervisor audit logs'
      - 'Endpoint Detection and Response (EDR) API monitoring logs'
      - 'Network infrastructure (switches, routers)'
      - 'Hypervisor management interfaces'
      - 'Endpoints and Servers with EDR agents'
    range: 'last 90 days'
    queries:
      - 'Search AAA and hypervisor logs for time-related commands (`show clock`). Check the executing user''s group membership. Alert if the user is not in an approved administrator group.'
  - question: 'Is a process making an unusually high number of time-related Windows API calls compared to its normal behavior?'
    context: |
      At a lower level, adversaries may use direct API calls (e.g., `GetSystemTime`) to get time information. While many legitimate applications use these calls, a sudden and significant increase in frequency for a specific process can indicate malicious behavior, such as an anti-debugging or anti-sandbox evasion technique that relies on timing.
    answer_sources:
      - 'Sysmon Event ID 1'
      - 'Network device AAA logs'
      - 'Hypervisor audit logs'
      - 'Endpoint Detection and Response (EDR) API monitoring logs'
      - 'Network infrastructure (switches, routers)'
      - 'Hypervisor management interfaces'
      - 'Endpoints and Servers with EDR agents'
    range: 'last 90 days'
    queries:
      - 'From EDR logs, baseline the frequency of time-related API calls per process name. Alert if a process''s call frequency exceeds the 99th percentile for that process type.'
  - question: 'Is a time-related API call part of a sequence of calls that is anomalous for that application?'
    context: |
      The context of an API call matters as much as the call itself. This question aims to identify when a time-related API call occurs within an unusual sequence of other API calls. This can reveal malicious logic, such as checking the time before unpacking a payload or connecting to a C2 server, which would be flagged by an RNN trained on legitimate call sequences.
    answer_sources:
      - 'Sysmon Event ID 1'
      - 'Network device AAA logs'
      - 'Hypervisor audit logs'
      - 'Endpoint Detection and Response (EDR) API monitoring logs'
      - 'Network infrastructure (switches, routers)'
      - 'Hypervisor management interfaces'
      - 'Endpoints and Servers with EDR agents'
    range: 'last 90 days'
    queries:
      - 'Feed the sequence of API calls from a process into a trained RNN model. Alert if a sequence containing a time-related API call receives a high anomaly score.'