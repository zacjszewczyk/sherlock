name: "T1070.002: Clear Linux or Mac System Logs"
id: "4b8c9d0e-1f2a-4b7c-8a9d-0e1f2a3b4c5d"
description: "This playbook helps investigate whether an adversary is attempting to evade defenses by clearing logs on Linux or macOS systems. This involves detecting the execution of known log-clearing tools by hash, identifying command-line arguments used to truncate or delete logs and shell history, monitoring for unauthorized file modification of log files, and observing commands used to stop or disable critical logging services."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a process executing on a Linux or macOS system that matches a known malicious hash associated with log-clearing tools?"
    context: "This question seeks to identify the use of known malicious tools by matching their file hash against a threat intelligence list. A match is a high-fidelity indicator that an adversary is using a recognized utility to cover their tracks. This is a primary, evidence-based detection method."
    answer_sources:
      - "Sysmon for Linux Event ID 1"
      - "Auditd execve syscall"
      - "All Linux and macOS endpoints, particularly servers with critical roles (e.g., web, database, authentication) and developer workstations."
    range: "last 90 days"
    queries:
      - "Search process execution logs for file hashes present in the threat intelligence list of log-clearing tools."
  - question: "Is a rare or previously unseen process executing on a small number of systems, which could indicate a custom log-clearing utility?"
    context: "Adversaries may use custom or uncommon tools to avoid hash-based detection. This question focuses on identifying statistical outliers by calculating the prevalence of a process's hash across the environment. A process with a very low prevalence that is not part of an approved software inventory is highly suspicious."
    answer_sources:
      - "Sysmon for Linux Event ID 1"
      - "Auditd execve syscall"
      - "All Linux and macOS endpoints, particularly servers with critical roles (e.g., web, database, authentication) and developer workstations."
    range: "last 90 days"
    queries:
      - "Calculate the enterprise-wide prevalence of all file hashes. Filter for hashes seen on a small number of hosts (e.g., < 5) and review against an approved software list."
  - question: "Has a machine learning model classified any running process as a malicious log-clearing tool based on its behavioral features?"
    context: "This question leverages a supervised machine learning model to detect novel or obfuscated threats. The model analyzes multiple features—such as hash prevalence, file path characteristics, and parent process legitimacy—to make a sophisticated judgment. This approach can identify malicious behavior that doesn't match a specific signature or rule."
    answer_sources:
      - "Sysmon for Linux Event ID 1"
      - "Auditd execve syscall"
      - "All Linux and macOS endpoints, particularly servers with critical roles (e.g., web, database, authentication) and developer workstations."
    range: "last 90 days"
    queries:
      - "Query ML model alerts for processes classified as 'malicious' with a high confidence score (> 0.9)."
  - question: "Are there any command-line executions that contain patterns specifically designed to truncate, delete, or overwrite system log files?"
    context: "This question targets the direct commands an adversary would use for log manipulation. It involves searching for tell-tale command-line patterns, such as redirecting `/dev/null` to a log file or using utilities like `shred` and `truncate`. Finding such commands is a strong indicator of an active attempt to erase evidence."
    answer_sources:
      - "Auditd execve syscall"
      - "Sysmon for Linux Event ID 1"
      - "Critical Linux servers (e.g., web, database, authentication), macOS developer workstations, DMZ servers."
    range: "last 90 days"
    queries:
      - "Search command-line logs using regex for patterns like '(>|>>) /var/log/.*(log|messages|secure|auth|wtmp|utmp)', 'cat /dev/null >', 'shred .*log', 'rm /var/log/', and 'truncate -s 0'."
  - question: "Has any user executed a command with an unusually high level of complexity or used rare log-clearing commands more frequently than their normal baseline?"
    context: "This question seeks to find anomalies in user behavior. High command-line entropy can indicate obfuscation, while a sudden increase in the use of rare commands like 'truncate' or 'shred' by a specific user is a strong deviation from normal administrative activity and warrants investigation."
    answer_sources:
      - "Auditd execve syscall"
      - "Sysmon for Linux Event ID 1"
      - "Critical Linux servers (e.g., web, database, authentication), macOS developer workstations, DMZ servers."
    range: "last 90 days"
    queries:
      - "Calculate Shannon entropy for command lines per user and alert on deviations from a 30-day baseline. Track the frequency of rare commands like 'truncate' and alert on statistical spikes."
  - question: "Is there a statistically significant and anomalous spike in the volume of log-clearing commands on any given host?"
    context: "This question shifts the focus from a user to a host, using time-series analysis to detect a sudden burst of log-clearing activity. This can catch a coordinated attack that might be missed by user-centric analysis, as it identifies when a host's behavior deviates from its normal operational rhythm."
    answer_sources:
      - "Auditd execve syscall"
      - "Sysmon for Linux Event ID 1"
      - "Critical Linux servers (e.g., web, database, authentication), macOS developer workstations, DMZ servers."
    range: "last 90 days"
    queries:
      - "Query a time-series anomaly detection model for alerts where the hourly count of log-clearing command patterns on a host significantly deviates from the forecast."
  - question: "Has a user executed a command specifically intended to clear, disable, or tamper with their shell's command history?"
    context: "This is a direct hunt for anti-forensic commands. Adversaries often clear their shell history to hide the commands they executed. Finding commands like `history -c`, `unset HISTFILE`, or `rm .*_history` is a very strong signal of malicious intent, as these are rarely used in legitimate administration."
    answer_sources:
      - "Auditd execve syscall"
      - "Sysmon for Linux Event ID 1"
      - "Interactive shell access points, Privileged user workstations and servers, Jump boxes."
    range: "last 90 days"
    queries:
      - "Search command-line logs for patterns like 'unset HISTFILE', 'export HISTFILE=/dev/null', 'history -c', 'ln -s /dev/null .*_history', or 'set +o history'."
  - question: "Is a user running a history-tampering command for the first time, or are they running such commands at an anomalous rate?"
    context: "This question focuses on user behavior anomalies related to history tampering. The first time a user runs a history-clearing command is highly suspicious. Tracking this first-use and comparing the frequency of such commands against an enterprise-wide baseline helps distinguish malicious activity from idiosyncratic admin behavior."
    answer_sources:
      - "Auditd execve syscall"
      - "Sysmon for Linux Event ID 1"
      - "Interactive shell access points, Privileged user workstations and servers, Jump boxes."
    range: "last 90 days"
    queries:
      - "Flag the first-time use of any history-tampering command per user. Separately, alert if the daily count of such commands for a user exceeds the 99th percentile across the enterprise."
  - question: "Has a machine learning model detected an anomalous sequence of commands within a user session, particularly one that ends with a history-clearing command?"
    context: "This advanced question provides context to history-clearing. A `history -c` command is far more suspicious when it immediately follows reconnaissance commands like `whoami`, `netstat`, and `find`. A sequence-based model can detect these malicious patterns that indicate an adversary is covering their tracks after exploring a system."
    answer_sources:
      - "Auditd execve syscall"
      - "Sysmon for Linux Event ID 1"
      - "Interactive shell access points, Privileged user workstations and servers, Jump boxes."
    range: "last 90 days"
    queries:
      - "Query a sequence analysis model for anomalous user sessions with high reconstruction error, especially where the sequence ends in a history-clearing command."
  - question: "Have critical system log files been deleted or modified by an unauthorized process?"
    context: "This question focuses on the integrity of log files. It correlates file deletion or modification events with the process that initiated them. If a log file is touched by any process not on an allowlist of known log management utilities (e.g., `logrotate`, `journald`), it is highly suspicious and could indicate direct tampering."
    answer_sources:
      - "Auditd unlink/truncate/rename syscall"
      - "Sysmon for Linux Event ID 11"
      - "Sysmon for Linux Event ID 23"
      - "Zeek conn.log"
      - "Log directories on critical servers (/var/log, /var/run/), User home directories (for .*_history files)."
    range: "last 90 days"
    queries:
      - "Correlate file delete/truncate events on /var/log/* or .*_history with the initiating process name. Alert if the process is not on an allowlist of log management tools."
  - question: "Is there an anomalous spike in the number of file modifications or deletions within log directories on a specific host?"
    context: "This question uses statistical baselining to detect unusual volumes of file operations in log directories. A sudden burst of deletions, even if some are from legitimate processes, can indicate an adversary trying to purge records in bulk. This method helps catch activity that might be missed by simple allowlisting."
    answer_sources:
      - "Auditd unlink/truncate/rename syscall"
      - "Sysmon for Linux Event ID 11"
      - "Sysmon for Linux Event ID 23"
      - "Zeek conn.log"
      - "Log directories on critical servers (/var/log, /var/run/), User home directories (for .*_history files)."
    range: "last 90 days"
    queries:
      - "For each host, compare the hourly count of file delete/modify events in /var/log/ against its 30-day baseline. Alert if the count exceeds 3 standard deviations above the average, excluding known log rotation processes."
  - question: "Has a machine learning model detected an abnormal relationship between file creation, modification, and deletion activities within log directories?"
    context: "This advanced question looks for subtle tampering. Normal log rotation has a predictable pattern (e.g., creation of new files, deletion of old ones). An adversary might only delete files. A multivariate model can detect this break in the expected relationship between different file operations, indicating tampering rather than routine maintenance."
    answer_sources:
      - "Auditd unlink/truncate/rename syscall"
      - "Sysmon for Linux Event ID 11"
      - "Sysmon for Linux Event ID 23"
      - "Zeek conn.log"
      - "Log directories on critical servers (/var/log, /var/run/), User home directories (for .*_history files)."
    range: "last 90 days"
    queries:
      - "Query a multivariate time-series model for alerts where the observed relationship between file creations, modifications, and deletions in log directories deviates from the forecast."
  - question: "Has a command been executed to stop, disable, or kill a critical logging service like auditd or rsyslogd?"
    context: "This is a critical question, as stopping a logging service is a common precursor to further malicious activity. It is an attempt to 'turn off the cameras.' Correlating these events with a change management system is crucial to filter out noise from legitimate, scheduled maintenance."
    answer_sources:
      - "Sysmon for Linux Event ID 1"
      - "Auditd execve/kill syscall"
      - "systemd journal logs"
      - "All Linux and macOS endpoints and servers, Change management database/ticketing system."
    range: "last 90 days"
    queries:
      - "Trigger a high-severity alert on commands like 'systemctl stop auditd', 'service rsyslog stop', or a 'kill' command targeting a logging process PID. Suppress alerts that correlate with an approved change ticket."
  - question: "Is a particular host showing an unusually high frequency of logging service restarts or stops compared to its peers?"
    context: "This question identifies outlier hosts. While a service restart can be normal, a host that is constantly stopping and starting its logging daemons is anomalous. This could indicate repeated tampering attempts, misconfiguration, or system instability caused by malware."
    answer_sources:
      - "Sysmon for Linux Event ID 1"
      - "Auditd execve/kill syscall"
      - "systemd journal logs"
      - "All Linux and macOS endpoints and servers, Change management database/ticketing system."
    range: "last 90 days"
    queries:
      - "Calculate the daily frequency of logging service stop/restart events per host. Flag any host that falls in the top 1% (99th percentile) across the enterprise for this activity."
  - question: "Has a logging agent unexpectedly stopped sending its health heartbeat, suggesting the service is down?"
    context: "This question provides a proactive way to detect a disabled logging service. Instead of looking for a 'stop' command, this method infers that the service is down because it has stopped checking in. Using a predictive model to forecast the next heartbeat makes this detection more precise than a simple static timeout."
    answer_sources:
      - "Sysmon for Linux Event ID 1"
      - "Auditd execve/kill syscall"
      - "systemd journal logs"
      - "All Linux and macOS endpoints and servers, Change management database/ticketing system."
    range: "last 90 days"
    queries:
      - "Query a predictive model for alerts where an agent's heartbeat was not received within the dynamically calculated tolerance window, indicating the service is down unexpectedly."