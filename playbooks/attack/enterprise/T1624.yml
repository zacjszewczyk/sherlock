name: "T1624: Event Triggered Execution"
id: "9a8b7c6d-5e4f-4a3b-2c1d-0e9f8a7b6c5d"
description: |
  This playbook helps investigate if an adversary is maintaining persistence on mobile devices through event-triggered execution. This involves looking for signs of malicious activity tied to system events. Key indicators include applications with manifests (AndroidManifest.xml) that register broadcast receivers for high-risk system events (like 'android.intent.action.BOOT_COMPLETED') and request sensitive permissions ('android.permission.RECEIVE_SMS') that are unusual for their type. Another key indicator is a measurable burst of anomalous network activity (e.g., increased connections, data volume, or high-entropy DNS queries) within a 5-minute window immediately following a system event like a device boot, network change, or application installation.
type: "technique"
related: "TA0028: Persistence"
contributors: "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are any managed mobile applications with high-risk broadcast receivers (e.g., 'BOOT_COMPLETED', 'SMS_RECEIVED') associated with known malicious indicators?"
    context: |
      This question aims to perform a direct check against threat intelligence. By identifying applications that have the capability to execute on high-risk system events and then comparing their identifiers (signing certificates, package names) against known malicious indicators, we can quickly find confirmed threats on our devices. This is a high-fidelity check for known bad software that uses event-triggered execution for persistence.
    answer_sources:
      - "MDM Application Inventory Logs"
      - "Android Application Manifests (AndroidManifest.xml)"
      - "Application Vetting System Reports"
      - "Managed mobile device fleet"
      - "Mobile Device Management (MDM) server"
      - "Application vetting/sandbox environment"
      - "Threat Intelligence Feeds"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          GET apps with receivers for 'BOOT_COMPLETED' or 'SMS_RECEIVED' from MDM logs.
          FOR each app, EXTRACT package_name, signing_certificate.
          QUERY threat_intel_feed with package_name and signing_certificate.
          IF match found, ALERT.
  - question: "Are any applications exhibiting an unusually rare combination of permissions and broadcast receivers compared to their peers?"
    context: |
      Malicious applications often request combinations of permissions and event triggers that are not typical for legitimate apps in the same category. This question seeks to identify these statistical outliers. By calculating a rarity score for each application based on the prevalence of its permission-receiver pairs, we can flag suspicious apps that deviate significantly from the norm, even if they aren't on a known threat list. This helps uncover novel or unknown threats.
    answer_sources:
      - "MDM Application Inventory Logs"
      - "Android Application Manifests (AndroidManifest.xml)"
      - "Application Vetting System Reports"
      - "Managed mobile device fleet"
      - "Mobile Device Management (MDM) server"
      - "Application vetting/sandbox environment"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          FOR each app_category, CALCULATE prevalence of each permission-receiver pair.
          FOR each app, CALCULATE rarity_score = sum(1 / prevalence of its pairs).
          IF app.rarity_score > 98th_percentile for its category, FLAG for review.
  - question: "Can we use a machine learning model to predict if an application is malicious based on its requested permissions and broadcast receivers?"
    context: |
      This question leverages machine learning to automate the detection of malicious applications based on patterns learned from known good and bad examples. By training a classifier on the features extracted from application manifests (permissions and receivers), we can create a predictive model. This model can then score new and updated applications, alerting on those with a high probability of being malicious. Using SHAP values provides explainability, telling the analyst exactly which features led to the high score, which is crucial for efficient investigation.
    answer_sources:
      - "MDM Application Inventory Logs"
      - "Android Application Manifests (AndroidManifest.xml)"
      - "Application Vetting System Reports"
      - "Managed mobile device fleet"
      - "Mobile Device Management (MDM) server"
      - "Application vetting/sandbox environment"
      - "Labeled dataset of benign/malicious apps"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          TRAIN classifier on feature vectors (permissions, receivers) from labeled dataset.
          FOR each new/updated app, PREDICT malice_probability.
          IF probability > $$ 0.90 $$, ALERT.
          CALCULATE and DISPLAY SHAP values for the alert.
  - question: "Is a device communicating with known malicious infrastructure within 5 minutes of a system event like a boot-up?"
    context: |
      Malware often uses event triggers, such as a device booting up, to establish command and control (C2) communications. This question aims to detect this behavior by correlating system events from MDM logs with network traffic logs. By examining the network connections made shortly after an event and comparing the destination details (IPs, domains, SSL certs, JA3/JA3S hashes) against threat intelligence, we can identify potential C2 callbacks.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Zeek http.log"
      - "MDM Event Logs"
      - "Corporate Wi-Fi network gateways"
      - "VPN concentrators"
      - "Internal and external DNS resolvers"
      - "Threat Intelligence Feeds"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          JOIN MDM_events with network_logs on device_ip where network_log.timestamp is within 5 mins after event.timestamp.
          FOR each resulting connection, EXTRACT destination_ip, domain, ssl_cert, ja3/ja3s.
          QUERY threat_intel_feed with extracted indicators.
          IF match found, ALERT.
  - question: "Is there a statistical anomaly in a device's network behavior (e.g., connection count, data volume, DNS query entropy) immediately following a system event?"
    context: |
      This question focuses on detecting anomalous network activity without relying on known bad indicators. By establishing a historical baseline of normal network behavior for each device in the 5 minutes following specific system events, we can detect significant deviations. A high Z-score for metrics like connection count or data volume, or a sudden change in DNS query entropy (which can indicate Domain Generation Algorithms or DGA), can signal that a malicious process was triggered by the event.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Zeek http.log"
      - "MDM Event Logs"
      - "Corporate Wi-Fi network gateways"
      - "VPN concentrators"
      - "Internal and external DNS resolvers"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          FOR each device, CREATE baseline (mean, std_dev) of network metrics (connections, bytes_sent, etc.) in 5-min window post-event.
          IN real-time, CALCULATE Z-score for current event. IF Z-score > $$ 3.5 $$, ALERT.
          CALCULATE Shannon entropy of DNS queries in window. IF entropy deviates from norm, ALERT.
  - question: "Does a device's post-boot network activity pattern significantly deviate from its own learned 'normal' behavior, as determined by an LSTM autoencoder?"
    context: |
      This question employs a more advanced machine learning technique to model the normal sequence of network activities after a device boots. An LSTM autoencoder is well-suited for time-series data and can learn a device's typical 'network signature'. When a new boot event occurs, the model attempts to reconstruct the observed network activity. A high reconstruction error indicates that the current activity is highly unusual and does not fit the learned pattern, suggesting a potential compromise or malicious activity triggered by the boot event.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Zeek http.log"
      - "MDM Event Logs"
      - "Corporate Wi-Fi network gateways"
      - "VPN concentrators"
      - "Internal and external DNS resolvers"
    range: "last 90 days"
    queries:
      - search: "Pseudocode"
        query: |
          FOR each device, TRAIN LSTM autoencoder on 30-day history of post-boot network activity vectors.
          FOR each new boot event, CALCULATE reconstruction_error using trained model.
          IF reconstruction_error > dynamic_threshold, ALERT.