name: T1120: Peripheral Device Discovery
id: f1b9b3a0-8a6a-4b9e-9d8c-7b6a1c5d4e3f
description: |-
  This playbook helps determine if an adversary has initiated peripheral device discovery on the network. This involves looking for evidence of malicious discovery tools by matching file hashes or script content, identifying anomalous executions of built-in system utilities by non-administrative users or at unusual frequencies, detecting discovery commands spawned by anomalous parent processes like web browsers, flagging statistically significant volumes of discovery commands from a single host or user, and identifying discovery activity as part of a larger suspicious sequence of events, such as following a remote login and preceding access to removable media.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are processes or scripts being executed that match known malicious peripheral device discovery tools?
    context: This question aims to provide high-fidelity alerts by matching file hashes from newly created processes and script block content from PowerShell logs against a continuously updated threat intelligence feed of known malicious discovery tools, such as Seatbelt or SharpHound. A direct match is a strong indicator of a compromise.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Critical Servers (e.g., Domain Controllers, Application Servers)
    range: last 90 days
    queries:
      - symbolic: pseudocode: Search process creation events (4688) and PowerShell script block logs (4104) for file or script hashes matching a threat intelligence feed of discovery tool indicators.
  - question: Are there any command-line executions with unusually high entropy that could indicate obfuscated peripheral device discovery activity?
    context: Adversaries often obfuscate or randomize their commands to evade signature-based detection. This question seeks to identify such evasive techniques by calculating the Shannon entropy of command lines. A command line with entropy significantly higher than the established baseline for a given user or host may indicate a malicious, obfuscated discovery attempt.
    answer_sources:
      - Windows Event ID 4688 from User Workstations, Critical Servers (e.g., Domain Controllers, Application Servers)
    range: last 90 days
    queries:
      - statistical: pseudocode: For each command line in process creation events, calculate Shannon entropy. Compare against a 30-day baseline for the user/host. Alert if entropy is in the 99th percentile.
  - question: Can we use a machine learning model to predict and identify malicious process executions indicative of peripheral device discovery?
    context: This question uses a supervised machine learning model to identify sophisticated or novel discovery attempts that symbolic or simple statistical methods might miss. By training on features like parent process, command-line arguments, and user context from both malicious and benign historical data, the model can score new process events in real-time and alert on those with a high probability of being malicious.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Critical Servers (e.g., Domain Controllers, Application Servers)
    range: last 90 days
    queries:
      - ml: pseudocode: Score new process events using a pre-trained classification model (Random Forest, etc.) based on features like parent process, command line, and user. Alert on high-probability malicious predictions.
  - question: Are built-in device enumeration utilities being executed by non-administrative users?
    context: System utilities for device discovery (e.g., 'systeminfo', 'Get-PnpDevice') are typically used by IT administrators for legitimate purposes. Execution of these commands by standard, non-privileged users is highly anomalous and suspicious, suggesting an adversary is performing internal reconnaissance after an initial compromise.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Domain Controllers, File Servers
    range: last 90 days
    queries:
      - symbolic: pseudocode: Monitor for execution of 'systeminfo', 'driverquery', 'Get-PnpDevice', etc. Alert if the executing user is not in a pre-defined IT administrator group.
  - question: Is there an unusual frequency of device enumeration commands from a specific user or host?
    context: While an administrator might run a discovery command occasionally, a sudden burst of these commands from a single user or host is abnormal. This behavior often points to an automated script used by an adversary. This question establishes a baseline of normal execution frequency and flags any significant deviation, indicating a potential compromise.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Domain Controllers, File Servers
    range: last 90 days
    queries:
      - statistical: pseudocode: Track execution counts of watchlist commands per user/host. Alert if the count in a 24-hour period exceeds the 95th percentile of a 30-day baseline.
  - question: Can an unsupervised machine learning model detect anomalous executions of device enumeration utilities?
    context: This question aims to find unknown threats by modeling 'normal' behavior without pre-defined rules. An unsupervised model, like an Isolation Forest, learns the typical patterns of command execution (user, host, time, parent process) and flags any execution that deviates significantly from this learned norm, which could represent a novel attack technique.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Domain Controllers, File Servers
    range: last 90 days
    queries:
      - ml: pseudocode: Feed command execution features (command, user, host, time, parent) into an anomaly detection model (Isolation Forest). Alert on high anomaly scores.
  - question: Are device discovery commands being initiated by unusual parent processes like web browsers or office applications?
    context: Legitimate discovery commands are almost always executed from an interactive command shell (cmd.exe, powershell.exe) or an administrative script. A discovery command being spawned by a process like 'WINWORD.EXE' or 'CHROME.EXE' is a strong indicator of compromise, likely resulting from a malicious document macro or a browser exploit.
    answer_sources:
      - Windows Event ID 4688 from User Workstations, Web Servers, Application Servers
    range: last 90 days
    queries:
      - symbolic: pseudocode: Alert if a discovery command process is a child of a forbidden parent process (e.g., 'WINWORD.EXE', 'OUTLOOK.EXE', 'CHROME.EXE').
  - question: Are device discovery commands being spawned by statistically rare parent processes?
    context: This method quantifies the 'unusualness' of a parent-child process relationship by analyzing historical data. It can detect suspicious process chains that are not explicitly forbidden but are highly uncommon in a given environment. An alert is triggered when a discovery command is spawned by a parent process that has a very low historical probability of doing so.
    answer_sources:
      - Windows Event ID 4688 from User Workstations, Web Servers, Application Servers
    range: last 90 days
    queries:
      - statistical: pseudocode: Calculate the probability of parent-child process pairs from historical data. Alert if a discovery command is spawned by a parent with a very low historical probability (e.g., p < 0.01).
  - question: Can a sequence analysis model identify anomalous process execution chains that include device discovery?
    context: This advanced technique moves beyond single parent-child relationships to model entire chains of process execution. By training on benign sequences, a model like an LSTM autoencoder can identify when a new sequence involving device discovery deviates from normal, learned behavior. This helps detect sophisticated attacks where the malicious activity is embedded within a longer, otherwise plausible, chain of events.
    answer_sources:
      - Windows Event ID 4688 from User Workstations, Web Servers, Application Servers
    range: last 90 days
    queries:
      - ml: pseudocode: Model benign process execution chains with an HMM or LSTM. Flag new sequences involving device discovery that have a high reconstruction error or low likelihood score.
  - question: Has a single host or user executed an excessive number of device discovery commands in a short time frame?
    context: A large, rapid burst of discovery commands from one source is a strong indicator of an automated script scanning the local machine or remote systems. This rule sets a hard, explicit threshold to catch such brute-force enumeration activity, both on the endpoint and over the network via RPC calls.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104, Zeek dce_rpc.log, Zeek conn.log from User Workstations, Domain Controllers, Network Segments (monitored by Zeek)
    range: last 90 days
    queries:
      - symbolic: pseudocode: Alert if a source host exceeds 10 local discovery commands or 5 remote RPC enumeration targets within a 5-minute window.
  - question: Is there a statistically significant spike in the volume of device discovery commands from a single host?
    context: This statistical approach is more dynamic than a fixed threshold. It identifies volume spikes that are abnormal relative to a specific host's own historical activity. By calculating the Z-score, it can flag significant deviations from the norm, making it more sensitive to subtle changes in behavior that might not cross a static threshold.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Domain Controllers, Network Segments (monitored by Zeek)
    range: last 90 days
    queries:
      - statistical: pseudocode: For each host, calculate 1-minute counts of discovery commands. Alert if the current count is more than 3 standard deviations above the 30-day mean (Z-score > 3).
  - question: Does the current volume of device discovery activity from a host significantly exceed its forecasted volume?
    context: This method uses a time-series forecasting model (like SARIMA or Prophet) to predict the expected level of discovery activity for each host based on its historical patterns, including seasonality. An alert is generated only when the actual, observed activity significantly deviates from the model's prediction, indicating an unexpected and potentially malicious surge.
    answer_sources:
      - Windows Event ID 4688, Windows Event ID 4104 from User Workstations, Domain Controllers, Network Segments (monitored by Zeek)
    range: last 90 days
    queries:
      - ml: pseudocode: Use a time-series model (SARIMA, Prophet) to forecast discovery activity volume per host. Alert if observed volume falls outside the model's prediction interval.
  - question: Did device discovery occur as part of a suspicious sequence, such as following a remote login and preceding access to a removable drive?
    context: The context of an action is critical. A discovery command is far more suspicious when it is part of a larger chain of events typical of an attack. This stateful correlation rule looks for a specific, high-confidence attack pattern: an adversary gaining remote access, enumerating drives to find a removable one, and then attempting to access it, likely for data exfiltration.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4688, Windows Event ID 4663 from Domain Controllers, User Workstations with removable media access, File Servers
    range: last 90 days
    queries:
      - symbolic: pseudocode: Correlate events within a 30-minute window, looking for the sequence of Remote login (4624), Drive discovery command (4688), and Access to removable drive (4663). Alert on sequence completion.
  - question: Does a user or host's cumulative risk score, including points for device discovery, exceed a suspicious threshold?
    context: This approach aggregates risk by assigning points to various suspicious behaviors over time. A single event like device discovery might not be enough to trigger an alert, but when combined with other actions (like a login from a new location or writing to a removable drive), the cumulative risk score can surpass a threshold, indicating a high probability of malicious intent.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4688, Windows Event ID 4663 from Domain Controllers, User Workstations with removable media access, File Servers
    range: last 90 days
    queries:
      - statistical: pseudocode: Sum risk scores for user/host actions (e.g., remote login, discovery command) over a 1-hour window. Alert if total score exceeds the 99th percentile of all users.
  - question: Can a graph-based model identify the emergence of an attack subgraph involving device discovery?
    context: This advanced method models the entire environment as a graph of interconnected entities (users, hosts, processes) and their activities. It can detect complex, multi-step attack paths as they form by using algorithms to identify subgraphs that match known malicious Tactics, Techniques, and Procedures (TTPs), such as a sequence involving remote login, device discovery, and data staging on a removable drive.
    answer_sources:
      - Windows Event ID 4624, Windows Event ID 4688, Windows Event ID 4663 from Domain Controllers, User Workstations with removable media access, File Servers
    range: last 90 days
    queries:
      - ml: pseudocode: Model entities and interactions as a graph. Use a Graph Neural Network or subgraph matching to find patterns like 'Remote Logon -> Device Discovery -> Data Staging on Removable Media'.