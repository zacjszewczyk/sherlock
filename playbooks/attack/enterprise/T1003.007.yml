name: T1003.007: Proc Filesystem
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps identify if an adversary is attempting to harvest credentials by accessing the /proc filesystem on Linux systems. It looks for evidence of known credential dumping tools, the abuse of common system utilities to read sensitive memory paths, anomalous process memory access events, and the correlation of these activities with subsequent remote authentication, which could indicate credential theft and lateral movement.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Are known credential dumping tools that target the /proc filesystem being executed?
  context: Adversaries often use well-known tools like 'mimipenguin' or 'procdump' to scrape credentials from the /proc filesystem. This question aims to directly detect the execution of these malicious tools by matching process names or file hashes against a predefined watchlist. A positive match is a high-confidence indicator of an ongoing attack.
  answer_sources:
  - Sysmon for Linux Event ID 1
  - Linux Auditd logs
  - Linux servers (web, database, application), Linux developer workstations, and container environments.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process_execution_logs WHERE process_name IN (watchlist) OR file_hash IN (watchlist)
- question: Are statistically rare processes accessing the /proc filesystem, potentially indicating a novel or unknown credential dumping tool?
  context: This question addresses the threat of adversaries using custom, renamed, or unknown tools that would not be caught by a signature-based watchlist. By identifying processes that access /proc but are statistically uncommon across the enterprise, analysts can uncover novel threats. The suspicion level is increased if the rare process is spawned by an unusual parent (e.g., a web server daemon) or runs in an unexpected user context.
  answer_sources:
  - Sysmon for Linux Event ID 1
  - Linux Auditd logs
  - Linux servers (web, database, application), Linux developer workstations, and container environments.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: FIND processes accessing /proc. CALCULATE prevalence of each process name. ALERT on processes with prevalence < 1% AND unusual parent_process/user_context.
- question: Can a machine learning model classify a process interacting with the /proc filesystem as suspicious based on its execution characteristics?
  context: This question leverages a supervised machine learning model to provide a more nuanced and automated detection capability. By training a model on features from known malicious and benign process executions (e.g., parent process, user context, command-line structure), it can classify new, unknown processes that interact with /proc as either suspicious or benign, reducing analyst workload and improving detection accuracy for sophisticated threats.
  answer_sources:
  - Sysmon for Linux Event ID 1
  - Linux Auditd logs
  - Linux servers (web, database, application), Linux developer workstations, and container environments.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: PREDICT suspicion_score for new process executions accessing /proc using a trained classification model. ALERT on high suspicion_score.
- question: Are common system utilities (like grep, cat, strings) being used to directly access sensitive memory-related paths in the /proc filesystem?
  context: Adversaries may abuse legitimate system utilities to avoid deploying malicious binaries, a technique known as Living Off the Land. This question focuses on detecting the use of tools like 'grep', 'cat', or 'dd' with command-line arguments that specifically target sensitive memory paths like '/proc/[pid]/mem'. Detecting such commands is a strong indicator of an attempt to read process memory for credentials.
  answer_sources:
  - Sysmon for Linux Event ID 1
  - Linux Auditd logs
  - Shell history logs
  - Linux hosts, especially multi-user systems like jump boxes, web servers, and database servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH command_line_logs for process_name IN ('grep', 'cat', 'strings', 'dd', 'gdb') AND arguments MATCHES_REGEX '/proc/[0-9]*/mem'
- question: Are there command-line executions targeting the /proc filesystem that are statistically anomalous in their complexity or structure for a given user or host?
  context: Adversaries may use obfuscated or unusually complex commands to hide their activity. This question aims to detect such behavior by establishing a baseline of normal command-line patterns for each user and host. Commands that reference /proc and have a significantly higher complexity (entropy) or deviate from historical patterns (n-gram analysis) are flagged as suspicious, helping to uncover non-obvious malicious activity.
  answer_sources:
  - Sysmon for Linux Event ID 1
  - Linux Auditd logs
  - Shell history logs
  - Linux hosts, especially multi-user systems like jump boxes, web servers, and database servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: For commands referencing /proc, CALCULATE command entropy. ALERT if entropy > 99th percentile for that user/host baseline.
- question: Can an unsupervised machine learning model identify anomalous command-line executions that reference the /proc filesystem, indicating a deviation from normal administrative behavior?
  context: This question uses unsupervised machine learning to build a model of normal, legitimate command-line activity involving the /proc filesystem. New commands are fed into the model (e.g., an autoencoder or Isolation Forest), and those that the model identifies as an anomaly (e.g., high reconstruction error) are flagged. This is effective for detecting novel or sophisticated malicious commands that differ from established administrative patterns.
  answer_sources:
  - Sysmon for Linux Event ID 1
  - Linux Auditd logs
  - Shell history logs
  - Linux hosts, especially multi-user systems like jump boxes, web servers, and database servers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: For new commands referencing /proc, COMPUTE anomaly_score using a trained unsupervised model. ALERT on high anomaly_score.
- question: Is a process from a high-risk category (e.g., web server) accessing the memory of a process associated with authentication (e.g., sshd)?
  context: Certain process interactions are inherently suspicious. This question aims to detect high-risk scenarios by defining rules for them. For example, a web server process ('nginx', 'apache2') should not be reading the memory of an authentication process like 'sshd' or 'sudo'. An alert on such a pre-defined, high-risk pairing provides a strong signal of a credential access attempt.
  answer_sources:
  - Sysmon for Linux Event ID 10
  - Linux Auditd logs
  - Critical Linux servers, including authentication servers (LDAP, Kerberos KDC), SSH jump hosts, and servers running credential managers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: SEARCH process_access_logs WHERE source_process IN (web_server_list) AND target_process IN (auth_process_list)
- question: Are there statistically rare pairings of source and target processes where one is accessing the memory of the other?
  context: Beyond pre-defined risky pairings, adversaries may find novel ways to access process memory. This question identifies such activity by first building a baseline of all normal process memory access events. Any new source-target pairing that is statistically rare (e.g., in the bottom 1% of occurrences) is flagged for investigation. The priority is increased if the target process is known to handle credentials, like 'lsassd' or 'sshd'.
  answer_sources:
  - Sysmon for Linux Event ID 10
  - Linux Auditd logs
  - Critical Linux servers, including authentication servers (LDAP, Kerberos KDC), SSH jump hosts, and servers running credential managers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: ANALYZE process_access_logs to build frequency table of source-target pairs. ALERT on pairs with frequency < 1st percentile, especially if target handles credentials.
- question: Can process memory access events be modeled as a graph to detect anomalous interactions between distinct process communities?
  context: This question provides a sophisticated, holistic view of process interactions. By modeling processes as nodes and memory accesses as edges in a graph, we can use community detection algorithms to find clusters of normally interacting processes (e.g., a 'web services' cluster). An access event that creates an edge between two normally separate communities (e.g., a web process accessing an authentication process) represents a significant anomaly and a likely attack.
  answer_sources:
  - Sysmon for Linux Event ID 10
  - Linux Auditd logs
  - Critical Linux servers, including authentication servers (LDAP, Kerberos KDC), SSH jump hosts, and servers running credential managers.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: MODEL process access events as a graph. APPLY community detection. ALERT on access events that create edges between distinct communities.
- question: Is a high-risk /proc filesystem access event followed shortly by a successful outbound authentication from the same host?
  context: The ultimate goal of credential theft is often lateral movement. This question correlates the suspicious /proc access activity with its likely outcome. It creates a rule to detect when a /proc access alert on a host is followed within a short time window (e.g., 60 minutes) by a successful outbound login (e.g., SSH, Kerberos) from that same host. This combination of events strongly indicates a successful credential compromise and abuse.
  answer_sources:
  - Linux Auditd logs
  - Zeek ssh.log
  - Zeek kerberos.log
  - Windows Event ID 4624
  - Network egress points, authentication servers (Domain Controllers, RADIUS), and network segments containing high-value assets.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: CORRELATE /proc_access_alert with subsequent successful_outbound_auth from same source_ip within 60 minutes.
- question: Following a /proc access alert, are there any outbound authentications from the host that are statistically unusual for that user or host's baseline behavior?
  context: This question looks for anomalous lateral movement following a potential credential theft. After a /proc access alert on a host, it analyzes subsequent outbound authentications. It flags any login that deviates from the established baseline, such as a user authenticating from that source host for the first time, or the host connecting to a destination it has rarely or never connected to before. This helps pinpoint suspicious credential usage.
  answer_sources:
  - Linux Auditd logs
  - Zeek ssh.log
  - Zeek kerberos.log
  - Windows Event ID 4624
  - Network egress points, authentication servers (Domain Controllers, RADIUS), and network segments containing high-value assets.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: ON /proc_access_alert, ANALYZE outbound authentications for next hour. ALERT if user/destination pair is rare for that source host baseline.
- question: After a /proc access alert, is there an anomalous spike in the volume of successful outbound authentications from the host, as detected by a time-series model?
  context: This question uses machine learning to detect an abnormal pattern of behavior indicative of credential abuse. It trains a time-series model on the normal volume of outbound authentications for each host. If a /proc access alert is followed by a sudden spike in successful authentications that the model flags as a significant anomaly, the events are correlated and escalated. This can detect automated lateral movement scripts or a spray of logins using stolen credentials.
  answer_sources:
  - Linux Auditd logs
  - Zeek ssh.log
  - Zeek kerberos.log
  - Windows Event ID 4624
  - Network egress points, authentication servers (Domain Controllers, RADIUS), and network segments containing high-value assets.
  range: last 90 days
  queries:
  - search_technology: Pseudocode
    query: ON /proc_access_alert, monitor outbound auth volume. USE time-series model to detect anomalous spikes. ALERT on correlated spike.