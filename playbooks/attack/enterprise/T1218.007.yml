name: T1218.007: Msiexec
id: e8f4c2a0-6b7d-4e8f-9c0a-1b2c3d4e5f6a
description: This playbook helps investigate whether an adversary is attempting to evade defenses by abusing the Windows Installer execution engine, msiexec.exe. This technique involves using msiexec.exe to proxy the execution of malicious code, often by installing packages from remote, untrusted sources, using suspicious or rare command-line arguments, being spawned by unusual parent processes like Office applications or browsers, or leading to subsequent command-and-control (C2) network traffic. The playbook also looks for signs of command-line obfuscation, such as high entropy or statistically infrequent command strings, to uncover evasive actions.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Has msiexec.exe initiated a network connection to download a package from a URL or IP address that matches a known malicious indicator?
  context: This question uses a symbolic approach to detect known threats. Adversaries often use msiexec.exe to download and install malicious payloads from compromised or attacker-controlled servers. By correlating process creation events with network logs and comparing the destination against threat intelligence feeds, analysts can directly identify installations involving known malicious infrastructure.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek http.log, Zeek files.log, Zeek dns.log from User workstations and servers; Network egress points including forward proxies and perimeter firewalls; DNS resolvers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Process:Create WHERE ProcessName is 'msiexec.exe' AND CommandLine contains ('/i http' OR '/i //'). CORRELATE with Network:Logs on SourceIP and Timestamp. IF RemoteDestination in ThreatIntelFeed THEN Alert.
- question: Is msiexec.exe being used for a remote installation from a domain that is statistically anomalous, such as being newly registered or rarely contacted by hosts in the enterprise?
  context: This question aims to uncover unknown or novel threats by focusing on statistical outliers. Attackers frequently use newly registered domains (NRDs) for their campaigns. A domain that is very new (<90 days) and has been contacted by very few hosts (<5) for an MSI installation is highly suspicious and warrants investigation, even if it's not on any threat list.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek http.log, Zeek files.log, Zeek dns.log from User workstations and servers; Network egress points including forward proxies and perimeter firewalls; DNS resolvers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each 'msiexec.exe /i http...' event, EXTRACT Domain. CALCULATE DomainRegistrationAge and EnterprisePrevalence (unique hosts over 30 days). IF DomainRegistrationAge < 90 days AND EnterprisePrevalence < 5 THEN Alert.
- question: Can a machine learning model classify an msiexec.exe remote installation as malicious based on its command line and associated network features?
  context: This question applies a Random Forest classification model to detect complex malicious patterns that are difficult to define with simple rules. By analyzing features like URL path entropy, query parameter count, destination port, and domain TLD, the model can produce a maliciousness probability score, providing a more nuanced and powerful detection capability for sophisticated attacks.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek http.log, Zeek files.log, Zeek dns.log from User workstations and servers; Network egress points including forward proxies and perimeter firewalls; DNS resolvers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each 'msiexec.exe /i http...' event, GATHER features (URL entropy, param count, port, TLD, TI score). PREDICT with RandomForestClassifier. IF MaliciousProbability > 0.90 THEN Alert.
- question: Is msiexec.exe being executed with command-line arguments for silent DLL registration or unregistration ('/y' or '/z'), or for silent remote installation?
  context: This question creates high-fidelity alerts for specific, suspicious command-line patterns. The '/y' (register) and '/z' (unregister) arguments are used to execute DLLs, a known method for proxying execution. Similarly, combining a silent flag ('/q') with a remote installation ('/i http...') is a common adversarial tactic to install malware without user interaction.
  answer_sources:
  - Windows Event ID 4688 from All Windows endpoints and servers; Centralized SIEM platform with command-line argument logging enabled.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Process:Create WHERE ProcessName is 'msiexec.exe'. IF CommandLine contains '/y' OR '/z' THEN Alert(HighFidelity). IF CommandLine matches '*/q* /i http*' THEN Alert(MediumFidelity).
- question: Has msiexec.exe been executed with a combination of command-line arguments that is statistically rare in the environment?
  context: This question seeks to identify anomalous behavior by baselining normal msiexec.exe usage. Most legitimate software installations use a predictable set of command-line arguments. An argument combination that is extremely infrequent (e.g., in the bottom 1st percentile) compared to a 90-day baseline is a strong indicator of non-standard, and potentially malicious, activity.
  answer_sources:
  - Windows Event ID 4688 from All Windows endpoints and servers; Centralized SIEM platform with command-line argument logging enabled.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: BASELINE all msiexec.exe command-line argument combinations over 90 days. FOR each new execution, CALCULATE frequency of its argument combination. IF frequency is in bottom 1st percentile THEN Alert.
- question: Does a machine learning anomaly detection model identify the command-line arguments of an msiexec.exe execution as a significant deviation from normal behavior?
  context: This question uses a one-class SVM model to learn the patterns of legitimate msiexec.exe command lines. The model can then identify new executions whose arguments are outliers, indicating they do not conform to the learned 'normal' profile. This is effective for detecting novel or unusual combinations of arguments used by attackers to evade static rules.
  answer_sources:
  - Windows Event ID 4688 from All Windows endpoints and servers; Centralized SIEM platform with command-line argument logging enabled.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: VECTORIZE msiexec.exe command-line arguments using TF-IDF. TRAIN OneClassSVM on legitimate baseline data. FOR each new execution, PREDICT if it is an outlier. IF outlier THEN Alert.
- question: Is msiexec.exe being launched by a parent process not typically associated with software installation, such as an Office application, browser, or script interpreter?
  context: This question focuses on suspicious process lineage. Legitimate software installations are usually initiated by users directly or by trusted installers. An adversary might use a malicious macro in a Word document or a script to launch msiexec.exe. Alerting when the parent is winword.exe, powershell.exe, chrome.exe, etc., is a highly effective way to detect this TTP.
  answer_sources:
  - Windows Event ID 4688 from All Windows workstations and servers configured to log process creation events with parent process information.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Process:Create WHERE ProcessName is 'msiexec.exe' AND ParentProcessName in ('winword.exe', 'excel.exe', 'powershell.exe', 'wscript.exe', 'chrome.exe', ...). THEN Alert.
- question: Is msiexec.exe being executed by a parent process that is statistically rare for a specific user or host?
  context: This question adds user and host context to parent-child process analysis. While a certain parent process might be legitimate for one user (e.g., a software developer), it could be highly anomalous for another (e.g., a finance user). By baselining normal parent-child relationships per user/host, this method can detect targeted attacks that deviate from an individual's normal activity profile.
  answer_sources:
  - Windows Event ID 4688 from All Windows workstations and servers configured to log process creation events with parent process information.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each User/Host, BASELINE parent processes of msiexec.exe. FOR each new execution, IF ParentProcess is rare (<1% of historical invocations) for that User/Host THEN Alert.
- question: Does a graph-based anomaly detection model identify the process creation chain leading to msiexec.exe as a low-probability or unusual sequence?
  context: This question models process creation events as a large-scale graph to identify anomalous execution paths. A scenario like a browser spawning a script that in turn spawns msiexec.exe would appear as a low-probability path in a graph trained on normal activity. This is powerful for detecting complex, multi-stage attacks like drive-by downloads.
  answer_sources:
  - Windows Event ID 4688 from All Windows workstations and servers configured to log process creation events with parent process information.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: MODEL process creation events as a graph. FOR each new msiexec.exe execution, CALCULATE the probability of its creation path. IF path probability is below a threshold THEN Alert.
- question: Within five minutes after an msiexec.exe execution, did the host establish a network connection to a known command-and-control (C2) server?
  context: This question correlates process execution with subsequent network behavior to identify post-installation C2 communication. After a malicious MSI is executed, the payload will often beacon out to an attacker-controlled server. This query looks for that follow-on connection to a destination on a C2 threat feed, providing strong evidence of a successful compromise.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log, Zeek ssl.log from Perimeter firewalls and network taps capturing egress traffic; DNS resolvers; All Windows workstations and servers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: ON 'msiexec.exe' creation event, monitor SourceIP for 5 minutes. SEARCH Network:Logs for connections from SourceIP. IF DestinationIP or Domain in C2_ThreatIntelFeed THEN Alert.
- question: Following an msiexec.exe execution, did the host make an outbound TLS connection using a rare JA3/JA3S hash or a certificate with high-entropy fields?
  context: This question hunts for C2 communications by analyzing TLS fingerprinting. Malware often uses custom TLS libraries, resulting in unique JA3/JA3S client/server fingerprints. A statistically rare hash is suspicious. Additionally, C2 frameworks often use self-signed certificates with randomized (high-entropy) subject or issuer fields, which can be detected statistically.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log, Zeek ssl.log from Perimeter firewalls and network taps capturing egress traffic; DNS resolvers; All Windows workstations and servers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: ON 'msiexec.exe' creation, monitor subsequent TLS connections. IF JA3/JA3S hash is rare (<0.1% prevalence) OR Certificate subject/issuer has high entropy THEN Alert.
- question: After an msiexec.exe execution, did the host's outbound data volume significantly exceed its forecasted baseline, suggesting data exfiltration or C2 activity?
  context: This question uses time-series forecasting to detect anomalies in network traffic volume. A model (like ARIMA) is trained on a host's normal outbound data patterns. A sudden, significant spike in traffic shortly after an msiexec.exe execution that exceeds the forecast (e.g., by >3 standard deviations) can indicate unexpected C2 heartbeating or the beginning of data exfiltration.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log, Zeek ssl.log from Perimeter firewalls and network taps capturing egress traffic; DNS resolvers; All Windows workstations and servers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: ON 'msiexec.exe' creation, FORECAST expected outbound data volume for the host. MEASURE actual volume. IF actual volume > (forecast + 3 * std_dev) THEN Alert.
- question: Was an msiexec.exe process executed with a command line containing substrings indicative of obfuscation or secondary execution, such as 'powershell -e' or long Base64 strings?
  context: This question uses a symbolic approach to find common obfuscation techniques within a command line. Adversaries may embed encoded PowerShell commands, calls to other utilities like certutil, or long Base64 blobs within the msiexec.exe command line to hide the true payload. This query searches for these suspicious substrings to uncover the nested execution.
  answer_sources:
  - Windows Event ID 4688 from Centralized SIEM or data lake containing command-line logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: SEARCH Process:Create WHERE ProcessName is 'msiexec.exe' AND CommandLine contains ('powershell -e', 'certutil', 'rundll32', or matches regex for long Base64). THEN Alert.
- question: Was msiexec.exe executed with a full command-line string that is statistically rare or has unusually high character entropy compared to a 30-day baseline?
  context: This question aims to detect obfuscated or randomized command lines used to evade signature-based detection. A command that has been seen very few times (<5) across the entire enterprise is anomalous. Additionally, calculating the Shannon entropy of the command string can identify randomized or encoded commands, which have higher entropy than typical, human-readable commands.
  answer_sources:
  - Windows Event ID 4688 from Centralized SIEM or data lake containing command-line logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: FOR each new msiexec.exe command line, CALCULATE its frequency and Shannon entropy against a 30-day baseline. IF frequency < 5 OR entropy is in 99th percentile THEN Alert.
- question: Does a machine learning autoencoder model, trained on legitimate command lines, produce a high reconstruction error for a new msiexec.exe command line?
  context: This question uses a character-level LSTM autoencoder to learn the deep structural patterns of legitimate msiexec.exe command lines. When a new, anomalous command is fed to the model, it will struggle to reconstruct it accurately, resulting in a high reconstruction error. This technique is highly effective at detecting novel and sophisticated obfuscation methods that other techniques might miss.
  answer_sources:
  - Windows Event ID 4688 from Centralized SIEM or data lake containing command-line logs from all Windows endpoints and servers.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: TRAIN LSTM Autoencoder on legitimate msiexec.exe commands. FOR each new command, CALCULATE reconstruction error. IF error > threshold THEN Alert.