name: T1218.007: Msiexec
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook investigates whether an adversary is attempting to evade defenses by abusing the Microsoft Windows Installer execution engine, msiexec.exe. This technique involves using msiexec.exe to proxy the execution of malicious code, often by installing MSI packages from remote locations, using suspicious or rare command-line arguments to register malicious DLLs or perform silent installations, or being launched by an unusual parent process like an Office application or web browser. The playbook also seeks to identify post-exploitation activity, such as command-and-control (C2) communication or data exfiltration, that occurs shortly after an msiexec.exe execution. Analysis focuses on process creation events, command-line arguments, parent-child process relationships, and subsequent network activity to uncover these behaviors.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Is msiexec.exe being used to install a package from a known malicious remote location?
    context: |
      This question aims to detect the direct use of msiexec.exe to download and execute malicious MSI packages from URLs or network shares. Adversaries use this technique to bypass application whitelisting and other defense mechanisms. Correlating process execution with network logs and threat intelligence provides a high-fidelity method to identify known threats.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Zeek dns.log
      - User workstations and servers; Network egress points including forward proxies and perimeter firewalls; DNS resolvers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Process:Create events WHERE process_name == 'msiexec.exe' AND (command_line CONTAINS '/i http' OR command_line CONTAINS '/i //'). EXTRACT remote_location. JOIN with Network:Connection events on source_host and timestamp. CHECK remote_location against threat_intelligence_feed. ALERT if match.
  - question: Is msiexec.exe downloading an MSI package from a statistically rare or newly registered domain?
    context: |
      This question helps uncover potentially malicious downloads from domains that are not yet on threat intelligence feeds. Attackers often use newly registered domains (NRDs) for their campaigns. Analyzing domain age and its prevalence within the organization can surface suspicious activity that would otherwise be missed. A low prevalence indicates the domain is not widely used, increasing its suspiciousness.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Zeek dns.log
      - User workstations and servers; Network egress points including forward proxies and perimeter firewalls; DNS resolvers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each msiexec remote install: EXTRACT domain. CALCULATE domain_age and domain_prevalence (count of unique hosts contacting domain in last 30 days). IF domain_age < 90 days AND domain_prevalence < 5, ALERT as anomalous.
  - question: Can a machine learning model classify an msiexec.exe remote installation as malicious based on its command line and network features?
    context: |
      This question leverages machine learning to perform a more nuanced classification of msiexec.exe remote installations. By analyzing a combination of features like URL structure, network behavior, and reputation, the model can identify complex malicious patterns that are difficult to define with simple rules, providing a probabilistic score of maliciousness.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Zeek dns.log
      - User workstations and servers; Network egress points including forward proxies and perimeter firewalls; DNS resolvers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each msiexec remote install: EXTRACT features (URL entropy, param_count, dest_port, TLD, etc.). INPUT features into trained Random Forest model. IF model_output_score > 0.90, ALERT as malicious.
  - question: Is msiexec.exe being used with suspicious command-line arguments, such as for silent installation or DLL registration?
    context: |
      This question focuses on identifying specific, high-confidence indicators of malicious msiexec.exe usage. The '/y' (register) and '/z' (unregister) arguments are used for DLLs and are highly unusual for standard software installation. Similarly, combining a silent flag ('/q') with a remote installation ('/i http...') is a common pattern for malware trying to execute without user interaction.
    answer_sources:
      - Windows Event ID 4688
      - All Windows endpoints and servers; Centralized SIEM platform with command-line argument logging enabled.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Process:Create WHERE process_name == 'msiexec.exe' AND (command_line CONTAINS '/y' OR command_line CONTAINS '/z' OR (command_line CONTAINS '/q' AND command_line CONTAINS '/i http')). ALERT on match.
  - question: Is msiexec.exe being executed with a statistically rare combination of command-line arguments?
    context: |
      This question helps detect novel or unusual uses of msiexec.exe by identifying command-line argument combinations that are uncommon in the environment. Adversaries may use legitimate but rarely-used flag combinations to achieve their objectives. By baselining normal activity, this approach can flag deviations that may indicate malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - All Windows endpoints and servers; Centralized SIEM platform with command-line argument logging enabled.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE all msiexec.exe argument combinations over 90 days. FOR each new execution: EXTRACT argument_combination. IF frequency of argument_combination is in bottom 1st percentile, ALERT as anomalous.
  - question: Can a machine learning anomaly detection model identify abnormal msiexec.exe command-line argument combinations?
    context: |
      This question applies an unsupervised machine learning model (One-Class SVM) to learn the boundary of 'normal' msiexec.exe command-line usage. This is more powerful than simple frequency analysis as it can understand the relationships between arguments. It can then identify new, unseen combinations that deviate from this learned normality, effectively flagging sophisticated or novel attack patterns.
    answer_sources:
      - Windows Event ID 4688
      - All Windows endpoints and servers; Centralized SIEM platform with command-line argument logging enabled.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          VECTORIZE msiexec command-line arguments using TF-IDF. TRAIN One-Class SVM model on baseline data. FOR each new execution: VECTORIZE arguments and PREDICT with model. IF model classifies as anomaly, ALERT.
  - question: Was msiexec.exe launched by an unusual parent process, such as an Office application, browser, or script interpreter?
    context: |
      This question investigates the process lineage of msiexec.exe. Legitimate installations are typically initiated by user interaction or system management tools. An execution spawned from a web browser, Office document, or script can indicate a phishing attack, a malicious document, or a drive-by-download scenario where the user was tricked into launching the installer.
    answer_sources:
      - Windows Event ID 4688
      - All Windows workstations and servers configured to log process creation events with parent process information.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Process:Create WHERE process_name == 'msiexec.exe' AND parent_process_name IN ['winword.exe', 'excel.exe', 'outlook.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'chrome.exe', 'msedge.exe', 'firefox.exe']. ALERT on match.
  - question: Is the parent process of msiexec.exe statistically rare for the specific user or host where it was executed?
    context: |
      This question adds context to the parent-child relationship by creating individualized baselines for each user and host. A parent process that is normal for an IT administrator (e.g., a management console) would be highly anomalous for a standard user. This statistical profiling helps reduce false positives and focuses on behavior that is unusual for its specific context.
    answer_sources:
      - Windows Event ID 4688
      - All Windows workstations and servers configured to log process creation events with parent process information.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE parent processes for msiexec.exe per user and per host. FOR each new msiexec execution: CHECK if parent process is rare (<1% frequency) for that user/host. IF so, ALERT as anomalous.
  - question: Does the process execution chain leading to msiexec.exe represent a low-probability sequence in a process graph model?
    context: |
      This question employs a sophisticated graph-based model to analyze entire process execution chains, not just the immediate parent. This can detect complex attack sequences, such as a browser spawning a script which then launches msiexec.exe. By modeling normal sequences, the algorithm can identify and alert on new, improbable paths that are characteristic of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - All Windows workstations and servers configured to log process creation events with parent process information.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          MODEL normal process creation sequences in a graph. FOR each new msiexec execution: TRACE its process lineage. IF the lineage path has a low probability in the graph model, ALERT as anomalous.
  - question: Did the host make a network connection to a known command-and-control (C2) server shortly after executing msiexec.exe?
    context: |
      This question looks for post-exploitation behavior. After a malicious package is installed via msiexec.exe, it will often 'call home' to a C2 server for further instructions. By correlating the installation event with subsequent network traffic and checking destinations against C2 intelligence feeds, analysts can detect the successful compromise and establishment of a foothold.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Perimeter firewalls and network taps capturing egress traffic; DNS resolvers; All Windows workstations and servers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          ON msiexec execution: MONITOR network connections from same host for 5 minutes. IF connection destination is in C2 threat feed AND destination != initial download URL, ALERT as C2 activity.
  - question: Following an msiexec.exe execution, did the host initiate a TLS connection with statistically rare or suspicious characteristics?
    context: |
      This question aims to detect encrypted C2 traffic without relying on IP/domain blocklists. JA3/JA3S hashes fingerprint the TLS client and server, and malware often uses unique or rare fingerprints. Additionally, high-entropy or unusual certificate details can indicate the use of self-signed certificates, a common practice for C2 infrastructure. This helps find unknown C2 channels.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Perimeter firewalls and network taps capturing egress traffic; DNS resolvers; All Windows workstations and servers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          ON msiexec execution: MONITOR outbound TLS connections. IF JA3/JA3S hash is rare (<0.1% prevalence) OR server certificate has high entropy, ALERT as suspicious C2.
  - question: Did the host exhibit an anomalous spike in outbound data volume after an msiexec.exe execution?
    context: |
      This question uses a time-series model to detect anomalies in network traffic volume, which can be an indicator of C2 communication or data exfiltration. By forecasting the expected 'normal' traffic for a host, the model can flag significant deviations that occur after a potentially malicious installation, even if the destination is unknown.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Perimeter firewalls and network taps capturing egress traffic; DNS resolvers; All Windows workstations and servers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FORECAST expected outbound data volume for host using ARIMA model. ON msiexec execution: MONITOR actual data volume. IF actual_volume > (forecasted_volume + 3 * std_dev), ALERT as anomalous traffic.
  - question: Does the msiexec.exe command line contain strings indicative of obfuscation or secondary command execution?
    context: |
      This question looks for common obfuscation and 'living-off-the-land' techniques embedded within an msiexec.exe command line. Adversaries may use msiexec as a wrapper to execute other malicious commands or scripts (e.g., encoded PowerShell). Searching for these specific substrings provides a high-fidelity way to detect this type of tradecraft.
    answer_sources:
      - Windows Event ID 4688
      - Centralized SIEM or data lake containing command-line logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH Process:Create WHERE process_name == 'msiexec.exe' AND command_line CONTAINS ('powershell -e', 'certutil', 'rundll32', or Base64_pattern). ALERT on match.
  - question: Is the full msiexec.exe command line statistically rare or does it have unusually high entropy?
    context: |
      This question aims to identify malicious command lines by treating the entire string as an indicator. A command that has never or rarely been seen before is suspicious. Furthermore, high entropy (randomness) in the command line often indicates the presence of encoded or encrypted data, a common obfuscation technique used by attackers to hide their payloads.
    answer_sources:
      - Windows Event ID 4688
      - Centralized SIEM or data lake containing command-line logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE all unique msiexec command lines over 30 days. FOR each new execution: IF command_line_frequency < 5 OR shannon_entropy(command_line) is in 99th percentile, ALERT as anomalous.
  - question: Does an LSTM autoencoder model flag the msiexec.exe command line as anomalous based on its character-level structure?
    context: |
      This question uses a sophisticated deep learning model (LSTM autoencoder) to learn the grammatical and structural patterns of legitimate msiexec.exe command lines at a character level. When a new command is processed, the model attempts to reconstruct it. A high reconstruction error means the model struggled, indicating the command's structure is highly abnormal and likely malicious, even if it uses legitimate arguments in a novel way.
    answer_sources:
      - Windows Event ID 4688
      - Centralized SIEM or data lake containing command-line logs from all Windows endpoints and servers.
    range: Last 90 days
    queries:
      - technology: Pseudocode
        query: |
          TRAIN LSTM autoencoder on legitimate msiexec command lines. FOR each new command line: CALCULATE reconstruction_error from the model. IF reconstruction_error > threshold, ALERT as anomalous.