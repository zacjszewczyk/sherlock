name: T1072: Software Deployment Tools
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook focuses on detecting malicious use of software deployment tools, such as SCCM or Intune, for execution and lateral movement. It helps identify adversaries who are abusing these trusted enterprise systems to distribute malware, run malicious commands or scripts, move between systems, and establish persistence. The playbook covers checking for known malicious file indicators, analyzing command-line and script content for suspicious patterns, identifying anomalous deployment behavior (e.g., unusual users, times, or targets), and correlating deployment events with suspicious post-execution activity on endpoints.
type: technique
related:
  - TA0002: Execution
  - TA0008: Lateral Movement
contributors: Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are file hashes or names from deployed software packages matching known malicious indicators?
    context: Adversaries may abuse software deployment tools to distribute malware. This question aims to directly detect the presence of known malicious files by extracting file hashes and names from deployment logs and process creation events and comparing them against a threat intelligence feed. A match is a high-confidence indicator of compromise.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Zeek files.log
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs OR event_id=4688
          | EXTRACT file_hash, file_name
          | JOIN with threat_intel_feed ON file_hash OR file_name
          | WHERE match_found
          | ALERT
  - question: Are there deployed software package names with unusually high character entropy or rare n-gram frequencies?
    context: Attackers often use randomized or obfuscated names for their malicious payloads to avoid simple signature-based detection. This question helps identify such names by establishing a baseline of normal package names in the environment and flagging any that are statistical outliers in terms of character randomness (entropy) or unusual character sequences (n-gram rarity).
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Zeek files.log
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT package_name
          | CALCULATE entropy(package_name), ngram_rarity(package_name)
          | COMPARE against baseline
          | WHERE entropy > 99th_percentile OR ngram_rarity > 99th_percentile
          | ALERT
  - question: Have any newly deployed binaries been classified as malicious by a machine learning model based on their static features?
    context: This question leverages a machine learning model to proactively classify newly deployed binaries. By analyzing static features like PE headers, imported functions, and string entropy, the model can predict the likelihood of a file being malicious, even if it's a zero-day threat not yet present in threat intelligence feeds. This provides a sophisticated layer of detection for novel malware.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Zeek files.log
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_binary from deployment_events
          | EXTRACT static_features (PE_headers, imports, etc.)
          | INPUT features INTO classification_model
          | IF prediction == 'malicious' AND confidence > threshold
          | ALERT
  - question: Do command lines or scripts executed via software deployment tools contain suspicious patterns or known malicious commands?
    context: Adversaries often use deployment tools to execute malicious one-liners or scripts. This question aims to detect this activity by using regular expressions to scan command-line arguments and script content for high-fidelity indicators of compromise, such as encoded PowerShell commands, download cradles, or credential dumping tools. A match is a strong signal of malicious execution.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH event_id=4688 OR event_id=4104 where parent_process is deployment_agent
          | EXTRACT command_line, script_block
          | SCAN content with regex for ('powershell -enc', 'IEX(New-Object Net.WebClient).DownloadString', 'reg save HKLM\\SAM', etc.)
          | IF match_found
          | ALERT
  - question: Are there command lines executed by deployment tools that are statistical outliers in terms of length or character entropy?
    context: Long and complex command lines, especially those with high entropy, can indicate obfuscated or encoded malicious payloads. This question helps identify such commands by baselining the typical length and character randomness of legitimate administrative commands and alerting on significant deviations. This can catch novel or heavily obfuscated commands that regex patterns might miss.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH event_id=4688 where parent_process is deployment_agent
          | EXTRACT command_line
          | CALCULATE length(command_line), entropy(command_line)
          | COMPARE against baseline
          | WHERE length > 98th_percentile OR entropy > 98th_percentile
          | ALERT
  - question: Has an NLP model classified the intent of any script from a deployment job as malicious?
    context: This question applies advanced machine learning to understand the purpose of a script, rather than just its syntax. By training an NLP model on a large corpus of benign and malicious scripts, it can learn to classify the intent of new scripts (e.g., reconnaissance, execution). This allows for the detection of conceptually malicious scripts, even if they use novel techniques or obfuscation.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each script_block from deployment_events (event_id=4104)
          | PREPROCESS and vectorize script_text
          | INPUT vectors INTO NLP_intent_model
          | IF predicted_intent IN ('reconnaissance', 'execution', 'persistence')
          | ALERT
  - question: Has a software deployment been initiated by an unauthorized user account or from an unapproved source IP address?
    context: Only a specific set of privileged accounts should be able to initiate software deployments, and typically only from designated administrative workstations. This question aims to detect compromised accounts or unauthorized access by alerting whenever a deployment is initiated by a user not on a pre-defined allow-list or from an IP address outside of approved subnets.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT user, source_ip
          | IF user NOT IN authorized_users_allowlist OR source_ip NOT IN admin_ip_allowlist
          | ALERT
  - question: Has an authorized administrator initiated a deployment that significantly deviates from their established historical behavior?
    context: Even authorized accounts can be compromised. This question seeks to identify such compromises by building a behavioral baseline for each administrator, including their normal deployment times, frequency, and target systems. Deployments that are anomalous (e.g., a job run at 3 AM by a 9-to-5 admin) receive a high risk score, and an alert is triggered when this score exceeds a dynamic threshold, indicating activity that is unusual for that specific user.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_deployment
          | EXTRACT user, time_of_day, target_group_size
          | COMPARE with user's historical_profile
          | CALCULATE risk_score based on deviations
          | IF risk_score > (user_mean_score + 3 * user_stddev)
          | ALERT
  - question: Is the overall volume or frequency of software deployment jobs significantly deviating from the normal, forecasted rhythm?
    context: Enterprise-wide software deployment activity often follows a predictable pattern (e.g., a spike on Patch Tuesday). This question uses a time-series model to learn this normal rhythm. A sudden, unexpected spike in deployment volume that the model did not forecast can be an indicator of a large-scale, coordinated malicious campaign, such as a ransomware outbreak.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE deployment_jobs over time (e.g., per hour)
          | INPUT time_series_data INTO ARIMA/LSTM model
          | CALCULATE forecast vs actual
          | IF actual_volume is a significant outlier from forecast
          | ALERT
  - question: Has a process created by a software deployment been immediately followed by suspicious activity like new service creation or external network connections?
    context: A legitimate software installation may create services or connect to the internet, but malicious payloads often do so for persistence or C2 communication. This question uses a tight time-window correlation (e.g., 5 minutes) to link a deployment directly to suspicious follow-on actions, such as a new service being installed or a network connection being made to a non-allow-listed IP. This sequence of events is highly indicative of malicious post-execution behavior.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Zeek conn.log
      - SCCM/Intune Management Servers
      - All Corporate Endpoints
      - Network Egress Points (Firewalls, Proxies)
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE on hostname over a 5-minute window:
          (event_id=4688 where parent_process is deployment_agent) as event1
          FOLLOWED BY
          (event_id=7045 where ProcessID=event1.ProcessID) OR (network_connection where ProcessID=event1.ProcessID AND dest_ip is not internal/allow-listed)
          | ALERT
  - question: Has a software deployment resulted in a statistically rare sequence of follow-on events on the endpoint?
    context: Normal software installations have predictable behavioral chains (e.g., process A always spawns process B). This question aims to find anomalies in these chains. By baselining the common sequences of events that follow a deployment, it can flag a deployment that leads to a rare or never-before-seen sequence, such as a process that has never made a network connection suddenly connecting to a low-reputation IP address.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Zeek conn.log
      - SCCM/Intune Management Servers
      - All Corporate Endpoints
      - Network Egress Points (Firewalls, Proxies)
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each deployment_event
          | TRACE subsequent event_chain (child_processes, net_connections, registry_mods)
          | CALCULATE rarity_score of the event_chain based on historical data
          | IF rarity_score is above threshold
          | ALERT
  - question: Does the full chain of activity, from user to deployment to process to network connection, form a structurally anomalous graph?
    context: This question models the entire deployment lifecycle as a graph to identify unusual relationships between entities. By learning what normal activity graphs look like (e.g., 'Admin' -> 'Patch Job' -> 'msiexec.exe'), the model can flag new subgraphs that represent novel or suspicious chains of behavior, such as a deployment leading directly to a connection to a known malicious C2 domain. This provides a holistic view of the attack path.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows Event ID 7045
      - Zeek conn.log
      - SCCM/Intune Management Servers
      - All Corporate Endpoints
      - Network Egress Points (Firewalls, Proxies)
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_deployment_chain
          | CONSTRUCT activity_graph (nodes: user, job, process, destination; edges: relationships)
          | COMPARE new_subgraph to model of normal_subgraphs
          | IF subgraph is structurally anomalous
          | ALERT
  - question: Has a user deployed a known malicious tool (e.g., RAT, credential harvester) to systems outside of their normal administrative scope?
    context: This is a classic lateral movement pattern where a compromised account is used to 'jump' to a different set of systems. This question specifically looks for deployments where the user is targeting systems they don't normally manage, AND the package being deployed is a known malicious tool used for lateral movement. The combination of these two factors is a very strong indicator of an active adversary.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - Tier 0/1 Servers
      - All Corporate Endpoints
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT user, target_systems, package_hash
          | IF target_systems NOT IN user's normal_scope AND package_hash IN lateral_movement_tool_feed
          | ALERT
  - question: Has a deployment with a high-entropy package name been sent to an unusual or high-value host group for the initiating user?
    context: This question combines multiple weak signals to create a stronger one. It identifies deployments where the source-to-destination pairing is rare (e.g., an IT admin deploying to a Domain Controller) and the package name itself looks suspicious (high entropy). This combination is much more likely to be malicious lateral movement than either factor alone.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - Tier 0/1 Servers
      - All Corporate Endpoints
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT user, target_group, package_name
          | CALCULATE source_destination_rarity(user, target_group)
          | CALCULATE entropy(package_name)
          | IF rarity > threshold AND entropy > threshold
          | ALERT
  - question: Has a machine learning model flagged a deployment as potential lateral movement because it was sent to an unexpected group of assets?
    context: This question uses machine learning to formalize the concept of "normal" deployment targets. By clustering assets into groups based on who typically deploys to them, a model can be trained to predict the correct destination group for any new deployment. When the model flags a deployment as being sent to the "wrong" group, it indicates a break in normal operational patterns, which could be lateral movement.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - Tier 0/1 Servers
      - All Corporate Endpoints
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_deployment
          | EXTRACT user, target_group
          | PREDICT expected_target_group using classification_model
          | IF predicted_group != actual_target_group AND confidence is high
          | ALERT
  - question: Are scripts or commands executed by a deployment job using tools and syntax commonly associated with lateral movement (e.g., PsExec, WinRM, WMI)?
    context: While software deployment tools are a form of remote administration, they should not typically be used to launch other remote administration tools like PsExec or WinRM. This question scans for the command-line "fingerprints" of these tools being used within a deployment job, which is highly anomalous and a strong indicator that an adversary is using the deployment tool as a pivot point.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH event_id=4688 OR event_id=4104 where parent_process is deployment_agent
          | EXTRACT command_line, script_block
          | SCAN content with regex for ('psexec.exe \\\\', 'winrs.exe -r:', 'wmic /node:')
          | IF match_found
          | ALERT
  - question: Do commands executed by deployment jobs contain rare parameters that are associated with remote access or lateral movement?
    context: Legitimate deployment scripts use a predictable set of command-line parameters (e.g., /install, /quiet). Parameters used for remote targeting, such as /node: (WMI) or -r: (WinRS), should be extremely rare or non-existent in this context. This question identifies these rare parameters by analyzing the frequency of all parameters used and alerting when a low-frequency, suspicious parameter appears.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH event_id=4688 where parent_process is deployment_agent
          | EXTRACT command_line_parameters
          | COUNT frequency of each parameter over 90 days
          | IF parameter is in ('-r:', '/node:', '/s') AND frequency < 5
          | ALERT
  - question: Has a machine learning model detected an anomalous command-line sequence, indicating it does not conform to the normal structure of legitimate deployment commands?
    context: This question uses a sequence-aware model (like an LSTM autoencoder) to learn the "grammar" of normal command lines used in deployments. Malicious commands, which are often constructed ad-hoc, will not fit this learned grammar and will result in a high reconstruction error or perplexity score when fed to the model. This allows for the detection of novel malicious command structures without relying on specific signatures.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - SCCM/Intune Management Servers
      - All Corporate Endpoints and Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each command_line from deployment_events
          | INPUT command_sequence INTO LSTM_autoencoder_model
          | CALCULATE reconstruction_error
          | IF reconstruction_error > threshold
          | ALERT
  - question: Was a software deployment job initiated from a source IP address that is not on the approved list of admin consoles or is linked to another active security incident?
    context: To move laterally, an adversary might compromise a non-administrative machine and use stolen credentials to connect to a deployment server. This question aims to detect this by strictly enforcing the source of deployment jobs. Any job initiated from an IP not on the allow-list of admin workstations/VPNs, or from an IP already flagged in another incident, should be treated as a critical security event.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Zeek conn.log
      - SCCM/Intune Management Servers
      - Administrative Workstations
      - VPN Concentrators
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT source_ip
          | IF source_ip NOT IN admin_ip_allowlist OR source_ip IN active_incident_ips
          | ALERT CRITICAL
  - question: Did an administrator initiate a deployment job after logging in from a statistically improbable geographic location or IP subnet?
    context: This question helps detect session hijacking or credential theft where an adversary uses an admin's account from an unusual location. By baselining each user's typical source IPs and subnets, it can flag a login from a rare location (e.g., a different country) that is immediately followed by a sensitive deployment action, indicating a high probability of account compromise.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Zeek conn.log
      - SCCM/Intune Management Servers
      - Administrative Workstations
      - VPN Concentrators
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH event_id=4624 for deployment_admins
          | EXTRACT user, source_ip
          | CALCULATE rarity of source_ip for that user
          | IF rarity > threshold AND user initiates deployment_job shortly after
          | ALERT
  - question: Has a machine learning model flagged an administrator's session as anomalous based on a combination of factors like source IP, time, and actions taken?
    context: This question takes a holistic view of an administrator's session. An unsupervised model (autoencoder) learns what a "normal" session looks like across multiple dimensions (source IP, time of day, actions performed). A compromised session, such as one initiated from a strange IP at an odd time to perform a sensitive deployment, will not fit the normal pattern and will be flagged by the model due to a high reconstruction error, indicating a multi-faceted anomaly.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Zeek conn.log
      - SCCM/Intune Management Servers
      - Administrative Workstations
      - VPN Concentrators
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each admin_session
          | CREATE session_feature_vector (source_ip, time_of_day, actions, etc.)
          | INPUT vector INTO session_autoencoder_model
          | CALCULATE reconstruction_error
          | IF reconstruction_error > threshold
          | ALERT
  - question: Has a deployment job targeted a small, specific set of hosts belonging to different high-value groups (e.g., Domain Controllers, PCI servers)?
    context: Broad patching jobs target large, homogeneous groups. Targeted attacks, however, often involve "island-hopping" between specific, critical assets. This question looks for this pattern by alerting on small-batch deployments that target a mix of unrelated but high-value systems. This is highly uncharacteristic of normal operations and strongly suggests manual, targeted lateral movement.
    answer_sources:
      - Software deployment tool logs
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - Database Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs where target_count < 5
          | EXTRACT target_hosts
          | ENRICH target_hosts with AD_group_membership
          | IF hosts belong to multiple, disparate, high-value groups
          | ALERT
  - question: Has a deployment job with an unusual batch size (not a large patch, not a single test) occurred outside of a normal change window?
    context: Normal deployments are either very large (patching) or very small (one-off fixes/tests). An attacker moving laterally might target a medium-sized group of systems. This question identifies these statistically unusual batch sizes. By combining this with a time-based condition (outside a change window), it filters out legitimate but oddly-sized jobs, focusing on those more likely to be malicious.
    answer_sources:
      - Software deployment tool logs
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - Database Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT target_count, time
          | IF target_count is in statistically_sparse_range (e.g., 5-20) AND time is outside change_window
          | ALERT
  - question: Does a sequence of deployments match a high-reward attack path predicted by a reinforcement learning model?
    context: This advanced question models the network as a graph and uses reinforcement learning to identify the most efficient paths an attacker might take to reach critical assets ("crown jewels"). The system then monitors real deployment sequences in real-time. If a sequence of deployments starts to match one of these predicted high-value attack paths, it can be flagged as potential lateral movement in progress.
    answer_sources:
      - Software deployment tool logs
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - Database Servers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL network as graph with asset_criticality_weights
          | USE reinforcement_learning to identify optimal_attack_paths
          | MONITOR real-time deployment_sequences
          | IF real_sequence matches a predicted_attack_path
          | ALERT
  - question: Has a user from one administrative role (e.g., Workstation Admin) attempted to deploy software to assets managed by a different role (e.g., Domain Controllers)?
    context: This question enforces the principle of least privilege and separation of duties. A workstation administrator should not be deploying packages to servers. By defining these role-based boundaries and alerting on violations, the system can detect when a compromised account is being used to perform actions outside of its legitimate function, a key indicator of lateral movement.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH deployment_logs
          | EXTRACT user, target_collection
          | GET user_role from AD
          | GET target_collection_role from definition
          | IF user_role != target_collection_role
          | ALERT
  - question: Has a privileged account's deployment activity shown simultaneous, significant deviations across multiple behavioral metrics (e.g., package name, target, time)?
    context: A single anomaly might be a false positive, but multiple simultaneous anomalies for a single user are highly suspicious. This question creates a multi-faceted behavioral baseline for each privileged user. It then looks for activity that is anomalous across several dimensions at once (e.g., a new, high-entropy package deployed to a new target collection at 2 AM). This composite alert is a strong indicator of account compromise.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_deployment by privileged_user
          | CALCULATE deviation_score for package_name_entropy
          | CALCULATE deviation_score for target_collection_rarity
          | CALCULATE deviation_score for time_of_day
          | IF multiple scores > 3_std_dev
          | ALERT
  - question: Has an administrator performed a deployment action that is significantly different from the behavior of their peers in the same role?
    context: This question detects anomalies by comparing an individual's behavior to that of their peers. A machine learning model groups administrators with similar job functions and behavioral patterns. If one administrator's action (e.g., deploying a specific tool) is a major outlier compared to everyone else in their peer group, it suggests that either the user is doing something unique and potentially unauthorized, or their account is compromised and being used in a way that is inconsistent with their colleagues.
    answer_sources:
      - Software deployment tool logs
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Active Directory Logs
      - SCCM/Intune Management Servers
      - Domain Controllers
      - SIEM/Log Aggregator
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER admins into peer_groups based on historical deployment_behavior
          | FOR each new_deployment
          | EXTRACT user and deployment_features
          | CALCULATE distance from user's_peer_group_centroid
          | IF distance > threshold
          | ALERT