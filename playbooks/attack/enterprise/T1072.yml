name: T1072: Software Deployment Tools
id: 5a6b1c8d-9e0f-4a2b-8c7d-3e4f5a6b7c8d
description: This playbook addresses the malicious use of software deployment tools (e.g., SCCM, Intune) for both initial execution and lateral movement within a network. It provides investigative steps to detect adversaries leveraging these trusted enterprise systems to deploy malicious packages, run suspicious commands or scripts, and move between systems. The playbook focuses on identifying anomalies in deployment activity, such as jobs initiated by unusual users or at odd times, targeting non-standard systems, or involving packages with known malicious indicators, obfuscated names, or suspicious static features. It also covers detecting post-deployment indicators of compromise, like the creation of new services or unauthorized network connections, and lateral movement patterns like 'island-hopping' between critical assets.
type: technique
related:
- TA0002: Execution
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any software packages been deployed that have a file hash or name matching a known malicious indicator?
  context: This question aims to detect the straightforward use of software deployment tools to distribute known malware. By extracting file hashes and names from deployment logs and process creation events, we can compare them against threat intelligence feeds. A match is a high-fidelity indicator that an adversary is leveraging trusted enterprise tools to execute malicious code, bypassing simpler security controls.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Zeek files.log
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs AND process_creation_events | EXTRACT file_hash, file_name | JOIN with threat_intelligence_feed ON file_hash OR file_name | WHERE match_found
- question: Are there any deployed software packages with unusually high character entropy or rare n-gram frequencies in their names?
  context: Adversaries may randomize or obfuscate package names to avoid simple signature-based detection. This question focuses on identifying such names by establishing a baseline of normal character entropy and n-gram frequencies for legitimate software in the environment. Package names that are statistical outliers are flagged for review as they may indicate malicious attempts at evasion.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Zeek files.log
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs | EXTRACT package_name | CALCULATE entropy, n_gram_frequency | COMPARE to baseline | WHERE score > 99th_percentile
- question: Has a machine learning model classified any newly deployed binaries as malicious based on their static features?
  context: This question leverages machine learning to proactively identify previously unseen malware. By extracting static features (like PE headers, imported functions, and string entropy) from deployed binaries, a pre-trained model can predict whether a file is benign or malicious. This approach helps detect novel threats that do not have known signatures.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Zeek files.log
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOREACH new_deployment_binary | EXTRACT static_features | INPUT to ML_model | WHERE prediction == 'malicious' AND confidence > threshold
- question: Are there any command lines or scripts deployed via software management tools that contain high-fidelity patterns of malicious activity?
  context: This question seeks to identify overtly malicious commands executed through deployment tools. By using regular expressions to scan command-line arguments and script content for known malicious patterns (e.g., encoded PowerShell, download cradles, credential dumping), we can generate high-confidence alerts on adversary activity.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events OR powershell_script_block_logs | REGEX command_line OR script_content for 'powershell -enc', 'IEX(New-Object Net.WebClient).DownloadString', 'reg save HKLM\\SAM'
- question: Have any commands executed by deployment tools exhibited statistically anomalous length or character entropy?
  context: Adversaries often use long, complex, or obfuscated command lines to execute payloads. This question aims to detect such commands by establishing a baseline profile for legitimate administrative scripts and then flagging commands that are statistical outliers in terms of length or entropy, which can indicate malicious obfuscation.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events | EXTRACT command_line | CALCULATE length, entropy | COMPARE to baseline | WHERE score > 98th_percentile
- question: Has a Natural Language Processing (NLP) model classified the intent of any deployed script as malicious?
  context: This question applies advanced machine learning to understand the purpose of a script beyond simple keyword matching. By training an NLP model on a labeled dataset of benign and malicious scripts, we can classify the intent of new scripts from deployment jobs. This helps identify malicious logic even if it uses novel obfuscation techniques.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOREACH new_deployment_script | PREPROCESS text (tokenize, vectorize) | INPUT to NLP_model | WHERE predicted_intent == 'malicious'
- question: Has a software deployment been initiated by an unauthorized user or from an unapproved location?
  context: This question aims to enforce strict access control on powerful deployment tools. By maintaining an allow-list of authorized administrative accounts, groups, and source IP addresses, we can immediately alert on any deployment job initiated by an entity not on this list, which is a strong indicator of a compromised account or insider threat.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs | EXTRACT initiating_user, source_ip | WHERE user NOT IN admin_allow_list OR source_ip NOT IN admin_subnet_allow_list
- question: Has an authorized administrator initiated a deployment that is anomalous compared to their historical behavior?
  context: Even authorized users can have their accounts compromised. This question seeks to detect such compromises by profiling the normal deployment activity for each administrator (e.g., time of day, frequency, target size). A deployment that significantly deviates from a user's established baseline (e.g., a job at 3 AM targeting a single critical server) is flagged as high-risk.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each_admin | BUILD baseline (time, frequency, target_size) | SCORE new_deployment_activity | WHERE risk_score > 3_standard_deviations_from_mean
- question: Has a time-series anomaly detection model detected a significant deviation in the global volume or frequency of software deployments?
  context: This question provides a macro-level view of deployment activity to spot large-scale campaigns. By modeling the normal rhythm of software pushes (e.g., weekly patching), a time-series model can detect significant deviations, such as a sudden, unexpected spike in deployment jobs, which could indicate a widespread, coordinated malicious attack.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL global_deployment_volume with ARIMA/LSTM | FORECAST expected_volume | WHERE actual_volume deviates_significantly_from_forecast
- question: Has a software deployment been immediately followed by suspicious post-execution activity on the target endpoint?
  context: This question connects the deployment action to its immediate effects on the endpoint. A correlation rule can detect when a process created by a deployment agent is quickly followed by a suspicious action like a new service installation or an external network connection to a non-allow-listed IP. This sequence is a strong indicator of malicious payload execution.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Zeek conn.log
  - SCCM/Intune Management Servers, All Corporate Endpoints, Network Egress Points (Firewalls, Proxies), SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE on host within 5min | (process_created by ccmexec.exe) AND (new_service_created by new_process_id OR network_connection by new_process_id to non-internal_ip)
- question: Has a process spawned by a deployment tool led to a statistically rare sequence of follow-on events?
  context: This question focuses on detecting novel behaviors by baselining common post-deployment activity. By calculating the rarity of event chains (e.g., a specific process creating a network connection for the first time), we can alert on statistically improbable sequences that deviate from normal software installation behavior, suggesting malicious intent.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Zeek conn.log
  - SCCM/Intune Management Servers, All Corporate Endpoints, Network Egress Points (Firewalls, Proxies), SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: BASELINE event_chains from deployment_processes | CALCULATE rarity of new_event_chain | WHERE rarity_score is high
- question: Has a graph-based model detected an anomalous chain of behavior originating from a software deployment?
  context: This question models system activity as a graph to identify structurally unusual patterns. Normal activity forms predictable subgraphs (user -> job -> process). A deployment that leads to an anomalous subgraph, such as a connection to a known malicious C2 domain, can be flagged as a novel chain of malicious behavior that might be missed by sequence-based analytics.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Zeek conn.log
  - SCCM/Intune Management Servers, All Corporate Endpoints, Network Egress Points (Firewalls, Proxies), SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CONSTRUCT activity_graph (nodes=user, job, process) | TRAIN model on normal subgraphs | FLAG new, structurally_anomalous_subgraphs
- question: Has a deployment job targeted systems outside the initiator's normal scope with a package matching a known malicious tool?
  context: This question specifically looks for lateral movement indicators. It identifies when a user deploys software to systems they don't typically manage (e.g., a workstation admin targeting a domain controller) and cross-references the deployed package hash against a threat intelligence feed of tools used for lateral movement (RATs, credential harvesters). A match is a critical alert.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, Tier 0/1 Servers, All Corporate Endpoints, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs | WHERE target_system NOT IN user_scope | EXTRACT package_hash | JOIN with lateral_movement_tool_feed ON package_hash | ALERT on match
- question: Has a deployment to an unusual host group been initiated with a package name that has high entropy?
  context: This question combines two weak signals to create a stronger one. It identifies when a user deploys to a rare or high-value set of hosts and checks if the package name is also suspicious (high entropy). The combination of an unusual target and an obfuscated package name significantly increases the likelihood that the activity is malicious lateral movement.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, Tier 0/1 Servers, All Corporate Endpoints, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs | CALCULATE source_user_to_dest_asset_rarity | CALCULATE package_name_entropy | WHERE rarity > 99th_percentile AND entropy > 99th_percentile
- question: Has a machine learning model flagged a deployment as potential lateral movement due to it being misclassified for its predicted destination group?
  context: This question uses clustering to group assets based on who typically deploys to them (e.g., 'Workstation Patch Group'). A classifier is then trained to predict the destination group for any new deployment. If the model flags a deployment as being sent to the wrong group (e.g., a workstation patch sent to servers), it may indicate an adversary using the tool to move laterally.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, Tier 0/1 Servers, All Corporate Endpoints, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER assets by deployment_patterns | TRAIN classifier to predict destination_group | WHERE actual_group != predicted_group AND confidence is high
- question: Does a script deployed via a software management tool contain commands or parameters associated with remote execution or lateral movement?
  context: This question hones in on specific command-line artifacts that are hallmarks of lateral movement. Using regular expressions to find tools like 'psexec.exe', 'winrs.exe', 'wmic /node:', or 'schtasks /create /s' within scripts originating from a deployment agent is highly anomalous and a strong indicator of an adversary using the deployment tool to pivot to other systems.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH process_creation_events OR powershell_logs from deployment_agent | REGEX for 'psexec', 'winrs -r:', 'wmic /node:', 'schtasks /create /s'
- question: Have any deployment job scripts used command-line parameters that are statistically rare in the environment?
  context: This question uses frequency analysis to find unusual command-line parameters. While parameters like '/install' are common, those used for remote access like '-r:', '/node:', or '/s' (in the context of remote tools) should be extremely rare within a deployment job. Alerting on parameters that fall below a low-frequency threshold can uncover novel or subtle lateral movement techniques.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FREQUENCY_COUNT all command_line_parameters in deployment_scripts | WHERE parameter_count < low_frequency_threshold
- question: Has a machine learning model detected an anomalous command-line sequence in a deployment job script?
  context: This question uses a sequence-to-sequence model to learn the normal structure and order of commands in legitimate deployment scripts. Malicious commands are often ad-hoc and do not follow these normal patterns. The model can flag any command line that it finds 'surprising' or difficult to reconstruct, indicating a deviation from normal syntax that could be malicious.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: TRAIN LSTM_autoencoder on legitimate_command_sequences | FEED new_command_line | WHERE reconstruction_error > threshold
- question: Was a software deployment job initiated from a source IP that is not on the allow-list or is associated with a recent security alert?
  context: This question enforces strict network-level controls on deployment initiation. By maintaining a strict allow-list of approved administrative subnets and VPNs, any deployment job originating from an IP outside this list can be treated as a critical incident. This is a high-fidelity method for detecting remote attackers or internal actors operating from unauthorized systems.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Zeek conn.log
  - SCCM/Intune Management Servers, Administrative Workstations, VPN Concentrators, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs | EXTRACT source_ip | WHERE source_ip NOT IN admin_ip_allow_list OR source_ip IN active_incident_ips
- question: Was a deployment initiated by a user from a statistically improbable geographic location or IP subnet?
  context: This question aims to detect session hijacking by baselining the typical source locations for each administrator. By analyzing logon events, we can determine a user's normal IP subnets and geographic locations. A deployment that follows a login from a statistically rare location (e.g., a foreign country) is a strong indicator that the user's session has been compromised.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Zeek conn.log
  - SCCM/Intune Management Servers, Administrative Workstations, VPN Concentrators, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: BASELINE admin_source_ips from logon_events | CALCULATE rarity of new_login_ip | IF deployment follows login from rare_ip THEN ALERT
- question: Has an unsupervised learning model flagged an administrator's session as anomalous?
  context: This question uses an autoencoder to learn what a 'normal' administrator session looks like across multiple dimensions (source IP, time of day, actions taken). A compromised session, such as one initiated from a rare location followed by a sensitive software deployment, will not conform to the normal pattern and will have a high reconstruction error, flagging it as an anomaly.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Zeek conn.log
  - SCCM/Intune Management Servers, Administrative Workstations, VPN Concentrators, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: TRAIN autoencoder on multi-dimensional_session_data | FEED new_session_data | WHERE reconstruction_error > threshold
- question: Has a single deployment job targeted a small, cross-functional set of high-value assets?
  context: This question is designed to detect 'island-hopping,' a common lateral movement pattern. Adversaries often target a small, selective group of critical, but functionally different, assets (e.g., a Domain Controller and a PCI Server). A rule that alerts on small deployment jobs targeting disparate, high-value AD groups can effectively detect this specific TTP.
  answer_sources:
  - Software deployment tool logs
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, Database Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SEARCH deployment_logs | WHERE target_count < 5 AND target_hosts IN multiple_high_value_ad_groups
- question: Has a deployment job been initiated with a target group size that is a statistical outlier?
  context: This question analyzes the size of target groups to find anomalies. Normal operations typically involve very large groups (for mass patching) or very small groups (for one-off fixes). A job targeting a mid-size group (e.g., 5-20 hosts) that occurs outside a normal change window is statistically unusual and could represent an attacker's attempt at staged lateral movement.
  answer_sources:
  - Software deployment tool logs
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, Database Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ANALYZE distribution of target_group_sizes | WHERE job_target_count is in a statistically_sparse_range AND occurs_outside_change_window
- question: Is a sequence of deployments following a high-reward path to critical assets as identified by a reinforcement learning model?
  context: This question proactively models potential attack paths. By using reinforcement learning, we can train an agent to identify the most likely sequences of host deployments an attacker would use to 'hop' towards critical assets. We can then monitor real deployment sequences and flag any that closely match these predicted high-risk paths.
  answer_sources:
  - Software deployment tool logs
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, Database Servers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL lateral_movement_paths with reinforcement_learning | MONITOR real_deployment_sequences | WHERE sequence matches high_reward_path
- question: Has an account attempted to deploy a package to an asset collection that is outside of its defined administrative role?
  context: This question enforces role-based access control by defining the expected scope for different administrative roles (e.g., Server Admins manage servers, Workstation Admins manage workstations). A policy can then be created to alert when an account from one role attempts to deploy software to a collection managed by another, which constitutes a clear privilege violation.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: DEFINE role_scopes (e.g., workstation_admin_role manages workstation_collection) | SEARCH deployment_logs | WHERE user_role != target_collection_scope
- question: Has a privileged account's deployment activity deviated significantly from its historical baseline across multiple metrics?
  context: This question seeks to detect compromised privileged accounts by building a detailed historical baseline of their activity, including package name entropy, target collections, and time-of-day. An alert is triggered only when an account's activity deviates from its norm across several metrics simultaneously, providing a high-confidence signal of anomalous behavior.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FOR each privileged_account | BASELINE activity (package_entropy, targets, time) | SCORE new_activity | WHERE deviation > 3_std_dev on multiple_metrics
- question: Has an administrator's deployment behavior deviated significantly from that of their peers?
  context: This question uses peer group analysis to spot anomalies. By clustering administrators with similar job functions and deployment behaviors, we can establish a norm for that group. When one administrator's actions fall significantly outside the behavior of their peers, it can indicate that their account is compromised and being used in a way that is inconsistent with their role.
  answer_sources:
  - Software deployment tool logs
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Active Directory Logs
  - SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER admins by deployment_behavior to form peer_groups | FOR each new_action | IF action is outside the centroid of user's_peer_group THEN ALERT