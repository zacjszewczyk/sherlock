name: T1104: Multi-Stage Channels
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: Has an adversary established a multi-stage command and control channel for persistent or interactive access? This playbook investigates this by searching for evidence of multi-stage C2 channels. Indicators include outbound connections to known malicious infrastructure, statistically rare network destinations, HTTP redirects to low-reputation domains, abrupt shifts in process network behavior, and automated execution of downloaded payloads that connect to new external addresses.
type: technique
related:
  - TA0011: Command And Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
  - none
questions:
  - question: Is there evidence of a process connecting to an external IP or domain present on a threat intelligence feed of C2 indicators?
    context: This question aims to detect initial C2 beacons by correlating outbound network connections with DNS queries and process execution data. A match against a known C2 threat intelligence feed provides a high-confidence signal that a host has been compromised and is attempting to establish a first-stage communication channel with an adversary.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Internet gateways and proxies
      - DNS resolvers
      - User endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH network_connections AND dns_queries | JOIN source_host, timestamp | LOOKUP destination_ip OR destination_domain IN c2_threat_intel_feed | WHERE match_found | JOIN process_creation_events ON source_host, timestamp | RETURN timestamp, source_host, source_process, destination_ip, destination_domain
  - question: Has a host connected to a statistically rare destination domain or ASN, suggesting a deviation from normal network behavior?
    context: This question focuses on identifying anomalous C2 connections that may not be on any threat list. By baselining normal outbound traffic for each host and the organization, it's possible to flag connections to destinations that are statistically unlikely. A connection to a domain and ASN that are both rarely visited is a strong indicator of suspicious activity that warrants investigation for potential C2.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Internet gateways and proxies
      - DNS resolvers
      - User endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR_EACH host | BASELINE destination_domains, destination_asns over 30d | FOR_EACH new_connection | IF (destination_domain_frequency < 1st_percentile AND destination_asn_frequency < 5th_percentile) | ALERT host, destination_domain, destination_asn
  - question: Can a machine learning model identify external connections that are likely C2 traffic based on DNS and TLS features?
    context: This question leverages a supervised machine learning model to proactively score and identify potential C2 connections. By training on features like domain entropy, certificate details, and TLS handshake parameters, the model can learn the subtle characteristics of algorithmically generated domains and malicious TLS implementations, allowing it to detect novel C2 infrastructure that other methods might miss.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Internet gateways and proxies
      - DNS resolvers
      - User endpoints
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR_EACH new_connection | EXTRACT features (domain_entropy, cert_age, ja3_hash, etc.) | PREDICT c2_probability with trained_model | IF probability > 0.85 | ALERT connection_details, score
  - question: Has an internal host been redirected to a known malicious, newly registered, or non-FQDN IP address destination?
    context: This question seeks to identify C2 hand-offs that use HTTP redirects. Adversaries use legitimate but compromised websites as first-stage redirectors. By tracking HTTP 3xx redirect responses and analyzing the subsequent connection's destination, an analyst can uncover attempts to pivot a connection to a second-stage, adversary-controlled server.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Internet gateways
      - transparent/explicit web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH http_logs FOR status_code=3xx | WITHIN 2s, SEARCH for new_connection from same_source_ip to redirect_location | IF new_destination in blocklist OR is_newly_registered OR is_ip_address | ALERT original_request, redirect_location
  - question: Is there evidence of an HTTP session with an unusually long redirect chain?
    context: This question is designed to find C2 channels that are obfuscated by multiple layers of redirection. While a single redirect is common, a long chain is not. By baselining the normal length of redirect chains across the enterprise, any session that significantly exceeds this baseline can be flagged as anomalous and potentially indicative of an adversary's attempt to hide their final C2 destination.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Internet gateways
      - transparent/explicit web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BASELINE http_redirect_chain_length | CALCULATE 99th_percentile_length | FOR_EACH http_session | IF chain_length > 99th_percentile_length | ALERT session_details, chain_length
  - question: Has a sequence analysis model detected an anomalous network session pattern indicative of a redirect-based C2 hand-off?
    context: This question uses an unsupervised machine learning model to identify abnormal sequences of network events within a session. A normal web request has a predictable pattern (DNS, TCP, HTTP). A redirect-based C2 hand-off introduces an anomaly into this sequence (e.g., DNS, TCP, HTTP GET, HTTP 302, new DNS, new TCP). The model can flag these unusual sequences for further review.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Internet gateways
      - transparent/explicit web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL network_event_sequences with LSTM_Autoencoder | FOR_EACH new_session | IF model_reconstruction_error > threshold | ALERT session_details, anomalous_sequence
  - question: Has a long-running process abruptly changed its network communication pattern to a new, unprofiled destination or fingerprint?
    context: This question seeks to identify a C2 stager that, after an initial connection, receives instructions to connect to a second-stage C2 server. This is observed as a single process that suddenly changes its network behavior (e.g., new destination port, protocol, ASN, or TLS fingerprint). Alerting on this shift, especially when the new behavior is unknown, can reveal the C2 pivot.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - User endpoints
      - Domain Controllers
      - Critical application servers
      - Internet gateways and proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR_EACH process | TRACK initial_connection_details (port, proto, asn) | IF same_process makes new_connection where (port, proto, asn) are all different AND new_ja3_hash is not in known_good_list | ALERT process_details, initial_connection, new_connection
  - question: Is a process exhibiting a statistically significant deviation from its own historical network behavior baseline?
    context: This question uses anomaly detection to find a process whose network behavior has fundamentally changed. By creating a multi-dimensional baseline for each process (e.g., bytes sent, port/IP entropy), a significant deviation, measured by Mahalanobis distance, can indicate a state change, such as a stager receiving a new payload or C2 instructions, prompting it to behave differently.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - User endpoints
      - Domain Controllers
      - Critical application servers
      - Internet gateways and proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR_EACH process | CREATE historical_network_behavior_vector_baseline | IN 5min_window, calculate current_behavior_vector | CALCULATE Mahalanobis_distance(current, baseline) | IF distance > 3_std_dev | ALERT process, distance_score
  - question: Has an online change point detection algorithm identified an abrupt shift in a process's network communication time series data?
    context: This question applies time series analysis to a stream of a process's network metadata. An abrupt change in the statistical properties of this data stream (a 'change point') can signal a C2 stage transition. This method can detect subtle shifts in real-time that might be missed by window-based baselining techniques, providing immediate alerts on behavioral changes.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Windows Event ID 5156
      - User endpoints
      - Domain Controllers
      - Critical application servers
      - Internet gateways and proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR_EACH process | STREAM network_metadata (bytes, port) as time_series | APPLY Bayesian_Online_Change_Point_Detection | IF change_point_detected | ALERT process, data_before_change, data_after_change
  - question: Did a newly created process, spawned from a process that just downloaded a file, immediately make a network connection to a different ASN than the download source?
    context: This question looks for the classic "downloader/stager" pattern. A first-stage payload is downloaded, and it then executes a second-stage payload which calls out to a different C2 server. Correlating a file download, subsequent process creation, and an immediate outbound connection from the new process to a different part of the internet is a strong indicator of this multi-stage activity.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - User endpoints
      - Internet gateways
      - Egress web filters
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRIGGER on file_download (e.g., .exe) | WITHIN 60s, LOOK for process_creation where parent_process is download_process | LOOK for outbound_connection from new_process | IF connection_destination_ASN != download_source_ASN | ALERT all_events
  - question: Was a file download followed by an abnormally fast process execution and outbound beacon, suggesting automated malware execution?
    context: This question aims to distinguish between user-initiated execution and automated malware execution. A user typically takes several seconds to find and run a downloaded file. Malware, however, will often execute its next stage almost instantaneously. A very short time delta between a file download and a subsequent outbound connection from a new process is highly suspicious.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - User endpoints
      - Internet gateways
      - Egress web filters
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BASELINE time_delta between user_file_download and user_process_execution | FOR_EACH file_download | MEASURE time_delta to next_outbound_beacon from new_process | IF time_delta < 1st_percentile (e.g., < 1 sec) | ALERT download_event, process_event, beacon_event
  - question: Can a graph-based analysis detect a subgraph representing a multi-stage download and execution sequence?
    context: This question models system activity as a graph (nodes=entities, edges=actions) to identify complex malicious behaviors. A Graph Neural Network (GNN) can be trained to recognize the specific pattern of a multi-stage attack: an external IP connects to a process, which writes a file, which creates a new process, which connects to a different external IP. Detecting this subgraph provides a high-fidelity alert for the entire attack chain.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - User endpoints
      - Internet gateways
      - Egress web filters
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BUILD real-time_activity_graph (nodes: processes, files, IPs; edges: connects, writes, creates) | APPLY trained_GNN_to_identify_malicious_subgraphs | IF subgraph_pattern [IP_A]->[Proc_A]->[File_X]->[Proc_B]->[IP_B] is found AND IP_A != IP_B | ALERT subgraph_details
  - question: Is a single process making a high number of rapid, failed connection attempts to many unique external IPs?
    context: This question targets a common C2 behavior where malware cycles through a list of potential C2 servers, trying to find one that is online. This manifests as a single process generating a large number of connection attempts to unique IPs in a short time, with a high failure rate. This 'C2 cycling' is a strong indicator of an infected host trying to phone home.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 5157
      - User endpoints
      - Egress firewalls
      - Internet gateways and proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR_EACH process | IN 60s_window, COUNT unique_destination_ips and failed_connections | IF unique_ips > 15 AND failure_ratio > 0.75 | ALERT process, ip_count, failure_ratio
  - question: Does a process exhibit unusually high entropy in its destination IP addresses compared to legitimate applications?
    context: This question provides another way to detect C2 list cycling. Legitimate applications usually connect to a relatively stable and predictable set of IPs. Malware cycling through a long, often random-looking list of C2 domains/IPs will have a very high entropy in its destination addresses. Comparing a process's destination IP entropy against a baseline for legitimate software can quickly surface this anomalous behavior.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 5157
      - User endpoints
      - Egress firewalls
      - Internet gateways and proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BASELINE destination_ip_entropy for legitimate_processes | FOR_EACH process | IN 5min_window, CALCULATE shannon_entropy of destination_ips | IF entropy > 3_std_dev_above_baseline | ALERT process, entropy_score
  - question: Has a clustering algorithm identified a small, sparse cluster of network connections indicative of C2 probing?
    context: This question uses unsupervised clustering (like DBSCAN) to separate normal, high-volume network traffic from anomalous, low-volume activity. Normal traffic will form large, dense clusters. C2 probing or cycling behavior, characterized by a single process making short-lived connections to geographically or ASN-diverse destinations, will appear as 'noise' or a small, sparse cluster, making it easy to isolate for investigation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 5157
      - User endpoints
      - Egress firewalls
      - Internet gateways and proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: APPLY DBSCAN to network_connections with features (process, dest_country, dest_asn, duration) | ISOLATE noise_points or small_clusters | IF cluster_properties match C2_probing_profile | ALERT cluster_members