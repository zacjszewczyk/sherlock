name: T1556.008: Network Provider DLL
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook focuses on detecting the use of Network Provider DLLs for persistence, defense evasion, and credential access (MITRE ATT&CK Technique T1556.008). It provides investigative questions and queries to identify malicious DLLs by checking against threat intelligence, analyzing statistical rarity, monitoring for unsigned or typosquatted DLLs, and detecting anomalous process behaviors. The goal is to uncover adversaries who have implanted a malicious DLL in the network provider chain to intercept credentials or maintain a foothold on compromised systems, including critical assets like Domain Controllers and Authentication Servers.
type: technique
related:
  - TA0003: Persistence
  - TA0005: Defense Evasion
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a DLL registered as a network provider been identified as known malware by a threat intelligence hash blocklist?
    context: Adversaries may use known malware or tools that can be identified by their file hash. This check correlates the registration of a network provider DLL with its creation on disk, calculates its hash, and compares it against a blocklist. A match is a high-fidelity indicator of compromise, suggesting the adversary has deployed a known malicious implant for persistence.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Sysmon Event ID 11
      - Domain Controllers
      - Authentication Servers (e.g., ADFS, RADIUS)
      - Critical Workstations (e.g., administrator jump boxes)
      - Enterprise Certificate Authority
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for Registry Set events for key 'HKLM\\...\\NetworkProvider\\Order'
          EXTRACT provider DLL path
          JOIN with File Create events matching the DLL path
          CALCULATE SHA256 hash of the created file
          COMPARE hash against threat intelligence blocklist
          ALERT on match
  - question: Is a registered network provider DLL statistically rare across the enterprise based on its file hash?
    context: Unlike legitimate software, custom or targeted malware implants will likely exist on a very small number of systems. By analyzing the prevalence of each network provider DLL's hash across all endpoints, we can identify statistical outliers. A DLL hash that is extremely rare is a strong signal that it may be a malicious implant and warrants investigation.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Sysmon Event ID 11
      - Domain Controllers
      - Authentication Servers (e.g., ADFS, RADIUS)
      - Critical Workstations (e.g., administrator jump boxes)
      - Enterprise Certificate Authority
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GATHER all network provider DLLs from registry events
          CALCULATE hash for each DLL
          STACK COUNT hashes across all endpoints
          CALCULATE prevalence for each hash
          FLAG hashes with prevalence < 0.1% for investigation
  - question: Does a machine learning model classify a network provider DLL as malicious based on its features?
    context: A supervised machine learning model can be trained to recognize the characteristics of malicious DLLs, such as file properties (size, entropy), signature status, and hash prevalence. This approach automates the detection of suspicious network provider DLLs that may not be caught by signature-based or simple statistical methods.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Sysmon Event ID 11
      - Domain Controllers
      - Authentication Servers (e.g., ADFS, RADIUS)
      - Critical Workstations (e.g., administrator jump boxes)
      - Enterprise Certificate Authority
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new network provider DLL observed:
            EXTRACT features (file size, entropy, signature status, hash prevalence)
            INPUT features into trained classification model (e.g., Random Forest)
            ALERT if model output score exceeds maliciousness threshold
  - question: Has a provider name been added to the NetworkProvider order that is not on the established allowlist?
    context: The 'NetworkProvider\Order' registry key contains a list of legitimate provider names. Adversaries may add a new, malicious provider to this list. Monitoring this key and comparing any new entries against a pre-defined allowlist of known-good provider names is a direct and effective way to detect this specific persistence technique.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers (e.g., ADFS, RADIUS)
      - Critical Workstations (e.g., administrator jump boxes)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR registry key 'HKLM\\...\\NetworkProvider\\Order' for modifications
          ON modification, parse the list of provider names
          COMPARE each name against an allowlist ('LanmanWorkstation', 'RDPNP', etc.)
          ALERT if any provider name is not on the allowlist
  - question: Is a provider name in the NetworkProvider order statistically rare across the enterprise?
    context: Legitimate network provider names are generally consistent across an enterprise. A custom malicious provider will likely have a name that is unique or present on only a very small number of machines. By calculating the frequency of each provider name, we can identify rare names that are statistical anomalies and likely malicious.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers (e.g., ADFS, RADIUS)
      - Critical Workstations (e.g., administrator jump boxes)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GATHER all provider names from 'NetworkProvider\\Order' key across all endpoints
          CALCULATE frequency of each provider name
          FLAG names in the lowest frequency percentile (e.g., < 1st percentile) for review
  - question: Does an anomaly detection model flag a change to the NetworkProvider order as suspicious?
    context: An anomaly detection model, such as an autoencoder, can learn the normal structure and combination of provider names in the 'NetworkProvider\Order' key. When a modification occurs, the model can assess if the new list of names is abnormal. A high reconstruction error from the model indicates a deviation from the norm, such as the injection of a malicious provider name, and should be investigated.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers (e.g., ADFS, RADIUS)
      - Critical Workstations (e.g., administrator jump boxes)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT sequence of provider names from 'NetworkProvider\\Order' into a trained autoencoder model
          CALCULATE reconstruction error
          ALERT if error is high, indicating an anomalous modification
  - question: Is a registered network provider DLL being loaded from a non-standard or user-writable path?
    context: Legitimate network provider DLLs are almost always located in protected system directories like 'C:\Windows\System32\'. An adversary may place their malicious DLL in a less-conspicuous, user-writable location like '%APPDATA%' or 'C:\ProgramData\'. Alerting when a network provider DLL is loaded from outside an allowlist of standard paths is a strong indicator of compromise.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 13
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          IDENTIFY network provider DLLs from registry events
          CORRELATE with Image Load events for those DLLs
          CHECK if 'ImageLoaded' path is outside 'C:\\Windows\\System32\\'
          ALERT if path is non-standard, especially if user-writable
  - question: Is the file path of a registered network provider DLL statistically rare across the enterprise?
    context: While some legitimate third-party software might install network providers in non-standard paths, these paths are typically consistent for that software. A malicious DLL might be placed in a unique or randomized path. By baselining all file paths for network provider DLLs, we can identify statistically rare paths that are outliers and may point to a malicious file.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 13
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GATHER all file paths for loaded network provider DLLs
          CALCULATE frequency of each path across the enterprise
          FLAG paths that are statistical outliers (e.g., low prevalence, high string entropy)
  - question: Does a machine learning model detect an anomalous sequence involving a user logon followed by a process loading a rare network provider DLL?
    context: Adversaries often configure their persistence mechanisms to execute upon user logon. A sequence analysis model can learn the normal chain of events that occur after logon. An anomalous sequence, such as a process loading a newly registered or rarely seen network provider DLL shortly after a logon event, would be flagged by the model as a strong indicator of a persistence mechanism being triggered.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 13
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a sequence model (e.g., LSTM) on event logs (logon, registry, image load)
          FEED new event sequences into the model
          ALERT on sequences flagged as anomalous, such as logon -> load rare provider DLL
  - question: Is a registered network provider DLL unsigned, or is its signature invalid or from an untrusted publisher?
    context: Legitimate system DLLs are digitally signed by trusted publishers like Microsoft. Adversaries may use unsigned DLLs or DLLs signed with a self-signed or untrusted certificate. Checking the signature status of any newly registered network provider DLL is a critical defense evasion check. An unsigned, invalidly signed, or untrusted-publisher-signed DLL is highly suspicious.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - Critical Workstations
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON new network provider DLL detection:
            QUERY Image Load event for the DLL
            CHECK 'SignatureStatus' and 'Signature' fields
            ALERT if status is 'Unsigned'/'Invalid' or publisher is not on allowlist
  - question: Is the publisher of a registered network provider DLL's digital signature statistically rare across the environment?
    context: While a malicious DLL might be signed, the adversary may use a newly created or compromised code-signing certificate. The publisher of such a certificate would be extremely rare compared to common publishers like Microsoft or other major software vendors. Identifying network provider DLLs signed by statistically rare publishers can help uncover malicious activity.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - Critical Workstations
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PROFILE all digital signature publishers for network provider DLLs
          CALCULATE prevalence of each publisher
          ALERT on publishers in the lowest percentile (e.g., < 1st percentile)
  - question: Does a machine learning model classify a network provider DLL's digital signature as suspicious?
    context: A machine learning model can be trained on features of digital signatures, such as the publisher's name, the age of the certificate, and the issuing authority. This allows the model to learn the difference between common, legitimate publishers and suspicious, rarely seen ones, providing a risk score for newly observed DLLs that goes beyond simple allow/block lists.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - Critical Workstations
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new network provider DLL:
            EXTRACT signature features (publisher, cert age, authority)
            INPUT features into trained classification model
            FLAG DLLs with a high risk score for investigation
  - question: Does a new provider name in the NetworkProvider order match a known typosquatted name?
    context: To blend in, adversaries may use a provider name that is a misspelling of a legitimate one (e.g., 'LanmanWokstation' instead of 'LanmanWorkstation'). This is a typosquatting attack. This check compares new provider names against a blocklist of known typosquatted names derived from threat intelligence, providing a quick way to detect this specific evasion technique.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON modification of 'NetworkProvider\\Order' key:
            EXTRACT new provider name
            COMPARE name against a blocklist of known typosquatted names
            ALERT on match
  - question: Does a new provider name have a low Levenshtein distance to a legitimate provider name, suggesting typosquatting?
    context: If a blocklist of typosquatted names is unavailable, we can dynamically detect potential typosquatting. By calculating the Levenshtein distance (the number of single-character edits) between a new provider name and a list of legitimate names, we can find close misspellings. A small distance (e.g., 1 or 2) is a strong indicator of an attempt to masquerade as a legitimate provider.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new provider name not on the allowlist:
            CALCULATE Levenshtein distance to all names on the allowlist
            ALERT if distance is 1 or 2
  - question: Does a natural language processing model flag a new provider name as anomalous or algorithmically generated?
    context: Adversaries may use randomly generated strings for their provider names. A character-level NLP model trained on legitimate software names can learn what "normal" names look like. When presented with a new provider name, a high perplexity (low probability) score from the model suggests the name is anomalous or machine-generated, and thus suspicious.
    answer_sources:
      - Windows Event ID 4657
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT new provider name into a trained character-level NLP model
          CALCULATE perplexity score
          ALERT if score is high, indicating the name is unlikely/anomalous
  - question: Does a registered network provider DLL have high file entropy, suggesting it is packed or encrypted?
    context: To evade signature-based detection, adversaries often pack or encrypt their malware. This process increases the randomness, or entropy, of the file's contents. A typical un-packed executable has an entropy value around 6.0, while a value greater than 7.2 strongly indicates packing. Calculating the Shannon entropy of a new network provider DLL and alerting on a high value is a classic method for detecting obfuscated malware.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON detection of a new network provider DLL file:
            CALCULATE Shannon entropy of the file
            ALERT if entropy > 7.2
  - question: Is the file entropy of a registered network provider DLL a statistical outlier compared to the baseline of legitimate system files?
    context: Instead of a fixed threshold, we can establish a baseline entropy distribution from all legitimate DLLs in 'C:\Windows\System32'. The entropy of a new network provider DLL can then be compared to this baseline. A value that is a statistical outlier (e.g., more than 3 standard deviations above the mean) is highly suspect, even if it doesn't cross a hard threshold like 7.2.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE entropy for all DLLs in 'C:\\Windows\\System32' to create a baseline distribution (mean, std dev)
          FOR each new network provider DLL, calculate its entropy
          ALERT if the DLL's entropy is > 3 standard deviations above the baseline mean
  - question: Does a one-class SVM model flag a new network provider DLL as an anomaly based on features like entropy and file size?
    context: A one-class Support Vector Machine (SVM) can be trained exclusively on data from known-good DLLs, learning a boundary that encompasses normal behavior. When a new network provider DLL is observed, its features (entropy, size, imports, etc.) are fed to the model. If the DLL falls outside the learned boundary, it is flagged as an anomaly, indicating it does not resemble a legitimate file and may be packed or obfuscated.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a one-class SVM on features from known-good DLLs
          EXTRACT features (entropy, size, etc.) from a new network provider DLL
          INPUT features into the model
          ALERT if the model classifies the DLL as an anomaly/outlier
  - question: Has the 'mpnotify.exe' process initiated an outbound network connection or written to a file?
    context: 'mpnotify.exe' is a legitimate Windows process that should never initiate outbound network connections or write to files. This behavior is inherently anomalous and is a known indicator of compromise associated with this technique, where a malicious provider DLL loaded by the system causes 'mpnotify.exe' to act as a proxy for malicious activity like data exfiltration. Any such activity is a high-severity alert.
    answer_sources:
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CREATE alert to trigger on any event where:
            (ProcessName = 'mpnotify.exe' AND EventType = 'File Creation')
            OR
            (ProcessName = 'mpnotify.exe' AND EventType = 'Outbound Network Connection')
  - question: Are there any hosts where 'mpnotify.exe' has been observed making network connections or writing files?
    context: The expected baseline for network or file write activity from 'mpnotify.exe' is zero across the entire enterprise. A simple statistical check is to periodically query for any host that has a count greater than zero for these events. Any machine that appears on this list is a high-confidence statistical anomaly and requires immediate investigation for a potential compromise.
    answer_sources:
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
      - Network Egress Points
    range: last 24 hours
    queries:
      - technology: pseudocode
        query: |
          PERIODICALLY COUNT distinct hosts where 'mpnotify.exe' has network or file write events
          THE expected count is 0
          ANY host with a count > 0 is a high-confidence anomaly
  - question: Does an unsupervised model flag network or file activity from 'mpnotify.exe' as an anomaly?
    context: An unsupervised machine learning model, such as an Isolation Forest, learns normal process behaviors across the environment. Since 'mpnotify.exe' has a very narrow and predictable set of legitimate behaviors (none of which include network or file I/O), any deviation will be easily and immediately flagged by the model as a top-scoring anomaly, providing a robust and automated detection method.
    answer_sources:
      - Sysmon Event ID 3
      - Sysmon Event ID 11
      - Zeek conn.log
      - Domain Controllers
      - Authentication Servers
      - All Windows Endpoints
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INCLUDE process behaviors in an unsupervised anomaly detection model
          THE model will learn that 'mpnotify.exe' has no network/file activity
          ANY instance of such activity will be flagged as a high-scoring anomaly
  - question: Has a credential-handling process (e.g., 'lsass.exe') that loaded a suspicious DLL created a file in a temporary directory?
    context: If an adversary successfully injects a malicious DLL into a process like 'lsass.exe', they can use it to dump credentials. A common next step is to write those credentials to a temporary file for later exfiltration. This query looks for the specific combination of a credential-handling process loading a suspicious DLL and then creating a file in a staging directory, which is a strong indicator of credential harvesting.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 7
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Servers
      - User Workstations
      - File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE Image Load of suspicious DLL by 'lsass.exe' or 'winlogon.exe'
          WITH subsequent File Create events by the same process
          ALERT if file is created in a temp/public directory (e.g., C:\\Users\\Public)
  - question: Are there any instances of credential-handling processes like 'lsass.exe' or 'winlogon.exe' writing files?
    context: Core credential-handling processes like 'lsass.exe' and 'winlogon.exe' should almost never write files during normal operation. Any file creation event from these processes is, by itself, a significant statistical anomaly. Monitoring for this behavior provides a high-confidence, low-noise signal that the process has been compromised and is being used to dump credentials.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 7
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Servers
      - User Workstations
      - File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for any File Create events (Sysmon Event ID 11)
          WHERE ProcessName is 'lsass.exe' or 'winlogon.exe'
          ANY result is a high-confidence anomaly
  - question: Does a sequence analysis model detect an anomalous sequence where 'lsass.exe' loads an unknown DLL and then writes a file?
    context: A sequence analysis model can learn the entire lifecycle of normal user sessions. An attack sequence, such as a user logon, followed by 'lsass.exe' loading a previously unseen DLL, followed by 'lsass.exe' writing a file to disk, is a significant deviation from normal behavior. The model would flag this specific, ordered chain of events as highly anomalous, indicating credential theft.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 7
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Servers
      - User Workstations
      - File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN sequence model on logon, image load, and file create events
          FLAG anomalous sequences such as:
          Logon -> lsass.exe loads unknown DLL -> lsass.exe creates file
  - question: Has a process that loaded a suspicious network provider DLL connected to a destination on a threat intelligence blocklist?
    context: Once credentials are stolen, they must be exfiltrated. This often involves connecting to a known command-and-control (C2) server or a credential drop site. This query identifies processes that have already been tainted by loading a suspicious DLL and then checks if they make outbound connections to destinations found on threat intelligence feeds. A match is a strong indicator of active data exfiltration.
    answer_sources:
      - Sysmon Event ID 3
      - Sysmon Event ID 7
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise DNS servers
      - Network Egress Points
      - Domain Controllers
      - Authentication Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          IDENTIFY processes that loaded a suspicious network provider DLL
          MONITOR network connections from these processes
          COMPARE destination IP/domain against threat intelligence feeds
          ALERT on match
  - question: Has a process that loaded a suspicious network provider DLL connected to a statistically rare or low-reputation destination?
    context: Adversaries may use new or custom C2 infrastructure not yet present in threat intelligence feeds. We can hunt for this by identifying rare destinations. For a process tainted by a suspicious DLL, any outbound connection to a destination IP or domain that is rarely visited by anyone in the enterprise, or that has a poor reputation score, is highly suspicious and could represent an exfiltration channel.
    answer_sources:
      - Sysmon Event ID 3
      - Sysmon Event ID 7
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise DNS servers
      - Network Egress Points
      - Domain Controllers
      - Authentication Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR network connections from suspicious processes:
            ANALYZE destination IP/domain rarity across the enterprise
            ENRICH with external reputation data
            FLAG connections to rare or low-reputation destinations
  - question: Has a time-series model detected an anomalous spike in outbound network traffic from a credential-handling process after a user logon?
    context: The exfiltration of captured credentials can manifest as a sudden, abnormal burst of outbound network traffic from a compromised process like 'winlogon.exe' or 'lsass.exe'. A time-series anomaly detection model can baseline the normal network behavior for these processes and will flag a sharp, uncharacteristic spike in outbound data volume, especially if it occurs shortly after a logon event, as a potential exfiltration event.
    answer_sources:
      - Sysmon Event ID 3
      - Sysmon Event ID 7
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise DNS servers
      - Network Egress Points
      - Domain Controllers
      - Authentication Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL time-series of outbound data volume from 'lsass.exe'/'winlogon.exe'
          CORRELATE with user logon events
          ALERT on anomalous spikes in traffic volume that follow a logon