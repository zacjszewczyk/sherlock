name: T1556.008: Network Provider DLL
id: 4a2b1cde-8f90-4a5b-9c7d-3e2f1a0b9c8d
description: This playbook helps investigate whether an adversary is using a malicious network provider DLL for persistence, defense evasion, or credential access. It focuses on detecting DLLs that match known threats, appear anomalous compared to enterprise baselines, are loaded from non-standard locations, lack proper digital signatures, use typosquatting techniques, are packed or obfuscated, or are involved in anomalous process behavior related to credential handling processes like 'mpnotify.exe' and 'lsass.exe'.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Does a DLL recently registered as a network provider have a file hash that matches a known malicious indicator in our threat intelligence feeds?
  context: This question aims to identify known malicious DLLs being used for persistence. By registering a malicious DLL as a network provider, an adversary can ensure their code is loaded by critical processes. Comparing the file hash of the newly registered DLL against a threat intelligence blocklist is a high-confidence method for detecting this technique.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Sysmon Event ID 11
  - Domain Controllers
  - Authentication Servers (e.g., ADFS, RADIUS)
  - Critical Workstations (e.g., administrator jump boxes)
  - Enterprise Certificate Authority
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 13 where RegistryKey = 'HKLM\\...\\NetworkProvider\\Order'
      JOIN Sysmon EID 11 on DLLPath
      CALCULATE SHA256 of created file
      LOOKUP hash against Threat Intelligence Blocklist
      ALERT on match
- question: Is a registered network provider DLL statistically rare across the enterprise based on its file hash?
  context: This question seeks to identify potentially malicious network provider DLLs that are not part of known threat intelligence but are anomalous within the environment. Adversaries may use custom or polymorphic malware, resulting in hashes that are unique or present on very few systems. A low prevalence is a strong indicator of a suspicious file that warrants investigation.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Sysmon Event ID 11
  - Domain Controllers
  - Authentication Servers (e.g., ADFS, RADIUS)
  - Critical Workstations (e.g., administrator jump boxes)
  - Enterprise Certificate Authority
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 11 where FilePath is a Network Provider DLL
      STACK COUNT by FileHash across all endpoints
      CALCULATE prevalence percentage for each hash
      ALERT on hashes with prevalence < 0.1%
- question: Does a newly observed network provider DLL receive a high probability score of being malicious from a trained classification model?
  context: This question leverages machine learning to proactively identify malicious network provider DLLs based on a combination of features. A model trained on file properties, digital signature status, and hash prevalence can detect novel threats that may not be caught by signature-based or simple statistical methods, providing a more robust detection capability.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Sysmon Event ID 11
  - Domain Controllers
  - Authentication Servers (e.g., ADFS, RADIUS)
  - Critical Workstations (e.g., administrator jump boxes)
  - Enterprise Certificate Authority
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new Network Provider DLL observed
      EXTRACT features (file size, entropy, signature status, hash prevalence)
      INPUT features into trained Random Forest model
      ALERT if model output probability is > threshold (e.g., 0.9)
- question: Has a provider name been added to the Network Provider Order registry key that is not on an established allowlist of known-good providers?
  context: This question aims to detect persistence attempts where an adversary registers a new, unauthorized network provider. The list of legitimate providers is typically small and stable. Maintaining an explicit allowlist and alerting on any deviation is a simple and highly effective way to detect this technique.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers (e.g., ADFS, RADIUS)
  - Critical Workstations (e.g., administrator jump boxes)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR Sysmon EID 13 for modifications to 'HKLM\\...\\NetworkProvider\\Order'
      EXTRACT provider names from new registry value
      COMPARE each name against known-good allowlist
      ALERT if any name is not on the list
- question: Is a network provider name present in the registry that is statistically rare across the enterprise?
  context: This question helps identify suspicious network provider names that might not be on a blocklist but are highly unusual. A provider name seen on only one or a very small number of machines is a statistical anomaly and could indicate a custom tool or a targeted attack.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers (e.g., ADFS, RADIUS)
  - Critical Workstations (e.g., administrator jump boxes)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 13 for all values of 'HKLM\\...\\NetworkProvider\\Order' across all endpoints
      PARSE provider names from values
      CALCULATE frequency of each provider name
      ALERT on names in the lowest percentile of occurrence (e.g., < 1%)
- question: Has a modification to the Network Provider Order registry key been flagged as anomalous by a machine learning model?
  context: This question uses an anomaly detection model to identify subtle or complex changes to the network provider list that might be missed by other methods. The model learns the normal structure, order, and combination of providers, flagging any modification with a high reconstruction error as suspicious, which could indicate an unusual name or an abnormal ordering of providers.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers (e.g., ADFS, RADIUS)
  - Critical Workstations (e.g., administrator jump boxes)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON modification to 'HKLM\\...\\NetworkProvider\\Order'
      INPUT new provider string into trained autoencoder model
      CALCULATE reconstruction error
      ALERT if error exceeds learned baseline threshold
- question: Is a registered network provider DLL being loaded from a non-standard or user-writable file path?
  context: This question is designed to detect malicious DLLs placed in unusual locations to evade detection. Legitimate network provider DLLs are almost always located in protected system directories like C:\Windows\System32\. A DLL being loaded from a user-writable path like C:\Users\Public\ or %APPDATA% is a strong indicator of malicious activity.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 13
  - Windows Event ID 4624
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 7 (Image Load)
      FILTER where ImageLoaded is a known Network Provider DLL
      FILTER where ImageLoaded path is NOT 'C:\\Windows\\System32\\*'
      ALERT on any results, especially from user-writable directories
- question: Is a network provider DLL being loaded from a file path that is statistically rare across the enterprise?
  context: This question helps identify adversary attempts to hide malicious DLLs in uncommon locations that may not be explicitly blocked. By baselining all legitimate load paths for network provider DLLs, any path that is a statistical outlier can be flagged for investigation. This can uncover attempts to masquerade DLLs in obscure subdirectories.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 13
  - Windows Event ID 4624
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 7 for all loaded Network Provider DLLs
      GROUP by file path
      CALCULATE frequency of each path across the enterprise
      ALERT on paths with a frequency < 0.1% or high string entropy
- question: Has a machine learning model detected an anomalous sequence of events, such as a user logon followed by a process loading a new or rare network provider DLL?
  context: This question aims to detect the activation of a persistence mechanism. A trained model can learn the normal sequence of events that occur after a user logs on. A deviation, such as the loading of a rarely seen network provider DLL, can be flagged as a potential indicator of compromise, suggesting the malicious code is being executed as intended.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 13
  - Windows Event ID 4624
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      STREAM events (Logon, Registry Set, Image Load) into a sequence analysis model (LSTM)
      MODEL learns normal sequences
      ALERT when a new sequence has a high anomaly score
- question: Has a new network provider DLL been loaded that is unsigned, has an invalid signature, or is signed by an untrusted publisher?
  context: This question helps identify malicious DLLs attempting to evade defenses by lacking proper code signing. Legitimate system files are typically signed by trusted publishers like Microsoft. An unsigned DLL, or one signed by an unknown or disallowed publisher, is highly suspicious and warrants immediate investigation for defense evasion.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - Critical Workstations
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 7 for loaded Network Provider DLLs
      FILTER where SignatureStatus is 'Unsigned' or 'Invalid'
      OR where Signature is NOT IN trusted publisher allowlist
      ALERT on any match
- question: Is a network provider DLL signed by a publisher that is statistically rare across the environment?
  context: This question aims to uncover adversaries using self-signed certificates or newly created, malicious code-signing certificates. While a DLL may be technically signed, the publisher might be highly unusual. Identifying publishers that appear with very low frequency can help detect these attempts to appear legitimate.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - Critical Workstations
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 7 for all loaded Network Provider DLLs
      GROUP by Signature (publisher name)
      CALCULATE prevalence of each publisher across all systems
      ALERT on publishers in the lowest percentile (e.g., < 1%)
- question: Has a classification model assigned a high risk score to a network provider DLL based on its digital signature characteristics?
  context: This question uses machine learning to assess the trustworthiness of a DLL's digital signature. A model can learn the features of legitimate publishers (e.g., certificate age, issuing authority) and distinguish them from suspicious ones. This provides a more nuanced risk assessment than a simple allowlist, catching subtle indicators of malicious signing.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - Critical Workstations
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new Network Provider DLL observed
      EXTRACT signature features (publisher, cert age, issuer)
      INPUT features into trained Logistic Regression model
      ALERT if model output risk score is > threshold
- question: Has a new network provider name been added that is on a blocklist of known typosquatted names?
  context: This question is designed to catch a common defense evasion technique where adversaries use names that are slight misspellings of legitimate providers (e.g., 'LanmanWokstation'). Checking against a curated blocklist of such names, derived from threat intelligence, provides a direct way to detect this specific evasion tactic.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR Sysmon EID 13 for modifications to 'HKLM\\...\\NetworkProvider\\Order'
      EXTRACT new provider name
      LOOKUP name against typosquat blocklist
      ALERT on match
- question: Does a new network provider name have a very small Levenshtein distance to a known legitimate provider name, suggesting typosquatting?
  context: This question identifies potential typosquatting without relying on a pre-existing blocklist. By calculating the edit distance (Levenshtein) between a new provider name and all known-good names, it can flag suspicious names that are only one or two characters different from a legitimate one. This is a powerful heuristic for detecting novel evasion attempts.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new provider name detected
      FOR each name in legitimate provider allowlist
      CALCULATE Levenshtein distance between new name and allowlist name
      ALERT if distance is 1 or 2
- question: Does a new network provider name have a high perplexity score from an NLP model, indicating it is likely anomalous or algorithmically generated?
  context: This question leverages Natural Language Processing to detect provider names that do not resemble legitimate software names. A model trained on a large corpus of valid names can identify strings that are nonsensical or appear randomly generated (DGA-style), which are common characteristics of malware components.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new provider name detected
      INPUT name into character-level NLP model
      CALCULATE perplexity score
      ALERT if score is above established threshold for anomalous names
- question: Has a newly registered network provider DLL been observed with a file entropy value greater than 7.2, indicating it is likely packed or encrypted?
  context: This question helps detect defense evasion through obfuscation. High Shannon entropy in an executable file is a strong indicator that the file is packed or encrypted to hide its true contents from static analysis and antivirus scanners. A hard threshold provides a clear signal for suspicious files that require further analysis.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new Network Provider DLL file creation (Sysmon EID 11)
      CALCULATE Shannon entropy of the file
      ALERT if entropy > 7.2
- question: Is the file entropy of a new network provider DLL a statistical outlier compared to the baseline entropy of legitimate system DLLs?
  context: This question provides a more dynamic way to detect packed files by comparing them to a baseline established from the local environment. Instead of a fixed threshold, it identifies files whose entropy is significantly higher than that of typical, legitimate DLLs on the system (e.g., those in System32), making it adaptable to different environments.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE entropy baseline (mean, std dev) from all DLLs in C:\Windows\System32
      ON new Network Provider DLL file creation
      CALCULATE its entropy
      ALERT if entropy is > 3 standard deviations above the baseline mean
- question: Has a one-class SVM model, trained on features from known-good DLLs, flagged a new network provider DLL as an anomaly?
  context: This question uses machine learning to build a comprehensive profile of what a "normal" DLL looks like based on features like entropy, size, and import functions. Any new network provider DLL that deviates significantly from this learned profile is flagged as an anomaly, allowing for the detection of various obfuscation or packing techniques.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new Network Provider DLL observed
      EXTRACT features (entropy, file size, number of imports)
      INPUT features into trained one-class SVM model
      ALERT if model classifies the DLL as an anomaly/outlier
- question: Has the process 'mpnotify.exe' been observed making outbound network connections or writing files?
  context: This question targets a high-confidence indicator of compromise. The legitimate 'mpnotify.exe' process, which loads network provider DLLs, should never initiate network connections or write files. Any such activity is inherently anomalous and strongly suggests that a malicious network provider DLL has been loaded into its process space and is being used to exfiltrate data or write credentials to disk.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 11
  - Zeek conn.log
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  - Network Egress Points
  range: last 24 hours
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 3 (Network Connection) OR Sysmon EID 11 (File Create)
      FILTER ProcessName = 'mpnotify.exe'
      ALERT on any result
- question: Has any host shown a non-zero count of network or file write activity from 'mpnotify.exe' in the last 24 hours?
  context: This question uses a statistical approach to confirm the anomalous nature of 'mpnotify.exe' activity. The expected baseline for network connections or file writes from this process is zero across the entire enterprise. Therefore, any host reporting even a single instance of this behavior is a high-confidence statistical outlier that requires immediate investigation.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 11
  - Zeek conn.log
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  - Network Egress Points
  range: last 24 hours
  queries:
  - technology: pseudocode
    query: |
      SEARCH for network or file events from 'mpnotify.exe'
      COUNT events by hostname
      ALERT on any hostname with a count > 0
- question: Has an unsupervised machine learning model flagged the behavior of 'mpnotify.exe' as anomalous?
  context: This question leverages a model that learns the normal behavior of all processes on an endpoint. Since the legitimate 'mpnotify.exe' has a very narrow and predictable set of behaviors (e.g., no network connections, no file writes), any deviation would be immediately flagged by an anomaly detection model like an Isolation Forest as a top-scoring anomaly, indicating a likely compromise.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 11
  - Zeek conn.log
  - Domain Controllers
  - Authentication Servers
  - All Windows Endpoints
  - Network Egress Points
  range: last 24 hours
  queries:
  - technology: pseudocode
    query: |
      STREAM all process behaviors into an Isolation Forest model
      MODEL learns normal behaviors for each process
      ALERT if 'mpnotify.exe' is flagged with a high anomaly score
- question: Has a credential-handling process like 'lsass.exe' or 'winlogon.exe' written a file to a temporary or staging directory after loading a suspicious DLL?
  context: This question is designed to detect the dumping of credentials to a file for later exfiltration. Processes like 'lsass.exe' should not be writing files, especially to user-writable locations. This behavior, when correlated with the recent loading of a suspicious network provider DLL, is a strong indicator that the DLL has captured credentials from memory and is staging them for removal.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 7
  - Windows Event ID 4624
  - Domain Controllers
  - Authentication Servers
  - User Workstations
  - File Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 7 for suspicious DLL loaded by 'lsass.exe' or 'winlogon.exe'
      CORRELATE with subsequent Sysmon EID 11 events from the same process
      ALERT if file is created in a temp/public directory (e.g., C:\Users\Public\)
- question: Has a credential-handling process like 'lsass.exe' or 'winlogon.exe' been observed creating any files?
  context: This question uses the principle that certain system processes have extremely predictable behavior. Legitimate credential-handling processes like 'lsass.exe' should almost never create files. Therefore, any file creation event from these processes is a significant statistical anomaly and a high-confidence indicator of potential credential dumping.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 7
  - Windows Event ID 4624
  - Domain Controllers
  - Authentication Servers
  - User Workstations
  - File Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon EID 11 (File Create)
      FILTER ProcessName is 'lsass.exe' or 'winlogon.exe'
      ALERT on any result
- question: Has a machine learning model detected an anomalous sequence of events, such as a logon followed by 'lsass.exe' loading a new DLL and then creating a file?
  context: This question leverages a sequence analysis model to detect the entire chain of a credential access attack. The model learns the normal sequence of operations for critical processes after a logon. A sequence that includes loading an unknown DLL and then writing a file would be a significant deviation from the learned normal behavior, providing a strong signal of compromise.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 7
  - Windows Event ID 4624
  - Domain Controllers
  - Authentication Servers
  - User Workstations
  - File Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      STREAM events (Logon, Image Load, File Create) into a sequence analysis model (LSTM)
      MODEL learns normal sequences involving 'lsass.exe'
      ALERT on anomalous sequences (e.g., logon -> lsass loads unknown dll -> lsass creates file)
- question: Has a process that loaded a suspicious network provider DLL initiated a network connection to a destination on a threat intelligence blocklist?
  context: This question aims to detect the exfiltration phase of a credential access attack. After a malicious DLL is loaded and captures credentials, it must send them to an adversary-controlled server. By correlating the network connections from a compromised process with threat intelligence feeds of known C2 servers or drop sites, we can detect this exfiltration with high confidence.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 7
  - Zeek conn.log
  - Zeek dns.log
  - Enterprise DNS servers
  - Network Egress Points (e.g., firewalls, proxies)
  - Domain Controllers
  - Authentication Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      IDENTIFY processes that loaded a suspicious DLL
      MONITOR network connections (Sysmon EID 3) from these processes
      ENRICH destination IP/domain with Threat Intelligence
      ALERT on match to known C2/malicious destinations
- question: Is a process that loaded a suspicious network provider DLL making network connections to a statistically rare or low-reputation destination?
  context: This question helps detect connections to novel or unknown C2 infrastructure. By analyzing network logs, we can identify destinations (IPs, domains, ASNs) that are rarely contacted by anyone in the enterprise. A rare destination, especially one with a poor reputation score, is highly suspicious and could be an adversary's exfiltration point.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 7
  - Zeek conn.log
  - Zeek dns.log
  - Enterprise DNS servers
  - Network Egress Points (e.g., firewalls, proxies)
  - Domain Controllers
  - Authentication Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH network logs (Zeek) for connections from suspicious processes
      CALCULATE enterprise-wide frequency of destination IP/domain/ASN
      ENRICH with external reputation data
      ALERT on rare destinations with low reputation
- question: Has an anomalous spike in outbound network traffic from a credential-handling process been observed shortly after a user logon?
  context: This question uses time-series analysis to detect credential exfiltration based on data volume. The capture and exfiltration of credentials would likely result in a sudden, sharp increase in outbound data from a process like 'winlogon.exe' or 'lsass.exe'. An anomaly detection model can identify these spikes, which deviate from the normal, low-volume network baseline for these processes.
  answer_sources:
  - Sysmon Event ID 3
  - Sysmon Event ID 7
  - Zeek conn.log
  - Zeek dns.log
  - Enterprise DNS servers
  - Network Egress Points (e.g., firewalls, proxies)
  - Domain Controllers
  - Authentication Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR time-series of outbound bytes from 'lsass.exe', 'winlogon.exe'
      INPUT data into anomaly detection model
      CORRELATE anomalies with recent logon events (Windows EID 4624)
      ALERT if a spike in traffic occurs shortly after a logon