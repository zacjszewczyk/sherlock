name: T1569.002: Service Execution
id: a1b1c7d8-e9f0-4a1b-8c2d-3e4f5a6b7c8d
description: This playbook helps investigate whether an adversary has executed code by creating or modifying a Windows service. This involves detecting the installation of new services that match known-bad indicators (name, path, or hash), have randomly generated names, or are flagged by machine learning models. It also looks for the use of command-line tools (sc.exe, PowerShell) to create services pointing to non-standard or rare locations, and identifies anomalous command-line structures. The playbook also focuses on behavioral patterns, such as the rapid creation and deletion of services (characteristic of tools like PsExec), services spawning unusual child processes (like cmd.exe), and services being installed in user-writable directories instead of protected system locations.
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a newly installed service associated with a known malicious indicator?
    context: This question aims to identify the most direct evidence of malicious activity: a new service whose name, file path, or binary hash matches a known threat from intelligence feeds. A match provides a high-confidence signal that an adversary is attempting to establish persistence or execute code using a recognized malicious tool.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - All Windows endpoints and servers, particularly Domain Controllers and high-value asset servers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for Windows Event ID 7045 or 4697. EXTRACT service name, service file path. CALCULATE file hash. COMPARE name, path, and hash against threat intelligence database. ALERT on match.
  - question: Does a newly installed service have a randomly generated name?
    context: Adversaries often use randomly generated names for their services to evade simple signature-based detection and to make their artifacts unique per infection. This question uses Shannon entropy to measure the randomness of a service name. A high entropy score, when compared to a baseline of normal service names, suggests the name was not created by a human or legitimate software developer and is likely malicious.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - All Windows endpoints and servers, particularly Domain Controllers and high-value asset servers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for Windows Event ID 7045 or 4697. EXTRACT service name. CALCULATE Shannon entropy of the name. COMPARE entropy score against 98th percentile of historical baseline. ALERT if score exceeds threshold.
  - question: Can a machine learning model classify a new service installation as malicious based on its characteristics?
    context: This question leverages a machine learning model to perform a more sophisticated, multi-faceted analysis of a new service. By combining features like name entropy, path location, executable prevalence, and digital signature status, the model can identify suspicious services that might not trigger simpler, single-indicator rules. It provides a probabilistic assessment of risk for more nuanced detection.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - All Windows endpoints and servers, particularly Domain Controllers and high-value asset servers.
    range: last 90 days
    queries:
      - pseudocode: ON new service installation event, EXTRACT features (name entropy, path, hash prevalence, signature status). INPUT features into trained logistic regression model. ALERT if malicious confidence score > 0.9.
  - question: Is an adversary using command-line tools like sc.exe or PowerShell to create or modify a service to point to a suspicious location?
    context: This question focuses on detecting the act of malicious service creation via the command line. Adversaries frequently use built-in Windows utilities like 'sc.exe', 'net.exe', or PowerShell cmdlets ('New-Service') to install their malicious payloads. This query looks for the combination of these tools with arguments that specify a binary path in a non-standard or user-writable location, which is a strong indicator of abuse.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows endpoints and servers, especially administrative jump boxes and management servers where such commands are more likely to be run.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for process creation events (Event ID 4688) for 'sc.exe', 'powershell.exe', or 'net.exe'. PARSE command line for 'create', 'config', 'binPath=', 'New-Service', '-BinaryPathName'. REGEX match path against non-standard directories (e.g., C:\Users\, \\*). ALERT on match.
  - question: Is a service being configured to run from an unusually rare directory?
    context: Legitimate services are typically installed in common, predictable locations (like Program Files or System32). This question identifies outliers by baselining all directories that host service executables. If a service is created or modified to run from a directory that is statistically rare across the enterprise, it warrants investigation as adversaries often place payloads in obscure or temporary locations to avoid detection.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows endpoints and servers, especially administrative jump boxes and management servers where such commands are more likely to be run.
    range: last 90 days
    queries:
      - pseudocode: ON service modification command, PARSE binary path to get parent directory. QUERY historical data for frequency of this parent directory. ALERT if directory frequency is below the 5th percentile.
  - question: Does a service creation or modification command appear anomalous when compared to normal administrative activity?
    context: This question applies unsupervised machine learning to find 'weird' command-line activity without pre-defined rules. By clustering all service management commands based on their structure (arguments, length, paths), the system can learn what normal administrative commands look like. Any command that doesn't fit into a known 'normal' cluster is flagged as an outlier, potentially indicating novel or obfuscated adversary behavior.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows endpoints and servers, especially administrative jump boxes and management servers where such commands are more likely to be run.
    range: last 90 days
    queries:
      - pseudocode: VECTORIZE 'sc.exe' and 'powershell.exe' command-line features (argument count, keywords, length, path characteristics). APPLY DBSCAN clustering algorithm. INVESTIGATE commands identified as noise/outliers.
  - question: Has a service been created, started, and then quickly stopped or deleted, indicative of a remote administration tool like PsExec?
    context: This question looks for a specific behavioral pattern, the transient use of a service. Tools like PsExec work by installing a service on a remote host, starting it to execute a command, and then stopping and removing it. Correlating the create, start, and stop/delete events for the same service in a short timeframe (e.g., under 15 minutes) is a classic and effective way to detect this type of lateral movement.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 7036
      - Windows Event ID 4697
      - Centralized log aggregators (SIEM) capable of correlating events from all Windows hosts. All Windows servers, especially those within the same network segment, to detect lateral movement.
    range: last 90 days
    queries:
      - pseudocode: CORRELATE events by Hostname and Service Name. TRIGGER alert if sequence [Event 7045/4697 (Create)] -> [Event 7036 (Start)] -> [Event 7036 (Stop)] occurs within 15 minutes. INCREASE priority if service name matches 'PSEXESVC' or is random.
  - question: Does a new service have a statistically anomalous short lifespan compared to typical services?
    context: This question quantifies the 'transient service' concept. By calculating the lifespan of every service, we can establish a baseline of normal service behavior. Most legitimate services are designed to be long-running. A service with an extremely short lifespan (e.g., in the bottom 1st percentile) is a statistical anomaly highly suggestive of one-off execution, a common tactic for adversaries.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 7036
      - Windows Event ID 4697
      - Centralized log aggregators (SIEM) capable of correlating events from all Windows hosts. All Windows servers, especially those within the same network segment, to detect lateral movement.
    range: last 90 days
    queries:
      - pseudocode: FOR services with both create and stop events, CALCULATE time delta (lifespan). COMPARE lifespan to historical distribution of all service lifespans. ALERT if lifespan is a statistical outlier (e.g., < 1st percentile).
  - question: Is there a sudden spike in the number of short-lived services being installed on a single host?
    context: This question looks for a 'flurry' of transient service activity on a host. A single ephemeral service might be noteworthy, but a sudden increase in their frequency is a much stronger signal. It could indicate an adversary using a tool repeatedly for lateral movement or command execution. Time-series anomaly detection can automatically spot these unusual spikes against the host's normal activity baseline.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 7036
      - Windows Event ID 4697
      - Centralized log aggregators (SIEM) capable of correlating events from all Windows hosts. All Windows servers, especially those within the same network segment, to detect lateral movement.
    range: last 90 days
    queries:
      - pseudocode: FOR each host, create time series of ephemeral service count (lifespan < 15 min) per hour. APPLY time-series anomaly detection model (e.g., SARIMA). ALERT on statistically significant spikes.
  - question: Did a core Windows service process (services.exe, svchost.exe) spawn a suspicious child process like a command shell?
    context: This question targets a fundamental violation of expected behavior. Core service hosts like 'services.exe' and 'svchost.exe' have predictable and limited roles. They should not be spawning interactive shells ('cmd.exe', 'powershell.exe') or network reconnaissance tools ('whoami.exe'). Such an event is a very strong indicator of process injection or another form of compromise where an adversary is using the context of a trusted service to execute commands.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows endpoints and servers. Analysis requires process lineage data, typically collected via EDR or enhanced logging (like Sysmon) and aggregated in a SIEM/data lake.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for process creation events where parent process is 'services.exe' or 'svchost.exe'. ALERT if child process name is on a watchlist (e.g., 'cmd.exe', 'powershell.exe', 'net.exe').
  - question: Has a service process spawned a child process that is statistically rare or has never been seen before for that specific service?
    context: This question moves beyond a static watchlist to a dynamic, learned baseline of behavior. It acknowledges that some services might legitimately spawn other processes. By baselining all normal parent-child relationships, the system can flag any new or statistically rare relationship. This can detect an adversary using a less common utility or a custom tool that wouldn't be on a static watchlist.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows endpoints and servers. Analysis requires process lineage data, typically collected via EDR or enhanced logging (like Sysmon) and aggregated in a SIEM/data lake.
    range: last 90 days
    queries:
      - pseudocode: FOR each service parent process, maintain a baseline of child processes and their spawn frequencies. ON new process creation event, check if the parent-child relationship is new or if the frequency is rare (<1%). ALERT on positive findings.
  - question: Does a new process creation event involving a service represent a structurally anomalous link in the host's process graph?
    context: This question applies advanced graph analytics to detect sophisticated attacks. It models all process activity on a host as a complex graph. An anomaly detection model trained on this graph learns the normal structure and flow of process execution. An adversary compromising a service and using it to launch another process would create an anomalous 'edge' in this graph that deviates from the learned normal behavior, allowing for detection.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - All Windows endpoints and servers. Analysis requires process lineage data, typically collected via EDR or enhanced logging (like Sysmon) and aggregated in a SIEM/data lake.
    range: last 90 days
    queries:
      - pseudocode: MODEL process activity as a graph (nodes=processes, edges=parent-child). TRAIN graph-based anomaly detection model on baseline activity. SCORE new process creation events in real-time. ALERT on anomalous edges originating from service processes.
  - question: Is a new service being installed from a non-standard, user-writable directory like C:\Users or C:\Temp?
    context: This question focuses on a common adversary tactic, placing malware in locations where they have guaranteed write permissions and that are less scrutinized than system directories. Legitimate services should almost always be installed in protected locations like 'C:\Program Files' or 'C:\Windows\System32'. An executable path pointing to a user profile, temp directory, or other user-writable location is highly suspicious.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - All Windows Endpoints and Servers, particularly multi-user systems like Remote Desktop Session Hosts.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for Windows Event ID 7045 or 4697. PARSE 'Service File Name'. REGEX match the path against a list of unauthorized directories (e.g., 'C:\Users\', '\AppData\'). ALERT on match.
  - question: Is a new service being installed in a parent directory that is statistically rare for hosting services across the enterprise?
    context: This is a statistical approach to identifying suspicious service paths. Instead of a fixed list of 'bad' directories, it learns what is 'normal' for the entire organization. By creating a frequency distribution of all directories that contain service executables, it can flag a new service installed in a directory that is rarely or never used for this purpose, pointing to a potential outlier that needs investigation.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - All Windows Endpoints and Servers, particularly multi-user systems like Remote Desktop Session Hosts.
    range: last 90 days
    queries:
      - pseudocode: QUERY all service installation events. CREATE a frequency table of all parent directories for service executables. ON new service installation, check the frequency of its parent directory. ALERT if the directory is rare (e.g., bottom 5%) or previously unseen.
  - question: Can a machine learning model, based on path characteristics, predict if a new service installation is suspicious?
    context: This question uses a supervised machine learning model (a decision tree) to automate the risk assessment of a service's location. The model can learn complex rules by combining features like path depth, keywords in the path, writability, and historical prevalence. This provides a more robust and adaptable method for flagging suspicious service paths compared to static rules or simple frequency analysis.
    answer_sources:
      - Windows Event ID 7045
      - Windows Event ID 4697
      - All Windows Endpoints and Servers, particularly multi-user systems like Remote Desktop Session Hosts.
    range: last 90 days
    queries:
      - pseudocode: ON new service installation event, EXTRACT features from the service path (depth, keywords, writability, prevalence). INPUT features into trained decision tree model. ALERT if classified as suspicious.