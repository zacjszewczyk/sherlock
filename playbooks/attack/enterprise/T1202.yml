name: "T1202: Indirect Command Execution"
id: "a4b1c23d-4e56-4789-a0b1-c2d3e4f5a6b7"
description: "This playbook is designed to help analysts investigate whether an adversary has bypassed security restrictions using indirect command execution (T1202). This technique involves using legitimate, signed Windows utilities (such as forfiles.exe, pcalua.exe, scriptrunner.exe, and ssh.exe) to execute malicious commands or payloads, often to evade application control and security software. This playbook provides questions to help detect this activity by examining several key indicators: the spawning of a known malicious child process by a T1202 utility, the use of suspicious command-line arguments with these utilities, anomalous outbound network connections initiated by them, and unusual process execution chains involving these utilities."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Has a process associated with indirect command execution (e.g., forfiles.exe, pcalua.exe) spawned a child process whose hash is known to be malicious?"
    context: "This question uses a high-fidelity symbolic logic rule to detect when a utility associated with T1202 (like forfiles.exe) creates a child process whose file hash matches an entry in a threat intelligence feed. A positive match is a strong indicator that a known malicious payload is being executed via a legitimate proxy utility to bypass defenses."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers"
      - "Member Servers"
      - "User Workstations"
      - "Privileged Access Workstations (PAWs)"
      - "Application Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events WHERE (parent_process_name IN ('forfiles.exe', 'pcalua.exe', 'scriptrunner.exe', 'ssh.exe') AND child_process_hash IN threat_intelligence_feed)"
  - question: "Has a statistically rare parent-child process relationship involving an indirect command execution utility been observed?"
    context: "This question aims to detect unknown or novel threats by statistically analyzing process relationships. It involves baselining the frequency of all child processes spawned by T1202-related parent processes over 90 days. An alert is triggered for parent-child pairs that are exceptionally rare (e.g., in the bottom 5th percentile), especially if the child process name has high entropy, suggesting it may be a randomly named malware executable."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers"
      - "Member Servers"
      - "User Workstations"
      - "Privileged Access Workstations (PAWs)"
      - "Application Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each T1202_utility: CALCULATE frequency_distribution of child_processes over 90_days. ALERT if new_process_pair_frequency < 5th_percentile."
  - question: "Can a machine learning model identify a malicious process creation event originating from an indirect command execution utility?"
    context: "This question leverages a supervised machine learning model to provide a more nuanced and context-aware detection than simple rules. The model is trained on labeled historical data, using features like process names, command-line length, keyword counts, and execution directory, to learn the characteristics of malicious versus benign process creation events following indirect command execution."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers"
      - "Member Servers"
      - "User Workstations"
      - "Privileged Access Workstations (PAWs)"
      - "Application Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: PREDICT is_malicious from process_creation_event_features (parent_name, child_entropy, cmd_line_length, etc.) using trained_classification_model. ALERT if prediction is 'malicious' with high confidence."
  - question: "Has an indirect command execution utility (e.g., forfiles.exe, pcalua.exe) been run with command-line arguments matching known malicious patterns?"
    context: "This question focuses on identifying the misuse of T1202 utilities by searching for specific, known-malicious command-line patterns. Using regular expressions on process creation event data, this method can quickly spot documented abuse techniques, such as 'forfiles /c' or 'pcalua -a', providing a reliable, signature-based detection for common attacks."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers"
      - "Member Servers"
      - "User Workstations"
      - "Jump Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events WHERE command_line MATCHES REGEX ('forfiles\\.exe /p .* /c', 'pcalua\\.exe -a .*', etc.)"
  - question: "Has an indirect command execution utility been executed with an unusually long or complex command line compared to its historical baseline?"
    context: "This question seeks to identify anomalous command-line usage by establishing a statistical baseline. By profiling the normal length and argument count for T1202 utilities over a 30-day period, we can flag executions that exceed a high percentile (e.g., 95th or 99th) of this baseline. Such deviations often indicate an adversary is passing complex, obfuscated, or multi-stage commands through the utility."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers"
      - "Member Servers"
      - "User Workstations"
      - "Jump Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each T1202_utility: CALCULATE baseline of cmd_line_length and arg_count. ALERT if new_execution > 95th_percentile."
  - question: "Can a machine learning model identify anomalous command-line usage for an indirect command execution utility by clustering legitimate patterns?"
    context: "This question applies unsupervised machine learning to find novel attack patterns without relying on predefined signatures. By vectorizing command-line arguments (using TF-IDF) and clustering them (using DBSCAN), the model learns what constitutes 'normal' usage. Any command that does not fit into a legitimate cluster is flagged as an anomaly, providing a powerful way to detect previously unseen malicious techniques."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers"
      - "Member Servers"
      - "User Workstations"
      - "Jump Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: VECTORIZE T1202_utility command_lines with TF-IDF. CLUSTER vectors with DBSCAN. ALERT on any command_line classified as noise/outlier."
  - question: "Has a process associated with indirect command execution initiated a network connection to a known malicious IP address?"
    context: "This question aims to detect command-and-control (C2) or payload download activity. It involves monitoring for network connections (Sysmon Event ID 3) made by T1220-related utilities and enriching the destination IP address with threat intelligence. A connection to an IP on a C2 blocklist is a high-confidence indicator of malicious activity."
    answer_sources:
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Zeek ssl.log"
      - "Zeek notice.log"
      - "Network Egress Points (e.g., Firewalls, Proxies)"
      - "DNS Servers"
      - "Host-based firewalls"
      - "Host-level Network Telemetry on critical servers and workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH network_connection_events WHERE process_name IN ('forfiles.exe', 'pcalua.exe', etc.) AND destination_ip IN threat_intelligence_feed."
  - question: "Has an indirect command execution process made a network connection to a destination country or Autonomous System (AS) not previously associated with that host and process?"
    context: "This question detects anomalous network behavior by profiling geographic and network-level destinations. By maintaining a baseline of countries and ASNs that each host/process pair communicates with, the system can flag any connection from a T1202 utility to a 'first-seen' location. This can indicate communication with an unusual or newly established adversary infrastructure."
    answer_sources:
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Zeek ssl.log"
      - "Zeek notice.log"
      - "Network Egress Points (e.g., Firewalls, Proxies)"
      - "DNS Servers"
      - "Host-based firewalls"
      - "Host-level Network Telemetry on critical servers and workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each host/process_pair: MAINTAIN baseline of destination_countries and destination_ASNs. ALERT if T1202_utility connects to a never-before-seen country or ASN."
  - question: "Has the outbound network traffic volume from an indirect command execution process shown an anomalous spike indicative of unexpected data transfer?"
    context: "This question uses a time-series anomaly detection model to spot unusual data transfer activity. An LSTM autoencoder is trained on the normal outbound traffic volume patterns of T1202-related processes. If the actual traffic volume significantly deviates from the model's prediction (i.e., high reconstruction error), it is flagged as a temporal anomaly, which could represent data exfiltration or a large payload download."
    answer_sources:
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Zeek ssl.log"
      - "Zeek notice.log"
      - "Network Egress Points (e.g., Firewalls, Proxies)"
      - "DNS Servers"
      - "Host-based firewalls"
      - "Host-level Network Telemetry on critical servers and workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: MODEL time_series of outbound_bytes for each T1202_process using LSTM_autoencoder. ALERT if reconstruction_error exceeds dynamic_threshold."
  - question: "Has a known malicious process chain involving an indirect command execution utility, such as Word spawning forfiles.exe which then spawns cmd.exe, been observed?"
    context: "This question uses specific, high-fidelity rules to detect well-known malicious process execution chains. By monitoring parent-child process relationships, it can instantly flag sequences like an Office application spawning a T1202 utility, which in turn spawns a command shell. This is a classic pattern for attacks originating from malicious documents."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "User Workstations"
      - "Virtual Desktop Infrastructure (VDI)"
      - "Application Servers (e.g., Citrix, SharePoint)"
      - "Web Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events for chain: parent_process IN ('WINWORD.EXE', 'OUTLOOK.EXE') -> child_process IN ('forfiles.exe', etc.) -> grandchild_process IN ('cmd.exe', 'powershell.exe')."
  - question: "Has a statistically rare three-process execution chain involving an indirect command execution utility occurred?"
    context: "This question aims to find unusual execution flows by calculating the rarity of process chains. By creating a graph of all parent-child relationships, we can calculate the conditional probability of any given three-process chain (A -> B -> C). Chains with a very low probability score are flagged as anomalous, helping to uncover novel attack paths that don't match predefined rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "User Workstations"
      - "Virtual Desktop Infrastructure (VDI)"
      - "Application Servers (e.g., Citrix, SharePoint)"
      - "Web Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE path_rarity_score for all three-process chains (P(B|A) * P(C|B)). ALERT if score for a chain involving a T1202_utility is below a rarity_threshold."
  - question: "Can a Graph Neural Network model detect an anomalous process execution subgraph involving an indirect command execution utility?"
    context: "This question applies advanced machine learning to detect structurally anomalous process behavior. A Graph Neural Network (GNN) is trained to learn the typical structure of process subgraphs. It can then identify new process chains that are structurally different from all known benign patterns, flagging them as suspicious. This is a powerful method for detecting novel and complex execution flows."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "User Workstations"
      - "Virtual Desktop Infrastructure (VDI)"
      - "Application Servers (e.g., Citrix, SharePoint)"
      - "Web Servers"
    range: "last 90 days"
    queries:
      - "pseudocode: TRAIN a GNN model on subgraphs of benign process activity. FOR new process chains, generate subgraph_embedding. ALERT if cosine_distance to known_benign_embeddings is large."