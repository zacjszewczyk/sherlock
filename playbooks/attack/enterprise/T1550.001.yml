name: T1550.001: Application Access Token
id: e1f8e1a8-9b3c-4d5e-8f6a-0c7b9a2d3e4f
description: This playbook helps to identify if an adversary is evading defenses or performing lateral movement using stolen or forged application access tokens. It focuses on detecting anomalous API authentications, such as those from known malicious infrastructure, exhibiting impossible travel characteristics, or using rare user agents. The playbook also includes checks for the execution of token theft tools, unusual cloud identity service interactions (like spikes in token generation), and sensitive API actions inconsistent with a user's normal behavior. Furthermore, it aims to detect lateral movement by identifying new network communication patterns between internal resources, suspicious process creations following API calls, and unauthorized network logons to critical servers.
type: technique
related:
- TA0005: Defense Evasion
- TA0008: Lateral Movement
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there successful API authentications originating from known malicious IP addresses or using User-Agent strings associated with adversary tools?
  context: Adversaries often use compromised infrastructure or specific offensive security tools for their operations. Matching API call metadata (source IP, User-Agent) against high-confidence cyber threat intelligence (CTI) feeds is a direct way to identify known-bad activity associated with the use of stolen application tokens.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Threat Intelligence Feed
  - Internet gateway
  - Cloud provider network edge
  - VPN concentrators
  - Web Application Firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: JOIN api_logs ON (source_ip, user_agent) WITH cti_feed ON (indicator) WHERE match IS NOT NULL
- question: Are there successful API authentications using unusually rare User-Agent strings or originating from rare Autonomous System Numbers (ASNs)?
  context: Adversaries may use custom or uncommon tools and infrastructure, resulting in User-Agents and source ASNs that deviate from the organization's norm. Statistical analysis to identify User-Agents or ASNs with very low frequency can help flag these outliers as potentially malicious.
  answer_sources:
  - Zeek http.log
  - Threat Intelligence Feed
  - Internet gateway
  - Cloud provider network edge
  - VPN concentrators
  - Web Application Firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SELECT user_agent, source_asn FROM api_logs GROUP BY user_agent, source_asn HAVING frequency < 1% over 30 days
- question: Can machine learning models identify anomalous API authentications based on features like User-Agent, source IP/ASN, and requested URI?
  context: This question explores using unsupervised machine learning to build a baseline of normal API authentication behavior. The model can then score new events in real-time, flagging those that don't fit the established pattern as potential threats, even if they don't match known bad indicators.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Threat Intelligence Feed
  - Internet gateway
  - Cloud provider network edge
  - VPN concentrators
  - Web Application Firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PREDICT anomaly_score FROM api_authentication_features USING trained_model; ALERT IF score > threshold
- question: Is there evidence of token theft tools being executed, followed by suspicious outbound API calls?
  context: This question checks for the execution of tools designed to steal credentials and tokens (like Mimikatz or Rubeus) or access browser data stores. Correlating this on-host activity with subsequent outbound network connections from the same host can indicate that a newly stolen token is being actively used.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations
  - Developer endpoints
  - Critical application servers
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FIND process_creation with commandline matching 'token_theft_tool_signatures'; CORRELATE with subsequent outbound_api_call from same host within 10 minutes
- question: Are there any processes, like PowerShell, being executed with unusually complex or high-entropy command-line arguments, suggesting obfuscation?
  context: Adversaries often use obfuscation to hide their commands from simple signature-based detection. A sudden spike in the complexity (entropy) of command-line arguments for common utilities like PowerShell, especially when accessing user profiles, can be a strong indicator of malicious activity related to token theft.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations
  - Developer endpoints
  - Critical application servers
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE entropy of command_line for powershell.exe; ALERT IF entropy > (baseline_mean + 3 * baseline_stdev)
- question: Can a machine learning model classify process creation events as benign or suspicious based on features like parent process and command line characteristics?
  context: This involves training a supervised model on known good and bad process creation events. The model can then automatically score new events, providing a more sophisticated and adaptable detection method than static rules for identifying token theft attempts in real-time.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - User workstations
  - Developer endpoints
  - Critical application servers
  - Domain Controllers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PREDICT process_risk_class from process_creation_features using trained_model; ALERT IF class is 'suspicious'
- question: Are there successful token-based authentications that exhibit multiple suspicious characteristics simultaneously, such as impossible travel, a new User-Agent, and no preceding interactive logon?
  context: A single anomaly might be a false positive, but a combination of suspicious factors strongly suggests a compromised token. This query looks for the convergence of impossible travel, new device fingerprints, and the absence of a legitimate interactive user session, which together paint a compelling picture of token misuse.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Geolocation Database
  - Domain Controllers
  - Authentication servers
  - Internet gateway
  - SaaS application front-ends
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ALERT IF successful_api_auth AND (impossible_travel OR new_user_agent OR no_interactive_logon_in_8h) >= 2 conditions
- question: Are user accounts exhibiting API authentication behavior that significantly deviates from their established baseline profile of locations, devices, and login times?
  context: This involves creating a detailed profile for each user's normal activity (e.g., known countries, common User-Agents, typical hours). A risk score is calculated for new authentications based on how much they deviate from this profile, allowing for the detection of subtle anomalies that might otherwise be missed.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Geolocation Database
  - Domain Controllers
  - Authentication servers
  - Internet gateway
  - SaaS application front-ends
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE risk_score for api_auth based on deviation from (known_countries, known_user_agents, typical_hours); ALERT IF score > 95th_percentile
- question: Are users' sequences of API interactions deviating from their learned normal patterns of behavior?
  context: Beyond individual authentications, an adversary's API usage patterns will likely differ from a legitimate user's. This question uses a time-series model to learn a user's typical workflow (e.g., sequence of API endpoints accessed, request frequency) and flags entire sessions that don't match that established behavior.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 4624
  - Geolocation Database
  - Domain Controllers
  - Authentication servers
  - Internet gateway
  - SaaS application front-ends
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE reconstruction_error for user_api_session using LSTM_autoencoder; ALERT IF error > threshold
- question: Are sensitive cloud identity API calls being made by users or from IP addresses that are not on a pre-approved allow-list?
  context: For highly sensitive operations like generating federation tokens or assuming powerful roles, a strict access control approach is effective. This query checks if such calls originate from unauthorized users or locations, indicating a potential misuse of credentials or a compromised identity.
  answer_sources:
  - AWS CloudTrail logs
  - Azure AD Sign-in logs
  - Google Cloud Audit Logs
  - Zeek http.log
  - Zeek conn.log
  - Cloud identity service endpoints
  - Cloud provider management consoles
  - Egress points to the internet
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ALERT IF api_call in sensitive_api_list AND (source_user OR source_ip) NOT IN allow_list
- question: Is there an unusual spike in the frequency of token generation requests for a user, or is a user attempting to assume a role they have never used before?
  context: A sudden increase in token requests (e.g., AssumeRole) or an attempt to access a new, unfamiliar role can be an indicator of an adversary exploring the environment, attempting to escalate privileges, or preparing for data exfiltration within the cloud environment.
  answer_sources:
  - AWS CloudTrail logs
  - Azure AD Sign-in logs
  - Google Cloud Audit Logs
  - Zeek http.log
  - Zeek conn.log
  - Cloud identity service endpoints
  - Cloud provider management consoles
  - Egress points to the internet
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ALERT IF (token_request_frequency > 3 * stdev_baseline) OR (assumed_role IS NEW for user)
- question: Can clustering algorithms identify outlier groups of cloud identity API calls that represent anomalous combinations of user, source IP, and requested permissions?
  context: This analytic uses unsupervised clustering to group similar API calls together based on their attributes. Small, isolated clusters often represent rare and potentially malicious activity that deviates from the common, high-volume patterns of legitimate use, making them ideal candidates for investigation.
  answer_sources:
  - AWS CloudTrail logs
  - Azure AD Sign-in logs
  - Google Cloud Audit Logs
  - Zeek http.log
  - Zeek conn.log
  - Cloud identity service endpoints
  - Cloud provider management consoles
  - Egress points to the internet
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CLUSTER cloud_api_logs using DBSCAN; ANALYZE and ALERT on small outlier clusters
- question: Are internal cloud resources that recently triggered a security alert making new outbound API calls, especially to known malicious destinations?
  context: A host that has already been flagged by another detection is considered high-risk. This query prioritizes monitoring its subsequent network activity, as an attacker may use the compromised host to pivot, exfiltrate data, or communicate with C2 infrastructure.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - AWS VPC Flow Logs
  - Azure Network Watcher flow logs
  - VPC/VNet flow logs
  - Network taps between cloud subnets
  - Internal API gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FIND outbound_api_calls FROM host WHERE host had high_severity_alert in last 24h; MATCH destination_ip against cti_feed
- question: Are internal cloud resources communicating with other resources (IPs/ports) they have never communicated with before?
  context: Adversaries moving laterally will create new network pathways that do not exist in established communication patterns. By building a graph of normal traffic flows, any new "edge" (connection) between two nodes that have never communicated before can be flagged as a potential lateral movement attempt.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - AWS VPC Flow Logs
  - Azure Network Watcher flow logs
  - VPC/VNet flow logs
  - Network taps between cloud subnets
  - Internal API gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: BUILD communication_graph from historical_logs; ALERT on new_connection IF (source, destination) edge is NEW
- question: Can a graph-based machine learning model detect anomalous new network connections that significantly alter the structure of the internal communication graph?
  context: This is a more advanced version of the previous question. Instead of just flagging any new connection, a graph ML model can understand the context of the connection (e.g., linking two previously separate groups of servers) and score its anomalousness, reducing false positives from benign "first time" connections.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - AWS VPC Flow Logs
  - Azure Network Watcher flow logs
  - VPC/VNet flow logs
  - Network taps between cloud subnets
  - Internal API gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: SCORE new_connection using GraphSAGE model; ALERT IF anomaly_score > threshold
- question: Are inbound API calls to a host immediately followed by the execution of reconnaissance or lateral movement tools on that same host?
  context: This query looks for a common attack pattern where an adversary uses an API to gain initial execution and then immediately runs tools like `nltest.exe`, `net.exe`, or `psexec.exe` to explore the network or move to other systems. Correlating these events provides strong evidence of post-exploitation activity.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Windows Firewall Log
  - Internal-facing web servers
  - API gateway servers
  - Application servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CORRELATE inbound_api_call with subsequent process_creation of recon/lateral_movement_tool on same host within 5 minutes
- question: Are service accounts associated with API services executing command shells (cmd.exe, powershell.exe) at an unusually high rate?
  context: Service accounts should typically not be used to spawn interactive shells as part of their normal function. A spike in shell execution by a service account is a strong indicator that an attacker has compromised the service and is using its privileges for interactive command execution and lateral movement.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Windows Firewall Log
  - Internal-facing web servers
  - API gateway servers
  - Application servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: BASELINE shell_execution_frequency by service_account; ALERT IF frequency > 99th_percentile_threshold
- question: Are there unusual sequences of events following an inbound API call, such as the execution of system commands, that deviate from learned normal behavior?
  context: This uses a model to learn the "normal story" of what happens after an API call on a server. Any sequence that has a low probability under this model, such as an API call being followed by `net user` to enumerate accounts, is flagged as suspicious and indicative of an adversary abusing the API for execution.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Windows Firewall Log
  - Internal-facing web servers
  - API gateway servers
  - Application servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE probability of event_sequence after api_call using HMM; ALERT IF probability is low
- question: Are critical servers, like domain controllers, receiving network logon attempts from source hosts that are not on a pre-defined allow-list?
  context: Access to critical infrastructure should be tightly controlled. This query implements a zero-trust approach by alerting on any network logon (Logon Type 3) from an unauthorized source, which could indicate an attacker pivoting from a less-critical, compromised system.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek dns.log
  - Domain controllers
  - File servers
  - Database servers
  - Cloud resource network interfaces
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ALERT IF event_id=4624 AND logon_type=3 AND destination in critical_assets AND source_ip NOT IN allow_list
- question: Are there new or rare combinations of source host, destination host, and user account observed in network logon events?
  context: This statistical approach baselines which users log in from which machines to which destinations. Any new or very infrequent combination (triplet) is flagged as anomalous, potentially indicating an adversary using stolen credentials from an unusual location to access a new target.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek dns.log
  - Domain controllers
  - File servers
  - Database servers
  - Cloud resource network interfaces
  range: last 90 days
  queries:
  - technology: pseudocode
    query: FIND logon_type=3 events; ALERT IF (source, destination, account) triplet is new or has frequency < 0.1%
- question: Are there successful network logons that create connections between previously separate clusters or 'communities' of hosts on the network?
  context: Networks often have distinct functional zones (e.g., developer workstations, production servers). A logon that bridges two such zones that do not normally interact is highly suspicious and could represent an attacker moving from a compromised user environment into a sensitive server environment.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek dns.log
  - Domain controllers
  - File servers
  - Database servers
  - Cloud resource network interfaces
  range: last 90 days
  queries:
  - technology: pseudocode
    query: MODEL network as graph with logon edges; DETECT communities; ALERT IF new logon_edge connects two separate communities
- question: Are any high-impact or destructive API calls (e.g., creating a new IAM user, changing permissions) being observed in cloud environments?
  context: This is a simple but effective query that maintains a list of API calls that are always considered critical (e.g., creating users, assigning roles, deleting infrastructure). Any occurrence of these events should trigger an immediate, high-severity alert for security review, as they can represent significant privilege escalation or persistence actions.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Audit Logs
  - Google Cloud Audit Logs
  - Cloud provider API endpoints
  - Web Application Firewalls
  - Cloud provider audit log aggregators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ALERT IF cloud_audit_log.api_call IN high_impact_api_list
- question: Is a user or role suddenly performing a much wider and more varied set of API calls than their historical baseline?
  context: Legitimate users and services typically have a focused and repetitive set of API interactions. An adversary, however, will likely perform a wide range of reconnaissance and action-oriented calls. A sudden increase in the variety (entropy) of API calls for a principal is a strong indicator of compromise.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Audit Logs
  - Google Cloud Audit Logs
  - Cloud provider API endpoints
  - Web Application Firewalls
  - Cloud provider audit log aggregators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: CALCULATE shannon_entropy of api_calls for each principal; ALERT IF entropy > 99th_percentile_baseline
- question: Can a machine learning model assign a risk score to cloud API calls to proactively identify potentially malicious activity?
  context: This involves training a model on various features of an API call (who, what, where, when) to predict its risk level. This allows for a more nuanced detection than static rules, flagging API calls that are subtly out of place or contextually risky for immediate review by an analyst.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Audit Logs
  - Google Cloud Audit Logs
  - Cloud provider API endpoints
  - Web Application Firewalls
  - Cloud provider audit log aggregators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: PREDICT risk_score for cloud_api_call using trained_model; ALERT IF risk_score > high_risk_threshold