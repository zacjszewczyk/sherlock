name: 'T1090.002: External Proxy'
id: 'd3b1b3b0-5b9a-4e3a-8f7b-9c7d1e2f3a4b'
description: 'Is the adversary using an external proxy for command and control communications? This playbook helps investigate this by looking for network connections to known proxy/VPN services, execution of known proxy tools, command-line arguments typical of proxying, suspicious SSL/TLS fingerprints (JA3/JA3S), network connections from unexpected processes, anomalous network flow characteristics, and direct connections that bypass corporate web proxies.'
type: 'technique'
related: 'TA0011: Command and Control'
contributors: 'Zachary Szewczyk'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: 'Are any outbound network connections matching known malicious proxy, VPN, or TOR node indicators from our threat intelligence feeds?'
    context: 'This question aims to identify direct connections to known malicious infrastructure. Adversaries often use publicly known or compromised proxy, VPN, or Tor services to hide their true origin. By continuously comparing outbound destination IPs and DNS queries against a threat intelligence feed, we can detect these attempts in real-time. A match provides a high-fidelity signal that an internal host is communicating with a potentially malicious anonymization service, which is a common C2 tactic.'
    answer_sources: 'Zeek conn.log, Zeek dns.log, Egress Network Gateways and Corporate DNS Resolvers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'JOIN (SELECT dest_ip FROM zeek_conn_logs) WITH (SELECT indicator FROM threat_intel_feed) ON dest_ip = indicator; JOIN (SELECT domain FROM zeek_dns_logs) WITH (SELECT indicator FROM threat_intel_feed) ON domain = indicator; ALERT on match.'
  - question: 'Has any external destination Autonomous System Number (ASN) experienced a sudden and significant spike in the number of unique internal hosts connecting to it?'
    context: 'This question seeks to uncover new or previously unknown proxy services by looking for behavioral anomalies. A legitimate service typically has a stable user base. If a large, anomalous number of internal hosts suddenly start connecting to the same, previously unpopular ASN, it could indicate that adversaries have set up a new proxy service within that network block and are directing compromised hosts to it. This statistical approach helps detect services not yet present in threat intelligence feeds.'
    answer_sources: 'Zeek conn.log, Zeek dns.log, Egress Network Gateways and Corporate DNS Resolvers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each destination_asn: BASELINE = COUNT(unique source_host) over last 30 days. CURRENT = COUNT(unique source_host) today. IF CURRENT > (3 * STDEV(BASELINE)) OR CURRENT > 99th_PERCENTILE(BASELINE), ALERT on destination_asn.'
  - question: 'Can we identify outbound connections that exhibit characteristics of proxy-like behavior using a machine learning model?'
    context: 'This question uses a machine learning classifier to identify subtle patterns in network traffic that are indicative of proxy usage, even for unknown services. By training a model on features like connection duration, data volume, protocol, and DNS query characteristics, we can score new connections for their likelihood of being proxy-related. This helps catch sophisticated adversaries using custom or encrypted tunneling methods that evade simpler signature-based and statistical checks.'
    answer_sources: 'Zeek conn.log, Zeek dns.log, Egress Network Gateways and Corporate DNS Resolvers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FEATURES = extract(duration, bytes_sent, bytes_received, protocol, dest_port, dns_ttl, dns_query_length) from conn_logs and dns_logs. MODEL = train_classifier(labeled_data). FOR each new_connection: SCORE = MODEL.predict_proba(features). IF SCORE > threshold, ALERT on connection.'
  - question: 'Are processes being created that match known proxy or tunneling tool names or file hashes?'
    context: 'This question looks for the most direct evidence of proxy tool usage: the execution of the tool itself. By comparing the names and file hashes of all newly created processes against a curated list of known tools (e.g., ngrok, chisel), analysts can quickly identify blatant attempts to establish external proxies. An alert from this check is a high-confidence indicator of malicious activity.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 1, All Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'SEARCH process_creation_logs WHERE process_name IN (known_proxy_tools_list) OR process_hash IN (known_proxy_hashes_list). ALERT on match.'
  - question: 'Are any rare or uncommon processes being executed across the enterprise that could be custom proxy tools?'
    context: 'Adversaries may use custom-compiled or renamed proxy tools to evade signature-based detection. This question helps find these tools by identifying statistical outliers. A process that runs on only a handful of machines (or just one) is inherently more suspicious than common software. By flagging processes with very low enterprise-wide prevalence, analysts can focus on potentially unauthorized or malicious software that could be used for proxying.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 1, All Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each process_name: PREVALENCE = COUNT(unique hosts executing process) / COUNT(total hosts) over 30 days. IF PREVALENCE < 0.001, ALERT on process_name.'
  - question: 'Are there any anomalously executed processes that might be unknown proxy tools?'
    context: 'This question uses machine learning to find unknown proxy tools by focusing on the context of their execution, rather than just the name. An anomaly detection model can learn what normal process behavior looks like based on features like the parent process, file path, and whether the file is signed. Executions that deviate significantly from this learned baseline are flagged as anomalous, providing a powerful way to uncover novel or heavily obfuscated malware.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 1, All Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FEATURES = extract(process_name_entropy, parent_process, file_path_depth, is_signed) from process_logs. MODEL = train_anomaly_detector(baseline_data). FOR each new_process: SCORE = MODEL.predict(features). IF SCORE is "anomaly", ALERT on process.'
  - question: 'Are processes being launched with command-line arguments characteristic of establishing a network proxy or tunnel?'
    context: 'Proxy and tunneling tools require specific command-line arguments to configure their operation (e.g., specifying a port to listen on or a remote server to connect to). This question involves scanning process command lines for these tell-tale switches, keywords, and syntax patterns. A match is a strong indicator that a process, regardless of its name, is being used to create a network tunnel.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 1, All Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'SEARCH process_creation_logs FOR command_line MATCHES regex_patterns("-proxy", "-listen", "-R:[0-9]:", etc.). ALERT on match.'
  - question: 'Are any processes being executed with unusually high-entropy command-line arguments?'
    context: 'To evade detection, adversaries may obfuscate or encode the command-line arguments passed to their tools. This often results in command lines with high character-level entropy (i.e., they appear more random). This question establishes a baseline for the normal command-line entropy of common processes and flags executions that significantly exceed it. This can reveal the use of packers, obfuscated scripts, or encoded payloads used to configure a proxy tool.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 1, All Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each process_name: BASELINE_ENTROPY = calculate_historical_entropy(command_lines). FOR each new_execution: CURRENT_ENTROPY = calculate_entropy(command_line). IF CURRENT_ENTROPY > 98th_PERCENTILE(BASELINE_ENTROPY), ALERT on execution.'
  - question: 'Are any process command lines being classified into suspicious topics related to networking or remote access?'
    context: 'This question applies Natural Language Processing (NLP) to discover suspicious activity. By treating the entire corpus of command-line arguments as a text document, topic modeling algorithms like LDA can identify clusters of related terms. Analysts can then examine these topics to find ones related to networking, proxying, and remote access. New process executions whose command lines fit these suspicious topics can then be flagged for review, even if they dont use specific known keywords.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 1, All Endpoints and Servers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'CORPUS = all_command_lines_from_logs. TOPICS = lda_model(CORPUS). IDENTIFY "suspicious_topics". FOR each new_process: IF command_line has high_probability for "suspicious_topics", ALERT on process.'
  - question: 'Are we observing any outbound SSL/TLS connections with JA3/JA3S hashes matching known malicious or proxying tools?'
    context: 'The way a client or server initiates an SSL/TLS session creates a fingerprint (JA3/JA3S hash) that can be unique to the application generating the traffic. This question involves matching these fingerprints against a threat intelligence feed of hashes known to be associated with C2 frameworks and proxy tools. This allows for the detection of specific malicious tools, even when their traffic is encrypted and destined for an unknown IP.'
    answer_sources: 'Zeek ssl.log, Zeek x509.log, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'SEARCH ssl_logs WHERE ja3_hash IN (known_malicious_ja3_list) OR ja3s_hash IN (known_malicious_ja3s_list). ALERT on match.'
  - question: 'Are there any new or very rare JA3/JA3S hashes appearing in the environment?'
    context: 'Beyond looking for known-bad fingerprints, this question seeks to identify unknown or custom tools by finding new and rare JA3/JA3S hashes. Most legitimate applications in an enterprise generate a predictable set of common fingerprints. A hash that is new to the environment or seen from a very small number of hosts is statistically anomalous and warrants investigation, as it could represent a new C2 tool or proxy client.'
    answer_sources: 'Zeek ssl.log, Zeek x509.log, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'BASELINE_HASHES = get_all_ja3_hashes from last 30 days. FOR each new_connection: IF ja3_hash is not in BASELINE_HASHES, ALERT on connection. CALCULATE prevalence for all hashes; IF prevalence < 0.0005, ALERT on hash.'
  - question: 'Can we identify clusters of suspicious SSL/TLS sessions that do not conform to known-good traffic patterns?'
    context: 'This question uses unsupervised machine learning to find groups of suspicious connections without relying on predefined signatures. By clustering SSL/TLS sessions based on a combination of features—such as the JA3 hash, cipher suites used, certificate details, and SNI—the model can group similar traffic together. Analysts can then investigate these clusters to find groups of connections that look different from typical benign traffic, potentially revealing a coordinated C2 channel using a custom proxy tool.'
    answer_sources: 'Zeek ssl.log, Zeek x509.log, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FEATURES = extract(ja3, ciphers, cert_issuer, cert_validity, sni) from ssl_logs. CLUSTERS = dbscan(FEATURES). ANALYZE clusters for outliers or groups with suspicious characteristics (e.g., self-signed certs, unusual ciphers). ALERT on suspicious clusters.'
  - question: 'Is any process not on our explicit network allowlist initiating an outbound connection?'
    context: 'This question is based on a principle of least privilege for network access. In a well-managed environment, only a specific set of applications (like web browsers and email clients) should be making outbound network connections. By creating an allowlist of these expected processes and alerting on any connection from a process not on the list, analysts can quickly spot unauthorized software, scripts, or living-off-the-land binaries being used to communicate externally.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 3, Zeek conn.log, All Endpoints and Servers, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'CORRELATE process_creation_logs with network_connection_logs. IF network_connection.process_name is NOT IN (network_allowlist), ALERT on connection.'
  - question: 'Is any process exhibiting anomalous network behavior, such as connecting to new ports or ASNs for the first time?'
    context: 'Even legitimate processes tend to have predictable network behavior. For example, an Outlook client typically connects to a known set of Microsoft ASNs on standard email ports. This question establishes a behavioral baseline for each process, tracking the destination ports and ASNs it normally communicates with. An alert is generated if a process suddenly connects to a port or ASN it has never been seen contacting before, which could indicate that the process has been hijacked or is being used for proxying.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 3, Zeek conn.log, All Endpoints and Servers, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each process_name: BASELINE_PORTS = historical_dest_ports over 30 days. BASELINE_ASNS = historical_dest_asns over 30 days. FOR each new_connection: IF dest_port not in BASELINE_PORTS OR dest_asn not in BASELINE_ASNS, ALERT on connection.'
  - question: 'Are any processes classified as "suspicious" based on their execution context also making network connections?'
    context: 'This question combines two different signals for a higher-fidelity alert. It first uses a machine learning model to classify process executions as benign or suspicious based on context like file path and parent process. It then correlates this information with network connection data. A process that is already deemed suspicious and then also makes a network connection is a much stronger indicator of malicious activity than either signal alone, helping to prioritize alerts for analysts.'
    answer_sources: 'Windows Event ID 4688, Sysmon Event ID 3, Zeek conn.log, All Endpoints and Servers, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'MODEL = train_classifier on process execution features. FOR each new_process: IF MODEL.predict(process) is "suspicious" AND process makes_network_connection, ALERT on process.'
  - question: 'Are there any indications of protocol tunneling or evasion in weird network logs?'
    context: 'This question leverages the built-in analysis of network sensors like Zeek, which are designed to spot protocol anomalies. Zeek''s "weird.log" specifically flags unusual traffic that violates protocol standards, such as finding non-SSL traffic on port 443 (ssl_not_ssl) or other signs of tunneling. Reviewing these logs provides a direct, signature-based method for identifying attempts to hide a protocol within another.'
    answer_sources: 'Zeek conn.log, Zeek weird.log, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'SEARCH weird_logs for notices like "ssl_not_ssl", "possible_split_routing", "http_on_unusual_port". CORRELATE with conn_logs to identify hosts and ALERT.'
  - question: 'Are we observing connections with highly periodic beaconing behavior or extremely skewed data transfer ratios?'
    context: 'Command and control traffic often has distinct statistical properties. C2 beacons tend to be highly periodic (e.g., a connection every 60 seconds, with very little jitter), which can be detected by measuring the standard deviation of inter-arrival times. Furthermore, some proxy channels may involve sending small commands and receiving larger outputs, or vice-versa, leading to a skewed ratio of bytes sent to received. This question looks for these statistical outliers in flow data to find potential C2 channels.'
    answer_sources: 'Zeek conn.log, Zeek weird.log, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each source-dest pair: CALCULATE STDEV of inter-connection times. IF STDEV is near zero, ALERT. CALCULATE ratio of bytes_sent/bytes_received. IF ratio > 10 or < 0.1, ALERT.'
  - question: 'Are any hosts exhibiting anomalous changes in their overall network traffic volume patterns over time?'
    context: 'This question applies time-series analysis to a host''s overall network traffic to find deviations from normal behavior. A host typically has a predictable daily and weekly traffic pattern (seasonality). A sudden, sustained increase in data being sent or received that breaks from this established pattern could indicate a large data exfiltration event or the active use of a C2 proxy channel. Anomaly detection algorithms can automatically flag these deviations for review.'
    answer_sources: 'Zeek conn.log, Zeek weird.log, Egress Network Gateways'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each host: MODEL = train_timeseries_model (e.g., Prophet) on historical traffic volume. PREDICT expected traffic for current period. IF actual_traffic significantly deviates from prediction, ALERT on host.'
  - question: 'Are any user endpoints making direct connections on ports 80 or 443 to external IPs, bypassing the corporate web proxy?'
    context: 'In many corporate environments, all web traffic from user endpoints is required to go through a designated web proxy for security inspection and policy enforcement. A direct connection from a user machine to an external IP on port 80 or 443 is a policy violation and a potential security risk. This question creates a simple rule to detect these bypass attempts, which could be an adversary trying to establish a C2 channel that avoids security controls.'
    answer_sources: 'Zeek conn.log, User Endpoint Subnets, Egress Network Gateways, DNS Resolvers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'SEARCH network_logs WHERE source_ip is in user_subnets AND dest_port in (80, 443) AND dest_ip is NOT in corporate_proxy_ips. ALERT on connection.'
  - question: 'Is any host showing a significant increase in direct connections to public cloud, hosting, or VPN provider ASNs?'
    context: 'While some direct connections to cloud providers are normal, adversaries often leverage these same providers to host their C2 infrastructure. This question establishes a baseline for each host''s normal connection activity to ASNs known to belong to cloud, hosting, or VPN providers. A host that suddenly starts making significantly more connections to these ASNs than its historical average may be communicating with a newly established C2 proxy.'
    answer_sources: 'Zeek conn.log, User Endpoint Subnets, Egress Network Gateways, DNS Resolvers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'FOR each host: BASELINE = daily_connection_count to cloud_ASNs over 30 days. CURRENT = today''s_connection_count to cloud_ASNs. IF CURRENT > (3 * STDEV(BASELINE)), ALERT on host.'
  - question: 'Can we detect small communities of internal hosts all connecting to the same, non-mainstream external IP address?'
    context: 'This question uses graph analysis to find evidence of shared C2 infrastructure. By building a graph of connections between internal hosts and external IPs, community detection algorithms can find tightly-knit groups. A small cluster of internal hosts that are all communicating with the same, otherwise unpopular external IP is highly suspicious. This pattern often represents a group of compromised machines all reporting to the same C2 controller or proxy, and this method can uncover it without any prior signatures.'
    answer_sources: 'Zeek conn.log, User Endpoint Subnets, Egress Network Gateways, DNS Resolvers'
    range: 'last 90 days'
    queries:
      - search: 'Pseudocode'
        query: 'GRAPH = create_graph(nodes=all_ips, edges=all_connections). COMMUNITIES = find_communities(GRAPH). FOR each community: IF community contains multiple internal_hosts and one external_ip, ALERT on community.'