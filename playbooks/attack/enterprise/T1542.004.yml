name: T1542.004: ROMMONkit
id: 5f1e8a9c-7b0d-4f3e-8c6a-1d9b4a2c0f1e
description: This playbook focuses on detecting adversaries modifying network device firmware for persistence and defense evasion (T1542.004). This involves identifying the transfer of malicious firmware images by checking file hashes against threat intelligence and monitoring for connections to known C2 infrastructure. It also covers detecting the execution of command sequences associated with unauthorized firmware modification, unusual file transfers based on source IP or file size, and anomalous network behavior following unexpected device reboots. Furthermore, the playbook addresses defense evasion tactics, such as a compromised device selectively dropping traffic from security tools, manipulating low-level traffic artifacts like IP TTLs, causing significant deviations in traffic flow metrics, or suppressing management traffic like syslog and SNMP to hide its presence.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are files transferred to network devices matching known malicious firmware hashes, or are devices connecting to known C2 infrastructure?
  context: Adversaries achieve persistence by replacing legitimate network device firmware with a malicious version, known as a ROMMONkit. This question aims to detect the initial implant stage by identifying the transfer of known malicious files (e.g., Cisco's Synful Knock) or the subsequent command and control (C2) communication. Matching file hashes against threat intelligence is a high-fidelity indicator of compromise, while detecting connections to known C2 servers confirms the presence of an active implant.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Core routers, edge firewalls, TFTP/SCP/FTP management servers, and DNS resolvers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      // Check for malicious file transfers
      SEARCH Zeek:files.log | HASH file | LOOKUP known_malicious_firmware_hashes AGAINST file_hash | IF match_found THEN ALERT (high)

      // Check for C2 connections
      SEARCH Zeek:conn.log OR Zeek:dns.log | FILTER source_ip IN network_device_management_ips | LOOKUP known_c2_destinations AGAINST destination_ip_or_domain | IF match_found THEN ALERT (high)
- question: Are network devices making DNS queries for domains with unusually high entropy, potentially indicating DGA-based C2?
  context: Malicious firmware implants may use Domain Generation Algorithms (DGA) to locate their command and control (C2) servers, making static blocklists ineffective. These generated domains often appear random and have high character entropy. This question seeks to identify such activity by calculating the entropy of DNS queries from network devices and alerting on statistical deviations from an established baseline for each device.
  answer_sources:
  - Zeek dns.log
  - Network Assets of Interest: Core routers, edge firewalls, TFTP/SCP/FTP management servers, and DNS resolvers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:dns.log | FILTER source_ip IN network_device_management_ips
      | CALCULATE shannon_entropy(query_domain)
      | BASELINE per device over 30 days
      | IF shannon_entropy > 99th_percentile_of_baseline THEN ALERT
- question: Is there an anomalous volume of outbound connections from a network device, especially on non-standard ports?
  context: A newly activated firmware implant will initiate outbound connections to its C2 server. This activity can manifest as a sudden, unexpected increase in the volume of network connections from the compromised device. This question uses time-series forecasting to model normal connection behavior and detects significant deviations from this forecast, which could indicate the implant has been activated and is beaconing out.
  answer_sources:
  - Zeek conn.log
  - Network Assets of Interest: Core routers, edge firewalls, TFTP/SCP/FTP management servers, and DNS resolvers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log
      | AGGREGATE count by time, device_ip, protocol
      | FORECAST expected_connection_volume using time-series model (e.g., ARIMA)
      | IF actual_volume > upper_confidence_bound_of_forecast THEN ALERT
- question: Has a sequence of CLI commands associated with unauthorized firmware modification been executed on a network device?
  context: Replacing firmware on a network device requires a specific sequence of commands, such as copying the new image, changing boot parameters, and reloading the device. This question aims to detect this pattern of activity by correlating command logs within a short time window. The detection can be made more robust by adding context, such as whether the commands were run by an unauthorized user or outside a maintenance window.
  answer_sources:
  - Network Device CLI Logs
  - Zeek tftp.log
  - Zeek snmp.log
  - Network Assets of Interest: Network device configuration management systems (e.g., TACACS+/RADIUS servers), central syslog aggregators, and core network switches and routers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Network Device CLI Logs
      | DETECT sequence ["copy *", "config-register *", "boot system *", "reload"] within 15 minutes for same device
      | ENRICH with user, source_ip, time
      | IF user is non-privileged OR source_ip is not in management_subnet OR time is outside maintenance_window THEN ALERT (high)
- question: Is a user executing an anomalously high number of privileged commands on a network device?
  context: An attacker who has gained access to a network device will often execute a series of privileged commands to explore the device, escalate privileges, and install the malicious firmware. This behavior can differ significantly from a typical administrator's session. This question establishes a baseline of normal privileged command usage per user and alerts when a user's activity significantly exceeds their historical average, indicating potential malicious action.
  answer_sources:
  - Network Device CLI Logs
  - Zeek tftp.log
  - Zeek snmp.log
  - Network Assets of Interest: Network device configuration management systems (e.g., TACACS+/RADIUS servers), central syslog aggregators, and core network switches and routers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Network Device CLI Logs
      | COUNT privileged_commands per user_session
      | BASELINE historical average and std_dev of privileged_commands per user
      | IF session_count > (user_average + 3 * user_std_dev) THEN ALERT
- question: Does a sequence of commands in a CLI session classify as malicious based on a machine learning model?
  context: While simple rule-based sequences are effective, sophisticated attackers may vary their commands to evade detection. A more advanced approach is to use a sequence-based machine learning model (like an RNN) trained on known legitimate and malicious sessions. This question involves deploying such a model to analyze live command streams in near real-time, providing a more resilient method for detecting novel or obfuscated attack patterns.
  answer_sources:
  - Network Device CLI Logs
  - Zeek tftp.log
  - Zeek snmp.log
  - Network Assets of Interest: Network device configuration management systems (e.g., TACACS+/RADIUS servers), central syslog aggregators, and core network switches and routers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      STREAM Network Device CLI Logs to ML_Model
      | MODEL classifies session_command_sequence as 'benign' or 'malicious'
      | IF classification is 'malicious' THEN ALERT
- question: Is a network device receiving a firmware file from an unauthorized source IP address?
  context: Firmware updates should only be performed from a limited set of authorized management servers or administrator workstations. An attacker will likely transfer the malicious firmware from a compromised host or an external server. This question enforces an explicit allow-list for firmware transfers, generating an immediate, high-fidelity alert for any transfer attempt originating from an IP address not on that list.
  answer_sources:
  - Zeek tftp.log
  - Zeek conn.log
  - Zeek files.log
  - Windows Event ID 4624
  - Network Assets of Interest: Management VLANs, administrator workstations, jump servers, and TFTP/SCP/FTP servers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log
      | FILTER destination_port IN (69, 21, 22) AND destination_ip IN network_device_management_ips
      | IF source_ip NOT IN authorized_firmware_sources_list THEN ALERT
- question: Has a firmware file been transferred to a network device with a file size that is a statistical outlier?
  context: Malicious firmware images may be smaller than legitimate ones if features are removed, or larger if they are padded to evade simple size checks. This question establishes a statistical profile of normal firmware file sizes for each device model. By using a method like the Interquartile Range (IQR), it can detect files that are unusually large or small, which may indicate a malicious or tampered image.
  answer_sources:
  - Zeek tftp.log
  - Zeek conn.log
  - Zeek files.log
  - Windows Event ID 4624
  - Network Assets of Interest: Management VLANs, administrator workstations, jump servers, and TFTP/SCP/FTP servers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:files.log
      | PROFILE legitimate firmware sizes per device_model to calculate Q1, Q3, IQR
      | DEFINE lower_bound = Q1 - 1.5*IQR and upper_bound = Q3 + 1.5*IQR
      | FOR new_file_transfer | IF file_size < lower_bound OR file_size > upper_bound THEN ALERT
- question: Does a machine learning model classify a file transfer event to a network device as malicious?
  context: This question moves beyond single indicators to a holistic assessment of a file transfer's legitimacy. By training a classification model on multiple features—such as source IP, time of day, and file size—it can identify suspicious transfers that might not trigger simpler, single-variate rules. A high-confidence prediction from the model can serve as a strong signal to initiate an automated investigation.
  answer_sources:
  - Zeek tftp.log
  - Zeek conn.log
  - Zeek files.log
  - Windows Event ID 4624
  - Network Assets of Interest: Management VLANs, administrator workstations, jump servers, and TFTP/SCP/FTP servers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek file transfer events
      | EXTRACT features (source_ip, time_of_day, file_size, etc.)
      | INPUT features into classification_model
      | IF model_prediction is 'malicious' with confidence > 0.9 THEN ALERT and CORRELATE with source host login events
- question: Did a network device reboot unexpectedly and then immediately connect to a suspicious external destination?
  context: An attacker often forces a device to reboot to load the malicious firmware. The first action of the newly active implant is typically to connect to its C2 server. This question correlates an unscheduled reboot event (from syslog or SNMP) with subsequent network connections. A connection to a new or known-bad destination on a non-standard port shortly after a reboot is a strong indicator of a successful compromise.
  answer_sources:
  - Network Device CLI Logs
  - SNMP Trap Logs
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Central syslog aggregators, core and edge network devices, and DNS resolvers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH syslog or snmp for 'device reboot' event
      | ON trigger, MONITOR Zeek:conn.log for 5 minutes for connections from rebooted_device_ip
      | IF connection to external_ip on non-standard_port
      | ENRICH destination_ip with threat_intelligence
      | IF destination_is_suspicious THEN ALERT
- question: Following a reboot, did a network device exhibit network activity that deviates from its normal post-reboot baseline?
  context: Legitimate devices have a predictable pattern of network activity after a reboot, such as contacting NTP servers, syslog servers, and central management platforms. A compromised device will exhibit different behavior, contacting its C2 infrastructure. This question establishes a baseline of normal post-reboot destinations and alerts if the device connects to a significant number of new, un-baselined destinations after a reboot.
  answer_sources:
  - Network Device CLI Logs
  - SNMP Trap Logs
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Central syslog aggregators, core and edge network devices, and DNS resolvers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH for device_reboot_event
      | ON trigger, COLLECT set of unique destinations contacted by device in next 15 minutes
      | COMPARE current_set with historical_post_reboot_baseline_set
      | IF count(new_destinations) > threshold THEN ALERT
- question: Do network connections immediately following a device reboot appear anomalous according to an unsupervised machine learning model?
  context: This question uses unsupervised anomaly detection to identify subtle or novel malicious activity after a reboot. Instead of relying on predefined rules or baselines of destinations, a model like an Isolation Forest can analyze multiple features of a connection (port, protocol, bytes transferred) to find outliers that do not conform to the patterns learned from legitimate reboots. This is effective for detecting previously unseen C2 techniques.
  answer_sources:
  - Network Device CLI Logs
  - SNMP Trap Logs
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Central syslog aggregators, core and edge network devices, and DNS resolvers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH for unscheduled_reboot_event
      | ON trigger, STREAM post-reboot connection data to anomaly_detection_model
      | IF model flags connection as 'anomaly' THEN ESCALATE for review
- question: Is a network device disproportionately dropping connections originating from security infrastructure?
  context: A sophisticated firmware implant may attempt to evade detection by selectively dropping or blocking traffic from security tools like vulnerability scanners or SIEM forwarders. This question aims to detect such behavior by comparing the connection failure rate for traffic from a known set of security IPs against the failure rate for all other traffic. A significantly higher failure rate for security traffic suggests active, targeted blocking.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Network Assets of Interest: Security tool subnets, central log collectors, suspect network devices, and network taps monitoring traffic to/from these devices.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      DEFINE security_ips = [...]
      CALCULATE failure_rate_sec = count(connections where src_ip in security_ips AND state in ['REJ', 'RST']) / count(connections where src_ip in security_ips)
      CALCULATE failure_rate_other = count(connections where src_ip NOT in security_ips AND state in ['REJ', 'RST']) / count(connections where src_ip NOT in security_ips)
      IF failure_rate_sec > (failure_rate_other * 10) THEN ALERT
- question: Has the connection success rate from security tools to a specific network device dropped significantly below its baseline?
  context: This question focuses on the health of security monitoring itself. It establishes a historical baseline for the connection success rate (e.g., TCP handshakes completed) from the security subnet to each network device. A sudden, sharp drop in this success rate for a particular device, especially when compared to its peers, is a strong indicator that the device may be compromised and actively blocking monitoring tools.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Network Assets of Interest: Security tool subnets, central log collectors, suspect network devices, and network taps monitoring traffic to/from these devices.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log | FILTER src_ip in security_subnet
      | CALCULATE success_rate = count(state='SF') / count(*) per device, per hour
      | BASELINE moving_average and std_dev of success_rate per device
      | IF current_success_rate < (moving_average - 3 * std_dev) THEN ALERT
- question: Is there an anomalous spike in failed connections from security infrastructure that is not correlated with a known outage?
  context: This question applies time-series anomaly detection to connection failure logs. Instead of simple thresholds, it uses algorithms that can account for normal fluctuations and seasonality. A sudden and sustained spike in rejected or reset connections from security subnets that is flagged by the model as a high-confidence anomaly provides a strong signal of active interference by a compromised device.
  answer_sources:
  - Zeek conn.log
  - Zeek weird.log
  - Network Assets of Interest: Security tool subnets, central log collectors, suspect network devices, and network taps monitoring traffic to/from these devices.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log | FILTER src_ip in security_subnet AND state in ['REJ', 'RST']
      | COUNT events over time
      | APPLY time-series anomaly detection (e.g., Seasonal ESD) to the count
      | IF anomaly_detected AND NOT correlated_with_maintenance THEN ALERT
- question: Are network devices making DNS queries that use non-standard opcodes or unusual record types indicative of C2?
  context: Adversaries may abuse the DNS protocol for command and control by hiding data in non-standard fields. This question looks for these low-level artifacts, such as DNS queries from network devices that use unusual opcodes or request TXT records (often used for C2) with abnormally large response sizes. These are specific indicators provided by threat intelligence on certain firmware implants.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Network TAPs at key aggregation points (e.g., data center core, internet edge), DNS resolvers, and suspect network devices.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:dns.log | FILTER source_ip IN network_device_ips
      | IF (opcode != 'QUERY' OR record_type = 'TXT')
      | AND (response_size > typical_size_for_type)
      | THEN ALERT
- question: Are there network connections with anomalous IP Time-to-Live (TTL) values originating from internal subnets?
  context: A compromised router or firewall might inject its own packets into a traffic flow or modify existing ones. This can sometimes result in packets having an initial TTL value that is inconsistent with the operating system of the true source host. This question profiles the normal distribution of initial TTLs for each source subnet and alerts on any connection where the TTL is a statistical outlier, suggesting a device on the path is manipulating traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Network TAPs at key aggregation points (e.g., data center core, internet edge), DNS resolvers, and suspect network devices.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log
      | PROFILE normal initial_ttl_distribution per source_subnet
      | FOR each new connection
      | IF initial_ttl is an outlier for its source_subnet THEN ALERT
- question: Does a machine learning model classify a live traffic flow as being manipulated by a known firmware implant?
  context: This question uses a supervised machine learning model to provide a sophisticated, real-time detection capability. By training a model on features extracted from known benign and malicious traffic (e.g., TTL, IP flags, packet size statistics), it can learn the subtle patterns of traffic manipulation used by firmware implants. This allows for the detection of malicious activity even when no single feature is obviously anomalous.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Assets of Interest: Network TAPs at key aggregation points (e.g., data center core, internet edge), DNS resolvers, and suspect network devices.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      STREAM Zeek log data to ML_Model
      | EXTRACT features (initial_ttl, ip_flags, packet_size_std_dev, etc.)
      | MODEL classifies traffic_flow as 'benign' or 'implant-modified'
      | IF classification is 'implant-modified' THEN ALERT
- question: Is traffic from a critical network segment violating a 'never event' routing policy?
  context: A compromised routing device can be used to exfiltrate data by forwarding traffic in violation of established security policies. This question defines strict rules for critical assets, such as a rule that production database servers should never communicate directly with the internet. A 'never event' rule provides a very high-fidelity alert that a core routing or firewall policy has been subverted, likely by a compromised device.
  answer_sources:
  - Zeek conn.log
  - Zeek conn_summary.log
  - Network Assets of Interest: Key network choke points, such as internet gateways, data center core switches, and inter-site VPN routers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      DEFINE critical_asset_ips = [...]
      DEFINE allowed_gateways = [...]
      SEARCH Zeek:conn.log
      | IF source_ip in critical_asset_ips AND destination_ip is external
      | AND gateway_ip NOT IN allowed_gateways THEN ALERT (critical)
- question: Has the protocol diversity on a key network path suddenly and sustainedly decreased?
  context: A firmware implant that hijacks or redirects specific types of traffic (e.g., tunneling everything over DNS) can change the overall protocol mix observed on a network link. This question monitors the protocol distribution (e.g., %TCP, %UDP) and calculates its entropy. A sudden drop in entropy indicates that the traffic has become less diverse and more monolithic, which could be a sign of malicious manipulation.
  answer_sources:
  - Zeek conn.log
  - Zeek conn_summary.log
  - Network Assets of Interest: Key network choke points, such as internet gateways, data center core switches, and inter-site VPN routers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log
      | AGGREGATE protocol distribution per hour for a specific network path
      | CALCULATE shannon_entropy of the protocol_distribution
      | IF entropy drops significantly from historical baseline for a sustained period THEN ALERT
- question: Are traffic volumes across multiple protocols deviating significantly from a multivariate forecast?
  context: Attackers' actions can cause complex, interrelated changes to traffic patterns that are missed by single-protocol analysis. This question uses a multivariate time-series model to forecast the expected volumes for multiple protocols simultaneously. When the actual observed traffic deviates significantly from this coordinated forecast, it suggests an unobserved factor—like a firmware implant—is influencing the system as a whole.
  answer_sources:
  - Zeek conn.log
  - Zeek conn_summary.log
  - Network Assets of Interest: Key network choke points, such as internet gateways, data center core switches, and inter-site VPN routers.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Zeek:conn.log
      | CREATE multivariate time-series of traffic volumes (TCP, UDP, ICMP, etc.)
      | FORECAST expected traffic vector using VAR model
      | CALCULATE residual_error = actual_vector - forecast_vector
      | IF residual_error is a statistical anomaly THEN ALERT
- question: Has a critical network device stopped sending syslog messages while still being online?
  context: A common defense evasion technique for a firmware implant is to suppress logging on the compromised device to hide its activity. This question implements a 'dead man's switch' alert. If a device, known to be online (e.g., responding to pings), stops sending syslog data for an extended period, it generates a high-priority alert for potential log suppression or device tampering.
  answer_sources:
  - Zeek conn.log
  - Zeek snmp.log
  - Zeek ntp.log
  - Network Device CLI Logs
  - Central Syslog Server Logs
  - Network Assets of Interest: Central syslog/SNMP trap servers, NTP servers, and network device management interfaces.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SET timer for each critical_device
      ON receipt of syslog message from device, RESET timer
      IF timer > 60 minutes
      | PING device_management_ip
      | IF ping_successful THEN ALERT (high, 'Potential Log Suppression')
- question: Has the rate of syslog messages from a network device dropped by a statistically significant amount?
  context: Rather than completely stopping logs, an implant might selectively drop certain log messages, resulting in a lower overall volume. This question establishes a baseline for the normal rate of syslog messages per hour for each device. It then alerts if the observed rate drops more than a few standard deviations below the historical average, indicating an abnormal reduction in logging activity that could be a sign of evasion.
  answer_sources:
  - Zeek conn.log
  - Zeek snmp.log
  - Zeek ntp.log
  - Network Device CLI Logs
  - Central Syslog Server Logs
  - Network Assets of Interest: Central syslog/SNMP trap servers, NTP servers, and network device management interfaces.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH Central Syslog Server Logs
      | COUNT messages per hour per device
      | BASELINE historical average and std_dev of message_rate per device
      | IF current_rate < (average_rate - 3 * std_dev) for sustained period THEN ALERT
- question: Is the volume of management traffic from a network device significantly lower than its forecasted volume?
  context: This question provides the most sophisticated approach to detecting log suppression by using a time-series model that can account for normal daily and weekly patterns in management traffic (e.g., lower traffic on weekends). By forecasting the expected volume of syslog or SNMP traffic, the model can detect significant negative deviations that are not explained by normal seasonality, providing a high-confidence signal of anomalous behavior.
  answer_sources:
  - Zeek conn.log
  - Zeek snmp.log
  - Zeek ntp.log
  - Network Device CLI Logs
  - Central Syslog Server Logs
  - Network Assets of Interest: Central syslog/SNMP trap servers, NTP servers, and network device management interfaces.
  range: Last 90 days
  queries:
  - tech: pseudocode
    query: |-
      SEARCH management traffic logs (Syslog, SNMP)
      | AGGREGATE volume per hour per device
      | FORECAST expected_volume using seasonal time-series model (e.g., Prophet)
      | IF actual_volume is significantly below forecast's lower confidence bound THEN ALERT