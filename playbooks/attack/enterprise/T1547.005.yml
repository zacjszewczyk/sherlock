name: "T1547.005: Security Support Provider"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook helps investigate whether an adversary is achieving persistence or privilege escalation by abusing Security Support Providers (SSPs). Adversaries modify the 'Security Packages' registry key to add a malicious DLL. This DLL is then loaded by the Local Security Authority Subsystem Service (LSASS) process (lsass.exe) at startup, granting the adversary SYSTEM-level access and the ability to intercept and steal credentials. Indicators of this activity include unauthorized modifications to the LSA registry keys, lsass.exe loading unusual or unsigned DLLs, anomalous network connections originating from lsass.exe, and suspicious command-line activity related to SSP manipulation."
type: "technique"
related:
  - "TA0003: Persistence"
  - "TA0004: Privilege Escalation"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Is a non-standard or known-malicious Security Support Provider (SSP) DLL being added to the registry?"
    context: "Adversaries achieve persistence by adding malicious DLLs to the 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages' registry key. This action causes the LSA process to load the malicious DLL on startup. This question aims to detect this behavior by checking for modifications to this key and comparing the newly added DLL against an allowlist of legitimate SSPs for the environment and a blocklist of known malicious SSP DLLs from threat intelligence."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 13"
      - "Registry hives on all Windows endpoints, especially Domain Controllers and privileged access workstations."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH registry modification events (WinEvent 4657, Sysmon 13) WHERE registry path contains 'Lsa\\Security Packages'. EXTRACT new DLL name from event details. ALERT if DLL is not in enterprise SSP allowlist OR DLL is in threat intelligence blocklist."
  - question: "Has an unusually rare Security Support Provider (SSP) DLL been registered?"
    context: "Legitimate SSPs are typically standardized and uniform across an enterprise environment. Therefore, a DLL added to the SSP registry key that is extremely rare compared to a baseline of all such additions across the enterprise is highly suspicious. This question uses frequency analysis to identify these statistical outliers for manual investigation."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 13"
      - "Registry hives on all Windows endpoints, especially Domain Controllers and privileged access workstations."
    range: "last 90 days"
    queries:
      - "pseudocode: From registry modification events affecting SSP keys, CREATE a frequency table of all added DLL names over 90 days. FLAG any newly added DLL whose name frequency is below the 1st percentile for review."
  - question: "Does a machine learning model classify a recent Security Support Provider (SSP) registry modification as malicious?"
    context: "This question leverages a machine learning model to score the likelihood that an SSP registry modification is malicious. By training on features like the process that made the change, the user context, time of day, and string characteristics (e.g., entropy) of the DLL name, the model can identify complex patterns that simple rules might miss."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 13"
      - "Registry hives on all Windows endpoints, especially Domain Controllers and privileged access workstations."
    range: "last 90 days"
    queries:
      - "pseudocode: For each SSP registry modification event, EXTRACT features (process, parent process, user, time, DLL name characteristics). APPLY pre-trained classification model. ALERT if the resulting score exceeds a defined maliciousness threshold."
  - question: "Is the lsass.exe process loading an unsigned, untrusted, or non-allowlisted DLL?"
    context: "Once a malicious SSP is registered, the lsass.exe process will load it into memory. This question detects this stage of the attack by monitoring all DLLs loaded by lsass.exe and checking if they are unsigned, signed by an untrusted publisher, or not on a pre-defined allowlist of known-good system and SSP DLLs."
    answer_sources:
      - "Sysmon Event ID 7"
      - "Windows Event ID 4657"
      - "Windows Event ID 6005"
      - "Process execution and module load logs on all Windows endpoints and servers."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH module load events (Sysmon 7) WHERE process name is 'lsass.exe'. EXTRACT the loaded DLL name and signature status. ALERT if the DLL is not on the allowlist OR its signature status is 'Unsigned' or 'Invalid'."
  - question: "Is lsass.exe loading a DLL module that is statistically rare across the enterprise?"
    context: "This question uses a statistical approach to find malicious DLLs loaded by lsass.exe. It establishes a baseline of all DLLs and their corresponding digital signatures loaded by lsass.exe across the environment. An alert is triggered for any DLL/signature pair that is statistically rare (e.g., in the bottom 5th percentile), especially if it occurs shortly after a system reboot, which is when SSPs are loaded."
    answer_sources:
      - "Sysmon Event ID 7"
      - "Windows Event ID 6005"
      - "Process execution and module load logs on all Windows endpoints and servers."
    range: "last 90 days"
    queries:
      - "pseudocode: BASELINE the frequency of all (DLL, Signature) pairs loaded by 'lsass.exe' across the enterprise. For new module load events, FLAG any pair whose frequency is in the bottom 5th percentile, especially if correlated with a recent reboot event."
  - question: "Is the sequence of DLLs loaded by lsass.exe during system startup anomalous?"
    context: "The order in which lsass.exe loads its required DLLs during the boot process is typically predictable and consistent. This question applies a sequence-aware machine learning model (like an LSTM) to learn the normal startup sequence. The model can then detect deviations, such as an unexpected or out-of-order DLL load, which could indicate a malicious SSP being loaded."
    answer_sources:
      - "Sysmon Event ID 7"
      - "Process execution and module load logs on all Windows endpoints and servers."
    range: "last 90 days"
    queries:
      - "pseudocode: TRAIN a sequence model on the temporal order of DLLs loaded by 'lsass.exe' during normal boot sequences. APPLY the model to new boot sequences and ALERT on significant deviations from the learned normal sequence."
  - question: "Is lsass.exe initiating a network connection to a known command-and-control server?"
    context: "A malicious SSP loaded into lsass.exe can be used to exfiltrate credentials or establish a command-and-control (C2) channel. Since lsass.exe is a critical system process, its network traffic is often trusted. This question checks if lsass.exe initiates any outbound connections to destinations that are present on a threat intelligence feed of known C2 servers."
    answer_sources:
      - "Zeek conn.log"
      - "Sysmon Event ID 3"
      - "Windows Event ID 4657"
      - "Network traffic logs from egress points and host-based network connection logs from all Windows systems."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH for network connection events (Sysmon 3) from 'lsass.exe'. ALERT if the destination IP/domain is on a C2 threat intelligence list. INCREASE priority if correlated with a recent SSP registry modification on the same host."
  - question: "Is lsass.exe making a statistically unusual network connection?"
    context: "This question aims to detect malicious C2 traffic from lsass.exe by identifying statistical anomalies. It establishes a baseline of normal network behavior for lsass.exe, including common destination ports, IP prevalence, and data volumes. It then flags connections that deviate significantly from this baseline, such as connections to rare ports or IPs ('long tail' analysis)."
    answer_sources:
      - "Zeek conn.log"
      - "Sysmon Event ID 3"
      - "Network traffic logs from egress points and host-based network connection logs from all Windows systems."
    range: "last 90 days"
    queries:
      - "pseudocode: BASELINE network connections from 'lsass.exe' (dest port, dest IP prevalence, data volume). ALERT on new connections where destination is statistically rare (e.g., bottom 1% prevalence) or data volume is >3 standard deviations from the mean."
  - question: "Does a machine learning model classify a network connection from lsass.exe as anomalous?"
    context: "This question applies an anomaly detection model (e.g., Isolation Forest) to score all network connections initiated by lsass.exe. The model uses a variety of features, such as port, protocol, connection duration, bytes transferred, and TLS fingerprints (JA3/JA3S), to identify outliers that represent potentially malicious activity without relying on pre-defined rules."
    answer_sources:
      - "Zeek conn.log"
      - "Sysmon Event ID 3"
      - "Windows Event ID 6005"
      - "Network traffic logs from egress points and host-based network connection logs from all Windows systems."
    range: "last 90 days"
    queries:
      - "pseudocode: For each network connection from 'lsass.exe', EXTRACT features (port, protocol, duration, bytes, JA3). APPLY a pre-trained anomaly detection model. FLAG connections with a high anomaly score, especially if correlated with a recent reboot."
  - question: "Are there command-line executions containing strings or patterns associated with Security Support Provider (SSP) abuse tools like Mimikatz?"
    context: "Adversaries may use well-known tools (like Mimikatz) or specific commands to add or modify SSPs. This question directly searches for evidence of these actions by scanning process command-line logs for tell-tale strings, keywords, or regular expression patterns indicative of SSP manipulation."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Process creation logs with command-line auditing enabled on all Windows endpoints and servers."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process creation logs for command lines matching regex patterns for SSP abuse, such as '(?i)mimikatz', 'Install-SSP', 'Security\\\\sPackages', or 'AddSecurityPackage'. ALERT on any match."
  - question: "Are there command-line executions with unusually high entropy or length that also reference LSA or Security Packages?"
    context: "To evade simple keyword-based detection, adversaries often obfuscate their commands. This can result in command lines with unusually high character entropy or length. This question flags command lines that are statistical outliers in terms of length or entropy, especially when they also contain keywords related to LSA, to find potentially obfuscated SSP manipulation commands."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Process creation logs with command-line auditing enabled on all Windows endpoints and servers."
    range: "last 90 days"
    queries:
      - "pseudocode: For all process creation events, CALCULATE command-line entropy and length. FLAG commands in the 99th percentile for either metric, especially if they contain keywords like 'Lsa' or 'Security Packages'."
  - question: "Does a machine learning model classify a recent command-line execution as likely related to malicious Security Support Provider (SSP) manipulation?"
    context: "This question uses a trained text classification model to analyze and score the content of command lines. By learning from a labeled dataset of benign and malicious commands, the model can identify subtle characteristics and n-gram patterns associated with SSP abuse, providing a more robust detection method than static rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Process creation logs with command-line auditing enabled on all Windows endpoints and servers."
    range: "last 90 days"
    queries:
      - "pseudocode: For each new command-line execution, APPLY a pre-trained text classification model. ALERT if the model returns a high probability score for being malicious and related to SSP manipulation."
  - question: "Was the Security Packages registry key modified by a process chain that originated from a non-administrative user account?"
    context: "Modifying the SSP registry key requires administrative privileges. If this modification is traced back to a process chain initiated by a standard, non-administrative user, it is a strong indicator that a privilege escalation exploit was used. This question involves reconstructing the process lineage to verify the permissions of the originating user."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 1"
      - "Windows Event ID 4624"
      - "Logon session, process creation, and registry audit logs across all Windows systems."
    range: "last 90 days"
    queries:
      - "pseudocode: For an SSP registry write (WinEvent 4657), TRACE the ProcessID back via parent processes (Sysmon 1) to the original logon session (WinEvent 4624). CHECK the user's group memberships. ALERT if the originating user is not an administrator."
  - question: "Was the Security Packages registry key modified by a user account not on the approved list of administrators?"
    context: "This question employs a strict, zero-trust approach to monitoring SSP registry modifications. It assumes that only a specific, pre-approved list of administrative or system deployment accounts should ever perform this action. Any modification made by a user account not on this explicit allowlist is immediately flagged as unauthorized and highly suspicious."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 1"
      - "Windows Event ID 4624"
      - "Logon session, process creation, and registry audit logs across all Windows systems."
    range: "last 90 days"
    queries:
      - "pseudocode: For each SSP registry modification, IDENTIFY the user account responsible. ALERT if the account name is not on a curated allowlist of authorized administrative accounts."
  - question: "Can a graph-based analysis reveal a path from a non-administrative user to a successful modification of the Security Packages registry key?"
    context: "This question models system activity as a graph, where users, processes, and registry keys are nodes and their interactions are edges. By querying this graph, an analyst can search for explicit paths that show a non-administrative user successfully executing a chain of actions that results in a write to the protected SSP registry key, providing strong, contextual evidence of privilege escalation."
    answer_sources:
      - "Windows Event ID 4657"
      - "Sysmon Event ID 1"
      - "Windows Event ID 4624"
      - "Logon session, process creation, and registry audit logs across all Windows systems."
    range: "last 90 days"
    queries:
      - "pseudocode: CONSTRUCT a graph of users, sessions, processes, and registry keys from event logs. SEARCH for paths from any 'non-admin user' node to the 'SSP registry key' node. The existence of such a path is a high-confidence alert."
  - question: "Following a system reboot on a host with a prior suspicious Security Support Provider (SSP) modification, was a command shell spawned by lsass.exe?"
    context: "The ultimate goal of SSP abuse is often to gain persistent, SYSTEM-level code execution. A highly anomalous indicator of success is the lsass.exe process spawning a command shell (cmd.exe or powershell.exe). This question looks for this specific, high-confidence event on hosts that have already been flagged for suspicious SSP registry activity and have since been rebooted."
    answer_sources:
      - "Windows Event ID 4657"
      - "Windows Event ID 4688"
      - "Windows Event ID 6005"
      - "Sysmon Event ID 1"
      - "Process creation and system event logs on all Windows systems, especially those flagged for suspicious registry activity."
    range: "last 90 days"
    queries:
      - "pseudocode: TAG hosts with suspicious SSP modifications. After a reboot (WinEvent 6005) on a tagged host, ALERT if a process creation event shows 'lsass.exe' as the parent of 'cmd.exe' or 'powershell.exe'."
  - question: "After a reboot on a host with a prior suspicious Security Support Provider (SSP) modification, did any unusual processes run as NT AUTHORITY\\SYSTEM?"
    context: "This question establishes a baseline of normal processes that execute with SYSTEM privileges during the first few minutes of system startup. On a host that has been flagged for potential SSP tampering, it monitors the next boot sequence and compares the running SYSTEM processes against this baseline. Any new or unexpected process is flagged as a potential malicious payload executed by the SSP."
    answer_sources:
      - "Windows Event ID 6005"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Process creation and system event logs on all Windows systems, especially those flagged for suspicious registry activity."
    range: "last 90 days"
    queries:
      - "pseudocode: For each host group, BASELINE the set of process names that run as SYSTEM within 10 minutes of boot. On a host flagged for SSP modification, monitor its next boot and ALERT on any SYSTEM process not in the baseline."
  - question: "Following a suspicious Security Support Provider (SSP) modification, was there a statistically anomalous spike in the number of processes running as SYSTEM after the next reboot?"
    context: "This question uses a time-series model to learn the normal rate and volume of process creation under the SYSTEM context during a typical boot sequence. If a host is flagged for SSP modification, this model is applied to its next boot. A significant, unpredicted spike in the number of SYSTEM processes indicates an anomaly, likely caused by the malicious SSP executing its payload."
    answer_sources:
      - "Windows Event ID 6005"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Process creation and system event logs on all Windows systems, especially those flagged for suspicious registry activity."
    range: "last 90 days"
    queries:
      - "pseudocode: TRAIN a time-series model on the count of new SYSTEM processes per minute during normal boot sequences. On a flagged host, apply the model to the next boot sequence and ALERT if a significant, unpredicted spike in processes occurs."