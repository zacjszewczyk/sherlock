name: 'T1596: Search Open Technical Databases'
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary is conducting reconnaissance against the enterprise using open technical databases. It provides investigative questions to detect various reconnaissance techniques, including widespread and low-and-slow port scanning from external IPs; inbound web requests with suspicious User-Agents or URI patterns indicative of automated tools; spikes in authentication failures suggesting password spraying or the use of compromised credentials from public data breaches; and anomalous DNS query patterns like zone transfer attempts or subdomain enumeration.
type: technique
related:
- 'TA0043: Reconnaissance'
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are known internet scanners or malicious IPs targeting non-public or sensitive ports on our network?
  context: This question aims to identify reconnaissance activity by cross-referencing inbound traffic with threat intelligence feeds. Matching source IPs from known scanners (like Shodan, Censys, GreyNoise) against connection logs helps detect targeted probing of sensitive ports (e.g., SSH, RDP) that are not meant for public access. An alert here indicates an adversary is actively scanning our perimeter for specific vulnerabilities.
  answer_sources:
  - Zeek conn.log
  - Internet gateways, external-facing firewalls, and cloud network flow logs.
  range: last 5 minutes
  queries:
  - query: tech: pseudocode
    value: JOIN (SELECT source_ip FROM zeek_conn_logs WHERE time > NOW() - 5m) WITH (SELECT ip FROM cti_scanner_feed) ON source_ip = ip WHERE destination_port IN (22, 3389, 5985)
- question: Are any external IP addresses scanning an unusually high number of unique ports on our network?
  context: This question helps detect port scanning behavior that isn't from a previously known malicious IP. By calculating the number of unique ports an external IP tries to connect to in a short timeframe (one hour), we can spot outliers. An IP contacting a number of ports far exceeding the normal baseline (e.g., 98th percentile) is a strong indicator of a port scan, where an adversary is mapping out available services.
  answer_sources:
  - Zeek conn.log
  - Internet gateways, external-facing firewalls, and cloud network flow logs.
  range: last 1 hour
  queries:
  - query: tech: pseudocode
    value: SELECT source_ip, COUNT(DISTINCT destination_port) AS unique_ports FROM zeek_conn_logs WHERE time > NOW() - 1h GROUP BY source_ip HAVING unique_ports > (SELECT percentile(unique_ports, 98) FROM baseline_stats)
- question: Is there an anomalous spike in connection attempts from the category of known internet scanners, suggesting a targeted campaign?
  context: This question moves beyond individual scanners to detect coordinated campaigns. By monitoring the total volume of traffic from all known scanner IPs over time and applying a time-series model (like ARIMA), we can forecast expected traffic levels. A significant deviation from this forecast indicates an unusual increase in scanning activity, possibly signaling the start of a broader, more focused reconnaissance effort against our organization.
  answer_sources:
  - Zeek conn.log
  - Internet gateways, external-facing firewalls, and cloud network flow logs.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: APPLY time_series_anomaly_detection ON (SELECT COUNT(*) FROM zeek_conn_logs WHERE source_ip IN (SELECT ip FROM cti_scanner_feed)) GROUP BY time_bucket. ALERT IF anomaly_score > threshold
- question: Are we observing inbound web requests with User-Agents or URIs that match signatures of known scanning and vulnerability assessment tools?
  context: This question focuses on identifying automated reconnaissance tools by inspecting the details of HTTP/S requests. Tools like 'masscan', 'nuclei', or 'nessus' often leave specific fingerprints in the User-Agent string or request URI. Using regular expressions to search for these known signatures in web server logs is a direct and effective way to detect when an adversary is using off-the-shelf tools to scan our web applications for vulnerabilities.
  answer_sources:
  - Zeek http.log
  - Internet-facing web servers, load balancers, and reverse proxies.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: SELECT * FROM zeek_http_logs WHERE user_agent MATCHES ('masscan|zgrab|nuclei|nessus|X-Censys-Scanner') OR uri MATCHES ('known_scanner_pattern')
- question: Are any external IP addresses exhibiting non-human browsing behavior, indicated by very low randomness in their requested URIs?
  context: This question aims to detect automated scanning that avoids using known tool signatures. Human users typically browse a website by clicking various links, resulting in a high degree of randomness (high entropy) in the sequence of requested URIs. An automated script, however, might request the same few paths repeatedly or iterate through a predictable list, resulting in low entropy. Identifying source IPs with abnormally low URI entropy helps uncover stealthier scanning bots.
  answer_sources:
  - Zeek http.log
  - Internet-facing web servers, load balancers, and reverse proxies.
  range: last 15 minutes
  queries:
  - query: tech: pseudocode
    value: SELECT source_ip, SHANNON_ENTROPY(uri) AS uri_entropy FROM zeek_http_logs WHERE time > NOW() - 15m GROUP BY source_ip HAVING uri_entropy < (SELECT percentile(entropy, 5) FROM baseline_entropy_stats)
- question: Can we use a machine learning model to classify inbound HTTP requests as scanner traffic, even if they lack obvious signatures?
  context: This question proposes a more advanced, behavioral approach to detecting scanner traffic that has been designed to evade simple signature- or entropy-based checks. By training a machine learning model on a variety of features (e.g., URI structure, header count, request frequency), the system can learn the subtle, combined characteristics of scanner activity. This allows for the real-time scoring and identification of sophisticated scanners that mimic benign traffic.
  answer_sources:
  - Zeek http.log
  - Internet-facing web servers, load balancers, and reverse proxies.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: APPLY classification_model ON (SELECT features FROM zeek_http_logs). ALERT IF prediction == 'scanner' AND score > confidence_threshold
- question: Are external entities attempting to connect to 'honey-ports' that should never receive legitimate traffic?
  context: This question describes a high-fidelity detection method using honey-portsâ€”network ports that are intentionally left open but are not used by any legitimate service. Any connection attempt to these ports is, by definition, unauthorized and suspicious. An alert on a honey-port hit is a strong indicator of reconnaissance scanning, as the scanner is indiscriminately probing all ports, not just known-good ones.
  answer_sources:
  - Zeek conn.log
  - Network perimeter firewalls, internet gateways, and DMZ network segments.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: SELECT * FROM firewall_logs WHERE source_ip IS_EXTERNAL AND destination_port IN (honey_port_list)
- question: Are any external IPs conducting 'low-and-slow' scans, characterized by connecting to many different hosts but only a few times per host?
  context: This question targets a stealthy scanning technique known as 'low-and-slow'. Adversaries use this method to avoid triggering simple rate-based alerts. They scan a wide range of hosts across the organization's IP space but keep the connection frequency to each individual host very low. By analyzing traffic over a longer period (24 hours) and looking for IPs with a high unique host count but low per-host connection count, we can unmask this otherwise hidden reconnaissance activity.
  answer_sources:
  - Zeek conn.log
  - Network perimeter firewalls, internet gateways, and DMZ network segments.
  range: last 24 hours
  queries:
  - query: tech: pseudocode
    value: SELECT source_ip FROM zeek_conn_logs WHERE time > NOW() - 24h GROUP BY source_ip HAVING COUNT(DISTINCT dest_host) > 95th_percentile AND AVG(connections_per_host) < 5th_percentile
- question: Can we identify coordinated, distributed 'low-and-slow' scans by clustering connection events from multiple source IPs?
  context: This question addresses the challenge of detecting scans distributed across multiple source IPs. A single IP might not trigger any alerts, but when viewed together, the activity forms a clear pattern. Using a clustering algorithm like DBSCAN on connection features (source IP, port, time between connections) can automatically group these seemingly unrelated events. This reveals a coordinated scan that would be invisible to methods that only analyze IPs in isolation.
  answer_sources:
  - Zeek conn.log
  - Network perimeter firewalls, internet gateways, and DMZ network segments.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: APPLY DBSCAN_clustering ON (SELECT source_ip, dest_port, inter_arrival_time FROM zeek_conn_logs). ALERT on clusters indicating coordinated scan patterns.
- question: Have any dormant accounts, whose usernames are publicly exposed, recently had a successful external login?
  context: This question aims to detect the compromise of accounts that were identified through public data breaches or reconnaissance. Adversaries often collect usernames and emails from public sources. A successful login to an account on this watchlist, especially one that has been inactive for a long time (e.g., >90 days), is a major red flag. It strongly suggests that the account's credentials have been compromised and are now being used by an attacker.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS servers, VPN concentrators, and other external authentication gateways (e.g., OWA).
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: SELECT user FROM successful_logins (EventID 4624) WHERE source IS_EXTERNAL AND user IN (publicly_exposed_watchlist) AND last_login_time < NOW() - 90d
- question: Are we observing an abnormal number of authentication failures for a specific user or an entire service, indicating a potential password spraying attack?
  context: This question is designed to detect password spraying attacks, where an adversary tries a few common passwords against many different user accounts. This avoids locking out individual accounts. By monitoring authentication failures (Event ID 4625), we can detect this in two ways; a sudden spike in failures for a single user (brute force) or a service-wide increase in failures across many users (password spray). Alerting on deviations from the established baseline helps catch these attempts early.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS servers, VPN concentrators, and other external authentication gateways (e.g., OWA).
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: SELECT user, COUNT(failures) FROM auth_failures (EventID 4625) GROUP BY user. ALERT IF COUNT > 4 * stdev(user_baseline) OR (SELECT COUNT(failures) FROM service_failures) > 99th_percentile(service_baseline)
- question: Are there any successful logins that are anomalous based on the user's typical geographic location or login times?
  context: This question focuses on detecting compromised accounts by analyzing the context of a successful login (Event ID 4624). Even if the password is correct, the login might be illegitimate. By baselining each user's normal behaviorâ€”their typical login locations (via IP geolocation) and timesâ€”we can flag successful logins that deviate from this pattern. A login from an impossible-to-travel-to location or at a highly unusual time for that user is a strong indicator of account takeover.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Zeek conn.log
  - Domain Controllers, ADFS servers, VPN concentrators, and other external authentication gateways (e.g., OWA).
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: FOR each successful_login (EventID 4624): score = calculate_anomaly(source_ip_geolocation, login_time, user_baseline). ALERT IF score > threshold
- question: Are we receiving DNS queries for zone transfers (AXFR/ANY) from external sources?
  context: This question aims to detect a specific and aggressive reconnaissance technique; a DNS zone transfer. An AXFR or ANY query attempts to download all DNS records for a given domain, effectively handing the adversary a complete map of the organization's servers and services. These queries should never come from an untrusted external source, so any such attempt is a high-severity event that requires immediate investigation.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - External DNS servers, internal DNS resolvers forwarding external queries, and network egress points.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: SELECT * FROM zeek_dns_logs WHERE query_type IN ('AXFR', 'ANY') AND source_is_external
- question: Are any external IPs generating an unusually high ratio of NXDOMAIN (non-existent domain) responses, indicating subdomain brute-forcing?
  context: This question is designed to detect subdomain enumeration via brute-forcing. An adversary will try to guess subdomains (e.g., 'dev.example.com', 'vpn.example.com') using a large wordlist. Most of these guesses will fail, resulting in a high number of NXDOMAIN responses from the DNS server. By monitoring the ratio of NXDOMAINs to total queries for each source IP, we can identify and alert on IPs that are performing this type of reconnaissance.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - External DNS servers, internal DNS resolvers forwarding external queries, and network egress points.
  range: last 5 minutes
  queries:
  - query: tech: pseudocode
    value: SELECT source_ip, RATIO(COUNT(WHERE response_code='NXDOMAIN'), COUNT(*)) AS nx_ratio FROM zeek_dns_logs WHERE time > NOW() - 5m GROUP BY source_ip. ALERT IF nx_ratio > 99th_percentile
- question: Can we use machine learning to detect anomalous DNS queries and correlate them with subsequent connection attempts to increase confidence?
  context: This question proposes a method for finding novel or unusual DNS-based reconnaissance that might not fit simple patterns. An anomaly detection model like Isolation Forest can analyze multiple features of a DNS query (length, structure, etc.) to flag outliers. To reduce false positives and prioritize alerts, this detection is then correlated; if the same source IP that made the anomalous DNS query then attempts to connect to the resolved IP address shortly after, it significantly increases the confidence that this is malicious reconnaissance-followed-by-action.
  answer_sources:
  - Zeek dns.log
  - Zeek conn.log
  - External DNS servers, internal DNS resolvers forwarding external queries, and network egress points.
  range: last 90 days
  queries:
  - query: tech: pseudocode
    value: anomalous_dns = APPLY IsolationForest ON (SELECT features FROM zeek_dns_logs). FOR each anomaly in anomalous_dns: CHECK for connection in zeek_conn_logs FROM anomaly.source_ip TO anomaly.resolved_ip within 5 minutes. ALERT IF found.