name: T1592.002: Software
id: 9a8f7b6c-5d4e-4f3c-2b1a-09876543210f
description: This playbook focuses on identifying if an adversary is gathering information about the organization's software. It provides methods to detect reconnaissance activities such as connections from known malicious IP addresses, the use of scanning tool signatures (e.g., Nmap, Nikto), automated scanning behaviors like high-volume port connections or requests for non-existent paths, the exposure of verbose error messages or software banners in responses, and internal hosts connecting to newly registered or known malicious domains associated with reconnaissance frameworks.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any inbound connections originating from IP addresses known to be associated with scanners, TOR exit nodes, malicious proxies, or threat actor C2 infrastructure?
    context: This question aims to identify direct connection attempts from known malicious sources. Correlating inbound traffic against a threat intelligence feed is a fundamental step in detecting early-stage reconnaissance, as adversaries often use compromised systems, scanners, or anonymizing services to probe target networks without revealing their true origin. Answering this helps proactively block or monitor suspicious IPs.
    answer_sources:
      - Zeek conn.log
      - Network perimeter/internet gateway
      - Firewall logs
      - External-facing DNS servers
      - Threat Intelligence Feed
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH inbound_connections | JOIN source_ip WITH threat_intel_feed ON ip | WHERE threat_intel_feed.ip IS NOT NULL | ALERT
  - question: Are any external IP addresses exhibiting behavior indicative of port scanning by connecting to an anomalously high ratio of unique destination ports?
    context: This question seeks to identify port scanning activity through statistical analysis. Adversaries scan for open ports to identify potential services to exploit. A high ratio of connections to unique ports, compared to the total number of connections from a single IP, is a strong indicator of this behavior. Flagging outliers helps detect scanners that may not yet be on a threat intelligence list.
    answer_sources:
      - Zeek conn.log
      - Network perimeter/internet gateway
      - Firewall logs
      - External-facing DNS servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH inbound_connections in last 5min | STATS unique_dest_ports, total_connections BY source_ip | CALCULATE ratio = unique_dest_ports / total_connections | WHERE ratio > 99th_percentile_baseline | ALERT source_ip
  - question: Is there a significant and unexpected increase in connection volume from IP addresses classified as high-risk by a reputation model?
    context: This question uses machine learning to detect anomalies in traffic from potentially malicious sources. An IP reputation model can score IPs that are not on a static threat list. By forecasting the expected volume of traffic from high-risk IP categories, we can alert on sudden spikes that deviate from the norm, which could indicate a coordinated reconnaissance campaign.
    answer_sources:
      - Zeek conn.log
      - Network perimeter/internet gateway
      - Firewall logs
      - External-facing DNS servers
      - IP Reputation Model
      - Time Series Forecasting Model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each inbound_connection | SCORE source_ip with ip_reputation_model | FORECAST expected_volume for high_risk_category | IF actual_volume > forecast_upper_bound | ALERT
  - question: Are we observing inbound HTTP/S requests with User-Agent strings, URI paths, or JA3/JA3S hashes that match signatures of known scanning tools?
    context: This question focuses on identifying reconnaissance tools by their specific signatures in web traffic. Tools like Nmap, Nikto, and Metasploit often use default or recognizable User-Agent strings, JA3/S fingerprints, or probe for specific sensitive file paths (e.g., /.git/config). Detecting these signatures provides direct evidence of an adversary's attempt to fingerprint web applications and servers.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Public-facing web servers
      - Reverse proxies
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH inbound_http_or_ssl_logs | MATCH User-Agent, JA3_hash, or URI against known_scanner_signatures | ALERT on match
  - question: Are any external source IPs generating HTTP requests with unusually high URI path entropy, suggesting directory or file enumeration?
    context: This question aims to detect automated scanning for hidden files or directories. An adversary attempting to brute-force or guess file/directory names will generate many requests with random-looking, high-entropy URI paths. Calculating the Shannon entropy of URIs requested by a single IP and flagging high-entropy outliers can reveal this enumeration activity, which is a common precursor to exploitation.
    answer_sources:
      - Zeek http.log
      - Public-facing web servers
      - Reverse proxies
      - Web Application Firewalls (WAFs)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH http_logs in last 10min | CALCULATE shannon_entropy of URI_path BY source_ip | WHERE entropy_score > 98th_percentile_baseline | ALERT source_ip
  - question: Can we distinguish and flag malicious scanning requests from benign web traffic using a classification model?
    context: This question leverages machine learning to identify scanning behavior that may not be caught by simple signature or statistical methods. By training a classifier on features like URI length, character types, and User-Agent rarity, it is possible to identify subtle patterns of malicious requests. This provides a more robust and adaptive detection method for sophisticated scanning techniques.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Public-facing web servers
      - Reverse proxies
      - Web Application Firewalls (WAFs)
      - Logistic Regression Model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each http_request | EXTRACT features (URI_length, special_chars, User-Agent_rarity) | APPLY classification_model | IF prediction is 'malicious' with high_confidence | ALERT
  - question: Has any single external IP address connected to an excessive number of unique destination ports within a short time frame?
    context: This question seeks to identify blatant port scanning activity by setting a clear, high-volume threshold. When an adversary's scanner is not configured for stealth, it may rapidly connect to hundreds or thousands of ports. A simple rule that alerts when an IP crosses a high threshold (e.g., 100 unique ports in one minute) provides a high-confidence indicator of aggressive, automated reconnaissance.
    answer_sources:
      - Zeek conn.log
      - Demilitarized Zone (DMZ)
      - Network edge firewalls
      - Public-facing application servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH connection_logs in last 1min | COUNT distinct destination_ports BY source_ip | WHERE distinct_port_count > 100 | ALERT source_ip
  - question: Are any external IP addresses generating a statistically significant rate of HTTP 404 'Not Found' errors?
    context: This question aims to detect web content discovery and forced browsing attempts. Adversaries often scan for unlinked or hidden web pages and directories, which results in a high number of requests for non-existent paths and a corresponding spike in HTTP 404 errors from the server. Monitoring the 404 rate per IP and comparing it against a baseline can effectively uncover this enumeration activity.
    answer_sources:
      - Zeek http.log
      - Demilitarized Zone (DMZ)
      - Network edge firewalls
      - Public-facing application servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH http_logs in last 5min | CALCULATE rate of HTTP_404_responses BY source_ip | WHERE rate > 95th_percentile_baseline | ALERT source_ip
  - question: Are there anomalous clusters of connection events that indicate targeted scanning from a single source across multiple ports?
    context: This question uses unsupervised machine learning to find subtle scanning patterns that deviate from normal traffic. A density-based clustering algorithm like DBSCAN can group normal, high-volume traffic into dense clusters. Targeted scanning from a single IP to various ports will appear as a sparse, anomalous cluster, allowing for detection of slow or distributed scanning that might evade threshold-based rules.
    answer_sources:
      - Zeek conn.log
      - Demilitarized Zone (DMZ)
      - Network edge firewalls
      - Public-facing application servers
      - DBSCAN Clustering Model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: INPUT connection_events (source_ip, dest_port, protocol) to DBSCAN_model | IDENTIFY and ALERT on anomalous, sparse clusters
  - question: Are our public-facing applications returning verbose error messages or software version banners in HTTP responses to external users?
    context: This question addresses the risk of information leakage through application responses. Adversaries can craft requests to deliberately trigger errors or elicit server banners, revealing details like software versions, internal paths, and database schemas. Searching for keywords (e.g., 'stack trace') and version patterns in outbound traffic helps identify misconfigurations that provide valuable intelligence to an attacker.
    answer_sources:
      - Zeek http.log
      - Windows Application Event Log
      - Public-facing web servers and applications
      - Application-level logging systems
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH http_response_bodies and app_logs for external_requests | MATCH content against regex for 'stack trace', 'fatal error', or version patterns (e.g., 'Apache/x.y.z') | ALERT on match
  - question: Is there a significant deviation in the normal distribution of HTTP status codes for any application, such as a spike in server errors?
    context: This question uses statistical analysis to detect anomalies in server behavior that may indicate reconnaissance. A sudden, sharp increase in 5xx server errors, especially when correlated with a specific source IP, can indicate that an adversary is probing for vulnerabilities by sending malformed requests. A Chi-squared test can quantify this deviation from the established baseline distribution of status codes.
    answer_sources:
      - Zeek http.log
      - Public-facing web servers and applications
      - Application-level logging systems
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ESTABLISH baseline_status_code_distribution per application | FOR current_traffic, CALCULATE current_distribution | USE Chi-squared test to compare current vs. baseline | ALERT on significant deviation
  - question: Are we observing any anomalous HTTP response sizes that could indicate the leakage of verbose error messages?
    context: This question applies machine learning to detect information leakage based on response size. Verbose error messages and stack traces are typically much larger than standard application responses. A time series anomaly detection model, such as an LSTM autoencoder, can learn the normal pattern of response sizes for an application and flag unusually large responses that have a high reconstruction error, indicating a potential information leak.
    answer_sources:
      - Zeek http.log
      - Public-facing web servers and applications
      - Application-level logging systems
      - LSTM Autoencoder Model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each application | TRAIN LSTM autoencoder on historical response sizes | APPLY model to live traffic | IF reconstruction_error > threshold | ALERT
  - question: Is any internal host resolving and connecting to domains known to host reconnaissance frameworks or malicious infrastructure?
    context: This question aims to detect watering hole attacks or the execution of malicious reconnaissance scripts on internal assets. If an internal host is compromised or a user browses to a compromised site, it may connect to domains hosting fingerprinting frameworks like ScanBox. Correlating outbound DNS and connection logs with threat intelligence can identify these compromised hosts.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Internal user workstations
      - DNS resolvers
      - Egress points/Network proxy servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH outbound_dns_queries | JOIN resolved_domain with threat_feed on domain_name | WHERE threat_feed.category is 'reconnaissance_framework' or 'malicious' | ALERT on internal_host
  - question: Are any internal hosts querying an anomalous number of newly registered domains (NRDs)?
    context: This question seeks to identify potential C2 or reconnaissance activity by focusing on NRDs, which are frequently used by adversaries. A compromised host may exhibit a sudden increase in DNS queries for domains registered within the last 30 days. By establishing a baseline for NRD query counts per host or peer group, it's possible to alert on significant deviations that suggest malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Internal user workstations
      - DNS resolvers
      - Egress points/Network proxy servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ENRICH dns_logs with domain_registration_date | COUNT queries to NRDs (<30 days old) per host daily | WHERE NRD_count > (mean_for_peer_group + 3 * stdev) | ALERT on host
  - question: Can we identify high-risk outbound web connections using a machine learning model based on domain features?
    context: This question uses a supervised learning model to proactively score the risk of outbound connections, helping to detect watering hole attacks or C2 communication. A random forest classifier can be trained on features like domain age, reputation, and whether it's an NRD. This allows for the flagging of high-risk connections that may not yet be on a static blocklist, providing an early warning of potential compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Internal user workstations
      - DNS resolvers
      - Egress points/Network proxy servers
      - Random Forest Model
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each outbound_connection | EXTRACT features (domain_age, reputation, is_NRD) | APPLY random_forest_model | IF prediction is 'high-risk' | ALERT