name: T1537: Transfer Data to Cloud Account
id: 4e9b8f1a-6d0c-4e8b-9a2c-1f4d3e2b1a0c
description: This playbook helps investigate potential data exfiltration where an adversary transfers data to a cloud account they control. It focuses on detecting unauthorized or anomalous sharing of cloud resources like storage snapshots or access keys. Indicators include cloud audit logs showing shares to unknown or malicious accounts, command-line execution of cloud CLI tools with sharing commands, unusual spikes in network egress traffic to cloud providers, sharing actions performed by unauthorized users or from unusual locations, and sharing data with external cloud accounts for the first time.
type: technique
related:
- TA0010: Exfiltration
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are cloud resources being shared with accounts that are known-malicious or not on an approved partner list?
  context: This question aims to identify direct evidence of data exfiltration by checking if cloud resource sharing events (like modifying snapshot attributes or listing storage account keys) are directed towards external accounts that are either explicitly blocked or not explicitly permitted. A match could indicate a misconfiguration or a deliberate attempt to transfer data to an unauthorized party.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Cloud IAM and resource management APIs
  - SIEM alert dashboards
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search cloud_audit_logs where event_name in ('ModifySnapshotAttribute', 'Microsoft.Storage/storageAccounts/listkeys/action') | extract target_account_id | lookup allow_list, block_list | where target_account_id is on block_list or target_account_id is not on allow_list
- question: Has a user shared a cloud resource with an external account for the first time?
  context: This question focuses on detecting anomalous user behavior. By establishing a baseline of which external accounts a user normally shares resources with, we can identify when a user shares with a new, previously unseen account. This 'first-time share' could be a strong indicator of a compromised account being used for exfiltration, especially when correlated with the user's role and recent activity.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Cloud IAM and resource management APIs
  - SIEM alert dashboards
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each user, search historical_cloud_audit_logs to build baseline_of_shared_accounts | for each new_sharing_event, check if target_account_id is in user_baseline | alert if target_account_id is not present
- question: Does a cloud resource sharing event exhibit characteristics of malicious activity based on a machine learning model?
  context: This question leverages a machine learning model to provide a probabilistic assessment of risk. Instead of relying on simple rules, it analyzes multiple features of a sharing event (like user role, source IP, time of day, resource type, and target account reputation) to calculate a maliciousness score. Events exceeding a certain risk threshold are prioritized for immediate investigation, allowing analysts to focus on the most likely threats.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Cloud IAM and resource management APIs
  - SIEM alert dashboards
  range: last 90 days
  queries:
  - technology: pseudocode
    query: ingest cloud_sharing_events | featurize (user_role, source_ip_rep, time_of_day, etc.) | predict malicious_probability with classification_model | alert if probability > 0.85
- question: Are command-line tools like 'aws.exe' or 'az.cmd' being used on endpoints to execute commands associated with sharing cloud resources?
  context: This question seeks to detect the execution of specific cloud CLI commands on host systems that are used to share data or modify permissions for exfiltration. Monitoring for command-line arguments like `modify-snapshot-attribute` or `storage blob sas generate` provides direct evidence of an attempt to configure data sharing at the endpoint level, which might bypass some cloud-native detections.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Developer workstations
  - Administrator jump boxes
  - and CI/CD pipeline build agents
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search process_creation_logs where process_name in ('aws.exe', 'az.cmd') and command_line contains ('modify-snapshot-attribute', 'put-bucket-policy', 'storage blob sas generate')
- question: Is there a sudden decrease in the variety of cloud CLI commands being run on a host, suggesting automated or scripted malicious activity?
  context: This question uses entropy to detect anomalous, repetitive command-line activity. A legitimate user typically runs a diverse set of commands. An attacker, however, might use a script that repeatedly runs the same exfiltration command. This would cause a sharp drop in the statistical randomness (entropy) of the commands executed on that host, signaling a potential automated attack.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Developer workstations
  - Administrator jump boxes
  - and CI/CD pipeline build agents
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each host, profile cloud_cli_command_distribution over 30_days | calculate daily_shannon_entropy | alert if daily_entropy drops > 2_std_dev below historical_average
- question: Can the command-line arguments used with cloud CLI tools be classified as 'suspicious-data-sharing' by an NLP model?
  context: This question applies Natural Language Processing (NLP) to understand the intent behind a command line, rather than just matching keywords. A fine-tuned model can differentiate between benign administrative commands and those specifically crafted for sharing or exfiltrating data, providing a more nuanced and accurate detection method that is harder for attackers to evade with simple command obfuscation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Developer workstations
  - Administrator jump boxes
  - and CI/CD pipeline build agents
  range: last 90 days
  queries:
  - technology: pseudocode
    query: from process_creation_logs, feed command_line into nlp_model | classify command_intent | alert if classification is 'suspicious-data-sharing'
- question: Has any internal host transferred an unusually large amount of data (e.g., >10 GB in an hour) to known cloud provider IP ranges?
  context: This question acts as a simple but effective tripwire for detecting bulk data exfiltration. By setting a high, static threshold for data egress to cloud provider networks, it aims to catch large, unsanctioned data transfers that could represent a significant data loss event. While prone to false positives in some environments, it's a valuable first line of defense.
  answer_sources:
  - Zeek conn.log
  - Firewall Egress Logs
  - Network egress points (e.g., firewalls, proxies) and VPN concentrators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: search network_flow_logs where destination_ip in cloud_provider_ranges | group by source_ip, time_window=1h | sum(bytes_out) as total_bytes | alert if total_bytes > 10_GB
- question: Is the volume of data being sent from an internal host to cloud providers significantly higher than its own historical baseline for this time of day and week?
  context: This question provides a more dynamic and tailored approach to volumetric detection. Instead of a single static threshold for all hosts, it establishes a unique baseline for each host's normal egress traffic patterns. An alert is triggered only when a host's traffic significantly deviates (e.g., by 3 standard deviations) from its own expected behavior, reducing false positives and more accurately identifying anomalous transfers.
  answer_sources:
  - Zeek conn.log
  - Firewall Egress Logs
  - Network egress points (e.g., firewalls, proxies) and VPN concentrators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each source_ip, create 30_day_baseline of hourly_egress_volume to cloud_ips | calculate mean and std_dev for each hour | alert if current_hour_volume > (mean + 3 * std_dev)
- question: Has the volume of egress data from an internal host to cloud providers exceeded the level predicted by a time-series forecasting model?
  context: This is the most sophisticated volumetric analysis, using a forecasting model to predict the expected range of egress traffic for the next time period. It can account for seasonality, trends, and other complex patterns in the data. An alert is generated when the actual observed traffic exceeds the model's prediction (e.g., the 99% confidence interval), indicating a statistically improbable event that is highly likely to be a true anomaly.
  answer_sources:
  - Zeek conn.log
  - Firewall Egress Logs
  - Network egress points (e.g., firewalls, proxies) and VPN concentrators
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each host, train time_series_model on historical_egress_data | predict expected_volume and confidence_interval for next_hour | alert if actual_volume > upper_bound_of_confidence_interval
- question: Was a cloud data sharing action initiated by a user or from a host that is not on a pre-approved list of authorized entities?
  context: This question enforces a policy of least privilege by checking every data sharing action against an explicit allow-list of authorized users and hosts. Any sharing event originating from an entity not on this list is an immediate policy violation and a strong indicator of a potential threat, whether from an external attacker or an insider.
  answer_sources:
  - Windows Event ID 4688
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Active Directory security logs
  - Active Directory domain controllers
  - Cloud IAM service
  - and corporate workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each sharing_event, extract user_id and source_hostname | lookup authorized_sharers_list | alert if user_id or source_hostname is not on list
- question: Did a user initiate a cloud data sharing action from a source IP or hostname they have never or rarely used before?
  context: This question aims to detect credential theft or session hijacking by identifying when a user's account performs a sensitive action from an anomalous location. By profiling the typical source IPs and hosts for each user, we can flag sharing events that originate from a novel or statistically rare source for that specific user, suggesting their credentials may be compromised.
  answer_sources:
  - Windows Event ID 4688
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Active Directory security logs
  - Active Directory domain controllers
  - Cloud IAM service
  - and corporate workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: for each user, profile historical source_ips and hostnames | for each new_sharing_event, check if user_source_pair is new or has a frequency < 1% | alert if true
- question: Did a user perform a cloud data sharing action that is uncharacteristic of the behavior of their peer group (e.g., other developers, finance team members)?
  context: This question moves beyond individual baselines to compare a user's actions against their peers. Users are clustered into groups based on their typical activity. A data sharing action is flagged as suspicious if it's common for an attacker but highly unusual for someone in that user's role or behavioral group (e.g., a finance user suddenly using developer-like API calls to share data).
  answer_sources:
  - Windows Event ID 4688
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Active Directory security logs
  - Active Directory domain controllers
  - Cloud IAM service
  - and corporate workstations
  range: last 90 days
  queries:
  - technology: pseudocode
    query: cluster users into peer_groups based on activity | for each sharing_event, determine if action is anomalous for user's peer_group | alert if behavioral_deviation is detected
- question: Is data being shared with an external cloud account ID that has never been seen across the entire organization before?
  context: This question focuses on the novelty of the destination account. By maintaining a historical list of all external accounts data has ever been shared with, it can immediately flag the very first time a new, unknown external account is used as a target. This 'first contact' is a high-fidelity indicator of a potential exfiltration channel being established.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Cloud management plane API logs
  - SIEM or data lake holding historical logs
  range: last 180 days
  queries:
  - technology: pseudocode
    query: maintain set of all_historical_target_accounts | for each new_sharing_event, check if target_account_id is in the set | alert if not found, then add to set
- question: Is data being shared with an external cloud account that is a statistically rare destination for the organization?
  context: This question uses a statistical approach to quantify the rarity of a destination account. Accounts that are frequent sharing partners (like a trusted third party) will have a low rarity score, while an attacker's one-off account will have a very high score. This helps prioritize alerts, focusing analyst attention on shares to destinations that are not just new, but statistically unusual.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Cloud management plane API logs
  - SIEM or data lake holding historical logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: calculate frequency of all destination_account_ids over 90_days | compute inverse_document_frequency (IDF) score for each | alert on new_sharing_event if target_account_id has high IDF_score
- question: Does a new data sharing event represent an unlikely or anomalous relationship between an internal user and an external account, based on a graph model of historical interactions?
  context: This question models the organization's sharing behavior as a social network. It analyzes the structure of who shares with whom to predict which future connections are likely to be legitimate. A new sharing event that creates a connection the model deems highly improbable (e.g., a user from finance sharing with an account only ever used by R&D) is flagged as an anomalous relationship, potentially indicating a compromised account being used to bridge security boundaries.
  answer_sources:
  - AWS CloudTrail logs
  - Azure Activity Logs
  - Cloud management plane API logs
  - SIEM or data lake holding historical logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: model users and external_accounts as a bipartite_graph | use link_prediction_algorithm to score likelihood of new sharing_event (edge) | alert if likelihood_score is very low