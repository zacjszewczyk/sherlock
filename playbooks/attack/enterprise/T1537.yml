name: T1537: Transfer Data to Cloud Account
id: e7c8b9d0-f1a2-4b3c-8d4e-5f6a7b8c9d0e
description: This playbook focuses on detecting adversary exfiltration of data by transferring it to another cloud account. It provides investigative questions and queries to identify unauthorized or anomalous sharing of cloud resources (e.g., AWS snapshots, Azure storage) by monitoring cloud audit logs for suspicious events, analyzing endpoint command-line usage for sharing commands, tracking network data volumes for unusual egress spikes, verifying actions are taken by authorized personnel, and flagging when data is shared with new or statistically rare external accounts.
type: technique
related:
  - TA0010: Exfiltration
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a cloud resource being shared with an account that is not on an approved partner allow-list or is present on a known-malicious block-list?
    context: This question aims to detect direct data exfiltration by identifying when cloud resources, like AWS snapshots or Azure storage, are shared with external accounts that are not recognized as legitimate partners. Answering this is critical for catching unauthorized data transfers, as adversaries often use their own cloud accounts to stage or exfiltrate stolen data. A match against a block-list is a high-confidence indicator of malicious activity, while a target account not on the allow-list warrants immediate investigation for policy violation or potential compromise.
    answer_sources:
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Cloud IAM and resource management APIs
      - SIEM alert dashboards
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each cloud sharing event (e.g., AWS ModifySnapshotAttribute, Azure listkeys/action):
            EXTRACT target_account_id from requestParameters
            IF target_account_id IN known_malicious_blocklist:
              ALERT "Sharing with known malicious account"
            ELSE IF target_account_id NOT IN partner_allowlist:
              ALERT "Sharing with unauthorized/unknown account"
  - question: Has a user shared a cloud resource with an external account for the very first time?
    context: This question focuses on detecting anomalous user behavior. Adversaries, or insiders, might share data with new, untrusted accounts. By baselining a user's typical sharing partners, we can identify when they interact with a completely new external account. A "first-time share" is a significant deviation from normal activity and could indicate a compromised account or an initial act of data theft. The alert should be enriched with user context to assess the risk.
    answer_sources:
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Cloud IAM and resource management APIs
      - SIEM alert dashboards
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each user:
            historical_targets = GET unique target accounts shared with by user in last 90 days
          
          ON new sharing event by user to new_target_account:
            IF new_target_account NOT IN historical_targets:
              ALERT "First-time share by user to a new external account"
              ENRICH with user role, recent activity
  - question: Does a machine learning model classify a cloud resource sharing event as likely malicious based on its characteristics?
    context: This question leverages machine learning to move beyond simple rule-based detection. A model can analyze a combination of factors—such as the user's role, the reputation of their source IP, the time of day, and the rarity of the target account—to calculate a risk score. This approach helps identify sophisticated threats that might evade static rules by mimicking benign behavior in some aspects but deviating in others. Events with a high probability score represent a consolidated, high-fidelity signal of potential malicious activity.
    answer_sources:
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Cloud IAM and resource management APIs
      - SIEM alert dashboards
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          ON new cloud sharing event:
            EXTRACT features (user role, source IP reputation, time, resource type, target account frequency)
            malicious_probability = classification_model.predict(features)
            IF malicious_probability > 0.85:
              ALERT "ML model detected high-probability malicious share"
  - question: Was a cloud CLI command executed on an endpoint to share a resource or make it public?
    context: This question investigates the execution of specific, high-risk commands on endpoints like developer workstations or servers. Adversaries can use legitimate cloud command-line interface (CLI) tools to exfiltrate data. Monitoring for process creation events that include CLI binaries along with command-line arguments explicitly used for sharing (e.g., `modify-snapshot-attribute`, `put-bucket-policy`, `storage blob sas generate`) provides direct evidence of an attempt to transfer or expose data.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Developer workstations
      - Administrator jump boxes
      - CI/CD pipeline build agents
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          SEARCH process creation logs
          WHERE (ProcessName IS 'aws.exe' OR 'az.cmd' OR 'gcloud.cmd')
          AND (CommandLine CONTAINS 'modify-snapshot-attribute' OR 'put-bucket-policy' OR 'storage blob sas generate')
          ALERT "Suspicious cloud CLI sharing command executed"
  - question: Has the variety of cloud CLI commands on a specific host suddenly and significantly decreased, suggesting automated or scripted activity?
    context: This question seeks to identify automation, which is often used by adversaries to perform repetitive tasks like data exfiltration. While a human user typically runs a wide variety of commands, a malicious script might run the same sharing command repeatedly. This repetitive behavior leads to a sharp drop in the statistical complexity (Shannon entropy) of the command-line arguments observed on a host. Alerting on a significant entropy drop can uncover hidden, scripted attacks.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Developer workstations
      - Administrator jump boxes
      - CI/CD pipeline build agents
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each host:
            baseline_entropy_avg, baseline_entropy_stddev = CALCULATE from cloud CLI command distribution over last 30 days
            current_day_entropy = CALCULATE for today's commands
            IF current_day_entropy < (baseline_entropy_avg - 2 * baseline_entropy_stddev):
              ALERT "Anomalous drop in cloud CLI command entropy on host"
  - question: Has a natural language processing (NLP) model classified a cloud CLI command line as suspicious or related to data sharing?
    context: This question applies advanced NLP techniques to understand the intent behind a command line, even if it doesn't match a simple keyword. A fine-tuned transformer model can learn the patterns and syntax of malicious commands, allowing it to identify novel or obfuscated variations that static rules would miss. Classifying a command as 'suspicious-data-sharing' provides a high-confidence signal that requires immediate analyst attention.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Developer workstations
      - Administrator jump boxes
      - CI/CD pipeline build agents
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          ON new process creation event for cloud CLI:
            EXTRACT CommandLine
            classification = nlp_model.predict(CommandLine)
            IF classification IS 'suspicious-data-sharing':
              ALERT "NLP model classified CLI command as suspicious data sharing"
  - question: Has any internal host transferred an unusually large volume of data (e.g., >10 GB in an hour) to a known cloud provider?
    context: This question serves as a simple but effective tripwire for bulk data exfiltration. Adversaries often need to move large quantities of data out of the network. By monitoring network egress logs and setting a high-volume static threshold for traffic destined for cloud provider IP ranges, we can quickly detect significant data transfers that warrant investigation. While it may generate some false positives for legitimate large transfers, it's a crucial first line of defense against massive data theft.
    answer_sources:
      - Zeek conn.log
      - Firewall Egress Logs
      - Network egress points (e.g., firewalls, proxies)
      - VPN concentrators
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          SEARCH network flow logs (Zeek, firewall)
          WHERE destination_ip IN cloud_provider_ip_ranges
          GROUP BY source_ip over 1-hour window
          SUM egress_bytes
          IF SUM(egress_bytes) > 10GB:
            ALERT "High-volume data egress to cloud provider from internal IP"
  - question: Is an internal host's data egress volume to cloud providers significantly higher than its own established baseline for this time of day and day of week?
    context: This question refines volumetric analysis by personalizing it for each host and accounting for time-based patterns (e.g., nightly backups). Instead of a single static threshold for everyone, it establishes a dynamic baseline of normal traffic for each IP. A significant deviation (e.g., more than 3 standard deviations) from this specific host's normal behavior is a strong indicator of an anomaly, such as a compromised machine being used for data exfiltration, while reducing false positives from hosts that regularly transfer large amounts of data.
    answer_sources:
      - Zeek conn.log
      - Firewall Egress Logs
      - Network egress points (e.g., firewalls, proxies)
      - VPN concentrators
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each internal_ip:
            historical_mean, historical_stddev = CALCULATE hourly egress volume to cloud IPs over last 30 days, segmented by hour-of-day and day-of-week
          
          ON new hourly data for internal_ip:
            current_volume = GET egress volume for current hour
            IF current_volume > (historical_mean[current_hour] + 3 * historical_stddev[current_hour]):
              ALERT "Anomalous volumetric data egress from internal IP"
  - question: Has a host's egress data volume to the cloud exceeded the level predicted by a time-series forecasting model?
    context: This question represents the most sophisticated form of volumetric anomaly detection. Time-series models like ARIMA or Prophet can learn complex patterns, including seasonality and trends, in a host's network traffic. The model then predicts an expected range (confidence interval) for future traffic. If the actual observed traffic volume breaks through the upper bound of this predicted range, it signals an event that cannot be explained by historical patterns, making it a high-confidence anomaly worthy of investigation.
    answer_sources:
      - Zeek conn.log
      - Firewall Egress Logs
      - Network egress points (e.g., firewalls, proxies)
      - VPN concentrators
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each host:
            model = TRAIN time-series model (e.g., Prophet) on historical egress data
          
          ON new hourly data for host:
            predicted_upper_bound = model.predict_upper_confidence_interval()
            actual_volume = GET current hour's volume
            IF actual_volume > predicted_upper_bound:
              ALERT "Egress volume exceeds forecasted model prediction"
  - question: Was a cloud data sharing action performed by a user or from a host that is not explicitly authorized to do so?
    context: This question enforces a principle of least privilege for a high-risk activity. Data sharing should be restricted to a small, well-defined group of users and systems. By creating an explicit allow-list (e.g., an 'Cloud Data Sharers' Active Directory group) and alerting on any sharing action initiated by a user or host not on that list, security teams can quickly identify policy violations or compromised accounts being used for exfiltration. This is a foundational access control check.
    answer_sources:
      - Windows Event ID 4688
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Active Directory security logs
      - Active Directory domain controllers
      - Cloud IAM service
      - corporate workstations
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          authorized_users, authorized_hosts = GET members from 'Cloud Data Sharers' group
          
          ON cloud sharing event:
            EXTRACT user, source_host
            IF user NOT IN authorized_users OR source_host NOT IN authorized_hosts:
              ALERT "Unauthorized user or host performed data sharing action"
  - question: Did a user initiate a cloud sharing action from an IP address or hostname they have never used before for such activities?
    context: This question aims to detect credential theft or session hijacking by spotting unusual source locations. Most users perform their duties from a predictable set of machines and network locations (office, VPN, home). If a user account suddenly performs a sensitive action like data sharing from a completely new and unexpected source IP or hostname, it is a strong indicator that the account may be compromised. This 'first-seen' source anomaly provides crucial context for investigating potential account takeovers.
    answer_sources:
      - Windows Event ID 4688
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Active Directory security logs
      - Active Directory domain controllers
      - Cloud IAM service
      - corporate workstations
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each user:
            historical_sources = GET unique source IPs/hostnames used by user for API calls in last 90 days
          
          ON new sharing event by user from new_source:
            IF new_source NOT IN historical_sources:
              ALERT "User performed sharing action from a first-seen source"
  - question: Did a user perform a data sharing action that is uncharacteristic of the behavior of their peers (e.g., other developers, finance team members)?
    context: This question detects insider threats or compromised accounts by identifying behavioral outliers. Users in the same role or department (peer group) tend to exhibit similar patterns of activity. By clustering users into these peer groups, we can establish a baseline of normal behavior for each group. If a user performs an action, like data sharing, that is rare or unseen among their peers, it constitutes a behavioral deviation that requires investigation. For example, a finance user suddenly using developer-specific sharing APIs would be highly suspicious.
    answer_sources:
      - Windows Event ID 4688
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Active Directory security logs
      - Active Directory domain controllers
      - Cloud IAM service
      - corporate workstations
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          CLUSTER users into peer groups based on historical activity (e.g., API calls, login times)
          
          ON new data sharing event by user:
            user_peer_group = GET user's assigned peer group
            action_is_characteristic = CHECK if action is common for user_peer_group
            IF NOT action_is_characteristic:
              ALERT "User performed action uncharacteristic of their peer group"
  - question: Was data shared to an external cloud account ID that has never been seen across the entire organization before?
    context: This question seeks to identify new exfiltration destinations. Adversaries will often set up new cloud accounts specifically for their operations. By tracking every external account that data has ever been shared with, the organization can immediately flag the first-ever appearance of a new target account. Such an event is highly suspicious as it could be the first step in a new data exfiltration channel and warrants immediate, high-priority investigation.
    answer_sources:
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Cloud management plane API logs
      - SIEM or data lake holding historical logs
    range: Last 180 days
    queries:
      - query_tech: pseudocode
        query: |
          historical_targets = GET all target account IDs from sharing events in last 180 days
          
          ON new sharing event to new_target_id:
            IF new_target_id NOT IN historical_targets:
              ALERT "Data shared to a new, first-seen external account ID"
              ADD new_target_id to historical_targets
  - question: Was data shared with a statistically rare external account that is infrequently used as a sharing target?
    context: This question uses statistical analysis to prioritize alerts. Legitimate sharing often happens with frequently used partners. A sharing event directed to an account that is a very rare destination (i.e., has a high IDF score) is more likely to be suspicious than one directed to a common partner. This method helps analysts focus on the most unusual and therefore riskiest sharing activities, filtering out the noise of routine business operations.
    answer_sources:
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Cloud management plane API logs
      - SIEM or data lake holding historical logs
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          CALCULATE IDF score for all destination account IDs based on sharing frequency over last 90 days
          
          ON new sharing event to target_id:
            idf_score = GET IDF for target_id
            IF idf_score > high_threshold:
              ALERT "Data shared to a statistically rare destination account"
  - question: Does a new data sharing event represent an unlikely or anomalous relationship between an internal user and an external account, according to a graph-based link prediction model?
    context: This question uses graph theory to model and detect anomalous relationships. The network of who shares with whom can reveal patterns. Link prediction algorithms can learn these patterns to predict which future connections (sharing events) are likely or legitimate. When a new sharing event occurs that the model flags as highly unlikely (e.g., a user from finance sharing with a partner only ever associated with engineering), it suggests a potential compromise or policy violation. This approach can uncover subtle, context-dependent threats that other methods might miss.
    answer_sources:
      - AWS CloudTrail logs
      - Azure Activity Logs
      - Cloud management plane API logs
      - SIEM or data lake holding historical logs
    range: Last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          BUILD bipartite graph of (internal users) -> (external accounts) from historical sharing events
          
          ON new sharing event (user, external_account):
            likelihood_score = link_prediction_model.predict(user, external_account)
            IF likelihood_score < low_threshold:
              ALERT "Anomalous user-to-account sharing link detected"