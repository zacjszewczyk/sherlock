name: 'T1591.002: Business Relationships'
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is conducting reconnaissance on the organization's business relationships. This involves detecting various activities such as outbound connections to known malicious infrastructure associated with supply chain attacks, automated scraping of public-facing web assets that list partners or clients, unauthorized scanning or access attempts against partner-exclusive services (like VPNs or extranets), anomalous network behavior originating from compromised partner networks, and internal reconnaissance where user accounts access an unusual number of files related to business contracts, contacts, or API keys.
type: technique
related:
  - 'TA0043: Reconnaissance'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any internal hosts initiated outbound network connections or DNS queries to external destinations matching a threat intelligence feed of known reconnaissance infrastructure, malicious proxies, or domains associated with supply chain attacks?
    context: This question aims to detect direct communication from within the network to adversary-controlled infrastructure. A match against a high-confidence threat intelligence feed is a strong indicator that an internal host may be compromised or an insider is using malicious tools for reconnaissance, specifically targeting information about business partners to facilitate a supply chain attack.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - Internet gateway/egress points
      - DNS resolvers
      - Network Security Monitoring (NSM) sensor grid
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE malicious_domains = ThreatIntelFeed('recon_domains')
          DEFINE malicious_ips = ThreatIntelFeed('recon_ips')
          SEARCH ZeekDnsLogs WHERE query IN malicious_domains
          SEARCH ZeekConnLogs WHERE destination_ip IN malicious_ips
          JOIN DnsLogs.uid WITH ConnLogs.uid
          RETURN count BY source_ip, destination_ip, query
  - question: Are there any DNS queries for domains that are visually similar (typosquatted) to the domains of our legitimate business partners?
    context: Adversaries often register domains that closely resemble legitimate ones to trick users or systems in phishing or man-in-the-middle attacks. This technique, known as typosquatting, can be an early indicator of reconnaissance for a targeted attack against a business partner. Identifying these queries helps uncover potential staging for such attacks before they are launched.
    answer_sources:
      - 'Zeek dns.log'
      - Internet gateway/egress points
      - DNS resolvers
      - Network Security Monitoring (NSM) sensor grid
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE partner_domains = AllowList('partner_domains')
          FOR domain IN ZeekDnsLogs.query:
            IF domain NOT IN partner_domains:
              FOR partner_domain IN partner_domains:
                IF LevenshteinDistance(domain, partner_domain) < 3:
                  ENRICH domain with WHOIS, ASN
                  FLAG as potential_typosquat
          RETURN potential_typosquat
  - question: Can we identify potentially malicious domains being queried by internal hosts, which are not on any known threat feed, using a machine learning model that analyzes domain characteristics?
    context: Sophisticated adversaries may use newly registered domains (NRDs) or algorithmically generated domains (DGAs) that won't appear on standard threat feeds immediately. A machine learning model can proactively identify suspicious domains based on features like high entropy, unusual length, recent registration date, or association with a non-reputable ASN, providing an early warning of potential C2 or reconnaissance activity.
    answer_sources:
      - 'Zeek dns.log'
      - Internet gateway/egress points
      - DNS resolvers
      - Network Security Monitoring (NSM) sensor grid
    range: last 90 days
    queries:
      - pseudocode: |
          FOR domain IN ZeekDnsLogs.query:
            IF domain IS new_or_unseen:
              features = ExtractFeatures(domain, WHOIS, ASN)
              score = ML_Model.predict(features)
              IF score > malicious_threshold:
                ALERT on domain
          RETURN alerts
  - question: Has any external source attempted a DNS zone transfer or used known scraping tools/libraries to access our public-facing websites, particularly pages listing business partners?
    context: DNS zone transfer requests (`AXFR`) are a classic reconnaissance technique to map out an organization's DNS infrastructure. Similarly, user-agent strings associated with automated tools like 'Scrapy' or 'Wget' can indicate that an adversary is programmatically collecting information from public sites, such as lists of partners or clients, to build a target profile.
    answer_sources:
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - Public-facing web servers
      - DMZ network segments
      - Reverse proxy servers
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE scraping_agents = SignatureList('scraping_user_agents')
          SEARCH ZeekDnsLogs WHERE query_type IN ['AXFR', 'ANY']
          SEARCH ZeekHttpLogs WHERE user_agent IN scraping_agents
          RETURN alerts BY source_ip, user_agent, query_type
  - question: Is any single external IP address sending an unusually high volume of requests to our public web pages, especially those containing partner or supply chain information?
    context: Automated scraping by an adversary often manifests as a high rate of requests from a single source, far exceeding normal user browsing behavior. By establishing a baseline for normal traffic patterns and detecting statistical outliers (e.g., exceeding the 99th percentile), we can identify potential reconnaissance activity that uses custom scripts without common scraping tool user-agents.
    answer_sources:
      - 'Zeek http.log'
      - Public-facing web servers
      - DMZ network segments
      - Reverse proxy servers
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE target_paths = ['/about/partners/', '/clients/']
          FOR path in target_paths:
            baseline = CalculateBaseline(HttpLogs.path)
            SEARCH HttpLogs WHERE path = target_path
            AGGREGATE count by source_ip, time_window='1m'
            IF count > baseline.percentile(99):
              ALERT on source_ip
          RETURN alerts
  - question: Has the overall traffic volume to key partner-related web pages experienced a sudden spike that is inconsistent with historical seasonal patterns, as predicted by a time-series forecasting model?
    context: While statistical methods can detect single-source anomalies, a distributed scraping attack might not trigger those alerts. A time-series model (like SARIMA or Prophet) learns the natural rhythm (e.g., daily, weekly cycles) of traffic to a specific page. A significant deviation from the model's forecast suggests an anomalous event, like a coordinated scraping campaign, even if the traffic comes from many different IPs.
    answer_sources:
      - 'Zeek http.log'
      - Public-facing web servers
      - DMZ network segments
      - Reverse proxy servers
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE target_page = '/partners/list'
          model = TrainTimeSeriesModel(HttpLogs.target_page, history='60d')
          forecast = model.predict(next_interval)
          actual = GetCurrentCount(HttpLogs.target_page)
          IF actual > forecast.upper_bound:
            ALERT on anomalous traffic spike
          RETURN alerts
  - question: Has there been any connection attempt to a partner-exclusive service (e.g., VPN, extranet portal) from an IP address that is not on the authorized partner allow-list?
    context: Services designated for business partners should only be accessible from their known, pre-approved IP ranges. Any connection attempt from an unauthorized source is a direct violation of this policy and a strong indicator of targeted reconnaissance or an initial access attempt. This is a high-fidelity, rule-based check for unauthorized activity.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek weird.log'
      - Partner extranet servers
      - VPN concentrators
      - B2B API gateways
      - DMZ firewalls
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE partner_services = IP_Port_List('partner_services')
          DEFINE partner_ips = AllowList('partner_ips')
          SEARCH ZeekConnLogs WHERE destination IN partner_services
          IF source_ip NOT IN partner_ips:
            ALERT on unauthorized access attempt
          RETURN alerts
  - question: Has any single, unauthorized external IP address generated a statistically significant number of failed connection attempts to our partner-facing services?
    context: A large number of failed connections (e.g., TCP SYN packets with no response, or TCP resets) from a single IP to a specific service is a classic sign of a port scan or enumeration. An attacker may be probing the service to see if it is online and what version it is running. Calculating the Z-score helps to statistically validate that the observed activity is a significant anomaly compared to normal background noise.
    answer_sources:
      - 'Zeek conn.log'
      - Partner extranet servers
      - VPN concentrators
      - B2B API gateways
      - DMZ firewalls
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE partner_services = IP_Port_List('partner_services')
          baseline = CalculateBaseline(FailedConnectionsTo(partner_services))
          SEARCH ZeekConnLogs WHERE destination IN partner_services AND status IN ['S0', 'REJ']
          AGGREGATE count by source_ip, time_window='5m'
          IF ZScore(count, baseline) > 3.5:
            ALERT on potential port scan
          RETURN alerts
  - question: Are there any connections from unknown IP addresses to partner services that exhibit characteristics different from the typical, legitimate connections made by our known partners?
    context: Legitimate partner connections often have consistent patterns in terms of duration, data volume, and packet counts. A one-class SVM can be trained on these legitimate patterns to create a model of "normal." When a connection from an unknown source is observed, the model can determine if it fits this normal profile. If not, it's flagged as an anomaly, potentially indicating a scan or an attack attempt that uses different parameters than legitimate clients.
    answer_sources:
      - 'Zeek conn.log'
      - Partner extranet servers
      - VPN concentrators
      - B2B API gateways
      - DMZ firewalls
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE partner_services = IP_Port_List('partner_services')
          legit_features = ExtractFeatures(ZeekConnLogs WHERE source_ip IN partner_ips)
          model = TrainOneClassSVM(legit_features)
          unknown_connections = ZeekConnLogs WHERE source_ip NOT IN partner_ips
          FOR conn in unknown_connections:
            IF model.predict(conn.features) == 'anomalous':
              ALERT on anomalous connection
          RETURN alerts
  - question: Has a connection originating from a known business partner's IP range attempted to access an internal host or service that is outside of their explicitly allowed scope?
    context: A compromised partner network can be used as a pivot point to attack your organization. This question checks for lateral movement or unauthorized access attempts originating from a supposedly trusted source. By defining and enforcing strict access rules (e.g., Partner A can only access Server X on Port Y), any deviation immediately flags a potential compromise of the partner's environment.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - Internal network segments
      - Data center core
      - Application servers
      - Internal firewall logs
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE PartnerARules = {allowed_dest_ips: [...], allowed_dest_ports: [...]}
          SEARCH ZeekConnLogs WHERE source_ip IN PartnerA_IP_Range
          IF destination_ip NOT IN PartnerARules.allowed_dest_ips OR destination_port NOT IN PartnerARules.allowed_dest_ports:
            ALERT on out-of-scope access from partner
          RETURN alerts
  - question: Is the total volume of data transferred to or from a business partner's network a statistical outlier compared to their historical daily baseline?
    context: A sudden, unusually large data transfer from a partner network could indicate data exfiltration from your environment through a compromised partner connection, or an attacker staging tools into your network. Using the IQR method to detect outliers provides a robust way to identify anomalous transfer volumes that deviate significantly from established norms for that specific partner.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - Internal network segments
      - Data center core
      - Application servers
      - Internal firewall logs
    range: last 90 days
    queries:
      - pseudocode: |
          FOR partner in BusinessPartners:
            daily_volumes = Aggregate(conn.bytes) by day for partner.ip_range over 90d
            IQR_baseline = CalculateIQR(daily_volumes)
            today_volume = GetTodayVolume(partner.ip_range)
            IF today_volume > IQR_baseline.upper_fence:
              ALERT on anomalous data volume for partner
          RETURN alerts
  - question: Has a connection occurred between a known partner IP and an internal system that they do not normally communicate with, based on a graph-based community detection model?
    context: Viewing your network as a graph of interconnected systems can reveal normal communication patterns or "communities" (e.g., Partner A's devices only talk to the Partner A extranet). A graph-based anomaly detection algorithm can learn these communities. An alert is triggered when a new connection (an edge) forms a "bridge" between two previously disconnected communities, such as a partner's IP connecting directly to a server in the HR department's network segment, indicating highly suspicious lateral movement.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - Internal network segments
      - Data center core
      - Application servers
      - Internal firewall logs
    range: last 90 days
    queries:
      - pseudocode: |
          historical_graph = BuildGraph(ZeekConnLogs, history='30d')
          communities = DetectCommunities(historical_graph)
          FOR new_connection in RealTimeConnLogs:
            source_community = communities.find(new_connection.source)
            dest_community = communities.find(new_connection.destination)
            IF IsAnomalousBridge(source_community, dest_community):
              ALERT on anomalous cross-community connection
          RETURN alerts
  - question: Has any user account accessed an unusually large number of files from sensitive partner-related repositories within a short period, exceeding a predefined threshold?
    context: This is a simple but effective method to detect "smash and grab" data theft. An adversary who has compromised a user account may attempt to quickly access and exfiltrate as much data as possible. A rule that alerts on a high volume of file access events (Windows Event ID 4663) in a short time frame from critical locations can catch this bulk reconnaissance or collection behavior.
    answer_sources:
      - 'Windows Event ID 4663'
      - 'Windows Event ID 4624'
      - Active Directory Logs
      - File servers hosting partner data
      - SharePoint sites for vendor management
      - Active Directory domain controllers
    range: last 90 days
    queries:
      - pseudocode: |
          DEFINE critical_paths = FileShareList('partner_data_locations')
          SEARCH WinEventLogs WHERE EventID == 4663 AND FilePath IN critical_paths
          AGGREGATE count by user, time_window='1h'
          IF count > 100:
            ALERT on bulk file access
          RETURN alerts
  - question: Has a user's file access activity on partner-related data repositories deviated significantly from their own historical behavior or the typical behavior of their peer group?
    context: This dual-pronged approach is more nuanced than a fixed threshold. First, it detects when a user behaves abnormally compared to their own past activity (intra-user anomaly). Second, it detects when a user's behavior is abnormal compared to their colleagues with similar roles (inter-user/peer group anomaly). This can catch both a compromised account acting out of character and an insider whose activity, while consistent for them, is suspicious for their role.
    answer_sources:
      - 'Windows Event ID 4663'
      - 'Windows Event ID 4624'
      - Active Directory Logs
      - File servers hosting partner data
      - SharePoint sites for vendor management
      - Active Directory domain controllers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR user in AllUsers:
            personal_baseline = CalculateBaseline(user.file_access, history='30d')
            peer_group = GetPeerGroup(user)
            peer_baseline = CalculateBaseline(peer_group.file_access)
            IF user.today_access > 3 * personal_baseline.stdev OR user.today_access > peer_baseline.percentile(95):
              ALERT on anomalous user file access
          RETURN alerts
  - question: Does a user's overall behavior, including file access, login patterns, and process execution, show a multi-faceted deviation from their established normal profile, as determined by a UEBA model?
    context: The most sophisticated attacks involve subtle changes across multiple vectors. A UEBA system creates a holistic, high-dimensional baseline of normal behavior for each user. It can correlate low-level, otherwise non-alerting events (e.g., logging in at an odd time, accessing a slightly unusual file, running a new PowerShell command) to identify a complex attack pattern that would be missed by single-metric statistical or rule-based methods.
    answer_sources:
      - 'Windows Event ID 4663'
      - 'Windows Event ID 4624'
      - Active Directory Logs
      - File servers hosting partner data
      - SharePoint sites for vendor management
      - Active Directory domain controllers
    range: last 90 days
    queries:
      - pseudocode: |
          INPUT UserActivityStream (Logins, FileAccess, ProcessExec)
          FOR user in AllUsers:
            risk_score = UEBA_Model.score(user.activity_stream)
            IF risk_score > high_risk_threshold:
              ALERT on high-risk user behavior
          RETURN alerts