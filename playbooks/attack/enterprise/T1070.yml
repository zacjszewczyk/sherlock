name: 'T1070: Indicator Removal'
id: 'a7b1c9d0-e2f3-4a5b-8c6d-1e9f0a8b7c6d'
description: "This playbook helps investigate whether an adversary is attempting to remove indicators of compromise to evade detection. It covers various techniques, including the use of known indicator removal tools or specific command-line signatures for artifact wiping; the clearing of system, security, or application logs; the deletion of Volume Shadow Copies, system backups, or USN Journals; the execution of mass file deletions; the modification of system audit policies to reduce logging; and the alteration of file timestamps (timestomping) to hide malicious files."
type: 'technique'
related:
  - 'TA0005: Defense Evasion'
contributors:
  - 'Zachary Szewczyk'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: "Has a known indicator removal tool or a command-line signature associated with artifact wiping been executed?"
    context: "This question aims to identify the direct execution of tools or commands specifically designed to remove evidence. Adversaries use utilities like SDelete or built-in commands like `wevtutil` to clear logs or wipe files, making it harder for analysts to trace their activities. Detecting these specific executions is a high-fidelity indicator of malicious intent."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Sysmon Event ID 1"
      - "Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events WHERE (process_hash IN (known_removal_tool_hashes) OR command_line MATCHES (known_wiping_patterns))"
  - question: "Have any command-line executions exhibited unusually high entropy, potentially indicating obfuscation of indicator removal activities?"
    context: "Adversaries may obfuscate their commands to bypass simple signature-based detections. Calculating the Shannon entropy of command-line arguments helps identify commands that are abnormally complex or random, which is a common characteristic of obfuscated scripts or commands used to hide malicious actions like artifact removal."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH command_line_executions | CALCULATE entropy(command_line_arguments) | COMPARE entropy > 99th_percentile_baseline"
  - question: "Can machine learning models identify malicious command-line executions indicative of indicator removal based on features like command length, entropy, and parent process?"
    context: "This question explores a more advanced, behavioral approach to detection. By training a machine learning model on various features of command-line executions, we can move beyond simple string matching to identify novel or previously unseen malicious commands, including those used for indicator removal, based on their overall characteristics."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers."
    range: "last 90 days"
    queries:
      - "pseudocode: INPUT command_line_data | APPLY classification_model | FILTER prediction == 'malicious'"
  - question: "Have any system, security, or application event logs been cleared?"
    context: "The clearing of security or other critical event logs is a classic and highly suspicious defense evasion technique. This action is almost never performed during legitimate administrative duties. Detecting event log clearing events (like Windows Event ID 1102) is a critical finding that warrants immediate investigation."
    answer_sources:
      - "Windows Event ID 1102"
      - "Windows Event ID 104"
      - "Sysmon Event ID 1"
      - "Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH log_events WHERE event_id IN (1102, 104) | CORRELATE with process_creation of 'wevtutil.exe' or 'Clear-EventLog'"
  - question: "Is there an anomalous frequency of log clearing events associated with a specific user or host?"
    context: "While any single log clearing event is suspicious, establishing a baseline (which should be near zero) and alerting on deviations can help automate the detection of unusual activity. This is particularly useful in larger environments to surface accounts or systems that are repeatedly involved in log clearing, which might indicate a compromised account or persistent threat."
    answer_sources:
      - "Windows Event ID 1102"
      - "Windows Event ID 104"
      - "Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH log_events WHERE event_id IN (1102, 104) | COUNT by user, host | COMPARE count > baseline_threshold"
  - question: "Has there been a sudden, unexplained drop in the volume of logs ingested from a critical host?"
    context: "An adversary might not only clear logs but also tamper with the logging service itself, causing a halt in log forwarding. This question addresses this tactic by monitoring the log volume itself. A sudden drop in logs from a critical asset, not attributable to maintenance, can be an indicator that logging has been disabled or disrupted as part of a defense evasion effort."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform."
    range: "last 90 days"
    queries:
      - "pseudocode: MONITOR log_volume_per_host over time | APPLY time-series_anomaly_detection | ALERT on significant_drops"
  - question: "Have built-in Windows utilities been used to delete Volume Shadow Copies, system state backups, or the USN Journal?"
    context: "Adversaries, particularly ransomware, often delete Volume Shadow Copies (VSS) and other backups to prevent system recovery. This question focuses on detecting the specific commands used to perform these destructive actions. Executions of `vssadmin delete shadows`, `wbadmin delete catalog`, or `fsutil usn deletejournal` are high-confidence indicators of malicious activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events WHERE (process_name == 'vssadmin.exe' AND command_line CONTAINS 'delete shadows') OR (process_name == 'wbadmin.exe' AND command_line CONTAINS 'delete catalog') OR (process_name == 'fsutil.exe' AND command_line CONTAINS 'usn deletejournal')"
  - question: "Has there been an anomalous frequency in the execution of backup or file system utilities like `vssadmin`, `wbadmin`, or `fsutil`?"
    context: "While these utilities can be used for legitimate administration, their frequent or unusual execution can signal malicious intent. By baselining normal usage patterns per user and host, we can identify when the execution count for these tools spikes, which could indicate an adversary preparing to or actively deleting backups and other forensic artifacts."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events for 'vssadmin.exe', 'wbadmin.exe', 'fsutil.exe' | COUNT by user, host, time_window | ALERT if count > 99.9th_percentile_baseline"
  - question: "Has a suspicious sequence of commands occurred, such as discovery of backups followed immediately by their deletion?"
    context: "Adversaries often follow a pattern: first, they enumerate existing backups or shadow copies, and then they delete them. This question aims to detect this specific sequence of behavior. A model that recognizes a 'list' command followed by a 'delete' command for the same resource (`vssadmin`, `wbadmin`) can provide a very strong signal of an attack in progress."
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH command_sequences | APPLY HMM_or_state_machine_model | ALERT on 'discovery_then_deletion' sequence"
  - question: "Have commands associated with mass file deletion or overwriting been executed, especially against sensitive directories?"
    context: "This question targets the use of powerful, built-in commands for recursively deleting files (`del`, `Remove-Item`) or securely overwriting data (`cipher`). When these commands are targeted at critical system or user directories, it is a strong indication that an adversary is attempting to destroy evidence or cause damage."
    answer_sources:
      - "Windows Event ID 4663"
      - "Sysmon Event ID 23"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Zeek files.log"
      - "Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\\Users\\Public, C:\\Temp), system directories (e.g., System32)."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH process_creation_events WHERE command_line MATCHES ('del /F /S /Q', 'cipher /w:', 'Remove-Item -Recurse -Force') AND target_directory IN (sensitive_dirs)"
  - question: "Has an anomalously high volume of file deletion events occurred for a specific user or host?"
    context: "Beyond specific commands, the sheer volume of file deletions can be an indicator of malicious activity. This question focuses on establishing a normal baseline for file deletion activity for each user and host and then alerting on significant deviations. A sudden spike in deletions far above the norm suggests a potential wiping or data destruction event."
    answer_sources:
      - "Sysmon Event ID 23"
      - "Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\\Users\\Public, C:\\Temp), system directories (e.g., System32)."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH file_delete_events | COUNT by user, host, hour | ALERT if count > 3_std_dev_above_mean OR count > 99th_percentile"
  - question: "Does a multivariate analysis of file and process operations reveal a pattern consistent with indicator removal?"
    context: "This question proposes a sophisticated approach that looks at multiple data streams simultaneously. An adversary's activity might involve creating a script (file creation), running it (process creation), and then deleting large numbers of files (file deletions). A multivariate model can detect these correlated spikes across different event types, providing a more robust alert."
    answer_sources:
      - "Sysmon Event ID 23"
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 1"
      - "Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\\Users\\Public, C:\\Temp), system directories (e.g., System32)."
    range: "last 90 days"
    queries:
      - "pseudocode: MONITOR file_deletes, file_creates, process_creates per host | APPLY multivariate_anomaly_detection | ALERT on anomalous_correlation"
  - question: "Has the system audit policy been changed to reduce or disable logging?"
    context: "A direct and effective way for an adversary to evade detection is to simply turn off the logging that would record their actions. This question looks for the explicit events (Windows Event ID 4719) or commands (`auditpol.exe`) that indicate a change in the system's audit policy. Any unauthorized change, especially one that disables logging, is a critical security event."
    answer_sources:
      - "Windows Event ID 4719"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH log_events WHERE event_id == 4719 OR (process_name == 'auditpol.exe' AND command_line CONTAINS '/set /success:disable' or '/clear')"
  - question: "Do any endpoints have an audit policy configuration that deviates from the established baseline?"
    context: "This question provides a proactive way to detect audit policy tampering, even if the change event itself was missed or deleted. By periodically checking the live configuration of endpoints against a known-good 'golden image,' an organization can identify systems where logging has been improperly disabled and flag them for investigation."
    answer_sources:
      - "Windows Event ID 4719"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each_host | RUN 'auditpol /get /category:*' | HASH output | COMPARE hash with golden_image_hash | ALERT on mismatch"
  - question: "Can a machine learning model distinguish between legitimate administrative changes and malicious tampering of the audit policy?"
    context: "In large environments, some audit policy changes might be legitimate. This question explores using machine learning to add context and reduce false positives. By considering features like the user account, time of day, and correlation with other suspicious activities, a model can learn to differentiate between a scheduled change by an administrator and an anomalous change by a compromised account."
    answer_sources:
      - "Windows Event ID 4719"
      - "Sysmon Event ID 1"
      - "Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure."
    range: "last 90 days"
    queries:
      - "pseudocode: INPUT audit_policy_change_events | APPLY classification_model on features (user, time, parent_process) | FILTER prediction == 'malicious'"
  - question: "Has a process been observed explicitly changing a file's creation timestamp?"
    context: "'Timestomping' is the act of modifying a file's timestamps to make it blend in with other files and evade detection by analysts. Sysmon Event ID 2, which logs a process changing a file creation time, is a rare event and a very high-fidelity indicator of this specific evasion technique."
    answer_sources:
      - "Sysmon Event ID 2"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "System directories (e.g., C:\\Windows\\System32), temporary directories, user profile directories where malware may be staged."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH log_events WHERE event_id == 'Sysmon 2' | CORRELATE with PowerShell commands containing '.CreationTime=' or known timestomping tools"
  - question: "Are there files with timestamps that are statistically anomalous compared to other files in their directory?"
    context: "This question provides a method for detecting timestomping even without a direct event log. A malicious file dropped into an old system directory might be given a timestamp that predates the creation of the directory itself. By scanning for such logical inconsistencies in file metadata, analysts can proactively hunt for hidden malicious files."
    answer_sources:
      - "Sysmon Event ID 2"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "System directories (e.g., C:\\Windows\\System32), temporary directories, user profile directories where malware may be staged."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each_file in critical_dirs | CALCULATE delta = file.creation_time - parent_dir.modified_time | ALERT if delta is anomalous"
  - question: "Can unsupervised clustering on file timestamps identify outlier files that may have been timestomped?"
    context: "Legitimate files in a directory often have timestamps that fall into natural clusters (e.g., around OS installation dates). A timestomped file will likely have timestamps that do not fit these clusters. This question applies clustering algorithms to automatically identify these outlier files based on their timestamp metadata, flagging them as candidates for investigation."
    answer_sources:
      - "Sysmon Event ID 2"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1"
      - "System directories (e.g., C:\\Windows\\System32), temporary directories, user profile directories where malware may be staged."
    range: "last 90 days"
    queries:
      - "pseudocode: FOR each_dir | GET all_file_timestamps | APPLY DBSCAN clustering | ALERT on files classified as noise/outliers"