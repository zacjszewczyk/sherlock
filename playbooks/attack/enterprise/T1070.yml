name: T1070: Indicator Removal
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: >
  This playbook helps investigate whether an adversary is attempting to remove indicators of compromise to evade detection. This involves searching for evidence of specific tools or techniques used to clear logs, delete forensic artifacts like Volume Shadow Copies, alter file timestamps (timestomping), change audit policies to reduce logging, or execute mass file deletions. The goal is to detect the active destruction of evidence on compromised systems.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are known indicator removal tools or command-line patterns for artifact wiping being executed?
    context: This question seeks to identify the direct execution of known indicator removal utilities (like SDelete or BCWipe) by hash or specific command-line strings (like `wevtutil cl Security` or `sdelete -accepteula`). A positive match provides high-fidelity evidence of an adversary's intent to cover their tracks by destroying forensic data.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH process creation events WHERE process hash IN (known_wiper_hashes) OR command_line MATCHES (known_wiper_patterns)
  - question: Is there evidence of obfuscated command-line execution, potentially to hide artifact removal activities?
    context: Adversaries often obfuscate commands to bypass simple signature-based detections. This question involves calculating the Shannon entropy of command-line arguments to find outliers. A command with an unusually high entropy score compared to a baseline for that user and host may indicate an attempt to hide malicious activity, such as indicator removal.
    answer_sources:
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers.
    range: last 90 days
    queries:
      - pseudocode: FOR each command_line_execution, CALCULATE entropy of arguments. ALERT if entropy > 99th_percentile_baseline_for_user_host.
  - question: Can a machine learning model identify malicious command-line executions indicative of indicator removal?
    context: This question proposes a proactive, advanced detection method. By training a supervised classification model on features like command length, argument count, character types, parent process, and entropy, the system can learn to identify novel or complex malicious commands that do not match known signatures, improving detection of sophisticated adversaries.
    answer_sources:
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers.
    range: last 90 days
    queries:
      - pseudocode: INPUT command_line_features (length, arg_count, entropy, etc.) INTO classification_model. ALERT if prediction is 'malicious'.
  - question: Have critical event logs been cleared?
    context: The clearing of security or other critical event logs is a significant indicator of compromise. This question looks for the explicit event IDs for this activity (Windows Event ID 1102 or 104) and correlates them with the execution of tools like `wevtutil.exe` or PowerShell's `Clear-EventLog` to confirm the action and attribute it to a user and process.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 104
      - Sysmon Event ID 1
      - Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for EventID 1102 OR EventID 104. CORRELATE with process execution of wevtutil.exe or powershell.exe with 'Clear-EventLog' command by the same user on the same host.
  - question: Is there an anomalous frequency of event log clearing activity by any user or on any host?
    context: While a single log clearing event might be legitimate (though rare), repeated occurrences or any occurrence by a non-standard account is highly suspicious. This question focuses on establishing a baseline for log clearing events (which should be near zero) and alerting on any statistical deviation, which could indicate a persistent adversary trying to maintain a low profile.
    answer_sources:
      - Windows Event ID 1102
      - Windows Event ID 104
      - Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform.
    range: last 90 days
    queries:
      - pseudocode: FOR each user, host, COUNT EventID 1102/104 over a rolling window. ALERT if count > statistical_threshold (e.g., > 1 for non-admin accounts).
  - question: Has there been a sudden, unexplained drop in log volume from a critical host?
    context: Instead of clearing logs, an adversary might stop the logging service or tamper with the log forwarder. This would cause a sudden drop in the volume of logs ingested by a central SIEM. This question uses time-series anomaly detection to identify a statistically significant drop in log volume from a critical asset that is not attributable to a known maintenance window.
    answer_sources:
      - Sysmon Event ID 1
      - Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform.
    range: last 90 days
    queries:
      - pseudocode: MONITOR time-series of log_volume_per_host. ALERT on any sudden, statistically significant drop not correlated with a maintenance window.
  - question: Are there explicit commands being run to delete Volume Shadow Copies, system backups, or the USN Journal?
    context: This is a common precursor to ransomware attacks. Adversaries delete system recovery points to prevent victims from restoring their files. This question looks for the specific, high-confidence commands used for this purpose, such as `vssadmin delete shadows`, `wbadmin delete catalog`, or `fsutil usn deletejournal`.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups.
    range: last 90 days
    queries:
      - pseudocode: SEARCH process creation events for 'vssadmin.exe' with 'delete shadows', 'wbadmin.exe' with 'delete catalog', or 'fsutil.exe' with 'usn deletejournal'.
  - question: Is there an anomalous frequency of execution for utilities that can delete backups or shadow copies?
    context: Even if the exact deletion commands are not observed, a sudden spike in the usage of the parent utilities (`vssadmin.exe`, `wbadmin.exe`, `fsutil.exe`) is suspicious. This question involves baselining the normal execution frequency of these tools per user and host, and alerting when usage exceeds a high percentile, suggesting potential reconnaissance or destructive activity.
    answer_sources:
      - Sysmon Event ID 1
      - File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups.
    range: last 90 days
    queries:
      - pseudocode: FOR each user, host, COUNT executions of vssadmin.exe, wbadmin.exe, fsutil.exe in a 24-hour window. ALERT if count > 99.9th_percentile_of_baseline.
  - question: Is there a logical sequence of discovery commands followed by deletion commands for backups or shadow copies?
    context: Adversaries often follow a "recon-then-destroy" pattern. They first list available backups or shadow copies (e.g., `vssadmin list shadows`) before deleting them. This question uses sequence analysis to detect this highly indicative chain of events, where discovery commands are followed in short order by corresponding deletion commands by the same user on the same host.
    answer_sources:
      - Sysmon Event ID 1
      - File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups.
    range: last 90 days
    queries:
      - pseudocode: DETECT command sequence of (vssadmin list) FOLLOWED BY (vssadmin delete) by same user/host within a short time window.
  - question: Are commands associated with mass file deletion or wiping being executed on sensitive directories?
    context: This question looks for the use of powerful, built-in commands for forceful and recursive file deletion, such as `del /F /S /Q`, `cipher /w:`, or PowerShell's `Remove-Item -Recurse -Force`. When these commands target sensitive system or user profile directories, it is a strong indicator of an attempt to destroy data or remove malware artifacts.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\Users\Public, C:\Temp), system directories (e.g., System32).
    range: last 90 days
    queries:
      - pseudocode: SEARCH process creation for 'del /F /S /Q', 'cipher /w:', or 'Remove-Item -Recurse -Force' on sensitive directories.
  - question: Is there a statistically anomalous number of file deletions occurring for a specific user or host?
    context: Beyond specific commands, the sheer volume of file deletion events can indicate a wiping action. This question focuses on establishing a baseline of normal file deletion activity per user and host, and then using statistical methods to alert when the number of deletions in a given time frame dramatically exceeds that baseline (e.g., > 3 standard deviations above the mean).
    answer_sources:
      - Sysmon Event ID 23
      - Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\Users\Public, C:\Temp), system directories (e.g., System32).
    range: last 90 days
    queries:
      - pseudocode: FOR each user, host, COUNT file deletions (Sysmon Event ID 23) per hour. ALERT if count > 99th_percentile or > 3 standard deviations above the mean.
  - question: Can a multivariate model detect anomalous patterns in file operations that suggest a wiping event?
    context: A wiping event creates a complex pattern of activity. This question proposes using a multivariate anomaly detection model to analyze several metrics at once, such as file deletions, file creations, and process creations. The model can identify a sudden, sharp spike in deletions that deviates from the host's normal operational patterns, providing a more robust signal than looking at one metric alone.
    answer_sources:
      - Sysmon Event ID 23
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\Users\Public, C:\Temp), system directories (e.g., System32).
    range: last 90 days
    queries:
      - pseudocode: INPUT time-series data (file_deletions, file_creations, process_creations) into a multivariate anomaly detection model. ALERT on significant deviations.
  - question: Has the system audit policy been changed to disable or reduce logging?
    context: To avoid detection, adversaries may try to disable security auditing. This can be detected by watching for Windows Event ID 4719 ('System audit policy was changed') or by monitoring for the execution of `auditpol.exe` with command-line arguments that disable logging (e.g., `/set /success:disable`). Any such event is highly suspicious and requires immediate investigation.
    answer_sources:
      - Windows Event ID 4719
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for EventID 4719 OR process creation of 'auditpol.exe' with command-line arguments containing '/set /success:disable' or '/clear'.
  - question: Does the current audit policy on any host deviate from the established secure baseline?
    context: This question describes a proactive configuration integrity check. It involves periodically running a command like `auditpol /get /category:*` on endpoints and comparing a hash of the output against a pre-defined 'golden image' hash for that system type. Any mismatch indicates a configuration drift that could be the result of unauthorized tampering.
    answer_sources:
      - Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure.
    range: last 90 days
    queries:
      - pseudocode: PERIODICALLY RUN 'auditpol /get /category:*' on hosts. HASH the output. ALERT if hash differs from the known-good baseline hash.
  - question: Can a machine learning model differentiate between legitimate and malicious audit policy changes?
    context: Not all audit policy changes are malicious; administrators may have legitimate reasons. To reduce false positives, this question suggests using a classification model that considers the full context of the change, including the user account, time of day, parent process, and correlation with other suspicious activities, to determine the likely intent.
    answer_sources:
      - Sysmon Event ID 1
      - Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure.
    range: last 90 days
    queries:
      - pseudocode: FOR audit policy changes, INPUT features (user, time, parent_process, etc.) into a classification model. ALERT if prediction is 'malicious'.
  - question: Is there direct evidence of file timestamp modification (timestomping)?
    context: Timestomping is a technique to alter a file's timestamps (Modified, Accessed, Created) to make it blend in with legitimate files. This is a highly suspicious activity directly reported by Sysmon Event ID 2 ('A process changed a file creation time'). This question focuses on alerting on this event and correlating it with known timestomping utilities or PowerShell commands.
    answer_sources:
      - Sysmon Event ID 2
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - System directories (e.g., C:\Windows\System32), temporary directories, user profile directories where malware may be staged.
    range: last 90 days
    queries:
      - pseudocode: SEARCH for Sysmon EventID 2. CORRELATE with process creation of known timestomping tools or PowerShell commands that modify file times.
  - question: Are there files with statistically anomalous timestamps, suggesting they may have been timestomped?
    context: A file cannot logically be created before the directory that contains it. This question involves scanning critical directories and looking for files where the creation timestamp is significantly older than its parent directory's creation timestamp. This temporal impossibility is a strong statistical indicator that the file's timestamp has been manipulated.
    answer_sources:
      - System directories (e.g., C:\Windows\System32), temporary directories, user profile directories where malware may be staged.
    range: last 90 days
    queries:
      - pseudocode: FOR each file in critical directories, CALCULATE delta = file.CreationTime - parent_directory.CreationTime. ALERT on files with a large negative or anomalous delta.
  - question: Can clustering algorithms identify files with outlier timestamps within a directory?
    context: Within a given system directory, legitimate files installed at the same time will have similar timestamps, forming a natural cluster. A timestomped file, however, will have timestamps that do not fit this pattern. This question suggests using an unsupervised clustering algorithm (like DBSCAN) to treat timestamps as features and automatically identify any files that are outliers to the main cluster.
    answer_sources:
      - System directories (e.g., C:\Windows\System32), temporary directories, user profile directories where malware may be staged.
    range: last 90 days
    queries:
      - pseudocode: FOR a directory, CLUSTER all files based on (Modified, Accessed, Creation) timestamps. ALERT on files identified as outliers/noise by the algorithm.