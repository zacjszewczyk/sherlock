[
  {
    "Is the adversary establishing persistence using executable installer file permissions weakness? (TA0003 - Persistence)": {
      "Indicators": {
        "T1574.005 - Executable Installer File Permissions Weakness": {
          "Modification of executable binaries used by scheduled tasks or services under weak directory/file permissions.": {
            "Data": "Windows Event ID 4656, Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event IDs 4656/4663 for write operations to executable files in directories with weak permissions (e.g., 'Authenticated Users' write). Correlate write events on scheduled task or service binaries with unexpected source processes."
          },
          "Unusual writes or modifications to executable files (e.g., .exe, .dll) within temporary directories during installer execution.": {
            "Data": "Windows Event ID 4656, Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event IDs 4656/4663 for write operations to executable files (.exe, .dll, etc.) within user %TEMP% directories. Filter for writes occurring concurrently with known installer process activity. Use frequency analysis or time series analysis on write events in %TEMP% to identify anomalous spikes or patterns."
          }
        }
      }
    }
  },
  {
    "Is the adversary elevating privileges using executable installer file permissions weakness? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1574.005 - Executable Installer File Permissions Weakness": {
          "Execution of unexpected child processes with elevated privileges spawned by installer or service host processes after potential binary modification.": {
            "Data": "Windows Event ID 4688, Windows Event ID 4696",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creation and Windows Event ID 4696 for elevated token assignments. Identify processes spawned by installer or service host processes (e.g., svchost.exe) that are assigned elevated tokens and have unexpected command lines or image paths. Analyze parent-child process relationships."
          },
          "Installer processes spawning child processes with unusual command lines or network connections not typical for that installer.": {
            "Data": "Windows Event ID 4688, Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creation by installer or service host processes. Analyze spawned child processes for unusual command line arguments or executable names. Correlate suspicious child processes with Zeek conn.log to identify unexpected outbound network connections originating from these processes."
          }
        }
      }
    }
  },
  {
    "Is the adversary evading defenses using executable installer file permissions weakness? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1574.005 - Executable Installer File Permissions Weakness": {
          "Modification of legitimate system or application binaries commonly targeted by installers.": {
            "Data": "Windows Event ID 4656, Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event IDs 4656/4663 for write operations to common system or application executable paths. Correlate with expected software update events. Identify write events to these critical files that occur outside of scheduled updates or by unexpected processes. Use frequency analysis to identify abnormal file modification events on critical binaries."
          },
          "Installer or service host processes loading or executing unsigned or untrusted executable files from unexpected locations.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creation events. Analyze the image path and command line of processes spawned by installers or service host processes. Filter for executable files that are not signed, located in unusual directories, or have names/paths that do not match the expected behavior of the parent process. Use frequency analysis on image paths/command lines to identify rare occurrences."
          }
        }
      }
    }
  }
]