```json
[
  {
    "Is the adversary transferring tools into the network from external web services? (TA0011 - Command and Control)": {
      "Indicators": {
        "T1105 - Ingress Tool Transfer": {
          "File downloads (executables, archives, scripts) originating from domains or IP addresses known to be malicious, associated with C2 infrastructure, or listed on threat intelligence feeds.": {
            "Data": "Zeek http.log; Zeek file.log; Zeek dns.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Continuously correlate domains and IPs from DNS queries (Zeek dns.log) and HTTP sessions (Zeek http.log) that involve file downloads (identified in Zeek file.log) against high-confidence cyber threat intelligence (CTI) feeds of known malicious infrastructure. Use an inner join between network logs and CTI data. Alert on any matches and investigate the downloaded file and source host activity."
          },
          "File downloads initiated by unusual processes or using command-line patterns commonly associated with living-off-the-land binaries (LOLBins) for tool transfer.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for LOLBins like 'bitsadmin.exe', 'certutil.exe', 'powershell.exe', 'curl.exe', and 'wget.exe'. Scan command lines using regular expressions for arguments indicating file downloads from the internet (e.g., bitsadmin /transfer, certutil -urlcache, Invoke-WebRequest -Uri, curl -O). Use frequency analysis to identify rare LOLBin usage or executions outside of known legitimate software distribution or update processes."
          },
          "File transfers where the identified file magic (actual file type) does not match the file's extension or declared MIME type, suggesting content masquerading.": {
            "Data": "Zeek file.log; Zeek http.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze Zeek file.log entries. Compare the `mime_type` and `is_exe` fields with the file's name/extension, which can be retrieved by correlating the connection UID (`conn_uids`) with Zeek http.log. Alert on high-risk discrepancies, such as a file named 'image.jpg' having a MIME type of 'application/x-dosexec' or where `is_exe` is true. Establish a baseline of common, benign mismatches and use correlation analysis to prioritize alerts for files downloaded from low-reputation sources."
          },
          "An internal host connecting to a newly registered domain (NRD) or a domain with a low reputation and subsequently downloading an executable or archive file.": {
            "Data": "Zeek dns.log; Zeek conn.log; Zeek file.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enrich Zeek dns.log data with domain age (from WHOIS lookups) and reputation scores from CTI feeds. Create a detection rule that triggers when a DNS query for a domain registered within the last 30-60 days is followed by a connection (Zeek conn.log) and a subsequent download of a PE file, ELF file, archive, or script (identified in Zeek file.log) from that domain's IP. Use correlation analysis to link these events by source IP within a short time window (e.g., under 2 minutes)."
          },
          "Anomalous file downloads from common file sharing or code hosting platforms (e.g., GitHub, Pastebin, Discord CDN) that deviate from established organizational baselines.": {
            "Data": "Zeek conn.log; Zeek dns.log; Zeek http.log; Zeek file.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal download activity from common platforms (e.g., api.github.com, pastebin.com, cdn.discordapp.com), including typical source hosts, user agents, frequency, file types, and time of day. Use time series analysis and statistical methods (e.g., IQR, Z-scores) to detect outliers, such as a server that never accesses GitHub suddenly downloading a ZIP file, or a user downloading an unusual number or type of executables. Calculate the entropy of downloaded file MIME types per host to spot abnormal activity shifts."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```