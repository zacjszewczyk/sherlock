
[
  {
    "Is the adversary maintaining persistence using Launch Agents? (TA0003 - Persistence)": {
      "Indicators": {
        "T1543.001 - Launch Agent": {
          "A process launched by a Launch Agent connects to a known malicious IP address or domain.": {
            "Data": "macOS Process Execution Logs; Zeek conn.log",
            "Data Platform": "Endpoints, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Identify processes launched by 'launchd' where the executable path is defined within a .plist file located in `/Library/LaunchAgents/` or `~/Library/LaunchAgents/`. Correlate the process start time and host IP with outbound network connections in Zeek conn.log. Inner join the destination IP addresses and domains from these connections with a high-confidence CTI feed of known malicious infrastructure, updated daily. Alert on any matches."
          },
          "A new Launch Agent .plist file is created using suspicious command-line patterns or contains keys pointing to executables in non-standard locations.": {
            "Data": "macOS Process Execution Logs; macOS File Creation Logs",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process execution logs for parent processes like `sh`, `bash`, `python`, `curl`, or `osascript` creating `.plist` files in `/Library/LaunchAgents/` or `~/Library/LaunchAgents/`. Parse newly created .plist files for known suspicious patterns, such as a `ProgramArguments` key pointing to an executable in `/tmp/`, `/Users/Shared/`, or other user-writable directories. Use frequency analysis to identify rare command-line tools or arguments used to create Launch Agents and investigate outliers."
          },
          "A process not associated with a legitimate software installer creates a new Launch Agent .plist file and its associated executable, followed by suspicious network activity.": {
            "Data": "macOS Process Execution Logs; macOS File Creation Logs; Zeek conn.log",
            "Data Platform": "Endpoints, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Define and hunt for a behavioral chain of events: 1. A process not on an allowlist of legitimate software installers (e.g., a browser, document reader, or terminal session) writes a new executable file. 2. Within a short time window, the same parent process creates a .plist file in a Launch Agent directory that points to the new executable. 3. The new executable process starts and initiates an outbound network connection observed in Zeek conn.log. Use correlation analysis based on Parent Process ID (PPID) and timestamps across these data sources to detect the full TTP."
          },
          "A recently created Launch Agent executes a program that exhibits anomalous behavior, such as unexpected network traffic, file access, or process spawning, compared to a baseline.": {
            "Data": "macOS Process Execution Logs; Zeek conn.log",
            "Data Platform": "Endpoints, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Identify all executables launched by newly created Launch Agents (e.g., created in the last 7 days). For these executables, establish a dynamic baseline of behavior. Use descriptive statistics and time series analysis on Zeek conn.log data to detect anomalies in network traffic, such as unusual data volume, high connection frequency, or high destination port entropy. Flag processes that spawn unexpected child processes (e.g., shell, scripting interpreters) or access sensitive user files outside of their expected function."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary attempting privilege escalation using Launch Agents? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1543.001 - Launch Agent": {
          "A process with standard user privileges attempts to modify or create a .plist file in a privileged Launch Agent directory, matching a known privilege escalation exploit signature.": {
            "Data": "macOS Process Execution Logs; macOS File Access Denied Logs",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for file creation or modification events in `/System/Library/LaunchAgents/` and `/Library/LaunchAgents/`. Alert if the acting process is running under a standard user context (not root). Correlate these attempts with specific command-line arguments or process execution chains that match signatures of known macOS privilege escalation vulnerabilities which allow writing to protected locations. Also monitor for a high volume of file access denied events to these directories from a single process."
          },
          "A process running with standard user privileges uses the 'launchctl' command to load or bootstrap a Launch Agent from a user-writable path.": {
            "Data": "macOS Process Execution Logs",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process execution logs for the use of `launchctl load` or `launchctl bootstrap`. For each execution, analyze the user context and the full path of the target .plist file. Flag instances where a process running as a standard user loads a .plist from a user-writable directory (e.g., `~/Library/LaunchAgents`, `/tmp`, `/Users/Shared/`). Establish a baseline of normal `launchctl` usage by user type and alert on deviations."
          },
          "A process gains root privileges through an unusual method and immediately creates or modifies a Launch Agent in a system-level directory.": {
            "Data": "macOS Process Execution Logs; macOS File Creation Logs",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for processes that change user context to root, especially if the escalation path is anomalous (e.g., not via a standard, interactive `sudo` command). Correlate this privilege escalation event with subsequent file write activity within a short time window (e.g., less than 60 seconds). Alert if the newly-privileged process creates or modifies a .plist file in `/Library/LaunchAgents/` or `/System/Library/LaunchAgents/`. This behavioral sequence links the act of privilege escalation directly to the act of establishing persistence with those new privileges."
          },
          "An unsigned or ad-hoc signed process creates a Launch Agent in a privileged directory.": {
            "Data": "macOS Process Execution Logs; macOS File Creation Logs; macOS Code Signing Information",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "For every process that creates or modifies a file in `/Library/LaunchAgents/` or `/System/Library/LaunchAgents/`, query the code signing information of the acting process. Generate an alert if the process is unsigned, has an ad-hoc signature, or is signed by a developer certificate not on an established organizational allowlist. Use frequency analysis to baseline the legitimate signers and processes that interact with these directories (e.g., trusted installers, Apple-signed system processes) and investigate any outliers."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
