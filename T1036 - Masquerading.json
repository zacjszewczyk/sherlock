```json
[
  {
    "Is the adversary employing masquerading techniques for defense evasion? (TA0005 - Defense-Evasion)": {
      "Indicators": {
        "T1036 - Masquerading": {
          "Execution of a process where the file hash matches a known malicious indicator, but the filename is a common, legitimate system process name (e.g., svchost.exe, lsass.exe, powershell.exe).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable and collect process creation logs (Windows Event ID 4688) with file hash information (e.g., SHA256). Continuously join the hash from each process creation event with a high-confidence threat intelligence feed of known malicious file hashes. From the resulting matches, filter for events where the process name corresponds to a common system binary (e.g., svchost.exe, lsass.exe, cmd.exe, explorer.exe). Any match is a high-fidelity indicator of masquerading and should be investigated immediately."
          },
          "Process execution using known filename-based masquerading patterns, such as right-to-left override (RTLO) characters, double extensions, or common misspellings of legitimate binaries.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Scan process names from Windows Event ID 4688 logs using regular expressions. Specifically search for: 1) The RTLO character (U+202E), which reverses the subsequent string. 2) Filenames with double extensions where the final extension is executable (e.g., '.pdf.exe', '.docx.scr'). 3) Filenames that are common misspellings or typosquats of critical system binaries (e.g., 'svch0st.exe', 'exploror.exe'). Maintain and update a list of target system binary names and their common variations for this check."
          },
          "A process with a name corresponding to a legitimate system binary is executed from a non-standard or user-writable file path.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a baseline allowlist of standard, legitimate file paths for all critical system processes (e.g., `svchost.exe` in `C:\\Windows\\System32`). Collect process creation events (Windows Event ID 4688) and alert on any execution of these processes from a path not on the allowlist, such as `C:\\Users\\`, `C:\\ProgramData\\`, `C:\\Temp\\`, or other user-writable directories. Use frequency analysis on process path and process name combinations to statistically identify low-frequency, anomalous occurrences that may represent new masquerading locations."
          },
          "A running process has a filename that mismatches its internal PE metadata (e.g., OriginalFilename, InternalName), or a legitimate system process is spawned by an unusual parent process.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "For process creation events (Windows Event ID 4688), enrich logs with PE metadata. Compare the process name to the internal `OriginalFilename` and `InternalName` fields. Flag instances of significant mismatch. Additionally, establish a baseline of normal parent-child process relationships (e.g., `services.exe` -> `svchost.exe`). Use correlation analysis to detect and alert on anomalous parent-child process relationships (e.g., `outlook.exe` -> `svchost.exe`, `explorer.exe` -> `powershell.exe` in an unusual context). Box-plots of child process counts per parent can identify anomalous spawning activity."
          },
          "A file purporting to be a legitimate, signed Microsoft binary is executed but lacks a valid digital signature or is signed by an untrusted or anomalous publisher.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "For process creation events (Windows Event ID 4688), ensure signature information is collected. Filter for processes that should be signed by Microsoft (e.g., executables in `C:\\Windows\\System32`). Verify the signature status for each. Flag any instance where the process is unsigned, the signature is invalid, or the signer is not a trusted Microsoft entity (e.g., 'Microsoft Windows', 'Microsoft Corporation'). Use descriptive statistics to find rare or new signers for system-like processes across the enterprise to hunt for compromised or forged certificates."
          },
          "A process, potentially masquerading as a legitimate tool, is executed with highly randomized, obfuscated, or encoded command-line arguments inconsistent with its typical usage.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Collect Windows Event ID 4688 and extract the full command-line arguments. For common processes (e.g., powershell.exe, cmd.exe, rundll32.exe), establish a baseline of normal argument structure and complexity. Calculate the Shannon entropy of command-line strings and flag those with unusually high entropy, which often indicates packed or encrypted scripts. Scan for common encoding patterns (e.g., Base64, Hex) or execution policy bypasses. Use time series analysis to detect sudden increases in high-entropy command lines across the environment."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```