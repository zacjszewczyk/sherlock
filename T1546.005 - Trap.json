
[
  {
    "Is the adversary maintaining persistence using interrupt signals? (TA0003 - Persistence)": {
      "Indicators": {
        "T1546.005 - Trap": {
          "Modification of a shell startup file (e.g., .bashrc, .profile within a WSL/Cygwin environment) by a process whose hash is a known malicious selector.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable file system auditing on user home directories within WSL/Cygwin environments to generate Windows Event ID 4663 for writes to shell startup files (e.g., .bashrc, .profile). Correlate the Process ID from the 4663 event with a process creation event (4688) to get the modifying process's name and hash. Cross-reference this hash against a CTI feed of known malware. An alert signifies a known malicious process is attempting to set up trap-based persistence."
          },
          "Addition of known malicious `trap` command patterns to shell configuration files, such as those that download and execute remote payloads upon exit.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for write modifications (Windows Event ID 4663) to shell configuration files (.bashrc, .profile, etc.) within WSL/Cygwin paths. When a modification is detected by an unusual process (e.g., not a known text editor or shell), trigger an alert for investigative review of the file's contents. The investigation should use regular expressions to search for `trap` commands that contain suspicious patterns like `curl`, `wget`, `bash -c`, or base64 encoded strings, indicating a pattern of persistence via remote payload execution."
          },
          "A non-standard Windows process (e.g., a Microsoft Office application, browser, or non-interactive script like powershell.exe) modifies a user's Linux shell configuration file.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal processes that modify shell startup files within WSL/Cygwin environments (e.g., `bash.exe`, `vim`, `nano.exe`, `code.exe`). Monitor for write events (Windows Event ID 4663) to these files (`.bashrc`, `.profile`) and correlate with the parent process name from Windows Event ID 4688. Alert when the modifying process is not on the established baseline, indicating a process from a different context is creating a persistence mechanism. Use frequency analysis on modifying process names to spot anomalies."
          },
          "A process unexpectedly spawns from a shell interpreter (`bash.exe`, `sh.exe`) and initiates an external network connection immediately following the parent shell's termination.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4689; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate process termination events (Windows Event ID 4689 for `bash.exe`, `sh.exe`, etc.) with immediately subsequent process creation events (Windows Event ID 4688) that lack a direct, active parent process. This temporal sequence suggests a command triggered on exit (via `trap`). Further correlate the newly spawned process with external network connections in Zeek conn.log. Use time series analysis to detect unusual sequences of process termination, creation, and network connection within a very short window (e.g., <1 second)."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary attempting privilege escalation via interrupt signals? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1546.005 - Trap": {
          "A script executed with elevated privileges (e.g., root in WSL) matches the hash of a known privilege escalation tool and modifies another privileged script or configuration file.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4663",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Filter process creation events (Windows Event ID 4688) for those running with elevated privileges (e.g., `root` user context in WSL, Administrator). Hash the executables or scripts being run. Cross-reference these hashes against CTI feeds for known privilege escalation tools (e.g., LinPEAS, DirtyCow variants). If a match is found, correlate with any file write events (Windows Event ID 4663) it performs, especially to system-level shell startup scripts like `/etc/profile` in WSL, to detect hijacking of privileged execution flows."
          },
          "A `trap` command pattern designed for privilege escalation is added to a system-wide, privileged script (e.g., adding a user to the sudo/docker group).": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688; Windows Event ID 4732",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for write modifications (Windows Event ID 4663) to system-level shell configuration files (e.g., `/etc/profile`, `/etc/bash.bashrc`, service start/stop scripts within WSL). Alert on any modification for investigative review. The investigation should look for the addition of `trap` commands that execute known privilege escalation patterns, such as `usermod -aG sudo`, `chmod u+s /bin/bash`, or other commands that alter permissions or group memberships. Correlate with subsequent privileged group additions (Windows Event ID 4732) for confirmation."
          },
          "A process running with standard user privileges modifies a script or configuration file that is known to be executed later by a privileged user or system service.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a list of scripts and configuration files known to execute with high privileges (e.g., systemd service files, `/etc/profile`, cron jobs owned by `root` in WSL). Monitor these files for write modifications (Windows Event ID 4663). Analyze the corresponding process (Windows Event ID 4688) and its user context that performed the write. Alert if a modification is made by a process running with standard user privileges, as this is a key behavioral indicator of a privilege escalation setup attempt."
          },
          "A privileged system service or scheduled task involving a shell script spawns an unexpected child process that performs sensitive system actions.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4720; Windows Event ID 4732; Zeek conn.log",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal child processes for privileged scripts (e.g., service startups, scheduled tasks running as SYSTEM or root in WSL). Monitor process creation events (Windows Event ID 4688) where the parent is a privileged shell script. Alert on the creation of anomalous child processes not in the baseline. Correlate these unexpected processes with subsequent security events like new user creation (4720), a user being added to a privileged group (4732), or unusual outbound network connections (Zeek conn.log). Use correlation analysis to link the anomalous child process to subsequent privileged operations within a short time frame, suggesting a hijacked, privileged execution flow."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
