[
  {
    "Has the adversary used Parent PID Spoofing for privilege escalation? (TA0004 - Privilege-Escalation)": {
      "Indicators": {
        "T1134.004 - Parent PID Spoofing": {
          "A process is spawned with a spoofed parent ID resulting in an unexpected elevation of privileges.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for new process creations. Analyze parent-child process relationships. Identify processes spawned with ParentProcessId fields that do not match expected parent processes for that user/context/command, particularly if the new process runs with higher privileges than its apparent parent. Use frequency analysis to identify rare or unexpected parent-child pairs."
          },
          "A user-level process is spawned with a parent ID corresponding to a high-privilege system process (e.g., lsass.exe, svchost.exe) without normal UAC elevation.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688. Identify processes spawned with ParentProcessId corresponding to critical system processes (e.g., lsass.exe, svchost.exe) where the NewProcessName is a user-level application (e.g., powershell.exe, cmd.exe) and the spawning user is not SYSTEM or an expected service account. Filter for processes created under suspicious user contexts and high-privilege parent IDs. Baseline legitimate child processes for high-privilege parents using frequency analysis."
          },
          "A process is created with a command line indicative of system utility execution, but reports a parent process ID inconsistent with standard system behavior and potentially a high-privilege process.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688. Identify events where NewProcessName corresponds to standard system utilities (e.g., cmd.exe, powershell.exe, rundll32.exe, svchost.exe) but the ParentProcessName is unexpected or corresponds to a known high-privilege process, and the CommandLine contains suspicious arguments or execution patterns not typically seen from that reported parent. Use frequency analysis on ParentProcessName for specific NewProcessName/CommandLine combinations to baseline and flag outliers using correlation analysis."
          },
          "Creation of a process requiring administrator privileges but reporting a parent process ID other than the expected UAC consent process (consent.exe) or a standard shell (explorer.exe), particularly when the originating process was low privilege.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for processes (NewProcessName) known to require administrator privileges (e.g., installers, system configuration tools run by a standard user). Analyze the ParentProcessName. Flag instances where the parent is neither consent.exe nor explorer.exe but some other process, especially if the process creating the elevated process was running with standard user privileges. Baseline normal elevation paths for applications using frequency analysis on parent processes for specific child processes requiring admin."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  },
  {
    "Is the adversary using Parent PID Spoofing for defense evasion? (TA0005 - Defense-Evasion)": {
      "Indicators": {
        "T1134.004 - Parent PID Spoofing": {
          "Inconsistency between the parent process ID reported in process creation logs (e.g., Windows Event ID 4688 Creator Process ID/Name) and the actual parent process ID (requiring additional data source analysis).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688. Build baseline profiles of normal parent-child process relationships for common applications and system processes using frequency analysis. Flag process creations where the ParentProcessName/ParentProcessId is unusual or inconsistent with the NewProcessName/command line based on the baseline. Use correlation analysis to identify frequent deviations and prioritize investigation."
          },
          "Observation of unusual command line arguments or process chains in process creation events that may indicate explicit PPID assignment or malicious API usage.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for suspicious process creations (NewProcessName) and examine the CommandLine field for unusual parameters or sequences that might result from specific API calls like CreateProcess with extended flags. Analyze frequency of unusual command line arguments or process chains using descriptive statistics."
          },
          "Creation of known script interpreter processes (e.g., powershell.exe, cscript.exe, wscript.exe) or binaries often used for execution (e.g., rundll32.exe, regsvr32.exe) that report explorer.exe or other common shell processes as their parent, when not initiated via typical user interaction.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for NewProcessName matching common script interpreters or execution binaries (e.g., powershell.exe, rundll32.exe, regsvr32.exe). Filter for events where ParentProcessName is explorer.exe or another common shell/system process not typically expected to spawn these binaries. Use frequency analysis to identify unusual ParentProcessName/NewProcessName pairs."
          },
          "Creation of a user-level or script-related process reporting a high-privilege system process (like svchost.exe, services.exe) as its parent, in a context where this relationship is atypical for evasion.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688. Identify processes (NewProcessName) that are typically user-level applications, script interpreters, or execution binaries and report a ParentProcessName corresponding to a critical system process (e.g., svchost.exe, services.exe, lsass.exe) in a manner inconsistent with known legitimate system behavior. Create a baseline of legitimate parent-child relationships for these system processes using frequency analysis and flag deviations using correlation analysis on parent-child process pairs."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  }
]