[
    {
        "information_requirement": "Is the adversary attempting to evade defenses using polymorphic code?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1027.014",
                "name": "Polymorphic Code",
                "evidence": [
                    {
                        "description": "Network connections from a host exhibiting polymorphic process behavior to IP addresses or domains known to be associated with malware families that use polymorphism.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Network devices",
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "First, identify hosts with potential polymorphic activity using behavioral detections. Then, correlate the identified host IPs with their network connection logs (Zeek conn.log). Inner join the destination IP addresses and server names from these connections with a high-confidence cyber threat intelligence (CTI) feed of indicators known to be linked to malware families that use polymorphism (e.g., Emotet, Qakbot, QSnatch C2s). An alert from a behavioral detection becomes high-confidence if the host is also communicating with a known malicious endpoint associated with polymorphism."
                    },
                    {
                        "description": "Execution of processes with command-line arguments or process ancestry patterns matching known crypters, packers, or loaders that generate polymorphic executables.",
                        "data_sources": [
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for process creation events. Maintain and apply a library of regular expressions and parent-child process relationships that match the execution patterns of known packing or loading tools (e.g., PowerShell launching a process from a large, encoded command; rundll32.exe launching an orphan process from a DLL without a clear parent). Alert on command-line structures or process trees that match these known malicious patterns, as they are often precursors to executing polymorphic payloads."
                    },
                    {
                        "description": "High-entropy process execution patterns where a parent process spawns multiple children, or a single command-line structure is executed repeatedly, with constantly changing file hashes or process names.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Zeek files.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Aggregate Windows Event ID 4688 logs by ParentProcessName or the structure of the CommandLine. Correlate the NewProcessName with file hashes from Zeek files.log. For a given parent process or command-line pattern observed over a time window, calculate the Shannon entropy of the child process names and their associated file hashes. A high entropy score indicates high variability and is a strong indicator of polymorphism. Use descriptive statistics to identify parent processes with an anomalously high number of unique child process hashes and flag them for investigation."
                    },
                    {
                        "description": "Recurring network communications from a single host to a destination where key connection metadata (e.g., payload size, request/response ratio, JA3/JA4 hash, HTTP headers) exhibits high variability over time.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Zeek http.log",
                            "Zeek ssl.log"
                        ],
                        "data_platforms": [
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "For each internal host, baseline its network connections to external destinations. Use time series analysis to monitor for changes in communication patterns. For recurring connections to a single destination IP, calculate the entropy and standard deviation of various connection attributes over time, such as `orig_bytes` and `resp_bytes` (from Zeek conn.log), `User-Agent` and other headers (from Zeek http.log), and JA3/JA4 hashes (from Zeek ssl.log). A sustained high degree of variability in these attributes for a given communication channel is anomalous and suggests a polymorphic protocol designed to evade signature-based network detection."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
