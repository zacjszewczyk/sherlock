
[
  {
    "Is the adversary maintaining persistence using Office application startup mechanisms? (TA0003 - Persistence)": {
      "Indicators": {
        "T1137 - Office Application Startup": {
          "Presence of files (e.g., add-ins, templates, scripts) in Office startup or add-in locations with known malicious file hashes, or registry modifications for Office add-ins using known malicious CLSIDs or names.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4657",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Continuously scan files created in or modified within Office startup paths (`%APPDATA%\\Microsoft\\{Word,Excel,PowerPoint}\\STARTUP`, `%APPDATA%\\Microsoft\\Templates`) and add-in directories. Compare file hashes (captured via EDR or from reading the file upon a write event from Event ID 4663) against a CTI feed of known malicious file hashes. Similarly, monitor registry modifications (Event ID 4657) for Office add-ins (e.g., `HKCU\\Software\\Microsoft\\Office\\<app>\\Addins`) for values or data matching known malicious persistence mechanisms. Inner join observed file hashes and registry values with threat intelligence data and alert on any match."
          },
          "An Office application spawning a child process (e.g., powershell.exe, wscript.exe, mshta.exe) with command-line arguments characteristic of malicious script execution, such as obfuscated commands, download cradles, or encoded payloads.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creation events where the parent process is an Office application (e.g., `winword.exe`, `excel.exe`, `outlook.exe`). Inspect the command line of child processes like `powershell.exe`, `cmd.exe`, `wscript.exe`, `cscript.exe`, `mshta.exe`. Use regular expression matching to detect common malicious patterns, including `-enc`, `-nop`, `-w hidden`, `IEX`, `DownloadString`, or long, high-entropy command lines. Maintain and apply a curated list of known malicious script patterns to flag suspicious activity."
          },
          "An Office application spawning a child process that is statistically rare or anomalous for the environment, such as a direct network utility or system administration tool.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "From Windows Event ID 4688 logs, build a baseline of normal parent-child process relationships for all Office applications (`winword.exe`, `excel.exe`, `powerpnt.exe`, `outlook.exe`). Continuously monitor for new or low-frequency child processes. Flag the creation of processes like `powershell.exe`, `cmd.exe`, `wscript.exe`, `mshta.exe`, `regsvr32.exe`, or any process not seen in the established baseline. Use frequency analysis and descriptive statistics (counts, percentiles) on the `ProcessName` field to identify child processes that are statistical outliers for an Office parent."
          },
          "A non-Office process or an Office application operating outside of a user-driven context writes an executable or script file to a sensitive Office startup or template directory.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for file write events (Windows Event ID 4663) in sensitive Office directories (e.g., `STARTUP`, `XLSTART`, `Templates`). Correlate the process ID from the file write event with its creation event (Event ID 4688) to identify the responsible process and its parent. Create a baseline of processes that normally write to these locations (e.g., `winword.exe` during a 'Save As Template' operation). Flag write operations from anomalous processes (e.g., `powershell.exe`, `svchost.exe`, `rundll32.exe`) or at unusual times. Use correlation analysis to link these writes to preceding network connections or other suspicious events."
          },
          "Anomalous modification of Office add-in registry keys, such as changes made by an unusual process or installation of add-ins with low-prevalence filenames or COM objects across the enterprise.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for modifications to Office add-in registry keys (e.g., `HKCU\\Software\\Microsoft\\Office\\...\\Addins`). Baseline the processes that typically modify these keys (e.g., `msiexec.exe`, legitimate installers). Flag modifications made by unusual processes (e.g., `cmd.exe`, `powershell.exe`, scripts) by correlating with Windows Event ID 4688. Calculate the prevalence of add-in DLL filenames or `FriendlyName` values across the environment. Use entropy measures or frequency analysis (e.g., identifying values that appear on <1% of endpoints) to detect rare add-ins that may indicate targeted malicious persistence."
          },
          "Creation of an Outlook rule containing suspicious keywords, targeting all incoming mail, and configured to launch an application or run a script.": {
            "Data": "Windows Event ID 4657",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to Outlook rules stored in the registry. Analyze the binary rule data for suspicious strings indicative of application launching (e.g., `.exe`, `.dll`, `.vbs`, `.ps1`, `powershell`) or obfuscated names (e.g., a rule named simply '.'). Baseline normal rule creation behavior. Use time series analysis to detect unusual spikes in rule modifications. Flag rules created by processes other than `outlook.exe` or created outside of normal user activity hours, and prioritize those that appear to launch external applications."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
