```json
[
  {
    "Is the adversary attempting lateral movement by exploiting remote services? (TA0008 - Lateral Movement)": {
      "Indicators": {
        "T1210 - Exploitation of Remote Services": {
          "Network traffic containing specific signatures or payloads known to exploit vulnerabilities in remote services like SMB (e.g., EternalBlue), RDP, or other network protocols.": {
            "Data": "Zeek conn.log; NIDS alert logs",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Deploy and monitor network intrusion detection system (NIDS) rules that specifically match byte patterns or sequences of known exploits for remote services (e.g., CVE-2017-0144 for EternalBlue, CVE-2019-0708 for BlueKeep). Inner join Zeek conn.log with NIDS alerts on source/destination IPs and timestamps to investigate the context of all exploitation attempts, regardless of success."
          },
          "Execution of common lateral movement tools or scripts (e.g., PsExec, wmic, Impacket) that leverage remote services, identified by characteristic process names, command-line arguments, or named pipe creation.": {
            "Data": "Windows Event ID 4688; Windows Event ID 5145",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 (Process Creation) for patterns indicative of lateral movement tools. For PsExec, look for `PSEXESVC.exe` being created or a service named `PSEXESVC`. For wmic, search for `wmic.exe /node:<remote_host> process call create`. Monitor Windows Event ID 5145 (Detailed File Share) for access to administrative shares (C$, ADMIN$) with Relative Target Names such as `PSEXESVC.exe`, which is a strong pattern for PsExec usage. Use correlation analysis to link these patterns to preceding remote service connections."
          },
          "A process associated with a network service (e.g., `svchost.exe`, `lsass.exe`, `services.exe`) spawning an anomalous child process, such as a command shell or PowerShell, following a remote connection.": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal parent-child process relationships for common network service processes. Monitor Windows Event ID 4688 and alert when a service process (like `services.exe`, `lsass.exe`, `inetinfo.exe`) spawns an unexpected child (e.g., `cmd.exe`, `powershell.exe`, `whoami.exe`, `net.exe`). Use linear regression to model and correlate the likelihood of such an event with preceding inbound remote service connections logged in Zeek conn.log."
          },
          "Anomalous service crashes or errors on a host immediately following a high volume of connection attempts to a remote service on that host, suggesting failed exploit attempts.": {
            "Data": "Windows System Event Log; Windows Application Event Log; Zeek conn.log",
            "Data Platform": "Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows System and Application Event Logs for service error event IDs (e.g., Event ID 7031, 7034 for Service Control Manager errors) on hosts with exposed remote services. Correlate the timestamp of these errors with preceding connection attempts to the service's port in Zeek conn.log. Use time series analysis to detect spikes in the ratio of connections-to-service-errors for a specific host, flagging potential exploit-driven instability."
          },
          "A host initiating internal network scanning across multiple hosts or ports immediately after being the target of a suspected remote service exploitation attempt.": {
            "Data": "Zeek conn.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate inbound connections indicative of exploitation (from other evidence) with subsequent outbound connection patterns from the target host. Identify hosts that begin contacting a high number of unique internal IPs or ports over a short time frame (e.g., >20 hosts on port 445 in 1 minute). Calculate the entropy of destination IPs and ports per source host over time; a sharp increase in entropy following a suspicious inbound connection indicates scanning behavior and potential successful compromise."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```