[
  {
    "Is the adversary attempting to evade defenses using time-based methods? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1497.003 - Time Based Evasion": {
          "Presence of processes executing long sleep commands or using scheduling mechanisms to delay execution.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creation events where the command line contains known sleep commands or scheduling utility arguments (e.g., 'timeout', 'sleep', 'schtasks'). Analyze process execution times relative to parent process creation time. Flag processes with unusually long delays before exhibiting core malicious behavior. Use time series analysis on process activity to identify periods of inactivity followed by bursts of activity."
          },
          "Detection of processes executing excessive loops of benign commands (like ping) or making rapid, repeated API calls without apparent purpose.": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for execution of commands like 'ping' with looping arguments. Monitor Zeek conn.log for unusual patterns of repeated, low-volume network connections (e.g., excessive pings to internal or external IPs). Use frequency analysis to identify processes or endpoints with unusually high rates of execution for specific benign commands or connection patterns over time. Correlate with process execution time to identify looping behavior."
          },
          "Execution of processes or scripts with unusual delays between stages or triggered by specific time conditions.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor sequences of process creation events (Windows Event ID 4688) initiated by a single parent process (e.g., a script interpreter like powershell.exe or cmd.exe). Calculate the time difference between the creation of consecutive child processes or distinct commands executed by the same process. Flag sequences exhibiting unusually long or non-deterministic delays between steps compared to typical legitimate process execution patterns. Use time series analysis to identify abnormal gaps in execution flow followed by activity."
          },
          "Repetitive execution of simple system commands or APIs without expected functional outcome, potentially exceeding normal analysis environment time limits.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for rapid, successive executions of the same or similar simple commands (e.g., 'whoami', 'hostname', 'date /t', basic file system queries) by a single process within a short timeframe. Analyze command line arguments for unusual loop structures or excessive repetition. Use frequency analysis to identify processes executing specific commands far more frequently than expected in normal activity. Consider processes that rapidly execute these commands without subsequent complex actions."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  },
  {
    "Is the adversary attempting to discover the environment using time-based methods? (TA0007 - Discovery)": {
      "Indicators": {
        "T1497.003 - Time Based Evasion": {
          "Execution of code that samples system time or uptime before and after delay functions, potentially calculating time discrepancies.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for patterns of command execution within a single process or related processes. Look for sequences like (get time/uptime) -> (sleep command/delay) -> (get time/uptime). Extract timestamps for these events and the duration of the sleep command argument. Analyze the actual elapsed time between the start and end time/uptime checks, comparing it to the expected sleep duration. Flag significant discrepancies (actual time << expected sleep time) as potential sandbox detection attempts. Use sequence analysis to find these specific command patterns."
          },
          "Discovery activities (e.g., system information gathering commands) occurring only after a significant delay from initial process execution or triggered by specific time conditions.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for process creation events indicating discovery activity (e.g., network scanning tools, 'whoami', 'ipconfig', 'query user', 'tasklist', 'systeminfo', 'arp -a', 'netstat'). Analyze the time difference between the creation of the initial suspicious process and the execution of these discovery commands. Flag instances where discovery activities occur only after a significant or unusual delay, potentially triggered by specific conditions. Use descriptive statistics to baseline typical execution delays for legitimate processes and identify outliers."
          },
          "Sequences of process execution involving querying system time/uptime, followed by a sleep function, and then querying system time/uptime again.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for command execution patterns within a single process or parent/child process relationships. Specifically, identify the execution of commands/APIs to get system time or uptime (e.g., 'date /t', 'time /t', `GetSystemTimeAsFileTime`, `GetTickCount64`) followed by a sleep command (`timeout`, `sleep`, `start-sleep`) and then another call to get time/uptime within a short interval. Analyze the delta between the timestamps of the second time/uptime call and the first, comparing it to the requested sleep duration from the command line. Flag discrepancies suggesting time manipulation in the execution environment."
          },
          "Batch or script execution that appears idle for a period before executing a flurry of discovery or system enumeration commands.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze process execution events (Windows Event ID 4688) within script interpreter processes (e.g., powershell.exe, wscript.exe, cscript.exe) or batch files. Identify periods of low activity or presence of long sleep/delay commands followed by a rapid succession of commands related to system discovery and enumeration (as listed in the previous evidence). Measure the time gap before the burst of discovery activity starts. Use clustering or density-based methods to identify clusters of discovery commands occurring within unexpectedly short time windows following an initial period of inactivity or a known delay trigger."
          }
        }
      },
      "version": "1.1",
      "last_updated": "2025-05-07"
    }
  }
]