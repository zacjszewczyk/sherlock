
[
  {
    "Is the adversary maintaining persistence on the domain controller via patched authentication? (TA0003 - Persistence)": {
      "Indicators": {
        "T1556.001 - Domain Controller Authentication": {
          "Modification of the HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages registry key on a domain controller, adding a known malicious authentication package DLL.": {
            "Data": "Windows Event ID 4657",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for registry value modifications (Windows Event ID 4657) to 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages' on all domain controllers. Maintain a list of known-bad authentication package DLLs (e.g., mimilib.dll, skeletor.dll). Alert on any event where the new value added to the key matches an entry on the malicious list. This is a selector-based detection for a known persistence mechanism."
          },
          "Execution of commands on a domain controller with arguments or patterns specific to installing a 'Skeleton Key' or other authentication-patching persistence mechanism.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) on domain controllers. Create detection rules for command-line arguments specific to tools like Mimikatz or scripts that install authentication backdoors (e.g., command lines containing 'misc::skeleton', 'privilege::debug'). Analyze parent-child process relationships for suspicious chains, such as powershell.exe spawning processes that subsequently access lsass.exe."
          },
          "Successful authentication of a disabled or expired account, indicating that normal account status validation checks are being persistently bypassed.": {
            "Data": "Windows Event ID 4624; Active Directory security logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Periodically query Active Directory for a complete list of all disabled accounts or accounts with expired passwords. Correlate this list against all successful authentication events (Windows Event ID 4624) logged by domain controllers. A successful login for any account on the disabled/expired list is a high-fidelity behavioral indicator of a compromised authentication mechanism. Use time series analysis to track if these events recur over time."
          },
          "An account with no history of interactive logons to a domain controller begins performing repeated successful interactive logons over time.": {
            "Data": "Windows Event ID 4624",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Filter Windows Event ID 4624 on domain controllers for Logon Type 2 (Interactive), 7 (Unlock), or 10 (RemoteInteractive). For each account, establish a historical baseline of logon types to domain controllers. Use descriptive statistics and frequency analysis to flag any successful interactive logons by accounts (especially service accounts) that have no history of such activity. Consistent repetition of this behavior indicates a potential persistent access channel."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary evading defenses by patching domain controller authentication? (TA0005 - Defense-Evasion)": {
      "Indicators": {
        "T1556.001 - Domain Controller Authentication": {
          "Execution of a process on a domain controller whose filename is a known indicator of a tool used for patching authentication (e.g., mimikatz.exe).": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) on domain controllers. Compare the 'NewProcessName' or 'ProcessName' field against a maintained threat intelligence list of malicious executable filenames associated with credential dumping and authentication patching tools. This provides a simple, fast selector-based rule to detect the staging or execution of known malicious tools."
          },
          "A suspicious process creation event on a domain controller is immediately followed by that process requesting a handle to lsass.exe.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4656",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Create a detection pattern that correlates two events in a short time window: 1) a suspicious process creation (Windows Event ID 4688) on a domain controller, identified by anomalous parent process, unusual command-line arguments, or execution from a non-standard path; 2) a subsequent handle request (Windows Event ID 4656) from that same process targeting lsass.exe. This sequence is a strong pattern for in-memory patching or credential dumping."
          },
          "Modification events targeting critical authentication-related system DLLs (e.g., cryptdll.dll, samsrv.dll, msv1_0.dll) on a domain controller.": {
            "Data": "Windows Event ID 4663",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable and monitor Windows Event ID 4663 (Object Access) on domain controllers for any write access attempts (Accesses containing 'WriteData' or 'AddFile') targeting the file paths of critical authentication DLLs. Any modification to these files outside of a scheduled patching window is a high-fidelity indicator of tampering. Correlate with the source process name to identify the tool used."
          },
          "A successful domain authentication event occurs without a corresponding successful Multi-Factor Authentication (MFA) log entry, indicating a bypass of the MFA control.": {
            "Data": "Windows Event ID 4624; Zeek conn.log; MFA Provider Logs",
            "Data Platform": "Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate successful domain authentications (Windows Event ID 4624) with source network data (Zeek conn.log) to validate the origin. For accounts and systems where MFA is enforced, cross-reference these successful logins with MFA provider logs. A successful Windows login from an external or untrusted source without a corresponding successful MFA log entry within a short time window is a strong behavioral indicator of a defense evasion/bypass. Use correlation analysis across these data sources to automate detection."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary accessing credentials or accounts via patched domain controller authentication? (TA0006 - Credential-Access)": {
      "Indicators": {
        "T1556.001 - Domain Controller Authentication": {
          "A successful authentication event occurs for a honey-token account using a known, hardcoded 'master password' associated with a skeleton key implant.": {
            "Data": "Windows Event ID 4624",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Deploy disabled honey-token accounts in Active Directory. The known 'master password' (e.g., 'mimikatz') used by skeleton key tools acts as a selector. Monitor for any successful logon events (Windows Event ID 4624) for these specific honey-token accounts. Any successful authentication for these accounts is a high-fidelity alert, as it should be impossible through normal means, directly indicating a compromised authentication mechanism."
          },
          "A failed authentication attempt (bad password) is immediately followed by a successful authentication for the same user from the same source IP.": {
            "Data": "Windows Event ID 4624; Windows Event ID 4625",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor domain controller authentication logs for a specific event pattern. Correlate failed logons (Windows Event ID 4625, Status Code 0xc000006d 'bad user name or password') with an immediately subsequent successful logon (Windows Event ID 4624) for the exact same 'TargetUserName' from the same 'IpAddress' within a very short window (e.g., < 1 second). This pattern indicates an adversary trying a user's real password, failing, and then immediately succeeding with the skeleton key."
          },
          "An account successfully authenticates and then rapidly accesses an anomalously high number of distinct network systems compared to its established baseline.": {
            "Data": "Windows Event ID 4624",
            "Data Platform": "Servers, Endpoints",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze successful network logon events (Windows Event ID 4624, Logon Type 3) across the environment. For each user account, establish a baseline for the number of distinct systems accessed within a given time period (e.g., per hour). Use descriptive statistics (mean, standard deviation) or percentile analysis on a rolling basis to flag accounts that suddenly access a number of systems far exceeding their normal behavior, which can indicate widespread lateral movement using a skeleton key."
          },
          "Successful logon events occur from geographically or logically impossible locations, such as simultaneous logins from two different continents for the same user.": {
            "Data": "Windows Event ID 4624",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "For every successful logon (Windows Event ID 4624), extract the source 'IpAddress' and 'TargetUserName'. Geolocate the IP addresses. For each user, maintain a log of their recent login locations and timestamps. Calculate the 'travel speed' required for consecutive logins from different locations. Flag any login sequence that would require physically impossible travel. This behavioral analysis can detect credential abuse regardless of the password used."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
