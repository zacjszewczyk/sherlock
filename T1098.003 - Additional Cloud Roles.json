```json
[
  {
    "Is the adversary maintaining persistence via additional cloud roles? (TA0003 - Persistence)": {
      "Indicators": {
        "T1098.003 - Additional Cloud Roles": {
          "Cloud role or policy modifications originating from a known malicious IP address or using a User-Agent string associated with a specific threat actor's tooling.": {
            "Data": "Cloud Audit Logs; Zeek conn.log",
            "Data Platform": "Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate the source IP address and User-Agent string from cloud audit log events (e.g., AWS's CreatePolicyVersion, AttachUserPolicy; Azure's Add-AzureADGroupMember, Add-RoleMember) with cyber threat intelligence (CTI) feeds of malicious IPs and known threat actor tool signatures. Correlate the cloud event timestamp with Zeek conn.log to trace the source IP back to an internal endpoint, if applicable. Alert on any confirmed matches."
          },
          "Assignment of a specific set of permissions known to enable self-escalation or resource modification for persistence, such as allowing a role to modify its own policies.": {
            "Data": "Cloud Audit Logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Define and monitor for specific patterns of permission assignments that create 'privilege escalation loops' for persistence. For example, in AWS, alert when a policy containing 'iam:CreatePolicyVersion' or 'iam:SetDefaultPolicyVersion' is attached to a role where the 'sts:AssumeRole' principal is the role itself. Maintain a list of known 'toxic' permission combinations that grant backdoor-like capabilities and scan audit logs for their assignment."
          },
          "A high-privilege cloud role is assigned to a dormant or newly created user/service account, or to an external, non-federated account, creating a potential sleeper backdoor.": {
            "Data": "Cloud Audit Logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "For every cloud audit log event assigning a role, enrich the event with the target account's history by correlating with account management logs. Use time series analysis of login/activity data to identify dormant accounts (e.g., no activity for >90 days) that suddenly receive new, high-impact privileges. Flag all sensitive role assignments to newly created accounts (<48 hours old) or accounts outside of the organization's verified domains/tenants. Investigate any combination of these factors."
          },
          "An anomalous number of role or policy modifications are performed by a single identity, or such modifications occur at an unusual time, deviating from established administrative baselines.": {
            "Data": "Cloud Audit Logs; Windows Event ID 4624",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal administrative activity for each privileged user/role, including the frequency, timing, and types of role modifications. Use descriptive statistics (mean, stddev) and time series analysis to detect outliers. Flag accounts performing a burst of modifications (e.g., >3 standard deviations above their baseline in a single hour). Use box-plots to compare an actor's activity against their peer group. Correlate the cloud event timestamps with on-premise login events (Windows Event ID 4624) to verify if the activity originated from a user's normal workstation during typical hours."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Has the adversary escalated privileges by adding additional cloud roles? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1098.003 - Additional Cloud Roles": {
          "A role or policy is created with a name or description matching indicators of compromise (IOCs) from a specific threat campaign known to use cloud privilege escalation.": {
            "Data": "Cloud Audit Logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a list of selector-based indicators from CTI reports, such as specific role names (e.g., 'AWSUpdate', 'CloudSupport'), policy names, or description text used by known threat actors. Create detection rules that scan the request parameters of all role/policy creation and modification events in cloud audit logs for these specific strings. Alert on any exact matches for immediate investigation."
          },
          "An account is granted a specific combination of permissions that enables a known cloud privilege escalation path (e.g., AWS 'iam:PassRole' together with 'ec2:RunInstances' or 'lambda:CreateFunction').": {
            "Data": "Cloud Audit Logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Identify and codify known cloud privilege escalation paths as specific sets of required permissions. For example, in AWS, monitor for the assignment of 'iam:PassRole' permissions. When detected, check if the same principal also has permissions to create resources that can use that role (e.g., 'ec2:RunInstances', 'lambda:CreateFunction', 'glue:CreateDevEndpoint'). Use correlation analysis on an account's total effective permissions after any modification event to check for the completion of a known escalation chain."
          },
          "A non-administrative user or service account is granted permissions that allow it to modify policies, roles, or group memberships of other principals, indicating a privilege transition.": {
            "Data": "Cloud Audit Logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Baseline the typical permissions for different classes of users and service accounts (e.g., developers, data scientists, application identities). Monitor cloud audit logs for any event that grants identity and access management (IAM) write permissions (e.g., 'iam:*Policy*', 'iam:Attach*', 'iam:PassRole', 'Microsoft.Authorization/*/write') to any account not in a pre-defined administrative group. Analyze the 'before' and 'after' state of the account's permissions to confirm a transition from a lower to a higher privilege level regarding access control."
          },
          "Following a role or permission modification, the beneficiary account immediately performs sensitive actions or accesses data it previously could not, confirming the exploitation of newly granted privileges.": {
            "Data": "Cloud Audit Logs",
            "Data Platform": "Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Create a two-stage detection. First, flag any role/permission modification event involving non-administrative accounts or unusual permissions. Second, monitor the subsequent actions of the beneficiary account within a short time window (e.g., 1 hour). Correlate the modification event with high-impact follow-on activity such as accessing sensitive data stores (e.g., 's3:GetObject' on a critical bucket), modifying other permissions, or creating/deleting infrastructure. Use linear regression or correlation analysis to find strong relationships between permission changes and subsequent risky API calls, prioritizing these events for investigation."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```