
[
  {
    "Is the adversary attempting to evade defenses using compiled payloads? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1027.004 - Compile After Delivery": {
          "Presence or creation of source code files or resulting compiled executables that match known malicious file hashes associated with tools that use on-host compilation.": {
            "Data": "Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor file creation events (Windows Event ID 4663). Upon creation of source code files (e.g., .cs, .c, .go) or executables (.exe, .dll) in temporary or user-writable locations, compute the file hash. Correlate these hashes against a continuously updated threat intelligence feed of known malicious source code or payloads from tools that compile after delivery. Alert on any hash matches."
          },
          "Execution of built-in or third-party compilers (e.g., csc.exe, vbc.exe, ilasm.exe, MSBuild.exe, gcc, go build) with suspicious command-line arguments, from non-standard paths, or by unusual parent processes.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation (Windows Event ID 4688) for compiler binaries. Analyze command lines for suspicious patterns such as specifying an output file in a temporary directory (`/out:%TEMP%\\...`), disabling optimizations, or referencing suspicious source files. Profile and alert on executions from atypical directories (e.g., %APPDATA%, C:\\Windows\\Tasks) or when the parent process is not a developer tool (e.g., powershell.exe, wscript.exe, winword.exe). Use frequency analysis and descriptive statistics to identify rare parent-child process relationships involving compilers."
          },
          "A correlated sequence of events involving a source code file being written to disk, followed by a compiler process execution targeting that file, and subsequent execution of the newly compiled binary.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Create a correlated rule that triggers on the following sequence within a short time window (e.g., < 2 minutes) on a single host: 1. File creation of a source code file (e.g., .cs, .c, .vb) in a temporary or user-writable path (Event ID 4663). 2. A compiler process starts (Event ID 4688) with a command line referencing that source file. 3. A new executable file is created (Event ID 4663). 4. The newly created executable process starts (Event ID 4688). Use correlation analysis based on hostname, user context, and file paths to link the events. Alert on the completion of this full chain."
          },
          "A newly compiled executable initiating network connections, especially to external destinations, shortly after its creation.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4663; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Identify the execution of newly compiled binaries using the behavioral chain (source write -> compile -> execute) from host logs (Event IDs 4663, 4688). Correlate the timestamp, hostname, and process name of the new process execution with network connection logs (Zeek conn.log). Flag any instances where a binary compiled within the last 5 minutes initiates outbound network traffic. Use time series analysis or regression to correlate compilation events with subsequent spikes in network traffic from a host. Prioritize alerts for connections to low-reputation IPs, non-standard ports, or IPs not previously contacted by the host or organization."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
