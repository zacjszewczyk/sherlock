[
    {
        "information_requirement": "Is the adversary bypassing file access controls or monitoring via direct volume access?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense-Evasion",
        "indicators": [
            {
                "technique_id": "T1006",
                "name": "Direct Volume Access",
                "evidence": [
                    {
                        "description": "Detection of known malicious tools by hash or specific file artifacts associated with direct volume access capabilities being present or executed on a system.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 (Process Creation) for executable paths and Windows Event ID 4104 for PowerShell script content. Extract file names (e.g., `NinjaCopy.ps1`, `rawdd.exe`, known VSS exploitation tools) or calculate hashes of executed files/scripts. Compare these file names/hashes against a curated threat intelligence feed of known malicious tools or specific versions of utilities frequently abused for direct volume access. Alert on matches for high-fidelity indicators of T1006 tool usage."
                    },
                    {
                        "description": "Execution of built-in utilities (e.g., vssadmin, esentutl, wbadmin) or PowerShell (hosting scripts like NinjaCopy) with specific command-line arguments or script patterns indicative of direct volume access, shadow copy creation/manipulation, or raw data copying.",
                        "data_sources": [
                            "Windows Event ID 4688",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor Windows Event ID 4688 for process creation involving `vssadmin.exe`, `esentutl.exe`, `wbadmin.exe`, or `powershell.exe`. Analyze command-line arguments for specific patterns such as `vssadmin create shadow`, `vssadmin delete shadows`, `esentutl /y /vss \\\\.\\HarddiskVolumeShadowCopyX`, or direct access patterns like `\\\\.\\PhysicalDriveN` or `\\\\.\\X:`. For PowerShell (Event ID 4104), search script blocks for cmdlets and parameters related to NinjaCopy usage (e.g., `-LocalSource '\\\\.\\C:'`, `-RemoteDestination`) or .NET methods for raw disk access. Use regular expressions to match these known malicious patterns. Employ entropy measures on command lines/script blocks to detect obfuscation."
                    },
                    {
                        "description": "Anomalous opening of handles to logical volumes (e.g., `\\\\.\\C:`) or physical drives (`\\\\.\\PhysicalDrive0`) by non-system, unexpected user-land processes, or with unusual access rights flags, suggesting raw disk access attempts.",
                        "data_sources": [
                            "Windows Event ID 4656 (Object Access Auditing)"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Enable and monitor Windows Event ID 4656 for handle requests to 'File System' or 'SAM' object types where the Object Name specifies a logical volume (e.g., `\\\\.\\C:`, `\\\\.\\HarddiskVolumeX`) or a physical drive (`\\\\.\\PhysicalDriveX`). Establish a baseline of legitimate processes (e.g., backup software, disk utilities, OS kernel) that perform such actions. Alert on deviations, such as non-standard processes (e.g., `rundll32.exe`, `powershell.exe` in unusual contexts, unsigned executables from temp locations) requesting these handles, or processes requesting unusual or overly permissive access rights (e.g., `GENERIC_ALL`, `FILE_WRITE_DATA` to a volume by an unexpected process). Use frequency analysis and descriptive statistics (mean, median of access counts per process) to identify rare process-volume access combinations or access rights patterns."
                    },
                    {
                        "description": "A correlated sequence of events involving: 1. Anomalous handle opening to a volume. 2. Subsequent execution of volume snapshot/copy utilities. 3. Followed by unusual data staging on the host or network exfiltration.",
                        "data_sources": [
                            "Windows Event ID 4656",
                            "Windows Event ID 4688",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Implement correlation logic to detect sequences: Stage 1: Anomalous handle opening to a volume by an unexpected process (Windows Event ID 4656). Stage 2: Execution of utilities like `esentutl.exe`, `vssadmin.exe` with volume copy/snapshot commands, or known raw copy tools (Windows Event ID 4688) shortly thereafter (e.g., within 5-15 minutes). Stage 3: Followed by significant file read/write activity on the source host (if detailed host logs are available) and then by anomalous network activity (Zeek conn.log), such as large data transfers to new external IPs, connections over non-standard ports, or a sudden increase in egress data volume. Use correlation analysis with defined time windows to link these stages. Time series analysis on network egress volume from the host can highlight exfiltration spikes post-suspected T1006 activity."
                    },
                    {
                        "description": "Execution of heavily obfuscated PowerShell scripts or unusual .NET API calls within PowerShell related to low-level file system or direct volume manipulation, bypassing standard file access methods.",
                        "data_sources": [
                            "Windows Event ID 4103 (PowerShell Module Logging)",
                            "Windows Event ID 4104 (PowerShell Script Block Logging)",
                            "Windows Event ID 4688"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Enable and monitor PowerShell Script Block Logging (Event ID 4104) and Module Logging (Event ID 4103). Analyze script content for keywords and patterns related to direct volume access (e.g., `\\\\.\\PhysicalDrive`, `CreateFile` with volume paths, `DeviceIoControl` with FSCTL codes like `FSCTL_LOCK_VOLUME`), invocation of .NET APIs for raw disk I/O (e.g., `System.IO.FileStream` with `FileShare.ReadWrite` on volume paths), or signatures of tools like NinjaCopy. Correlate script execution with the parent `powershell.exe` process (Event ID 4688) and its context. Use entropy measures (e.g., Shannon entropy) on script blocks to identify highly obfuscated scripts, which often accompany malicious PowerShell usage. Maintain a baseline of common script block entropy to flag outliers."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
