```json
[
  {
    "Is the adversary maintaining persistence by hijacking execution flow? (TA0003 - Persistence)": {
      "Indicators": {
        "T1574 - Hijack Execution Flow": {
          "A file with a hash known to be a malicious DLL or executable used for hijacking is written to a location involved in a persistent execution path (e.g., service binary path, system directory).": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor file creation/modification events (Windows Event ID 4663) in system directories or application paths referenced by services. For each new executable file, calculate its hash and correlate it against a high-confidence CTI feed of known malicious file hashes associated with hijacking malware. Alert on any match, and correlate with the process that wrote the file (from Event ID 4688)."
          },
          "Modification of a Windows Service's binary path or failure actions in the registry to point to a malicious executable.": {
            "Data": "Windows Event ID 4657; Windows Event ID 4697",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to Service registry keys (HKLM\\SYSTEM\\CurrentControlSet\\Services\\*). Specifically track changes to 'ImagePath' and 'FailureCommand' values. Baseline legitimate service binary paths and alert on changes pointing to non-standard locations (e.g., %TEMP%, user profiles) or to unsigned binaries. Use correlation analysis to link these changes to non-standard administrative activity."
          },
          "Modification of persistent DLL loading registry keys, such as AppInit_DLLs, to force the loading of a malicious DLL into processes.": {
            "Data": "Windows Event ID 4657",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for any modification to the 'AppInit_DLLs' registry key (HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows). As this mechanism is largely deprecated and highly suspicious, any modification should be treated as a high-fidelity alert. Compare the new DLL path against a list of known-good files and investigate the source of the change."
          },
          "A legitimate, signed system process begins loading an unusual or unsigned DLL not present in its established baseline.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Enable and analyze process creation logs (Windows Event ID 4688) that include loaded module information. For critical system processes (e.g., svchost.exe, lsass.exe, explorer.exe), establish a baseline of normally loaded DLLs and their paths. Use statistical methods (e.g., set difference, frequency analysis) to detect the loading of DLLs from non-standard paths (%TEMP%, %APPDATA%) or DLLs that are unsigned. Box-plots of loaded module counts per process can also identify outliers."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary elevating privileges by hijacking execution flow? (TA0004 - Privilege Escalation)": {
      "Indicators": {
        "T1574 - Hijack Execution Flow": {
          "Creation of a file with a specific name and hash known to be used in privilege escalation exploits (e.g., a malicious 'wlbsctrl.dll') in a user-writable directory that is part of a privileged process's search path.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor file creation events (Windows Event ID 4663) in user-writable, top-level directories (e.g., C:\\, C:\\Python27) for specific filenames known to be associated with unquoted service path or DLL hijacking privilege escalation vulnerabilities (e.g., 'wlbsctrl.dll', 'IKEEXT.DLL'). Correlate with hash lookups against CTI feeds and investigate the process that created the file (from Event ID 4688)."
          },
          "Modification of execution-related Registry keys (e.g., IFEO Debugger, COM CLSID) to intercept the execution of a higher-privileged process and substitute a malicious binary.": {
            "Data": "Windows Event ID 4657",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4657 for modifications to sensitive registry keys used for execution hijacking. Focus on 'Debugger' values under 'Image File Execution Options' keys and 'InprocServer32' values under 'HKCU\\Software\\Classes\\CLSID\\...'. Baseline legitimate values for these keys and alert on any modification that points to an executable in a non-standard path, especially if initiated by a low-privilege user process."
          },
          "A low-privilege process writes or modifies an executable or DLL in a system-owned directory, which is subsequently loaded by a high-privilege process (e.g., a service running as SYSTEM).": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate file write events (Windows Event ID 4663) in protected directories (e.g., %SystemRoot%\\System32) with the integrity level and user context of the source process (from Event ID 4688). If a low-privilege process writes a file, flag the event and monitor for subsequent module load events (via Event ID 4688 with module logging) of that specific file by a high-privilege process. Use correlation analysis based on file path and time window (e.g., within 5 minutes) to link the write and load events."
          },
          "An unusual parent-child process relationship is observed where a typically user-level process spawns a system-level process, or vice-versa, following a file or registry modification indicative of hijacking.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4657; Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze process creation events (Windows Event ID 4688) to build a statistical model of normal parent-child process relationships. Identify anomalous relationships (e.g., notepad.exe spawning services.exe). Correlate the creation of such anomalous processes with recent file (Event ID 4663) or registry (Event ID 4657) modifications on the same host to establish a potential cause-and-effect chain for privilege escalation via hijacking. Use time series analysis to detect when these correlated events occur."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  },
  {
    "Is the adversary evading defenses by hijacking execution flow? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1574 - Hijack Execution Flow": {
          "A DLL or executable belonging to a known security product (e.g., EDR, antivirus) is replaced by a file with a hash matching a known malicious bypass tool.": {
            "Data": "Windows Event ID 4663",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Maintain a baseline of file paths and hashes for critical security product binaries. Monitor file write events (Windows Event ID 4663) in the installation directories of these products. If a file is modified, calculate its new hash and compare it against both the known-good baseline and a CTI feed of malicious hashes associated with security tool bypasses. An alert is triggered if the new hash is not in the baseline and is identified as malicious."
          },
          "Creation of a DLL with a name matching a legitimate system DLL in a directory that a trusted application searches before the actual system directory (DLL Search Order Hijacking).": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for the creation (Windows Event ID 4663) of DLLs with names matching common system DLLs (e.g., 'version.dll', 'cryptbase.dll', 'dbghelp.dll') in application-specific directories (e.g., 'C:\\Program Files\\App\\'). Correlate the creating process (from Event ID 4688) with the application that is expected to load it. Use frequency analysis to identify rare DLL creations in these directories, especially if the new DLL is unsigned or created by an unexpected process like 'rundll32.exe' or a script host."
          },
          "A legitimate, signed operating system binary or application is modified or replaced by an unsigned binary.": {
            "Data": "Windows Event ID 4663; Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor for write operations (Windows Event ID 4663) on legitimate system binaries in trusted paths (e.g., %SystemRoot%\\System32). When a modification is detected, check the digital signature of the new file. Flag any instance where a signed, trusted binary is replaced by an unsigned one, especially if the modification is not associated with an authorized patching process. Use correlation analysis to link the modifying process (from Event ID 4688) to the event."
          },
          "A trusted system process (e.g., svchost.exe, explorer.exe) initiates anomalous network connections or executes suspicious child processes, deviating from its established behavioral baseline.": {
            "Data": "Windows Event ID 4688; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline of normal network activity (destination IPs/ports, protocols, data volume) and child processes for critical system processes. Monitor for deviations, such as 'svchost.exe' initiating a connection to a non-Microsoft IP address or 'explorer.exe' spawning 'powershell.exe' with an encoded command. Use linear regression to detect anomalous data transfer volumes and entropy measures to detect unusual command-line arguments. Correlate endpoint process data (Event ID 4688) with network logs (Zeek conn.log) to confirm the anomalous external communication."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
```