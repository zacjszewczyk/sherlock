
[
  {
    "Is the adversary using rundll32.exe for defense evasion? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1218.011 - Rundll32": {
          "Rundll32.exe loading a DLL whose file hash is known to be malicious, or rundll32.exe initiating network connections to known malicious IP addresses or domains.": {
            "Data": "Windows Event ID 4688; Windows Event ID 5156; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Extract DLL file paths from rundll32.exe command lines (Windows Event ID 4688). For DLLs not in standard system directories (e.g., System32, SysWOW64) or those exhibiting suspicious naming conventions, calculate their file hash. Correlate this hash against a continuously updated cyber threat intelligence (CTI) feed of known malicious file hashes. Separately, correlate rundll32.exe Process IDs (from Event ID 4688) with network connection events (Windows Event ID 5156 for host-based logs, Zeek conn.log for network logs) and check destination IP addresses/domains against CTI feeds listing known C2 servers or malicious infrastructure. Alert on any confirmed matches."
          },
          "Rundll32.exe command line invoking known malicious patterns, such as specific DLL export names (e.g., `Start`, `DllRegisterServer` in unusual DLLs), ordinal numbers, script execution syntax (javascript:, .sct, .cpl with shell32.dll), or W/A suffix obfuscation.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze rundll32.exe command lines (Windows Event ID 4688) using regular expressions and a maintained library of known malicious patterns: (a) Use of `javascript:` protocol handler with `mshtml,RunHTMLApplication` or similar functions, especially with remote `GetObject(\"script:https://...\")` calls or heavily obfuscated inline scripts. (b) Execution of `.cpl` files via `shell32.dll,Control_RunDLL` or `Control_RunDLLAsUser`. (c) Invocation of commonly abused export names (e.g., `PluginInit`, `StartW`, `DllEntryPoint`) in non-standard DLLs or by suspicious ordinal numbers (e.g., `#1`, `#2`). (d) Function calls with `W` or `A` suffixes where such exports are not typical for the DLL or appear designed to hide a malicious base function (e.g., calling `EvilFuncW` when only `EvilFunc` is present). Calculate entropy of command line arguments; unusually high entropy might indicate obfuscated parameters requiring further inspection."
          },
          "Rundll32.exe executed from an atypical file path (masquerading as a legitimate name in an unexpected directory), loading DLLs from non-standard or user-writable locations (e.g., %TEMP%, user profile directories, network shares), or launched by an unusual parent process.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 for rundll32.exe executions and analyze: 1. The full path of `rundll32.exe` itself; flag if it's not executing from `%SystemRoot%\\System32` or `%SystemRoot%\\SysWOW64`, which indicates potential masquerading. 2. The path of the DLL being loaded; flag DLLs loaded from unusual directories such as `C:\\Users\\<username>\\AppData\\Local\\Temp\\`, `C:\\ProgramData\\`, user profile folders, or network shares. 3. The parent process name and path; establish a baseline of common parent processes for rundll32.exe (e.g., `explorer.exe`, `services.exe`) and flag executions by atypical parents (e.g., Microsoft Office applications, web browsers, script interpreters like `wscript.exe` or `powershell.exe` unless specifically whitelisted). Use frequency analysis and baselining to identify rare paths and parent-child relationships. Correlate these anomalies with other suspicious activities."
          },
          "Anomalous sequence of rundll32.exe executions, a sudden spike in its usage on an endpoint, or rundll32.exe making unexpected network connections not attributable to legitimate software activity.": {
            "Data": "Windows Event ID 4688; Windows Event ID 5156; Zeek conn.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a baseline for rundll32.exe execution frequency and typical command line patterns per endpoint or user profile using historical Windows Event ID 4688 data. Monitor for sudden spikes in rundll32.exe activity or multiple distinct suspicious rundll32 command lines occurring in a short time window (e.g., within 5 minutes) on a single host. Use time series analysis or statistical process control (e.g., CUSUM charts, moving averages with standard deviation thresholds) to detect unusual bursts of activity. For rundll32.exe instances not matching known IOCs or malicious patterns but deemed suspicious by other heuristics (e.g., unusual parent), monitor associated network connections (Windows Event ID 5156, Zeek conn.log) for traffic to non-standard ports, low-reputation domains, or unexpected geo-locations. Analyze data transfer volumes using descriptive statistics (mean, median, percentiles) to spot anomalous uploads or downloads by rundll32.exe."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
