[
  {
    "information_requirement": "Is an adversary manipulating SMS messages on our mobile devices? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1582",
        "name": "SMS Control",
        "evidence": [
          {
            "description": "An application is configured as the default SMS handler, and its package name either is not on an approved application allowlist, or is statistically rare across the mobile device fleet. Adversaries may set a malicious app as the default handler to intercept, modify, or delete messages by registering for the SMS_DELIVER broadcast intent and writing to the device's SMS content provider [1][2].",
            "data_sources": [
              "MDM device_settings.log",
              "MDM app_inventory.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Mobile Device Management (MDM) and Mobile Threat Defense (MTD) Platforms, SIEM Log Aggregation Layer",
            "action": [
              "Create and maintain an allowlist of approved SMS application package names (e.g., `com.google.android.apps.messaging`). Ingest MDM device setting logs into the SIEM. Write a detection rule that queries for the `default_sms_handler` field and alerts when its value is not present in the allowlist.",
              "Using MDM application inventory logs, execute a scheduled query to aggregate and count all package names configured as the `default_sms_handler` across all devices. Calculate the prevalence percentage for each package name. Generate an alert for any device where the handler's prevalence falls below a statistically determined low-prevalence threshold (e.g., <1st percentile).",
              "Develop a binary classification model (e.g., Random Forest) using features from MDM application inventory data such as requested permissions, developer name, app store category, and user ratings to predict a `is_legitimate_sms_handler` label. Deploy the model to periodically score all active default SMS handlers. Generate an alert for any application classified as 'not legitimate' with a model confidence score greater than $$ 0.9 $$."
            ]
          },
          {
            "description": "An application is granted `android.permission.SEND_SMS` or `android.permission.RECEIVE_SMS` permissions, and the application's assigned category (e.g., 'Games', 'Productivity') does not justify this access, or its complete set of requested permissions is a statistical outlier compared to legitimate applications in the same category [1].",
            "data_sources": [
              "MDM app_permissions.log",
              "MDM app_inventory.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Mobile Device Management (MDM) Platform, Application Risk Intelligence Feeds, SIEM Log Aggregation Layer",
            "action": [
              "Define a mapping of application categories to a boolean `sms_permission_expected` flag (e.g., 'Communication': true, 'Games': false). Query MDM logs for all applications with `android.permission.SEND_SMS` or `android.permission.RECEIVE_SMS`. Join with application inventory data and alert if an application has these permissions but its category is mapped to `false`.",
              "For each application category (e.g., 'Communication'), establish a baseline 'permission vector' of commonly requested permissions. For each app with SMS permissions, calculate the Jaccard similarity between its permission set and the baseline vector for its category. Alert on any application with a similarity score below a defined threshold, such as $$ J(A, B) < 0.5 $$, indicating an unusual combination of permissions.",
              "Vectorize the complete set of requested permissions for all applications in the fleet. Apply a density-based clustering algorithm (e.g., DBSCAN) to these permission vectors. Manually investigate applications that the algorithm flags as noise or that fall into small, isolated clusters, as these represent rare and potentially malicious permission combinations."
            ]
          },
          {
            "description": "A device sends an outgoing SMS message where the destination number is on a known threat intelligence list, or the volume, frequency, or destination of outgoing SMS messages from a user deviates significantly from their established behavioral baseline. This can indicate C2 communications, smishing-based malware propagation, or premium-rate SMS fraud.",
            "data_sources": [
              "Carrier SMS Detail Records",
              "Threat Intelligence Phone Number IOC Feed",
              "MDM app_inventory.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Carrier Billing and Usage Portals, Threat Intelligence Platform (TIP), Corporate VPN Concentrators, SIEM Log Storage",
            "action": [
              "Continuously ingest a threat intelligence feed of known malicious phone numbers (IOCs) into the SIEM. Create a correlation rule that compares the `destination_number` field from ingested Carrier SMS Detail Records against the IOC list. Generate a high-severity alert upon a match.",
              "For each user, create a 90-day rolling baseline profile from Carrier SMS Detail Records, including metrics such as hourly/daily SMS volume and the set of unique destination country codes. Generate an alert if a user's daily SMS count exceeds the 98th percentile of their historical distribution, or if an SMS is sent to a country code not present in their baseline profile.",
              "For each user, train a time-series anomaly detection model (e.g., an LSTM autoencoder) on their historical hourly SMS counts from Carrier Detail Records to learn their normal communication rhythm. Deploy the model to score live data and alert when the reconstruction error for a given time window surpasses a dynamically adjusted threshold. Enrich alerts with data on recent app installations or permission changes from MDM logs."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]