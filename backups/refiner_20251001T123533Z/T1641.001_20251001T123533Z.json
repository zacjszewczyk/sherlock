[
  {
    "information_requirement": "Is an adversary manipulating transmitted data on mobile devices to cause an impact?",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1641.001",
        "name": "Transmitted Data Manipulation",
        "evidence": [
          {
            "description": "An HTTP POST request originates from a mobile device IP address containing a sensitive data pattern, such as a cryptocurrency wallet address or IBAN, and is transmitted to a destination domain that is flagged as malicious by threat intelligence, has a low reputation score, was recently registered, or is statistically anomalous for the source device.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Platform Data",
              "DHCP Server Logs",
              "VPN Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate and guest Wi-Fi network access points, VPN concentrators, Perimeter firewalls, Web proxies, Cloud Access Security Broker (CASB)",
            "action": [
              "Identify mobile device IP ranges from DHCP and VPN logs. In `Zeek http.log`, filter for HTTP POST requests originating from these IPs. Apply regular expressions to the POST body to detect patterns for cryptocurrency addresses or IBANs. For each match, extract the destination `Host` from the HTTP header and enrich this domain using a threat intelligence platform. Trigger a high-severity alert if a sensitive pattern is sent to a domain that is categorized as malicious, has a reputation score below 40, was registered in the last 60 days, and is not on an established allowlist.",
              "For each unique device, establish a 30-day rolling baseline of destination domains associated with POST requests containing sensitive data patterns. Calculate the frequency distribution of these destinations. Trigger a medium-severity alert when a sensitive data pattern is posted to a domain that falls outside the 95th percentile of the device's typical destinations. Additionally, for each unique data field, calculate a baseline Shannon entropy score for submitted data and alert if a new submission's entropy deviates by more than 3 standard deviations from the norm.",
              "Develop a feature vector for each HTTP POST transaction containing sensitive data, including source geolocation, User-Agent, destination domain reputation, domain age, destination ASN, POST body entropy, and request size. Train a supervised classification model, such as a Random Forest, on a labeled dataset of benign and malicious transactions. Deploy the model to assign a real-time risk score in the range of $$ [0, 1] $$ to new transactions. Trigger a high-severity alert for any transaction with a score exceeding a tuned threshold, such as > 0.85."
            ]
          },
          {
            "description": "A mobile device initiates a network connection to a destination that is either identified as malicious by threat intelligence or is a statistical outlier based on its connection metadata, such as domain name, TLS/SSL fingerprint, or connection frequency, when compared to the device's historical baseline.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Threat Intelligence Platform Data",
              "DHCP Server Logs",
              "VPN Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS resolvers, Internet gateway, Wi-Fi network sensors, Cloud Access Security Broker (CASB)",
            "action": [
              "From DHCP and VPN logs, identify mobile device IP address ranges. Monitor `Zeek dns.log` for queries from these IPs and enrich each queried domain with threat intelligence. Correlate with `Zeek conn.log` for connection state and `Zeek ssl.log` for TLS certificate details. Trigger a high-severity alert if a connection is established to a domain categorized as command-and-control or if the connection uses a self-signed TLS certificate not associated with an internal PKI.",
              "For each mobile device, maintain a 30-day rolling baseline of contacted domains and their JA3/JA3S TLS fingerprints from `Zeek ssl.log` and `Zeek conn.log`. Calculate the hourly rate of 'first-time-seen' domains per device. Trigger a medium-severity alert if this rate exceeds the 98th percentile of the device's historical norm. Concurrently, alert if the device initiates a connection using a JA3/JA3S hash that has never been seen for that specific device.",
              "Train an unsupervised anomaly detection model, such as an Isolation Forest, on a per-device basis using network connection features from Zeek logs, including domain name characteristics (length, entropy), query type, connection duration, bytes transferred, JA3 hash, and destination port. Use the model to generate an anomaly score for each new connection and trigger an alert for scores indicating a significant deviation from the device's normal network behavior."
            ]
          },
          {
            "description": "An application installed on a managed mobile device programmatically registers a clipboard listener API, such as Android's `OnPrimaryClipChangedListener`, where this capability is not justified by a user-facing feature and the application also possesses permissions for network communication.",
            "data_sources": [
              "MDM/EDR application_manifest.xml",
              "MDM/EDR api_monitoring.log",
              "MDM/EDR application_inventory.csv",
              "Public App Store Scraped Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices (corporate-owned or BYOD enrolled in MDM)",
            "action": [
              "Using MDM/EDR, periodically inventory all installed applications on managed devices. Scan application manifests for declarations of clipboard listener APIs and cross-reference with network permissions like `android.permission.INTERNET`. Trigger a high-severity alert for any non-system application that has both capabilities and is not on a pre-approved allowlist.",
              "Scrape public application store data to establish a baseline for the prevalence of clipboard listener usage within different app categories. For each managed device, when a new application is installed, determine its category. Trigger a medium-severity alert if the new app uses a clipboard listener and belongs to a category where this functionality is statistically rare, such as its usage prevalence being below the 10th percentile for that category.",
              "Construct a feature vector for each installed application using MDM/EDR and app store metadata, including requested permissions, sensitive API calls, app category, user ratings, and developer history. Train a supervised classification model, like Logistic Regression, to produce a Potentially Unwanted Application (PUA) risk score. Trigger an alert for applications receiving a high score driven by the combination of clipboard listener usage and other risky features."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]