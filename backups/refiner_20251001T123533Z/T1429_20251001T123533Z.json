[
  {
    "information_requirement": "Is the adversary capturing audio from mobile devices to collect sensitive information? (TA0035 - Collection)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1429",
        "name": "Audio Capture",
        "evidence": [
          {
            "description": "An application on a managed mobile device accesses the microphone while running in the background, which is immediately followed by an outbound network connection to an unknown or malicious destination within a 60-second time window.",
            "data_sources": [
              "MDM log indicating microphone activation",
              "MDM log indicating application process state (foreground/background)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet (both corporate-owned and BYOD), Mobile Device Management (MDM) and Mobile Threat Defense (MTD) servers, Network egress points capturing traffic from mobile device subnets (e.g., VPN concentrators, corporate Wi-Fi access points, proxies)",
            "action": [
              "Correlate MDM logs for microphone activation with network flow data (Zeek conn.log) on a per-device basis. Trigger a high-severity alert when an application accesses the microphone while in a background state and subsequently initiates a connection within 60 seconds to a destination IP or domain present on a current C2 threat intelligence feed.",
              "For each application, establish a multi-metric baseline of normal background activity, including the hourly frequency of microphone access, the duration of each access, and the volume of data transmitted (Zeek conn.log `orig_bytes` + `resp_bytes`) within 5 minutes post-access. Generate a medium-severity alert if a background microphone activation's duration exceeds the 95th percentile for that application. Escalate to high-severity if the subsequent data transfer volume also exceeds its 95th percentile.",
              "Develop a feature set for each device event sequence, capturing event type (e.g., 'mic_on', 'app_background', 'net_connect'), application name, connection destination, and data volume. Train a time-series anomaly detection model, such as an LSTM autoencoder, on historical event data from the mobile device fleet to learn normal sequences of activity. Apply the model to live event streams and trigger a high-severity alert when the model's reconstruction error for a given sequence surpasses a dynamically determined threshold, flagging a statistically rare and potentially malicious pattern."
            ]
          },
          {
            "description": "A static analysis of an Android application package (APK) reveals the presence of the 'android.permission.CAPTURE_AUDIO_OUTPUT' permission, and the application's digital signature does not match the device OEM or an approved vendor. Alternatively, an application's manifest requests standard microphone access ('android.permission.RECORD_AUDIO' for Android or 'NSMicrophoneUsageDescription' for iOS) and a risk analysis deems it suspicious.",
            "data_sources": [
              "MDM Application Inventory logs containing package names and versions",
              "Static analysis reports from a Mobile App Vetting service containing parsed AndroidManifest.xml or Info.plist data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Application Management (MAM) repositories, Mobile application vetting and sandboxing platforms, MDM/MTD servers storing application inventory data for all managed devices",
            "action": [
              "Implement a continuous scanning rule within the mobile application vetting platform or MDM to parse the manifests of all installed Android applications. Generate a critical-severity alert for immediate investigation if any application contains the 'android.permission.CAPTURE_AUDIO_OUTPUT' permission and its signing certificate is not on a pre-defined allowlist of device OEMs and trusted system vendors.",
              "For all applications requesting microphone access, compute a risk score using a weighted model. Incorporate features like: application category (e.g., a 'calculator' app gets a higher risk weight than a 'conferencing' app), developer reputation (score based on history and market presence), permission entropy (a high count of diverse, high-risk permissions increases the score), and market prevalence (low download counts or absence from major app stores increases score). Flag applications with scores in the top 5% (95th percentile) for manual review.",
              "Train a supervised classification model (e.g., Random Forest or Gradient Boosting) using a labeled dataset of known malicious (e.g., VirusTotal, malware zoo samples) and benign (e.g., from official app stores) mobile applications. Engineer features from static analysis reports, including all requested permissions, embedded API calls (especially 'MediaRecorder.setAudioOutput'), suspicious string patterns (e.g., embedded IPs, URLs), and code obfuscation metrics. Integrate the trained model into the application vetting pipeline to classify new and updated apps automatically, flagging those classified as 'malicious' for automated blocking and analyst review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]