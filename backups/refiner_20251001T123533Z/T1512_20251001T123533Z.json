[
  {
    "information_requirement": "Is an adversary using a compromised mobile device's camera to collect video or images? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1512",
        "name": "Video Capture",
        "evidence": [
          {
            "description": "An installed mobile application possesses camera permissions (`android.permission.CAMERA` or `NSCameraUsageDescription`) and exhibits suspicious attributes, such as: the developer is not on a pre-approved list; the application is not in the official corporate catalog; or the app belongs to a category where camera access is statistically rare (e.g., <5th percentile).",
            "data_sources": [
              "Mobile Device Management (MDM) application inventory logs",
              "App vetting platform scan results"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed corporate mobile devices, Corporate application store, Mobile Application Management (MAM) console",
            "action": [
              "Query MDM logs for all applications with `android.permission.CAMERA` or `NSCameraUsageDescription`. Join this list by application package name and developer signature against a corporate allow-list of trusted applications and developers. Generate a medium-severity alert for any application found with camera permissions that is not on the allow-list.",
              "Using MDM inventory logs, group all applications by their App Store category. For each category, calculate the proportion of applications that request camera permissions. Generate a medium-severity alert for any application that requests camera access and belongs to a category where this permission's prevalence is in the bottom 5th percentile, indicating anomalous behavior for its peer group.",
              "Train a binary classification model (e.g., Random Forest, Gradient Boosting) using features from an app vetting platform and MDM logs, such as `{permissions_list, app_category, developer_reputation_score, number_of_downloads, user_rating, time_since_last_update, presence_in_public_app_stores}`. The target variable is a 'malicious'/'benign' label derived from historical analysis and sandbox reports. Deploy the model to score all new and updated applications in the environment. Flag any app with a 'malicious' prediction probability above a calibrated threshold (e.g., 0.85) for manual reverse engineering."
            ]
          },
          {
            "description": "A mobile device's network traffic shows a significant, anomalous volume of outbound data correlated with indicators of covert communication. This is defined as a total outbound data volume in a 24-hour period exceeding the device's own historical 99th percentile, AND one of the following: a connection to a destination IP not associated with an approved domain, or the transfer of video/image file types to a non-corporate destination.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points for corporate Wi-Fi, VPN concentrators, and cellular data gateways",
            "action": [
              "Create a SIEM rule to monitor `Zeek conn.log` for connections originating from the mobile device IP address space to destination IPs present on a threat intelligence feed of known C2 servers. Generate a high-severity alert if a match occurs AND the connection `orig_bytes` is at least 10 times greater than `resp_bytes` AND a corresponding entry in `files.log` (joined by `uid`) shows a `mime_type` of `video/*` or `image/*`.",
              "For each mobile device IP address, maintain a 30-day rolling baseline of total daily outbound bytes from `Zeek conn.log`. Generate a medium-severity alert if a device's total outbound data for a 24-hour period exceeds its 99th percentile. Enrich the alert by joining the destination IP with `Zeek dns.log` to check if the queried domain has a Shannon entropy score greater than 3.5 (indicating potential DGA) or was registered within the last 60 days (via WHOIS enrichment).",
              "Apply a time-series anomaly detection model (e.g., SARIMA, Prophet) to each device's hourly outbound byte count from `Zeek conn.log` to detect spikes that deviate from established seasonality (e.g., work hours, weekends). Concurrently, use a density-based clustering algorithm (e.g., DBSCAN) on connection metadata `{dest_ip, dest_port, protocol, total_bytes}` from the mobile fleet. Isolate and investigate small, dense clusters that do not map to known corporate or cloud services, as these may represent covert C2 channels for exfiltrating captured media."
            ]
          },
          {
            "description": "Mobile EDR telemetry detects a process invoking camera-related API calls (e.g., Android's `android.hardware.camera2`, iOS's `AVCaptureDevice`) without apparent user interaction. This is evidenced by either: the application's UI being in a background state for more than 60 seconds when the call is made, or the API call not being preceded by a direct user-input event (e.g., screen tap) within a 2-second window.",
            "data_sources": [
              "Mobile EDR logs",
              "OS-level API call logs",
              "Application lifecycle event logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "High-value target mobile devices (e.g., executive leadership, system administrators) with EDR agents installed",
            "action": [
              "Create a high-severity SIEM alert that triggers when a Mobile EDR log event for a camera API call (e.g., `AVCaptureDevice.startRunning`) has the same process ID as a preceding 'application entered background' event within a 60-second window. To reduce false positives, suppress alerts for approved applications (e.g., 'com.zoom.us', 'com.microsoft.teams') known to use this functionality legitimately for features like picture-in-picture.",
              "For each unique mobile application across the fleet, use Mobile EDR logs to calculate a baseline distribution of time deltas between a user interface interaction event (e.g., 'touch_event') and a subsequent camera API call. Generate a medium-severity alert if a camera API call occurs at a time delta that falls beyond the 99.9th percentile for that specific application, suggesting non-user-initiated camera activation.",
              "Train a Hidden Markov Model (HMM) on sequences of API calls and application lifecycle events (e.g., `app_launch`, `ui_active`, `camera_api_call`, `app_backgrounded`) from a large dataset of known benign applications. The HMM learns the normal transition probabilities between states. Ingest real-time event sequences from monitored devices and calculate the log-likelihood of each sequence given the trained model. A sequence with a very low probability, particularly one involving a transition from a 'background' state to a 'camera_active' state without an intermediate 'user_input' state, should trigger a high-confidence alert for immediate forensic investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]