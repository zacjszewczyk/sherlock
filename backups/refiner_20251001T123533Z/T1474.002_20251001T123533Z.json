[
  {
    "information_requirement": "Has an adversary gained initial access to our mobile device fleet through a compromised hardware supply chain? (TA0027 - Initial Access) (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1474.002",
        "name": "Compromise Hardware Supply Chain",
        "evidence": [
          {
            "description": "A mobile device's attestation report indicates a bootloader status of 'unlocked' or a secure boot integrity check result of 'failed', and the device's unique identifier lacks a corresponding entry in either the authorized change management database for a change ticket opened within the last 24 hours or the registered developer device list.",
            "data_sources": [
              "MDM device attestation logs",
              "Change management database records",
              "Developer device registration list",
              "Asset Management Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM platform servers, Asset Management Database, Change Management System, and endpoint mobile devices.",
            "action": [
              "Implement a SIEM rule that joins MDM device attestation logs with a dynamically updated watchlist of device IDs from the change management database and developer device list. The rule must trigger an alert if a log contains `attestation_status: 'failed'` or `bootloader_status: 'unlocked'` AND the `device_id` from the log is NOT IN the watchlist.",
              "For each device cohort, defined by `device_model` and `os_version`, calculate a 30-day rolling baseline mean ($$ \\mu $$) and standard deviation ($$ \\sigma $$) of the daily attestation failure count. Trigger an alert if the current day's failure count $$ x $$ for any cohort results in a Z-score $$ Z = (x - \\mu) / \\sigma > 3 $$, indicating a statistically significant anomaly.",
              "Train a classification model, such as a Gradient Boosting Classifier, using historical, labeled attestation data. Features should include: device model, OS version, user role, device age, time of day, patch level, and number of installed applications. Deploy the model to score new attestation failures in real-time. Generate a high-priority alert when the model predicts a failure as 'malicious' with a probability score greater than 0.90."
            ]
          },
          {
            "description": "A device, identified by its MDM record as belonging to a specific procurement batch, reports one or more hardware or firmware identifiers (e.g., baseband version, build number, kernel version, IMEI/MEID) that either do not match the values in a pre-approved 'golden manifest' for that batch or are statistical outliers when compared to the population of other devices in the same batch.",
            "data_sources": [
              "MDM device hardware inventory",
              "Procurement records",
              "Golden manifest files"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM platform, Asset Management Database, and procurement department records.",
            "action": [
              "For each new procurement batch, create a 'golden manifest' file with expected firmware and hardware identifiers. Write a script to query the MDM API for all devices associated with the new `procurement_batch_id`. For each device, iterate through its reported identifiers (e.g., `baseband_version`, `build_number`, `kernel_version`) and compare them against the golden manifest. Flag any device with one or more mismatched values for automated quarantine and physical inspection.",
              "For each `procurement_batch_id`, ingest all device inventory data. For each key identifier field (e.g., `baseband_version`), calculate the frequency of each unique value. Identify and alert on any identifier value that has a prevalence of less than 1% within the batch, as this indicates a rare and potentially unauthorized configuration.",
              "For each new procurement batch, create a feature vector for each device using its reported hardware and firmware identifiers after one-hot encoding categorical values. Apply a density-based clustering algorithm like DBSCAN. Devices that the algorithm classifies as 'noise' (i.e., not belonging to any dense cluster) are considered significant outliers. Automate an MDM action to place these outlier devices into a quarantine network segment and create a security ticket for investigation."
            ]
          },
          {
            "description": "Within the first 60 minutes following a successful MDM enrollment event for a new device, the device's network traffic logs show an outbound TCP/UDP connection or a DNS query to a destination IP address or Fully Qualified Domain Name (FQDN) that is not on the corporate allow-list for initial device provisioning and system updates.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM enrollment logs",
              "Provisioning network allow-list",
              "VPN logs",
              "Proxy logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, MDM platform server, VPN concentrators, and forward proxy servers.",
            "action": [
              "Create a SIEM correlation rule triggered by an 'MDM Enrollment Success' event. The rule must monitor Zeek `conn.log` and `dns.log` for the next 60 minutes for events where `id.orig_h` matches the enrolled device's IP address. Generate a high-severity alert if the `id.resp_h` in `conn.log` or the `query` in `dns.log` does not match any entry in the 'Provisioning and OS Update Allow-list'.",
              "For all DNS queries (`dns.log`) originating from a newly enrolled device within the first 60 minutes, calculate the Shannon entropy of the second-level domain for each queried FQDN. Compare this value against a pre-computed 95th percentile threshold derived from baseline DNS traffic from known-good provisioning sessions. An entropy score $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$ exceeding this threshold suggests potential Domain Generation Algorithm (DGA) activity and must trigger an alert.",
              "Train a time-series autoencoder (e.g., LSTM-based) on sequences of network connection metadata from known-good device provisioning sessions. The feature sequence for each connection must include `proto`, `resp_p` (destination port), `orig_bytes`, `resp_bytes`, and `duration` from Zeek `conn.log`. Monitor new devices post-enrollment and feed their connection sequences into the model. A high reconstruction error score indicates a significant deviation from normal provisioning network behavior and must generate an alert."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]