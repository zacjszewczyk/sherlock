[
  {
    "information_requirement": "Is an adversary hiding artifacts on managed mobile devices to evade detection?",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1628",
        "name": "Hide Artifacts",
        "evidence": [
          {
            "description": "An installed mobile application, identified in MDM/UEM inventory, that lacks a launcher icon and is not on an approved whitelist of known non-interactive applications. The evidence is strengthened if the application's hash or package name matches a known malicious indicator from threat intelligence.",
            "data_sources": [
              "MDM Application Inventory",
              "MDM Application State Data",
              "Internal Application Whitelist",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform; Unified Endpoint Management (UEM) Platform; Corporate-owned and BYOD mobile devices.",
            "action": [
              "Join MDM application inventory data with application state data on the package name. Filter for applications where the 'has_launcher_icon' flag is false. Exclude any package name present in the internal application whitelist. For the remaining packages, look up their 'package_hash' in a threat intelligence feed. Generate a high-severity alert for any match.",
              "For all non-whitelisted, iconless applications: 1) Calculate the fleet-wide prevalence for each application and flag any with a prevalence score below the 1st percentile. 2) For each device, count the number of non-whitelisted, iconless applications and flag devices with a count exceeding the 99th percentile of the fleet-wide distribution. 3) For each application, calculate the Shannon entropy of its declared permissions list and flag applications with an entropy score greater than 2 standard deviations above the average for whitelisted applications.",
              "Develop and deploy a classification model (e.g., Random Forest) to predict maliciousness. 1) For each new, non-whitelisted, iconless application, generate a feature vector including: fleet prevalence, permission count, permission entropy, one-hot encoded high-risk permissions, and installation source. 2) Train the model on a labeled dataset of historical benign and malicious iconless applications. 3) Use the deployed model to score new applications. An application with a predicted malicious probability score exceeding a tuned threshold, such as $$ > 0.90 $$, should automatically generate a medium-severity alert for analyst triage."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]