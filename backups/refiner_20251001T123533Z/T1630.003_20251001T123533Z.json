[
  {
    "information_requirement": "Is the adversary actively concealing a compromised (rooted/jailbroken) mobile device state from our detection mechanisms? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1630.003",
        "name": "Disguise Root/Jailbreak Indicators",
        "evidence": [
          {
            "description": "A single device identifier is associated with both a 'remote_attestation_failure' event from an MDM platform and a 'mtd_compliance_pass' event from a Mobile Threat Defense agent, with both events occurring within a 5-minute correlation window. [1][2]",
            "data_sources": [
              "MDM Remote Attestation Logs",
              "MTD Compliance Status Logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized SIEM or data lake containing Mobile Device Management (MDM) and Mobile Threat Defense (MTD) logs; Cloud Identity Provider (IdP) conditional access policy logs; Network sensors at internet egress points and VPN concentrators.",
            "action": [
              "Create a SIEM correlation rule that joins MDM attestation logs with MTD compliance logs on the unique device identifier. Trigger a high-severity alert where `mdm.attestation_status == 'fail'` AND `mtd.compliance_status == 'compliant'` AND the absolute time difference between the two events is less than 300 seconds. Enrich the alert with the device's IP network activity from Zeek conn.log and dns.log from the 1-hour window surrounding the event.",
              "For each device ID, create a 30-day rolling baseline of hourly network metrics from Zeek conn.log, including the count of unique destination ports and the count of unique destination Autonomous System Numbers (ASNs). Calculate the 95th percentile for each metric. Trigger a medium-severity alert if a device's hourly count for either metric exceeds its 95th percentile threshold and this anomaly occurs within 24 hours of a failed attestation event.",
              "For each device, ingest hourly DNS query counts from Zeek dns.log into a time-series database. Train an unsupervised anomaly detection model (e.g., Seasonal-Hybrid ESD) to learn the device's normal daily and weekly DNS query patterns. Generate an alert when the model flags a statistically significant anomaly (e.g., a score above a predefined threshold) that coincides with a failed remote attestation status."
            ]
          },
          {
            "description": "An MTD agent observes a process execution event with root privileges (e.g., UID 0 on Android) where the process binary's SHA256 hash does not match any entry in a curated allowlist of known-good operating system and application binaries or a blocklist of known rooting tools from threat intelligence feeds. [1]",
            "data_sources": [
              "MTD Process Execution Logs",
              "Zeek conn.log",
              "Zeek software.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MTD agent log repositories on mobile endpoints; Centralized SIEM or data lake; Threat Intelligence Platform for hash lookups; Network sensors monitoring traffic from mobile subnets.",
            "action": [
              "For each MTD process execution event where `process.privileges == 'root'`, perform an automated lookup of the `process.sha256_hash` against both the internal allowlist of known-good binaries and a threat intelligence feed of malicious hashes. Trigger a high-severity alert if the hash is found in neither list, indicating an unknown privileged process.",
              "Ingest all MTD process execution logs into a data platform. Calculate the frequency of all unique parent-child process relationships across the mobile fleet over a 30-day period to establish a rarity score for each pair. Trigger a medium-severity alert when a privileged process is spawned by a parent process where the relationship's rarity score is in the bottom 1st percentile of all observed relationships. Escalate severity to high if the child process initiates an outbound network connection within 5 minutes of execution, as observed in Zeek conn.log.",
              "Extract features from MTD process logs (e.g., process name entropy, command-line argument count, parent process name) and correlated Zeek conn.log data (e.g., destination port, bytes sent). Train a supervised classification model, such as a Gradient Boosting classifier, on a labeled dataset of benign and malicious privileged processes. Deploy the model to score new privileged process events in near-real-time, alerting on any classification of 'suspicious' or 'malicious' with a confidence score above 0.8."
            ]
          },
          {
            "description": "An MTD agent records a process command-line log containing arguments associated with filesystem remounting to gain write access (e.g., `mount -o rw,remount /system`) or unauthorized permission changes on critical system files (e.g., `chmod 777 /system/bin/su`). [3]",
            "data_sources": [
              "MTD File System Integrity Logs",
              "MTD Process Command-line Logs",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log storage for MTD agents on mobile endpoints; Centralized SIEM for log correlation; Network sensors capable of file extraction (e.g., Zeek); Application sandboxing analysis platforms.",
            "action": [
              "Deploy a SIEM detection rule using a regular expression such as `/(mount -o .*rw|chmod .* \\/system)/i` to search MTD process command-line logs. On a match, trigger a high-severity alert and enrich it by correlating the device IP and timestamp with Zeek conn.log and files.log to identify any associated file downloads or command-and-control communication.",
              "For each application package name, establish a 30-day baseline of file system modification activity using MTD logs. For each 24-hour period, calculate the Shannon entropy of the set of unique parent directory paths modified by the application. Trigger an alert if an application's daily path entropy score deviates by more than 3 standard deviations from its historical mean, indicating it is writing to an abnormally diverse and potentially unauthorized set of locations.",
              "Model normal application behavior by creating sequences of events from MTD and Zeek logs (e.g., `[network_connect, file_download, process_execute, file_modify]`). Train a sequence-to-sequence autoencoder using LSTMs on these normal sequences. Apply the model to new event sequences in real-time. Alert if the model's reconstruction error for a given sequence exceeds a dynamically calculated threshold, indicating a behavioral chain of actions that deviates from the learned norm."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]