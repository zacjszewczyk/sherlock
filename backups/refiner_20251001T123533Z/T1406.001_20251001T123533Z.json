[
  {
    "information_requirement": "Is an adversary using steganography to exfiltrate data from or introduce malicious tools to managed mobile devices? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1406.001",
        "name": "Steganography",
        "evidence": [
          {
            "description": "A media file (e.g., PNG, JPG, MP4) transferred over the network from/to a mobile device is directed to a destination IP/domain on a threat intelligence blocklist, OR the file's size exceeds the 99th percentile for its MIME type within a 30-day rolling window, OR its calculated Shannon entropy $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$ is greater than 7.5, indicating a high degree of randomness inconsistent with typical media files.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network egress points, Guest Wi-Fi network segments, VPN concentrators serving mobile devices, Cloud storage service gateways",
            "action": [
              "Using a SIEM, join `files.log` with `conn.log` on the `uid` field. Enrich with `http.log` (for `host` header) and `dns.log` (for `query`). Alert if the destination IP (`id.resp_h`) or resolved domain name matches an entry in a threat intelligence feed of known malicious hosts.",
              "For each `mime_type` in `files.log`, create a 30-day rolling baseline of file sizes (`seen_bytes`). Calculate the 99th percentile for each type. Generate an alert when a new file transfer exceeds this size threshold. Concurrently, for each transferred file, calculate its Shannon entropy score. Flag files with an entropy score greater than 7.5, as this suggests encrypted or packed data rather than standard media content.",
              "Train an Isolation Forest anomaly detection model using features derived from `files.log`, `conn.log`, and `http.log` for known benign traffic. Key features include: file size, MIME type, transfer duration, destination ASN, source/destination port, HTTP user agent, and time of day. Apply the trained model to score all new file transfers in real-time. Investigate transfers assigned the highest anomaly scores (e.g., top 1%) as potential steganographic activity."
            ]
          },
          {
            "description": "A mobile application binary (.apk or .ipa) installed on a managed device contains embedded strings matching known steganography libraries, OR a media file (e.g., JPG, PNG) on the device's local storage has a Shannon entropy z-score $$ z = (x - \\mu) / \\sigma $$ exceeding 3, where $$ \\mu $$ is the mean and $$ \\sigma $$ is the standard deviation of entropy for that file type's baseline.",
            "data_sources": [
              "Mobile Device Management (MDM) Application Inventory",
              "Mobile Endpoint File System Scan Data",
              "Mobile Application Sandbox Analysis Reports"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet, Enterprise application store and repository, Mobile device sandboxing environment",
            "action": [
              "Via an MDM or EDR agent, retrieve installed application binaries (.apk for Android, .ipa for iOS). Scan each binary using a YARA rule designed to detect function names, strings, and import table entries associated with known steganography libraries (e.g., 'StegLib', 'LsbSteganography', 'pixelknot'). Generate a high-severity alert for any positive match.",
              "Using a mobile EDR agent, periodically scan media files (e.g., `.jpg`, `.png`, `.mp4`) in common storage locations (`DCIM`, `Downloads`, `Pictures`). For each file extension, establish and maintain a baseline distribution of Shannon entropy values to calculate a mean ($$ \\mu $$) and standard deviation ($$ \\sigma $$). For each newly created or modified file, calculate its entropy and the corresponding z-score. Alert if the z-score $$ z = (x - \\mu) / \\sigma $$ exceeds 3, indicating a statistically significant deviation from the norm for that file type.",
              "Train a Gradient Boosting Classifier to identify malicious mobile applications capable of steganography. Use features from a mobile application sandbox analysis and MDM inventory, including: requested permissions (e.g., `READ_EXTERNAL_STORAGE`, `WRITE_EXTERNAL_STORAGE`, `INTERNET`), presence of steganography-related strings from a YARA scan, suspicious API call sequences, application's store of origin (official vs. third-party), and code obfuscation metrics. Use the model to classify and assign a risk score to all new and updated applications on managed devices."
            ]
          },
          {
            "description": "A process on a mobile device, not on a pre-defined allowlist of media-related applications, reads a media file (e.g., .jpg, .png) and, within a 5-second window, initiates an outbound network connection to an external IP address that is either present on a blocklist or is statistically rare for that application's baseline behavior.",
            "data_sources": [
              "Mobile Endpoint Detection and Response (EDR) process logs",
              "Mobile EDR network connection logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet, Corporate Wi-Fi network egress points, VPN concentrators",
            "action": [
              "In a SIEM, create a correlation rule that joins mobile EDR process and network logs. The rule should trigger when a single process (a) is not on a pre-defined allowlist of standard media viewers/editors, (b) performs a file-read operation on a file with a media extension (e.g., .jpg, .png, .mp3, .mp4), and (c) within a 5-second window, initiates an outbound network connection to a destination IP address present on a threat intelligence blocklist.",
              "From mobile EDR logs, establish a behavioral baseline for each application process by mapping it to the Autonomous System Numbers (ASNs) it communicates with. Calculate the historical connection frequency for each process-ASN pair. Create a rule that flags an event as anomalous if a process reads a media file and subsequently connects to an ASN that falls in the bottom 5% (i.e., is exceptionally rare) of its historical connection frequencies.",
              "Implement a sequence analysis model, such as a Long Short-Term Memory (LSTM) based autoencoder, using event streams from a mobile EDR agent. Convert system events (e.g., `process_start`, `file_read_media`, `network_connect_external`, `file_write`) into fixed-length vectors and group them into sequences. Train the model on vast quantities of sequences generated by benign applications. A high reconstruction error for a new sequence indicates a significant deviation from normal behavior, suggesting a malicious process flow potentially related to steganography-based data exfiltration."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]