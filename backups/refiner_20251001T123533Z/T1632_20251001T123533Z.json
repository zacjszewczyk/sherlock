[
  {
    "information_requirement": "Is an adversary attempting to subvert trust controls on our mobile devices to execute untrusted code or intercept communications? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1632",
        "name": "Subvert Trust Controls",
        "evidence": [
          {
            "description": "A CA certificate is installed on a managed mobile device where the certificate's SHA-256 hash is absent from the organizational allowlist of approved CA certificates, the certificate is self-signed, or the certificate's issuer is observed with a frequency below the 1st percentile of all issuers seen across the enterprise in the last 30 days.",
            "data_sources": [
              "MDM logs detailing installed certificates",
              "Zeek x509.log",
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, Mobile Device Management (MDM) server, Network egress points/Internet Gateway, SIEM",
            "action": [
              "Ingest MDM logs detailing installed certificate attributes (subject, issuer, SHA-256 hash, self-signed status). Create and maintain a watchlist of approved CA certificate SHA-256 hashes. Implement a real-time rule that joins the 'installed_certificate_hash' from MDM logs with the approved hash watchlist and alerts on any hash not on the watchlist or where the 'self-signed' attribute is true.",
              "Process Zeek x509.log data to build and maintain a 30-day rolling baseline of all observed certificate issuer frequencies. Calculate the 1st percentile frequency threshold. Create a rule that triggers an alert when a TLS session from a mobile device IP range (identified via Zeek conn.log) uses a certificate whose issuer's frequency is below this threshold. Correlate this network event with MDM logs to confirm if the rare certificate is installed on the source device.",
              "Extract features from Zeek ssl.log and x509.log for sessions from mobile IP ranges, including certificate validity duration, key algorithm, key length, SAN entry count, self-signed status, and the issuer's statistical rarity score. Train a Random Forest classifier to distinguish between benign sessions and those associated with known malicious CAs. Deploy the model to score live sessions and alert when a session's 'suspicious' probability exceeds a predefined threshold (e.g., 0.85) and MDM logs confirm the certificate is installed on the device."
            ]
          },
          {
            "description": "A managed Android device has the 'Install unknown apps' permission enabled for a non-system, user-installed application that is not on a pre-approved exception list, and this configuration change event in MDM logs does not correlate with an authorized change request.",
            "data_sources": [
              "MDM logs reporting device configuration state",
              "Mobile endpoint security agent logs",
              "Change management system logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android devices, Mobile Device Management (MDM) server, SIEM, Change Management Database (CMDB)",
            "action": [
              "Define an MDM compliance policy where the 'Install unknown apps' setting must be 'false'. Maintain an exception list of application package names permitted to have this setting enabled. Ingest MDM configuration state logs and change management logs. Trigger an alert for any device reporting a non-compliant status for an app not on the exception list and that lacks a corresponding approved change ticket opened within the last 24 hours.",
              "For each application package name, monitor the daily count of devices where the 'Install unknown apps' permission is enabled. Establish a 90-day baseline to calculate the mean and standard deviation for this count. Alert if the daily count for any single app exceeds three standard deviations above its historical mean, indicating a possible widespread attack or policy misconfiguration.",
              "Develop an Isolation Forest model using MDM configuration data as features (e.g., 'Install unknown apps' status, developer mode enabled, OS patch level, number of installed apps, screen lock disabled, ADB enabled). Use the model to identify devices with anomalous configuration postures. Generate an alert when a device is flagged as an outlier and the 'Install unknown apps' setting is identified by the model as a primary contributor to its anomaly score."
            ]
          },
          {
            "description": "An iOS device has an installed configuration profile whose identifier is not on the MDM-managed allowlist, the profile is unsigned, or it was downloaded from a source domain that is newly observed (first seen in < 24 hours) or has a character entropy score greater than 3.5.",
            "data_sources": [
              "MDM logs detailing installed configuration profiles",
              "Zeek http.log",
              "Zeek files.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed iOS devices, Mobile Device Management (MDM) server, Network egress points/Internet Gateway, DNS servers",
            "action": [
              "Ingest MDM logs detailing all installed configuration profile identifiers and their signing status. Maintain an allowlist of approved profile identifiers. Create a rule to alert whenever a device reports a profile identifier that is not on the allowlist or has a status of 'unsigned'. Enrich the alert with device owner and network information.",
              "For every domain observed serving a '.mobileconfig' file (via Zeek dns.log or http.log), calculate the Shannon entropy of the requested hostname and alert if the score exceeds a 3.5 threshold. Separately, maintain a 30-day list of domains seen serving '.mobileconfig' files and alert on any download from a domain not on this historical list (a newly observed domain).",
              "Use a time series forecasting model, such as SARIMA, on Zeek files.log data aggregated hourly, to predict the expected volume of '.mobileconfig' file downloads across the network. Account for weekly seasonality in the model. Generate an anomaly alert if the actual download count in a given hour significantly exceeds the upper bound of the model's 99% confidence interval, indicating a potential large-scale campaign."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]