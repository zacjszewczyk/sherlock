[
  {
    "information_requirement": "Is an adversary establishing command and control with a mobile device using a non-standard port? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1509",
        "name": "Non-Standard Port",
        "evidence": [
          {
            "description": "A network connection from a mobile device's IP address shows a protocol service identified by a network sensor (e.g., Zeek identifying 'ssl') communicating over a port that is not the IANA-standard port for that service (e.g., 'ssl' on TCP/8080 instead of TCP/443).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate and guest Wi-Fi network segments, VPN termination points, Unified Endpoint Management (UEM) traffic inspection points, and Internet gateway proxies where mobile device traffic is visible.",
            "action": [
              "Query for Zeek's built-in 'Known_Services::Non_Standard_Port' notices in notice.log where the source IP address belongs to a mobile device IP range. Alternatively, create a lookup table mapping IANA-standard ports to Zeek 'service' field values (e.g., ssl:443, http:80). Join conn.log events from mobile IP ranges against this lookup and trigger an alert for any connection where the id.resp_p does not match the standard port for the identified service. Prioritize alerts where the destination IP is present on a threat intelligence feed.",
              "From historical Zeek conn.log data (e.g., 30 days), calculate the frequency of all unique (service, id.resp_p) tuples across the entire network. For each new connection from a mobile device IP, determine the frequency percentile of its (service, id.resp_p) tuple. Generate a low-severity alert if the tuple's frequency falls below a defined threshold (e.g., 5th percentile), indicating a rare service-port combination.",
              "Create a labeled dataset of network connections from historical Zeek conn.log data. Engineer features for each connection, including: id.resp_p, protocol, duration, orig_bytes, resp_bytes, a categorical encoding of the Zeek 'service', and boolean flags for 'is_mobile_source' and 'is_non_standard_port'. Train a classification model (e.g., Random Forest) to predict the likelihood of a connection being malicious. Apply the trained model to score new connections from mobile devices in real-time, alerting on connections with a predicted probability above a calibrated threshold (e.g., >0.85)."
            ]
          },
          {
            "description": "A mobile device initiates a series of connections to the same external destination IP and non-standard port, where the time delta between connections ('jitter') and the duration of each connection are both consistently low, indicating automated, non-human communication.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points for all corporate and guest networks, specifically monitoring subnets allocated to mobile devices via DHCP for Wi-Fi or VPN pools, and Cloud Access Security Broker (CASB) logs.",
            "action": [
              "Scan Zeek dns.log for queries from mobile IP ranges where the queried domain has a high Shannon entropy score (e.g., > 3.5), suggesting a Domain Generation Algorithm (DGA). Correlate the source IP and timestamp of the suspicious DNS query with subsequent Zeek conn.log records. Alert if a connection is established to the resolved IP on a non-standard port within 60 seconds of the DNS query.",
              "Over a sliding window (e.g., 60 minutes), group Zeek conn.log records by source IP, destination IP, and destination port. For groups originating from mobile IPs and using a non-standard port, calculate the standard deviation of the inter-arrival time and the standard deviation of the connection duration. Generate an alert if a group has more than 10 connections and both standard deviations are below a low threshold (e.g., time delta stdev < 2s, duration stdev < 1s), indicating robotic beaconing.",
              "For each unique (source_ip, dest_ip, dest_port) tuple involving a mobile source and non-standard port, create a time series of connection timestamps and byte counts. Apply a time series decomposition model (e.g., STL) to separate trend, seasonality, and residual components. Train an anomaly detection model (e.g., Isolation Forest) on the residual component of these time series features from known benign traffic. Flag new time series as anomalous if they receive a high anomaly score, indicating a pattern (like rigid periodicity) that deviates from normal network behavior."
            ]
          },
          {
            "description": "An SSL/TLS connection from a mobile device to a non-standard port is observed with one or more of the following attributes: a server certificate that is self-signed or has a validation error; an unusually short validity period; or a JA3/JA3S fingerprint pair that is statistically rare in the environment.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors with Deep Packet Inspection (DPI) at Internet gateways, SSL/TLS decryption zones, VPN concentrators, and forward proxies. UEM solutions with traffic inspection capabilities are also a key NAI.",
            "action": [
              "Join Zeek conn.log with ssl.log and x509.log on the connection 'uid'. Filter for connections from mobile IP ranges to a non-standard destination port. Trigger an alert if ssl.log.validation_status is not 'ok' (e.g., 'self-signed certificate') OR if the x509.log.certificate.validity_length is less than 90 days. Cross-reference the certificate issuer and subject against a deny-list of known malicious C2 infrastructure.",
              "Maintain a baseline of all JA3 (client TLS fingerprint) and JA3S (server TLS fingerprint) hashes observed in Zeek ssl.log over the last 30 days, calculating the frequency of each. For any new SSL/TLS connection from a mobile device to a non-standard port, look up the frequency percentile of its JA3 and JA3S hash. Generate an alert if the JA3 hash is in the bottom percentile (e.g., < 1%), indicating a rare client application.",
              "For SSL/TLS connections from mobile devices, create a feature vector including: a one-hot encoded validation_status, certificate validity duration, a boolean for non-standard port, a categorical representation of the JA3 hash, and connection duration. Use an unsupervised clustering algorithm like DBSCAN to group these connections in feature space. Automatically flag clusters identified as anomalies (noise points in DBSCAN) or small, dense clusters for analyst review, as they represent groups of connections with shared, uncommon characteristics indicative of a specific malicious tool."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]