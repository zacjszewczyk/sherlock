[
  {
    "information_requirement": "Has an adversary established persistence on a mobile device by hijacking its execution flow? (TA0028 - Persistence)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1625",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "Evidence of a failed device integrity check is present in Mobile Device Management (MDM) or Mobile Threat Defense (MTD) logs. This is confirmed when a log entry for a specific device shows a status field indicating failure (e.g., `integrity_check: 'failed'`) or when a reported cryptographic hash of a system component (e.g., kernel, bootloader) does not match the known-good baseline hash for that device model and OS version.",
            "data_sources": [
              "Mobile Device Management (MDM) attestation logs",
              "Mobile Threat Defense (MTD) integrity scan logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MTD management console, managed mobile endpoints (iOS, Android), and centralized log aggregator (SIEM) ingesting events from the MDM/MTD cloud infrastructure.",
            "action": [
              "Create a detection rule that generates a high-severity alert upon ingestion of an MDM or MTD log where a field explicitly indicates an attestation or integrity failure. The rule logic should be `(log_source IN ['MDM', 'MTD']) AND (attestation_status = 'failed' OR integrity_status = 'failed' OR bootloader_hash_match = 'false')`. The alert must include the device identifier, user, OS version, and the specific failure reason.",
              "For each device profile (e.g., a combination of device model and OS version), establish a 30-day baseline of attestation failure rates. Create a scheduled query that runs hourly to calculate the failure rate over a rolling 24-hour window. Trigger a medium-severity alert if the current failure rate for any single device profile exceeds the 99th percentile of its historical baseline, which could indicate a targeted issue with an OS update or a specific exploit.",
              "Implement a time-series anomaly detection model (e.g., Prophet, LSTM) on the aggregate count of all attestation failures across the mobile fleet, bucketed into 1-hour intervals. After training the model on at least 90 days of historical data, trigger an alert if the observed failure count in a given hour significantly exceeds the model's forecasted upper confidence bound for three consecutive intervals, indicating a potential widespread campaign or systemic issue."
            ]
          },
          {
            "description": "Evidence of anomalous network traffic from a mobile device, potentially caused by a hijacked process, is found in network logs. This is confirmed by: 1) a connection from a mobile device's IP address to a destination IP, domain, or associated with an SSL/TLS certificate on a threat intelligence blocklist; or 2) connection metadata (e.g., destination port, data volume, DNS query patterns) that is a statistical outlier compared to the device's established baseline behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Zeek intel.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors (e.g., Zeek) deployed at key egress points, including corporate Wi-Fi network gateways, VPN concentrators serving mobile devices, and DNS resolvers used by mobile clients.",
            "action": [
              "Monitor the Zeek `intel.log` file, which automatically flags matches from threat intelligence feeds. Create a real-time detection rule to generate a high-severity alert for any `intel.log` entry where the originator IP (`id.orig_h`) is within the designated mobile device IP range and the intelligence source indicates a known malicious entity (e.g., `intel.seen.where` is `Conn::IN_RESP` or `DNS::IN_QUERY`).",
              "For each mobile device IP, run a scheduled hourly query to compare current activity against a 30-day rolling baseline of network behavior. Generate an alert if: 1) A connection is made to a destination port (`id.resp_p` in `conn.log`) not seen for that device in the baseline. 2) The Shannon entropy of requested domains (`query` in `dns.log`) in the last hour exceeds the 98th percentile for that device. 3) The total outbound data (`orig_bytes` in `conn.log`) in the last hour exceeds the 98th percentile of the device's historical hourly outbound traffic.",
              "Develop and deploy a supervised machine learning classifier (e.g., Random Forest) to score the maliciousness of each connection from the mobile IP space. Engineer features from Zeek logs, such as `duration`, `log(orig_bytes+1)`, `log(resp_bytes+1)`, `proto` (one-hot encoded), `conn_state` (one-hot encoded), and destination port category. An alert is triggered when a connection's predicted probability of being malicious surpasses a calibrated threshold (e.g., 0.90), indicating a high likelihood of compromise."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]