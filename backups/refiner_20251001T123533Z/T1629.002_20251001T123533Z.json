[
  {
    "information_requirement": "Is an adversary attempting to evade defenses by locking users out of their mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629.002",
        "name": "Device Lockout",
        "evidence": [
          {
            "description": "A 'device administrator enabled' event is logged for a mobile application that meets at least one risk criterion: the package name or signing certificate is not on an organizational allowlist, the installation source is 'unknown' or 'sideloaded', or its installation prevalence across managed devices is in the bottom 5th percentile.",
            "data_sources": [
              "MDM application inventory and event logs",
              "Mobile EDR process and permission grant logs",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices; Mobile Device Management (MDM) servers; Application Vetting and Sandboxing Environments; Enterprise Application Stores",
            "action": [
              "Create a detection rule to query MDM and Mobile EDR logs for 'device administrator enabled' events. For each event, check if the application's package name or signing certificate hash matches an entry on a threat intelligence blocklist. Trigger a high-severity alert upon a match.",
              "For each 'device administrator enabled' event, calculate a risk score. Assign points if: 1) the application is not on the corporate allowlist, 2) the installation source is 'unknown', and 3) its installation count is in the bottom 5th percentile across all devices. Alert when the cumulative score exceeds a predefined threshold.",
              "Train a logistic regression classifier to predict the probability that an app granted device admin rights is malicious. Use features from MDM/EDR logs such as installation source (one-hot encoded), time between install and admin grant, number of permissions requested, and developer reputation. Flag any application where the model predicts a malice probability greater than $$ 0.85 $$ for immediate analyst review."
            ]
          },
          {
            "description": "Network traffic from a mobile application with Device Administrator or `SYSTEM_ALERT_WINDOW` permissions matches a known malicious indicator, exhibits statistical anomaly, or involves unusually large data transfers. Specifically, the destination IP/domain is on a blocklist, the domain's entropy score is above the 98th percentile, or the data volume is more than three standard deviations above the app's baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "MDM Application Inventory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Our organization's internet gateway; Corporate DNS resolvers; Network proxies; VPN Concentrators",
            "action": [
              "Join network flow data (Zeek conn.log) with MDM application inventory data on the device's source IP address. Create a rule that alerts when an application with 'Device Administrator' or 'SYSTEM_ALERT_WINDOW' permissions communicates with a destination IP address or domain found on a threat intelligence feed.",
              "From Zeek dns.log, calculate the Shannon entropy for every domain queried by a mobile device. Establish a 30-day rolling baseline of entropy scores. Generate an alert if an application with elevated privileges (Device Admin or Overlay) queries a domain with an entropy score exceeding the 98th percentile of the baseline.",
              "For each privileged application on each device, use a time-series anomaly detection model (e.g., ARIMA) on its outbound data volume (`orig_bytes` from Zeek conn.log, aggregated per hour). The model, trained on at least 30 days of data, should alert on any hourly data volume spike that it flags as a statistical anomaly, indicating potential data staging or exfiltration."
            ]
          },
          {
            "description": "An application with `SYSTEM_ALERT_WINDOW` (overlay) permission is the active foreground process for an anomalously long duration without user input. An anomalous duration is defined as a continuous foreground session exceeding the 98th percentile or three standard deviations above the application's historical average for that user.",
            "data_sources": [
              "Mobile Application Vetting Scans",
              "Mobile EDR Process and Activity Logs",
              "Android Logcat",
              "MDM Application Installation Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application sandboxing environments; Corporate-managed mobile devices; Enterprise app stores and repositories; Mobile Endpoint Detection and Response (EDR) platform",
            "action": [
              "Implement a policy within the application vetting sandbox to flag any application package (APK) that requests the `SYSTEM_ALERT_WINDOW` permission. If MDM logs confirm the same application was installed from an 'unknown source' on a managed device, escalate the flag to a high-priority alert.",
              "Using Mobile EDR activity logs, calculate a per-user, per-app baseline for normal foreground session duration. Generate an alert if an application with overlay permissions remains in the foreground without any corresponding user input events for a duration that exceeds the 98th percentile of its historical baseline for that user.",
              "Deploy an unsupervised Isolation Forest model to detect anomalous application sessions. Use features from Mobile EDR logs including: `SYSTEM_ALERT_WINDOW` permission status (binary), CPU utilization, memory usage, foreground session duration, and rate of user input events. Sessions that receive a high anomaly score from the model should be flagged as potential overlay-based lockout attacks for analyst investigation."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]