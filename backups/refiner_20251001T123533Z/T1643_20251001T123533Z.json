[
  {
    "information_requirement": "Is an adversary using our managed mobile devices to generate fraudulent or malicious outbound traffic? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1643",
        "name": "Generate Traffic from Victim",
        "evidence": [
          {
            "description": "Anomalous SMS activity from a managed mobile device, characterized by: (1) any outbound SMS to a destination on a threat intelligence list of premium-rate or fraudulent numbers; or (2) a daily SMS volume from a non-messaging application that exceeds a device-specific or peer-group statistical baseline (e.g., 99th percentile).",
            "data_sources": [
              "Carrier billing records",
              "Mobile Device Management (MDM) application inventory logs",
              "MDM application permission logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet, MDM servers, and Telecommunications provider billing systems",
            "action": [
              "Continuously ingest a threat intelligence feed of known premium-rate and fraudulent SMS numbers. Create a real-time rule that cross-references the destination number of every outbound SMS log from carrier records against this feed. If a match occurs, generate a high-severity alert containing the source device ID, user, destination number, and the name of the originating application (if available via MDM correlation).",
              "For each Android device, use MDM logs to identify all applications with the `SEND_SMS` permission. For each of these applications not categorized as a primary 'Messaging' app, calculate a 30-day rolling baseline of daily SMS volume using carrier logs. Run a daily scheduled job to compare the current day's SMS count against two thresholds: a) the device's own historical 99th percentile, and b) the 99th percentile of all similar non-messaging apps across the entire device fleet. Trigger a medium-severity alert if either threshold is breached.",
              "Develop a supervised classification model (e.g., Random Forest) to predict fraudulent SMS activity. Engineer features for each device-day, including: application category, `SEND_SMS` permission status, daily SMS count, ratio of SMS to unique recipients, distribution of destination country codes, and percentage of SMS sent outside business hours (e.g., 8am-6pm local time). Train the model on historically labeled data. Deploy the model to score daily activity logs, generating a high-severity alert and initiating an automated device quarantine policy via MDM for any activity classified as 'fraudulent' with a confidence score above 0.95."
            ]
          },
          {
            "description": "Automated, repetitive network traffic from a managed mobile device, identified by a combination of: (1) an hourly DNS query or HTTP/S request volume exceeding the 95th percentile of the device's historical baseline; (2) low Shannon entropy (e.g., < 2.5) of requested Fully Qualified Domain Names (FQDNs), indicating algorithmic generation; and (3) a high connection-to-data-transferred ratio (e.g., > 10 connections per KB), suggesting non-substantive connections.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, DNS resolvers, and Internet web proxies",
            "action": [
              "Ingest and maintain threat intelligence feeds for ad fraud, click fraud, and app-ranking manipulation domains and URLs. Create a real-time correlation rule that inspects the `query` field in `Zeek dns.log` and the `host` and `uri` fields in `Zeek http.log` for traffic originating from the managed mobile device IP range. If a match is found against the threat intelligence, trigger a medium-severity alert that includes the source IP, destination indicator, the associated threat feed, and the HTTP `user_agent` string.",
              "For each managed mobile device IP, create a scheduled hourly job to analyze Zeek logs. Calculate three key metrics: 1) total connection count (`conn.log`), 2) Shannon entropy of the DNS `query` field (`dns.log`), and 3) the ratio of connection count to total bytes transferred (`orig_bytes` + `resp_bytes` in `conn.log`). Establish a 30-day rolling baseline for each metric. Trigger a medium-severity alert if the hourly connection count exceeds the 95th percentile of its baseline AND the DNS query entropy is below a fixed threshold of 2.5.",
              "Implement an unsupervised anomaly detection model (e.g., Isolation Forest) to identify deviations in device network behavior. Aggregate Zeek data into 5-minute windows for each device IP, engineering features such as: connection count, unique DNS queries, total bytes transferred, DNS query entropy, ratio of short-lived connections (< 5s), distribution of destination ports, and the count of distinct `user_agent` strings. Train the model on a minimum of 30 days of historical data to establish a profile of normal activity for each device. Deploy the model to score new 5-minute windows in near real-time, triggering an alert when the anomaly score for a device's traffic deviates significantly from its learned norm."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]