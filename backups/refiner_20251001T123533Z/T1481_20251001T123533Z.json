[
  {
    "information_requirement": "Is an adversary using legitimate external web services for command and control on our mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1481",
        "name": "Web Service",
        "evidence": [
          {
            "description": "A mobile device establishes periodic, low-volume connections to a known web service (e.g., GitHub, Pastebin, Telegram) where the time between connections has low variance (e.g., a standard deviation of inter-arrival times less than 2 seconds) and response sizes are uniformly small (e.g., 95% of payloads are between 50 and 500 bytes), characteristic of automated C2 beaconing rather than variable human-driven web browsing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments for mobile devices, VPN Concentrators, Mobile Device Management (MDM) platform logs",
            "action": [
              "Create and maintain a watchlist of web services commonly abused for C2 (e.g., api.telegram.org, pastebin.com, api.github.com). For traffic originating from mobile NAIs, query Zeek logs to count connections to these services per source device. Generate an alert if the connection count in a 1-hour window exceeds a static threshold (e.g., 50) and the average response payload size is less than 1KB.",
              "For each source mobile IP and destination service pair, extract connection timestamps $$ t_1, t_2, ..., t_n $$ from Zeek conn.log over a 24-hour period. Calculate the inter-arrival times $$ \\Delta t_i = t_i - t_{i-1} $$ and their standard deviation $$ \\sigma_{\\Delta t} $$. Concurrently, calculate the Shannon entropy $$ H(X) = -\\sum p(x_i) \\log_2 p(x_i) $$ of the response byte counts ('resp_bytes'). Generate an alert for connections where $$ \\sigma_{\\Delta t} < 2 $$ seconds and the response byte entropy is in the bottom 5th percentile for that destination service.",
              "From Zeek conn.log, create a dataset of source-destination pairs with features including the standard deviation of inter-arrival times, mean response bytes, and entropy of response bytes. Apply a density-based clustering algorithm (e.g., DBSCAN) to this dataset. Isolate and investigate clusters that are small, dense, and have low intra-cluster variance, as these patterns are indicative of automated C2 beaconing."
            ]
          },
          {
            "description": "A mobile device sends an HTTP/S request to a legitimate web service where the User-Agent string is indicative of a non-browser client (e.g., 'curl/7.68.0', 'python-requests/2.25.1', 'Go-http-client/1.1') or the URI path suggests raw data transfer (e.g., '/raw/Abc123xyz', '/paste/Def456uvw'), bypassing typical human-driven application interfaces.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles), Web Application Firewall (WAF) logs, and Cloud Access Security Broker (CASB) logs",
            "action": [
              "From Zeek http.log records originating from the mobile NAI, match the 'user_agent' field against a deny-list of regular expressions for common scripting tools and libraries (e.g., '^curl/', '^python-requests', '^Go-http-client'). Generate an alert for any traffic that matches these patterns.",
              "For each destination host, group HTTP requests from the mobile NAI by source IP. For each source IP group, calculate the Shannon entropy $$ H(U) $$ of the 'uri' field from Zeek http.log. A low entropy score signifies repetitive requests to the same or similarly structured paths. Flag source IPs whose URI entropy falls into the bottom 10th percentile relative to all devices accessing that same destination host.",
              "Train a binary classification model (e.g., Random Forest) on a labeled dataset of HTTP/S requests. Engineer features from Zeek http.log and ssl.log including 'user_agent' string entropy, 'uri' length and entropy, presence of keywords like 'raw' or 'paste' in the URI, and the rarity of the TLS JA3 hash. Deploy the model to score new requests from the mobile NAI and alert on any request classified as malicious with high confidence."
            ]
          },
          {
            "description": "A mobile device exhibits a high ratio of DNS queries for a specific web service domain to the number of subsequent TCP/UDP connections made to that domain's resolved IPs, suggesting a 'canary' or 'check-in' C2 mechanism that resolves the domain but only connects when a task is available.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Protective DNS (PDNS) logs, MDM-enforced DNS services",
            "action": [
              "Monitor Zeek dns.log for queries originating from the mobile NAI. Match the 'query' field against a threat intelligence feed of known C2 domains. Generate a high-priority alert for any match, including the source IP and the queried domain.",
              "Over a 1-hour sliding window, join Zeek dns.log and conn.log on the source IP. For each source IP and destination domain pair, calculate the DNS-to-Connection Ratio: $$ R_{dns} = \\frac{|\\text{Unique DNS Queries to Domain D}|}{|\\text{Unique Connections to IPs for Domain D}|} $$. Establish a baseline ratio for popular services across the enterprise and alert on any mobile device whose ratio for a specific service exceeds the 99th percentile of that baseline.",
              "Develop a regression model to predict the expected number of connections for a given device and domain based on features like the number of DNS queries, time of day, and domain popularity. Apply the model to live data. A large positive residual, where the actual number of DNS queries far exceeds the number predicted to support the observed connections, indicates an anomaly. Investigate devices with the highest residuals."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]