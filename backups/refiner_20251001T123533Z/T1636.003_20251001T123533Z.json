[
  {
    "information_requirement": "Has an adversary successfully collected contact list data from corporate mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1636.003",
        "name": "Contact List",
        "evidence": [
          {
            "description": "An application on a managed mobile device possesses 'read contacts' permission (`android.permission.READ_CONTACTS` or `NSContactsUsageDescription`) and is classified in an application store category where this permission is statistically anomalous (<2% prevalence) across the organization's device fleet.",
            "data_sources": [
              "MDM Application Inventory Report",
              "MTD Permission Audit Log",
              "Application Vetting Service Scan Results"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices (iOS and Android), MDM/MTD log aggregation platform, Application Vetting Service Portal",
            "action": [
              "Correlate MDM application inventory data against a threat intelligence feed of known malicious mobile application identifiers (e.g., package names, hashes). Trigger a high-priority alert if an installed application has 'read contacts' permission and its identifier is present in the feed.",
              "Using MDM inventory logs, execute a periodic script to group all installed applications by their store category. For each category, calculate the percentage of applications with 'read contacts' permission. Generate a list of all applications that have the permission but belong to a category where the permission prevalence is below a 2% threshold, and assign for analyst review.",
              "Train a Random Forest or Gradient Boosting classifier using application metadata from MDM/MTD logs as features (e.g., developer reputation, app age, user ratings, requested permission count, install base size). The model will predict a probability score for 'anomalous contact permission use'. Run this model against all applications with contact access and create a case for any application with a probability score exceeding 0.90 for manual investigation."
            ]
          },
          {
            "description": "A process on a mobile device makes an anomalous number of OS API calls to access the contact list within a 60-minute window, immediately followed by one or more network connections from the same device to a destination IP/domain that is on a threat intelligence blocklist, has a high DNS query entropy score (>3.5), or has not been previously observed in the last 90 days of network traffic.",
            "data_sources": [
              "MTD OS API call monitoring logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, Mobile VPN concentrators, Network egress points for mobile device traffic, DNS resolvers serving mobile clients",
            "action": [
              "Create a SIEM correlation rule that triggers when an MTD log shows a contact list access event from a device's source IP, and within the subsequent 5 minutes, a Zeek conn.log entry shows a connection from the same source IP to a destination IP listed in a 'Mobile Malware C2' threat intelligence feed.",
              "For each unique device-application pair, use MTD logs to establish a 30-day rolling baseline of hourly contact list API call counts. Trigger an alert if the hourly count for any pair exceeds the 99th percentile of its baseline. Enrich this alert by querying Zeek dns.log for any DNS requests from the device's IP in the same hour to domains with an entropy score > 3.5 or to a domain not seen in the last 90 days.",
              "Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) trained on sequences of multimodal device events (API calls, network connection counts, data volume transmitted/received) from MTD and Zeek logs. An alert is generated when the model's reconstruction error for a real-time event sequence containing a contact list access event exceeds a dynamically tuned threshold, indicating a significant deviation from the device's learned normal behavior pattern."
            ]
          },
          {
            "description": "A managed mobile device generates a 'device compromised' or 'integrity check failed' status alert in MDM logs, and an application inventory for the same device shows an app installed from an unofficial source ('sideloaded') that also possesses 'read contacts' permission.",
            "data_sources": [
              "MDM Device Compliance Log",
              "MDM Application Inventory Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices (iOS and Android), MDM administration console, Device compliance reporting dashboards",
            "action": [
              "Implement a SIEM rule that generates a critical alert when logs for a single device ID meet three correlated conditions: (1) MDM compliance log shows status 'is_compromised: true' or 'integrity_check: failed'; (2) MDM application inventory log shows an app with 'install_source: unofficial'; and (3) the manifest for that same unofficial app includes 'read contacts' permission.",
              "Generate a weekly report of all devices with sideloaded applications. For each device, calculate a risk score by summing weights for sensitive permissions held by its sideloaded apps (e.g., Contacts=10, Microphone=10, SMS=8). Rank all devices by this cumulative risk score and prioritize the top 5% or any device with a score over a predefined threshold (e.g., 20) for immediate analyst investigation.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to the device fleet using features from MDM logs such as OS patch level, number of failed integrity checks in the last 30 days, count of sideloaded applications, and count of high-risk permissions. Isolate devices classified as noise points (outliers) or belonging to small, high-risk clusters for further investigation, as they represent configurations that deviate from the established secure baseline."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]