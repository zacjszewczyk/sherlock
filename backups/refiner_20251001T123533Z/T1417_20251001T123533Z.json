[
  {
    "information_requirement": "Is an adversary capturing user credentials via input manipulation on managed mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1417.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "A non-standard keyboard application, not on the corporate allow-list, is installed on a managed mobile device. Within 24 hours of installation, Zeek conn.log data for the device shows a new pattern of periodic outbound connections characterized by: 1) low data volume (500 bytes to 5 KB per connection), 2) high connection frequency with regular intervals (e.g., every 300 seconds +/- 10% jitter), and 3) connections to a destination IP/domain with a low reputation score or a registration age of less than 30 days.",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)",
            "action": [
              "From MDM Application Inventory Logs, continuously monitor for installed keyboard applications. Compare each keyboard's package name against a managed allow-list. If an unapproved keyboard is found, cross-reference its network traffic destinations (from Zeek dns.log) against a threat intelligence feed of known malicious C2 domains and generate a high-priority alert on a match.",
              "For devices with a non-allowlisted keyboard, analyze Zeek conn.log data to establish a 14-day baseline of outbound connection size (orig_bytes) and inter-arrival times. Alert if a new connection pattern emerges where the median connection size is between 500 bytes and 5 KB and the standard deviation of the inter-arrival time for those connections is less than 30 seconds, indicating programmatic beaconing. Additionally, calculate the Shannon entropy of subdomains in Zeek dns.log; an entropy score exceeding 3.5 for a given parent domain is a strong indicator of DGA.",
              "Train a time-series anomaly detection model (e.g., an LSTM Autoencoder) on a per-device basis using features from Zeek conn.log (e.g., orig_bytes, resp_bytes, duration, protocol, and connection frequency per hour). Trigger an alert when the model's reconstruction error for a new time window exceeds a dynamic threshold, such as the 99th percentile of reconstruction errors observed over the past 30 days. Correlate the timestamp of the anomaly with MDM logs to link the behavior to the installation of the suspicious keyboard app."
            ]
          }
        ]
      },
      {
        "technique_id": "T1417.002",
        "name": "GUI Input Capture",
        "evidence": [
          {
            "description": "An Android application, not on a pre-approved allow-list, is granted either 'android.permission.SYSTEM_ALERT_WINDOW' or 'android.permission.BIND_ACCESSIBILITY_SERVICE' permission, as recorded in MDM logs. Within 60 minutes of the permission grant, Zeek conn.log shows the device initiating connections to a destination IP/domain that has not been observed in the device's 90-day network history baseline.",
            "data_sources": [
              "MDM Application Permission Logs",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)",
            "action": [
              "From MDM Application Permission Logs, generate a medium-priority alert whenever an application is granted 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE'. Escalate to high priority if the application's package name is not on a curated allow-list of known-good apps (e.g., password managers, accessibility tools). Immediately enrich the app's package name and signing certificate hash against threat intelligence feeds.",
              "For any app flagged by the symbolic rule, establish a 30-day baseline of destination domains/IPs from Zeek dns.log and conn.log for that device. Alert if, within 24 hours of the permission grant, the app initiates connections to a domain that is not in the baseline. Additionally, analyze Zeek ssl.log for associated connections; flag any connection using a self-signed certificate or a JA3/JA3S hash pair with a prevalence of less than 0.1% across the enterprise network.",
              "Utilize a pre-trained classification model (e.g., Random Forest) to generate a risk score for each application requesting 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE'. Model features should include: all requested permissions, app store category, developer reputation, user rating count, application age, and presence on major app stores. A risk score > 0.8 triggers an automated workflow to isolate the device from the network and creates a critical incident for immediate SOC investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting sensitive user information (e.g., messages, contacts) via input capture on managed mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1417.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "A non-standard keyboard application, not on the corporate allow-list, is installed. This installation is followed by a new pattern of periodic network traffic consistent with data exfiltration of collected user input (e.g., messages, notes). The pattern, observed in Zeek conn.log, is characterized by: 1) low data volume (500 bytes to 5 KB per connection), 2) regular connection intervals (e.g., every 300 seconds +/- 10% jitter), and 3) destinations with low reputation scores or recent registration dates (< 30 days).",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)",
            "action": [
              "From MDM Application Inventory Logs, continuously monitor for installed keyboard applications. Compare each keyboard's package name against a managed allow-list. If an unapproved keyboard is found, cross-reference its network traffic destinations (from Zeek dns.log) against a threat intelligence feed of known malicious C2 domains and generate a high-priority alert on a match.",
              "For devices with a non-allowlisted keyboard, analyze Zeek conn.log data to establish a 14-day baseline of outbound connection size (orig_bytes) and inter-arrival times. Alert if a new connection pattern emerges where the median connection size is between 500 bytes and 5 KB and the standard deviation of the inter-arrival time for those connections is less than 30 seconds, indicating programmatic beaconing. Additionally, calculate the Shannon entropy of subdomains in Zeek dns.log; an entropy score exceeding 3.5 for a given parent domain is a strong indicator of DGA.",
              "Train a time-series anomaly detection model (e.g., an LSTM Autoencoder) on a per-device basis using features from Zeek conn.log (e.g., orig_bytes, resp_bytes, duration, protocol, and connection frequency per hour). Trigger an alert when the model's reconstruction error for a new time window exceeds a dynamic threshold, such as the 99th percentile of reconstruction errors observed over the past 30 days. Correlate the timestamp of the anomaly with MDM logs to link the behavior to the installation of the suspicious keyboard app."
            ]
          }
        ]
      },
      {
        "technique_id": "T1417.002",
        "name": "GUI Input Capture",
        "evidence": [
          {
            "description": "An Android application, not on a pre-approved allow-list, is granted 'android.permission.SYSTEM_ALERT_WINDOW' or 'android.permission.BIND_ACCESSIBILITY_SERVICE' permission to enable capturing on-screen information like contacts or messages. Within 60 minutes, the device initiates network connections to a destination IP/domain not seen in the device's 90-day network history, suggesting exfiltration of the collected on-screen data.",
            "data_sources": [
              "MDM Application Permission Logs",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/EMM servers, Network egress points (e.g., corporate WiFi gateways, VPN concentrators), Managed mobile endpoints (iOS/Android)",
            "action": [
              "From MDM Application Permission Logs, generate a medium-priority alert whenever an application is granted 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE'. Escalate to high priority if the application's package name is not on a curated allow-list of known-good apps (e.g., password managers, accessibility tools). Immediately enrich the app's package name and signing certificate hash against threat intelligence feeds.",
              "For any app flagged by the symbolic rule, establish a 30-day baseline of destination domains/IPs from Zeek dns.log and conn.log for that device. Alert if, within 24 hours of the permission grant, the app initiates connections to a domain that is not in the baseline. Additionally, analyze Zeek ssl.log for associated connections; flag any connection using a self-signed certificate or a JA3/JA3S hash pair with a prevalence of less than 0.1% across the enterprise network.",
              "Utilize a pre-trained classification model (e.g., Random Forest) to generate a risk score for each application requesting 'SYSTEM_ALERT_WINDOW' or 'BIND_ACCESSIBILITY_SERVICE'. Model features should include: all requested permissions, app store category, developer reputation, user rating count, application age, and presence on major app stores. A risk score > 0.8 triggers an automated workflow to isolate the device from the network and creates a critical incident for immediate SOC investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]