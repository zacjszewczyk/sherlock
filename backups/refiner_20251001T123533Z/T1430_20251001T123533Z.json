[
  {
    "information_requirement": "Is an adversary discovering the physical location of our mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1430",
        "name": "Location Tracking",
        "evidence": [
          {
            "description": "An application's manifest (Android) or Info.plist (iOS) file contains a high-risk location permission (e.g., ACCESS_BACKGROUND_LOCATION, NSLocationAlwaysAndWhenInUseUsageDescription) that is either absent from an allow-list of permissions for that specific application version or is statistically anomalous for its app store category.",
            "data_sources": [
              "Mobile Device Management (MDM) application inventory logs",
              "AndroidManifest.xml",
              "Info.plist",
              "Threat intelligence feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM server, internal application repository, cloud-hosted application vetting sandboxes, threat intelligence platform.",
            "action": [
              "For each new or updated application identified on managed devices, correlate the application's package name and file hash against a threat intelligence feed of known malicious mobile applications. Trigger a high-severity alert for any match.",
              "Parse each application's manifest/Info.plist to extract all requested permissions. Group applications by functional category (e.g., 'Productivity', 'Navigation'). For each category, calculate the 95th percentile for the count of requested permissions. Flag any application that requests background location permissions and exceeds this category-specific percentile for manual review.",
              "Utilize a pre-trained binary classification model (e.g., Random Forest) on a labeled dataset of benign and malicious application manifests. Extract features including one-hot encoded permissions, counts of exported components (activities, services), and the presence of sensitive API calls. An application predicted as 'malicious' with high confidence (>0.90), especially if it requests location permissions, should trigger an automated quarantine action via MDM and a critical analyst alert."
            ]
          },
          {
            "description": "A device's hourly count of location service API calls, logged by a Mobile Threat Defense (MTD) agent, exceeds 3 standard deviations above its 30-day rolling average. Alternatively, location data from the device is transmitted to a destination IP address not previously seen from that device or the broader mobile fleet within a 60-day lookback period.",
            "data_sources": [
              "Mobile Threat Defense (MTD) API call logs",
              "MDM location history logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, network egress points (e.g., VPN concentrators, corporate Wi-Fi access points), DNS resolvers, cloud-hosted MTD/MDM platforms.",
            "action": [
              "From network traffic logs (Zeek conn.log), correlate destination IP addresses (id.resp_h) and DNS queries (query in dns.log) against threat intelligence feeds of known C2 infrastructure. Generate a high-severity alert for any match originating from a managed mobile device IP address.",
              "For each device, calculate a 30-day rolling baseline (mean, standard deviation) of hourly location API calls using MTD logs. Trigger a medium-severity alert if the current hourly count exceeds the mean by more than 3 standard deviations. Separately, maintain a stateful set of destination IP addresses seen in Zeek conn.log over the past 60 days. Trigger a low-severity alert if a connection is made to an IP not in this historical set, enriching the alert with GeoIP and ASN data for the new destination.",
              "Apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the per-device, hourly location API call count time series to account for user-specific seasonality (e.g., daily commute). Trigger an alert for any point identified as an anomaly. Concurrently, apply a density-based clustering algorithm (e.g., DBSCAN) to the geo-coordinates of location reports to identify travel to anomalous locations outside the user's typical clusters of activity (e.g., home, office)."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting and exfiltrating location data from our mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1430",
        "name": "Location Tracking",
        "evidence": [
          {
            "description": "A network connection from a managed mobile device, attributed by MDM/MTD logs to an application with location permissions, exhibits malicious characteristics such as the destination IP/domain appearing on a C2 threat intelligence list, or the connection's TLS client fingerprint (JA3 hash) having a prevalence of less than 0.01% across the mobile fleet over the past 30 days.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Threat intelligence feeds",
              "MDM/MTD application network logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, firewalls, proxies, VPN concentrators, DNS resolvers, threat intelligence platforms, MDM/MTD cloud consoles.",
            "action": [
              "Join network connection logs (Zeek conn.log) with application-specific network logs from MDM/MTD, correlating on device IP and timestamp. For any connection made by an application with location permissions, check if the destination IP (id.resp_h), DNS query (dns.log), or SNI (ssl.log) matches an indicator in a C2 threat intelligence feed. Trigger a critical alert upon a match.",
              "From Zeek ssl.log, compute the frequency of every unique client TLS fingerprint (ja3 field) observed from the mobile device IP range over the last 30 days. Trigger a medium-severity alert when an application with location permissions initiates a connection using a JA3 hash seen in less than 0.01% of all mobile connections, as this indicates a potentially unique or non-standard client.",
              "Develop a supervised learning model (e.g., XGBoost) to generate a risk score for each outbound mobile connection. Engineer features such as: destination IP/ASN reputation, destination port rarity, JA3 hash prevalence, DNS query entropy, connection byte count (orig_bytes), and a binary feature indicating if the source app has location permissions. A connection scoring above a defined threshold triggers an analyst investigation."
            ]
          },
          {
            "description": "A mobile device's total daily data upload volume (sum of orig_bytes in Zeek conn.log) to non-whitelisted external destinations exceeds the 99th percentile of its own 30-day historical baseline, and MDM/MTD logs confirm an application with location permissions was active within 5 minutes of the anomalous traffic.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/MTD application activity logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., VPN concentrators, corporate Wi-Fi gateways), corporate-managed mobile devices, MDM/MTD cloud consoles.",
            "action": [
              "Maintain an explicit allow-list of corporate and sanctioned cloud service domains/IPs. Trigger an alert when a single connection from a mobile device (in Zeek conn.log) uploads more than a tuned threshold (e.g., 100MB) of data (orig_bytes) to a destination not on the allow-list. Automatically correlate the alert's timestamp with MDM logs to identify the foreground application and its permissions.",
              "For each device, calculate a 30-day rolling baseline of total daily upload bytes to external IPs (sum of orig_bytes from Zeek conn.log). Trigger a medium-severity alert when a device's daily upload volume exceeds the 99th percentile of its historical baseline. Enrich the alert with the top 5 destination ASNs for that day and the top 5 foreground applications from MDM logs.",
              "For each device, implement a time-series forecasting model (e.g., Prophet) to predict daily upload volume, accounting for day-of-week effects. Trigger a high-severity alert when the actual volume significantly exceeds the model's predicted upper confidence bound. During an alert, apply a topic modeling algorithm (e.g., Latent Dirichlet Allocation) to the set of destination domains visited during the anomalous period to identify thematic clusters in the network activity (e.g., 'Cloud Storage', 'Unknown C2')."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]