[
  {
    "information_requirement": "Is an adversary preventing the removal of malicious applications on our managed mobile devices? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629.001",
        "name": "Prevent Application Removal",
        "evidence": [
          {
            "description": "An application package not present on the corporate allow-list is granted 'Device Administrator' or 'Accessibility Service' permissions, and its package name exhibits a Shannon entropy score above the 95th percentile of known-good applications or a Levenshtein distance of 2 or less to a known legitimate application name.",
            "data_sources": [
              "MDM/EMM application inventory logs",
              "MDM/EMM permission audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/EMM Management Server, Managed Mobile Device Fleet, Centralized Log Aggregator (SIEM)",
            "action": [
              "From MDM/EMM permission audit logs, create a rule that alerts when 'Device Administrator' or 'Accessibility Service' permissions are granted to an application whose package name is not on the corporate allow-list.",
              "For any application flagged by the symbolic rule, calculate the Shannon entropy of its package name. Compare this value to a pre-computed baseline of all approved application package names. Generate a medium-severity alert if the entropy score exceeds the 95th percentile. Additionally, calculate the Levenshtein distance between the suspicious package name and a list of high-value app names; alert if the distance is 2 or less.",
              "For applications flagged by other methods, input their metadata (package name entropy, requested permissions, Levenshtein scores) into a pre-trained Random Forest classifier. The model, trained on labeled benign and malicious app data, will output a malice probability score. Automatically trigger a device quarantine action via the MDM/EMM API if the model's confidence score exceeds 0.90."
            ]
          },
          {
            "description": "A sequence of events on a mobile device shows a user navigating to the application uninstall screen, followed within 2 seconds by a `performGlobalAction(GLOBAL_ACTION_BACK)` or `performGlobalAction(GLOBAL_ACTION_HOME)` API call originating from a non-system, user-installed application.",
            "data_sources": [
              "Mobile Threat Defense (MTD) API call logs",
              "Endpoint Detection and Response (EDR) for Mobile logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed Mobile Device Fleet, Mobile Threat Defense (MTD) Console, SIEM",
            "action": [
              "In the SIEM, create a correlation rule that triggers a critical alert when Event A (user navigation to application management/uninstall screen) is followed by Event B (`performGlobalAction` call with argument 1 or 2 from a non-system app) on the same device within a 2-second window.",
              "For each device, establish a 14-day rolling baseline for the frequency of `performGlobalAction` calls per application. Alert on any application initiating these calls at a rate exceeding three standard deviations above its established baseline, or any application exhibiting a sudden, significant spike in such calls after installation.",
              "Deploy a pre-trained Recurrent Neural Network (RNN) that models legitimate sequences of user actions and API calls. Feed real-time event sequences from mobile devices into the model. Flag any sequence with a low probability score, particularly those matching the pattern of a user attempting to access settings followed by an unexpected `GLOBAL_ACTION_BACK` or `GLOBAL_ACTION_HOME` event."
            ]
          },
          {
            "description": "A mobile device, within 60 minutes of a high-risk permission grant ('Device Administrator' or 'Accessibility Service'), initiates network connections to a domain registered within the last 30 days or exhibits beaconing behavior characterized by periodic, fixed-size connections.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "MDM/EMM permission audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Gateway Firewalls, Internal DNS Servers, Network Security Monitoring (NSM) Sensor Grid at egress points, MDM/EMM Management Server",
            "action": [
              "Correlate MDM permission grant alerts with network logs. For the device's IP address, query Zeek dns.log for requests made in the 60 minutes following the alert. Enrich domains with WHOIS data and alert if the device communicates with any domain created in the last 30 days or any destination on a threat intelligence feed.",
              "For a device flagged by the symbolic rule, analyze its Zeek conn.log data for the hour following the permission grant. Calculate the standard deviation of connection bytes (`orig_bytes` + `resp_bytes`) and the time interval between connections to the same destination. Alert if the standard deviation of both metrics is close to zero, indicating fixed-size, periodic beaconing. Also, from Zeek ssl.log, alert on any JA3/JA3S hash with a prevalence of less than 1% across the enterprise.",
              "Ingest network telemetry from the device (bytes per minute, connections per minute from Zeek conn.log) into a pre-trained LSTM Autoencoder model. The model, trained on normal device network patterns, will identify anomalies. Generate an alert if the model's reconstruction error for the post-grant traffic pattern exceeds the 99th percentile of baseline errors, indicating behavior consistent with C2 communication."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]