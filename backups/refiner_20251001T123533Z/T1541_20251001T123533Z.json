[
  {
    "information_requirement": "Is an adversary using foreground services to establish persistence on a corporate mobile device? (TA0028 - Persistence)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1541",
        "name": "Foreground Persistence",
        "evidence": [
          {
            "description": "An application's manifest file (AndroidManifest.xml) contains the 'android.permission.FOREGROUND_SERVICE' permission, and runtime logs from the device show invocations of the startForeground() method. This behavior is anomalous when the application is not on an approved list for such activity or its runtime duration exceeds typical usage patterns for its category.",
            "data_sources": [
              "MDM Application Manifest Scan",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android devices enrolled in MDM; Mobile Application Management (MAM) sandbox; Corporate application vetting and signing infrastructure.",
            "action": [
              "Continuously scan MDM application inventory for newly installed applications. For each new app, parse its manifest to check for the 'android.permission.FOREGROUND_SERVICE' permission. Trigger a high-priority alert if this permission is present and the application's package name is not on a pre-defined allowlist of known-good applications.",
              "Ingest Android Logcat data containing foreground service start and stop events. For each application category (e.g., Navigation, Media), aggregate foreground service runtimes over a 30-day rolling window to establish a baseline distribution. Calculate the 99th percentile for runtime duration for each category and trigger a medium-priority alert when an application's individual service runtime exceeds this threshold.",
              "Train a classification model (e.g., Random Forest) using features extracted from application metadata via MDM, including permission count, presence of dangerous permissions (e.g., READ_SMS, RECORD_AUDIO), application source, and user reviews. If a newly installed app with the FOREGROUND_SERVICE permission receives a malicious probability score above a defined threshold (e.g., 0.9), automatically trigger an MDM action to quarantine the device and generate a critical incident."
            ]
          },
          {
            "description": "A TCP connection initiated from a corporate mobile device to a single external IP address exhibits a duration exceeding a high threshold (e.g., > 4 hours) while transferring a very low volume of data. This pattern is inconsistent with normal interactive user activity and may indicate a persistent C2 channel.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM device inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring corporate Wi-Fi segments; Core DNS resolvers; Network egress points and firewalls.",
            "action": [
              "Query Zeek conn.log every 15 minutes for connections where the source IP maps to a mobile device (via MDM inventory), 'duration' is greater than 14400 seconds (4 hours), and the destination IP ('id.resp_h') matches a threat intelligence feed of known C2 servers. If a match is found, retrieve the associated DNS query from Zeek dns.log to identify the domain.",
              "For each mobile device IP, establish a 30-day rolling baseline of connection statistics from Zeek conn.log. Calculate the 95th percentile for connection 'duration' and the 5th percentile for total bytes transferred ('orig_bytes' + 'resp_bytes'). Trigger an alert if a new connection's duration exceeds the 95th percentile while its total byte count falls below the 5th percentile, indicating a potential 'low and slow' C2 channel.",
              "For each device, create a time series of the hourly count of long-duration, low-byte connections from Zeek conn.log. Apply a time-series anomaly detection algorithm (e.g., Seasonal-Hybrid ESD) to this data stream. An anomaly detected by the model, representing a statistically significant deviation from the device's normal connection patterns, should generate an alert for analyst investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary evading background process restrictions on mobile devices to access sensors? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1541",
        "name": "Foreground Persistence",
        "evidence": [
          {
            "description": "A series of connections from a mobile device to a single external destination IP exhibits highly regular timing, with a near-zero standard deviation in inter-arrival times. This results in a Shannon entropy score below a defined threshold (e.g., < 1.5), which is indicative of automated, non-human C2 beaconing activity.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at traffic egress points; DNS resolvers; Network taps monitoring Wi-Fi access points for mobile devices.",
            "action": [
              "Continuously scan Zeek http.log for requests originating from the mobile device IP range where the 'user_agent' string matches a known malicious tool signature, is a generic default client (e.g., 'Dalvik/2.1.0'), or is null. Correlate any matches with Zeek dns.log to check if the destination domain was registered within the last 30 days.",
              "Using Zeek conn.log, group connections by source IP (mobile device) and destination IP in 1-hour windows. For each group with more than 10 connections, calculate the time deltas between consecutive connections and compute the Shannon entropy of these deltas. Trigger an alert for any source-destination pair where the entropy score is below a low threshold (e.g., 1.5), indicating predictable, machine-generated beaconing.",
              "On an hourly basis, featurize connections from mobile devices using attributes from Zeek conn.log such as 'duration', 'orig_bytes', 'resp_bytes', 'id.resp_p', and the standard deviation of inter-arrival times to the same destination. Use a pre-trained density-based clustering algorithm (e.g., DBSCAN) to model normal network behavior. Flag any connection that the model classifies as a noise point (an outlier) for analyst review."
            ]
          },
          {
            "description": "An application using a foreground service (identified via MDM) initiates a network connection that transfers a volume of data significantly greater than its historical norm. Specifically, the total data sent ('orig_bytes' from Zeek conn.log) in a 24-hour period exceeds 3 standard deviations from its own 30-day baseline, suggesting anomalous data staging or exfiltration.",
            "data_sources": [
              "MDM Application Runtime Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MAM management servers; Network sensors monitoring corporate Wi-Fi segments and VPN connections from mobile devices.",
            "action": [
              "Create a real-time correlation search that joins MDM application data (mapping device IP to running applications) with network flow data from Zeek conn.log. Trigger a high-priority alert if an application using a foreground service communicates with a destination IP listed in a threat intelligence feed of known exfiltration endpoints or anonymous file-sharing services.",
              "For each unique application on each device, establish a 30-day rolling baseline of the daily sum of outgoing bytes ('orig_bytes') from Zeek conn.log. Calculate the mean and standard deviation for this metric. Trigger a medium-priority alert if an application's data upload volume on a given day exceeds 3 standard deviations above its historical mean for that device.",
              "Develop a regression model (e.g., Gradient Boosting Regressor) to predict the expected daily data upload volume for each device, using features such as user role, device type, and day of the week. Monitor the model's prediction residuals (actual volume minus predicted volume) in real time. A sustained, large positive residual for a device indicates an anomalous data transfer event that should be flagged for investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]