[
  {
    "information_requirement": "Is an adversary collecting sensitive data from local system storage on our mobile devices? (TA0035 - Collection) (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1533",
        "name": "Data from Local System",
        "evidence": [
          {
            "description": "An application process exhibits anomalous file read behavior, defined as either a file read rate (files/minute) exceeding the 95th percentile of its 30-day baseline, or accessing a high number (>50) of unique file paths in sensitive directories (e.g., Photos, Contacts) within a one-minute window.",
            "data_sources": [
              "MDM file access logs",
              "EDR file system monitoring logs",
              "Android logcat",
              "iOS Unified Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User data partitions, application sandboxes, and shared storage on managed mobile devices (e.g., Android: /data/data/, /storage/emulated/0/DCIM/; iOS: /var/mobile/Containers/Data/Application/, /var/mobile/Media/DCIM/)",
            "action": [
              "Create a SIEM rule that triggers an alert when a non-standard application process reads from sensitive mobile directories (e.g., DCIM, Contacts, Documents). Maintain a watchlist of known malicious process names and sensitive file paths to reduce false positives.",
              "For each application process, ingest MDM/EDR file access logs to calculate a rolling 30-day baseline of file reads per minute. Generate a medium-severity alert if a process's read rate exceeds the 95th percentile of its baseline and a high-severity alert if it exceeds the 99th percentile.",
              "Deploy a time-series anomaly detection model (e.g., LSTM) to analyze file access patterns for each application, using features like access frequency and file path entropy. An alert is generated when the model's reconstruction error for an activity window exceeds a dynamically tuned threshold, indicating a deviation from learned normal behavior."
            ]
          },
          {
            "description": "An API call to access a sensitive credential store (Android Keystore or iOS Keychain) is made by a process that is not on a pre-defined allowlist of trusted system or application processes identified by name and cryptographic signer.",
            "data_sources": [
              "MDM API monitoring logs",
              "EDR API call monitoring logs",
              "OS-level security audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Device credential management services and API gateways on mobile endpoints (e.g., Android Keystore, iOS Keychain).",
            "action": [
              "Maintain an allowlist of process names and cryptographic signers authorized to access the Android Keystore or iOS Keychain. Create a SIEM rule to generate a critical alert for any access attempt originating from a process not on this list, based on MDM/EDR API monitoring logs.",
              "For each application, establish an hourly baseline of credential store API call frequency. Generate an alert if the call frequency in any given hour deviates by more than 3 standard deviations from the established mean for that application, suggesting potential misuse.",
              "Train a one-class SVM model on legitimate credential access patterns, using features like process name, parent process, and API function called. Deploy the model to score new access attempts in real-time and flag any event classified as an outlier for immediate investigation."
            ]
          },
          {
            "description": "A large archive file (>10MB with a .zip, .tar, .gz, or .7z extension) is created in a temporary or user-writable directory by a process not on an allowlist of approved file managers. The creation event may be accompanied by a filename with high Shannon entropy (>3.5).",
            "data_sources": [
              "MDM file creation logs",
              "EDR file system monitoring logs",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User-writable storage locations on mobile devices (e.g., Android: /storage/emulated/0/Download/, iOS: /var/mobile/Library/Mobile Documents/) and corporate network egress points monitored by network sensors.",
            "action": [
              "Create a SIEM rule to detect the creation of large archive files (e.g., >10MB with extensions like .zip, .tar, .gz) by any process not on an allowlist of approved backup or file management applications. This rule should trigger a medium-severity alert.",
              "Upon alert, automatically calculate the Shannon entropy of the created filename; a score > 3.5 indicates high randomness and increases the alert's risk. Correlate the device IP and timestamp with Zeek conn.log to check for subsequent data transfers >10MB to external IPs within 5 minutes, elevating the alert to high if a correlation is found.",
              "Train and deploy a Random Forest classifier on labeled file creation events. Use features including process name, signer, file size, path depth, filename entropy, and time of day. Score new archive creation events in real-time and flag those with a malicious probability score > 0.8 for priority investigation."
            ]
          },
          {
            "description": "An installed application possesses a combination of high-risk permissions (e.g., READ_CONTACTS, READ_SMS, MANAGE_EXTERNAL_STORAGE) that is statistically rare for its declared application store category and is not justified by its stated function.",
            "data_sources": [
              "MDM application inventory logs",
              "App store manifest data",
              "Android logcat permission grant logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application manifests and permission grant logs stored on managed mobile devices and aggregated by the MDM/UEM platform.",
            "action": [
              "Maintain a list of high-risk 'toxic' permission combinations (e.g., READ_CONTACTS, ACCESS_INTERNET, and INSTALL_PACKAGES together). Run a daily query against the MDM application inventory to identify and alert on any installed application possessing one of these defined toxic combinations.",
              "For each application category (e.g., 'Productivity'), calculate the prevalence of every permission based on MDM inventory data. Assign a risk score to each app by summing the inverse prevalence of its granted permissions (rarer permissions get higher scores). Flag the top 5% of apps with the highest risk scores in each category for review.",
              "Use a density-based clustering algorithm like DBSCAN on multi-hot encoded permission vectors for all managed applications. This will group apps with similar permission sets. Investigate any applications that are flagged as noise points (outliers) by the algorithm, as they represent unusual and potentially malicious permission requests."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]