[
  {
    "information_requirement": "Is the adversary using proxy techniques for command and control communications?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1090",
        "name": "Proxy",
        "evidence": [
          {
            "description": "An outbound network connection is established to a destination IP or domain matching an entry on a threat intelligence feed categorized as a proxy, anonymizer (e.g., Tor), known C2 node, or unapproved commercial VPN service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Internet Gateway, Corporate DNS Resolvers, Web Proxy Logs",
            "action": [
              "Symbolic: Join Zeek dns.log records with conn.log records on the UID. Alert if conn.log.id.resp_h or dns.log.query matches an IP or domain on a threat intelligence feed where the category is 'Proxy', 'Tor', 'C2', or 'Unsanctioned VPN'.",
              "Statistical: For all externally resolved domains in dns.log, calculate the query frequency and the number of unique internal hosts making the query over a rolling 30-day window. Alert on successful connections to domains that fall in the bottom 5th percentile for both metrics and are not on an established allowlist of known-good, low-volume domains.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest, Gradient Boosting) on labeled domain data. Features should include domain length, TLD, subdomain count, character entropy, and historical query data. Use the model to score new, unseen domains in dns.log and alert when a domain is classified as malicious with a confidence score > 0.9."
            ]
          },
          {
            "description": "A process is created (Windows Event ID 4688) with an executable name matching a known proxy tool (e.g., plink.exe, ngrok.exe, chisel.exe, ligolo-ng.exe) or with command-line arguments containing patterns indicative of proxying or tunneling (e.g., -R:, -L:, -D, reverse, tunnel).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers (for centralized logging)",
            "action": [
              "Symbolic: Scan all process creation events (Windows Event ID 4688) for matches against a curated list of proxy tool filenames in the NewProcessName field. Simultaneously, use regular expressions to search the CommandLine field for known proxy/tunneling flags and keywords (e.g., /\\s-([RLD])\\s/, /reverse/, /tunnel/). Alert on any match.",
              "Statistical: For each unique CommandLine seen in the environment, calculate its enterprise-wide prevalence (percentage of hosts where it has been seen). Alert when a new command line has a prevalence score below a threshold (e.g., <0.1%) and contains numeric arguments that could represent ports or IP addresses.",
              "Machine Learning: Vectorize command-line arguments from Windows Event ID 4688 using techniques like TF-IDF. Train an unsupervised anomaly detection model (e.g., Isolation Forest) on the vectorized data from a baseline period. Alert on new command lines that the model flags as anomalous with a high score, indicating a significant deviation from normal administrative and user activity."
            ]
          },
          {
            "description": "A network connection (Windows Event ID 5156 or Sysmon Event ID 3) is initiated by a process not on a defined allowlist of network-aware applications (e.g., lsass.exe, winlogon.exe) or from a process executing from a user-writable, non-standard path (e.g., C:\\Users\\<user>\\AppData\\, C:\\PerfLogs\\, C:\\Windows\\Tasks\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Detection and Response (EDR) Systems, Critical Servers, User Workstations",
            "action": [
              "Symbolic: Correlate network connection events (Sysmon Event ID 3) with their initiating process information. Maintain an explicit allowlist of process image paths that are permitted to make external network connections (e.g., C:\\Program Files\\...\\chrome.exe). Alert when any process not on this list initiates an outbound connection to a non-private IP address.",
              "Statistical: For each process name (e.g., svchost.exe), build a baseline profile of its normal parent process, executable path, and user context. Calculate a rarity score for each new network connection based on the combination of these three features. Alert when a connection event has a rarity score exceeding the 99th percentile, indicating an unusual execution context for a network-connected process.",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) trained on legitimate process-network behavior. Features should include process path entropy, parent process name, user context (e.g., SYSTEM vs. a standard user), destination IP reputation, and destination port. Alert when a new process-network event falls outside the learned boundary of normal behavior."
            ]
          },
          {
            "description": "Network traffic on a standard port (e.g., 53, 80, 443) is identified by a network sensor as a different protocol than expected (e.g., Zeek identifies 'ssl' on port 53), or a Zeek 'weird' notice is generated indicating a protocol violation (e.g., non_dns_traffic_on_dns_port).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Taps/Spanning Ports feeding Zeek sensors, Internet Gateway, DMZ Network Segment",
            "action": [
              "Symbolic: Create a SIEM rule that queries Zeek conn.log. Alert if (id.resp_p == 53 AND service != 'dns') OR (id.resp_p == 443 AND service != 'ssl') OR (id.resp_p == 80 AND service != 'http'). Also, create a high-severity alert for any log generated in weird.log with a name field matching 'non_dns_traffic_on_dns_port' or 'possible_split_routing'.",
              "Statistical: For all TCP connections in conn.log on ports 80, 443, and 53, sample the first 1KB of the payload. Calculate the Shannon entropy of this payload data. Establish a baseline distribution of entropy values for each port. Alert on any new connection where the payload entropy is a statistical outlier (e.g., > 3 standard deviations from the mean for that port), suggesting encrypted or packed data where plaintext is expected.",
              "Machine Learning: Train a multi-class classifier (e.g., LightGBM) to identify application protocols (HTTP, SSL, DNS) based on port-agnostic features from conn.log, such as duration, packet count, inter-arrival time statistics, and payload size distribution. Alert when the model's predicted protocol for a connection strongly mismatches the protocol typically associated with its id.resp_p."
            ]
          },
          {
            "description": "An outbound TCP connection from conn.log shows characteristics inconsistent with typical user or application traffic, such as a highly asymmetric data transfer ratio (e.g., orig_bytes is >10x resp_bytes for a web browsing port) or a very long duration with low, periodic data transfers ('heartbeats').",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Internet Gateway, Internal Network Core Switches, Server-to-Server Traffic Segments",
            "action": [
              "Symbolic: Create a rule that alerts on TCP connections from conn.log where duration > 12 hours, history contains keep-alive indicators ('^'), and orig_bytes + resp_bytes < 10MB. Exclude known-good services that use persistent connections.",
              "Statistical: For every 15-minute interval, calculate the ratio of orig_bytes / resp_bytes for all connections. For each internal source IP, calculate the standard deviation and mean of this ratio over a 7-day baseline. Alert when a new connection's ratio exceeds 3 standard deviations from the source IP's historical mean, indicating a significant change in upload/download behavior.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on conn.log data, with features like log(duration), log(orig_bytes + 1), log(resp_bytes + 1), and the ratio orig_bytes / resp_bytes. Investigate any small, dense clusters that are identified as outliers from the main clusters of normal traffic (e.g., web browsing, email). These outlier clusters often represent C2 channels."
            ]
          },
          {
            "description": "A TLS connection exhibits domain fronting, where the unencrypted Server Name Indication (SNI) in ssl.log (e.g., a CDN domain) differs from the encrypted HTTP Host header in http.log (e.g., a malicious domain) for the same connection UID, and the SNI domain is a known CDN provider.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Network Taps monitoring traffic to CDNs, Internet Gateway",
            "action": [
              "Symbolic: Join ssl.log and http.log on the uid. Alert when ssl.log.server_name does not equal http.log.host, and ssl.log.server_name matches a list of known CDN domains (e.g., '*.cloudfront.net', '*.azureedge.net', '*.appspot.com').",
              "Statistical: For each ssl.log.server_name that is a CDN, maintain a baseline of all http.log.host values seen within those TLS sessions. Calculate the prevalence of each Host header. Alert when a new connection uses a Host header that has never been seen before or is in the bottom 1st percentile of historical prevalence for that specific CDN SNI.",
              "Machine Learning: Train a classifier to predict if an http.log.host domain is malicious based on features (DGA-like structure, age, TLD, etc.). When a domain fronting event is detected via the symbolic logic, pass the inner http.log.host to the model. Elevate the alert severity if the model classifies the inner domain as malicious with high confidence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]