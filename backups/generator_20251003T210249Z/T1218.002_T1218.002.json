[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using Control Panel items?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.002",
        "name": "Control Panel",
        "evidence": [
          {
            "description": "A process executes a Control Panel item (.cpl file) and the file's hash matches a known malicious hash, or the process initiates a network connection to a destination on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Domain Controllers, Application Servers, Network Egress Points",
            "action": [
              "Search process creation logs (Windows Event ID 4688) for command lines containing `.cpl`. Extract the file hash and join against a threat intelligence database of malicious file hashes. Concurrently, correlate the Process ID with network connection logs (Zeek conn.log) and DNS query logs (Zeek dns.log) occurring within 5 minutes. Join destination IPs and domains against a threat intelligence feed of malicious indicators. Generate an alert on any match.",
              "For all `.cpl` file executions, calculate the enterprise-wide prevalence of each file hash. Flag any CPL file hash present on a statistically insignificant number of hosts (e.g., < 5 hosts or < 1% of the endpoint population) for manual review as a rare artifact.",
              "Develop a supervised classification model (e.g., Random Forest) trained on features from both the process and subsequent network events following a CPL execution. Use features like file path entropy, parent process name, destination port, destination IP reputation, bytes transferred, and connection duration. Apply the model to classify each CPL execution as 'benign' or 'malicious' and alert on 'malicious' classifications."
            ]
          },
          {
            "description": "The `control.exe` or `rundll32.exe` process executes a `.cpl` file from a path outside of the standard `\\%SystemRoot%\\System32\\` or `\\%SystemRoot%\\SysWOW64\\` directories.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers",
            "action": [
              "Search process creation logs (Windows Event ID 4688) for `NewProcessName` of `control.exe` or `rundll32.exe` where `CommandLine` contains `.cpl`. Extract the file path using a regular expression. Compare the directory against an allowlist of standard system directories (`C:\\Windows\\System32`, `C:\\Windows\\SysWOW64`). Alert on any execution where the CPL path is not on the allowlist, prioritizing paths in user profiles, temporary directories, or network shares.",
              "For each CPL execution, calculate the Shannon entropy of its file path string. Establish a baseline distribution of path entropy for legitimate CPL executions from standard directories over a 30-day period. Flag executions where the path entropy exceeds a high percentile (e.g., 95th percentile) of the baseline, as this can indicate obfuscated paths used by malware.",
              "Train a one-class SVM (Support Vector Machine) using the file paths of legitimate CPL executions observed over a 30-day period. Apply this model to new CPL execution paths to detect anomalies. Paths flagged as outliers represent significant deviations from established behavior and require investigation."
            ]
          },
          {
            "description": "A `control.exe` process is created by a parent process other than `explorer.exe`, `svchost.exe`, or `services.exe`, such as `winword.exe`, `excel.exe`, `outlook.exe`, `powershell.exe`, or `cmd.exe`.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers",
            "action": [
              "Search process creation logs (Windows Event ID 4688) where `NewProcessName` is `control.exe`. Maintain an allowlist of expected `ParentProcessName` values (e.g., `explorer.exe`, `svchost.exe`, `services.exe`). Generate an alert for any execution of `control.exe` where the parent process is not on this list, with high severity for parents like `winword.exe`, `powershell.exe`, and `cmd.exe`.",
              "Over a 30-day rolling window, calculate the frequency of all unique parent-child process pairs where the child process is `control.exe`. Identify parent processes that fall below a low frequency threshold (e.g., seen < 5 times enterprise-wide) or are in the bottom 5th percentile of all `control.exe` parent processes. These rare relationships are highly suspicious.",
              "Model parent-child process relationships as a directed graph. Apply a community detection algorithm (e.g., Louvain Modularity) to identify clusters of normal process execution chains. Flag any `control.exe` process spawned by a parent that is part of an anomalous, low-prevalence, or newly-formed cluster for investigation."
            ]
          },
          {
            "description": "A file with a `.cpl` extension is created on a host, and within 60 seconds, a `control.exe` or `rundll32.exe` process is created that executes that same file.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Web servers",
            "action": [
              "Correlate file creation events (Sysmon Event ID 11) where `TargetFilename` ends in `.cpl` with process creation events (Windows Event ID 4688) on the same host. Trigger an alert if a process creation for `control.exe` or `rundll32.exe` executes the same `.cpl` file path within a 60-second window of its creation. Increase the risk score if the process that created the file is a browser, script interpreter, or command-line utility.",
              "For every observed file-write-then-execute sequence involving a `.cpl` file, calculate the time delta between the file write (Sysmon Event ID 11) and the execution (Windows Event ID 4688). Establish a baseline distribution of these time deltas. Flag sequences where the time delta is in a low percentile (e.g., bottom 10%), indicating immediate execution after being dropped.",
              "Utilize a sequence analysis model, such as a Hidden Markov Model (HMM), trained on typical sequences of system events (process create, file create, network connection). Flag any sequence involving the creation and immediate execution of a `.cpl` file that the model identifies as having a low probability of occurrence under normal operating conditions."
            ]
          },
          {
            "description": "A process initiated by `control.exe` or `rundll32.exe` executing a CPL file establishes network connections with anomalous characteristics, such as periodic beaconing, high data volume, or connections to non-standard ports.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, Proxy Servers, Endpoint devices",
            "action": [
              "For each CPL execution (Windows Event ID 4688), correlate the host IP and timestamp with network connection logs (Zeek conn.log). Alert if the destination IP is on a threat intelligence list, the destination port is not 80 or 443, or the requested domain (from Zeek dns.log) has a low reputation score or was registered within the last 30 days.",
              "For network connections spawned by CPL executions, calculate the entropy of requested domain names (from Zeek dns.log) to detect DGA, flagging domains in the 99th percentile. Analyze connection data volumes (`orig_bytes` + `resp_bytes` in Zeek conn.log) and flag connections that are statistical outliers (e.g., > 3 standard deviations from the host's baseline).",
              "Apply time series analysis to network connection metadata (bytes transferred per minute, connections per minute) from a host following a CPL execution. Use a forecasting model (e.g., ARIMA) or an anomaly detection algorithm (e.g., Isolation Forest) to detect significant deviations from the baseline, which could indicate C2 beaconing or data exfiltration."
            ]
          },
          {
            "description": "A new value is added to a registry key associated with Control Panel items, such as in `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls`, and the associated file path points to a non-standard location or a recently created file.",
            "data_sources": [
              "Sysmon Event ID 13",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers",
            "action": [
              "Search for registry value set events (Sysmon Event ID 13) where `TargetObject` contains `\\Control Panel\\Cpls`. For any match, inspect the `Details` field for the file path. Alert if this path is in a user-writable directory like `C:\\Users\\`, `C:\\ProgramData\\`, or `C:\\Temp\\`. Correlate the file path with file creation events (Sysmon Event ID 11) to check if the file was created shortly before the registry modification.",
              "For all registry modifications under `\\Control Panel\\Cpls`, calculate the enterprise-wide prevalence of the file path specified in the registry value. Flag paths that are unique or have a prevalence below a defined threshold (e.g., present on < 0.1% of hosts). Additionally, calculate the Shannon entropy of the file path string and flag paths in the 95th percentile or higher.",
              "Train a clustering algorithm (e.g., DBSCAN) on features from registry modification events under `\\Control Panel\\`. Features should include the key path, the process that made the change (`Image`), and characteristics of the file path in the value (entropy, directory depth, parent directory name). Identify clusters of normal activity and flag any modification that is classified as noise or part of a small, distinct cluster as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]