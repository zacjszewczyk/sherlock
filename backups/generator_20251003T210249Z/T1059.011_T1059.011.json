[
  {
    "information_requirement": "Has the adversary executed commands or scripts using a Lua interpreter? (TA0002 - Execution)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.011",
        "name": "Lua",
        "evidence": [
          {
            "description": "A process execution event involving a Lua interpreter (e.g., lua.exe, lua5.1.exe) is followed within 5 minutes by an outbound network connection from the same host to an IP address or domain present on a threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Application servers (e.g., those running web applications with Lua components), and Network Egress Points.",
            "action": [
              "For each Lua process execution event (Windows Event ID 4688), extract the source hostname and timestamp. Query network connection logs (Zeek conn.log) and DNS logs (Zeek dns.log) for activity from that hostname within a 5-minute window following the execution. Join the destination IP or queried domain against a CTI feed of known malicious C2 servers. An exact match triggers an alert.",
              "For each network connection following a Lua execution, establish a 30-day baseline of destination FQDNs and IPs for the source host. Calculate the access frequency for each destination. Using a percentile-based threshold, flag any connection where the destination falls below the 1st percentile of historical access frequency for that host, indicating a newly or rarely contacted destination that could signify C2 communication.",
              "Develop a time-series model of each host's normal network beaconing behavior, using features like connection frequency, data volume per connection, and destination port entropy from Zeek logs. After a Lua execution event, monitor the subsequent network traffic from the host. Apply an anomaly detection algorithm (e.g., Isolation Forest, Seasonal-Hybrid ESD) to identify significant deviations from the established baseline, such as a sudden change to a regular, low-volume 'heartbeat' connection characteristic of C2."
            ]
          },
          {
            "description": "A Lua interpreter process (e.g., lua.exe, luac.exe, lua5.1.exe) is executed with command-line arguments that exhibit high Shannon entropy, contain Base64-encoded strings, or include specific function calls associated with remote code execution or file downloads.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices and Application servers where Lua interpreters are installed.",
            "action": [
              "Monitor process creation events (Windows Event ID 4688) for Lua interpreters. Scan the command-line argument field using regular expressions for patterns indicative of malicious activity, such as '-e', 'os.execute', 'io.popen', 'require(\"socket\")', URI strings ('http://', 'https://'), or Base64 patterns. An exact match triggers an alert.",
              "For each Lua execution event, calculate the Shannon entropy of the command-line arguments. Establish a baseline of normal entropy scores for legitimate Lua usage across the environment over a 30-day period. Flag any execution where the command-line entropy exceeds the 95th percentile of the baseline, indicating likely obfuscation or an embedded script.",
              "Train a classification model (e.g., Random Forest, Gradient Boosting) on a labeled dataset of benign and malicious Lua command lines. Engineer features such as argument length, character frequency, n-gram frequency, presence of specific keywords, and entropy score. Apply the trained model to new Lua process creation events to classify them as malicious or benign in real-time."
            ]
          },
          {
            "description": "A Lua interpreter process is spawned by a parent process that is not on an established allowlist of typical parents for that interpreter, such as being launched by a Microsoft Office application, a web browser, or another scripting engine like wscript.exe.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, VDI instances, and servers running Microsoft Office or web browsers.",
            "action": [
              "For each Lua interpreter process creation event (Event ID 4688), inspect the parent process name. Compare the parent against a pre-defined allowlist of expected parent processes (e.g., 'explorer.exe', specific application servers). Trigger an alert if the parent process is not on the allowlist, particularly if it is a common phishing vector like 'winword.exe', 'excel.exe', or 'outlook.exe'.",
              "Over a 30-day period, build a frequency table of all parent-child process relationships involving Lua interpreters to establish a baseline. For each new execution, calculate the rarity of the observed parent-child pair. Flag any relationship that has never been seen before or falls below a low frequency threshold (e.g., occurs in less than 0.1% of baseline observations).",
              "Model process relationships as a directed graph where nodes are process names and edges represent parent-child spawning events. Use a graph-based anomaly detection algorithm to identify rare or topologically improbable edges, such as a Lua process being spawned by an unusual parent. Anomalies can be scored based on low edge betweenness or rarity within the graph structure."
            ]
          },
          {
            "description": "A Lua script (e.g., a file with a .lua extension) is executed from a non-standard or temporary directory such as %TEMP%, %APPDATA%, or C:\\Users\\Public.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User-writable directories on endpoints and servers (e.g., C:\\Users\\, C:\\ProgramData\\, C:\\Perflogs\\, %TEMP%).",
            "action": [
              "Monitor process creation events (Event ID 4688) where the command line includes a path to a '.lua' file. Use regular expressions to check if the file path resides within a high-risk, user-writable directory such as '%TEMP%', '%APPDATA%', 'C:\\Users\\Public', or 'C:\\Windows\\Temp'. An execution from one of these paths triggers an alert.",
              "Analyze the directory paths of all Lua script executions across the enterprise over a 30-day baseline period. Calculate the frequency of execution from each unique directory. Flag any Lua script execution where the directory path falls into the bottom 5th percentile of execution locations, indicating an outlier that warrants investigation.",
              "Apply a clustering algorithm (e.g., DBSCAN) to the directory paths of all observed Lua script executions. Use features derived from the path string, such as path depth, folder name entropy, and presence of keywords like 'Temp' or 'Public'. Clusters that are small and sparse, or distant from large, legitimate clusters, represent anomalous execution locations that should be investigated."
            ]
          },
          {
            "description": "A process initiated by a Lua script or interpreter subsequently spawns a command shell (cmd.exe, powershell.exe) or executes system discovery commands (e.g., whoami, net user, ipconfig).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, including workstations and servers.",
            "action": [
              "Correlate process creation events (Event ID 4688) by parent process ID. For any process whose parent is a known Lua interpreter, inspect the child process name. Trigger an alert if the child process matches a denylist of reconnaissance or shell commands, including 'cmd.exe', 'powershell.exe', 'whoami.exe', 'net.exe', 'ipconfig.exe', and 'systeminfo.exe'.",
              "For each legitimate Lua process, build a baseline profile of its normal child processes over a 30-day period. For each new instance, compare the set of spawned child processes against the historical baseline set using a Jaccard similarity index. A similarity score below a defined threshold (e.g., 0.5) indicates anomalous downstream activity and should be flagged.",
              "Model the sequence of process executions as a hidden Markov model (HMM), where states are process names and transitions are determined by parent-child relationships. Calculate the transition probabilities based on historical data. Flag process chains originating from a Lua execution that have a very low probability under the trained model, indicating a rare and suspicious sequence of actions."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]