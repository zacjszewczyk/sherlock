[
  {
    "information_requirement": "Has the adversary initiated peripheral device discovery?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1120",
        "name": "Peripheral Device Discovery",
        "evidence": [
          {
            "description": "A process is created with a file hash or script block content that matches a known malicious indicator for a peripheral device discovery tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Servers (e.g., Domain Controllers, Application Servers)",
            "action": [
              "Symbolic: Continuously match file hashes from process creation events (Windows Event ID 4688) and script block content hashes from PowerShell logs (Windows Event ID 4104) against a threat intelligence feed of known malicious discovery tool hashes (e.g., Seatbelt, SharpHound). Generate a high-severity alert upon any match.",
              "Statistical: For processes not matching known hashes, calculate the Shannon entropy of the command line. Establish a baseline for command-line entropy per user and host over a 30-day period. Flag executions where the entropy exceeds the 99th percentile of the established baseline, as this may indicate obfuscated or randomized commands.",
              "ML: Train a classification model (e.g., Random Forest, Gradient Boosting) using features such as parent process name, command-line arguments, file hash, and user context to predict if a process execution is malicious. Use labeled data from past incidents and known benign administrative activity to score new process events in real-time and alert on high-probability predictions."
            ]
          },
          {
            "description": "Anomalous execution of built-in system utilities or PowerShell cmdlets used for device enumeration, such as 'systeminfo', 'driverquery', 'fsutil fsinfo drives', 'Get-PnpDevice', or 'wmic path CIM_LogicalDevice', by a non-administrative user or process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, File Servers",
            "action": [
              "Symbolic: Create a watchlist of specific command strings and PowerShell cmdlets associated with peripheral device enumeration (e.g., 'systeminfo', 'driverquery', 'Get-PnpDevice', 'Get-CimInstance Win32_PnPEntity', 'fsutil fsinfo drives'). Generate an alert for any execution of these commands by users not belonging to a pre-defined IT administrator group.",
              "Statistical: For each command on the watchlist, establish a baseline of execution frequency per host and per user over a 30-day rolling window. Calculate the 95th percentile for execution counts. Alert when a user or host exceeds this threshold within a 24-hour period, indicating an unusual burst of discovery activity.",
              "ML: Use an unsupervised learning model (e.g., Isolation Forest, One-Class SVM) on command-line execution data, using features like the command, user, host, time of day, and parent process. The model will identify and score anomalous executions that differ from established patterns of normal administrative activity, alerting on high anomaly scores."
            ]
          },
          {
            "description": "A peripheral device discovery command is executed by a process with an anomalous parent process, such as a web browser, office application, or non-interactive service process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Servers, Application Servers",
            "action": [
              "Symbolic: Define and enforce a list of forbidden parent-child process relationships. Generate an alert when a discovery command process (e.g., 'cmd.exe' or 'powershell.exe' executing discovery commands) is spawned by a parent process such as 'WINWORD.EXE', 'OUTLOOK.EXE', 'CHROME.EXE', or 'w3wp.exe'.",
              "Statistical: Model normal parent-child process relationships by creating a frequency table of (parent_process, child_process) pairs from historical data. Calculate the conditional probability of a discovery command being executed given a specific parent. Alert when a new execution occurs with a historically rare or unseen parent, corresponding to a very low probability (e.g., p < 0.01).",
              "ML: Apply a sequence analysis model, such as a Hidden Markov Model (HMM) or an LSTM-based autoencoder, to process execution chains (e.g., Parent -> Child -> Grandchild). Train the model on benign activity sequences. When a new sequence involving device discovery is observed, calculate its reconstruction error or likelihood score under the trained model and flag sequences with high error or low likelihood scores as anomalous."
            ]
          },
          {
            "description": "A single host or user account generates a statistically significant volume of peripheral device discovery commands locally or against remote systems within a short time frame.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Zeek dce_rpc.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Network Segments (monitored by Zeek)",
            "action": [
              "Symbolic: Create a threshold rule that alerts if a single source host executes more than 10 distinct device discovery commands (from Event ID 4688) or targets more than 5 remote hosts with RPC enumeration calls for device information (observed in Zeek dce_rpc.log) within a 5-minute window.",
              "Statistical: For each source host, aggregate discovery command counts (from Event ID 4688/4104) into 1-minute time bins. For each host's time series of counts, calculate the mean and standard deviation over a 30-day baseline. Alert if the current count in a time bin exceeds the mean by more than 3 standard deviations (Z-score > 3).",
              "ML: Implement a time-series forecasting model (e.g., SARIMA, Prophet) for each host's discovery activity volume based on historical log data. Generate an alert if the observed activity in a given time interval significantly exceeds the model's predicted value (i.e., falls outside the prediction interval), indicating an unexpected surge in activity."
            ]
          },
          {
            "description": "Peripheral device discovery activity occurs as part of a suspicious sequence of events, such as immediately following a remote access event and preceding attempts to access a discovered removable drive.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, User Workstations with removable media access, File Servers",
            "action": [
              "Symbolic: Create a stateful correlation rule that triggers if the following sequence occurs from the same user/host context within a 30-minute window: 1. A successful remote login (Event ID 4624 with Logon Type 3 or 10). 2. Execution of a drive discovery command like 'fsutil fsinfo drives' (Event ID 4688). 3. An attempt to access an object on a removable drive (Event ID 4663 where Object Name contains a removable drive letter).",
              "Statistical: Develop a behavioral risk scoring system. Assign points to discrete events (e.g., remote login from a new country: +10, execution of 'Get-PnpDevice': +5, file write to removable media: +15). Sum the scores for each user/host over a rolling 1-hour window. Alert if the cumulative score exceeds a statistically determined threshold, such as the 99th percentile of scores across all users.",
              "ML: Use a graph-based analysis platform to model entities (users, hosts, processes, files) as nodes and their interactions (logins, executions, file access) as time-stamped edges. Train a graph neural network (GNN) or use a subgraph-matching algorithm to identify and alert on the emergence of subgraphs that match known malicious sequences, such as 'Remote Logon -> Device Discovery -> Data Staging on Removable Media'."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]