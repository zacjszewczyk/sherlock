[
  {
    "information_requirement": "Has the adversary attempted to discover cloud groups and permissions? (PIR)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1069.003",
        "name": "Cloud Groups",
        "evidence": [
          {
            "description": "A process creation event or a cloud audit log entry contains a command string or API call name that is a known, high-fidelity indicator of cloud group discovery.",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail",
              "Azure Monitor Audit Logs",
              "GCP Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM/Audit Log services, Domain Controllers, Administrator workstations, CI/CD pipeline runners",
            "action": [
              "Symbolic: Maintain a watchlist of command-line arguments and API calls strongly associated with discovery (e.g., 'Get-MsolRole', 'ListRolePolicies', 'az ad user get-member-groups', 'gcloud iam roles list'). Create a detection rule to trigger a high-severity alert on an exact match originating from a user or system not on a pre-defined administrative activity allowlist.",
              "Statistical: For parent processes like 'powershell.exe' or 'bash' that execute cloud CLI commands, calculate the Shannon entropy of the command-line arguments. Establish a baseline entropy score for legitimate administrative commands per user. Flag any command whose entropy score exceeds the 99th percentile for that user, which can indicate obfuscation or complex, non-interactive scripting.",
              "Machine Learning: Train a supervised classification model (e.g., logistic regression) on labeled command-line arguments (benign vs. malicious discovery). Engineer features such as command length, keyword counts ('list', 'get', 'group', 'role', 'member'), special character frequency, and the parent process name. Deploy the model to score new commands in real-time for their probability of being malicious discovery attempts."
            ]
          },
          {
            "description": "A single user identity or source IP address executes a high volume of distinct cloud group enumeration API calls within a short time frame, or uses broad, wildcard-based query parameters, suggesting automated reconnaissance rather than interactive use.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Monitor Audit Logs",
              "GCP Cloud Audit Logs",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider API gateways, Internal network egress points, Administrator workstations and servers",
            "action": [
              "Symbolic: Create a rule that triggers an alert if a single user principal executes more than 20 distinct enumeration API calls (e.g., 'ListGroups', 'ListRoles', 'ListPolicies') within a 1-minute window. Also, alert on the use of wildcard queries like 'Get-MsolUser -All | Get-MsolUserRole' when not executed by a whitelisted service account or administrator.",
              "Statistical: For each user principal and source IP, calculate a rolling count of enumeration API calls per minute. Establish a baseline (e.g., mean and standard deviation) over a 30-day period. Generate an alert if the current rate for a user or IP exceeds 3 standard deviations above their personal or peer-group baseline, indicating anomalously fast activity.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA, LSTM) on the count of enumeration events per user and per source IP. The model should learn the normal cadence of activity and flag sudden spikes or changes in the pattern that deviate significantly from the forecasted behavior, which could indicate a scripted attack."
            ]
          },
          {
            "description": "A user's cloud enumeration behavior, measured by the variety of enumeration API calls and the number of unique groups queried, significantly deviates from their own historical baseline or the aggregated baseline of their assigned peer group.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Monitor Audit Logs",
              "GCP Cloud Audit Logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM/Audit Log services, User and Entity Behavior Analytics (UEBA) platform data lake, SIEM log repository",
            "action": [
              "Symbolic: Define a rule that alerts if a non-administrative user account, or any account outside a defined 'Cloud Administrators' group, executes any privileged enumeration command (e.g., 'Get-MsolRole', 'gcloud iam roles list'). This enforces a policy of least privilege.",
              "Statistical: For each user, profile the set of unique enumeration API calls they typically make over a 30-day window. In a sliding 1-hour window, calculate the Jaccard similarity between the set of calls made and their historical baseline set. A Jaccard similarity score below a threshold (e.g., 0.2) indicates a significant and potentially suspicious change in behavior.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) to group users based on vectors of their enumeration behavior (features: API call frequency, API call diversity, time-of-day distribution). Generate an alert when a user's feature vector causes them to move from a 'low-activity' cluster to a 'high-activity/high-diversity' cluster, or when they are classified as an outlier."
            ]
          },
          {
            "description": "A cloud group enumeration event is observed originating from a source IP address with high-risk contextual attributes, including but not limited to: a rare or high-risk geolocation, an IP on a threat intelligence feed, a non-corporate ASN, or an anomalous process context on the source endpoint.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Monitor Audit Logs",
              "GCP Cloud Audit Logs",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network gateway firewalls and proxies, VPN concentrators, Cloud provider audit logs, Endpoint process monitoring agents",
            "action": [
              "Symbolic: For every cloud enumeration event, enrich the source IP address with geolocation data and check it against multiple threat intelligence feeds (e.g., known malicious IPs, TOR exit nodes, anonymizing proxies). Maintain an allowlist of approved source countries and ASNs and alert on any activity from outside this list.",
              "Statistical: For each user, maintain a frequency distribution of their source geolocations and ASNs over a 90-day baseline. An enumeration event originating from a location or ASN that falls below the 1st percentile of frequency for that user (a 'statistically rare' location) should have its risk score increased and be flagged for review.",
              "Machine Learning: Train a classification model (e.g., Random Forest) to predict the legitimacy of an enumeration event. Use features including: source IP geolocation, ASN, time of day, day of week, user role, and parent process name on the endpoint. An event with a low probability score from the model, indicating a high likelihood of being anomalous, should trigger an alert."
            ]
          },
          {
            "description": "A cloud group enumeration event by a user is followed within a defined, short time window (e.g., 10 minutes) by a high-risk action, such as privilege escalation or credential access, performed by the same user identity.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Monitor Audit Logs",
              "GCP Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM correlation engine, Cloud provider audit log services, Data Loss Prevention (DLP) systems",
            "action": [
              "Symbolic: Implement a SIEM correlation rule to detect a specific sequence: EVENT_A = (Cloud API call matches 'List*', 'Get*', 'Describe*' for IAM roles/groups) followed by EVENT_B = (Cloud API call matches 'AssumeRole', 'Add-RoleGroupMember', 'GetSecretValue', 's3:GetObject') within 10 minutes, where User(EVENT_A) == User(EVENT_B). Alert on this sequence.",
              "Statistical: Model user behavior as a Markov chain of API call types. Calculate the transition probabilities between states (e.g., P(High-Risk Action | Enumeration Action)). If the observed probability for a user in a given session significantly exceeds the historical average transition probability for all users, flag the sequence as a statistical anomaly.",
              "Machine Learning: Model cloud activity as a directed graph where nodes are users, roles, and resources, and edges are API calls. Use graph-based anomaly detection algorithms to identify rare or high-risk paths (e.g., a short path from 'User -> ListRoles -> Role -> AssumeRole -> GetSecretValue') that do not conform to normal, established operational workflows in the graph."
            ]
          },
          {
            "description": "An internal host is observed generating a statistically unusual volume, frequency, or diversity of network connections to known cloud provider API endpoints, which correlates in time with cloud audit log enumeration events from that host's associated user.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "AWS CloudTrail",
              "Azure Monitor Audit Logs",
              "GCP Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network TAPs at internet egress points, DNS resolvers, SIEM log repository",
            "action": [
              "Symbolic: Create a detection rule that alerts if the number of DNS queries from a single internal host for cloud API FQDNs (e.g., '*.amazonaws.com', 'management.azure.com', '*.googleapis.com') recorded in Zeek dns.log exceeds a fixed threshold (e.g., 100 unique subdomains in 5 minutes).",
              "Statistical: In Zeek conn.log, monitor the 'orig_bytes' and 'resp_bytes' fields for connections to cloud API endpoints. A series of connections with abnormally low byte counts can indicate rapid-fire enumeration checks. Flag hosts whose average connection size to these endpoints drops more than 2 standard deviations below its established 30-day mean.",
              "Machine Learning: Apply a time-series anomaly detection model to the volume of connections per second (from Zeek conn.log) from an internal host to the set of known cloud API IP addresses. A model can learn the daily and weekly seasonality of normal work and flag bursts of connections at anomalous times or with a machine-like cadence that deviates from the learned pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]