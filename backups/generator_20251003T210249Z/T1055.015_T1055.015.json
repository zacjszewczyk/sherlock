[
  {
    "information_requirement": "Has the adversary attempted to elevate privileges using ListPlanting?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.015",
        "name": "ListPlanting",
        "evidence": [
          {
            "description": "A process is created from an executable file whose hash matches a known ListPlanting tool or whose memory contains signatures indicative of ListPlanting code patterns.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Antivirus/EDR Detection Logs",
              "EDR Memory Scan Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Administrative workstations, Terminal servers, Enterprise SIEM",
            "action": [
              "Symbolic: Join process creation logs (Sysmon Event ID 1) with a threat intelligence feed of file hashes known to be used for ListPlanting. Separately, query EDR memory scan logs for YARA rule matches on signatures specific to ListPlanting callback functions or memory allocation patterns.",
              "Statistical: Calculate the enterprise-wide prevalence of every file hash observed in process creation events over the last 30 days. Alert on the execution of any file with a prevalence score in the lowest percentile (e.g., <0.01%, seen on only one or two hosts), especially if the associated parent process is a common GUI application like explorer.exe.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest, Gradient Boosting) trained on process metadata features (parent process, command line arguments, file path, user context, hash prevalence, PE header info). A high malicious probability score for a process originating from a common GUI application warrants investigation for process injection."
            ]
          },
          {
            "description": "A process with a low or medium integrity level obtains a handle to, allocates memory in, and sends LVM_SORTITEMS window messages to a different process running at a high or system integrity level within a short time window (e.g., <5 seconds).",
            "data_sources": [
              "Sysmon Event ID 10",
              "Sysmon Event ID 8",
              "API Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Domain Controllers (if admin tools are used), Management servers with GUI tools",
            "action": [
              "Symbolic: Create a rule that triggers when the same source process and target process pair generate the following event sequence within 5 seconds: 1) A Sysmon Event ID 10 (ProcessAccess) where the SourceImage integrity level is lower than the TargetImage integrity level, 2) A Sysmon Event ID 8 (CreateRemoteThread) or VirtualAllocEx API call, and 3) An API log showing the SourceImage sending an LVM_SORTITEMS message to the TargetImage.",
              "Statistical: For each process name (e.g., 'word.exe'), establish a baseline rate of Sysmon Event ID 10 (ProcessAccess) events targeting higher-integrity processes. Alert when a process instance's access rate exceeds the 99th percentile of its historical baseline, especially if the target process is a critical system process like 'lsass.exe' or 'winlogon.exe'.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., using Seasonal-Hybrid ESD) for the frequency of LVM_SORTITEMS and LVM_SETITEMPOSITION Windows messages sent between distinct process pairs. A sudden, sharp spike in these specific messages, particularly between processes of differing integrity levels, should be flagged as a high-confidence anomaly indicative of a shatter attack like ListPlanting."
            ]
          },
          {
            "description": "A process that lacks a GUI subsystem flag in its PE header, or is a known console application, generates a high volume of `SendMessage` or `PostMessage` API calls with LVM_* arguments.",
            "data_sources": [
              "API Monitoring Logs",
              "EDR Telemetry"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Endpoint Detection and Response (EDR) platform",
            "action": [
              "Symbolic: Create a rule to alert when a process, whose PE header does not specify the IMAGE_SUBSYSTEM_WINDOWS_GUI subsystem, generates more than 50 `SendMessage` or `PostMessage` API calls with LVM_* arguments within a one-minute window.",
              "Statistical: For each process name across the enterprise, profile the normal distribution of `SendMessage`/`PostMessage` call counts per minute. Alert when a running instance of a process exhibits a call count that is more than 3 standard deviations above the mean for its process type, especially for processes that typically have a mean near zero (e.g., console applications, services).",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on process features including API call frequencies (specifically for `SendMessage` and `PostMessage`), PE header flags, and process path. Investigate processes that are clustered as outliers due to a high frequency of LVM_* messages but that lack other features typical of GUI applications."
            ]
          },
          {
            "description": "A high-integrity GUI process (e.g., explorer.exe, mmc.exe) spawns a command-line interpreter or initiates a network connection to a destination not associated with its normal function.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, DNS servers, Core network switches",
            "action": [
              "Symbolic: Alert when a process with image path 'C:\\\\Windows\\\\explorer.exe' and a high integrity level spawns a child process with an image name of 'cmd.exe', 'powershell.exe', 'cscript.exe', or 'wscript.exe'.",
              "Statistical: For each common parent process (like explorer.exe), maintain a baseline frequency distribution of its child process names over the last 90 days. Alert when a child process is spawned that falls into a low-frequency category (e.g., seen less than 0.1% of the time). Similarly, for network connections from explorer.exe, calculate the rarity of the destination IP/domain and alert on connections to destinations in the bottom 1st percentile of popularity.",
              "Machine Learning: Use a peer group analysis model to compare the behavior of a specific 'explorer.exe' instance to all other 'explorer.exe' instances. Flag instances that exhibit anomalous behavior, such as spawning unique child processes, making network connections to different geolocations, or accessing unusual file types, when compared to the established behavioral baseline of its peers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary using ListPlanting to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.015",
        "name": "ListPlanting",
        "evidence": [
          {
            "description": "A trusted GUI process, such as explorer.exe, initiates a network connection to a destination IP/domain on a threat intelligence list, or the JA3/JA3S or HASSH hash of the connection matches a known malicious signature.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek ssh.log",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Proxy servers, DNS resolvers, Endpoint Detection and Response (EDR) platform",
            "action": [
              "Symbolic: Join endpoint network connection logs (Sysmon Event ID 3 for process context) with network sensor data (Zeek logs). Alert when the source process name is 'explorer.exe' and either the destination IP in 'conn.log' matches a C2 threat feed or the 'ja3' hash in 'ssl.log' matches a known malicious client signature.",
              "Statistical: Calculate the Shannon entropy of server names (SNI) in 'ssl.log' and requested domains in 'dns.log'. Alert when 'explorer.exe' initiates a connection to a domain with an entropy score above 4.5, suggesting Domain Generation Algorithm (DGA) activity, which is highly abnormal for this process.",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA) on the volume of outbound bytes and connection duration for traffic originating from 'explorer.exe' on a per-host basis. Use the model to predict expected behavior and alert on significant positive deviations (anomalies), which could indicate data exfiltration masked by a trusted process."
            ]
          },
          {
            "description": "A trusted GUI process loads a DLL from a non-standard, user-writable directory (e.g., C:\\Users\\*\\Downloads) or executes code from a memory region with Read-Write-Execute (RWX) permissions that is not backed by a corresponding file on disk.",
            "data_sources": [
              "Sysmon Event ID 7",
              "Sysmon Event ID 8",
              "EDR Memory Scan Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical servers with GUI management tools, Endpoint Detection and Response (EDR) platform",
            "action": [
              "Symbolic: Alert when a Sysmon Event ID 7 (ImageLoad) is logged for a trusted process (e.g., 'explorer.exe', 'mmc.exe') where the 'ImageLoaded' path is within a user-writable directory like 'C:\\\\Users\\\\', 'C:\\\\Temp\\\\', or 'C:\\\\ProgramData\\\\'.",
              "Statistical: Maintain a baseline of all DLLs loaded by 'explorer.exe' across the enterprise, creating a prevalence score for each DLL hash. Alert when a DLL is loaded whose hash prevalence is below a critical threshold (e.g., loaded on fewer than 5 hosts), indicating it is not a standard system or application component.",
              "Machine Learning: Use a sequence analysis model (e.g., a Hidden Markov Model or LSTM) trained on benign sequences of system events for 'explorer.exe'. Flag event sequences that have a very low probability under the model, such as a remote memory allocation (Sysmon Event ID 8) followed by an image load from a temporary directory (Sysmon Event ID 7) and a new network connection (Sysmon Event ID 3)."
            ]
          },
          {
            "description": "The 'explorer.exe' process spawns an archiving utility (e.g., 7z.exe) or performs an anomalously high number of file creation events in a short period, consistent with staging data for exfiltration.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, User workstations, Document management systems, Endpoint logs",
            "action": [
              "Symbolic: Create a rule to alert when a Sysmon Event ID 1 (ProcessCreate) event shows 'explorer.exe' as the parent process for a known archiving utility (e.g., '7z.exe', 'rar.exe', 'tar.exe', 'zip.exe') or the built-in 'compact.exe'.",
              "Statistical: On a per-host basis, establish an hourly baseline for the number of file creation events (Sysmon Event ID 11) originating from the 'explorer.exe' process. Alert when the current count exceeds a dynamic threshold, such as the 99.5th percentile of the host's historical baseline for that specific hour of the day and day of the week.",
              "Machine Learning: Use a peer group analysis model to compare the file I/O patterns of 'explorer.exe' on one machine to its peers. Flag an instance as anomalous if its feature vector (e.g., ratio of reads to writes, count of unique directories accessed, entropy of file extensions created) deviates significantly (e.g., >3 standard deviations) from the cluster centroid of its peer group."
            ]
          },
          {
            "description": "Network traffic originating from 'explorer.exe' exhibits highly periodic, fixed-interval connections (beaconing) or an unusually high ratio of outbound to inbound bytes, indicative of data exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, Core switches providing flow data",
            "action": [
              "Symbolic: Correlate Sysmon Event ID 3 from 'explorer.exe' with Zeek conn.log. Alert if a connection's 'orig_bytes' is significantly larger than 'resp_bytes' (e.g., > 100:1 ratio and > 10MB total) and the destination is an external IP not associated with known cloud storage or corporate services.",
              "Statistical: For each source-destination IP pair where the source process is 'explorer.exe', calculate the standard deviation of the time delta between consecutive connections in Zeek conn.log. A standard deviation near zero (e.g., < 1 second) over a sustained period (> 10 connections) is a strong indicator of automated C2 beaconing.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on feature vectors derived from benign 'explorer.exe' network connections (e.g., destination port, bytes sent, bytes received, connection duration, destination IP reputation). Use the trained model to score new connections in real-time and alert on any connection classified as an outlier."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]