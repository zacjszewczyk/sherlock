[
  {
    "information_requirement": "Is the adversary executing malicious code using scheduled tasks or jobs?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1053",
        "name": "Scheduled Task-Job",
        "evidence": [
          {
            "description": "A process launched by the Windows Task Scheduler service (e.g., svchost.exe with command line containing 'netsvcs', or taskeng.exe) initiates an outbound network connection to an IP address or domain that is either a known indicator of compromise or is statistically rare for the enterprise.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Windows Servers (e.g., Domain Controllers, Application Servers), User Endpoints, and Network Egress Points.",
            "action": [
              "1. Symbolic: Join process creation events (Windows Event ID 4688) where the ParentProcessName is 'taskeng.exe' or 'svchost.exe' (with a command line containing 'netsvcs') with network connection logs (Zeek conn.log and dns.log) on the host's IP address and a close time window (e.g., within 5 seconds). Extract destination IP addresses and domains. Alert if any destination matches a high-confidence threat intelligence feed of known malicious indicators.",
              "2. Statistical: For all network connections originating from processes spawned by the Task Scheduler, calculate the historical frequency of each destination IP, domain, and ASN across the enterprise over the last 30-90 days. Generate an alert for connections to destinations that fall within the bottom 5th percentile of frequency, as these are anomalously rare and warrant investigation.",
              "3. Machine Learning: Train a time-series model (e.g., ARIMA or Prophet) on the volume of outbound data (sum of `resp_bytes` in Zeek conn.log) per host, aggregated hourly. Flag any host where an anomalous spike in outbound data transfer occurs within minutes of a scheduled task execution event (a Windows Event ID 4688 spawned by the scheduler service)."
            ]
          },
          {
            "description": "A scheduled task is created (Windows Event ID 4698) or executed via command line (Windows Event ID 4688 for schtasks.exe) containing obfuscated commands, script content, or suspicious strings in its action arguments.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially those with PowerShell v5+ logging and command-line process auditing enabled.",
            "action": [
              "1. Symbolic: Scan the '<Command>' and '<Arguments>' fields in the XML of Windows Event ID 4698, and the command line of 'schtasks.exe' in Windows Event ID 4688. Use regular expressions to search for known malicious patterns, such as 'powershell -e', '-enc', 'IEX', 'DownloadString', 'rundll32 javascript:', 'mshta vbscript:', or 'certutil -urlcache'.",
              "2. Statistical: For each new task, calculate the Shannon entropy of the command line arguments or script block found in the event data. Establish a baseline entropy score for legitimate tasks by organizational unit or server role (e.g., Domain Controller, workstation). Flag any new task whose command entropy exceeds the 95th percentile of its role-specific baseline, indicating likely obfuscation.",
              "3. Machine Learning: Utilize a pre-trained NLP classification model (e.g., a fine-tuned DistilBERT) to classify the full command-line arguments as 'benign' or 'malicious'. This model, trained on open-source datasets of malicious commands, can detect novel variations of obfuscated commands that may evade static regex patterns."
            ]
          },
          {
            "description": "A newly created scheduled task executes an unsigned binary from a non-standard, user-writable location (e.g., %APPDATA%, %TEMP%, C:\\Users\\Public) or executes a process that is statistically rare for the Task Scheduler to launch.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers.",
            "action": [
              "1. Symbolic: Monitor task creation (Windows Event ID 4698) and process execution from the task scheduler (Windows Event ID 4688). Maintain and apply an allow/deny list of executable paths for scheduled tasks. Alert whenever a task attempts to execute a binary from a denied path such as 'C:\\Users\\*\\AppData\\', 'C:\\ProgramData\\', or 'C:\\Windows\\Temp\\'.",
              "2. Statistical: Build a baseline of legitimate (process name, process path) tuples launched by the Task Scheduler across the enterprise. Use frequency analysis to identify rare combinations. A task launching 'svchost.exe' from 'C:\\Users\\Public\\' is a high-confidence anomaly. Flag any tuple that falls below a 1% frequency threshold in the environment.",
              "3. Machine Learning: Employ an Isolation Forest model trained on features from legitimate scheduled task executions (e.g., process path depth, is_process_signed, parent process name, command-line length, argument count). This unsupervised outlier detection model will identify and score new tasks that deviate significantly from established normal behavior."
            ]
          },
          {
            "description": "A scheduled task is created, executed, and subsequently deleted within a very short timeframe (e.g., under five minutes), indicating a 'one-shot' execution pattern used to evade forensic analysis.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers.",
            "action": [
              "1. Symbolic: Create a detection rule that correlates events by 'Task Name' and 'Subject Logon ID' on the same host. Trigger an alert when a Windows Event ID 4698 (Create) is followed by a Windows Event ID 4702 (Delete) for the same task name within a 5-minute window.",
              "2. Statistical: For every task, calculate its lifetime by taking the time delta between its creation (Event ID 4698) and deletion (Event ID 4702) events. Build a distribution of these lifetimes and alert on any task whose lifetime falls in the bottom 1st percentile (e.g., < 60 seconds), indicating an unusually ephemeral task.",
              "3. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on task features including lifetime, creating user account type (e.g., admin, standard user), and the process executed (from correlated Event ID 4688). A small, dense cluster of short-lived tasks created by standard user accounts could represent a specific adversary toolset in use."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using scheduled tasks or jobs?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1053",
        "name": "Scheduled Task-Job",
        "evidence": [
          {
            "description": "A persistent scheduled task (e.g., triggers on logon, startup, or a recurring interval) is configured to execute a command containing a file path, domain, or IP address that matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, particularly Domain Controllers and other Tier 0 assets.",
            "action": [
              "1. Symbolic: Continuously monitor task creation/modification events (Windows Event ID 4698). Filter for tasks where the XML data contains persistence triggers such as '<LogonTrigger>', '<BootTrigger>', or a recurring '<CalendarTrigger>'. From the task's '<Command>' and '<Arguments>' XML fields, extract all file paths, domains, and IP addresses. Compare these extracted artifacts against threat intelligence feeds of known malicious indicators and alert on any matches.",
              "2. Statistical: For all persistent tasks, calculate the frequency of the domains and executable names used in their actions across the enterprise. A domain or executable that appears in only one or a very small number of persistent tasks (e.g., < 5 hosts) is anomalous and should be investigated.",
              "3. Machine Learning: Train a classification model (e.g., Logistic Regression) to predict if a task is for persistence based on its features (trigger type, action, user context, frequency). Use the model to flag newly created tasks that it classifies as 'persistent' and that also have low-prevalence features (e.g., a rare executable path)."
            ]
          },
          {
            "description": "A scheduled task is created with a common persistence trigger (e.g., At Logon, At Startup) that executes a known living-off-the-land binary (LOLBin) with arguments to download a remote payload or execute an inline script.",
            "data_sources": [
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers.",
            "action": [
              "1. Symbolic: Monitor task creation events (Windows Event ID 4698). Filter for tasks with persistence-related triggers (e.g., LogonTrigger, BootTrigger). Within this filtered set, search the task's command for known LOLBins (e.g., 'powershell.exe', 'mshta.exe', 'cscript.exe', 'rundll32.exe', 'certutil.exe') followed by arguments indicating remote file access or script execution (e.g., '-nop -w hidden -c IEX', 'http://', 'javascript:').",
              "2. Statistical: Create a baseline of normal command-line argument patterns for LOLBins executed by scheduled tasks. Calculate the term frequency-inverse document frequency (TF-IDF) for all arguments. Arguments that are rare across the environment but appear in a new task (e.g., a unique URL) will have a high TF-IDF score and should be flagged.",
              "3. Machine Learning: Use an anomaly detection model on the sequence of arguments passed to LOLBins in scheduled tasks. A model trained on legitimate sequences can identify novel malicious command structures that do not match known patterns, such as an unusual combination of flags or an abnormal URL structure."
            ]
          },
          {
            "description": "A new persistent scheduled task is created that is a statistical outlier compared to the established baseline of legitimate tasks based on its name, path, action, or trigger, suggesting masquerading or non-standard software.",
            "data_sources": [
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, with baselines established per server role and workstation image.",
            "action": [
              "1. Symbolic: Alert on new persistent tasks whose names are a close misspelling of legitimate tasks (e.g., 'Microsft Update Task' vs. 'Microsoft Update Task'). Also, alert if a task uses a legitimate name but executes from an incorrect, non-standard path.",
              "2. Statistical: For new persistent tasks, calculate the Levenshtein distance of the task name and executable path to the known good baseline of tasks for that asset type. A low distance to a known name but a different path is highly suspicious. Also, flag tasks with high-entropy names (e.g., > 4.5 bits), indicating randomization.",
              "3. Machine Learning: Use a clustering algorithm (e.g., K-Means) to group all scheduled tasks based on vectorized features like name n-grams, path, and trigger type. Small, isolated clusters or new tasks that do not fall into any existing large cluster represent significant deviations from the norm and warrant investigation."
            ]
          },
          {
            "description": "A scheduled task is modified to hide its presence from standard administrative tools, such as by deleting its Security Descriptor (SD) from the task's XML definition.",
            "data_sources": [
              "Windows Event ID 4701",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers.",
            "action": [
              "1. Symbolic: Monitor for task update events (Windows Event ID 4701) or creation events (4698). Trigger a high-severity alert if the event's XML data shows the '<SecurityDescriptor>' field has been removed or is null. This is a known technique to hide tasks from the 'schtasks /query' command and Task Scheduler GUI.",
              "2. Statistical: Analyze the names of all created/modified tasks. Flag names that are an extremely close match to legitimate Windows task names (e.g., 'GoogleUpdateTaskMachineUA' vs 'GoogleUpdateTaskMachineCore') but have a different action path or have a null Security Descriptor. Use n-gram analysis on task names to find unusual character sequences not present in legitimate task names.",
              "3. Machine Learning: Train a sequence model on the series of events related to a single task (e.g., Create -> Disable -> Update -> Enable). A model trained on normal administrative workflows can flag an unusual sequence like Create -> Update (to remove SD) -> Enable as anomalous behavior indicative of tampering."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using scheduled tasks or jobs?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1053",
        "name": "Scheduled Task-Job",
        "evidence": [
          {
            "description": "A scheduled task is configured to run with elevated privileges (e.g., NT AUTHORITY\\SYSTEM) and executes a file whose hash is associated with a known privilege escalation exploit tool or malware.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially multi-user systems like terminal servers.",
            "action": [
              "1. Symbolic: Monitor for tasks created (Windows Event ID 4698) where the XML contains '<UserId>S-1-5-18</UserId>' or '<RunLevel>HighestAvailable</RunLevel>'. When such a task executes (Windows Event ID 4688), obtain the hash of the executable file. Compare this hash against a threat intelligence database of known malware and privilege escalation tools (e.g., BadPotato, PrintNightmare exploits) and alert on a match.",
              "2. Statistical: Maintain a baseline of executables that are legitimately run as SYSTEM via scheduled task. Flag any new task running as SYSTEM that uses an executable not on this baseline, especially if the executable is unsigned or located in a temporary or user-writable directory.",
              "3. Machine Learning: Use a supervised classification model (e.g., XGBoost) to score the risk of a task. Train the model on features including: runs_as_system (boolean), executable_is_signed (boolean), executable_path_rarity (float), creating_user_is_admin (boolean). A high risk score from the model triggers an alert for analyst review."
            ]
          },
          {
            "description": "A scheduled task is created or modified with the 'Run with highest privileges' option enabled, and it executes a command pattern known to be used for bypassing User Account Control (UAC).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints (e.g., Windows 10, Windows 11).",
            "action": [
              "1. Symbolic: Monitor 'schtasks.exe' process creation (Windows Event ID 4688) for the '/RL HIGHEST' argument. Also monitor task creation events (Windows Event ID 4698) for XML containing '<HighestAvailable>true</HighestAvailable>'. Correlate the creation of a 'highest privileges' task with a task action that invokes a known UAC bypass method, such as targeting 'fodhelper.exe', 'eventvwr.exe', or 'sdclt.exe' to launch a malicious command.",
              "2. Statistical: Baseline the usage of '/RL HIGHEST' and '<HighestAvailable>true</HighestAvailable>' in your environment. Most legitimate tasks do not require this setting. A sudden increase in its use, or its use by a non-standard user or in conjunction with a rare process, is a statistical anomaly worth investigating.",
              "3. Machine Learning: Model the sequence of user actions. A low-privilege process (e.g., a Microsoft Office macro) that spawns a shell, which then creates a high-privilege scheduled task, is a suspicious sequence. A sequence model like a Hidden Markov Model can be trained to detect these anomalous state transitions from low to high integrity contexts."
            ]
          },
          {
            "description": "A user account with standard privileges creates or modifies a scheduled task, configuring it to execute under the context of a higher-privileged account such as SYSTEM, Administrator, or a service account.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4701"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers.",
            "action": [
              "1. Symbolic: Create a high-severity alert that triggers immediately when the 'SubjectUserName' in a task creation (4698) or update (4701) event is a non-administrative account, but the '<UserId>' in the event's XML data is 'SYSTEM', 'S-1-5-18', 'Administrator', or a member of a privileged group. This indicates a likely privilege escalation vulnerability exploit.",
              "2. Statistical: This is a deterministic condition, not a statistical one. The existence of a single event where a standard user creates a SYSTEM task is a 100% anomaly against the baseline of OS security rules. A query to find such an event should return zero results in a healthy environment. Any result is a high-confidence indicator of compromise.",
              "3. Machine Learning: While a symbolic rule is superior, a classification model could be trained on '(creating_user_privilege_level, task_runas_privilege_level)' tuples. The model would learn that the tuple '(standard, system)' is malicious. This can be used to assign a maximum risk score to such events automatically."
            ]
          },
          {
            "description": "A temporary, high-privilege scheduled task is created and deleted in a short sequence, immediately following suspicious activity from a user-level process, indicating a 'hit-and-run' privilege escalation.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers.",
            "action": [
              "1. Symbolic: Create a correlated detection that triggers an alert for the following sequence on a single host: [Event 4688: Process A is created by a standard user] -> [Event 4698: A task is created by Process A's logon session, configured to run as SYSTEM] -> [Event 4702: The same task is deleted within 2 minutes of creation].",
              "2. Statistical: Analyze the time delta between a suspicious user-level process execution (e.g., PowerShell downloading a file) and the creation of a new SYSTEM-level task on the same host. A distribution of these time deltas should show a long tail; a very short delta (e.g., < 30 seconds) is a strong statistical indicator of a causal relationship and potential exploit chain.",
              "3. Machine Learning: Use a graph-based analysis tool to model processes, users, and tasks as nodes. An edge from a user-level process node to a SYSTEM-level task node that is both created and deleted in a short time represents a high-risk path in the graph. Graph algorithms can automatically detect and score these paths as likely privilege escalation event chains."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]