[
  {
    "information_requirement": "Has an adversary attempted to acquire credentials from Linux hosts by accessing /etc/passwd or /etc/shadow files? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1003.008",
        "name": "-etc-passwd and -etc-shadow",
        "evidence": [
          {
            "description": "An outbound network connection from a Linux server to an external destination IP, domain, or ASN that is either on a threat intelligence blocklist or is statistically rare for that server.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and border routers monitoring traffic originating from Linux server subnets.",
            "action": [
              "Create a real-time search that joins network connection logs (Zeek conn.log) with DNS query logs (Zeek dns.log). Alert when a connection's destination IP, or the resolved IP of its `host` field, matches an entry in a threat intelligence feed categorized as 'malicious', 'C2', or 'TOR exit node'.",
              "For each Linux server, create a 30-day rolling baseline of destination ASNs and countries from Zeek conn.log. For each new connection, calculate the frequency of the destination ASN and country within the baseline. Alert if the frequency of either the ASN or country is below the 5th percentile, indicating it is rarer than 95% of historical destinations.",
              "Train a one-class SVM or isolation forest model on historical Zeek conn.log data from Linux servers to learn a profile of normal outbound connections. Use features such as `proto`, `resp_p` (destination port), `orig_bytes`, `resp_bytes`, `duration`, and the destination ASN. Run new connections through the model and alert on any connection flagged as an anomaly."
            ]
          },
          {
            "description": "A process execution event on a Linux host where the command line contains keywords and file paths associated with reading, copying, or manipulating '/etc/passwd' or '/etc/shadow'.",
            "data_sources": [
              "AuditD logs",
              "Sysmon for Linux Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The local file systems and process tables of critical Linux servers, including domain controllers, database servers, and servers in a DMZ.",
            "action": [
              "Create a detection rule that searches process execution logs (e.g., Sysmon for Linux Event ID 1) for command lines matching regular expressions such as `/(cat|cp|less|more|head|tail|grep|awk|sed|cut)\\s+.*\\/etc\\/shadow/`, `/unshadow\\s+\\/etc\\/passwd\\s+\\/etc\\/shadow/`, or `/scp.*\\/etc\\/shadow.*@/`.",
              "For all process execution events involving `/etc/passwd` or `/etc/shadow`, calculate the Shannon entropy of the full command line. Establish a baseline entropy score for legitimate administrative commands. Alert when a command's entropy exceeds the 95th percentile of the baseline, indicating potential obfuscation. Additionally, baseline the parent-child process relationships for processes accessing these files (e.g., `sshd` -> `bash` -> `cat`) and alert on any new or rare parent-child combination.",
              "Train a sequence-to-sequence autoencoder (e.g., using LSTMs) on historical command-line sequences per user and per host. The model learns to reconstruct normal sequences. Alert when the reconstruction error for a new sequence of commands involving `/etc/passwd` or `/etc/shadow` exceeds a predefined threshold, indicating a deviation from learned behavior."
            ]
          },
          {
            "description": "The content of an outbound network flow or file transfer contains data matching the specific format and structure of '/etc/passwd' or '/etc/shadow' entries.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points instrumented with Deep Packet Inspection (DPI) or content-aware Network Data Loss Prevention (NDLP) systems.",
            "action": [
              "Implement and monitor network IDS rules (e.g., Suricata, Zeek scripts) that use regular expressions to match the distinct structures of `/etc/passwd` entries (`^[a-zA-Z0-9_-]+:x:[0-9]+:[0-9]+:.*:.*:.*$`) and `/etc/shadow` entries (`^[a-zA-Z0-9_-]+:\\$[1256y][a-z]?\\$.*`) within TCP streams or reassembled files.",
              "Analyze Zeek `files.log` for outbound transfers from Linux servers. Establish a baseline of file MIME types, filenames, and sizes. Alert on files with a `text/plain` MIME type, a size between 1KB and 100KB, and a filename that does not match common patterns (e.g., not ending in `.log`, `.txt`, `.csv`), as this combination is statistically rare and consistent with credential file exfiltration.",
              "Train a supervised text classification model (e.g., Naive Bayes or a simple CNN) on a labeled dataset of legitimate text files and known credential file formats. Use character-level n-grams and the frequency of special characters (`:`, `$`) as features. Deploy the model to classify the content of outbound plain text files and alert on those classified as `/etc/passwd` or `/etc/shadow` with high confidence."
            ]
          },
          {
            "description": "A file read or access event for '/etc/shadow' by a process or user not on a pre-defined allowlist, or a statistically significant spike in access frequency to '/etc/passwd' or '/etc/shadow'.",
            "data_sources": [
              "AuditD logs",
              "Sysmon for Linux Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs from all production Linux servers, particularly those hosting sensitive applications or data.",
            "action": [
              "Using file integrity monitoring or audit logs (e.g., AuditD), create a rule that generates a high-severity alert for any read access to `/etc/shadow` by any process not in the explicit allowlist (e.g., `login`, `sshd`, `passwd`, `chage`, `useradd`, approved backup scripts). The user context should also be validated (e.g., only root or privileged accounts).",
              "For each Linux host, ingest file access logs into a time-series database. Establish a baseline of access counts per hour for both `/etc/passwd` and `/etc/shadow`. Alert when the access count in any given hour exceeds a dynamic threshold, such as the 99th percentile of the historical 30-day distribution for that hour of the day.",
              "Apply a clustering algorithm (e.g., DBSCAN) to historical file access events for `/etc/passwd` and `/etc/shadow`. Use features such as `process_name`, `parent_process_name`, `user_id`, `hour_of_day`, and `day_of_week`. After defining normal clusters, classify any new access event that does not fit into a known legitimate cluster (e.g., 'user login', 'cron job') as an outlier and generate an alert."
            ]
          },
          {
            "description": "A file read event for '/etc/shadow' by an anomalous process is followed within a 5-minute window by an outbound network connection from the same host to a rare destination.",
            "data_sources": [
              "AuditD logs",
              "Sysmon for Linux Event ID 11",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "A centralized security data lake or SIEM platform where host-based audit logs (AuditD, Sysmon) and network flow logs (Zeek) are aggregated and can be correlated by timestamp and host identifier.",
            "action": [
              "Create a SIEM correlation rule that triggers on an alert for anomalous `/etc/shadow` access. The rule should then search for any `Zeek conn.log` record from the same source IP within the next 5 minutes where the destination IP is on a CTI blocklist OR the destination port is not a standard, allowlisted port for that server (e.g., not 80, 443, 22).",
              "Upon an alert for anomalous `/etc/shadow` access, automatically query for all outbound network connections from the source host in the following 10 minutes. For each connection, calculate a composite risk score based on the statistical rarity (e.g., percentile rank < 5%) of the destination ASN, country, and port, plus the size of the data sent (e.g., 1KB-100KB). Escalate if the composite score exceeds a defined threshold.",
              "Develop a graph-based model where nodes are hosts, processes, files, and remote IPs. Edges represent interactions (e.g., process accesses file, process creates network connection), weighted by time. Train the model on normal activity to learn common subgraphs. Alert when a subgraph appears that includes a `(/etc/shadow)` -> `(anomalous process)` -> `(external IP)` sequence and is structurally different from known benign subgraphs."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]