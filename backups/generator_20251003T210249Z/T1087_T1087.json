[
  {
    "information_requirement": "Is the adversary attempting to discover local or domain accounts on the network or in the cloud? (PIR)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1087",
        "name": "Account Discovery",
        "evidence": [
          {
            "description": "Execution of a known malicious account discovery utility (e.g., AdFind, SharpHound), identified by its file hash or original filename in process creation logs.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Privileged Access Workstations",
            "action": [
              "Symbolic: Using a SIEM, create a rule that cross-references the `ProcessHash-SHA256` and `OriginalFileName` fields from process creation events (Windows Event ID 4688) against a curated threat intelligence list of known account discovery tool hashes and names. Trigger a high-severity alert on any match.",
              "Statistical: For each host, profile the prevalence of every `OriginalFileName` from process creation events (Windows Event ID 4688) over a 30-day period. Create an allow-list of common enterprise applications. Trigger an alert for any process execution where the `OriginalFileName` is not on the allow-list and has a historical prevalence of less than 0.01% across all endpoints, indicating a rare or custom-named tool.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) using labeled process creation events. Features should include: command-line argument entropy, parent process name, user context (system, admin, user), process filename rarity score (from statistical method), and binary signature information. Deploy the model to score new process events in real-time, alerting on those classified with high probability as malicious discovery activity."
            ]
          },
          {
            "description": "Execution of a command-line interpreter (e.g., cmd.exe, powershell.exe, pwsh.exe) with arguments and parameters specifically used to enumerate local, domain, or cloud users and groups (e.g., `net user /domain`, `Get-ADUser -Filter *`, `az ad user list`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, Domain Controllers, Application Servers, Cloud Tenant Environments",
            "action": [
              "Symbolic: Deploy detection rules that use regular expressions on command-line arguments in Windows Event ID 4688. Create patterns to match commands such as `net user`, `net group`, `net localgroup`, `query user`, `dsquery *`, `Get-ADUser`, `Get-ADGroup`, `Get-LocalGroupMember`, `Find-LocalAdminAccess`, `Get-MgUser` (Microsoft Graph), and `az ad user list` (Azure CLI). Escalate alert severity if the command is initiated by a non-administrative user, a system account on a non-DC, or from an unusual parent process (e.g., a web server process).",
              "Statistical: For each user and host pair, establish a 30-day baseline of the frequency and type of enumeration commands executed. Calculate the mean and standard deviation of these commands per hour. Trigger an alert if a user on a host executes a number of enumeration commands that exceeds 3 standard deviations from their historical average, or if a typically non-interactive process (e.g., `w3wp.exe`) spawns a process that executes any enumeration command.",
              "Machine Learning: Apply an unsupervised learning model, such as an Isolation Forest, to vectorized command-line strings from process creation events. Vectorize commands using techniques like TF-IDF on tokenized arguments. Investigate commands that are flagged as outliers or belong to very small clusters, as these represent rare or obfuscated command patterns that may evade signature-based rules."
            ]
          },
          {
            "description": "An administrative or command-line utility (e.g., cmd.exe, powershell.exe) is spawned by a parent process not typically associated with such activity, such as a Microsoft Office application, web browser, or web server process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Servers, Microsoft Exchange Servers, Virtual Desktop Infrastructure (VDI)",
            "action": [
              "Symbolic: Create a high-severity alert that triggers when a process from a defined list of 'unlikely parents' (e.g., `WINWORD.EXE`, `EXCEL.EXE`, `OUTLOOK.EXE`, `POWERPNT.EXE`, `chrome.exe`, `firefox.exe`, `msedge.exe`, `w3wp.exe`, `httpd.exe`, `tomcat.exe`) is the parent of `cmd.exe`, `powershell.exe`, `pwsh.exe`, `wscript.exe`, or `cscript.exe` in a Windows Event ID 4688 event.",
              "Statistical: From Windows Event ID 4688 logs, build a directed graph of all parent-child process relationships observed enterprise-wide over a 30-day period. Calculate the conditional probability P(child|parent) for each observed pair. Trigger an alert for any new process creation event where the observed parent-child relationship has a calculated probability below a dynamic threshold (e.g., < 0.001%) and is not on a pre-approved list of rare-but-legitimate software installation chains.",
              "Machine Learning: Model the sequence of processes spawned by a user within a login session as a time series. Train a sequence-based anomaly detection model, such as an LSTM Autoencoder, on 'normal' user process sequences. Flag user sessions where the model's reconstruction error for the observed process sequence is high, indicating a deviation from normal behavior, such as an `OUTLOOK.EXE -> powershell.exe -> net.exe` chain."
            ]
          },
          {
            "description": "A client host initiates an anomalously high volume or variety of directory service queries (e.g., LDAP, SAMR, Kerberos) to a domain controller, inconsistent with its established baseline or the baseline of its peer group.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ldap.log",
              "Zeek dce_rpc.log",
              "Zeek kerberos.log",
              "Windows Event ID 4662"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments fronting Domain Controllers, The Domain Controllers themselves",
            "action": [
              "Symbolic: From Zeek's `dce_rpc.log`, create a rule to alert when the `endpoint` is `samr` and the `operation` is `EnumDomainUsers` or `QueryDisplayInfo`. From `kerberos.log`, alert on an unusual number of TGS-REQ requests for non-existent SPNs (error code `KDC_ERR_S_PRINCIPAL_UNKNOWN`). Correlate these network events with Windows Event ID 4662 on the Domain Controller for `SAMR_USER` or `SAMR_GROUP` object access from the source host.",
              "Statistical: For each source IP in `Zeek ldap.log`, establish a 30-day baseline for the number of LDAP search requests per 10-minute window and calculate the 95th percentile. Trigger an alert if a source IP exceeds this threshold. Concurrently, calculate the Shannon entropy of the LDAP `filter` attribute for each source IP over the same window; a sudden spike in entropy indicates diverse, non-standard queries characteristic of enumeration and should also trigger an alert.",
              "Machine Learning: Group endpoint devices into peer groups using K-Means clustering based on network traffic features from `Zeek conn.log` (e.g., protocol mix, destination port distribution, data volume). For each host, apply a time-series anomaly detection model (e.g., Seasonal-ARIMA) to its LDAP/SAMR query volume directed at Domain Controllers. Flag hosts whose query behavior significantly deviates from the established forecast for its peer group, indicating it is behaving differently from its peers."
            ]
          },
          {
            "description": "An access event is recorded for a pre-defined canary object (honeytoken) such as a decoy user account or a file named to appear as an account list. Alternatively, a single process accesses an anomalously high number of distinct user-related objects (e.g., user profiles, home directories) in a short time.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 5145",
              "Windows Event ID 4720"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File Servers, SharePoint Sites, Network-accessible Script Repositories, Domain Controllers",
            "action": [
              "Symbolic: Enable auditing on decoy files (e.g., `passwords.xlsx`, `user_list.csv`) and decoy user accounts. Create a high-priority alert that triggers on any access attempt to the decoy files (Windows Event ID 4663/5145) or any activity related to the decoy user account (e.g., login attempt, group membership change). Additionally, alert on the creation of a user account matching a known pattern, such as a new user with a name like 'test_user' or 'admin_backup' (Windows Event ID 4720).",
              "Statistical: On file servers and workstations, baseline the number of unique user home directories or profile folders accessed by each user and process per hour, using Windows Event ID 4663/5145. Trigger an alert when a user or process accesses a number of unique directories that exceeds 3 standard deviations above its established hourly baseline, suggesting scripted enumeration of user data.",
              "Machine Learning: Train a One-Class SVM model on features of 'normal' file access patterns derived from Windows Event ID 4663/5145. Features should include: process name, user context, file path entropy, number of unique directories accessed in a 1-minute window, and time of day. Use the trained model to score and identify file access events that are outliers, flagging them as anomalous behavior potentially indicative of discovery or data staging."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]