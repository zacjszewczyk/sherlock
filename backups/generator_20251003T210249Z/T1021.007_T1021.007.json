[
  {
    "information_requirement": "Has an adversary leveraged federated or synchronized identities to pivot from an on-premises host to a cloud service, and subsequently used that access to move laterally to another on-premises system? (PIR)",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1021.007",
        "name": "Cloud Services",
        "evidence": [
          {
            "description": "A successful network authentication (Windows Event ID 4624, Logon Type 3) from an on-premises host IP, followed within 5 minutes by network connections (Zeek conn.log) from the same host to a known cloud service provider IP range.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS Servers, Network Egress Points, Endpoint devices",
            "action": [
              "Join successful network authentication events (Windows Event ID 4624, Logon Type 3) with network connection logs (Zeek conn.log) on the source IP address within a 5-minute time window. Alert if the authenticating IP address is on a watchlist of compromised hosts AND the destination IP in the Zeek log belongs to a known cloud service provider's IP range.",
              "For each user account, build a historical baseline of source IP addresses used for successful network authentications (Windows Event ID 4624, Logon Type 3) over the last 90 days. Calculate the frequency of each user-IP pair. If a successful authentication is observed from an IP address that accounts for less than the 1st percentile of that user's historical authentications, and is immediately followed by a connection to a cloud service IP (from Zeek conn.log), flag the event for review.",
              "Train a multi-class classifier (e.g., Random Forest) on features from authentication and network logs, including user, source IP geolocation (country, ASN), time of day, and destination cloud service. Label historical data as 'legitimate' or 'suspicious' based on past incident reports. Use the trained model to classify new, combined authentication-to-cloud-connection events in near-real-time, alerting on any event classified as 'suspicious' with a confidence score greater than 0.9."
            ]
          },
          {
            "description": "Process creation (Windows Event ID 4688) of a cloud CLI tool (e.g., az.exe, gcloud.cmd, aws.exe) with command-line arguments for remote execution, credential access, or resource modification, especially if spawned from a non-interactive parent process like a web server or scheduled task.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Management Servers, CI/CD Pipeline Servers, Developer Endpoints",
            "action": [
              "Implement a SIEM rule that triggers on Windows Event ID 4688 where the 'NewProcessName' is in a set of cloud CLIs ('aws.exe', 'az.exe', 'gcloud.cmd', 'Connect-AZAccount', 'Connect-MgGraph') AND the 'CommandLine' field contains keywords from a high-risk watchlist (e.g., 'run-command', 'get-session-token', 'compute ssh', 'Invoke-Command').",
              "For each distinct cloud CLI process name, compute a baseline distribution of command-line length and Shannon entropy from all executions over the past 30 days. For each new execution (Windows Event ID 4688), calculate the same metrics. Alert if either the command-line length or the entropy exceeds the 98th percentile of the historical baseline for that specific tool, indicating unusually long or complex commands.",
              "Develop a supervised classification model (e.g., Logistic Regression) trained on a labeled dataset of historical cloud CLI command lines from Windows Event ID 4688. Use TF-IDF vectors of the command-line arguments as features to predict a class like 'benign_admin', 'recon', or 'malicious_execution'. Deploy the model to score new commands and alert on those classified as 'malicious_execution'."
            ]
          },
          {
            "description": "An on-premises source IP generates a high volume of unique HTTP requests to cloud API endpoints (e.g., management.azure.com, *.amazonaws.com) within a 15-minute window, followed within 60 minutes by an outbound connection from the same IP to another internal host over a common lateral movement port (e.g., TCP/22, TCP/445, TCP/3389, TCP/5985, TCP/5986).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal network segments (East-West traffic), DNS servers",
            "action": [
              "Create a stateful rule that triggers if a single source IP generates more than 50 unique HTTP URIs to known cloud API hostnames (from Zeek http.log) in a 10-minute window. If this condition is met, place the source IP on a temporary watchlist for 1 hour. If any connection from the watchlisted IP is seen in Zeek conn.log to another internal IP on ports 22, 445, 3389, 5985, or 5986, generate a high-severity alert.",
              "For each internal source IP, establish a 30-day rolling baseline of the hourly count of unique cloud API URIs requested (from Zeek http.log). Use a moving average and standard deviation to model normal activity. Alert if the count in any given hour exceeds 3 standard deviations above the moving average for that host, indicating a burst of API enumeration.",
              "Apply a clustering algorithm like DBSCAN to 15-minute windows of Zeek http.log data, using features such as source IP, destination hostname, and HTTP User-Agent. Identify clusters labeled as 'noise' or outliers by the algorithm. For any source IP identified as an outlier, query Zeek conn.log for subsequent (within 60 minutes) connections to internal assets on lateral movement ports, and alert on any matches."
            ]
          },
          {
            "description": "A successful federated authentication (Windows Event ID 4624, Logon Type 3) for a user occurs from a new or rare on-premises source IP for that user. Within 30 minutes, an inbound connection (Zeek conn.log) is observed from a known cloud provider IP address to a different internal on-premises IP address.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS Servers, Bastion Hosts, Network Firewalls/Gateways",
            "action": [
              "Maintain a dynamic lookup table of (username, source_IP) pairs from the last 90 days of successful authentications (Windows Event ID 4624). For a new successful authentication, if the (username, source_IP) pair is not in the table, flag the session for 60 minutes. If, during that window, an inbound connection from a cloud provider IP range (from Zeek conn.log) is detected to an internal IP that is not the flagged source_IP, generate an alert.",
              "For each user, calculate the historical frequency of source IPs used for authentication (Windows Event ID 4624). When a new authentication occurs, score its rarity (e.g., score = 1 / frequency). If this authentication is followed within 30 minutes by an inbound connection from a cloud IP to a different internal host (Zeek conn.log), multiply the rarity score by a factor representing the sensitivity of the destination host. Alert if the final risk score exceeds a predefined threshold.",
              "Construct a heterogeneous graph with nodes for users, on-premises hosts, and cloud provider IP ranges. Create edges based on observed activity: (user)-[authenticates_from]->(host), (host)-[connects_to]->(cloud_IP), and (cloud_IP)-[connects_to]->(host). Use a graph-based anomaly detection algorithm to identify paths with a low probability score, indicating a deviation from normal 'cloud-to-on-prem' traffic patterns."
            ]
          },
          {
            "description": "A network security configuration change is made via a cloud management API that creates a new inbound rule allowing traffic from a risky source (e.g., 0.0.0.0/0) to a sensitive port (e.g., 22, 3389, 5985) on a cloud-hosted resource.",
            "data_sources": [
              "Cloud provider audit logs (e.g., AWS CloudTrail, Azure Activity Log)",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud audit log aggregation platform, Network Egress Points, Cloud Management Consoles/APIs, Virtual Private Cloud (VPC) Flow Logs",
            "action": [
              "Create a detection rule in the SIEM to parse cloud provider audit logs. Alert if an event (e.g., 'eventName': 'AuthorizeSecurityGroupIngress' or 'eventName': 'CreateFirewall') contains request parameters where 'CidrIp' or 'sourceRanges' is '0.0.0.0/0' AND 'toPort' or 'allowed.ports' is in a list of sensitive ports (22, 3389, 5985, 5986).",
              "From cloud audit logs, for each user or service principal, establish a 90-day baseline of the frequency and type of network security group modifications. Alert if a user performs a number of modifications in a 24-hour period that exceeds the 99th percentile of their individual baseline, or if they perform a modification type they have never performed before.",
              "Train an anomaly detection model (e.g., Isolation Forest) on historical cloud audit log events for network configuration changes. Use features such as: user identity, source IP ASN, time of day, and parsed parameters of the change (source CIDR, destination port, protocol). Score all new configuration changes in real-time and alert on any event flagged as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]