[
  {
    "information_requirement": "Is the adversary establishing persistence by adding cloud credentials?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1098.001",
        "name": "Additional Cloud Credentials",
        "evidence": [
          {
            "description": "A cloud credential modification event (e.g., AWS `CreateAccessKey`, Azure `updateApplication`, GCP `google.iam.admin.v1.IAM.CreateServiceAccountKey`) is observed where the `sourceIPAddress` is present in a threat intelligence feed of known malicious IPs, anonymizing proxies, or TOR exit nodes.",
            "data_sources": [
              "AWS CloudTrail",
              "AzureAD Audit Logs",
              "Google Cloud Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service Endpoints, Internet Gateway, Threat Intelligence Platform, Cloud audit log aggregation platform",
            "action": [
              "Join cloud audit logs on `sourceIPAddress` with threat intelligence data. Alert where `sourceIPAddress` from a credential modification event (e.g., `CreateAccessKey`, `updateApplication`) matches an IP in the malicious, proxy, or TOR feed.",
              "For each user, maintain a historical profile of source ASNs used for credential modifications. For each new modification, calculate the Shannon entropy of the user's ASN set including the new ASN. Alert if the entropy score exceeds the 95th percentile of that user's historical entropy scores or if the ASN has never been seen for that user.",
              "Develop a multivariate time-series forecasting model (e.g., VAR or LSTM) for each high-privilege user, modeling the frequency of credential modifications, source country, and time-of-day. An event that causes a significant forecast error (high residual) across multiple features should be flagged as an anomaly."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) for a cloud CLI tool (`aws.exe`, `az.exe`, `gcloud.exe`) or a script host (`powershell.exe`, `pwsh.exe`) containing credential modification commands is observed, where the parent process is anomalous (e.g., `winword.exe`) or the executing user/host is not authorized for cloud administration.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "AWS CloudTrail",
              "AzureAD Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrative Workstations, Cloud-connected Application Servers, Endpoint Detection and Response (EDR) platform",
            "action": [
              "Create a SIEM rule to alert when Windows Event ID 4688 shows the creation of `aws.exe`, `az.exe`, or `gcloud.exe` and the `CreatorSubjectUserName` is not in the 'Cloud Admins' group OR the `Computer` name is not in the 'Admin Workstations' asset group.",
              "For each host, profile the parent-child process relationships (e.g., `explorer.exe -> cmd.exe -> az.exe`). Calculate the frequency of each observed chain. Alert on any process chain involving a cloud CLI tool that occurs less frequently than the 1st percentile for that host or for the entire organization.",
              "Train a Random Forest classifier on labeled process execution data (Windows Event ID 4688 and 4104). Use features such as parent process name, command line argument length and entropy, user context, and host name. Apply the model to new CLI executions; a 'malicious' classification with a high confidence score triggers an alert."
            ]
          },
          {
            "description": "A user or service principal performs a credential modification action (e.g., `Add-AzADAppCredential`, `Update-MgApplication`) that is anomalous in context, such as occurring outside of the actor's typical working hours or targeting a type of principal they do not normally manage.",
            "data_sources": [
              "AWS CloudTrail",
              "AzureAD Audit Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Identity Provider (IdP) Systems, Cloud Audit Log Aggregation Platform",
            "action": [
              "Define and maintain a list of service principals authorized for identity management (e.g., CI/CD pipelines). Alert when any credential modification API call is initiated by a service principal not on this list.",
              "For each administrative identity, create a historical distribution of event times for credential modifications. For each new event, check if the hour-of-day falls outside the 5th-95th percentile of that identity's historical activity. If so, generate a medium-severity alert.",
              "Apply a DBSCAN clustering algorithm to credential modification events using features like: source ASN, time-of-day (as a cyclical feature), actor's role, and target principal's role. Events that are marked as noise points by the algorithm represent significant deviations from established activity clusters and should be investigated."
            ]
          },
          {
            "description": "Following a credential creation event (e.g., `CreateAccessKey`), the first authentication event using the new credential (e.g., `GetCallerIdentity`) originates from a geographic location that is physically impossible to travel to in the elapsed time, or is statistically anomalous for the associated user/role.",
            "data_sources": [
              "AWS CloudTrail",
              "AzureAD SignIn Logs",
              "Google Cloud Audit Logs (data_access)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators, Cloud Authentication Endpoints, Internet Gateway, Geolocation IP Database",
            "action": [
              "For each credential creation event, log the timestamp and source IP. Upon first use of that credential, calculate the great-circle distance between the creation IP's geolocation and the usage IP's geolocation. Divide by the time delta. Alert if the resulting speed exceeds 800 km/h.",
              "For each identity, maintain a frequency distribution of login source countries over the past 180 days. When a new credential is used for the first time, if the source country is not in the identity's historical profile, flag the event. Additionally, if the country's login frequency across the entire organization is below the 1st percentile, elevate the alert severity.",
              "For each user, train a One-Class SVM model on historical login data, using features like source country, ASN, user agent, and time-of-day. After a new credential is created, feed the first login event's features into the model. If the model classifies the login as an outlier, it indicates a significant deviation from the user's established behavioral pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges by adding cloud credentials with elevated permissions?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1098.001",
        "name": "Additional Cloud Credentials",
        "evidence": [
          {
            "description": "A temporal sequence of API calls is observed that matches a known privilege escalation path, such as creating a new policy version (`CreatePolicyVersion`), setting it as the default (`SetDefaultPolicyVersion`), and then adding credentials to a principal governed by that policy.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Cloud Audit Log Aggregation Platform",
            "action": [
              "Implement a complex event processing rule that triggers when, for the same user session: 1) `CreatePolicyVersion` is called, followed by 2) `SetDefaultPolicyVersion`, followed by 3) `CreateAccessKey` or `UpdateApplication` on a principal associated with that policy within a 10-minute window.",
              "Calculate the probability of API call sequences (n-grams, where n=3) within a 5-minute session window. Alert on the occurrence of a sequence involving a credential modification call that has a probability below the 1st percentile of all observed sequences.",
              "Train an LSTM autoencoder on sequences of API calls from benign user sessions. For each new session, feed the sequence of API calls into the model and calculate the reconstruction error. A high reconstruction error for a sequence involving credential modification indicates a deviation from normal patterns and should be alerted on."
            ]
          },
          {
            "description": "A credential modification event is recorded where the assigned role-based access control (RBAC) privileges of the acting principal are lower than the privileges of the target principal to which credentials are being added. This is a direct privilege escalation event.",
            "data_sources": [
              "AWS CloudTrail",
              "AzureAD Audit Logs",
              "Google Cloud Audit Logs",
              "Identity Governance and Administration (IGA) Platform Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Identity Governance and Administration (IGA) Platform",
            "action": [
              "Maintain a numerical hierarchy of all IAM/RBAC roles (e.g., Global Admin=10, Contributor=5, Reader=1). For every credential modification event, look up the actor's role score and the target's role score. Alert if `actor_score < target_score`.",
              "For all historical credential modification events, calculate the difference in privilege level (using the hierarchy from the symbolic rule) between actor and target. The mean should be zero or negative. Alert on any new event where the difference is a positive value that is more than 3 standard deviations above the historical mean.",
              "Model the IAM environment as a directed graph where nodes are principals and edges represent permissions. Train a Graph Neural Network (GNN) to learn normal structural patterns. A credential modification event that creates a new edge (e.g., a low-privilege user gaining control over a high-privilege service principal) that the GNN flags as a structural anomaly should be alerted."
            ]
          },
          {
            "description": "Within a short time window (e.g., 60 minutes) after new credentials are added to a privileged identity, that identity is used to perform a high-impact action (e.g., `Update-MgAuditLogConfiguration`, `DeleteBucketPolicy`) or an action never before performed by that identity.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Logs",
              "Google Cloud Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Sensitive Data Repositories (e.g., S3 Buckets, Databases), Cloud Administration Endpoints",
            "action": [
              "Maintain a list of high-impact API calls (e.g., disabling audit logs, deleting backups). Create a rule that triggers if an identity performs an action from this list within 60 minutes of having new credentials added to it.",
              "For each privileged identity, calculate the baseline hourly rate of sensitive API calls. After a credential modification for that identity, if the number of sensitive API calls in the following hour exceeds the 99th percentile of its historical hourly rate, generate an alert.",
              "For each privileged identity, maintain a historical set of unique (action, target_resource_type) tuples. Following a credential modification, if the identity performs an action on a resource type it has never touched before (e.g., a database admin suddenly modifying IAM policies), classify this as a high-risk anomaly and alert."
            ]
          },
          {
            "description": "An audit event shows a credential modification action (e.g., `CreateAccessKey`) being performed by a temporary identity (e.g., AWS AssumedRole, Azure federated identity) on a permanent, cloud-native IAM user or service principal.",
            "data_sources": [
              "AWS CloudTrail",
              "AzureAD Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity Federation Service (e.g., ADFS), Cloud STS Endpoints, Cloud IAM Service",
            "action": [
              "Create a high-severity alert for any event where `userIdentity.type` is `AssumedRole` or `FederatedUser` (in AWS) or the identity is from an external IdP (in Azure) and the performed action is a credential modification on a permanent, cloud-native IAM user or service principal.",
              "Calculate a baseline ratio of (credential modification events / total events) for all permanent identities. Calculate this same ratio for all temporary/federated identities. If the ratio for temporary identities is statistically significantly higher (e.g., using a Z-test, p-value < 0.01) than for permanent identities, it indicates a systemic pattern of abuse.",
              "Train a logistic regression model to predict the probability of a session performing a credential modification. Features should include: `session_type` (temporary/federated vs. permanent), `source_ASN`, `user_agent_type`, and `session_duration`. Alert on any temporary session that performs a credential modification and has a predicted probability score in the top 5%."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]