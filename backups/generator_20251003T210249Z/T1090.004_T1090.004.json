[
  {
    "information_requirement": "Is the adversary communicating with command and control infrastructure using domain fronting? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1090.004",
        "name": "Domain Fronting",
        "evidence": [
          {
            "description": "A network connection exhibits a mismatch between the TLS Server Name Indication (SNI) and the inner HTTP Host header, where the inner HTTP Host header domain or the destination IP address matches a known malicious indicator from a high-fidelity threat intelligence feed.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., internet gateways, forward proxies) and security infrastructure (e.g., SIEM, TIP).",
            "action": [
              "Symbolic: Join Zeek ssl.log and http.log records by the connection UID. Filter for all sessions where ssl.log.server_name does not equal http.log.host. From this subset, join with conn.log on the UID. Extract the http.log.host and conn.log.id.resp_h values and match them against a threat intelligence feed of malicious domains and IP addresses. Generate an alert for any match.",
              "Statistical: From the set of all SNI/Host mismatches, calculate the historical prevalence of each destination IP (id.resp_h) and inner Host domain (http.log.host) across the enterprise over a 30-day baseline. Flag any SNI/Host mismatch pair where the destination IP or inner Host domain falls below the 5th percentile of prevalence, indicating it is unusually rare for the organization's traffic patterns.",
              "Machine Learning: Develop and apply a supervised classification model (e.g., Random Forest, Gradient Boosting) trained on labeled historical data of both benign (e.g., legitimate CDN behavior) and malicious (e.g., from past incidents or threat feeds) SNI/Host mismatches. Use features such as destination IP reputation, domain age and registration details of the inner host, ASN information, and the TLS fingerprint (JA3). Apply the model in near real-time to classify new mismatch events and alert on those with a high probability of being malicious."
            ]
          },
          {
            "description": "A source host generates a volume of TLS SNI/HTTP Host header mismatches or connections with a blank SNI that exceeds its own historical baseline by a statistically significant margin, or deviates from the behavior of its peers.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., internet gateways, forward proxies) and internal network segments.",
            "action": [
              "Symbolic: Create and maintain an allowlist of known-good (SNI, Host) header pairs and legitimate blank-SNI applications derived from established enterprise traffic. Correlate Zeek ssl.log and http.log by UID. Alert on any connection where ssl.log.server_name is not equal to http.log.host OR (ssl.log.server_name is null AND http.log.host is not null), and the specific (SNI, Host) pair is not present on the established allowlist.",
              "Statistical: For each internal source host (id.orig_h), calculate the hourly ratio of mismatched SNI/Host connections to its total TLS connections. Establish a 7-day rolling average and standard deviation for this ratio per host. Alert when a host's hourly ratio exceeds 3 standard deviations above its rolling average, indicating a sudden and significant change in its connection behavior.",
              "Machine Learning: Use an unsupervised anomaly detection model (e.g., Isolation Forest) on connection metadata for all SNI/Host mismatches. Features should include source IP, destination IP, destination port, total bytes transferred (orig_bytes + resp_bytes), connection duration, and the specific SNI/Host values. The model will learn normal patterns of benign mismatches and flag connections that are strong outliers, which represent previously unseen or highly unusual mismatch activity."
            ]
          },
          {
            "description": "Connections to known CDN IP address ranges exhibit C2-like behavior, such as periodic fixed-interval callbacks (beaconing), anomalously large or small data transfer sizes compared to peers, or the use of a rare or known-malicious JA3/JA3S TLS fingerprint.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points, cloud service access points, and endpoint devices.",
            "action": [
              "Symbolic: Filter Zeek ssl.log for connections where the destination IP is within known CDN IP ranges. Extract the JA3 and JA3S hashes for each connection. Match these hashes against a threat intelligence feed of JA3/JA3S hashes associated with known malware families (e.g., Cobalt Strike, Metasploit). Alert on any match.",
              "Statistical: For connections to CDNs, group by source host (id.orig_h) and destination SNI (server_name). For each group, calculate the time delta between consecutive connections. Calculate the standard deviation of these time deltas; a value near zero (e.g., less than 1 second) indicates highly regular, machine-generated beaconing. Separately, calculate the 95th percentile for data volume (orig_bytes + resp_bytes in conn.log) for each user-to-CDN service and flag sessions exceeding this threshold as potential data exfiltration.",
              "Machine Learning: For each source host, create a time series of connection counts to CDN domains. Apply a time series decomposition or forecasting model (e.g., SARIMA) to identify significant periodic components (seasonality) that align with non-business cycles (e.g., a heartbeat every 60 seconds). Anomaly detection on the residual component of the time series can also flag unexpected spikes in communication that are not explained by normal user behavior."
            ]
          },
          {
            "description": "An internal source host exhibits a high-entropy or high-cardinality fan-out of distinct inner HTTP Host headers behind a single outer TLS SNI domain, where the count of unique inner domains significantly exceeds the norm for other hosts using the same SNI.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments and egress points.",
            "action": [
              "Symbolic: Identify sessions with SNI/Host mismatches. For each source IP (id.orig_h) and outer SNI (server_name) pair, count the number of unique inner HTTP Host values (http.log.host). If a single source IP communicates with more than a set threshold of unique inner hosts (e.g., 50) via a single SNI within a 24-hour period, flag the source IP for review.",
              "Statistical: For each source IP and fronted SNI pair, calculate the Shannon entropy of the set of associated inner HTTP Host names over a 1-hour window. Establish a baseline entropy level for legitimate CDN traffic across the enterprise. Alert when a source IP's entropy for a given SNI exceeds the 99th percentile of the established baseline, indicating an abnormally diverse set of destinations.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on source hosts based on their domain fronting activity. Features should include: total count of SNI/Host mismatches, number of unique SNIs used in mismatches, number of unique Hosts found in mismatches, and the average entropy of inner hosts per SNI. The algorithm will group 'normal' hosts together; outlier hosts that do not belong to a cluster can be flagged as anomalous and potentially engaged in domain fronting."
            ]
          },
          {
            "description": "A process identified as the source of a network connection exhibiting domain fronting characteristics is found to be a non-standard browser, an unsigned executable, or is executing from an unusual file path (e.g., a user's downloads folder or temporary directory).",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek conn.log",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations, servers) and log aggregation platforms (e.g., SIEM).",
            "action": [
              "Symbolic: Upon detecting a suspicious connection via SNI/Host mismatch in Zeek logs, correlate the connection's 4-tuple (src_ip, src_port, dst_ip, dst_port) with Sysmon Event ID 3 (Network Connection) to identify the source ProcessId and Image path. Alert if the Image path is not on an allowlist of known web browsers and legitimate updaters (e.g., chrome.exe, firefox.exe, svchost.exe, teams.exe).",
              "Statistical: Correlate a network-level domain fronting alert with host data from Sysmon Event ID 1 and 3. For the identified source process, assign a risk score: +1 for being an unsigned binary, +1 for executing from a temporary or user-writable directory (e.g., AppData, Temp), +1 for having an unusual parent process (e.g., winword.exe launching powershell.exe). Alert if the cumulative risk score exceeds a predefined threshold (e.g., greater than 2).",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) to determine if a process initiating a network connection is benign or malicious. Use features from Sysmon Event ID 1 such as process name, parent process name, command line entropy, and binary signature status. After a network-level domain fronting alert is triggered, use this model to classify the source process on the endpoint. A 'malicious' classification would automatically escalate the alert's priority for immediate investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]