[
  {
    "information_requirement": "Is the adversary maintaining persistence by adding roles to a compromised cloud account? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1098.003",
        "name": "Additional Cloud Roles",
        "evidence": [
          {
            "description": "A cloud audit log event for an IAM policy modification (e.g., AWS CreatePolicyVersion) shows a source IP address or User-Agent string that is either on a threat intelligence feed or is statistically anomalous for the actor making the change.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Google Cloud Audit Log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM API endpoints; Network egress points and VPN gateways; Threat intelligence platform feeds.",
            "action": [
              "Symbolic: Continuously ingest threat intelligence feeds for malicious IPs and user agents. Create a real-time SIEM rule to alert when an IAM modification event's `sourceIPAddress` or `userAgent` field matches an entry in the feed.",
              "Statistical: For each administrative user, create a baseline of source Autonomous System Numbers (ASNs) and User-Agent strings from the last 90 days of Zeek conn.log and cloud trail logs. Calculate the frequency of each. Alert when an IAM modification event originates from an ASN or User-Agent in the bottom 5th percentile of frequency for that specific user.",
              "Machine Learning: Train a Random Forest classifier on labeled historical IAM modification events. Use features such as source IP geolocation (country, city), ASN, user identity, User-Agent, and time-of-day (converted to sine/cosine waves). Deploy the model to score each new modification event; alert on any event classified as 'malicious' with a probability score over 0.85."
            ]
          },
          {
            "description": "A cloud audit log event (e.g., AWS AttachUserPolicy) shows a policy being attached to a principal (user, group, or role) that contains permissions allowing the principal to modify its own IAM permissions (e.g., iam:CreatePolicyVersion, iam:SetDefaultPolicyVersion).",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Google Cloud Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; Cloud Security Posture Management (CSPM) tool data repository.",
            "action": [
              "Symbolic: Maintain a list of self-modification permissions (e.g., 'iam:CreatePolicyVersion', 'iam:AttachUserPolicy', 'iam:PutUserPolicy'). Create a SIEM rule to alert when an Attach*Policy or Put*Policy event's request parameters show one of these permissions being granted.",
              "Statistical: For all existing IAM policies, calculate a 'permission entropy' score based on the variety and power of the actions allowed. Establish a baseline distribution of these scores. Alert when a newly attached policy has an entropy score that exceeds the 98th percentile of the baseline, indicating an unusually broad and powerful policy.",
              "Machine Learning: Model the IAM environment as a directed graph where principals and policies are nodes and attachments are edges. Use a graph traversal algorithm (e.g., a modified Depth First Search) to detect if a new policy attachment creates a path from a principal back to itself, allowing self-modification. Alert whenever such a cycle is created."
            ]
          },
          {
            "description": "A high-privilege IAM role is assigned to an account that is either newly created, has been dormant for an extended period, or is an external account not part of an approved federation.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; Identity Provider (IdP) authentication logs; Domain Controller security logs.",
            "action": [
              "Symbolic: Create a SIEM rule that triggers when a role from a predefined list of high-privilege roles is assigned to an account where the 'createDate' is less than 72 hours ago, or to an account principal whose domain is not on an allowlist of federated domains.",
              "Statistical: For all accounts, query authentication logs (e.g., Windows Event ID 4624, IdP logs) to establish the timestamp of last activity. Define 'dormant' as any account with no successful login for over 90 days. Alert if a role assignment event targets an account currently flagged as dormant.",
              "Machine Learning: Use a time-series forecasting model (e.g., ARIMA) on individual user activity logs to predict expected login patterns. Generate an alert when a high-privilege role is assigned to an account whose recent activity is a significant negative outlier compared to its forecast, indicating a state of dormancy."
            ]
          },
          {
            "description": "An administrative account executes a statistically significant higher number of role or policy modification API calls within a short time window or during non-business hours.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; Administrator workstations; VPN and remote access gateways.",
            "action": [
              "Symbolic: Implement a simple threshold rule to alert if any single user principal performs more than 10 IAM modification API calls (e.g., Create*, Attach*, Put*, Detach*) within a 60-minute window.",
              "Statistical: For each administrator, establish an hourly baseline of IAM modification activity counts over the last 90 days. Use this to calculate a mean and standard deviation for each hour of the day. Alert when an administrator's activity in a given hour exceeds 3 standard deviations above their individual mean for that specific hour.",
              "Machine Learning: Use a time-series decomposition model (e.g., STL) to establish a baseline of activity for each user, accounting for trends and seasonality (e.g., time of day, day of week). Alert when a burst of activity is detected as an anomaly that cannot be explained by the seasonal or trend components of the model."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has the adversary escalated privileges by assigning powerful roles to a controlled account? (PIR)",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1098.003",
        "name": "Additional Cloud Roles",
        "evidence": [
          {
            "description": "A cloud audit log for an IAM role or policy creation event contains a name or description that is an exact or fuzzy match to a known malicious tool or actor-related term.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Google Cloud Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; Threat intelligence platform feeds.",
            "action": [
              "Symbolic: Scan the 'roleName' and 'policyName' parameters of all IAM creation events against a threat intelligence watchlist of known-bad names (e.g., 'backdoor_policy', 'AWSUpdate', 'mimikittenz'). Alert on any exact match.",
              "Statistical: For each new role or policy name, calculate the Levenshtein distance to all names on the threat intelligence watchlist. Alert if the normalized distance (distance divided by length of the longer string) is below a threshold (e.g., < 0.2), indicating a close misspelling or variation.",
              "Machine Learning: Train a Naive Bayes or other NLP text classifier on thousands of known-good (e.g., from company documentation) and known-bad (from public threat reports) role and policy names. Use the model to classify each new name as 'benign,' 'suspicious,' or 'malicious' and alert on the latter two classifications."
            ]
          },
          {
            "description": "An account is granted a specific set of permissions that, in combination, are known to enable a privilege escalation path within the cloud environment.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Google Cloud Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; Cloud Security Posture Management (CSPM) tools.",
            "action": [
              "Symbolic: Codify known privilege escalation paths (e.g., in AWS, the combination of 'iam:PassRole' and 'ec2:RunInstances' on the same principal) into SIEM rules. The rule should trigger when a policy modification results in a single principal possessing all permissions required to complete a known path.",
              "Statistical: Assign a risk score to each individual IAM permission based on its potential for impact. Calculate a cumulative risk score for a principal's effective permissions after any change. Alert if a policy modification causes the principal's risk score to jump into the 99th percentile of all principals in the environment.",
              "Machine Learning: Periodically use a graph-based analysis tool (e.g., Pacu, Cloudsplaining) to model the IAM environment as a graph. Train a Graph Neural Network (GNN) to recognize the sub-graph structures of known escalation paths. Alert when a policy change creates a new instance of a sub-graph that the model classifies as a high-risk escalation path."
            ]
          },
          {
            "description": "An account not designated as an administrator is granted IAM write permissions, allowing it to modify access control configurations.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "Google Cloud Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; User and group definitions in Identity Provider (IdP).",
            "action": [
              "Symbolic: Maintain a list of non-administrative users and groups. Create a SIEM rule to alert any time a permission containing 'iam:*', 'iam:Put*', 'iam:Attach*', 'iam:Detach*', or 'Microsoft.Authorization/*/write' is granted to a principal on this non-admin list.",
              "Statistical: For each job role (e.g., 'Developer', 'DataAnalyst'), create a baseline set of common permissions from existing users. When a new permission is granted to a user, calculate the Jaccard similarity index between their new total permission set and their role's baseline set. Alert if the similarity score is anomalously low (e.g., below 0.5), indicating a significant deviation from role norms.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) to group users based on their permission sets represented as vectors. An alert is triggered if a permission grant causes a user to move from a large, well-defined cluster (e.g., 'developers') to a small, high-privilege cluster or to be classified as a noise point (outlier)."
            ]
          },
          {
            "description": "An account, within minutes of receiving new permissions, successfully executes high-impact API calls that were previously generating 'AccessDenied' errors for that same account.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Log",
              "AWS S3 access logs",
              "Google Cloud Storage logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM service endpoints; Cloud storage services (S3, GCS); Cloud compute and container services.",
            "action": [
              "Symbolic: Create a two-stage correlated SIEM rule. Stage 1 triggers and holds state upon any IAM policy modification event for a specific principal. Stage 2 triggers an alert if, within 15 minutes, the same principal successfully executes a high-impact API call (from a watchlist, e.g., 's3:GetObject', 'iam:CreateAccessKey') that had failed with an 'AccessDenied' error for that principal within the last 24 hours.",
              "Statistical: For each principal, monitor the rate of 'AccessDenied' errors over a sliding window. Alert if an IAM policy modification event is immediately followed by a statistically significant drop (e.g., > 3 standard deviations below the mean) in the 'AccessDenied' rate and a corresponding spike in successful, sensitive API calls.",
              "Machine Learning: Use a sequence-to-sequence model (e.g., LSTM autoencoder) to learn normal sequences of API calls for each user or role. Feed real-time API call sequences into the model. An alert is generated if a policy modification is followed by a sequence of calls that results in a high reconstruction error, indicating the model considers this new behavior anomalous and uncharacteristic for the user."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]