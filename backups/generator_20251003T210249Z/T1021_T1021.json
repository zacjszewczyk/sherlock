[
  {
    "information_requirement": "Is the adversary moving laterally through the network using remote services?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1021",
        "name": "Remote Services",
        "evidence": [
          {
            "description": "A successful remote service connection (RDP, SSH, WinRM) originates from an internal IP address present on a watchlist of compromised or suspicious hosts.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication logs on Domain Controllers, Network traffic logs from core switches and perimeter firewalls, Security event logs on Tier 0/1 servers and Privileged Access Workstations (PAWs).",
            "action": [
              "Maintain a dynamic watchlist of internal IP addresses and hostnames associated with confirmed malicious activity. Continuously query for successful remote logins (Windows Event ID 4624 Logon Type 10) or remote service network connections (Zeek conn.log where id.resp_p is in {3389, 22, 5985, 5986}) where the source IP or hostname is on the watchlist. Generate a high-severity alert upon match.",
              "For each host on the watchlist, establish a 30-day statistical baseline (mean, standard deviation) of its hourly outbound remote service connection count. For each new connection from a watchlist host, recalculate the count for the past hour. Trigger an alert if the count exceeds the mean by more than 3 standard deviations, indicating a statistically significant spike in lateral movement attempts.",
              "Train a supervised classification model (e.g., Random Forest) on features from historical remote access events, labeling events originating from known-bad hosts as malicious. Features should include source/destination subnet, user account privileges, time of day, and protocol. Use the trained model to score new remote connections originating from watchlist hosts in real-time, alerting on events classified with high confidence as malicious."
            ]
          },
          {
            "description": "A process creation event for a known lateral movement tool or with a suspicious command line is observed on a host within 5 minutes of a successful remote service login to that host.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process and command-line logs on Domain Controllers, Member Servers, Application Servers, and Privileged Access Workstations.",
            "action": [
              "Correlate successful remote logins (Windows Event ID 4624 Logon Type 3 or 10) with subsequent process creation events (Windows Event ID 4688) on the same host within a 5-minute window. Scan the new process name and command line against a list of regular expressions for tools (psexec.exe, wmic.exe, paexec.exe) and suspicious patterns (powershell.exe -enc, -w hidden; net.exe use \\\\). Alert on any match.",
              "For every command line executed within 5 minutes of a remote login, calculate its Shannon entropy score. Establish a baseline entropy score for legitimate administrative commands. Generate an alert if a command's entropy score exceeds the 95th percentile of the baseline, indicating probable obfuscation or encoding.",
              "Develop a sequence-based anomaly detection model (e.g., using a Long Short-Term Memory network) trained on normal sequences of processes executed after remote logins for specific user roles. Feed new post-login process sequences into the model. Flag any sequence that the model identifies as a significant deviation from the learned normal behavior, such as the unexpected execution of discovery commands (whoami.exe, net.exe, ipconfig.exe)."
            ]
          },
          {
            "description": "A successful remote service connection occurs between a source-destination host pair, or by a user to a destination host, for the first time or with statistical rarity.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication logs from Domain Controllers and member servers, VPN concentrator logs, Cloud IaaS access logs, and network flow data from all internal network segments.",
            "action": [
              "Maintain a stateful table of all historical remote access tuples (user, source_host, destination_host, protocol) observed over the last 90 days. For each new successful remote login, query this table. If the tuple is not found, generate a low-severity alert for a 'first-time' access event for analyst review.",
              "Construct a graph where nodes are users and hosts, and edges represent successful remote logins. Weigh each edge by its frequency over a 30-day rolling window. For each new login, calculate its rarity based on the inverse frequency of the edge. Alert on any login event whose rarity score falls within the top 2% (98th percentile) of all observed connections.",
              "Employ an unsupervised clustering algorithm (e.g., DBSCAN) on feature vectors representing user remote access behavior (set of destination hosts, protocols used, time-of-day distribution, session duration). A new login event that causes a user to be classified as a 'noise' point indicates a significant behavioral deviation from their established cluster and should be flagged as a potential compromise."
            ]
          },
          {
            "description": "An internal host, acting as a pivot, receives an inbound remote connection and subsequently initiates more than 5 outbound remote connections to unique internal hosts within 60 minutes.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors capturing East-West traffic at VLAN or subnet boundaries, network flow logs, and endpoint security logs across all server and workstation segments.",
            "action": [
              "Create a rule that triggers when a host receives a remote login (Windows Event ID 4624 Logon Type 10 or Zeek conn.log). For the next 60 minutes, count the number of unique internal destination IPs this host connects to using remote service ports. If the count exceeds a hard threshold of 5, generate an alert for potential 'fan-out' activity.",
              "For each host, profile the distribution of its unique outbound remote service destinations per 60-minute window over a 30-day period. Alert when any host's activity in a given window exceeds the 99th percentile of its own historical baseline, indicating an abnormal burst of lateral connections.",
              "Implement a time-series forecasting model (e.g., ARIMA) for each host, predicting the expected number of outbound lateral connections per hour. If the observed count in an hour significantly exceeds the model's prediction confidence interval, flag the host for anomalous 'fan-out' behavior indicative of automated pivoting."
            ]
          },
          {
            "description": "Internal network traffic is observed using remote service protocols on non-standard ports, or using uncommon remote service ports not part of the established organizational baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek rdp.log",
              "Zeek ssh.log",
              "Zeek dce_rpc.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring sensors at key network chokepoints, core switches, datacenter firewalls, and VPC flow logs in cloud environments.",
            "action": [
              "Define an explicit allow-list of approved (protocol, port) pairs for remote services. Use Zeek protocol analyzers (ssh.log, rdp.log) to identify traffic matching a remote service protocol but on a non-standard port. Also, monitor conn.log for traffic on uncommon remote service ports (e.g., 5985, 5986 for WinRM) that are not on the allow-list. Alert on any deviation.",
              "Over a 30-day baseline, calculate the frequency of every destination port used in internal-to-internal communications. Isolate and investigate any remote service port that is statistically rare (e.g., used less than 10 times across the enterprise), as it may represent unauthorized or adversarial tool usage.",
              "Train an autoencoder neural network on feature vectors of normal network connections (e.g., source/destination subnet, destination port, protocol, duration, byte counts). Feed all new connection events through the model and calculate their reconstruction error. A high reconstruction error signifies a deviation from learned normalcy and should be alerted on as a potential indicator of non-standard port usage or protocol tunneling."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]