[
  {
    "information_requirement": "Is the adversary using binary padding to evade static file-based defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.001",
        "name": "Binary Padding",
        "evidence": [
          {
            "description": "An executable file transferred over the network or written to disk has a file hash that matches a known indicator of compromise (IOC) specifically tagged for padded malware.",
            "data_sources": [
              "Zeek files.log",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Proxy server logs, Mail gateway logs, Endpoint file systems",
            "action": [
              "Symbolic: Continuously monitor Zeek files.log and Sysmon Event ID 11 (FileCreate) for file hashes (MD5, SHA256). Match these hashes against a threat intelligence feed containing IOCs for known padded malware. Generate a high-severity alert upon any match.",
              "Statistical: For files matching a known padded malware hash, calculate the Shannon entropy of the filename. Compare the entropy to a baseline of all filenames observed in the environment. Flag files where the filename entropy is in the top 95th percentile, as adversaries often use high-entropy names for payloads.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression, Random Forest) to predict the maliciousness of a file based on a hash match. Use features such as source IP reputation, destination asset criticality, filename entropy, and the prevalence of the hash in the environment. A high probability score (e.g., > 0.9) from the model elevates the alert priority for analyst review."
            ]
          },
          {
            "description": "A Windows Portable Executable (PE) file transferred over the network has an overlay size (total file size minus the PE header's SizeOfImage) that is a statistical outlier, indicating a large amount of appended data.",
            "data_sources": [
              "Zeek pe.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network monitoring sensors (e.g., Zeek) at internet gateways, VPN termination points, and data center ingress/egress points.",
            "action": [
              "Symbolic: For each PE file observed in Zeek, calculate the overlay size by subtracting `pe.log.size_of_image` from `files.log.seen_bytes`. Generate an alert if the overlay size is greater than a set threshold (e.g., 512KB) that exceeds the typical size of appended certificates or resources.",
              "Statistical: Calculate the overlay size for all observed PE files. Group files by name (e.g., `chrome.exe`, `svchost.exe`) and establish a historical baseline of overlay sizes for each group. Flag any file where the overlay size exceeds the 99th percentile for its group, or exceeds a high absolute threshold (e.g., 2MB) for previously unseen filenames.",
              "Machine Learning: Implement a time series anomaly detection model (e.g., Seasonal Hybrid ESD) on the average overlay size of newly observed executables per hour. A sudden, anomalous spike in this time series suggests a potential campaign using padded binaries. Correlate the timing of the spike with threat intelligence or other security alerts."
            ]
          },
          {
            "description": "A process is created on an endpoint from an executable file whose size is a statistical outlier compared to the historical baseline for executables with the same name and path.",
            "data_sources": [
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, database servers), developer workstations, standard user endpoints, and systems within the DMZ.",
            "action": [
              "Symbolic: Maintain a watchlist of critical system executables (e.g., `lsass.exe`, `csrss.exe`, `winlogon.exe`) and their known-good file sizes and hashes. Generate an alert from Sysmon Event ID 1 when a process is created from a file matching a name on the watchlist but whose `FileSize` or `Hashes` field does not match the known-good values.",
              "Statistical: For every process creation event (Sysmon Event ID 1), extract the `Image` path and `FileSize`. For each unique `Image` path, maintain a running calculation of the mean and standard deviation of `FileSize`. Generate an alert when a process is created from an image whose size is more than 3 standard deviations from the historical mean for that specific path.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., Isolation Forest or DBSCAN) on endpoint file metadata. Use features such as file size, file entropy, PE section count, and file path depth. Flag files identified as anomalies or noise, as these are structurally different from the majority of benign files and may have been padded."
            ]
          },
          {
            "description": "A process, previously identified as potentially padded (e.g., via anomalous file size or large PE overlay), subsequently executes suspicious child processes or initiates anomalous network connections.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint process and network monitoring agents, DNS resolvers, Network egress points, and SIEM correlation engines.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process, whose source executable was flagged for padding, is observed as the parent process (Sysmon Event ID 1) of discovery commands (e.g., `whoami.exe`, `net.exe`, `systeminfo.exe`) or credential access tools.",
              "Statistical: For a process originating from a suspected padded binary, analyze its outbound network connections (Sysmon Event ID 3, Zeek conn.log). Calculate the time delta between consecutive connections to the same destination IP. A low standard deviation in these time deltas (e.g., < 1.5 seconds) indicates highly periodic beaconing, a common C2 behavior. Alert if the periodicity is below a defined threshold.",
              "Machine Learning: Develop a risk scoring pipeline. An initial alert for a padded binary assigns a base risk score to the process. Subsequent behaviors, analyzed by machine learning models, increment this score. For example, a DGA classification model analyzes the process's DNS queries (Zeek dns.log), and a positive classification significantly increases the process's risk score, triggering a critical alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]