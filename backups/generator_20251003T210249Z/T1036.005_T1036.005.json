[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by masquerading as a legitimate process or resource? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.005",
        "name": "Match Legitimate Resource Name or Location",
        "evidence": [
          {
            "description": "A process creation event is observed where the on-disk filename corresponds to a known legitimate system utility (e.g., svchost.exe, lsass.exe), but the MD5, SHA1, or SHA256 hash of the executable file matches a known malicious hash signature from an integrated threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM/Data Lake containing aggregated process creation logs (Sysmon Event ID 1, Windows Event ID 4688) from all Windows hosts, with a focus on servers hosting critical services (e.g., Domain Controllers, database servers) and user endpoints.",
            "action": [
              "For each process creation event (Sysmon Event ID 1 or Windows Event ID 4688), join the process hash (MD5, SHA1, SHA256) with a threat intelligence feed of known malicious file hashes. Generate a high-severity alert if the process name is a common system utility (e.g., svchost.exe, lsass.exe, explorer.exe) and its hash is found in the threat feed.",
              "For any process matching the symbolic logic, calculate the environmental prevalence of the file hash. A hash seen on fewer than 1% of total endpoints or on only a single machine is considered highly anomalous. Rank alerts based on this prevalence score, prioritizing the rarest occurrences.",
              "Deploy a pre-trained binary classification model (e.g., Gradient Boosting, Random Forest) that takes process metadata as input features (filename, hash, file path, parent process name, threat intel match status). Use the model to generate a 'masquerade confidence score' between 0 and 1 for each process creation event, allowing analysts to filter and prioritize events with the highest probability of being malicious masquerades."
            ]
          },
          {
            "description": "A process creation event is observed where the process name is a known system utility (e.g., svchost.exe, lsass.exe, csrss.exe), but the executable's file path is not within the standard, expected directory (e.g., not %SystemRoot%\\System32 or %SystemRoot%\\SysWOW64).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log aggregation platform collecting process creation events from all Windows hosts, with specific focus on monitoring temporary file locations (%TEMP%, %TMP%, C:\\Users\\Public), user profile directories, and network-accessible shares.",
            "action": [
              "Maintain a strict allowlist of full execution paths for critical system processes (e.g., lsass.exe must execute from %SystemRoot%\\System32\\lsass.exe). For each process creation event, compare the (ProcessName, Path) tuple against this allowlist. Generate a high-severity alert for any critical process executing from a non-approved path.",
              "For all other processes, build a statistical baseline of common (ProcessName, Path) execution pairs over a 30-day rolling window. Calculate the frequency of each pair. Flag any pair that falls below a rarity threshold (e.g., observed less than 5 times enterprise-wide or with a frequency in the bottom 1st percentile) for further investigation.",
              "Use a clustering algorithm (e.g., DBSCAN) on process creation events, using features derived from the file path (e.g., path depth, presence of keywords like 'Temp' or 'Public', character distribution). Isolate and investigate clusters identified as noise/outliers, as these represent executions from atypical locations that deviate from established patterns."
            ]
          },
          {
            "description": "A process creation event is recorded for an executable with a name matching a legitimate system file (e.g., rundll32.exe), but its embedded PE metadata fields (e.g., OriginalFilename, InternalName, CompanyName, ProductVersion) are null, contain junk data, or are inconsistent with the known values for the legitimate binary.",
            "data_sources": [
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM or log repository ingesting Sysmon Event ID 1 data from all Windows systems. The collection configuration must be set to include PE header information.",
            "action": [
              "For process creation events involving common system binaries, compare the 'OriginalFilename', 'InternalName', and 'CompanyName' fields from the PE metadata against a known-good baseline dictionary. Generate an alert for any process where these fields are null or do not match the expected values (e.g., svchost.exe should have CompanyName of 'Microsoft Corporation').",
              "Calculate the Levenshtein distance between the on-disk filename (e.g., svchost.exe) and the 'OriginalFilename' value from the PE metadata. A score greater than 0 indicates a potential rename. Additionally, calculate the Shannon entropy of the 'Description' and 'CompanyName' fields; values in the top 98th percentile for that specific process name suggest randomized or junk data used to fill the fields.",
              "Train a Random Forest classifier using features derived from PE metadata, including boolean flags for metadata matches (from the symbolic check), entropy scores, and string distance metrics. The model will predict whether a binary's metadata is consistent with a legitimate file, assigning a confidence score to prioritize analyst review."
            ]
          },
          {
            "description": "A process creation event is observed where a child process is a critical system utility (e.g., lsass.exe, smss.exe), but its parent process is not on the established allowlist of typical parent processes (e.g., wininit.exe for lsass.exe, but not winword.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process creation logs (Sysmon Event ID 1, Windows Event ID 4688) aggregated from all Windows hosts, with particular attention to parent-child relationships originating from user-facing applications (e.g., browsers, email clients, office suites) and scripting engines (e.g., powershell.exe, cscript.exe).",
            "action": [
              "Create and enforce an allowlist of known-good parent-child process relationships for high-value system processes (e.g., wininit.exe -> services.exe -> svchost.exe). Generate a high-severity alert for any process creation event that violates this defined process tree.",
              "For all observed parent-child process pairs across the enterprise, calculate their frequency over a 30-day rolling window. Flag any pair that is statistically rare (e.g., falls in the bottom 1st percentile of all observed pairs, or has a Z-score > 3 for rarity) for investigation, as this indicates an unusual execution chain.",
              "For specific, high-risk parent-child pairs (e.g., outlook.exe -> powershell.exe), monitor their daily or hourly counts as a time series. Apply an anomaly detection model (e.g., SARIMA, Prophet) to this time series to automatically detect sudden spikes or statistically significant increases in frequency, which could signal a coordinated campaign."
            ]
          },
          {
            "description": "A process executing with a legitimate system name (e.g., svchost.exe) is observed exhibiting anomalous secondary behaviors, such as: 1) using high-entropy command-line arguments, 2) initiating network connections to unusual destination ports, or 3) making DNS requests for algorithmically generated domain names (DGA).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)",
              "Windows Event ID 3 (Sysmon)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Data collection points include: network egress/ingress points and internal network taps for Zeek sensors (capturing conn.log and dns.log); enterprise DNS servers (for dns.log); and all Windows hosts configured to forward process creation (Sysmon EID 1) and network connection (Sysmon EID 3) events.",
            "action": [
              "Correlate process network connections (from Sysmon Event ID 3 and Zeek conn.log) with threat intelligence feeds of known C2 servers and malicious domains. Generate a critical alert if a process with a legitimate system name (e.g., lsass.exe) initiates a connection to a destination IP or resolves a domain on the feed.",
              "For each legitimate process name, build a behavioral profile. A) Calculate the Shannon entropy of its command-line arguments (from Sysmon EID 1); flag any instance exceeding the 95th percentile for that specific process. B) For network connections (Sysmon EID 3, Zeek conn.log), flag any connection where the destination port is not in the top 99% of historically used ports for that process. C) For DNS lookups (Zeek dns.log), calculate the entropy and n-gram frequency of the queried domain; flag requests from system processes for domains with statistically high entropy or rare n-grams.",
              "Use an anomaly detection model like Isolation Forest trained on a feature set representing legitimate behavior for system processes. Features should include command-line length and entropy, network bytes sent/received, connection duration, destination port, and DNS query characteristics. Any activity instance that the model flags as an outlier is a high-confidence indicator of a masquerading process."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]