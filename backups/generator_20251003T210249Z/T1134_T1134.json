[
  {
    "information_requirement": "Has the adversary escalated privileges using access token manipulation?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1134",
        "name": "Access Token Manipulation",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is observed where the NewProcessName or CommandLine fields match patterns of known token manipulation tools (e.g., JuicyPotato.exe, RottenPotato.exe, PrintSpoofer.exe, GodPotato.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, User Workstations, Windows Servers",
            "action": [
              "Create a detection rule that queries for process creation events (Windows Event ID 4688) and triggers an alert if the 'NewProcessName' or 'CommandLine' field contains strings from a watchlist of known token manipulation tools or their unique command-line arguments (e.g., `JuicyPotato.exe`, `-t * -l <port>`).",
              "For each process creation event, calculate a threat score based on the rarity of its command-line arguments using an n-gram frequency model trained on historical data. Flag for review any process with arguments in the lowest frequency percentile (e.g., < 1st percentile) that also has a privileged parent process (e.g., 'services.exe').",
              "Train a supervised classification model (e.g., Random Forest) on labeled process creation events. Use features such as process name, parent process name, command-line length, command-line entropy, and the presence of special characters. The model will classify each new process event as benign or malicious, identifying patterns associated with token-stealing exploits."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a parent process that is a critical system service (e.g., services.exe, lsass.exe, spoolsv.exe, wininit.exe) spawning a child process not on an established allow-list for that parent, such as an interactive shell (cmd.exe, powershell.exe) or a non-native binary.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Infrastructure Servers, Privileged Access Workstations",
            "action": [
              "Implement a rule to alert when a process creation event (Windows Event ID 4688) has a 'ParentProcessName' from a list of sensitive services (`services.exe`, `lsass.exe`, `spoolsv.exe`, `wininit.exe`) and the 'NewProcessName' is not on an approved allow-list of child processes for that specific parent.",
              "Develop a baseline of all parent-child process relationships observed in the environment over a 30-day period. Calculate the conditional probability P(Child | Parent) for all pairs. Create a rule to alert when a new process creation event occurs with a probability below a statistically significant threshold (e.g., < 0.01%), indicating a rare and potentially malicious process chain.",
              "Employ an unsupervised clustering algorithm (e.g., DBSCAN) on process creation events, using features like parent process name, child process name, and user context. Identify and investigate clusters that are small and isolated from the main clusters of benign activity, as these anomalies could represent token manipulation, such as a service spawning a shell."
            ]
          },
          {
            "description": "A temporal correlation exists where a process created by a non-privileged user (Windows Event ID 4688) is followed by a service logon event (Windows Event ID 4624, Logon Type 5) for the SYSTEM account, with the ProcessId in the logon event tracing back to the user-created process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Application Servers, User Workstations",
            "action": [
              "Create a correlation rule that joins process creation events (4688) with logon events (4624) on the ProcessId. Trigger an alert if a process created by a non-privileged user account is followed within a short time window (e.g., < 5 seconds) by a Logon Type 5 event for `NT AUTHORITY\\SYSTEM` originating from the same ProcessId.",
              "For each process creation event (4688), analyze the 'TokenElevationType' field. Establish a baseline of elevation types for common processes. Flag processes that show an elevation to 'TokenElevationTypeDefault' (Type 1 - full token) from a parent with a limited token, especially if the parent is not `consent.exe`. Calculate the frequency of such elevations per user/host and alert on statistical outliers (e.g., > 3 standard deviations from the user's mean).",
              "Use a time-series analysis model (e.g., SARIMA) to monitor the rate of SYSTEM-level service logons (Logon Type 5) per host. An anomalous spike in these events, especially when temporally correlated with unusual user process activity on the same host, should be flagged by the model as a potential token manipulation attack."
            ]
          },
          {
            "description": "A successful network logon event (Windows Event ID 4624, Logon Type 3) is recorded with a source network address of a loopback IP (127.0.0.1, ::1) and the target account is a high-privilege account like `NT AUTHORITY\\SYSTEM`, with the logon process originating from a non-system, user-level process name (e.g., not svchost.exe).",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Endpoints",
            "action": [
              "Create a high-priority alert for any successful logon event (Windows Event ID 4624) where 'LogonType' is 3, 'IpAddress' is '127.0.0.1' or '::1', 'TargetUserName' is 'SYSTEM', and 'ProcessName' is not on an allow-list of legitimate local authenticators. Correlate the 'ProcessId' from this event with Event ID 4688 to inspect the parent process.",
              "Profile the frequency of localhost network logons (Logon Type 3) by user and process name across the environment to establish a baseline. Generate an alert when a user or process initiates such a logon and the frequency exceeds a baseline threshold (e.g., more than 3 standard deviations above the mean for that user/process combination).",
              "Train a decision tree classifier to identify 'Potato' family attacks. Use features from the 4624 event such as 'LogonType', 'IpAddress', 'TargetUserName', and 'ProcessName'. The model can learn the specific combination of features (Logon Type 3, localhost IP, SYSTEM user, non-system process) that strongly indicates this attack pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using access token manipulation?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1134",
        "name": "Access Token Manipulation",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is observed for psexec.exe or a known variant (e.g., paexec.exe) containing the '-s' command-line argument, indicating an attempt to run a process under the SYSTEM account context.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, IT Administrator Systems, Jump Servers",
            "action": [
              "Implement a detection rule that triggers a high-severity alert for any process creation event (Windows Event ID 4688) where the 'NewProcessName' is `psexec.exe` or `paexec.exe` AND the 'CommandLine' contains the `-s` flag.",
              "Track the usage frequency of PsExec (and its variants) by user account and source/destination host pair. Calculate a risk score based on the user's role and the rarity of the source-destination pair. Usage by a non-administrator account or at a time that falls in the > 99th percentile of unusual login times for that user should be flagged for investigation.",
              "Use a sequence analysis model like a Hidden Markov Model (HMM) to identify the attack chain associated with PsExec usage for defense evasion. A typical malicious sequence (state transition) might be: (1) psexec.exe written to disk, (2) psexec.exe executed with `-s` flag, (3) suspicious child process (e.g., `whoami.exe`, `net.exe`) spawned by the remote service. The model can learn to recognize this entire sequence as a high-confidence malicious event."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) for `runas.exe` contains the `/netonly` argument, followed by network connection attempts (Zeek conn.log) from the same host to remote systems using authentication protocols like SMB (port 445) or WinRM (ports 5985/5986).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress/Ingress Points, Authentication Servers",
            "action": [
              "Create a correlation rule that triggers when a `runas.exe` process is created with `/netonly` in the command line (Event ID 4688), and is followed within a 2-minute window by an outbound SMB or WinRM connection from the same 'Computer' (host) to a new internal destination IP address (Zeek conn.log).",
              "Baseline the use of `runas.exe` per user. For each user, maintain a historical set of destination IPs they connect to after using `runas /netonly`. When a new event occurs, calculate the Jaccard similarity between the new destination IP set and the historical set. A score below a defined threshold (e.g., 0.2) indicates anomalous targeting.",
              "Employ a graph-based anomaly detection model where nodes are users, hosts, and processes. The sequence of a user running `runas /netonly` on a host, which then connects to a new remote host, forms a specific subgraph pattern. The model can be trained to identify rare or previously unseen subgraphs as potential threats."
            ]
          },
          {
            "description": "A system process that typically does not initiate network connections (e.g., lsass.exe) or has a predictable network pattern (e.g., svchost.exe for Windows Updates) initiates an outbound network connection (Zeek conn.log) to a rare external IP address or over a non-standard port.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewall, Proxy), Domain Controllers, Endpoint Security Agents",
            "action": [
              "Create a rule to alert if a process from a defined list of critical system processes (e.g., `lsass.exe`, `winlogon.exe`, `csrss.exe`) is observed as the source of any outbound network connection in network flow logs (Zeek conn.log). Enrich the alert with the process GUID and command line if available.",
              "For each key system process (e.g., `svchost.exe`), build a statistical baseline of its network behavior, including destination IPs, destination ports, and data volume. Use percentile-based thresholds to detect anomalies, such as a connection to a destination IP in the bottom 1% of popularity (threat intel feeds) or a data transfer volume exceeding the 99th percentile for that process.",
              "Apply a time-series decomposition model (e.g., STL) to the network traffic volume generated by specific security or system processes. The model separates the time series into trend, seasonal, and residual components. Monitor the residual component and alert on any spike that exceeds a defined threshold (e.g., 3 standard deviations), as this may indicate an adversary using a compromised process token for C2 communication."
            ]
          },
          {
            "description": "Within a short time frame (e.g., 1 hour), a single source host generates multiple successful network logon events (Windows Event ID 4624, Logon Type 3) to various destination systems, where the set of unique `TargetUserName` values has high entropy, indicating the use of multiple stolen tokens for lateral movement.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Centralized Log Aggregator (SIEM), Member Servers",
            "action": [
              "Create a rule that counts the number of unique 'TargetUserName' values per 'IpAddress' (source host) for Logon Type 3 events over a 1-hour window. Trigger an alert if this count exceeds a hard threshold (e.g., > 10 unique accounts from one non-server host).",
              "For each source host, calculate the Shannon entropy of the 'TargetUserName' set for successful network logons (Logon Type 3) within a sliding 30-minute window. Establish a baseline entropy level for different host types (workstations vs. servers) and alert when a host's account entropy exceeds a dynamic threshold (e.g., 3 standard deviations above its baseline).",
              "Use peer group analysis to identify anomalous lateral movement. Group hosts by role or department using Active Directory attributes. Train a model to learn the typical 'fan-out' behavior (number of remote logons to unique accounts/hosts) for each peer group. A host whose fan-out behavior significantly deviates from its peers is flagged as an outlier for investigation."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a `ParentProcessName` that is inconsistent with a typical process tree (e.g., `cmd.exe` as a child of `services.exe`), or the `ParentProcessId` specified in the event does not exist or terminated prior to the child's creation, indicating Parent Process ID (PPID) spoofing.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Developer Endpoints",
            "action": [
              "Implement a rule that alerts when a process creation event (Event ID 4688) has a `ParentProcessName` that is a common spoofing target (e.g., `explorer.exe`) but the child process (`NewProcessName`) is an unapproved or suspicious tool (e.g., `powershell.exe` without user interaction), or when the parent process is a terminated process.",
              "Maintain a stateful table of running processes and their creation times. For each new process creation event (4688), query the table to check if the `ParentProcessId` exists and was created before the child process. Calculate the rate of 'orphaned' processes per host and alert when this rate spikes above a statistical baseline (e.g., > 95th percentile).",
              "Train a graph neural network (GNN) on process-lineage graphs constructed from 4688 events to learn the structural properties of normal process trees. Evaluate each newly created process and its lineage to identify anomalous structures, such as a node with an illogical parent (e.g., `svchost.exe` -> `notepad.exe`) or unusual graph depth, which are hallmarks of PPID spoofing."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]