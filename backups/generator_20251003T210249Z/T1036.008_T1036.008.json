[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by masquerading file types?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.008",
        "name": "Masquerade File Type",
        "evidence": [
          {
            "description": "A file written to disk or transferred over the network has a hash matching a known malicious indicator and a file extension from a curated list of non-executable types (e.g., .jpg, .png, .txt, .log, .dat).",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4663",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., proxies, firewalls), User workstations, Critical file servers, Email gateways",
            "action": [
              "Continuously ingest a threat intelligence feed of malicious file hashes (MD5, SHA256). Create a rule that scans all files transferred over the network (Zeek files.log) or written to disk (Sysmon Event ID 11). Trigger an alert if a file's hash matches an indicator and its extension is in a predefined list of non-executables (e.g., .txt, .jpg, .pdf).",
              "For each unique malicious hash detected, track the frequency distribution of all associated file extensions observed over the last 90 days. Calculate the rarity of the observed extension for that specific hash. Flag any detection where a known malicious tool (e.g., Mimikatz) masquerades with a statistically rare extension (e.g., in the bottom 5th percentile) for that tool.",
              "Train a classification model (e.g., logistic regression) using features such as file hash reputation from threat intelligence, file extension, source process for file writes (from Sysmon), and network source reputation (from Zeek conn.log). Use the model's output probability score to prioritize alerts for analyst investigation, focusing on files with the highest likelihood of being maliciously masqueraded."
            ]
          },
          {
            "description": "A file transferred over the network has a filename extension (e.g., .jpg) that is inconsistent with its MIME type derived from its magic bytes (e.g., 'application/x-dosexec'), and this specific extension-MIME type pairing is statistically rare.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., proxies, firewalls), Internal network segments, Web servers, Mail servers",
            "action": [
              "In Zeek files.log, create a rule to flag any file where the mime_type is 'application/x-dosexec' or 'application/octet-stream' but the filename extension is in a defined set of non-executables (e.g., .txt, .jpg, .png, .gif).",
              "For all file transfers in Zeek files.log, establish a baseline of (filename extension, mime_type) pairs over a 30-day period. Calculate the conditional probability $$ P(\\text{mime_type} | \\text{extension}) $$. Alert on any observed pair where this probability is below a low threshold (e.g., 1st percentile) or has never been seen in the baseline.",
              "Using Zeek files.log and conn.log data, apply an unsupervised clustering algorithm (e.g., DBSCAN) on file transfer features including file size, entropy of filename, source/destination IP reputation, extension, and MIME type. Isolate and investigate outlier clusters, as they may represent anomalous file transfers including masqueraded executables."
            ]
          },
          {
            "description": "An interpreter or loader process (e.g., rundll32.exe, mshta.exe, wscript.exe, cscript.exe, regsvr32.exe) is executed with a command-line argument pointing to a file with a non-executable extension (e.g., .txt, .jpg, .dat, .log).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain controllers, Terminal servers",
            "action": [
              "Using process creation events (Sysmon Event ID 1 or Windows Event ID 4688), create a rule to alert whenever a process image name from a list of known interpreters (e.g., rundll32.exe, mshta.exe, cscript.exe, powershell.exe, regsvr32.exe) is launched with a command-line argument referencing a file ending in a non-executable extension (e.g., .jpg, .png, .txt, .dat, .log).",
              "For each interpreter process (e.g., rundll32.exe), establish a baseline of the frequency distribution of file extensions found in its command-line arguments across the enterprise over 30 days. Calculate the percentile rank for each extension. Generate a medium-severity alert for any execution involving an extension in the bottom 5th percentile of frequency for that specific interpreter.",
              "For each host, develop a time-series model (e.g., ARIMA) for the frequency of specific interpreter/extension pairings (e.g., count of 'rundll32.exe executing .dat' per hour). Use the model to detect anomalous spikes that deviate significantly (e.g., > 3 standard deviations) from the forecast, indicating a potential targeted attack."
            ]
          },
          {
            "description": "A process associated with handling non-executable files (e.g., mspaint.exe, notepad.exe, AcroRd32.exe, winword.exe) spawns a child process that is a command shell, an interpreter, or is otherwise not typical for that parent process's normal function (e.g., powershell.exe, cmd.exe, wscript.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Terminal servers, Application servers",
            "action": [
              "Using process creation events with parent process information (Sysmon Event ID 1), create a high-severity rule to detect when a parent process from a list of document/media handlers (e.g., AcroRd32.exe, mspaint.exe, notepad.exe, winword.exe) spawns a child process from a list of interpreters/shells (e.g., cmd.exe, powershell.exe, wscript.exe, bitsadmin.exe).",
              "From Sysmon Event ID 1 logs, build a parent-child process relationship graph for the environment over a 90-day period. Calculate the occurrence frequency of each unique parent image -> child image pair. Flag any observed pair that is statistically rare (e.g., has occurred fewer than 10 times enterprise-wide or is in the bottom 1st percentile of frequency), such as 'mspaint.exe -> powershell.exe'.",
              "Train a classifier (e.g., Random Forest) on features of parent-child process events (parent/child process names, paths, command lines, user context, parent process integrity level). Use the trained model to assign a risk score to each new process chain, prioritizing investigation of those classified as high-risk or anomalous."
            ]
          },
          {
            "description": "A file with a non-executable extension is written by a process (e.g., chrome.exe, outlook.exe) to a directory commonly used for staging or persistence (e.g., %APPDATA%, %PUBLIC%, C:\\Users\\Public\\Downloads, startup folders), and is subsequently executed by an interpreter process (e.g., rundll32.exe, mshta.exe) within a short time window.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Sysmon Event ID 11",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Servers with web browsers, Shared network drives",
            "action": [
              "Correlate file creation events (Sysmon Event ID 11) and process creation events (Sysmon Event ID 1). Alert when a file with a non-executable extension (.log, .jpg) is created in a sensitive directory (e.g., startup folders, %APPDATA%) by a browser or email client, and a process creation event for that same file path is observed as a command-line argument to an interpreter (e.g., rundll32.exe) within a 5-minute window.",
              "For each sensitive directory (e.g., C:\\Windows\\Temp, %APPDATA%), profile the distribution of file extensions written to it by different parent processes over 30 days. Use a chi-squared test to detect significant deviations from the baseline distribution for a given day or hour. For example, flag a sudden, anomalous increase in '.jpg' files being written to C:\\Windows\\Temp by 'powershell.exe'.",
              "Use a sequence analysis model (e.g., a Hidden Markov Model or LSTM) to learn common event sequences, such as (Process A writes file.ext to Path X) -> (Process B reads file.ext from Path X) -> (Process C executes using file.ext). Flag event sequences that have a very low probability under the trained model, as they represent anomalous chains of activity potentially indicative of masquerading and execution."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]