[
  {
    "information_requirement": "Has the adversary established command and control using a common application layer protocol to blend in with normal network traffic?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1071",
        "name": "Application Layer Protocol",
        "evidence": [
          {
            "description": "A network connection to a destination IP, domain, or TLS Server Name Indication (SNI) that is present on a Cyber Threat Intelligence (CTI) feed of known C2 indicators.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., firewalls, web proxies), DNS resolvers, Core network switches",
            "action": [
              "Create a rule to continuously join destination IPs from Zeek conn.log (`id.resp_h`), queried domains from dns.log (`query`), and server names from ssl.log (`server_name`) against a high-confidence CTI feed of known C2 infrastructure. Generate a high-severity alert for any match.",
              "For matched CTI indicators, calculate the frequency of communication from internal hosts over a 24-hour window. Prioritize investigation for internal hosts that communicate with multiple distinct C2 indicators or communicate with a single indicator at a frequency above the 95th percentile for that host's typical connection patterns.",
              "Train a classification model (e.g., Logistic Regression) using features such as CTI source reputation, indicator age, and the historical true/false positive rate for the indicator in the environment to score and prioritize new alerts, reducing analyst fatigue from low-confidence matches."
            ]
          },
          {
            "description": "Outbound HTTP/S traffic containing User-Agent strings, URI patterns, or JA3/JA3S hashes that match signatures of known C2 frameworks.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxies, Egress points, Endpoints generating web traffic, Application delivery controllers",
            "action": [
              "Maintain and apply a ruleset to scan Zeek http.log for specific `user_agent` strings and `uri` patterns associated with C2 frameworks (e.g., Cobalt Strike, Metasploit). Simultaneously, match the `ja3` and `ja3s` fields in Zeek ssl.log against a list of known malicious C2 fingerprints and alert on any match.",
              "For each `user_agent` in http.log and `ja3` hash in ssl.log, calculate its prevalence (percentage of hosts using it) across the organization over the last 30 days. Flag User-Agents or JA3 hashes that are used by a statistically insignificant number of hosts (e.g., < 0.1%) as potentially anomalous and requiring review.",
              "Use a clustering algorithm (e.g., K-Means or DBSCAN) on JA3 hashes from Zeek ssl.log to group clients with similar TLS configurations. Actively investigate small, outlier clusters, as these may represent non-standard client software, including novel C2 implants not yet in signature databases."
            ]
          },
          {
            "description": "A series of outbound connections from an internal host to a single external destination characterized by highly regular time intervals (low jitter) and consistently sized data payloads, indicative of automated C2 beaconing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., firewalls), Network taps monitoring internal subnets, Core network switches",
            "action": [
              "Create a rule to flag any internal host establishing more than a threshold number of connections (e.g., >100) to a single external IP on the same port within a 24-hour period, especially if the destination is uncategorized or has a low reputation.",
              "For each source-destination IP pair in Zeek conn.log, calculate the time deltas between consecutive connection timestamps. Identify pairs where the standard deviation of these time deltas is exceptionally low (<1.0 seconds). Concurrently, calculate the standard deviation of total connection bytes (`orig_bytes` + `resp_bytes`). A combination of low time delta variance and low byte variance is a strong statistical indicator of automated beaconing.",
              "Apply a time series forecasting model (e.g., ARIMA or Seasonal-Trend decomposition) to the connection events for high-volume host-destination pairs. A strong periodic component identified by the model, even with minor jitter, signals automated beaconing and should be flagged for analysis."
            ]
          },
          {
            "description": "A network connection on a common application port (e.g., 80, 443, 53) originating from a process that does not typically initiate network communications or is executing from a non-standard file path (e.g., C:\\Users\\Public\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain Controllers, High-value asset servers",
            "action": [
              "Create a watchlist of process names that should not make network connections (e.g., `calc.exe`, `notepad.exe`, `svchost.exe` from a non-system directory). Correlate network connection events (Sysmon Event ID 3 or Windows Event ID 5156) with process creation events (Windows Event ID 4688) and alert if a process from the watchlist is the source of the connection.",
              "Build a baseline of (ProcessName, DestinationPort) tuples from Sysmon Event ID 3 logs over a 30-day period. Calculate the frequency of each tuple. Any tuple that is statistically rare (e.g., appearing for the first time or falling below a 1st percentile frequency) should be flagged for review.",
              "Train an Isolation Forest model on features from legitimate process network events, including process path, parent process name, user context, and destination port. Use the trained model to score new events; events scored as significant outliers are likely malicious and should be prioritized for investigation."
            ]
          },
          {
            "description": "DNS queries exhibiting characteristics of C2 tunneling, such as high Shannon entropy in subdomain labels, excessive query length (>255 bytes), a high frequency of requests for a single domain, or an anomalously high ratio of TXT/NULL queries to A/AAAA queries from a single host.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Domain Controllers, Egress points monitoring DNS traffic",
            "action": [
              "Create a rule to search Zeek dns.log for queries where the domain name matches a known DGA regular expression or is present on a C2 domain CTI feed. Additionally, create rules to alert on DNS queries containing Base64 or hexadecimal patterns in subdomains.",
              "For each query in dns.log, calculate the Shannon entropy of the full query name. Flag queries with entropy scores in the top percentile (e.g., >95th) as indicative of DGA. Concurrently, track the ratio of query types (e.g., TXT vs A) per source host; a sudden spike in the percentage of TXT queries is a strong indicator of DNS tunneling for data exfiltration.",
              "Train a Random Forest classifier on labeled data with features extracted from DNS queries (e.g., query length, subdomain entropy, count of distinct characters, ratio of numbers to letters, query type, TLD). Use the model to classify new DNS queries in real-time as either benign or malicious (DGA/tunneling)."
            ]
          },
          {
            "description": "An application layer connection where the ratio of bytes sent to bytes received is inverted compared to the protocol's expected behavior, such as a client uploading more than 10 times the data it downloads over HTTP/S.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., firewalls, web proxies), Core network switches, Network taps",
            "action": [
              "Create a rule to flag any connection on port 53 (DNS) where the bytes sent (`orig_bytes`) are greater than a static threshold of 512 bytes, as this is highly abnormal for standard DNS queries. For HTTP/S, flag any connection where a client POSTs data to an IP address rather than a fully qualified domain name.",
              "For each common service (e.g., 'ssl', 'http', 'dns') in Zeek conn.log, establish a baseline ratio of `orig_bytes` / `resp_bytes`. Use a Z-score or Inter-Quartile Range (IQR) method to identify connections that are statistical outliers (e.g., Z-score > 3). A high ratio for a client-initiated web connection is a strong indicator of data upload via C2.",
              "Use a DBSCAN clustering algorithm on connection features from Zeek conn.log, including `(orig_bytes, resp_bytes, duration, proto, service)`. This can automatically group connections into clusters of 'normal' behavior (e.g., 'web browsing', 'dns lookups'). Outlier points that do not belong to any cluster represent anomalous connections, such as C2 exfiltration, that can be prioritized for investigation."
            ]
          },
          {
            "description": "An outbound connection using a well-known application layer protocol (e.g., HTTP, TLS, DNS) over a non-standard port, or a connection on a standard port that generates a protocol violation notice.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., firewalls), Core network switches, Application servers",
            "action": [
              "From Zeek conn.log, create a rule to alert on any successful connection where the `service` field is identified as 'http', 'ssl', or 'dns' but the `id.resp_p` is not in the set of standard IANA-assigned or common alternate ports for that service. Additionally, alert on any entry in `notice.log` with `note` types like `SSL::Invalid_Server_Cert` or other protocol violation notices.",
              "Create a baseline of (service, port) tuples observed in Zeek conn.log over a 30-day period. Calculate the prevalence of each tuple across the enterprise. Flag any tuple that is statistically rare (e.g., below the 0.5 percentile of occurrences) for investigation as a potential C2 channel using a non-standard port.",
              "Train an Isolation Forest model on features from legitimate connections in Zeek conn.log, including port number, protocol, service, duration, and byte counts. Use the model to score new connections in real-time. Connections identified as anomalies are likely using non-standard configurations for C2 and should be investigated."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]