[
  {
    "information_requirement": "Is the adversary collecting sensitive data from Customer Relationship Management (CRM) software?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1213.004",
        "name": "Customer Relationship Management Software",
        "evidence": [
          {
            "description": "A successful network connection to a CRM application or its backend database originates from a source IP address present on a threat intelligence feed of known malicious C2 servers, proxies, or anonymization services like TOR.",
            "data_sources": [
              "Zeek conn.log",
              "Firewall Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at internet gateways, VPN termination points, and server farm segments hosting CRM infrastructure.",
            "action": [
              "Symbolic: Ingest a high-confidence threat intelligence feed of malicious IP addresses. For every connection to a CRM asset IP in Zeek conn.log, join the source IP (`id.orig_h`) against the intelligence feed. Generate a high-priority alert for any match.",
              "Statistical: For all connections to CRM assets, enrich the source IP with its Autonomous System Number (ASN). Establish a baseline of legitimate source ASNs observed over 30 days. Generate an alert when a connection originates from an ASN that is new or has a frequency below the 5th percentile, particularly if the ASN is associated with VPS providers not used for business.",
              "Machine Learning: Train a classification model (e.g., Random Forest) to predict if a connection is malicious. Engineer features from Zeek conn.log (duration, protocol, service, resp_bytes) and external enrichments (source IP geolocation, ASN, reputation). A high probability score from the model on a new connection indicates a likely malicious session."
            ]
          },
          {
            "description": "An HTTP request to a CRM web interface or API contains a User-Agent string associated with programmatic access tools (e.g., curl, python-requests) instead of a standard web browser User-Agent.",
            "data_sources": [
              "Zeek http.log",
              "WAF Logs",
              "Reverse Proxy Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log collectors for WAFs, reverse proxies, and web servers hosting the CRM application front-end.",
            "action": [
              "Symbolic: Query the `user_agent` field in Zeek http.log for all requests to CRM application URLs. Match the User-Agent string against a curated deny-list of non-browser tools (`curl/*`, `Wget/*`, `python-requests/*`, `Go-http-client/*`, `sqlmap/*`). Generate an alert on any match.",
              "Statistical: Over a 24-hour rolling window, calculate the frequency of all unique User-Agent strings making requests to CRM assets. Alert on any User-Agent that constitutes less than 0.1% of total requests and is not on an approved allow-list for automation or monitoring tools.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on HTTP request features from Zeek http.log, such as the User-Agent string, request method, URI path, and header count. Manually investigate small clusters or outliers that do not conform to the large, dense clusters representing normal user web browser activity."
            ]
          },
          {
            "description": "A process is created on a CRM server with command-line arguments indicating a bulk data export operation, such as querying an entire database or outputting results to a file.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "On-premise CRM application servers, On-premise CRM database servers.",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 (Process Creation) and 4104 (Script Block Logging) on CRM servers. Create a detection rule for database utility process names (`sqlcmd.exe`, `bcp.exe`, `mysqldump`) or PowerShell cmdlets (`Invoke-Sqlcmd`, `Export-Csv`) accompanied by command-line arguments containing patterns like `SELECT *`, `> *.csv`, or `-out-file`.",
              "Statistical: For each CRM server, establish a baseline of normal command-line executions for database utilities. Alert when the execution frequency of a utility exceeds 3 standard deviations above its hourly average. Additionally, calculate the Shannon entropy of command-line arguments; a sharp increase in entropy compared to the baseline can indicate obfuscated or randomized commands.",
              "Machine Learning: Train a text classification model (e.g., using TF-IDF and a Naive Bayes classifier) on command-line data from Event ID 4688. Label benign administrative commands (e.g., scheduled backups) and known malicious commands. Use the trained model to classify new, unseen command-line executions and alert on those classified as malicious."
            ]
          },
          {
            "description": "A user account authenticates to a CRM application or its host with session characteristics that are statistically anomalous for that user, such as an unfamiliar geographic origin, unusual time-of-day, or an impossible travel event.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Cloud Identity Provider Logs (e.g., Azure AD Sign-in Logs)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Cloud identity providers, VPN concentrators, and CRM application and database servers (for local account logins).",
            "action": [
              "Symbolic: For each successful login to a CRM asset (Windows Event ID 4624), correlate the source IP with its geolocation (via Zeek conn.log). Compare the login's timestamp and location with the user's previous login. If the time elapsed is insufficient to travel the distance between the two locations, trigger an 'Impossible Travel' alert.",
              "Statistical: For each user, create a baseline of normal login behavior (typical hours, source countries/ASNs, logon types). Assign a risk point for each deviation in a new login event (e.g., +1 for off-hours, +2 for rare country). Alert when a login's cumulative risk score exceeds the 98th percentile of the user's historical scores or a peer group's average.",
              "Machine Learning: For each user account, train a one-class anomaly detection model (e.g., Isolation Forest) on a feature set representing their normal login patterns. Features should include time-of-day (as a cyclical feature), day-of-week, source ASN, and source country. Each new login is scored by the model; if it is classified as an anomaly, generate an alert for investigation."
            ]
          },
          {
            "description": "The volume of data transferred from a CRM server to a single client IP address during a session is a statistical outlier compared to the user's or peer group's historical behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Firewall Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors (e.g., Zeek) or firewalls monitoring traffic flows to and from CRM servers and database backends.",
            "action": [
              "Symbolic: Monitor the `resp_bytes` field in Zeek conn.log for connections where the destination is a CRM server. Generate a high-severity alert if the total data transferred (`resp_bytes`) in a single connection exceeds a large, static threshold (e.g., 500 MB) that is well above normal file transfers.",
              "Statistical: For each user, calculate a 30-day moving average and standard deviation of their daily data egress volume from CRM servers. Alert if a user's daily total exceeds 4 standard deviations above their moving average. Also, compare the user's daily egress to their functional peer group and flag if their total volume is in the top 99th percentile.",
              "Machine Learning: Apply a time series forecasting model (e.g., SARIMA) to the aggregate data egress volume from the CRM server infrastructure on an hourly basis. The model will learn the typical daily and weekly data transfer patterns. Generate an alert when the actual observed volume significantly exceeds the model's forecasted volume and its associated confidence interval."
            ]
          },
          {
            "description": "A non-interactive service account associated with the CRM application executes a process or accesses data inconsistent with its programmed function, such as spawning an interactive shell or enumerating database tables.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Database Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "CRM application and database servers, Active Directory, Centralized logging server collecting database audit logs.",
            "action": [
              "Symbolic: On CRM servers, create a rule to alert if a process running under a CRM service account's context spawns a child process associated with interactive use or reconnaissance, such as `cmd.exe`, `powershell.exe`, `whoami.exe`, `net.exe`, or `rundll32.exe` (via Windows Event ID 4688).",
              "Statistical: Using database audit logs or Windows Event ID 4663 (Object Access), profile the distinct set of database tables normally accessed by the CRM service account per hour. Alert if the count of unique tables accessed in an hour exceeds the 99th percentile of its historical activity, indicating enumeration.",
              "Machine Learning: Model the sequence of process executions performed by the CRM service account using a sequence analysis model like a Hidden Markov Model (HMM). Evaluate each new sequence of actions against the trained model. If the sequence has a very low probability of occurring based on the learned model of normal behavior, it indicates an anomaly that requires investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]