[
  {
    "information_requirement": "Is the adversary using trusted utilities like mshta.exe for defense evasion? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.005",
        "name": "Mshta",
        "evidence": [
          {
            "description": "An mshta.exe process initiates a network connection to an IP address or domain on a threat intelligence feed, or its command line specifies an HTA file with a known malicious hash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers; Network gateways and proxies; Threat Intelligence Platforms",
            "action": [
              "Create a SIEM rule that joins Windows Event ID 4688 process creation events (for mshta.exe) with Zeek conn.log records on the source IP within a 5-second window. Alert if the destination IP in the conn.log, or its resolved domain from Zeek dns.log, matches an IOC in your threat intelligence feed. Separately, for any .hta file in the command line, extract and match its hash against a malware hash database.",
              "For all domains contacted by mshta.exe (from Zeek dns.log), calculate the public suffix + 1 domain. Build a frequency table of these domains over a 30-day baseline. Alert on any domain that falls in the 99th percentile of rarity or is observed for the first time in the context of mshta.exe.",
              "Deploy a pre-trained domain scoring model (e.g., Gradient Boosting) to evaluate domains contacted by mshta.exe. Input features such as domain length, entropy, TLD, and age (from WHOIS lookups). Trigger an alert for any domain that receives a malicious probability score above a predetermined threshold (e.g., 0.85)."
            ]
          },
          {
            "description": "The command line for an mshta.exe process contains script protocol handlers (`vbscript:`, `javascript:`), remote file retrieval via `GetObject`, or embedded `data:text/html;base64` content.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers with command-line logging enabled",
            "action": [
              "Write a query to scan Windows Event ID 4688 process creation events for `ProcessName` 'mshta.exe'. Apply a regular expression to the `CommandLine` field to detect the presence of `javascript:`, `vbscript:`, `GetObject\\(\"script:`, `http://`, `https://`, or `data:text/html;base64,`. Generate an alert for any match.",
              "For all mshta.exe command lines, calculate the character entropy and total length. Establish a 30-day rolling baseline (mean, standard deviation) for these metrics. Alert when a new command line's entropy or length exceeds 3 standard deviations above the mean, indicating potential obfuscation.",
              "Train a logistic regression classifier using a labeled dataset of benign and malicious mshta.exe command lines. Engineer features including command-line length, character entropy, keyword counts (e.g., 'script', 'http'), and character n-gram frequencies. Use the deployed model to classify new mshta.exe executions in real-time and alert on those classified as malicious."
            ]
          },
          {
            "description": "An mshta.exe process is created by a parent process not typically associated with legitimate HTA execution, such as a Microsoft Office application, email client, or web browser.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, particularly user workstations",
            "action": [
              "Create a detection rule that triggers when the `ParentProcessName` in a Windows Event ID 4688 event for `mshta.exe` is one of the following: `winword.exe`, `excel.exe`, `powerpnt.exe`, `outlook.exe`, `wscript.exe`, `cscript.exe`, `chrome.exe`, `firefox.exe`, `msedge.exe`.",
              "Generate a frequency table of all parent-child process pairs where the child is `mshta.exe` over a 30-day period. Calculate the rarity of each parent process. Alert when a parent process is observed that falls below a 1% frequency threshold or has never been seen before in this parent-child relationship.",
              "Apply a clustering algorithm (e.g., DBSCAN) to process creation events involving mshta.exe. Use features such as parent process name, user context, and host name. After establishing clusters of normal activity, configure the system to alert on any new mshta.exe execution that is classified as a noise point or outlier."
            ]
          },
          {
            "description": "The command line of an mshta.exe process exhibits a length or character entropy that significantly deviates from a historically established baseline for the environment, suggesting embedded or obfuscated code.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers with command-line logging",
            "action": [
              "Using regular expressions, search mshta.exe command lines (Windows Event ID 4688) for long contiguous strings of non-standard characters, such as base64 (`[A-Za-z0-9+/=]{50,}`) or hexadecimal (`[0-9a-fA-F]{50,}`), which are indicative of embedded payloads.",
              "For each mshta.exe execution, calculate the Shannon entropy of its command line. Compare this value against a dynamically calculated 95th percentile from a 30-day rolling window of all mshta.exe command line entropies. Alert if the value exceeds this percentile.",
              "Implement an anomaly detection model using a trained autoencoder neural network. Feed benign mshta.exe command lines to the model for training. During operation, a high reconstruction error for a new command line signifies a deviation from normal patterns and should trigger an alert for analyst review."
            ]
          },
          {
            "description": "A network connection initiated by an mshta.exe process has an anomalous User-Agent, destination port, TLS fingerprint (JA3/JA3S), or exhibits periodic, 'heartbeat' beaconing behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, web proxies, and all enterprise endpoints",
            "action": [
              "Correlate mshta.exe executions (Windows Event ID 4688) with subsequent network traffic (Zeek http.log) from the same host. Alert if the `user_agent` field in the HTTP header is null, blank, or does not contain the expected 'Microsoft HTML Application host' string.",
              "For all network connections correlated with mshta.exe, profile the destination ports (from Zeek conn.log) and JA3/JA3S hashes (from Zeek ssl.log). Alert on connections using ports outside the top 98% of common ports (e.g., not 80, 443) or involving JA3/JA3S hashes that are new or have a prevalence of less than 1% across the enterprise.",
              "For a given source-destination pair initiated by mshta.exe, analyze the time deltas between consecutive connections in Zeek conn.log. Apply a time series analysis model (e.g., using Fast Fourier Transform) to detect highly regular, periodic intervals, which are a strong indicator of automated C2 beaconing. Alert on detection of a strong periodic signal."
            ]
          },
          {
            "description": "An mshta.exe process executes an HTA file from a non-standard or user-writable directory, such as a temp folder, download directory, or archive file.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers; File servers hosting user profiles or public shares",
            "action": [
              "Create a SIEM alert that triggers when an mshta.exe command line (from Windows Event ID 4688) contains a file path to an `.hta` file located in a suspicious directory. Use a regex to match paths containing `\\Temp\\`, `\\Downloads\\`, `\\AppData\\`, `\\Users\\Public\\`, or common archive utility paths like `\\AppData\\Local\\Temp\\Rar$`. ",
              "Query all mshta.exe command lines over the last 30 days to build a frequency distribution of directory paths where `.hta` files are executed. Flag any execution from a path that has not been seen before or accounts for less than 0.5% of historical executions.",
              "Train a one-class SVM (Support Vector Machine) using features derived from legitimate `.hta` file execution paths (e.g., path depth, directory names, presence of user profile). Use the model to identify and alert on new execution paths that fall outside the learned boundary of normal behavior, indicating a likely anomalous file location."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]