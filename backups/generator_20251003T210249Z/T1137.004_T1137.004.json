[
  {
    "information_requirement": "Is the adversary maintaining persistence using Outlook Home Pages? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1137.004",
        "name": "Outlook Home Page",
        "evidence": [
          {
            "description": "An outbound network connection from the 'OUTLOOK.EXE' process to a remote IP address or domain that matches an entry on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 3",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points (e.g., firewalls, proxies), DNS resolvers",
            "action": [
              "From host logs (Windows Event ID 3), identify network connections where the 'Image' is '...\\OUTLOOK.EXE'. Extract the 'DestinationIp' and 'DestinationHostname'. Correlate these values against a threat intelligence feed of known malicious IPs and domains. Generate an alert upon a match.",
              "For all network connections initiated by 'OUTLOOK.EXE', extract the destination FQDN. Calculate the public suffix + 1 (e.g., 'example.com' from 'sub.example.com'). Count the frequency of each domain across the enterprise over a 30-day baseline period. Alert on any connection from 'OUTLOOK.EXE' to a domain that falls into the bottom 5th percentile of frequency, indicating it is rarely visited by anyone in the organization.",
              "For each user, create a time-series model (e.g., ARIMA) of the hourly network connection count from their 'OUTLOOK.EXE' process, accounting for seasonality (e.g., time of day, day of week). Flag any user account where the observed connection count exceeds the model's predicted upper confidence interval, indicating an anomalous burst of network activity."
            ]
          },
          {
            "description": "A registry value modification within the `HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\<version>\\Outlook\\WebView\\` key path, where the 'URL' value is created or set to a new web address.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Citrix/VDI servers, Microsoft Exchange Servers",
            "action": [
              "Monitor for registry modification events (Windows Event ID 4657 or Sysmon Event ID 13) where the 'TargetObject' or 'ObjectName' contains `\\Outlook\\WebView\\` and the value name is 'URL'. Generate an alert if the 'ProcessName' or 'Image' is a script interpreter (e.g., 'powershell.exe', 'cscript.exe', 'mshta.exe') or is not a known trusted installer or patch management process.",
              "Across all endpoints, aggregate all processes that modify the `\\Outlook\\WebView\\` registry key path. Calculate the prevalence of each modifying process name (e.g., the percentage of endpoints where that process performed the action). Alert on modifications made by a process that is statistically rare across the enterprise (e.g., prevalence < 1%).",
              "Train a random forest classifier using features from registry modification events targeting `\\Outlook\\WebView\\`. Features should include: modifying process name, parent process name, file path of the modifying process, and time of day. Use labeled data from known benign activities (e.g., Office updates) and malicious activities (e.g., red team exercises) to train the model. Deploy the model to score and classify new modification events in real-time."
            ]
          },
          {
            "description": "Spawning of script interpreters or command shells by Outlook.exe containing command-line arguments indicative of malicious script execution or downloaders.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Citrix/VDI servers",
            "action": [
              "Monitor for process creation events (Windows Event ID 4688 or Sysmon Event ID 1) where the 'ParentProcessName' or 'ParentImage' is 'OUTLOOK.EXE'. Inspect the 'CommandLine' of the child process. Trigger an alert if the child process is a script interpreter (e.g., 'powershell.exe', 'cmd.exe', 'mshta.exe') AND the command line contains suspicious patterns such as 'DownloadString', '-enc', 'IEX', or 'http:'.",
              "For all child processes spawned by 'OUTLOOK.EXE', extract and analyze the command-line arguments. Calculate the Shannon entropy for each command-line string. Establish a baseline distribution of entropy scores for legitimate commands. Alert on any command line whose entropy score exceeds a high threshold (e.g., the 99th percentile), as this often indicates obfuscation or encoding.",
              "Vectorize the command-line arguments of processes spawned by 'OUTLOOK.EXE' using a TF-IDF (Term Frequency-Inverse Document Frequency) model. Use the resulting vectors to train a one-class SVM model on a baseline of known-benign command lines. Deploy the model to identify and alert on new command lines that are classified as outliers or anomalies."
            ]
          },
          {
            "description": "A network connection from the Outlook.exe process to a destination domain that is newly registered (e.g., within the last 30 days) or is associated with a dynamic DNS service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, DNS resolvers, Threat intelligence platforms (for domain enrichment)",
            "action": [
              "For each DNS query observed in 'Zeek dns.log' that corresponds to a connection from 'OUTLOOK.EXE', perform a real-time WHOIS lookup or query a domain enrichment service. Generate an alert if the domain's 'CreationDate' is less than 30 days old OR if the domain is hosted on a known dynamic DNS provider.",
              "For each user, maintain a historical set of unique domains contacted by their 'OUTLOOK.EXE' process over the last 90 days. For each new 24-hour period, create a set of domains contacted. Calculate the Jaccard similarity index between the daily set and the historical set. Alert if the similarity score drops below a user-specific threshold (e.g., < 0.2), indicating a significant shift in network destinations.",
              "For each user, train a one-class SVM model on network connection features from 'OUTLOOK.EXE'. Features should include destination port, protocol, data volume (bytes in/out), domain length, and number of subdomains. Use the trained model to score new connections and identify those that are anomalous compared to the user's established baseline of network behavior."
            ]
          },
          {
            "description": "The creation of a child process by the Outlook.exe parent process, where the child process executable is not on an established allowlist of expected applications (e.g., Word, Excel, browsers).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Citrix/VDI servers",
            "action": [
              "From process creation logs (Windows Event ID 4688 or Sysmon Event ID 1), filter for events where the parent process is 'OUTLOOK.EXE'. Maintain an explicit allowlist of legitimate child process names (e.g., 'WINWORD.EXE', 'EXCEL.EXE', 'msedge.exe', 'acrord32.exe'). Generate a high-severity alert for any child process created by Outlook that is not on this list.",
              "Across the enterprise, aggregate all parent-child process relationships where the parent is 'OUTLOOK.EXE'. For each unique child process name, calculate its prevalence (i.e., the percentage of endpoints on which it has been observed as a child of Outlook). Flag any parent-child relationship that falls below a rarity threshold (e.g., < 0.5% prevalence) for investigation.",
              "Use a clustering algorithm like DBSCAN on process creation events originating from 'OUTLOOK.EXE'. Create feature vectors for each event, including child process name, command-line length, and file path entropy. Normal, frequent activities (like opening attachments) will form dense clusters. The algorithm will automatically identify and flag outlier events that do not belong to any established cluster as anomalous and potentially malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]