[
  {
    "information_requirement": "Is the adversary collecting sensitive information from email services? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1114.002",
        "name": "Remote Email Collection",
        "evidence": [
          {
            "description": "A successful (e.g., Windows Event ID 4624, Azure AD SignInLogs) or failed (e.g., Windows Event ID 4625, Azure AD SignInLogs with specific error codes) authentication event to a mail server or cloud email service where the source IP address is present on a threat intelligence feed of known malicious IPs, anonymizing proxies, or TOR exit nodes.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log",
              "Azure AD SignInLogs",
              "O365 Unified Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., Active Directory Domain Controllers), Cloud Identity Providers (e.g., Azure AD), Mail Servers (e.g., on-prem Exchange), Network Egress Points, VPN Concentrators",
            "action": [
              "Symbolic Logic: Join authentication logs (e.g., Windows Event ID 4624/4625 `IpAddress` field, Azure AD SignInLogs `ipAddress` field) with a Cyber Threat Intelligence (CTI) feed of known malicious IP addresses. Generate an alert for any authentication attempt where the source IP address matches an entry on the CTI list.",
              "Statistical Method: For each login that matches a CTI feed, enrich the source IP with ASN and geolocation data using Zeek conn.log or an external service. Calculate the historical frequency of the ASN and country pair for the specific user over the last 90 days. If the pair is in the bottom 5th percentile of occurrences for that user, escalate the alert priority, as this indicates both a known malicious source and anomalous origin.",
              "Machine Learning: Train a binary classification model (e.g., XGBoost, Random Forest) on historical login data, with events labeled as 'malicious' if they matched a CTI feed at the time. Engineer features such as source IP geolocation (country, city), ASN, time of day, day of week, user agent string, and whether the login used MFA. Use the model to predict the likelihood of a new, unseen login being malicious, even if its IP is not yet on a CTI feed."
            ]
          },
          {
            "description": "Observed network traffic containing HTTP User-Agent strings (from Zeek http.log or cloud proxy logs) or specific API call sequences (from O365 Unified Audit Log `Operations` field) that match signatures of known email collection tools like MailSniper or Ruler.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "O365 Unified Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mail Servers (e.g., on-prem Exchange), Web Application Firewalls (WAFs), Network Egress Points, Cloud Application Security Broker (CASB), Cloud Mail Tenant (e.g., O365, Google Workspace)",
            "action": [
              "Symbolic Logic: Apply a set of regular expression rules to the `user_agent` field in Zeek http.log and the `UserAgent` field in O365 Unified Audit Log records to detect known tool signatures (e.g., 'MailSniper', 'ruler', 'PowerShell'). Alert on any match.",
              "Statistical Method: For each user, calculate the Shannon entropy of their User-Agent strings over a 30-day rolling window. A sudden drop in entropy, indicating the repeated use of a single, non-browser User-Agent, should trigger an investigation. Additionally, flag any User-Agent string that is present in less than 0.1% of all organizational sessions.",
              "Machine Learning: Use a sequence analysis model (e.g., n-gram analysis or Hidden Markov Model) on the sequence of `Operation` values from the O365 Unified Audit Log for a given user session. Train the model on benign sessions to learn normal sequences of operations (e.g., 'MailItemOpen', 'FolderBind', 'Send'). Apply the model to new sessions to detect anomalous sequences that deviate from normal behavior and may represent automated tool activity."
            ]
          },
          {
            "description": "A successful authentication event (e.g., Windows Event ID 4624, Azure AD SignInLogs) for a user account that deviates from its established multi-faceted baseline, where the deviation includes at least two of the following: source geolocation, time of day, login frequency, or sequential login velocity ('impossible travel').",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Azure AD SignInLogs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., Active Directory Domain Controllers), Cloud Identity Provider (e.g., Azure AD), VPN Concentrators, Network Egress Points",
            "action": [
              "Symbolic Logic: For each new successful login (e.g., Windows Event ID 4624, Azure AD SignInLogs), retrieve its timestamp and source IP. Geocode the IP to get latitude/longitude. Compare these with the timestamp and location of the previous successful login for the same user. If the calculated speed `(distance / time_delta)` exceeds a physically impossible threshold (e.g., 1000 km/h or 600 mph), trigger an 'impossible travel' alert.",
              "Statistical Method: For each user, build a historical profile using a 30-day lookback window. The profile should include: 1) a set of common source countries/ASNs, and 2) a distribution (mean, stddev) of login hours. For each new login, score deviations from this baseline (e.g., +1 for a new country, +1 for a login hour > 2 standard deviations from the user's mean). An aggregate score exceeding a threshold (e.g., 2) triggers an alert.",
              "Machine Learning: Apply a clustering algorithm (e.g., DBSCAN) to user login data. Engineer features such as latitude/longitude from the source IP, and time of day (converted to a circular format, e.g., using sin/cos transformations of the hour). The algorithm will group 'normal' logins into clusters for each user. Any new login that is not assigned to a cluster (i.e., flagged as noise by DBSCAN) is considered an anomaly and should be investigated."
            ]
          },
          {
            "description": "A user's session to a known mail service (identified via Zeek conn.log or cloud logs) where the volume of data egressing from the service to the client (`resp_bytes` in Zeek) or the number of items accessed (e.g., `MailItemsAccessed` in O365) significantly exceeds the user's established historical baseline for a single session or time window.",
            "data_sources": [
              "Zeek conn.log",
              "O365 Unified Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mail Servers (e.g., on-prem Exchange), Network Egress Points, Cloud Tenant (e.g., O365, Google Workspace)",
            "action": [
              "Symbolic Logic: For sessions involving mail protocols (IMAP/S, POP3/S, MAPI), create a rule that alerts if `resp_bytes` in a single Zeek conn.log entry exceeds a static threshold (e.g., 1 GB). Additionally, create a rule that alerts if the count of `MailItemsAccessed` operations for a single user in the O365 Unified Audit Log exceeds a threshold (e.g., 500) within a 10-minute window.",
              "Statistical Method: For each user, calculate the 95th percentile of their per-session data volume (`resp_bytes` in Zeek conn.log) to mail services over the last 30 days. Trigger an alert if a new session's data volume for that user exceeds this dynamically calculated threshold. Similarly, calculate the 95th percentile for the number of `MailItemsAccessed` operations per hour for each user and alert on breaches.",
              "Machine Learning: For each user, model their daily aggregate data download volume from mail services as a time series. Use a forecasting model (e.g., SARIMA, Prophet) to predict the expected volume for the next 24-hour period, including a prediction interval. If the actual observed volume exceeds the upper bound of the 95% prediction interval, flag it as a volumetric anomaly."
            ]
          },
          {
            "description": "A single user session to a mail service exhibiting characteristics of non-interactive, programmatic access, such as an abnormally high request rate or an unnaturally low variance in inter-request timing, when compared to a baseline of normal human-driven activity.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "O365 Unified Audit Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mail Servers (e.g., on-prem Exchange), Web Application Firewalls (WAFs), Cloud Tenant (e.g., O365, Google Workspace)",
            "action": [
              "Symbolic Logic: Within a single session to a webmail service (identified by a session ID in logs), count the number of distinct requests. If the count exceeds a fixed threshold (e.g., 200 requests in 10 minutes), trigger an alert. For O365, if the count of `Search-Mailbox` or `New-MailboxExportRequest` operations from a non-administrator account exceeds 1 in a 24-hour period, trigger an alert.",
              "Statistical Method: For a given session (e.g., grouped by source IP, destination IP, destination port, and a time window in Zeek conn.log), calculate the time deltas between consecutive packets or requests. Calculate the standard deviation of these time deltas. A standard deviation in the lowest 1st percentile across all user sessions suggests automated activity and should be investigated.",
              "Machine Learning: Train a supervised classification model (e.g., Gradient Boosting) to distinguish between 'human' and 'bot' sessions. Engineer session-level features such as: total request count, session duration, mean and standard deviation of inter-request times, and entropy of requested URLs or API calls. Score new sessions in real-time and alert on those classified as 'bot' with high confidence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]