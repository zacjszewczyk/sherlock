[
  {
    "information_requirement": "Has the adversary executed commands using cloud APIs?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.009",
        "name": "Cloud API",
        "evidence": [
          {
            "description": "Execution of a cloud CLI tool (e.g., aws.exe, az.exe) where command-line arguments or API call parameters contain atomic indicators, such as known malicious IP addresses or domains from threat intelligence feeds.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "AWS CloudTrail",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations, administrator jump boxes, CI/CD servers, cloud control plane.",
            "action": [
              "Create a SIEM rule to monitor Windows Event ID 4688 and cloud provider audit logs. The rule should trigger when a process name matches 'aws.exe', 'az.exe', or 'gcloud.exe', and the associated command-line arguments contain an IP address, domain, or resource name present in the organization's threat intelligence feeds.",
              "For all cloud CLI executions captured in Windows Event ID 4688, parse the command-line arguments. Maintain a 30-day rolling frequency count of each unique argument. Alert on any execution containing an argument that falls below a rarity threshold, such as the 5th percentile or having been seen fewer than 5 times enterprise-wide.",
              "Develop and deploy a classification model (e.g., Gradient Boosting) trained on a labeled dataset of benign and malicious cloud CLI commands. Engineer features from the command string, such as length, character entropy, ratio of special characters, presence of sensitive keywords ('delete', 'secret', 'policy'), and the statistical rarity of its arguments. Apply the model in real-time to generate a maliciousness probability score, and alert when the score exceeds a predefined confidence threshold."
            ]
          },
          {
            "description": "Execution of a specific sequence or combination of cloud API calls or CLI commands indicative of a known attack pattern, such as reconnaissance (e.g., 'iam:ListUsers'), followed by credential access (e.g., 'secretsmanager:GetSecretValue') or defense evasion (e.g., 'cloudtrail:DeleteTrail').",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider control plane (e.g., AWS Management Console, Azure Portal), CI/CD pipeline runners, administrator workstations.",
            "action": [
              "Create a SIEM correlation rule that triggers when a single user identity executes a sequence of high-risk API calls within a 15-minute window. The sequence should match known TTPs, such as: 1. A reconnaissance call ('iam:List*', 'ec2:Describe*'), followed by 2. A credential access call ('secretsmanager:GetSecretValue', 's3:GetObject'), followed by 3. A defense evasion call ('cloudtrail:StopLogging', 'guardduty:DeleteDetector').",
              "For each user identity, create a 30-day rolling baseline profile of API call categories (e.g., 'Read', 'Write', 'List', 'Permissions'). Calculate the historical probability distribution of these categories for each user. Alert when a user's activity in a 1-hour window shows a statistically significant deviation from their baseline distribution, measured using a Chi-Squared goodness-of-fit test.",
              "Model user sessions as sequences of API calls from cloud audit logs. Use a sequence-based anomaly detection model, such as a Recurrent Neural Network (RNN) or a Markov model, trained on historical benign session data. The model learns common transitions between API calls. Alert when a user executes a sequence of API calls that the model flags as having a low probability of occurring."
            ]
          },
          {
            "description": "Execution of a cloud CLI process where the context is anomalous, such as being initiated by a user account not in a cloud administrator group, spawned from an unusual parent process (e.g., Microsoft Word), or running from a non-standard file path (e.g., C:\\Users\\Public\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Active Directory security logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, application servers, developer workstations, Domain Controllers.",
            "action": [
              "Create a SIEM rule that monitors Windows Event ID 4688 for process creation of 'aws.exe', 'az.exe', or 'gcloud.exe'. The rule triggers if EITHER: 1. The executing user account is not a member of a pre-defined 'Cloud Admins' Active Directory group, OR 2. The parent process name is not on an allowlist (e.g., 'powershell.exe', 'cmd.exe', 'explorer.exe', 'code.exe').",
              "Analyze Windows Event ID 4688 logs over a 90-day period to build a frequency table of parent-child process relationships for cloud CLIs across the enterprise. Alert on any new cloud CLI execution where the parent-child relationship has never been seen before or falls in the lowest 5th percentile of occurrence frequency.",
              "Train a One-Class SVM anomaly detection model on host-based execution context features from Windows Event ID 4688 logs. Use features such as the user's group memberships, parent process name, command-line length, and the CLI's file path. The model will create a boundary representing normal execution context. Flag any new execution that the model classifies as an outlier."
            ]
          },
          {
            "description": "A host exhibits a statistically significant increase in either the count of cloud CLI process executions or the volume of outbound network connections to known cloud provider API endpoints, when compared to its own historical baseline.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, individual host network interfaces, and host-level process monitoring.",
            "action": [
              "Create a SIEM rule that triggers if, for a single host, EITHER: 1. The count of cloud CLI process creations from Windows Event ID 4688 exceeds 50 in 10 minutes, OR 2. The count of outbound TCP connections to known cloud API FQDNs on port 443 from Zeek conn.log exceeds 1000 in 10 minutes.",
              "For each host, ingest Windows Event ID 4688 and Zeek conn.log data to create a 30-day rolling baseline of hourly API call volume. Profile this baseline by hour-of-day and day-of-week. Generate an alert if a host's current hourly activity exceeds 3 standard deviations above the mean for that specific time slot.",
              "For each high-value host (e.g., developer workstation, CI/CD server), build a time-series forecasting model (e.g., Prophet, LSTM) based on its historical API call volume. The model will predict the expected volume for the next 15-minute interval with a confidence band. Generate an alert if the actual observed volume exceeds the upper bound of the model's prediction interval."
            ]
          },
          {
            "description": "A sequence of host-based events originating from a single host within a short time window (e.g., under 5 minutes) that follows a 'download-execute-API call' pattern, suggesting the staging and execution of a malicious script.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, public-facing web servers, CI/CD servers, network file transfer analysis points.",
            "action": [
              "Create a SIEM correlation rule that triggers when the following events originate from the same host IP within a 5-minute window: 1. A file download event is observed (Zeek files.log) or a process creation for 'curl.exe' or 'bitsadmin.exe' is logged (Windows Event ID 4688). 2. A scripting engine process is created (e.g., 'powershell.exe', 'python.exe'). 3. A cloud CLI process is created ('aws.exe', 'az.exe').",
              "For each host, calculate the Shannon entropy of the set of unique process names observed in a rolling 5-minute window from Windows Event ID 4688 data. Establish a baseline entropy score for each host. Alert when a host's process entropy score abruptly spikes above its 95th percentile, indicating an unusual variety of processes being executed.",
              "Model host activity as a sequence of event types (e.g., 'file_download', 'powershell_execution', 'aws_cli_execution'). Train a sequence-based anomaly detection model, such as an LSTM autoencoder, on benign event sequences. Feed new sequences from hosts into the model; an alert is generated if the reconstruction error for a sequence is high, indicating the model has not seen this pattern before and it is likely anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]