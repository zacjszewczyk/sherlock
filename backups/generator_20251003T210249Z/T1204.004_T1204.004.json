[
  {
    "information_requirement": "Has the adversary gained execution on an enterprise host via user-initiated copy and paste? (TA0002 - Execution)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1204.004",
        "name": "Malicious Copy and Paste",
        "evidence": [
          {
            "description": "A process creation event for a command-line interpreter (e.g., powershell.exe, cmd.exe) is observed, and the associated command line contains a known malicious indicator of compromise (IOC) such as a domain, IP address, or file hash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer endpoints, Administrative jump boxes, Domain Controllers",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) for command lines containing values from threat intelligence feeds (malicious domains, IPs, file hashes). Trigger a high-severity alert for any match.",
              "Statistical: For each interpreter process creation, extract any domain names from the command line. Join with DNS query logs (Zeek dns.log) to identify subsequent DNS requests from the source host within 60 seconds. Calculate the enterprise-wide request frequency for the resolved domain over the past 30 days. Flag any execution leading to a DNS request for a domain in the bottom 5th percentile of frequency as suspicious.",
              "Machine Learning: Apply a pre-trained NLP classification model to all captured command-line strings. The model should be trained on features like character n-grams, string length, entropy, and keyword presence (e.g., 'IEX', 'DownloadString'). Generate an alert for any command classified as malicious with a confidence score above a defined threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "A command-line interpreter process executes a command string that includes patterns associated with malicious 'Living Off the Land' techniques, such as PowerShell download cradles, certutil abuse, or other suspicious script execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly those with PowerShell v5+ script block logging enabled",
            "action": [
              "Symbolic: Using regular expressions, scan all process command lines (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104) for known malicious patterns. Patterns should include but are not limited to: 'IEX.*New-Object.*Net\\.WebClient', 'certutil\\.exe.*-urlcache.*-f', 'mshta\\.exe javascript:', and 'rundll32\\.exe.*javascript:'. Trigger an alert on any match.",
              "Statistical: For common interpreters (powershell.exe, cmd.exe, wscript.exe), calculate the Shannon entropy of the command-line string. Establish a per-process baseline mean and standard deviation for entropy over a 30-day rolling window. Flag any command whose entropy score is more than 3 standard deviations above the mean for that interpreter, as this often indicates obfuscation or encoding.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) to monitor the hourly frequency of specific high-risk LOLBAS patterns (e.g., 'certutil -urlcache') across the enterprise. An alert should be generated when the observed frequency significantly exceeds the model's forecast (e.g., outside the 99% confidence interval), indicating a potential coordinated campaign."
            ]
          },
          {
            "description": "A command-line interpreter process (e.g., powershell.exe) is created as a child of a browser, email client, or document reader, and the command line itself is anomalously long or complex.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances, Remote Desktop Session Hosts",
            "action": [
              "Symbolic: Create a detection rule that triggers when a process creation event (Windows Event ID 4688) shows a parent process of 'chrome.exe', 'msedge.exe', 'firefox.exe', 'outlook.exe', or 'acrord32.exe' spawning a child process of 'cmd.exe', 'powershell.exe', or 'wscript.exe' with a command-line length greater than 1024 characters.",
              "Statistical: For each user-host pair, establish a baseline of command-line lengths for interpreter processes spawned by browsers or document readers. Using a 98th percentile threshold for this specific parent-child context, flag any new command-line execution that exceeds this length. This user-and-context-specific baseline reduces false positives from legitimate power users.",
              "Machine Learning: Utilize an anomaly detection model like Isolation Forest on a feature set describing parent-child process events. Features should include: parent process name, child process name, command-line length of child, command-line entropy of child, and the time delta in seconds between parent and child creation. Train the model on benign activity and use it to score new events; scores indicating high anomaly require investigation."
            ]
          },
          {
            "description": "A process creation event for a command-line interpreter is immediately followed by an outbound network connection from the same host to a destination that is rare for the host or the enterprise.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, All Windows endpoints and servers",
            "action": [
              "Symbolic: Correlate process creation logs (Windows Event ID 4688) with network connection logs (Zeek conn.log) on the same host within a 5-second window. Trigger an alert if an interpreter process (e.g., 'powershell.exe', 'curl.exe', 'certutil.exe') initiates a connection to a destination IP or domain present on a threat intelligence feed of known C2 servers.",
              "Statistical: For each host, maintain a historical set of destination domains contacted over the last 90 days from Zeek dns.log. When an interpreter process initiates a new network connection, check if the destination domain is new for that host. If it is new, calculate its global prevalence (number of other hosts that have contacted it). Flag connections to domains that are both new to the host and have a global prevalence of less than 1% of hosts.",
              "Machine Learning: Apply a clustering algorithm (e.g., DBSCAN) to network connection metadata originating from interpreter processes. Use features such as destination port, protocol, JA3/JA3S hash, and data volume (bytes_out/bytes_in). Identify and label clusters of common activity (e.g., connections to internal update servers). Flag any new connection that is marked as a 'noise' point by the algorithm (i.e., does not fit into any known cluster) as a potential anomaly."
            ]
          },
          {
            "description": "The 'explorer.exe' process spawns a child process whose command line has characteristics (e.g., excessive length, high entropy, presence of network indicators) inconsistent with manual entry into the Windows Run or File Explorer dialogs.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Terminal servers, Remote Desktop servers",
            "action": [
              "Symbolic: Create a detection rule for child processes of 'explorer.exe' where the command line contains suspicious substrings rarely typed by users, such as 'powershell -e' (encoded command), 'http://', 'https://', 'IEX(', or any Base64-encoded string pattern. Trigger an alert on a match.",
              "Statistical: For all child processes spawned by 'explorer.exe', calculate the command-line length. Use the Interquartile Range (IQR) method to identify statistical outliers. Flag any command where the length is greater than the third quartile (Q3) plus 1.5 times the IQR. This identifies commands that are significantly longer than the typical, manually-typed command.",
              "Machine Learning: Train a One-Class Support Vector Machine (OC-SVM) model using features from known-benign commands initiated by 'explorer.exe'. Features should include command-line length, character entropy, count of special characters (e.g., '&, |, $, %'), and a boolean for presence of a URL. Use the trained model to classify new commands; any command identified as an 'outlier' by the model is highly suspicious of being pasted."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]