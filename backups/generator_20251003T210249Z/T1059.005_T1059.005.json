[
  {
    "information_requirement": "Is an adversary leveraging Visual Basic for code execution?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.005",
        "name": "Visual Basic",
        "evidence": [
          {
            "description": "A Windows Script Host process (wscript.exe or cscript.exe) initiates an outbound network connection to a destination IP address, domain, or URL that is present on an active threat intelligence feed of known command-and-control (C2) servers or malicious sites.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 5156",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Network Egress Points",
            "action": [
              "Using a SIEM, join process creation events (Sysmon Event ID 1) with network connection events (Sysmon Event ID 3) on the ProcessGuid. For network connections where the Image is 'wscript.exe' or 'cscript.exe', check if the DestinationIp or DestinationHostname matches any indicator in the organization's C2 threat intelligence feed. Generate a high-severity alert upon a match.",
              "From Zeek dns.log and conn.log data, filter for connections originating from hosts where 'wscript.exe' or 'cscript.exe' recently executed. For each destination domain, calculate its prevalence across the enterprise over the last 30 days. Separately, calculate the Shannon entropy of the domain label. Alert if a domain's prevalence is below the 5th percentile (i.e., rare) and its entropy is above the 95th percentile of all observed domains, indicating a likely DGA-generated domain.",
              "Apply a pre-trained classification model (e.g., a Gradient Boosting Machine) to score each network connection from a script host. The model should use features such as destination port, protocol, bytes sent/received (from Zeek conn.log), connection duration, destination IP reputation, and domain features (age, TLD, length). Alert on any connection classified as malicious with a confidence score exceeding a predefined threshold (e.g., 0.90)."
            ]
          },
          {
            "description": "A Windows Script Host process (wscript.exe or cscript.exe) is executed with command-line arguments containing high-entropy strings, base64-encoded content, or keywords associated with file-less execution, remote code fetching, or COM object instantiation (e.g., CreateObject, ADODB.Stream, MSXML2.XMLHTTP).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Web Servers",
            "action": [
              "In process creation events (Sysmon Event ID 1), search the CommandLine field for processes 'wscript.exe' or 'cscript.exe'. Apply regular expressions to detect: 1) execution flags like '//B' (batch mode) or '//E:VBScript', 2) COM object creation like 'CreateObject(\"WScript.Shell\")', and 3) download cradles using 'MSXML2.XMLHTTP' or 'ADODB.Stream'. Generate an alert upon any match.",
              "For each 'wscript.exe' or 'cscript.exe' execution event (Sysmon Event ID 1), calculate the Shannon entropy and length of the CommandLine field. Establish a baseline for these metrics per host and across the enterprise. Generate an alert if a command line's entropy exceeds the 95th percentile of the baseline OR its length is greater than 3 standard deviations above the mean length, suggesting obfuscation or an embedded script.",
              "Utilize a trained NLP-based classifier (e.g., using TF-IDF with Logistic Regression) to analyze the CommandLine field of script host executions. The model should be trained on features derived from the text, such as n-grams, keyword presence, and string characteristics. Score each new command line in real-time and alert on any instance classified as malicious with a high confidence score (e.g., > 0.85)."
            ]
          },
          {
            "description": "A Microsoft Office parent process (e.g., winword.exe, excel.exe, powerpnt.exe, outlook.exe, msaccess.exe) creates a child process identified as a Windows Script Host (wscript.exe or cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Email Gateways, File Servers",
            "action": [
              "Create a SIEM rule to trigger on process creation events (Sysmon Event ID 1) where ParentImage is one of 'winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe', or 'msaccess.exe' and Image is 'wscript.exe' or 'cscript.exe'. Since this is highly anomalous, generate a high-severity alert for any occurrence.",
              "Maintain a historical baseline of all parent-child process relationships observed in the environment. For each user, track the frequency of the 'Office App -> Script Host' relationship. Generate an alert if this specific parent-child process pair is observed for a user for the first time, or if the count for a single host exceeds a low absolute threshold (e.g., > 1 in a 24-hour period), as this behavior is almost always malicious.",
              "Apply a pre-trained process tree anomaly detection model (e.g., an isolation forest or autoencoder) to all process creation events. The model should be trained on features including ParentImage, Image, User, and CommandLine. The specific 'Office App -> Script Host' event sequence will be flagged as a high-scoring anomaly by the model, triggering an alert for investigation."
            ]
          },
          {
            "description": "A file with a .vbs or .vbe extension is written to a non-standard script directory (e.g., %APPDATA%, %TEMP%, C:\\Users\\Public\\), followed by its execution via wscript.exe or cscript.exe within 5 minutes of the file write.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Temporary File Directories, User Profile Directories",
            "action": [
              "Using a SIEM, correlate Sysmon Event ID 11 (FileCreate) events where TargetFilename ends in '.vbs' or '.vbe' and the path is within a user-writable directory (e.g., 'C:\\Users\\*') with Sysmon Event ID 1 (ProcessCreate) events. Join on the filename and host. Generate an alert if a process execution event for the same file path occurs within 2 minutes of the file creation event.",
              "Aggregate all 'wscript.exe' and 'cscript.exe' executions from Sysmon Event ID 1 events over 30 days. Build a frequency table of the parent directories from which '.vbs' or '.vbe' files are executed. Alert when a script is executed from a directory path that falls below the 1st percentile of frequency (i.e., is an extremely rare location), such as a user's Downloads folder or a temporary internet files directory.",
              "Apply a sequence analysis model (e.g., a Hidden Markov Model) trained on event logs to identify anomalous event chains. An alert should be generated when the model assigns a very low probability to a sequence like '(outlook.exe) -> (FileCreate: invoice.vbs) -> (ProcessCreate: wscript.exe invoice.vbs)', indicating a deviation from normal learned behavior."
            ]
          },
          {
            "description": "The vbscript.dll module is loaded (Image Load event) by any process other than standard, allow-listed script interpreters (e.g., wscript.exe, cscript.exe, mshta.exe), indicating potential in-memory execution or a custom host process.",
            "data_sources": [
              "Sysmon Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, System32 Directory",
            "action": [
              "Create a SIEM rule to monitor Sysmon Event ID 7 (ImageLoaded) events where ImageLoaded ends with 'vbscript.dll'. Maintain an explicit allow-list of Image (the loading process) names, such as 'wscript.exe', 'cscript.exe', 'mshta.exe', and 'iexplore.exe'. Generate a high-severity alert if the loading Image is not on this list.",
              "From Sysmon Event ID 7 data, create a frequency count of all process names (Image field) that load 'vbscript.dll' across the enterprise over a 30-day rolling window. Alert when a process that has not been seen loading this DLL in the baseline period, or a process that is present on fewer than 1% of endpoints, loads 'vbscript.dll'.",
              "Employ an unsupervised clustering algorithm (e.g., DBSCAN) on Sysmon Event ID 7 data. Use features such as the loading process name, the process's parent, the user context, and the loaded module's name. Legitimate activity will form dense clusters. Configure the model to alert on any 'vbscript.dll' load event that is classified as a noise point (an outlier), indicating it does not fit any established pattern of normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]