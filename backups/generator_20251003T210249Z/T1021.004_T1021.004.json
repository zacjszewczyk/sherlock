[
  {
    "information_requirement": "Has the adversary moved laterally through the network using SSH?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1021.004",
        "name": "SSH",
        "evidence": [
          {
            "description": "An SSH connection is established using a client software version string from the SSH handshake or a server host key hash that matches a known malicious signature.",
            "data_sources": [
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic inspection points (e.g., Zeek sensors), Bastion hosts, Internet gateways",
            "action": [
              "Symbolic: Maintain a threat intelligence feed of known-bad SSH client version strings (e.g., 'PuTTY_KiTTY') and host key hashes. Create a query to scan the 'client' and 'host_key' fields in Zeek ssh.log for exact matches and generate an alert.",
              "Statistical: Periodically, calculate the frequency of all 'client' strings observed in Zeek ssh.log across the enterprise over a 30-day rolling window. Flag any client version that falls below a rarity threshold (e.g., present in <0.01% of connections or seen on <3 hosts) for analyst review.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on a labeled dataset of known-good and known-bad SSH client strings using features like string length, character entropy, and n-grams. Deploy the model to score new, unseen version strings in real-time; a high maliciousness score triggers an alert."
            ]
          },
          {
            "description": "An SSH client process is executed with command-line arguments indicative of automation or evasion, such as those that bypass host key verification, disable interactive prompts, or specify null/non-standard configuration files.",
            "data_sources": [
              "Windows Event ID 4688",
              "Linux auditd logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows and Linux endpoints and servers, especially Domain Controllers, Developer Workstations, and management servers",
            "action": [
              "Symbolic: Create a detection rule using regular expressions to search process creation events (Windows Event ID 4688 'CommandLine', Linux auditd 'a1'/'a2' fields) for executions of 'ssh.exe', 'plink.exe', or 'ssh' with suspicious arguments like '-o StrictHostKeyChecking=no', '-o UserKnownHostsFile=/dev/null', or '-batch'. Alert on any match.",
              "Statistical: For each user, establish a baseline of normally used SSH command-line arguments and their frequencies over a 90-day period. For each new SSH execution, calculate a risk score based on the rarity of its arguments for that user (e.g., using inverse document frequency). An execution with a cumulative score exceeding the 99th percentile for that user triggers an alert.",
              "Machine Learning: Vectorize SSH command lines (e.g., using TF-IDF on arguments) from process creation logs. Use a clustering algorithm (e.g., DBSCAN) to automatically group command patterns. Mark clusters that do not contain known-good, administrator-approved scripts as suspicious and alert on any new command line that falls into one of these outlier clusters."
            ]
          },
          {
            "description": "A successful SSH authentication establishes a new connection pathway (user-to-host or host-to-host) not seen within a defined historical baseline, or originates from a geolocated IP address that is anomalous for the authenticating user.",
            "data_sources": [
              "Zeek ssh.log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., Active Directory), Critical servers (Linux/Windows), Network choke points, VPN concentrators, Zeek sensors",
            "action": [
              "Symbolic: Maintain a state table or lookup file of all successful '(user, destination_host)' SSH connection pairs observed over the last 30 days. Alert on any new successful SSH login (e.g., Windows Event ID 4624 Logon Type 3, or successful auth in Zeek ssh.log) that forms a pair not present in the state table.",
              "Statistical: For each user account, model their typical source IP geolocation (Country, ASN) and login time-of-day/day-of-week using historical authentication logs. For each new login, assign a risk score based on deviations (e.g., +5 for new country, +3 for new ASN, +2 for login between 12 AM and 5 AM local time). Flag any login event with a total risk score exceeding a percentile-based threshold (e.g., 98th percentile of all user scores).",
              "Machine Learning: Apply a time series forecasting model (e.g., Prophet or ARIMA) to the hourly count of 'first-seen' SSH pathways (new user-host pairs). An alert is generated when the observed count of new pathways in a given hour significantly exceeds the forecast's upper confidence interval, indicating a potential automated lateral movement campaign."
            ]
          },
          {
            "description": "A single source host or user account initiates successful SSH connections to a number of distinct destination hosts that is statistically anomalous within a short time window.",
            "data_sources": [
              "Zeek ssh.log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, Server subnets, Data center core switches, Zeek sensors monitoring east-west traffic",
            "action": [
              "Symbolic: Create a streaming rule that alerts if a single source IP or user account (from Zeek conn.log or Windows Event ID 4624) establishes successful SSH connections (port 22) to more than a fixed number of distinct destination IPs (e.g., >10) within a 15-minute window.",
              "Statistical: In a 1-hour sliding window, group successful SSH connections by source IP/user and count the number of distinct destinations. Calculate the mean and standard deviation of this count across all sources for that window. Flag any source IP/user whose distinct destination count exceeds 3 standard deviations above the mean or the 99th percentile for that window.",
              "Machine Learning: Model SSH connections as a directed graph where nodes are hosts and edges are connections. Use a community detection algorithm (e.g., Louvain Modularity) to identify clusters of activity. A subgraph representing a single source connecting to many destinations (a star-shaped community) with a high centrality score for the source node is indicative of a spray attack and should be flagged for review."
            ]
          },
          {
            "description": "An SSH session is used for port forwarding, or exhibits data volume and duration characteristics that are statistical outliers, consistent with data tunneling rather than a typical interactive session.",
            "data_sources": [
              "Zeek ssh.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic inspection points (e.g., Zeek sensors), DMZ, Internet gateways, internal network taps",
            "action": [
              "Symbolic: Create an alert for any SSH session recorded in Zeek ssh.log where the 'fwd_requested' field is 'T' or 'remote_fwd_requested' is 'T'. Correlate the session's unique ID (uid) with Zeek conn.log to identify the specific traffic being tunneled and enrich with threat intelligence on the destination.",
              "Statistical: For all completed SSH sessions (from Zeek conn.log where service is 'ssh'), calculate the total bytes transferred ('orig_bytes' + 'resp_bytes') and the 'duration'. Create a 2D scatter plot of these values and flag sessions that are outliers in both dimensions (e.g., in the top 5th percentile for both volume and duration), as this is characteristic of bulk data transfer, not interactive use.",
              "Machine Learning: Train a time series anomaly detection model, such as a Long Short-Term Memory (LSTM) Autoencoder, on the byte-per-second traffic patterns of legitimate interactive SSH sessions. Feed real-time session traffic data (bytes transferred per second) into the model; a high reconstruction error score indicates a deviation from normal interactive patterns, such as the steady, high-throughput flow of a tunneled file transfer or RDP session."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]