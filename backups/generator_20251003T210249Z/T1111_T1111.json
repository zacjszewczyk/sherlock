[
  {
    "information_requirement": "Is the adversary attempting to intercept or bypass multi-factor authentication mechanisms to gain credentialed access?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1111",
        "name": "Multi-Factor Authentication Interception",
        "evidence": [
          {
            "description": "An endpoint initiates a connection to a domain or IP address that is a confirmed indicator of Adversary-in-the-Middle (AiTM) phishing infrastructure, often in the context of an authentication attempt.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors, DNS resolvers, and web proxies",
            "action": [
              "Symbolic: Correlate Zeek dns.log queries, http.log host headers, and conn.log destination IPs against a high-confidence, frequently updated threat intelligence feed of domains and IPs associated with AiTM phishing frameworks (e.g., Evilginx2, Modlishka). Generate a high-severity alert on any match.",
              "Statistical: For domains not on a threat intelligence feed, calculate the entropy and character frequency of requested subdomains in Zeek dns.log. Flag domains with high entropy or character distributions that deviate significantly (e.g., > 3 standard deviations) from the baseline of benign traffic, as this can indicate algorithmically generated phishing subdomains.",
              "Machine Learning: Utilize a pre-trained classification model (e.g., random forest) that uses features from Zeek logs (SSL certificate details from ssl.log, DNS record age from dns.log, IP ASN from conn.log) to predict the likelihood of a domain being an AiTM phishing site. Escalate domains with a prediction score above a calibrated threshold (e.g., 0.90) for analyst review."
            ]
          },
          {
            "description": "Observed network traffic to an authentication portal exhibits client-side artifacts, such as specific User-Agent strings or TLS JA3/JA3S hashes, that are known fingerprints of AiTM phishing toolkits like Evilginx2 or Modlishka.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway network sensors and web proxies",
            "action": [
              "Symbolic: Create and maintain a ruleset to match specific JA3/JA3S hashes, User-Agent strings, and HTTP header combinations known to be unique to AiTM proxies like Evilginx2 against Zeek ssl.log and http.log records. Alert on any exact match.",
              "Statistical: Profile the frequency of all JA3 hashes and User-Agent strings across the enterprise. Identify JA3 hashes and User-Agents that are rare (e.g., seen on fewer than 0.1% of endpoints) and appear in conjunction with logins to corporate SSO pages. A rare fingerprint accessing a sensitive resource is a statistical anomaly worth investigating.",
              "Machine Learning: Train a time-series anomaly detection model (e.g., LSTM) on the sequence of HTTP headers for each session directed at authentication portals. The model learns the normal order and presence of headers. Flag sessions that exhibit a sequence of headers with a high reconstruction error, which may indicate manipulation by a proxy."
            ]
          },
          {
            "description": "A process is created on an endpoint that matches known signatures of keylogging, credential theft, or browser data exfiltration tools, particularly those targeting stored session tokens or password databases.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, remote access servers, and virtual desktop infrastructure (VDI)",
            "action": [
              "Symbolic: Monitor for process creation (Windows Event ID 4688) where the process name, hash, or command-line arguments match known credential dumpers (e.g., 'mimikatz.exe'), browser data thieves (e.g., accessing 'Login Data' files), or suspicious parent-child relationships (e.g., 'outlook.exe' spawning 'powershell.exe').",
              "Statistical: Calculate the entropy of command-line arguments for all processes using Windows Event ID 4688. Flag processes with unusually high entropy in their arguments (e.g., top 99th percentile), as this may indicate obfuscated commands. Correlate high-entropy commands with parent processes like browsers or office applications.",
              "Machine Learning: Use a classification model to score process execution events based on features like process name, parent process, command-line length and entropy, and user context. Train the model on known malicious and benign process activity to identify novel or obfuscated malware that doesn't match a specific signature but exhibits malicious characteristics."
            ]
          },
          {
            "description": "A single user account experiences an abnormally high rate of failed MFA challenges within a short period, followed by a successful authentication, indicative of an MFA fatigue or prompt-bombing attack.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624",
              "Cloud Identity Provider (e.g., Entra ID, Okta) authentication logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory Federation Services (ADFS) servers, and Cloud Identity Provider administrative portals",
            "action": [
              "Symbolic: Create a rule that triggers when a single user account generates more than 5 failed login events (Windows Event ID 4625 or cloud IdP failure logs with a 'user denied' reason code) within a 2-minute window, followed by a successful login (Windows Event ID 4624 or cloud IdP success log) from the same source IP range within the next 5 minutes.",
              "Statistical: For each user, establish a baseline of failed login counts over rolling 5-minute intervals. Use percentile-based alerting to flag any time window where the failed login count for a user exceeds their 99th percentile, indicating a statistical anomaly consistent with MFA fatigue attempts.",
              "Machine Learning: Employ a time-series anomaly detection model on the stream of authentication events (success/failure) for each user. Flag sequences of events that have a low probability under the learned model, such as a dense cluster of failures (Event ID 4625) followed by a success (Event ID 4624), as potential MFA prompt bombing."
            ]
          },
          {
            "description": "Following a successful but anomalous login (e.g., from a rare location), a user's session includes high-risk, security-sensitive actions such as registering a new MFA device, modifying email forwarding rules, or accessing unusual resources.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Windows Event ID 4738 (User Account Management)",
              "Windows Event ID 5136 (Directory Service Object Modified)",
              "Cloud provider audit logs (e.g., Entra ID Audit, AWS CloudTrail)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, user workstations, and cloud application/IdP audit log repositories",
            "action": [
              "Symbolic: Alert when a successful login (Windows Event ID 4624) from a statistically rare IP (via Zeek conn.log) is followed within 10 minutes by a sensitive directory service modification for the same user, such as a change to the 'msDS-StrongAuthenticationMethods' attribute (Event ID 5136) or adding an email forwarding rule (via cloud audit logs).",
              "Statistical: For each user, baseline the frequency and type of post-authentication activities. Calculate the probability of a user performing a sensitive action (e.g., adding an MFA device) within the first 30 minutes of a session. Flag sessions where this action occurs if the session's source IP geolocation or ASN (from Zeek conn.log) is rare (e.g., never seen before for that user).",
              "Machine Learning: Use a session-based anomaly detection model that profiles user behavior across multiple data sources. After a successful login, the model scores subsequent activities (file access, network connections, admin actions) against the user's historical profile. A session that rapidly accumulates a high anomaly score after login indicates a potential session hijack."
            ]
          },
          {
            "description": "A single user account records two or more successful logins from geographically distinct locations where the travel time between them is physically impossible, indicating concurrent use of stolen credentials or session tokens.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Cloud Identity Provider (e.g., Entra ID, Okta) authentication logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Domain Controllers, and cloud Identity Provider log repositories",
            "action": [
              "Symbolic: For each successful login (Windows Event ID 4624 or cloud IdP logs), retrieve the source IP. Compare the timestamp and geolocation of the current login with the previous login for the same user. If the calculated speed required to travel between the two locations exceeds 600 mph, generate an 'Impossible Travel' alert.",
              "Statistical: For each user, create a statistical profile of their common login locations (cities, countries, ASNs) from Zeek conn.log. Calculate the Mahalanobis distance of a new login's location from the centroid of the user's typical location cluster. A high distance score indicates a statistically improbable login, reducing false positives from legitimate VPN use.",
              "Machine Learning: Train a clustering algorithm (e.g., DBSCAN) on the historical login coordinates (latitude/longitude) for each user to identify their normal geographic areas of operation. A new login that does not fall into any existing cluster is flagged as an anomaly, adapting better to users with multiple, distinct work locations."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]