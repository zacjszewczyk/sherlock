[
  {
    "information_requirement": "Is the adversary using standard encoding schemes (e.g., Base64, Hex) to obfuscate command and control communications? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1132.001",
        "name": "Standard Encoding",
        "evidence": [
          {
            "description": "Network traffic payloads contain byte sequences or string patterns that match known malicious encoded C2 signatures from threat intelligence.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewall/Proxy Logs)",
            "action": [
              "Scan network payloads, HTTP bodies (Zeek http.log post_body), and extracted files (Zeek files.log) against a watchlist of known malicious encoded C2 signatures (e.g., specific Base64 strings, hex-encoded commands) using regular expressions. Generate a high-severity alert upon a direct match.",
              "Calculate the character frequency distribution for payloads on common C2 ports (e.g., 80, 443, 53) not matching known signatures. Establish a baseline for normal character distribution on these ports. Flag connections where the distribution deviates by more than three standard deviations from the baseline, indicating a high probability of non-standard data encoding.",
              "Train a supervised classification model (e.g., Random Forest) on a labeled dataset of benign and malicious (encoded C2) network payloads. Engineer features such as n-gram frequency, character distribution ratios, string length, and entropy. Apply the trained model to classify new network payloads in near real-time, alerting on classifications of 'malicious-encoded' with a confidence score above 0.9."
            ]
          },
          {
            "description": "Anomalous encoding patterns, such as long Base64 or hexadecimal strings, are present in network protocol fields not typically used for carrying encoded data (e.g., DNS queries, HTTP User-Agents, custom HTTP headers).",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers and Web Proxies",
            "action": [
              "Apply regular expressions for Base64 `(?:[A-Za-z0-9+/]{4}){5,}(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?` and long hex strings `[0-9a-fA-F]{40,}` against Zeek log fields: `http.log` (uri, user_agent, referrer), and `dns.log` (query). Alert when a match is found in a connection to an external, low-reputation domain.",
              "For each event, calculate the Shannon entropy of the string value in `http.log` User-Agent and `dns.log` query fields. Establish a baseline entropy for each field across the enterprise. Flag any event where the entropy exceeds the 99th percentile for that field, suggesting highly randomized or encoded data where plain text is expected.",
              "Utilize an unsupervised clustering algorithm (e.g., DBSCAN) on features extracted from DNS queries and HTTP headers. Features should include string length, character type ratio (alphabetic vs. numeric vs. symbolic), and Shannon entropy. Identify and investigate outlier clusters that do not group with the dense clusters of normal traffic to discover novel C2 encoding techniques."
            ]
          },
          {
            "description": "A network connection shows a statistically significant asymmetric data transfer ratio (bytes sent vs. bytes received) or total volume compared to established baselines for the given protocol or host.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core Network Taps and Flow Collectors",
            "action": [
              "Create a rule that triggers on any external connection from `Zeek conn.log` where the ratio of bytes sent to bytes received (`orig_bytes` / `resp_bytes`) is greater than 50:1 and `orig_bytes` is greater than 1KB. Exclude known backup or file-sharing services to reduce false positives.",
              "For each host, establish a historical baseline of the data ratio (`orig_bytes` / `resp_bytes`) and total volume (`orig_bytes` + `resp_bytes`) per destination port using a 30-day moving average and standard deviation. Flag any connection where either metric exceeds three standard deviations from the host's established baseline.",
              "Apply a time-series anomaly detection model (e.g., Seasonal ARIMA) to the aggregated bytes sent (`orig_bytes`) from each host in 10-minute intervals. The model learns the typical daily and weekly traffic patterns for each host. Generate an alert when the model detects a significant, unexplained spike in outbound data volume, which could indicate encoded data exfiltration."
            ]
          },
          {
            "description": "An external network connection is initiated by an unsigned process, a process running from a non-standard file path (e.g., %APPDATA%), or a process with an anomalous parent-child relationship.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Devices (Workstations and Servers)",
            "action": [
              "Join process creation events (Sysmon Event ID 1 or Windows Event ID 4688) with network connection events (Sysmon Event ID 3). Alert when a process with an image path in `%APPDATA%`, `%TEMP%`, or `%PUBLIC%`, or that is unsigned (`SignatureStatus` != 'Valid'), initiates an external network connection.",
              "Build a baseline of common network-connecting processes (e.g., chrome.exe, outlook.exe) and their parent processes. For each new network connection, calculate a rarity score for the initiating process based on its prevalence across the environment. Alert on connections initiated by processes with a rarity score in the top 1% (99th percentile).",
              "Train a classification model (e.g., Logistic Regression) to predict if a process is 'suspicious' based on features from Sysmon Event ID 1 (e.g., image path, parent process name, command line length and entropy, signature status). When a process classified as 'suspicious' initiates a network connection (Sysmon Event ID 3), enrich the event with network data (e.g., destination IP reputation) and assign a high risk score for immediate investigation."
            ]
          },
          {
            "description": "Network traffic on a standard port (e.g., 80, 443, 53) fails to conform to the expected protocol structure, contains unusual content types, or has field lengths that are statistical outliers, suggesting tunneling of encoded data.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing Application Servers and Proxies",
            "action": [
              "Create a rule for protocol-application mismatch: alert on any connection in `Zeek conn.log` on a well-known port (e.g., 53, 80, 443) that is not successfully parsed by the corresponding Zeek protocol analyzer (i.e., the connection UID does not appear in `dns.log`, `http.log`, or `ssl.log`).",
              "For key text fields (`http.log` URI, `ssl.log` server_name, `dns.log` query), calculate the historical length distribution. Generate an alert when a value's length exceeds the 99.5th percentile for its specific field (e.g., a DNS query over 255 characters, a URI over 2048 characters).",
              "Implement JA3 and JA3S hashing on TLS handshakes from `Zeek ssl.log`. Use a clustering model (e.g., K-Means) to group client and server fingerprints. Identify and investigate small outlier clusters or connections from clients with JA3 hashes that do not match common browsers or legitimate applications, as these are often indicative of malware C2 frameworks that may use encoding within the encrypted tunnel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]