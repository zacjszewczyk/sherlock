[
  {
    "information_requirement": "Is the adversary attempting to discover domain trust relationships?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1482",
        "name": "Domain Trust Discovery",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is logged where the process executable's file hash matches a known indicator of compromise for a domain reconnaissance tool, such as BloodHound/SharpHound.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Workstations",
            "action": [
              "Symbolic: Create a detection rule to monitor process creation events (Windows Event ID 4688) and match the executable's file hash (e.g., SHA256) against a threat intelligence feed of known malicious tool hashes. Trigger a high-priority alert on any match.",
              "Statistical: For all process creation events, calculate the prevalence of each file hash across the enterprise over a 30-day rolling window. Flag any executable hash that appears on a very small number of endpoints (e.g., below the 1st percentile of prevalence) for investigation, as this indicates a rare or unauthorized tool deployment.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest, Gradient Boosting) using features from process creation events, such as process name, parent process name, command-line length and entropy, and the statistical prevalence of the file hash. Use the model to classify each new process execution as benign or suspicious. A process classified as suspicious, especially if its hash is rare, indicates a likely malicious tool."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) is logged for a native utility, such as nltest.exe or powershell.exe, containing command-line arguments specific to domain trust enumeration like '/domain_trusts' or 'Get-ADTrust'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Workstations",
            "action": [
              "Symbolic: Create a detection rule that monitors command-line logging within Windows Event ID 4688. The rule should use regular expressions to search for strings and patterns associated with trust discovery, such as `nltest.exe /domain_trusts`, `dsquery * -filter '(objectClass=trustedDomain)'`, or PowerShell commands containing `Get-ADTrust` or `GetAllTrustRelationships()`.",
              "Statistical: For each user and host, establish a baseline of normally executed command-line arguments. Calculate the historical frequency of trust discovery commands per user and per host. An execution by a user or on a host with no prior history of running such commands, or a frequency that exceeds 2 standard deviations from the established baseline, should be flagged as anomalous.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on the string values of command-line arguments from Windows Event ID 4688. Cluster commands based on structure and keywords. Identify and investigate clusters representing rare or unique command patterns, especially those containing domain trust discovery syntax, as they may represent novel or obfuscated adversary techniques."
            ]
          },
          {
            "description": "A domain trust discovery command (e.g., 'nltest.exe /domain_trusts') is executed by a parent process not typically associated with system administration, such as WINWORD.EXE, OUTLOOK.EXE, or a web server process like w3wp.exe.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Servers, Application Servers, User Workstations",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process creation event (Windows Event ID 4688) for a trust discovery command has a ParentProcessName from a predefined list of suspicious parents (e.g., `WINWORD.EXE`, `OUTLOOK.EXE`, `w3wp.exe`, `tomcat.exe`).",
              "Statistical: Generate a frequency distribution of all unique parent-child process relationships observed in the environment over a 30-day period. Calculate the conditional probability of a specific child process (e.g., `nltest.exe`) being spawned by a specific parent (e.g., `WINWORD.EXE`). Flag any relationship that falls into a low-probability percentile (e.g., less than 0.1%) as highly anomalous.",
              "Machine Learning: Construct process lineage graphs from sequences of process creation events. Use a graph-based anomaly detection algorithm to identify rare or never-before-seen parent-child-grandchild process chains, particularly those terminating in a discovery command like `nltest.exe` or `powershell.exe` with discovery-related arguments."
            ]
          },
          {
            "description": "LDAP query traffic is observed in network logs where the query filter targets objects of class 'trustedDomain' and originates from a source host that is not a known Domain Controller or authorized administrative system.",
            "data_sources": [
              "Zeek ldap.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps monitoring traffic to and from Domain Controllers, Core network switch SPAN ports",
            "action": [
              "Symbolic: Monitor Zeek ldap.log files for queries where the `id.orig_h` is not in an approved list of Domain Controller IP addresses and the `search_filter` field contains `(objectClass=trustedDomain)`. Trigger an alert on any match.",
              "Statistical: For each source IP address, profile the volume and diversity of its LDAP queries over time. Calculate the Shannon entropy of the `search_filter` field for each source IP over a 1-hour window. A sudden spike in entropy for a non-DC host indicates it is performing a wide variety of queries, which is characteristic of reconnaissance. Flag hosts whose entropy score exceeds the 95th percentile of their historical baseline.",
              "Machine Learning: Apply time-series anomaly detection (e.g., using an LSTM autoencoder) to the volume of LDAP queries per source host. Train the model on historical LDAP traffic data to learn normal patterns of activity for different host roles. The model should detect sudden, uncharacteristic bursts of LDAP query activity from a single host, which could indicate the execution of a reconnaissance script."
            ]
          },
          {
            "description": "A single host executes a logical sequence of discovery commands within a short time window (e.g., under 1 hour), including Domain Trust Discovery (T1482) combined with other techniques like Remote System Discovery (T1018) or Network Share Discovery (T1135).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise-wide endpoint log collection points, Network sensor data aggregators",
            "action": [
              "Symbolic: Define a stateful detection rule that looks for a specific sequence of command executions from a single host within a 60-minute window. For example: (`whoami` OR `hostname`) -> (`nltest /domain_trusts`) -> (`net view` OR `ping <IP>`). A match of this sequence triggers a high-severity alert indicating a 'living-off-the-land' reconnaissance playbook.",
              "Statistical: Implement a host-based risk scoring system where points are assigned for each discovery-related command execution (e.g., 5 points for `nltest /domain_trusts`, 3 for `net view`). Use a time-decay function so that points diminish over time (e.g., half-life of 2 hours). If a host's cumulative risk score exceeds a statistically determined threshold (e.g., the 99th percentile of all active host scores), it is flagged for immediate investigation.",
              "Machine Learning: Use a Hidden Markov Model (HMM) to model the transition probabilities between different states of system activity (e.g., 'Initial Access', 'Local Discovery', 'Domain Discovery', 'Lateral Movement'). Train the model on benign administrative activity and known attack sequences. When live event data is fed into the model, sequences of state transitions with very low probability under the benign model are flagged as likely adversary behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]