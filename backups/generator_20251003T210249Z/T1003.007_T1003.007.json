[
  {
    "information_requirement": "Is the adversary attempting to harvest credentials by accessing the /proc filesystem on Linux systems?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1003.007",
        "name": "Proc Filesystem",
        "evidence": [
          {
            "description": "A process execution event is logged with a process name (e.g., 'mimipenguin'), command-line argument, or file hash that matches a known credential dumping tool that specifically targets the /proc filesystem.",
            "data_sources": [
              "Sysmon for Linux Event ID 1",
              "Linux Auditd logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux servers (web, database, application), Linux developer workstations, and container environments.",
            "action": [
              "Symbolic: Create and maintain a watchlist of process names (e.g., 'mimipenguin', 'procdump') and file hashes for known /proc-scraping tools. Configure a SIEM rule to generate a high-priority alert upon any match from process execution logs (e.g., Linux Auditd 'execve' records, Sysmon for Linux Event ID 1).",
              "Statistical: For processes not on the watchlist that are observed accessing /proc, calculate the prevalence of the process name across the enterprise. Flag processes that are statistically rare (e.g., running on <1% of hosts). Further risk-score by calculating the rarity of the parent process and user context. A process with a low prevalence score that is spawned by an unusual parent (e.g., a web server daemon) should be prioritized for investigation.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest or Gradient Boosting) using features from process execution events, including parent process name, user context, command-line argument structure, and file path entropy. Use a labeled dataset of known malicious (e.g., MimiPenguin) and benign (e.g., monitoring tools) executions to classify new, unknown processes that interact with the /proc filesystem as suspicious or benign."
            ]
          },
          {
            "description": "A command-line execution event is recorded involving a common system utility (e.g., grep, strings, dd, gdb, cat) with arguments explicitly targeting sensitive memory-related paths within the proc filesystem, such as '/proc/[0-9]*/mem' or '/proc/[0-9]*/maps'.",
            "data_sources": [
              "Sysmon for Linux Event ID 1",
              "Linux Auditd logs",
              "Shell history logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux hosts, especially multi-user systems like jump boxes, web servers, and database servers.",
            "action": [
              "Symbolic: Deploy a SIEM rule using regular expressions to detect command-line arguments targeting /proc memory structures. The rule should match common utilities (e.g., 'grep', 'cat', 'strings', 'dd', 'gdb') followed by paths like '/proc/[0-9]*/mem' or '/proc/[0-9]*/maps'. Generate an alert on any match.",
              "Statistical: For each user and host, establish a baseline of command-line patterns. Calculate the Shannon entropy of command lines that reference the /proc filesystem. Flag any command whose entropy score exceeds the 99th percentile for that user/host combination, as this can indicate obfuscation or complex scripting. Also, compare the command structure against a historical baseline using n-grams; deviations from the norm should increase the risk score.",
              "Machine Learning: Train an unsupervised learning model, such as an autoencoder or Isolation Forest, on a corpus of legitimate command-line logs, particularly from system administrators and approved monitoring tools. Feed new command-line events that reference /proc into the model. Commands with a high reconstruction error or that are flagged as an anomaly indicate a significant deviation from normal administrative behavior and are likely malicious."
            ]
          },
          {
            "description": "A process access event is logged where a source process reads the memory of a target process, and this source-target pairing is anomalous or explicitly high-risk (e.g., a web server process reading memory of 'sshd').",
            "data_sources": [
              "Sysmon for Linux Event ID 10",
              "Linux Auditd logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Linux servers, including authentication servers (LDAP, Kerberos KDC), SSH jump hosts, and servers running credential managers.",
            "action": [
              "Symbolic: Create a SIEM rule to alert on pre-defined high-risk process access pairings. For example, trigger an alert if a web server process (e.g., 'nginx', 'apache2') or a common scripting interpreter (e.g., 'bash', 'python') is the source process accessing the memory of a target process associated with authentication (e.g., 'sshd', 'sudo', 'gnome-keyring-d').",
              "Statistical: Over a 30-day rolling window, build a frequency table of all source-process-to-target-process memory access events from Sysmon for Linux Event ID 10. Identify and alert on pairings that are statistically rare (e.g., occurring in the bottom 1st percentile). Prioritize alerts where the target process is known to handle credentials (e.g., 'lsassd', 'sshd').",
              "Machine Learning: Model process access events as a graph where processes are nodes and memory accesses are directed edges. Apply a community detection algorithm (e.g., Louvain Modularity) to identify clusters of normally interacting processes. An access event that forms an edge between two otherwise disconnected clusters (e.g., a process from a 'web services' cluster accessing a process in an 'authentication daemons' cluster) represents a significant anomaly and should be investigated."
            ]
          },
          {
            "description": "A successful remote authentication event (e.g., SSH, Kerberos) originates from a Linux host within a short time window (e.g., 1-60 minutes) after a high-risk /proc filesystem access event was detected on that same host.",
            "data_sources": [
              "Linux Auditd logs",
              "Zeek ssh.log",
              "Zeek kerberos.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, authentication servers (Domain Controllers, RADIUS), and network segments containing high-value assets.",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when an alert for /proc filesystem access on a source host is followed within 60 minutes by a successful outbound authentication event (e.g., Zeek ssh.log, Windows Event ID 4624) originating from that same source host's IP address. Escalate the priority if the destination is a high-value asset or in a different network segment.",
              "Statistical: For a host that generates a /proc access alert, analyze all subsequent outbound authentication events within the next hour. Establish a baseline of typical user-destination pairings for that source host. Flag any authentication where the user has never logged in from that source host before or where the destination system is a statistically rare target for that source host (e.g., in the bottom 5th percentile of destinations).",
              "Machine Learning: For each host, train a time-series anomaly detection model (e.g., Prophet or an LSTM-based autoencoder) on the volume of successful outbound authentications. If a /proc access alert is followed by a spike in authentication volume that the model flags as a significant anomaly, correlate the events and escalate for investigation as potential credential abuse and lateral movement."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]