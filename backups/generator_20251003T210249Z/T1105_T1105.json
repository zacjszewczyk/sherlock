[
  {
    "information_requirement": "Is the adversary transferring tools or files into the network?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1105",
        "name": "Ingress Tool Transfer",
        "evidence": [
          {
            "description": "A network connection or file transfer event contains an indicator (IP address, domain, TLS/SSL certificate, or file hash) that matches an entry in a threat intelligence database of known malicious infrastructure or malware.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, external-facing web proxies, and DNS resolvers.",
            "action": [
              "Query Zeek logs by joining conn.log on its unique ID (uid) with dns.log, http.log, and ssl.log. Compare the id.resp_h (destination IP), query (DNS query), host (HTTP host), and server_name (SNI) fields against a threat intelligence feed of known malicious indicators. Separately, compare the md5 and sha1 fields from files.log against a malware hash repository. Generate a high-severity alert upon any match.",
              "For all files logged in files.log, calculate the Shannon entropy of the filename. Establish a baseline distribution of filename entropy scores for the environment over a 30-day period. Flag filenames with entropy scores exceeding the 99th percentile of the baseline for manual review, as this may indicate randomly generated malware names.",
              "Develop a supervised classification model (e.g., Gradient Boosting) trained on labeled datasets of benign and malicious network connections. Engineer features from Zeek conn.log, ssl.log, and http.log, including connection duration, byte counts, protocol, port, JA3/JA3S hashes, domain name length, and domain registration age. Deploy the model to score all new outbound connections and alert on those classified as malicious with a confidence score above a predefined threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "A command-line interface event is observed executing a built-in utility (e.g., powershell.exe, certutil.exe, bitsadmin.exe, curl.exe, wget.exe) with arguments or flags explicitly used for downloading files from a remote URL.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, application servers, and domain controllers.",
            "action": [
              "Using a SIEM query with regular expressions, continuously monitor the 'CommandLine' field in Windows Event ID 4688 logs for patterns indicative of file downloads. Target processes like powershell.exe, certutil.exe, bitsadmin.exe, curl.exe, and wget.exe and look for associated keywords such as 'IEX', 'DownloadString', 'DownloadFile', 'Invoke-WebRequest', '-urlcache', '/transfer', and '-O'. Generate an alert for any match.",
              "For each monitored process (e.g., powershell.exe), parse its command-line arguments into individual tokens. Calculate the Term Frequency-Inverse Document Frequency (TF-IDF) score for each token across the entire enterprise over a 30-day rolling window. Sum the scores for all tokens in a single command line. Flag command lines with a cumulative score in the top 1% as statistically rare and potentially malicious.",
              "Train an autoencoder model on a large dataset of benign command-line invocations for common living-off-the-land binaries (LOLBins) like powershell.exe and certutil.exe. Deploy the model to process new command lines in real-time. Calculate the reconstruction error for each new command line; a high reconstruction error indicates a significant deviation from the learned normal patterns and should be flagged as an anomaly for investigation."
            ]
          },
          {
            "description": "A network connection recorded in Zeek conn.log shows a high ratio of responder bytes to originator bytes, inconsistent with the typical behavior for the associated protocol, port, or host.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress and ingress points, server farm network segments, and critical asset subnets.",
            "action": [
              "Create a detection rule that flags any non-HTTP/S TCP connection in Zeek conn.log where resp_bytes > 5MB and the ratio resp_bytes / (orig_bytes + resp_bytes) > 0.99. This identifies large, one-way data transfers that are not typical web browsing.",
              "For each unique combination of source host, destination host, and destination port, establish a historical baseline of the mean and standard deviation for the resp_bytes field over a 30-day period. Generate an alert when a new connection's resp_bytes value exceeds the baseline mean by more than 3 standard deviations, indicating a statistically significant spike in downloaded data.",
              "For each critical server or network segment, apply a time-series forecasting model (e.g., SARIMA) to the aggregate ingress data volume (resp_bytes) binned in 1-hour intervals to learn daily and weekly seasonality. Generate an alert whenever the actual observed ingress volume exceeds the upper bound of the model's prediction interval, indicating an anomalous and unexpected volume of data being transferred to the asset."
            ]
          },
          {
            "description": "A common user application (e.g., WINWORD.EXE, CHROME.EXE) spawns a shell or scripting process (e.g., cmd.exe, powershell.exe), which then makes an outbound network connection and subsequently writes a new executable file to disk.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.",
            "action": [
              "Create a correlation rule that triggers when: 1) A parent process like WINWORD.EXE, EXCEL.EXE, or CHROME.EXE (Event ID 4688) spawns 2) a child process like cmd.exe or powershell.exe (Event ID 4688), which in turn 3) makes an outbound network connection (Event ID 5156) to a non-local IP address. Alert on this three-event sequence.",
              "Continuously monitor and log all parent-child process relationships from Event ID 4688 across the enterprise. Build a frequency table for all observed pairs over a 30-day rolling window. Flag any observed parent-child pair (e.g., OUTLOOK.EXE -> certutil.exe) that falls below a low-frequency threshold (e.g., has occurred fewer than 10 times enterprise-wide) as a statistically anomalous execution chain.",
              "Construct process execution graphs where nodes are processes and edges represent parent-child relationships, enriched with node attributes (command line, user) and edge attributes (timestamps). Use a graph-based anomaly detection algorithm (e.g., GraphSAGE) to identify rare or abnormal subgraphs, such as a browser spawning a shell that downloads a file. The model learns normal 'motifs' of process interaction and flags deviations."
            ]
          },
          {
            "description": "A network connection is made to a domain associated with a non-corporate cloud storage, file sharing, or code repository service, and the connection is initiated by a non-browser process.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, DNS resolvers, and endpoint process monitoring.",
            "action": [
              "Maintain a categorized list of domains for unsanctioned services (e.g., pastebin.com, mega.nz, github.com). Correlate network logs (dns.log, ssl.log) showing connections to these domains with process execution logs (Windows Event ID 4688) from the source host. Generate an alert if the process initiating the connection is not an approved browser or corporate sync client (e.g., powershell.exe, rundll32.exe, cscript.exe).",
              "Using DNS and HTTP logs, classify all destination domains into categories (e.g., Sanctioned Cloud, Unsanctioned File Sharing, Social Media). For each host, create a daily profile of the percentage of requests and bytes transferred to each category. Alert if the percentage of traffic to the 'Unsanctioned File Sharing' category for any host increases by more than 3 standard deviations from its 30-day rolling average.",
              "From Zeek logs, extract feature vectors for each host based on its network activity, including features like JA3 hash diversity, destination port distribution, SNI entropy, and data volume ratios. Use a density-based clustering algorithm like DBSCAN to group hosts with similar network 'behaviors'. Investigate hosts that are flagged as noise or outliers by the algorithm, as their unique traffic patterns may indicate connections to C2 or unauthorized file transfer services."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has an adversary staged tools on external infrastructure for use against our network? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1105",
        "name": "Ingress Tool Transfer",
        "evidence": [
          {
            "description": "A file is downloaded (e.g., EXE, DLL, PS1, ZIP, MSI) where the source IP address or domain in the HTTP request or DNS query matches a known malicious indicator from a Cyber Threat Intelligence (CTI) feed.",
            "data_sources": [
              "Zeek http.log",
              "Zeek file.log",
              "Zeek dns.log",
              "CTI Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, web proxies, and DNS resolvers.",
            "action": [
              "Correlate the Zeek http.log `host` field and dns.log `query` field against a CTI feed of known malicious domains and IPs. If a match is found, check for a corresponding file transfer in file.log by joining on the connection UID. Generate an alert for any file download from a CTI-flagged source.",
              "For all file downloads, calculate the historical access frequency (prevalence) of the source domain/IP across the enterprise over the last 90 days. Create a risk score by combining the inverse prevalence (rarer is riskier) with the confidence score from a CTI feed. Alert on downloads where the combined score exceeds the 99th percentile.",
              "Deploy a supervised classification model, such as a Random Forest, trained on labeled historical data. Use features from Zeek logs (e.g., http.log.user_agent, file.log.mime_type, file.log.seen_bytes, source ASN, domain age) and a CTI score. Score new downloads in real-time and alert when the model's predicted malicious probability exceeds a defined threshold (e.g., > 0.90)."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688 or Sysmon Event ID 1) is logged for a Living-Off-the-Land Binary (LOLBin) such as certutil.exe, bitsadmin.exe, powershell.exe, curl.exe, or wget.exe, where the command line arguments contain flags and URLs indicating a file download from a remote source.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, database servers), user workstations, and application servers.",
            "action": [
              "Scan the ProcessCommandLine field from Windows Event ID 4688 for regular expressions matching known download patterns, such as `certutil -urlcache`, `bitsadmin /transfer`, `powershell IWR`, `curl -o`, and `wget http`. Generate a high-severity alert upon any match.",
              "For each host, baseline the parent-child process relationships for common LOLBins. Calculate the frequency of each observed parent (e.g., winword.exe -> powershell.exe). Additionally, calculate the Shannon entropy of command-line arguments for these LOLBins. Alert when a rare parent-child relationship is observed (e.g., bottom 1st percentile of frequency) OR the command-line entropy exceeds the 98th percentile for that specific process.",
              "Deploy a time-series anomaly detection model (e.g., SARIMA) to monitor the frequency of LOLBin download commands per hour, aggregated across the enterprise. The model will learn the normal daily and weekly seasonality of this activity. Generate an alert when the observed count of download commands significantly exceeds the forecasted range."
            ]
          },
          {
            "description": "A file is transferred over HTTP where its inferred type, based on magic bytes analysis (e.g., Zeek's file.log.mime_type), is inconsistent with the file extension in the URI (http.log.uri) or the server-provided Content-Type header (http.log.resp_mime_types). For example, a file identified as 'application/x-dosexec' is downloaded from a URI ending in '.jpg'.",
            "data_sources": [
              "Zeek file.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways and network sensor tap points where traffic is mirrored.",
            "action": [
              "Create a detection rule that joins `file.log` and `http.log` on the connection UID. Trigger an alert when `file.log.is_exe` is true OR `file.log.mime_type` is 'application/x-dosexec', but the `http.log.uri` ends with a non-executable extension (e.g., .jpg, .png, .gif, .txt, .css).",
              "Maintain a frequency table of all observed triplets: (URI file extension, `http.log.resp_mime_types`, `file.log.mime_type`). After excluding a pre-defined allowlist of known-good mismatches, alert on any triplet that falls into the bottom 0.1% of historical occurrences, especially when `file.log.mime_type` indicates an executable or script.",
              "Implement an unsupervised Isolation Forest model to detect anomalous file transfers. Use features such as the categorical codes for URI extension, HTTP response MIME type, and inferred file MIME type, along with numerical features like file size and connection duration. The model will identify unusual combinations that deviate from normal traffic patterns as outliers, indicating potential file masquerading."
            ]
          },
          {
            "description": "A sequence of events occurs: 1) A DNS query is made for a domain registered within the last 60 days (Newly Registered Domain). 2) A TCP connection is established from the querying host to the resolved IP. 3) An executable file (PE, ELF, Mach-O) or script (PS1, VBS, Python) is downloaded over that connection.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek file.log",
              "WHOIS Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, DNS forwarders, and internet gateways.",
            "action": [
              "For every DNS query in `dns.log`, enrich with domain registration date via a WHOIS lookup. If the domain age is less than 60 days, monitor the source host's connections. If the host connects to the resolved IP (join `dns.log.answers` with `conn.log.id.resp_h`) and downloads a file (`conn.log.uid` links to `file.log.conn_uids`) where `file.log.is_exe` is true, trigger a high-severity alert.",
              "Develop a domain risk score based on domain age (inverse relationship), DNS query entropy (high entropy subdomains are risky), TTL value (very low TTLs can be risky), and historical prevalence within the organization. Alert when a file download is observed from a domain whose risk score is in the 99th percentile of all externally queried domains.",
              "Construct a communication graph where nodes are internal hosts, domains, and external IPs. Use a graph neural network (GNN) or community detection algorithm to identify groups of internal hosts that suddenly begin communicating with a cluster of related Newly Registered Domains. A subsequent download of files with similar characteristics (e.g., size, type) across this group indicates a coordinated campaign."
            ]
          },
          {
            "description": "A file is downloaded from a legitimate code or file hosting service (e.g., GitHub, GitLab, Pastebin, Discord CDN, MEGA) where the activity is anomalous for the source host or the organization. Anomalies include downloads by non-technical users or servers, unusual User-Agent strings, or file types inconsistent with the host's role.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek file.log",
              "Active Directory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, developer workstations, and servers or endpoints that are expected to interact with code repositories or file sharing services.",
            "action": [
              "Define a watchlist of hosts that should never download files from code repositories (e.g., Domain Controllers, HR department workstations). Create a rule to alert on any file download from domains like `raw.githubusercontent.com`, `gitlab.com/-/raw/`, `pastebin.com/raw/`, or `cdn.discordapp.com` originating from an IP address on this watchlist.",
              "For each host, establish a 30-day rolling baseline profile of activity towards file-sharing sites, including distributions of file MIME types, file sizes, and User-Agent strings. Use the Interquartile Range (IQR) method to detect outliers. Alert if a host downloads a file where the size is an outlier (e.g., > Q3 + 1.5*IQR) or the MIME type has not been seen from that host before.",
              "Deploy a one-class SVM or other anomaly detection model per user or user group (e.g., 'Developers', 'Sales' from Active Directory). Train the model on features of their normal download activity from these platforms (e.g., `http.log.user_agent`, `file.log.mime_type`, hour of day, day of week, domain). Flag any download activity that the model classifies as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]