[
  {
    "information_requirement": "Is the adversary maintaining persistence through malicious Outlook Forms?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1137.003",
        "name": "Outlook Forms",
        "evidence": [
          {
            "description": "An Outlook Form file (.oft, .fdm) is created or modified on an endpoint, and its file hash matches a known malicious signature, or the Outlook process (outlook.exe) initiates a network connection to a destination matching a threat intelligence feed of known malicious infrastructure.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Mail servers (Exchange), Network egress points, User profile directories on file servers",
            "action": [
              "For file create/write events (Windows Event ID 4663) targeting files with .oft or .fdm extensions, calculate the file hash and match against a threat intelligence database of known malicious files. Separately, for network connections (Zeek conn.log) originating from endpoint IP addresses, correlate by timestamp and IP with process creation events (Windows Event ID 4688 where ProcessName is outlook.exe) and compare the destination IP/domain against a C2 threat intelligence feed. Alert on any match.",
              "For all domains resolved by endpoints running Outlook (Zeek dns.log), calculate domain feature statistics such as the entropy of the domain name, its length, and its age (via WHOIS lookups). Flag and investigate domains that fall in the top 99th percentile for entropy or have an age of less than 30 days, especially when associated with outbound connections from outlook.exe.",
              "Train a time-series model (e.g., ARIMA, LSTM) on the volume of outbound network connections from outlook.exe per user, per hour. Alert on anomalies where the connection volume for a user significantly deviates from their historical pattern, particularly when correlated with connections to newly observed domains or high-entropy domains."
            ]
          },
          {
            "description": "A child process of outlook.exe is created with command-line arguments containing obfuscation or patterns indicative of payload download and execution.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Scan command-line arguments from process creation events (Windows Event ID 4688) where the parent process is outlook.exe. Use regular expressions to match known malicious patterns, such as `powershell -enc`, `IEX(`, `DownloadString`, `mshta.exe javascript:`, `certutil -urlcache`, or `rundll32.exe`. Alert on any matches.",
              "For all command-line arguments associated with child processes of outlook.exe, calculate the Shannon entropy of the argument string. Establish a baseline entropy score for legitimate commands across the enterprise. Flag commands with entropy scores exceeding 3 standard deviations from the mean, as this indicates probable obfuscation.",
              "Develop a classification model (e.g., Logistic Regression, Random Forest) trained on a labeled dataset of benign and malicious command-line arguments. Use features like argument length, character frequency distribution, n-grams, and presence of special characters. Apply the model to new command lines spawned by outlook.exe to predict their maliciousness and generate alerts for high-probability classifications."
            ]
          },
          {
            "description": "The Outlook process (outlook.exe) spawns a child process, such as a command interpreter or scripting engine, that is inconsistent with established baseline activity for the user or organization.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers running Outlook, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Create and maintain an explicit allow-list of legitimate child processes for outlook.exe (e.g., winword.exe, excel.exe, teams.exe, chrome.exe). Monitor process creation events (Windows Event ID 4688) and alert any time outlook.exe spawns a process not on this list, with high priority for `cmd.exe`, `powershell.exe`, `wscript.exe`, and `cscript.exe`.",
              "For each user, build a statistical baseline of normal child processes spawned by outlook.exe over a 30-day period. Calculate the frequency of each child process. Alert when a rare child process is observed for a user (e.g., a process that appears in less than 1% of their baseline events) or a process that has never been seen as a child of outlook.exe across the enterprise.",
              "Use an unsupervised learning algorithm, such as a one-class SVM or isolation forest, on process creation event data. Use features including the parent process name, child process name, user context, and process path. Train the model on known good activity to define a 'normality' boundary and use it to score new events, alerting on outliers."
            ]
          },
          {
            "description": "The Outlook process initiates network connections to external destinations that are unusual based on reputation, geography, or historical communication patterns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, User workstations",
            "action": [
              "On an endpoint, correlate process creation events (Windows Event ID 4688 for outlook.exe) by time and source IP with network connection logs (Zeek conn.log). For attributed connections, compare the destination IP and the associated DNS query response from Zeek dns.log against threat intelligence feeds for C2 servers, newly registered domains (NRDs), and other malicious indicators. Alert on a match.",
              "For each user, establish a baseline of typical destination countries and Autonomous System Numbers (ASNs) for outlook.exe network traffic using geolocation on destination IPs from Zeek conn.log. Alert when a connection is made to a country or ASN from which the user has never connected before via Outlook.",
              "Train a time-series forecasting model on the daily volume of data transferred (e.g., `orig_bytes` in Zeek conn.log) by outlook.exe for each user. Alert when the observed data volume on a given day exceeds the forecasted volume by a significant margin (e.g., above the 99% prediction interval), especially if correlated with connections to low-reputation domains."
            ]
          },
          {
            "description": "An unauthorized process modifies Outlook form files (.oft, .fdm) or related persistence registry keys.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Registry hives on endpoints, User profile directories on file servers",
            "action": [
              "Monitor for registry modifications (Windows Event ID 4657) to keys under the `HKCU\\Software\\Microsoft\\Office\\*\\Outlook\\Forms` path and for file write events (Windows Event ID 4663) to files in the `%APPDATA%\\Microsoft\\Forms` directory. Correlate the event with the modifying process ID from the event data and its parent process (via Windows Event ID 4688). Alert if the modifying process is not an approved installer, `outlook.exe`, or a known IT administration tool, especially if it is a scripting engine like `powershell.exe` or `cmd.exe`.",
              "Establish a baseline of processes that legitimately modify the Outlook Forms folders (e.g., `%APPDATA%\\Microsoft\\Forms`) or associated registry keys. Calculate the frequency of each modifying process across the enterprise. Alert when a statistically rare process (e.g., a process seen modifying these locations in less than 0.1% of historical cases) performs a write or create operation.",
              "Use a sequence analysis model to analyze the chain of events leading up to a modification of Outlook forms persistence locations. A normal sequence might be `explorer.exe -> setup.exe -> [registry write]`. An anomalous sequence might be `outlook.exe -> winword.exe -> powershell.exe -> [registry write]`. Train a model on known benign event sequences and alert when a new, high-risk sequence is detected."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]