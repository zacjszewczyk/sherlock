[
  {
    "information_requirement": "Is the adversary evading defenses using environmental keying?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1480.001",
        "name": "Environmental Keying",
        "evidence": [
          {
            "description": "A process executes a series of host-based discovery commands within a short time window (e.g., under 60 seconds) and subsequently initiates a network connection to a destination matching a known malicious Command and Control (C2) threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Domain Controllers, Network egress points (Firewall/Proxy), DNS Resolvers",
            "action": [
              "Query for process creation events (Windows Event ID 4688) that include discovery command-line arguments (e.g., 'whoami', 'systeminfo', 'ipconfig', 'netsh'). Correlate these events by host IP address with subsequent network connection logs (Zeek conn.log) within a 5-minute window. Alert if the destination IP or domain matches a high-confidence C2 threat intelligence feed.",
              "For each host, establish a 30-day baseline of common processes that initiate external network connections. Calculate the rarity of a process, which has executed discovery commands, connecting to a new or rarely seen IP address or domain. Flag any connection where the process-destination pair falls into the top 1% of rarest combinations observed for that host or user role.",
              "Train a supervised classification model (e.g., Random Forest) to predict the likelihood of a process being malicious based on features like process name, parent process, command-line arguments, and subsequent network activity (destination IP, port, data volume). Flag processes where a sequence of discovery commands is followed by a network connection that the model classifies as malicious with high confidence."
            ]
          },
          {
            "description": "A single process executes a specific, ordered sequence of system discovery commands within a 30-second time window, matching command patterns used by known malware for environmental keying.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, Active Directory domain controllers",
            "action": [
              "Create and apply a detection rule that triggers when a specific sequence of commands (e.g., 'wmic csproduct get uuid', followed by 'getmac', followed by 'nltest /domain_trusts') are executed by the same Process ID or Parent Process ID within a 30-second window, sourcing data from Windows Event ID 4688.",
              "Apply n-gram analysis to sequences of command-line executions per host. Calculate the probability of command 2-grams (bigrams) and 3-grams (trigrams) based on a 30-day historical baseline. Flag any command sequence whose joint probability falls below a 1st percentile threshold, indicating a rare chain of events.",
              "Use a sequence-based anomaly detection model, like an LSTM (Long Short-Term Memory) autoencoder, trained on historical command-line execution sequences from Windows Event ID 4688. Input new sequences of commands per user session and flag any sequence with a high reconstruction error, indicating it does not conform to learned normal behavior."
            ]
          },
          {
            "description": "A single process executes a number or variety of discovery commands that exceeds a statistically-derived threshold for the host or user within a defined time window (e.g., 5 minutes).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, User workstations, Critical servers",
            "action": [
              "Create a detection rule that alerts when a single process (by Process ID) executes more than 5 distinct discovery commands (e.g., 'systeminfo', 'whoami', 'ipconfig', 'netstat', 'tasklist', 'hostname', 'quser') within a 60-second window.",
              "For each host, calculate a rolling 5-minute Shannon entropy score based on the command-line processes executed (Windows Event ID 4688). A sudden spike in entropy exceeding 3 standard deviations from the host's baseline ($$ E > \\mu + 3\\sigma $$) indicates an unusual variety of commands. Additionally, track the frequency of discovery commands per hour and flag hosts in the 99th percentile.",
              "Develop a one-class SVM (Support Vector Machine) model for each host profile (e.g., developer workstation, finance server), trained on vectors representing normal command execution frequency and variety. Classify new 5-minute activity vectors in real-time. Any vector classified as an anomaly suggests behavior outside the established norm, such as a burst of discovery activity."
            ]
          },
          {
            "description": "An unsigned or newly observed executable process terminates in less than 2 seconds immediately after creation, particularly if it was preceded by host discovery checks, suggesting an environmental key mismatch led to termination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially user workstations",
            "action": [
              "Correlate process creation (Windows Event ID 4688) and termination (Windows Event ID 4689) events. Alert when a process that is not digitally signed by a trusted publisher and originates from a non-standard path (e.g., '%APPDATA%', '%TEMP%') has an execution duration of less than 2 seconds.",
              "For each process name observed across the enterprise, calculate the mean and standard deviation of its execution duration. Flag any instance of a process that terminates in a duration less than 2 standard deviations below the mean for that process name, or under a 1-second absolute threshold if no baseline exists. Assign a higher risk score if the process is unsigned.",
              "Use a clustering algorithm (e.g., DBSCAN) on process features including execution duration, parent process, command-line arguments, file path, and file signature status. Isolate and investigate clusters of short-lived, unsigned processes to identify malicious patterns indicative of failed environmental keying checks."
            ]
          },
          {
            "description": "A host performs network reconnaissance by querying an external DNS server for its own internal hostname or by connecting to public 'what-is-my-IP' services to determine its external IP address.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS servers, Network egress points (Firewall/Proxy), Web Proxies",
            "action": [
              "Create a rule to detect DNS queries (Zeek dns.log) from an internal IP to an external resolver where the query is for an internal domain FQDN. Also, create a rule to detect HTTP/S connections (Zeek conn.log) to domains known to provide public IP information (e.g., 'api.ipify.org', 'ifconfig.me', 'icanhazip.com').",
              "For each host, baseline the destination domains it connects to. Calculate the rarity of a host connecting to a 'what-is-my-ip' service. Flag any host whose frequency of such queries exceeds the 95th percentile for all workstations. Also, calculate the Shannon entropy of requested Top-Level Domains ($$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_b P(x_i) $$); a sudden change could indicate anomalous activity.",
              "Train a classifier (e.g., Logistic Regression) to distinguish between benign and malicious network reconnaissance traffic using features from Zeek logs (e.g., destination port, protocol, connection duration, data volume, DNS query type, User-Agent string). Use this model to score new network events, flagging connections classified as reconnaissance with high confidence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]