[
  {
    "information_requirement": "Is the adversary collecting proprietary source code or unsecured credentials from internal or private code repositories? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1213.003",
        "name": "Code Repositories",
        "evidence": [
          {
            "description": "An outbound network connection from an internal host matches a known malicious code repository URL, domain, or IP address listed in a threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Resolvers, Web Proxies",
            "action": [
              "Query network logs (Zeek `conn.log`, `dns.log`, `http.log`) for destination IPs, domains, and URLs that match indicators from a threat intelligence feed categorized as malicious code repositories. Generate an alert upon a match.",
              "Analyze Zeek `dns.log` records to extract requested domains. For domains not on an allow-list, calculate the frequency of their Top-Level Domain (TLD) and registrar across a 30-day baseline. Alert on connections to repositories hosted on TLDs or by registrars that fall below the 5th percentile of frequency, indicating statistical rarity.",
              "Apply a pre-trained machine learning classifier to URLs from Zeek `http.log`. The model should use lexical features (e.g., URL length, character entropy, keyword presence like 'private', 'key', 'leak') to score the likelihood of a URL being a malicious repository. Generate an alert for URLs exceeding a high confidence threshold (e.g., > 0.9)."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) is observed for `git.exe` with command-line arguments indicative of mass data collection, such as `clone --mirror`, `fetch --all`, `pull --all`, or `bundle create`.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, CI/CD Build Servers, Internal Code Repository Servers",
            "action": [
              "Query Windows Event ID 4688 logs for `NewProcessName` equal to `git.exe` where the `CommandLine` field contains suspicious argument patterns such as `clone --mirror`, `fetch --all`, `pull --all`, or `bundle create`. Generate an alert on any match.",
              "For each user account, aggregate the count of high-risk git commands (e.g., `clone --mirror`) from Windows Event ID 4688 logs over a 30-day rolling window to establish a behavioral baseline. Calculate the z-score for the daily count of these commands per user. Alert when a user's daily count exceeds a z-score of 3, indicating a statistically significant deviation from their normal activity.",
              "Train a sequence analysis model, such as a Hidden Markov Model, on historical command line sequences per user from Windows Event ID 4688 logs. Continuously feed new command sequences into the model to calculate the probability of their occurrence. Alert on sequences with a probability below a learned threshold, such as `git.exe clone` followed by `7z.exe a` and then `curl.exe -T`."
            ]
          },
          {
            "description": "A network flow log (Zeek conn.log) shows a connection from a single internal host to a known code repository destination where the total bytes transferred (`orig_bytes` + `resp_bytes`) is a statistical outlier compared to the host's or organization's baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Code Repository Servers",
            "action": [
              "From Zeek `conn.log`, query for connections to known code repository IP ranges. Generate an alert if the sum of `orig_bytes` and `resp_bytes` for a single connection exceeds a static threshold (e.g., 1 GB), which is indicative of a full repository download.",
              "For each source IP (`id.orig_h`), calculate the 95th percentile of the total bytes transferred (`orig_bytes` + `resp_bytes`) per connection to code repositories over a 30-day baseline using Zeek `conn.log`. Alert when a new connection's data volume exceeds this dynamically calculated threshold for that specific host.",
              "Using Zeek `conn.log` data, create a daily time series of total data transferred to code repositories for each host. Apply a forecasting model (e.g., ARIMA, Prophet) to predict the expected data volume for the next day with a 99% confidence interval. Generate an alert if the actual observed volume for a host exceeds the upper bound of the predicted interval."
            ]
          },
          {
            "description": "A user account, especially a privileged account (e.g., Domain Admin) or service account, authenticates and accesses a code repository, or a standard user account accesses an unusually high number of distinct repositories compared to their individual or peer group baseline.",
            "data_sources": [
              "Code Repository Audit Logs",
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Internal Code Repository Servers, Web Proxies",
            "action": [
              "Define and maintain two lists: 1) A list of privileged/service accounts forbidden from accessing any code repository. 2) A list of sensitive repositories with a user access control list (ACL). Correlate authentication logs (Windows Event ID 4624) with repository access logs (Zeek `http.log`, GitLab audit logs) and alert if a forbidden account accesses any repository, or if a user accesses a sensitive repository they are not on the ACL for.",
              "For each user, parse repository access logs (e.g., Zeek `http.log` `host` and `uri` fields) to count the number of unique repositories accessed daily. Establish a 30-day baseline for this count per user. Alert when a user's daily unique repository access count exceeds their personal 99th percentile, indicating abnormal repository browsing or enumeration.",
              "Apply a clustering algorithm (e.g., DBSCAN) to user access data, using features like number of repositories accessed, average data transfer size, and time of day to create peer groups. Generate an alert when a user's activity is flagged as an outlier to all clusters or when their activity profile suddenly shifts, causing them to be re-assigned to a different peer group."
            ]
          },
          {
            "description": "A process creation event for `git.exe` (Windows Event ID 4688) occurs on a host that is not categorized as a developer machine (e.g., a Domain Controller, HR workstation, or Finance server).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Finance Department Workstations, HR Department Workstations, Executive Laptops",
            "action": [
              "Maintain an asset inventory that categorizes hosts by role (e.g., 'Domain Controller', 'Developer Workstation'). Create a detection rule that queries Windows Event ID 4688 for `NewProcessName` of `git.exe` and cross-references the hostname with the asset inventory. Generate a high-severity alert if `git.exe` executes on any host not categorized as 'Developer Workstation' or 'CI/CD Server'.",
              "Analyze Windows Event ID 4688 data across the enterprise to determine the prevalence of `git.exe` execution per host. For any given host, calculate the historical frequency of `git.exe` execution. Generate an alert if `git.exe` is executed on a host where its historical execution frequency falls in the bottom 1st percentile of all hosts.",
              "Train a machine learning classification model (e.g., Random Forest) to categorize hosts as 'developer' or 'non-developer' using features like installed programs, running services, and historical process execution patterns. Periodically classify all hosts and generate an alert for any `git.exe` execution (from Windows Event ID 4688) on a host that is classified as 'non-developer' with a confidence > 95%."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]