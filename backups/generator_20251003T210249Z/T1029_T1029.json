[
  {
    "information_requirement": "Is the adversary exfiltrating data using scheduled transfers? (PIR)",
    "tactic_id": "TA0010",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1029",
        "name": "Scheduled Transfer",
        "evidence": [
          {
            "description": "A time series of outbound network connections from a single internal host to a single external destination exhibits a fixed, repeating interval with low jitter, and the destination IP address or resolved domain is present on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), DNS Servers",
            "action": [
              "Symbolic Action: Join Zeek dns.log and conn.log data. Query for connections where the destination IP (`id.resp_h`) or the resolved domain (`query`) matches a list of known malicious C2 servers from an integrated threat intelligence feed. Group results by source IP (`id.orig_h`) and destination, then inspect for recurring connection timestamps.",
              "Statistical Action: For each source-destination IP pair in Zeek conn.log, calculate the time difference (delta) between consecutive connections over a 24-hour period. Compute the standard deviation of these deltas. A standard deviation near zero ($$\\sigma_{\\Delta t} \\approx 0$$) indicates a highly regular interval (beaconing). Flag pairs with a low standard deviation and connections occurring outside of standard business hours (e.g., 19:00-07:00).",
              "Machine Learning Action: Use a time series clustering algorithm (e.g., K-Shape) on connection logs for each internal host to group periodic network traffic patterns. Manually inspect clusters exhibiting high regularity (low intra-cluster variance) and connections to low-reputation domains to identify potential scheduled exfiltration channels that were not previously known."
            ]
          },
          {
            "description": "A newly created or modified scheduled task (Windows Event ID 4698, 4702) is registered, and the associated command line or decoded script content contains keywords, tools, or encoded strings associated with data staging, compression, and network transfer.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for GPO-based tasks), Critical Application Servers, User Workstations, File Servers",
            "action": [
              "Symbolic Action: Monitor Windows Event ID 4698 and 4702. Scan the 'Command' and 'Arguments' fields for known exfiltration tool names (`rclone`, `curl`, `wget`, `bitsadmin`), compression utilities (`tar`, `zip`, `7z`), or suspicious PowerShell commandlets (`Invoke-WebRequest`, `Start-BitsTransfer`). If PowerShell is involved, correlate with PowerShell Script Block logs (Event ID 4104) to analyze the deobfuscated script content for these keywords.",
              "Statistical Action: Calculate the Shannon entropy of the command-line arguments field for all newly created scheduled tasks (Event ID 4698). A high entropy score ($$ H(X) > 6.0 $$) can indicate the presence of obfuscated or encoded commands (e.g., PowerShell Base64). Flag high-entropy commands for manual review, especially those created by non-system accounts or executing from non-standard directories.",
              "Machine Learning Action: Train a classification model (e.g., Random Forest) on a labeled dataset of benign and malicious scheduled task command lines. Use features such as command length, character frequency distribution, presence of special characters, keyword counts, and entropy. Use the trained model to assign a 'suspicion score' to all new scheduled tasks created in the environment."
            ]
          },
          {
            "description": "A sequence of connections between a specific internal host and an external destination shows a statistically regular inter-arrival time, with a payload size ($$ orig_bytes $$) that is a statistical outlier compared to the host's typical outbound traffic profile for that destination.",
            "data_sources": [
              "Zeek conn.log",
              "Asset Inventory Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, VPN Concentrators, High-Value Asset Subnets",
            "action": [
              "Symbolic Action: Create a watchlist of sensitive internal hosts by joining Zeek conn.log data with an asset inventory. Monitor all outbound connections from these hosts during non-business hours (e.g., 10 PM - 5 AM local time). Alert on any recurring connection to a destination IP or domain that is not on an approved application allowlist.",
              "Statistical Action: For each internal host, establish a baseline of outbound data transfer sizes (`orig_bytes` in Zeek conn.log) per destination and protocol. Identify recurring connections (using time delta analysis) where the average transfer size is a statistical outlier (e.g., exceeds the 95th percentile of the host's baseline for that specific destination). Prioritize alerts where the connection interval is highly periodic ($$\\sigma_{\\Delta t} < 1.0$$ second).",
              "Machine Learning Action: Apply time series forecasting (e.g., ARIMA or Prophet) to the connection events for each source-destination pair. The model will predict the timestamp of the next expected connection. An actual connection occurring precisely as predicted strengthens the hypothesis of a scheduled task. Flag connections that are both highly predictable by the model and have anomalous payload sizes compared to their historical baseline."
            ]
          },
          {
            "description": "The total volume of data transferred from a host to an external destination over a covert channel protocol (e.g., DNS, ICMP) or an encrypted channel with a self-signed certificate (e.g. TLS) reoccurs at a regular time of day or day of week.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers",
            "action": [
              "Symbolic Action: Monitor Zeek `ssl.log` for connections using self-signed certificates (`validation_status` = `self-signed certificate in certificate chain`) or JA3/JA3S hashes matching known malicious tools. Monitor `dns.log` for an unusually high volume of TXT or AAAA record queries. Correlate these events with `conn.log` to check for large, periodic data transfers.",
              "Statistical Action: For each host, profile the daily data transfer volume (`orig_bytes` + `resp_bytes`) per protocol. Calculate the 99th percentile for daily bytes sent for protocols like DNS and ICMP. Flag any day where the total bytes sent exceeds this threshold. Correlate multiple flagged days for the same host to see if they occur at a regular interval (e.g., every Monday at 2 AM).",
              "Machine Learning Action: Use an anomaly detection algorithm (e.g., Isolation Forest) on connection metadata from Zeek logs. Features should include `id.resp_p` (destination port), `proto`, `orig_bytes`, hour of day, and the `server_name` from `ssl.log`. The model will learn 'normal' combinations of these features. Flag connections that the model scores as highly anomalous, then use time series analysis to check if these anomalies recur on a schedule."
            ]
          },
          {
            "description": "An unsigned process executes from a non-standard path, subsequently accesses an unusually high number of files within a short time frame, and is followed by the initiation of a periodic outbound network connection from the same host.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File Servers, User Workstations with access to sensitive data, Code Repositories, Endpoint devices of privileged users",
            "action": [
              "Symbolic Action: Correlate a Sysmon Event ID 1 (Process Creation) where `Signed` is `false` and the process path is not in a standard location (e.g., not C:\\Windows\\System32) with subsequent Windows Event ID 4663 (Object Access) events from the same `ProcessGuid`. If the process accesses files with sensitive extensions (`.docx`, `.xlsx`, `.sql`) and is followed by a Sysmon Event ID 3 (Network Connection) or Zeek `conn.log` entry to an external address within a 5-minute window, flag for review.",
              "Statistical Action: For each `ProcessGuid` on a host, count the number of unique file access events (Windows Event ID 4663) within a 1-minute window. Establish a baseline for common processes (`explorer.exe`, `svchost.exe`). Alert when a non-standard or unsigned process (`Signed` = `false` in Sysmon Event ID 1) exhibits file access counts that are statistical outliers (e.g., > 3 standard deviations above the mean for that host). Correlate these 'file access bursts' with subsequent periodic network beaconing from the same host.",
              "Machine Learning Action: Use a sequence analysis model (e.g., Hidden Markov Model) to identify the pattern of: [Unsigned Process Execution from unusual path] -> [High-Volume File Access] -> [Periodic Network Connection]. Train the model on known benign and simulated malicious event sequences using Sysmon and Zeek data. Deploy the model to score real-time event sequences on endpoints and flag those that match the malicious pattern with a high probability."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]