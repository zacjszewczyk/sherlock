[
  {
    "information_requirement": "Has the adversary executed commands using the Windows command shell?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.003",
        "name": "Windows Command Shell",
        "evidence": [
          {
            "description": "A cmd.exe process creation event (Windows Event ID 4688) shows command-line arguments containing an indicator of compromise (IOC), such as a malicious IP address, domain, file hash, or a known malicious string signature.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; DNS and Web Proxy logs; Threat Intelligence Platform feeds.",
            "action": [
              "Using a SIEM, parse command lines from Windows Event ID 4688 process creation events. Extract all IP addresses, domains, and file hashes using regular expressions. Correlate extracted artifacts against a high-confidence, curated threat intelligence feed. Generate a high-severity alert for any match.",
              "For all domains extracted from cmd.exe command lines, calculate their prevalence across the enterprise over the last 30 days. Flag domains that fall below a low percentile threshold (e.g., 1st percentile) as rare. Correlate with Zeek dns.log data to confirm if DNS requests for the domain are also rare across the organization.",
              "Apply a pre-trained string classification model (e.g., Logistic Regression on TF-IDF vectors) to all new cmd.exe command lines. The model, trained on public and internal datasets of malicious and benign commands, should classify each command line in near real-time, flagging those with a high probability of being malicious."
            ]
          },
          {
            "description": "The command line of a cmd.exe process contains patterns indicative of obfuscation, such as an unusually high number of escape characters (carets), environment variable substitution for string building, or character-by-character command construction.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, particularly those with administrative or developer tools installed.",
            "action": [
              "Using a SIEM or script, apply a library of regular expressions to cmd.exe command lines from Event ID 4688 to detect known obfuscation patterns. Patterns must include: multiple consecutive carets (e.g., ^^^), use of delayed environment variable expansion (!var!), redirection to nul (>nul 2>&1), and character substitution using environment variables (e.g., %COMSPEC:~10,1%).",
              "Calculate the character entropy for each cmd.exe command line. Establish a baseline entropy score for typical commands within the environment by analyzing the last 30 days of data. Flag commands with an entropy score exceeding a high percentile threshold (e.g., 95th percentile) for manual review as potentially obfuscated.",
              "Generate feature vectors for command lines (features: length, special character count, numeric character ratio, entropy, n-gram frequencies). Use a clustering algorithm (e.g., DBSCAN) to group command lines. Investigate small, sparse clusters that are distant from large, dense clusters of common, benign commands."
            ]
          },
          {
            "description": "A single parent process spawns a rapid succession of cmd.exe child processes executing common reconnaissance commands (e.g., whoami, ipconfig, net user, systeminfo, tasklist) within a short time window.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially Domain Controllers and critical application servers where reconnaissance is most impactful.",
            "action": [
              "Create a stateful rule that triggers when the same Parent Process ID (from Event ID 4688) spawns cmd.exe to execute three or more distinct discovery commands from a predefined list (e.g., whoami, net *, ipconfig, systeminfo, tasklist, query *, nltest, hostname) within a 5-minute window.",
              "For each user account, baseline the frequency distribution of their command sequences over a rolling 30-day window. Identify any sequence of three or more commands that is statistically rare for that specific user or their peer group (e.g., a sequence in the bottom 1% of frequency or never seen before).",
              "Model user command behavior as a session-based sequence using a Markov chain or an LSTM network, where each command is an event in the sequence. Learn the transition probabilities between commands from historical data. Flag any observed command sequence with a probability below a learned threshold as anomalous and potentially malicious."
            ]
          },
          {
            "description": "A cmd.exe process is created by a parent process not typically associated with command-line activity, such as a Microsoft Office application (WINWORD.EXE, EXCEL.EXE), a web browser, or a PDF reader.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows workstations, particularly those used by non-technical staff or in departments outside of IT and software development.",
            "action": [
              "Create a high-severity alert rule to trigger whenever a process creation event (Event ID 4688) shows cmd.exe as the child process and the Parent Process Name is on a watchlist (e.g., WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE, OUTLOOK.EXE, chrome.exe, msedge.exe, firefox.exe, AcroRd32.exe).",
              "Maintain a baseline of all observed parent-child process relationships across the enterprise over a 90-day period and calculate their frequency. Alert on any cmd.exe process creation where the parent-child pair is new or has a frequency below a dynamic threshold (e.g., in the lowest 1st percentile of all pair frequencies).",
              "Train a classification model (e.g., a random forest or gradient boosting machine) on features of parent-child process events (features: parent name, parent path, child name, user context, logon type). Use the model to score each new cmd.exe creation event, flagging those classified as 'suspicious' with high confidence."
            ]
          },
          {
            "description": "A cmd.exe process is observed initiating an outbound network connection to an external IP address, which is anomalous behavior for the command shell itself.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies) and hosts generating network traffic (endpoints, servers).",
            "action": [
              "Correlate process creation events (Event ID 4688 for cmd.exe) with network connection events (Event ID 5156) using the Process ID. Alert on any instance where the Application field in Event ID 5156 is '...\\cmd.exe' and the DestAddress is a non-private (RFC1918), non-whitelisted external IP address.",
              "Using Zeek conn.log data, enrich network connections initiated by cmd.exe processes with destination GeoIP and ASN information. For each host, baseline the typical destination countries and ASNs. Flag any connection from cmd.exe to a country or ASN that is statistically rare for that host (e.g., below the 5th percentile of frequency) or has never been seen before.",
              "For network connections initiated by cmd.exe, apply a time-series anomaly detection model (e.g., SARIMA or Prophet) to the volume of outbound data (orig_bytes in Zeek conn.log) aggregated over 5-minute intervals. A sudden spike in data transfer volume that deviates significantly from the established forecast could indicate C2 communication or data exfiltration."
            ]
          },
          {
            "description": "A batch file (.bat or .cmd) is written to a world-writable or temporary directory (e.g., %TEMP%, C:\\Users\\Public) and is subsequently executed by a cmd.exe process within a short time frame.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories, temporary file locations, and public folders on endpoints and servers; Shared network drives.",
            "action": [
              "Create a correlation rule that monitors for file write events (Event ID 4663) where the Object Name ends in .bat or .cmd and the path is within a high-risk directory (e.g., %APPDATA%, %TEMP%, C:\\Users\\Public\\*). If a subsequent process creation event (Event ID 4688) shows that same file path being executed within a 2-minute window, generate an alert.",
              "For all newly created .bat and .cmd files, calculate the Shannon entropy of their filenames. Establish a baseline for filename entropy from legitimate software distribution and administrative scripts. Flag the creation of batch files with abnormally high entropy scores (e.g., a83hfg92.bat), which suggests programmatic generation by malware.",
              "Train a classification model to distinguish between legitimate and malicious script file paths. Features can include path depth, directory name tokens (e.g., 'Temp', 'Public'), presence of user profile strings, and directory permissions. Use this model to score the 'suspiciousness' of the location for any new .bat or .cmd file that is created and executed."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]