[
  {
    "information_requirement": "Is the adversary maintaining persistence using WMI Event Subscriptions?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546.003",
        "name": "Windows Management Instrumentation Event Subscription",
        "evidence": [
          {
            "description": "A WMI permanent event subscription is created, evidenced by a Windows Event ID 5861, where the consumer properties (e.g., 'Name', 'Destination') or filter properties (e.g., 'Name', 'Query', 'QueryLanguage') match known-malicious IOCs or contain suspicious keywords.",
            "data_sources": [
              "Windows Event ID 5861"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially Domain Controllers, Tier 0/1 administrative servers, and workstations of privileged users.",
            "action": [
              "Create a detection rule that triggers on Windows Event ID 5861. Extract the 'Consumer', 'Filter', and 'Binding' properties from the event data. Compare these strings and any associated file hashes against a curated list of Indicators of Compromise (IOCs) from threat intelligence feeds. Generate an alert on any match.",
              "For every new WMI Consumer logged via Event ID 5861, calculate the Shannon entropy of the consumer's command line or script block content. Establish a baseline entropy score for legitimate consumers in your environment. Generate an alert for consumers with entropy scores exceeding the 95th percentile of the established baseline, as high entropy often indicates obfuscation.",
              "Train a classification model (e.g., Random Forest or Gradient Boosting) on a labeled dataset of WMI event subscription logs (Event ID 5861), separating benign and malicious events. Use features such as string length, character distribution, presence of keywords (e.g., 'powershell', 'download', 'execute'), and the entropy of the Filter Query and Consumer Destination fields to classify new WMI subscription events in real-time."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) or PowerShell script block log (Windows Event ID 4104) shows direct command-line or script-based creation of WMI subscription components, using commandlets like `Register-WmiEvent` or tools like `wmic.exe` with arguments such as 'eventfilter', 'eventconsumer', or 'filtertobinding'.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, Development servers, and Management servers where PowerShell scripting is common.",
            "action": [
              "Deploy a SIEM rule that uses regular expressions to search command-line arguments (from Event ID 4688) and PowerShell script blocks (from Event ID 4104) for patterns indicative of WMI persistence, such as 'New-WmiEventFilter', 'Set-WmiInstance -Namespace root\\\\subscription', 'Register-WmiEvent', or the use of 'wmic.exe' with 'eventfilter', 'eventconsumer', or 'filtertobinding' keywords. Generate an alert on any matches.",
              "Analyze the parent-child process relationships for processes that create WMI subscriptions (e.g., powershell.exe, wmic.exe, cscript.exe). For each parent process, calculate the frequency of it spawning a WMI-modifying child process. Flag any WMI creation activity that originates from a statistically rare parent process (e.g., a parent process in the lowest 5% frequency tier for this action, such as winword.exe or outlook.exe).",
              "Utilize Natural Language Processing (NLP) techniques, such as tokenization and TF-IDF, on PowerShell script block logs (Event ID 4104). Train a classification model to identify anomalous scripts that contain WMI-related functions combined with other suspicious activities like obfuscated commands, network connections, or file downloads, which are characteristic of malicious toolsets."
            ]
          },
          {
            "description": "A WMI consumer is created (Windows Event ID 5861) that references a script or executable payload located in a directory commonly abused by malware, such as a temporary folder (`%TEMP%`), user profile folder (`%APPDATA%`), or world-writable directory (`C:\\Users\\Public`).",
            "data_sources": [
              "Windows Event ID 5861"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, with a focus on multi-user systems like Remote Desktop Session Hosts.",
            "action": [
              "Upon detection of a new WMI Consumer (Event ID 5861), parse the consumer's destination path from the event data. Create a rule that generates an alert if the path matches a denylist of non-standard or suspicious directories, such as '%APPDATA%', '%LOCALAPPDATA%', '%TEMP%', '%TMP%', 'C:\\Users\\Public\\', or 'C:\\PerfLogs\\'.",
              "Across the enterprise, aggregate all unique file paths specified in WMI consumer destinations. Calculate the frequency of each unique directory path. Alert on any new WMI consumer that specifies an executable path from a directory that is statistically rare, falling below a certain percentile threshold (e.g., 1st percentile) of observed paths.",
              "Implement a clustering algorithm (e.g., DBSCAN) on WMI consumer creation events, using features like the executable path, file name, and parent process of the process that created the subscription. This will identify clusters of normal behavior. Flag any new WMI consumer event that is classified as an outlier or noise, as this indicates it does not belong to a known-good cluster of activity."
            ]
          },
          {
            "description": "A process spawned by the WMI Provider Host (`WmiPrvSe.exe`), observed via Windows Event ID 4688, initiates an external network connection logged in Zeek `conn.log`. The connection is directed to an IP address with a poor reputation, a recently registered domain, or over a non-standard port.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls, proxies), DNS resolvers, and all Windows hosts.",
            "action": [
              "Correlate process creation events (Event ID 4688) where ParentImage is 'WmiPrvSe.exe' with network connection logs (Zeek conn.log) by host and timestamp. Create a rule that alerts if the spawned process initiates an outbound connection to an IP address on a threat intelligence blocklist or to a non-standard port (e.g., any port other than 80, 443, 53).",
              "For all processes spawned by 'WmiPrvSe.exe' that make outbound connections, profile their network behavior. Calculate the entropy of destination ports and the frequency of destination Autonomous System Numbers (ASNs). Alert if a process exhibits unusually high port entropy or communicates with a statistically rare ASN for your environment (e.g., an ASN in the bottom 5% of connection frequency).",
              "Use time-series analysis on network connection data (e.g., bytes out, connection duration, inter-arrival time) for processes spawned by 'WmiPrvSe.exe'. Train a model (e.g., LSTM or ARIMA) to detect C2-like beaconing behavior, which is characterized by regular, periodic outbound connections with similar data patterns. Alert on detected anomalies."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to elevate privileges using WMI Event Subscriptions?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546.003",
        "name": "Windows Management Instrumentation Event Subscription",
        "evidence": [
          {
            "description": "The MOF compiler (`mofcomp.exe`) is executed, observed via Windows Event ID 4688, and the command line specifies a MOF file whose contents, path, or hash matches known IOCs associated with privilege escalation tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows servers and workstations, particularly those not managed by standard software deployment systems like SCCM.",
            "action": [
              "Create a detection rule for process creation (Event ID 4688) of 'mofcomp.exe'. Upon trigger, extract the MOF file path from the command line. If possible, retrieve the file, calculate its hash (e.g., SHA256), and compare it against a threat intelligence database. Also, match the file path and name against known malicious patterns. Alert on any match.",
              "Track the frequency of parent processes that spawn 'mofcomp.exe' across the environment. Establish a baseline of common parent processes (e.g., 'ccmexec.exe', 'TrustedInstaller.exe'). Generate an alert when 'mofcomp.exe' is executed by a statistically rare parent process (e.g., 'powershell.exe', 'cmd.exe', 'explorer.exe').",
              "Develop a supervised classification model to predict if a 'mofcomp.exe' execution is malicious. Use features including the parent process name, the user context of execution, the directory path of the MOF file, and properties of the MOF file itself (e.g., file size, keyword density). Train this model on known-good (e.g., SCCM activity) and known-bad (e.g., malware sample) executions."
            ]
          },
          {
            "description": "The MOF compiler (`mofcomp.exe`) is executed (Windows Event ID 4688) in an anomalous context, such as by a non-administrative user account, or it compiles a MOF file from a user-writable directory (e.g., `C:\\Users\\someuser\\Downloads`, `%TEMP%`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Multi-user workstations, Remote Desktop Session Hosts, and servers with improperly configured permissions.",
            "action": [
              "Monitor for 'mofcomp.exe' process creation (Event ID 4688). Generate an alert if the 'SubjectUserName' is not 'NT AUTHORITY\\SYSTEM' or a member of the domain/local Administrators group, OR if the command line contains a path to a MOF file located in a user-specific or temporary directory (e.g., '%APPDATA%', '%TEMP%', 'C:\\Windows\\Tasks').",
              "Build a baseline of normal 'mofcomp.exe' execution characteristics for each host. For each execution, create a feature vector including the username, parent process name, and MOF file directory. Use a one-class SVM or isolation forest model to identify executions that are statistical outliers from this host-specific baseline of administrative activity.",
              "Use a clustering algorithm (e.g., K-Means or DBSCAN) on 'mofcomp.exe' execution events from across the enterprise. Use features like user context, parent process, and file path structure. Legitimate software installations and system updates will form dense clusters. Flag any execution that falls outside these clusters (i.e., is classified as an outlier) for investigation."
            ]
          },
          {
            "description": "A process is created (Windows Event ID 4688) with the parent process `WmiPrvSe.exe` and an integrity level of SYSTEM, but the child process is an unexpected or unauthorized application (e.g., `powershell.exe`, `cmd.exe`, `net.exe`) rather than a known, legitimate WMI-related process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially critical servers like Domain Controllers and Certificate Authorities.",
            "action": [
              "Maintain an allowlist of legitimate child process image names for the parent process 'WmiPrvSe.exe' running as 'NT AUTHORITY\\SYSTEM'. Create a rule to monitor process creation (Event ID 4688) and alert on any child process spawned by 'WmiPrvSe.exe' as SYSTEM that is not on this explicit allowlist (e.g., 'unsecapp.exe', 'wmiprvse.exe').",
              "For each host, profile the set of processes spawned by 'WmiPrvSe.exe' as SYSTEM over a 30-day period. Calculate the historical frequency of each child process name. Generate an alert when a process is spawned that has never been seen before on that host or is in the bottom 1st percentile of frequency across the enterprise fleet.",
              "Correlate WMI-spawned SYSTEM processes (Event ID 4688) with preceding user logon events (Event ID 4624). Use a sequence analysis model to learn common, legitimate event sequences (e.g., logon -> system service start). Flag any sequence where an anomalous SYSTEM process is spawned by WMI shortly after a non-administrative user logon event, as this may indicate triggered privilege escalation."
            ]
          },
          {
            "description": "A WMI permanent event subscription is rapidly created (Windows Event ID 5861) and then deleted (Windows Event ID 5860) on the same host for the same subscription objects, indicating a transient execution used to run a payload and then remove traces.",
            "data_sources": [
              "Windows Event ID 5861",
              "Windows Event ID 5860"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers.",
            "action": [
              "Create a stateful detection rule that triggers on a Windows Event ID 5861. Upon detection, it should track the unique subscription name (Filter, Consumer, Binding). If a corresponding Event ID 5860 with the same name is observed on the same host within a 15-minute window, generate an alert for a suspicious transient WMI subscription.",
              "Calculate the average and standard deviation of the lifetime for all WMI subscriptions in the environment (time between Event ID 5861 and 5860). Generate an alert on any subscription whose lifetime is a statistical outlier, for example, more than 2 standard deviations below the mean lifetime or in the lowest 5th percentile.",
              "Use a time-series anomaly detection model on the rate of WMI subscription creation (Event ID 5861) and deletion (Event ID 5860) events per host. A sudden, correlated spike in both creation and deletion events that deviates significantly from the learned baseline pattern indicates a potential automated attack script using transient WMI for execution."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]