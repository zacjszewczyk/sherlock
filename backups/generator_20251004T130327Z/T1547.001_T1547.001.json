[
  {
    "information_requirement": "Is the adversary maintaining persistence using Registry Run Keys or Startup Folder items?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.001",
        "name": "Registry Run Keys - Startup Folder",
        "evidence": [
          {
            "description": "A newly created file, shortcut, or registry value in a designated startup location has a hash, path, or value that matches a known indicator of compromise (IOC) from an integrated threat intelligence platform.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All workstations and servers; Registry hives including HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run; Filesystem paths including C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup, C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
            "action": [
              "For each registry value set event (Sysmon Event ID 13, Windows Event ID 4657) targeting a Run/RunOnce key or file creation event (Sysmon Event ID 11, Windows Event ID 4663) in a Startup folder, extract the file hash (for files) and the full value data (for registry). Query the threat intelligence platform API for the extracted hash, path, or value. If a match is found with a confidence score > 80%, generate a critical alert containing the host, user, file path/registry key, and the matched IOC.",
              "Maintain a historical baseline of all file hashes and full file paths observed in startup locations across the enterprise. For each new startup item, calculate its prevalence (count of distinct hosts where it appears / total hosts). If prevalence is below the 5th percentile, flag it as rare. Additionally, calculate the Shannon entropy of the filename; if entropy is above the 95th percentile of the baseline, increase the item's risk score. An item that is both rare and has a high filename entropy score requires investigation.",
              "Train a supervised classification model (e.g., XGBoost) on a labeled dataset of benign and malicious startup entries. Extract features for each new entry, including: file size, file entropy, PE import hash, whether the file is digitally signed, the reputation of the signer, parent process name of the creator, and file path depth. Use the trained model to predict the probability of the new entry being malicious. If the probability exceeds a calibrated threshold (e.g., 0.85), automatically create an investigation ticket."
            ]
          },
          {
            "description": "A new or modified startup item contains command-line arguments indicative of obfuscation, remote script execution, or the use of living-off-the-land binaries (LOLBAS), particularly from non-standard directories.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 13",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate workstations and servers; User profile directories (e.g., C:\\Users\\Public, C:\\Users\\*\\AppData\\Local\\Temp); System-wide temporary directories (e.g., C:\\Windows\\Temp); Network egress points",
            "action": [
              "From process creation events (Windows Event ID 4688, Sysmon Event ID 1) and registry modifications (Windows Event ID 4657, Sysmon Event ID 13), parse the command line or registry value. Use regular expressions to search for patterns of obfuscation (e.g., 'powershell -enc', '-w hidden', 'IEX'), LOLBAS usage (e.g., 'certutil.exe -urlcache', 'bitsadmin.exe /transfer', 'mshta.exe http:'), and execution from temporary or user-writable directories. Generate a high-severity alert on any positive match.",
              "For every command line associated with a startup process, calculate its length and character entropy. Establish a baseline of these metrics for legitimate startup programs. Flag commands that are statistical outliers (e.g., exceeding the 95th percentile for length or entropy). Correlate with the parent process that created the persistence; a rare parent process (e.g., winword.exe creating a Run key) significantly increases the risk score.",
              "Use a clustering algorithm (e.g., DBSCAN) on command-line arguments from startup processes, after vectorizing them using TF-IDF. The algorithm will group similar, legitimate commands into dense clusters. Any command that the model flags as a noise point (i.e., does not belong to any cluster) is highly suspicious and should be flagged for manual review, as it represents a novel execution pattern not seen in the established baseline."
            ]
          },
          {
            "description": "A process executed from a startup location is statistically rare in the environment and initiates an outbound network connection to an unusual destination shortly after system boot or user logon.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate workstations and servers; Network egress points (e.g., firewalls, proxies); DNS servers",
            "action": [
              "Create a stateful rule that correlates a process creation event (Sysmon Event ID 1) originating from a known startup location with a subsequent network connection event (Sysmon Event ID 3, Zeek conn.log) from the same process within 60 seconds. Query the destination IP, domain (from Zeek dns.log), and port against threat intelligence feeds. If the destination is on a blocklist or the port is non-standard for HTTP/S (e.g., 4444, 8443), generate a high-severity alert.",
              "Maintain a historical baseline of processes executed from startup locations and their prevalence. If a new process's prevalence is below a dynamic threshold (e.g., seen on < 5 hosts), flag it. Concurrently, analyze its network connections from Zeek conn.log. If the destination IP's Autonomous System Number (ASN) or country is rare compared to the host's historical network traffic baseline (e.g., outside the top 90% of frequented ASNs), increase the risk score. A rare process connecting to a rare destination is a strong signal.",
              "Implement a time-series analysis model (e.g., ARIMA) on network traffic volume (bytes_out) and connection frequency per process, specifically for processes initiated from startup locations. Train the model on historical data to predict expected network behavior (e.g., periodic, low-volume checks for updates). Flag any process whose network activity significantly deviates from the predicted pattern, such as a sudden spike in data transfer or a change in beaconing interval, which can detect active C2 communication."
            ]
          },
          {
            "description": "A pre-existing, legitimate startup entry is modified to execute a different payload, or the discretionary access control list (DACL) on a startup folder or registry key is modified to grant write permissions to non-administrative users.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4670",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate workstations and servers; Key registry hives (HKLM\\Software, HKCU\\Software); System-wide and user-specific startup folders (C:\\ProgramData\\...\\Startup, C:\\Users\\...\\Startup)",
            "action": [
              "Maintain a golden baseline (allowlist) of known-good registry values and file paths for legitimate, critical startup items. Monitor for any modification event (Windows Event ID 4657, Sysmon Event ID 13) to these specific entries. Any deviation not associated with an authorized change request should trigger an immediate alert. Also, monitor for permission change events (Windows Event ID 4670) on startup locations that grant 'FullControl' or 'Write' access to standard user groups like 'Authenticated Users' or 'INTERACTIVE'.",
              "Periodically snapshot the values of startup registry keys and the target paths of startup folder shortcuts, creating a hash of each configuration. Track the frequency of changes for each entry. An entry that changes more frequently than its historical baseline (e.g., > 3 standard deviations from the mean change frequency) may indicate repeated hijacking attempts or 'living-off-the-land' persistence that is periodically updated.",
              "Train an anomaly detection model (e.g., an autoencoder) on the sequence of system calls made by legitimate startup processes using Sysmon or EDR data. In real-time, feed the system call sequence for a monitored startup process to the model. If the reconstruction error exceeds a predetermined threshold, it indicates the process behavior has deviated from its learned benign baseline, suggesting it has been hijacked or replaced."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to elevate privileges using Registry Run Keys or Startup Folder items?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.001",
        "name": "Registry Run Keys - Startup Folder",
        "evidence": [
          {
            "description": "A file is written to a system-wide startup location, such as an HKLM Run key or the All Users Startup folder, by a standard (non-administrator) user account.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Multi-user servers (e.g., Citrix, RDS); Administrator workstations; Key registry hives (HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\*); System-wide startup folder (C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup)",
            "action": [
              "Filter for write events (Sysmon EID 11 for files; Sysmon EID 13 for registry) to system-wide startup locations (HKLM Run keys, All Users Startup folder). For each event, check if the SubjectUserName or User is a member of a non-privileged group (e.g., not 'Domain Admins', 'Administrators'). Any such write event is a direct indicator of a likely privilege escalation attempt and should generate a critical alert.",
              "Track all write activity to system-wide startup locations. A write event from a standard (non-privileged) user is a high-confidence statistical anomaly and should be flagged immediately. The risk score should be elevated if the process performing the write (e.g., 'powershell.exe', 'cmd.exe') is also statistically uncommon for that user to be running, based on their historical activity baseline.",
              "Use a peer group analysis model to identify anomalous user behavior. Group users by role and permissions (e.g., 'IT-Support', 'Developers', 'Sales'). If a user writes to a system-wide startup location, and this behavior deviates significantly from their own historical baseline and that of their peer group (who should have zero such events), classify the event as a high-risk anomaly indicative of privilege escalation."
            ]
          },
          {
            "description": "A file or registry key is written to a startup location by one user, and the resulting process is subsequently executed under the context of a different, higher-privileged user account upon their login.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Multi-user servers (e.g., Citrix, RDS); Shared administrator workstations; Domain Controllers",
            "action": [
              "Create a stateful rule that logs a file/registry write to a startup location (Sysmon EID 11, 13) by 'User A'. Upon a new interactive logon event (Windows EID 4624) for 'User B' on the same host, monitor for process creation (Sysmon EID 1) from that specific file path or registry key. If User A is not User B, and User B has higher privileges than User A, trigger a high-severity alert for privilege escalation.",
              "For each startup process, trace back to the creation event of its file or registry key. Track the 'creator-executor' user pairs. Flag any pair where the creator is different from the executor and this pairing is new or rare (<1% of all pairs) in the environment's history. The risk is highest when the time delta between write and execution is short (< 1 hour) and the executor account is a member of a privileged group.",
              "Use a graph-based analysis platform. Create nodes for users, files, and processes and edges for actions ('writes', 'executes', 'logs_on_as'). Search for the specific graph pattern: (UserA)-[WRITES]->(FileX), (UserB)-[LOGS_ON], (ProcessZ)-[RUNS_AS]->(UserB), (ProcessZ)-[EXECUTED_FROM]->(FileX), where UserA.privilege < UserB.privilege. Apply a classification model to this pattern, using features like privilege level difference and time delta, to score the likelihood of malicious escalation."
            ]
          },
          {
            "description": "The HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\BootExecute registry value is modified to include any executable other than the default 'autocheck autochk *'.",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate workstations and servers, especially Domain Controllers and critical servers; Key system registry hives (HKLM\\System\\CurrentControlSet\\Control\\Session Manager)",
            "action": [
              "Create a high-fidelity rule that monitors for any write modification (Windows Event ID 4657, Sysmon Event ID 13) to the registry value 'HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\BootExecute'. Trigger a critical alert if the new value content is anything other than the exact string 'autocheck autochk *'. This is a critical indicator of a boot-level persistence or escalation attempt.",
              "Periodically poll and record the value of the 'BootExecute' key across all systems, storing a hash of the value. Any host where the value deviates from the fleet-wide norm (which should be universally 'autocheck autochk *') is a statistical anomaly. This polling provides a secondary check to real-time monitoring and can identify systems compromised while logging was offline or tampered with.",
              "Model the sequence of processes that modify the HKLM\\System hive. Train an anomaly detection model (e.g., Isolation Forest) on process names and parent processes that legitimately interact with this area (e.g., 'svchost.exe' with specific service hosts, 'TiWorker.exe'). If an anomalous process (e.g., 'reg.exe' spawned by 'powershell.exe') is observed modifying the 'BootExecute' key, the model would flag it as a highly suspicious event requiring immediate human review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]