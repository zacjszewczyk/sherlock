[
  {
    "information_requirement": "Has the adversary successfully escalated privileges using elevation control mechanisms?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1548",
        "name": "Abuse Elevation Control Mechanism",
        "evidence": [
          {
            "description": "A Sysmon Event ID 1 (Process Creation) event is logged for a process whose executable file hash (e.g., SHA256) matches a known malicious hash from a threat intelligence feed specializing in privilege escalation tools (e.g., UACMe, Watson, Juicy Potato).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Privileged Access Workstations (PAWs), Critical Application Servers, Developer Workstations",
            "action": [
              "Query Sysmon Event ID 1 logs to match the 'Hashes' field (containing SHA256) against a threat intelligence list of known privilege escalation tool hashes. Generate a critical alert upon match, including process details, parent process, and user context.",
              "For all executed file hashes from Sysmon Event ID 1, calculate their prevalence (count of unique hosts) over a 30-day window. Alert on any process where the hash is seen on fewer than 5 hosts or < 0.1% of endpoints AND the executable is not signed by a trusted publisher ('Signed' field is 'false').",
              "Train a Random Forest classifier using features from Sysmon Event ID 1: command line entropy, parent process name, process file path depth, is signed, and enterprise-wide hash prevalence. Use the model to assign a risk score to each new process, flagging those with high scores as potential privilege escalation attempts."
            ]
          },
          {
            "description": "A sequence of Sysmon Event ID 1 logs shows a non-system process (e.g., explorer.exe, winword.exe) spawning a known auto-elevating Windows binary (e.g., fodhelper.exe, eventvwr.exe, computerdefaults.exe), which in turn spawns a command interpreter (cmd.exe, powershell.exe) within a short time window (e.g., < 5 seconds).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, User Workstations, Remote Desktop Session Hosts",
            "action": [
              "Create a SIEM correlation rule that triggers when: (1) Process A (e.g., explorer.exe) creates Process B (a known auto-elevating binary), AND (2) Process B creates Process C (e.g., cmd.exe) within 5 seconds. The rule must be specific to the known auto-elevating binaries in the middle of the chain.",
              "From Sysmon Event ID 1 logs, build a baseline of all unique three-process chains (grandparent, parent, child). Calculate the frequency of each chain. Alert on any chain that falls below the 1st percentile of frequency and involves a command interpreter as the final child process.",
              "Model process creation events as a graph, where nodes are processes and directed edges are parent-child relationships. Use a graph anomaly detection algorithm to identify unusual subgraphs, such as short chains of three nodes that deviate from the common, larger graph structures of benign activity, especially when a command shell is the terminal node."
            ]
          },
          {
            "description": "A Sysmon Event ID 1 (Process Creation) event is logged where the 'User' field is 'NT AUTHORITY\\SYSTEM' and the 'ParentImage' field is not on an established allowlist of legitimate parent processes for SYSTEM-level children (e.g., services.exe, svchost.exe, wininit.exe, lsass.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0/1 Servers, Enterprise Certificate Authorities",
            "action": [
              "Implement a SIEM rule: `(Sysmon.EventID == 1 AND User == 'NT AUTHORITY\\SYSTEM') AND ParentImage NOT IN ('C:\\\\Windows\\\\System32\\\\services.exe', 'C:\\\\Windows\\\\System32\\\\svchost.exe', 'C:\\\\Windows\\\\System32\\\\wininit.exe', 'C:\\\\Windows\\\\System32\\\\lsass.exe')`. Tune the allowlist based on the environment's baseline.",
              "For all processes created with 'NT AUTHORITY\\SYSTEM' privileges, calculate the Shannon entropy of the 'ParentImage' file path string. Establish a baseline entropy value for legitimate parent paths (which are typically low). Alert on any event where the parent path entropy exceeds 3 standard deviations above the mean.",
              "Train a One-Class SVM model on features extracted from legitimate SYSTEM-level process creation events (e.g., parent image path, command line arguments, current directory). Use the trained model to identify any new SYSTEM process creation event as an outlier, indicating it does not conform to the learned benign profile."
            ]
          },
          {
            "description": "A sequence of events occurs where: 1) A registry key for a service's ImagePath (e.g., HKLM\\SYSTEM\\CurrentControlSet\\Services\\<ServiceName>\\ImagePath) is modified (Sysmon Event ID 13) by a non-administrative user. 2) This is followed by the creation or start of the service (Windows Event ID 4697 or 7045), resulting in privileged code execution.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Sysmon Event ID 13",
              "Windows Event ID 7045",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Servers, Systems hosting custom or third-party services",
            "action": [
              "Correlate a Sysmon Event ID 13 event where 'TargetObject' matches 'HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\*\\\\ImagePath' with a subsequent Windows Event ID 7045 (A service was started) or 4697 (A service was installed) for the same service name within a 10-minute window. Alert if the user in the registry modification event is not in a privileged group.",
              "Over a 30-day baseline, calculate the frequency of ImagePath modifications per user account. Flag any non-administrative user whose modification count exceeds the 99.9th percentile for their role, or any user who modifies the ImagePath of a service they have not previously modified.",
              "Use a time-series anomaly detection model (e.g., ARIMA) to monitor the aggregate count of service ImagePath modifications per hour across the enterprise. A sudden spike in modifications that significantly deviates from the forecasted volume can indicate a widespread, automated attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary using elevation control mechanisms to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1548",
        "name": "Abuse Elevation Control Mechanism",
        "evidence": [
          {
            "description": "A Sysmon Event ID 13 (Registry Value Set) event is logged, indicating a modification to a critical UAC-related registry value, such as setting 'HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA' to '0' or 'ConsentPromptBehaviorAdmin' to '0' (Elevate without prompting).",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows 10/11 Workstations, Windows Servers with a GUI installed",
            "action": [
              "Create a high-severity alert for any Sysmon Event ID 13 where 'TargetObject' is 'HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\\\\EnableLUA' and 'Details' is '0x00000000', or 'TargetObject' is 'HKLM\\\\...\\\\ConsentPromptBehaviorAdmin' and 'Details' is '0x00000000'.",
              "Track the daily count of UAC-related registry modifications across the fleet. Generate an alert if the daily count exceeds three standard deviations above the 90-day rolling average, suggesting a coordinated campaign to disable UAC.",
              "Train a decision tree classifier to distinguish legitimate UAC changes (e.g., by a GPO update process) from malicious ones. Features should include the 'Image' (process) making the change, 'User' account, and time of day. A change made by 'powershell.exe' under a standard user account would be flagged as malicious."
            ]
          },
          {
            "description": "A Sysmon Event ID 8 (CreateRemoteThread) event is logged where the 'SourceImage' process is running at a High or System integrity level and the 'TargetImage' process is running at a Medium or Low integrity level, indicating an attempt to inject from a privileged to a less-privileged process.",
            "data_sources": [
              "Sysmon Event ID 8",
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Remote Desktop Session Hosts (RDSH), VDI Environments",
            "action": [
              "Create a SIEM rule for Sysmon Event ID 8 where 'SourceImage' has 'High' or 'System' integrity and 'TargetImage' has 'Medium' or 'Low' integrity. Maintain an exclusion list for known-good tools like debuggers and security products that perform this action legitimately.",
              "Baseline all (SourceImage, TargetImage) pairs from Sysmon Event ID 8 logs over 30 days. Calculate the frequency of each pair. Alert on any new pair not seen in the baseline, or any pair whose frequency is in the bottom 1st percentile, especially if the source is unsigned or runs from a temporary directory.",
              "Apply DBSCAN clustering to Sysmon Event ID 8 data. Use features like source/target process names, source/target integrity levels, and the file path of the source process. Large, dense clusters represent normal behavior (e.g., browsers, AV). Small, sparse clusters or noise points represent anomalous injections."
            ]
          },
          {
            "description": "A Sysmon Event ID 7 (Image Load) event is logged where a privileged system process (e.g., 'svchost.exe', 'lsass.exe') loads a DLL that is either unsigned ('Signed' field is 'false') or is loaded from a user-writable directory (e.g., 'C:\\Users\\*', 'C:\\ProgramData', 'C:\\Perflogs').",
            "data_sources": [
              "Sysmon Event ID 7",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Systems, especially Servers running critical applications and Domain Controllers",
            "action": [
              "Create a SIEM rule for Sysmon Event ID 7 where `Image` is in a list of critical system processes AND (`Signed` is 'false' OR `ImageLoaded` path contains 'C:\\\\Users\\\\', 'C:\\\\Windows\\\\Temp\\\\', 'C:\\\\ProgramData\\\\'). Exclude known-good but unsigned DLLs after vetting.",
              "For each critical system process, create a baseline set of all DLLs it normally loads. Calculate the Jaccard distance between the set of DLLs loaded in the current session and the baseline set. A high distance indicates a significant deviation. Also, calculate the Shannon entropy of the loaded DLL's directory path; a high score suggests a non-standard location.",
              "Train an autoencoder neural network on feature vectors from legitimate Sysmon Event ID 7 events for system processes. Features should include one-hot encoded process name, loaded DLL path entropy, and a boolean for signed status. A high reconstruction error on a new event indicates it is anomalous and likely a DLL hijacking attempt."
            ]
          },
          {
            "description": "A correlated sequence of events is observed: 1) A process creation pattern indicative of privilege escalation occurs (e.g., UAC bypass chain). 2) The newly created high-integrity shell (e.g., 'cmd.exe') initiates an outbound network connection (Sysmon Event ID 3) to an external IP address, as validated by Zeek conn.log.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateways, Egress Firewalls, DNS Servers, All Windows Endpoints",
            "action": [
              "Correlate a known privilege escalation pattern (from Sysmon Event ID 1) with a subsequent Sysmon Event ID 3 from the resulting process within 60 seconds. The connection must be to a non-RFC1918 destination IP. Enrich the alert with DNS query data from Zeek dns.log and TLS details (like JA3 hash) from Zeek ssl.log for the same connection.",
              "For network connections from interactive shells (cmd.exe, powershell.exe), establish a baseline of destination country, ASN, and port rarity. If a shell process, spawned after a potential escalation, initiates a connection to a destination in the 1st percentile of rarity (e.g., a country with no prior business connections), flag it as suspicious.",
              "Use a sequence-based model like an LSTM to analyze user sessions as a sequence of events (process create, file write, network connect). Train the model on benign administrative sessions. Flag any session that starts with a low-prevalence process chain (escalation) and transitions to a low-prevalence network connection (C2) as a high-confidence malicious sequence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]