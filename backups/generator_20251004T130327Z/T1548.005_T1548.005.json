[
  {
    "information_requirement": "Has the adversary achieved privilege escalation by abusing temporary elevated cloud access?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1548.005",
        "name": "Temporary Elevated Cloud Access",
        "evidence": [
          {
            "description": "A process creation event for a cloud command-line interface (CLI) tool (e.g., aws.exe, az.cmd, gcloud.cmd) on a host (Windows Event ID 4688) is temporally correlated (e.g., within 5 seconds) with a network connection to a cloud provider's identity and access management (IAM) or security token service (STS) API endpoint (Zeek conn.log), where the host's source IP address is found on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, developer endpoints, CI/CD pipeline servers, and network egress points.",
            "action": [
              "Create a correlation rule that joins Windows Event ID 4688 events where the process name is a known cloud CLI tool (e.g., 'aws.exe', 'az.cmd') with Zeek conn.log events by source IP and a 5-second time window. Trigger an alert if the source IP from the correlated event pair matches an IP address in a high-confidence threat intelligence feed.",
              "For each host, profile the frequency of its source IP appearing on threat intelligence watchlists over a 30-day rolling window. Establish a baseline for 'normal' watchlist hits (e.g., for hosts behind a shared proxy). Alert if a host's daily watchlist hit count exceeds the 99th percentile of its historical distribution, especially when correlated with cloud CLI activity.",
              "Train a supervised classification model (e.g., Random Forest) using labeled historical data. Use features such as process name, command-line arguments, source IP reputation, destination IP, destination port, and bytes transferred. Deploy the model to classify each new cloud CLI execution and its associated network flow as 'benign' or 'suspicious' in real-time."
            ]
          },
          {
            "description": "The command-line arguments of a cloud CLI process creation event (Windows Event ID 4688) contain specific strings for role assumption or token creation (e.g., 'sts:AssumeRole', 'iam.serviceAccounts.impersonate', 'Get-AzAccessToken') and include parameters that are statistically anomalous, such as an unusually long session duration or a role ARN that has never been used by that user before.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, servers with cloud SDKs/CLIs installed, and systems managed by infrastructure-as-code.",
            "action": [
              "Monitor the command line field of Windows Event ID 4688 events using regular expressions for keywords such as 'assume-role', 'get-session-token', 'impersonate-service-account', 'Get-AzAccessToken', and 'PassRole'. Alert on any match, providing the full command line and user context for analyst review.",
              "For each user-role pair, parse the 'duration-seconds' parameter from role assumption commands and maintain a historical distribution of requested durations. Flag any request where the duration exceeds the 95th percentile for that pair or a global high-water mark (e.g., 12 hours). Additionally, maintain a list of seen role ARNs per user and flag any 'first-seen' usage.",
              "Use an unsupervised anomaly detection model, such as an autoencoder, on the tokenized command-line arguments of role assumption events. Train the model on a baseline of normal commands from administrative users. A high reconstruction error on a new command indicates an anomalous and potentially malicious structure, parameter combination, or value."
            ]
          },
          {
            "description": "Network traffic to a cloud IAM/STS API endpoint, or a corresponding cloud CLI execution on a host, originates from a source IP address, geographic location, or occurs at a time of day that deviates significantly from the established baseline for the user identity associated with the request.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, bastion hosts, corporate LAN/WLAN segments, and authentication logs.",
            "action": [
              "Define an explicit access control list (ACL) of authorized source IP subnets (e.g., corporate office, VPN, CI/CD runners) for making role assumption requests. Join authentication logs (Windows Event ID 4624) with network logs (Zeek conn.log) to attribute traffic to a user. Alert if a request to a cloud IAM/STS endpoint originates from a user on a source IP outside the defined ACL.",
              "For each user account, build a profile of normal cloud API access, including typical source Autonomous System Numbers (ASNs), source countries, and hour-of-day. Flag any access where the hour-of-day has a Z-score greater than 3 from the user's mean activity time. Also, calculate the entropy of source countries per user over a rolling 24-hour window; a sudden spike indicates activity from new, unusual locations.",
              "Develop a time-series anomaly detection model (e.g., SARIMA) for the volume of temporary access requests per user and per source subnet. Train the model on at least 30 days of historical data to learn daily and weekly work cycles. Generate an alert when the observed request volume significantly exceeds the model's predicted forecast interval, suggesting a potential brute-force or scripted abuse scenario."
            ]
          },
          {
            "description": "Within a 15-minute window following a temporary privilege escalation event, the originating host or assumed identity performs a sequence of high-risk actions, such as accessing a sensitive data object (Windows Event ID 4663), enumerating permissions, or making outbound connections to known malicious domains (Zeek dns.log).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers hosting sensitive data, database servers, domain controllers, and cloud storage buckets.",
            "action": [
              "Define a high-risk event sequence: a Windows Event ID 4688 with 'assume-role' in the command line, followed within 15 minutes from the same host by a Windows Event ID 4663 ('Object Access') on a file share designated as 'critical', or a Zeek dns.log entry for a domain on a C2 watchlist. Create a correlation rule to alert on this specific sequence.",
              "For each user, establish a baseline of 'post-escalation' behavior by analyzing the top N actions (e.g., accessed file types, destination services) performed within 30 minutes of assuming a role. Use frequency analysis (e.g., TF-IDF) to identify actions that are rare for a specific user but common in known attack playbooks. A high score for a rare action post-escalation triggers an alert.",
              "Use a sequence analysis model, such as a Hidden Markov Model (HMM), to model legitimate sequences of user actions following a privilege escalation. Train the model on benign activity logs. If a new sequence of actions has a very low probability under the established benign model, flag it as anomalous and potentially malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by using temporary elevated cloud access?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1548.005",
        "name": "Temporary Elevated Cloud Access",
        "evidence": [
          {
            "description": "A network connection recorded in Zeek conn.log or a DNS query in dns.log originates from a company-owned cloud resource IP range and connects to a destination IP or resolves a domain that is present on a real-time C2 threat intelligence feed. The use of a legitimate, temporarily-accessed cloud resource serves to evade network egress filtering.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud VPC flow logs, DNS resolvers, and network egress points for cloud environments.",
            "action": [
              "Ingest a high-confidence C2 threat intelligence feed of IPs and domains, updating at least hourly. Create a rule that inspects all Zeek conn.log and dns.log records where the source IP is within a defined company cloud IP range. Alert on any event where the destination IP or queried domain matches an entry in the C2 feed.",
              "Analyze DNS queries (Zeek dns.log) from cloud resources. Calculate the entropy of subdomain labels for each parent domain queried; high entropy can indicate Domain Generation Algorithms (DGA). Concurrently, track the age of resolved domains and flag queries for domains registered within the last 24 hours that also exhibit low-volume, long-duration 'heartbeat' connections in conn.log.",
              "Train a classifier (e.g., XGBoost) to identify C2 traffic based on network flow features from Zeek conn.log, including connection duration, total packets, total bytes, protocol, and statistical properties of inter-packet arrival times. Deploy the model to score all outbound connections from the cloud environment in real-time."
            ]
          },
          {
            "description": "On a cloud virtual machine, a security audit log clearing event (Windows Event ID 1102) occurs, or a process is created (Windows Event ID 4688) that disables a security tool, and this activity is temporally correlated (within 60 minutes) with a recent temporary privilege escalation event.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1102"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud compute instances (VMs), container orchestration platforms, and centralized logging systems.",
            "action": [
              "Create a high-priority alert that triggers immediately upon the detection of Windows Event ID 1102 ('The audit log was cleared') on any cloud resource. Additionally, create a rule to monitor Windows Event ID 4688 for command-line arguments containing strings such as 'wevtutil cl Security' or 'Set-MpPreference -DisableRealtimeMonitoring $true'.",
              "Calculate the time delta between a temporary access grant (inferred from on-prem CLI logs or cloud provider logs) and a subsequent defense evasion event (e.g., Event ID 1102) for the same user or host. Create a statistical rule to alert if this time delta is below a threshold (e.g., 60 minutes), indicating a strong temporal link.",
              "Use a sequence-based anomaly detection model (e.g., LSTM) to analyze the sequence of commands executed on a cloud VM after a user logs in or a role is assumed. Train the model on legitimate administrative sessions. Flag sessions that contain a low-probability sequence, such as 'login -> assume-role -> disable-antivirus -> clear-logs', as highly suspicious."
            ]
          },
          {
            "description": "A network connection (Zeek conn.log) originates from a known cloud resource IP address and targets an internal enterprise asset that is not on a pre-approved communication allow-list for that resource, confirmed by a successful logon event (Windows Event ID 4624) on the target asset.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud-to-on-premise network gateways (e.g., VPN, Direct Connect), Domain Controllers, and internal network segments housing high-value assets.",
            "action": [
              "For each cloud resource group or VPC, maintain an explicit allow-list of internal IP addresses and ports it is permitted to communicate with. Monitor Zeek conn.log for all traffic originating from cloud IP ranges to internal subnets. Alert on any connection where the destination IP and port are not on the corresponding resource's allow-list.",
              "Generate a network graph where nodes are cloud resources and internal assets, and edges represent connections. Use frequency analysis to flag connections from a cloud resource to an internal asset that is a statistical outlier, such as a first-time connection or a connection to a host in the bottom 5th percentile of destinations for that resource.",
              "Employ an unsupervised clustering algorithm (e.g., DBSCAN) on network flow data between cloud and on-premise resources, using features like source/destination IP, port, protocol, and data volume. Benign traffic should form distinct clusters. Flag outliers or small, new clusters that do not fit established profiles as potential lateral movement."
            ]
          },
          {
            "description": "A network connection from a cloud resource, as seen in Zeek conn.log, exhibits characteristics inconsistent with its profiled baseline, such as communication over non-standard ports, periodic 'heartbeat' beaconing, a TLS handshake mismatch (Zeek ssl.log), or a significant increase in outbound data volume.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud network egress points, VPC flow logs, and application servers within the cloud environment.",
            "action": [
              "Create rules that alert on protocol-port mismatches for outbound traffic from cloud resources (e.g., traffic on port 53/UDP that is not DNS protocol, traffic on port 443/TCP that does not have a valid TLS handshake in Zeek ssl.log). Also alert on the use of known anonymization protocols like TOR.",
              "For each cloud resource, model its outbound data volume using a rolling 30-day average. Alert if the daily volume exceeds a dynamic threshold, such as 3 standard deviations above the mean. For connection patterns, calculate the standard deviation of inter-arrival times for connections to a single destination; a very low standard deviation indicates a periodic, machine-generated 'heartbeat' characteristic of C2.",
              "Use an autoencoder neural network to model normal network behavior for each cloud resource group. Train the model on a feature set from Zeek logs (e.g., protocol, port, duration, bytes sent, TLS version). Traffic that results in a high reconstruction error is flagged as a potential C2 channel or data exfiltration attempt."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]