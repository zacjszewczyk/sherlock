[
  {
    "information_requirement": "Is the adversary maintaining persistence using XDG Autostart entries?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.013",
        "name": "XDG Autostart Entries",
        "evidence": [
          {
            "description": "A new or modified XDG autostart .desktop file is observed, where the SHA256 hash of the file itself, or the SHA256 hash of the executable referenced in its 'Exec=' line, matches a known-bad hash from a threat intelligence source.",
            "data_sources": [
              "Sysmon for Linux Event ID 11 (FileCreate)",
              "Sysmon for Linux Event ID 1 (ProcessCreate)",
              "Linux Auditd file monitoring rules"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux endpoints (workstations and servers) with desktop environments; specifically, the contents of the /etc/xdg/autostart/ and ~/.config/autostart/ directories, and any directories specified by $XDG_CONFIG_DIRS.",
            "action": [
              "From file creation logs (Sysmon for Linux ID 11, Auditd), trigger on any new or modified .desktop file in an XDG autostart path. Extract the executable path from the 'Exec=' line. Calculate the SHA256 hash of both the .desktop file and the referenced executable. Query your threat intelligence platform or local IOC database for these hashes and alert on any match.",
              "For all executables referenced in .desktop files across the enterprise, calculate the prevalence (count of unique hosts) for each SHA256 hash. Create a daily report of hashes with a prevalence of less than 1% or that exist on fewer than 5 hosts. Investigate these rare executables, prioritizing those not signed by a trusted publisher.",
              "Train a supervised classification model (e.g., XGBoost, Random Forest) using features from .desktop files and their executables (e.g., file entropy, file size, ELF header information, string analysis). Use a labeled dataset of known-good and known-malicious autostart entries. Deploy the model to score all new autostart entries in real-time and alert on items classified as 'malicious' with a confidence score > 0.9."
            ]
          },
          {
            "description": "An XDG autostart .desktop file's 'Exec=' line contains a command structure indicative of malicious execution, such as invoking an interpreter against a script in a temporary or world-writable directory, or using command-line obfuscation.",
            "data_sources": [
              "Sysmon for Linux Event ID 1 (ProcessCreate)",
              "Sysmon for Linux Event ID 11 (FileCreate)",
              "Linux Auditd execve and file monitoring rules"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux endpoints with desktop environments; specifically, the command line arguments of processes spawned by the desktop environment manager and the contents of .desktop files in autostart directories.",
            "action": [
              "Using a SIEM rule, parse the CommandLine or argv field from process creation events (Sysmon ID 1, Auditd). Apply a regular expression to detect patterns like '(sh|bash|python|perl|zsh) /tmp/.*', '(sh|bash|python|perl|zsh) /var/tmp/.*', '(sh|bash|python|perl|zsh) /dev/shm/.*', or commands containing '| base64 --decode', '| rev', or '| sh'. Alert on any match.",
              "For all 'Exec=' command lines from .desktop files, calculate the Shannon entropy and character length. Establish a baseline distribution for these metrics from all known-good autostart entries. Alert on any new entry where the entropy or length exceeds the 98th percentile of the baseline, indicating abnormal complexity or obfuscation.",
              "Deploy a pre-trained NLP autoencoder model trained on a large corpus of legitimate Linux command lines. For each new 'Exec=' command line from an autostart entry, feed it to the model and calculate the reconstruction error. Flag commands with a reconstruction error in the top 2% of all observed commands as anomalous and requiring analyst review."
            ]
          },
          {
            "description": "A new .desktop file is created with a 'Name=' or 'Comment=' field value that impersonates a legitimate application (e.g., 'Chrome Update', 'System Service') but the 'Exec=' field points to an unsigned or unexpected executable path.",
            "data_sources": [
              "Sysmon for Linux Event ID 11 (FileCreate)",
              "Linux Auditd file monitoring rules"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux endpoints with desktop environments; specifically, the metadata within .desktop files located in /etc/xdg/autostart/ and ~/.config/autostart/.",
            "action": [
              "Maintain an allow-list mapping of legitimate 'Name=' values to their corresponding, valid 'Exec=' paths (e.g., 'Firefox' -> '/usr/bin/firefox'). On file creation (Sysmon ID 11), parse new .desktop files. Alert if the 'Name=' matches a known application but the 'Exec=' path is not on the allow-list or if the executable is in a user-writable directory.",
              "For all new .desktop files, calculate the Damerau-Levenshtein distance between the 'Name=' value and a dictionary of all known-good application names on the system. Flag entries with a distance between 1 and 3 for manual review as potential typo-squatting attempts (e.g., 'Chroem' vs 'Chrome').",
              "Use a clustering algorithm like DBSCAN on features extracted from .desktop files (e.g., TF-IDF vectors of 'Name' and 'Comment' fields, parsed 'Exec=' path). Legitimate applications should form dense clusters. Treat any entry classified as a noise point (i.e., not belonging to any cluster) as a high-priority anomaly indicative of masquerading."
            ]
          },
          {
            "description": "A process spawned from an XDG autostart entry initiates an external network connection and subsequently deletes its corresponding .desktop file within a short time frame, or connects to a destination with a rare JA3/JA3S hash.",
            "data_sources": [
              "Sysmon for Linux Event ID 1 (ProcessCreate)",
              "Sysmon for Linux Event ID 3 (NetworkConnect)",
              "Sysmon for Linux Event ID 23 (FileDelete)",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux endpoints with desktop environments, focusing on process, network, and file event correlation. Network gateways and core switches where Zeek sensors monitor egress traffic.",
            "action": [
              "Create a SIEM correlation rule that triggers when a Process Create event (Sysmon ID 1) with a desktop manager parent is followed by a Network Connect event (Sysmon ID 3) to an IP on a C2 threat feed, AND is followed by a File Delete event (Sysmon ID 23) for the source .desktop file, all within 120 seconds.",
              "From Zeek ssl.log data, build a baseline of all JA3 and JA3S hashes observed across the enterprise network. For any network connection originating from an autostart process, check the JA3/JA3S hash. Flag any connection using a hash that is new to the environment or has a prevalence of <0.1% as highly suspicious, as it indicates a non-standard client application.",
              "Implement a Hidden Markov Model (HMM) to detect malicious behavior chains. Define states such as 'Login', 'AutostartProcess', 'ExternalNetworkConnection', 'FileDelete'. Train the model on normal user activity. A sequence of states matching 'AutostartProcess' -> 'ExternalNetworkConnection' -> 'FileDelete' would have a very low probability under the trained model, thus flagging it as a high-confidence anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting privilege escalation using XDG Autostart entries?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.013",
        "name": "XDG Autostart Entries",
        "evidence": [
          {
            "description": "A process originating from a .desktop file in a system-wide autostart directory (/etc/xdg/autostart) initiates a network connection to a destination IP/domain on a threat intelligence feed or to a destination country/ASN never before seen from system processes.",
            "data_sources": [
              "Sysmon for Linux Event ID 1 (ProcessCreate)",
              "Sysmon for Linux Event ID 3 (NetworkConnect)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System-wide autostart directory /etc/xdg/autostart on all Linux hosts; network egress points instrumented with Zeek sensors for traffic analysis.",
            "action": [
              "Filter for Process Create events (Sysmon ID 1) where the process's parent is a desktop manager and its command line indicates it was launched from /etc/xdg/autostart. Correlate the process GUID with Network Connect events (Sysmon ID 3) or Zeek conn.log flows. Alert if the destination IP or requested domain (from Zeek dns.log) matches a known C2 indicator.",
              "Build a baseline profile of all destination Autonomous System Numbers (ASNs) and countries for legitimate processes launched from /etc/xdg/autostart. This profile should be very stable. Alert on any connection from a system-wide autostart process to an ASN or country not present in the baseline.",
              "Train a time-series anomaly detection model (e.g., LSTM autoencoder) on network traffic features (bytes sent/received, connection duration, protocol) for each legitimate process that runs from /etc/xdg/autostart. Monitor these processes in real-time and alert if the model flags a significant deviation in traffic patterns, such as periodic, low-volume 'heartbeat' traffic indicative of C2."
            ]
          },
          {
            "description": "The 'Exec=' line of a .desktop file in /etc/xdg/autostart contains commands or arguments associated with privilege escalation attempts, such as SUID/GUID bit manipulation, capability changes, or calls to known local exploits.",
            "data_sources": [
              "Sysmon for Linux Event ID 1 (ProcessCreate)",
              "Linux Auditd execve rules"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "The /etc/xdg/autostart directory on all Linux hosts; specifically monitoring the command lines of processes spawned from entities within this directory.",
            "action": [
              "From process creation logs (Sysmon ID 1, Auditd), inspect the command line of any process launched from /etc/xdg/autostart. Use a regex to alert on the presence of strings like 'sudo', 'pkexec', 'chmod [ug]+s', 'setcap cap_=', or names of known exploit scripts (e.g., 'dirtyc0w').",
              "Build a dictionary of all unique command line strings from legitimate processes in /etc/xdg/autostart. Calculate the term frequency-inverse document frequency (TF-IDF) for all tokens (words/arguments) in this dictionary. Alert on any new command line containing tokens with a very low IDF score (i.e., rare tokens) that are not part of the established baseline.",
              "Fine-tune a large language model (LLM) like a BERT variant on a dataset of malicious and benign shell commands. Use the fine-tuned model to classify the command line string of each process launched from /etc/xdg/autostart. Alert on any command classified as 'malicious' or 'privilege escalation' with high confidence."
            ]
          },
          {
            "description": "A file creation or modification event occurs in the system-wide /etc/xdg/autostart directory, and the event is attributed to a user account other than 'root' or a legitimate package manager process.",
            "data_sources": [
              "Sysmon for Linux Event ID 11 (FileCreate)",
              "Linux Auditd file modification rules"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs for the /etc/xdg/autostart/ directory and its contents on all Linux hosts.",
            "action": [
              "Create a high-severity alert rule that triggers on any file creation or write event (Sysmon ID 11, Auditd) within /etc/xdg/autostart/ where the User field is not 'root' (UID 0) and the Image (process) is not a known package manager (e.g., dpkg, rpm, yum).",
              "Establish a baseline of legitimate processes and users that modify /etc/xdg/autostart. Monitor the time of day for these modifications. Alert if a modification occurs outside of normal business hours or typical patch windows (e.g., 2-4 AM local time), as this timing is statistically anomalous for legitimate administrative activity.",
              "Train an Isolation Forest model on legitimate file modification events in /etc/xdg/autostart, using features such as User, Image (process), parent process, and time of day. The model will learn the profile of normal changes. Score all new modification events; events with a high anomaly score indicate a deviation from this profile and should be investigated."
            ]
          },
          {
            "description": "A process spawned from /etc/xdg/autostart performs a file write or modification to a sensitive system file or directory outside of its established baseline behavior, such as modifying /etc/passwd or dropping a new file in /usr/bin.",
            "data_sources": [
              "Sysmon for Linux Event ID 1 (ProcessCreate)",
              "Sysmon for Linux Event ID 11 (FileCreate)",
              "Linux Auditd file modification rules"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Sensitive system directories on all Linux hosts, including /etc, /bin, /sbin, /usr/bin, /usr/sbin, /boot, /root, and user profile/cron locations, correlating activity back to autostart processes.",
            "action": [
              "Create a correlation rule that links a process started from /etc/xdg/autostart (via Sysmon ID 1) to any subsequent file write events (Sysmon ID 11) performed by that process. Alert if the TargetFilename of the write event is a file within a protected directory like /etc/, /bin/, /sbin/, or if it matches critical files like /etc/passwd, /etc/shadow, /etc/sudoers.",
              "For each legitimate process that runs from /etc/xdg/autostart, build a historical baseline of all file paths it writes to. For any new file write event from one of these processes, check if the target path's parent directory is in the baseline. Alert if the directory is novel for that process, as this indicates a behavioral change.",
              "Model the system as a process-file interaction graph. Train a Graph Neural Network (GNN) on legitimate activity to learn normal interaction patterns. A new edge in the graph, representing a process from /etc/xdg/autostart writing to a sensitive file like /etc/ssh/sshd_config where no such edge existed in the training data, would be flagged as a high-confidence anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]