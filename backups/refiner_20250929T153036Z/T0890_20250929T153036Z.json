[
  {
    "information_requirement": "Is an adversary exploiting vulnerabilities to escalate privileges on critical ICS assets like Engineering Workstations or HMIs? (PIR)",
    "tactic_id": "TA0111",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T0890",
        "name": "Exploitation for Privilege Escalation",
        "evidence": [
          {
            "description": "A new process (Windows Event ID 4688 - New Process Name) with an executable name commonly associated with post-exploitation or administrative utilities (e.g., cmd.exe, powershell.exe, pwsh.exe, whoami.exe, net.exe, sc.exe, psexec.exe, mimikatz.exe, rundll32.exe, mshta.exe) is observed to be spawned by a parent process (Windows Event ID 4688 - Parent Process Name) identified as a whitelisted critical ICS application (e.g., HistorianService.exe, HMIServer.exe, SCADAManager.exe, OPCServer.exe) AND the parent process operates with elevated privileges (Windows Event ID 4688 - Parent Process Integrity Level is 'System' or 'High').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, and OPC Servers within the Process Control Network (PCN) and Manufacturing Zone (MZ).",
            "action": "1. Symbolic Logic: Identify Windows Event ID 4688 records where the 'New Process Name' field matches any executable from a predefined list of suspicious binaries (e.g., cmd.exe, powershell.exe, mimikatz.exe, rundll32.exe) AND the 'Parent Process Name' field matches an executable from a whitelist of approved critical ICS applications (e.g., HistorianService.exe, HMIServer.exe) AND the 'Parent Process Integrity Level' field is 'System' or 'High'. Generate an alert for any matching event, including 'ComputerName', 'ParentProcessName', 'NewProcessName', and 'ParentProcessIntegrityLevel'. 2. Statistical Method: For each unique 'Parent Process Name' associated with critical ICS applications, calculate the frequency of all 'New Process Name' children observed over the last 30 days. Flag any 'New Process Name' that has not been observed in the last 90 days for that specific parent process, or any 'New Process Name' whose frequency falls below the 1st percentile of observed frequencies for that parent process, indicating rare or novel execution. 3. Machine Learning: Collect historical Windows Event ID 4688 data for critical ICS assets, focusing on 'Parent Process Name' and 'New Process Name' pairs. Train a one-class SVM or Isolation Forest model on this dataset to learn normal process creation patterns. Deploy the trained model to continuously analyze new process creation events. Alert when the model assigns an anomaly score above a predefined threshold (e.g., 0.7), indicating a significant deviation from established normal behavior, potentially highlighting an exploited process."
          },
          {
            "description": "A new Windows service is created (Windows Event ID 4697 - Service Name, Service File Name) on a critical ICS asset where the 'Service Name' or 'Service File Name' does not match an approved allowlist of legitimate services, or the 'Service File Name' path points to a non-standard, temporary, or user-writable directory (e.g., C:\\Temp\\, C:\\Users\\Public\\, C:\\ProgramData\\, C:\\Windows\\Temp\\, %TEMP%). The service is typically configured to start automatically (Service Start Type = 2) or on demand (Service Start Type = 3) and runs under a privileged account (e.g., LocalSystem, NetworkService, Administrator).",
            "data_sources": [
              "Windows Event ID 4697",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), HMIs, Historian Servers, OPC Servers, and other critical Windows-based ICS infrastructure components within the PCN/MZ.",
            "action": "1. Symbolic Logic: Identify Windows Event ID 4697 or 7045 records where the 'Service Name' or 'Service File Name' is NOT present in an established allowlist of legitimate services for the specific host. Additionally, flag events where the 'Service File Name' contains a path segment from a predefined list of suspicious directories (e.g., C:\\Temp\\, C:\\Users\\Public\\, C:\\ProgramData\\, C:\\Windows\\Temp\\). Generate an alert for any matches, including 'ComputerName', 'ServiceName', 'ServiceFileName', and 'ServiceStartType'. 2. Statistical Method: For each new service creation (Event ID 4697 or 7045), extract the 'Service File Name' and calculate its Shannon entropy. Establish a baseline of entropy scores for legitimate service executables from known good systems. Flag services where the calculated entropy score exceeds the 95th percentile of the baseline entropy scores, indicating potential obfuscation, packed executables, or random naming schemes often associated with malicious implants. 3. Machine Learning: Collect historical Event ID 4697 and 7045 data, extracting features such as 'Service Name' (n-grams), 'Service File Name' (path, filename, extension, directory depth), 'Service Type', and 'Service Start Type'. Label known legitimate services as 'benign' and known malicious/anomalous services as 'malicious'. Train a binary classification model (e.g., Random Forest, Gradient Boosting) on this labeled dataset. Deploy the model to predict the likelihood of new service creations being malicious, alerting on high probability scores (e.g., >0.8) or classifications as 'malicious'."
          },
          {
            "description": "A network connection (Zeek conn.log) originating from a critical ICS asset (EWS, HMI, Historian) to an IP address or domain external to the Process Control Network (PCN) or not previously observed in the last 90 days, or a network-based file transfer (Zeek http.log, smb.log, files.log) of an executable payload (e.g., .exe, .dll, .ps1, .vbs, .jar, .bin) *to* the ICS asset, occurs within a short time window (e.g., 60-120 seconds) prior to a host-based privilege escalation event (e.g., anomalous process creation - Event ID 4688, new service installation - Event ID 4697/7045).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek smb.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 4697",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments connecting EWS, HMIs, and servers within the PCN/MZ; industrial demilitarized zones (IDMZ) and network gateways connecting the PCN to enterprise IT networks.",
            "action": "1. Symbolic Logic: Correlate Zeek conn.log entries where 'id.orig_h' is an ICS asset and 'id.resp_h' is an external IP address (not within known internal PCN ranges) or an uncommon port, OR Zeek files.log entries showing 'tx_hosts' as the external source and 'rx_hosts' as the ICS asset, with 'mime_type' indicating an executable ('application/x-msdownload', 'application/octet-stream', 'application/x-executable') or 'extracted_filename' ending in '.exe', '.dll', '.ps1', '.vbs', '.jar'. Identify these network events occurring within 120 seconds *before* a Windows Event ID 4688 (anomalous process creation) or 4697/7045 (new service installation) from the same ICS asset. Generate an alert for such correlated events, including 'Zeek_UID', 'Zeek_Timestamp', 'Windows_Timestamp', 'ComputerName', and relevant network/host fields. 2. Statistical Method: For each ICS asset, establish a baseline of unique destination IP addresses and ports ('id.resp_h', 'id.resp_p') observed in Zeek conn.log over the last 90 days. Calculate the statistical rarity (e.g., inverse frequency or z-score) of new '(id.resp_h, id.resp_p)' pairs. Flag connections with a rarity score exceeding the 99th percentile, especially if 'orig_bytes' or 'resp_bytes' are in the top 95th percentile for that asset, indicating a large, unusual data transfer. Then, correlate these rare network events with subsequent host-based privilege escalation attempts within a 2-minute window on the same asset. 3. Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA, LSTM, or Prophet) on the volume, protocol distribution ('proto'), and service type ('service') of network connections originating from critical ICS assets (using Zeek conn.log). Train the model on historical network activity. Detect significant, sustained deviations in network traffic patterns, particularly spikes in outbound connections to rare or external destinations or inbound transfers of large, uncommon file types. Correlate these network anomalies with host-based alerts from Windows Event IDs 4688, 4697, or 7045 that occur within a defined time window (e.g., 5 minutes) on the same asset, indicating potential C2, payload delivery, or data staging associated with privilege escalation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]