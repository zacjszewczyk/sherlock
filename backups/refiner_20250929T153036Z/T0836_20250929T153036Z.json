[
  {
    "information_requirement": "Is an adversary modifying critical process control parameters to impair operations?",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0836",
        "name": "Modify Parameter",
        "evidence": [
          {
            "description": "A 'Write' command to a critical ICS register or parameter contains a value that is outside the documented safe operating range (min/max acceptable values), or deviates by more than three standard deviations from the historical mean for that specific parameter, as observed in ICS protocol logs.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) Segments, PLC/RTU Controllers, SCADA Servers",
            "action": "1. **Symbolic Logic (Rule-based)**: Identify critical ICS registers/parameters (e.g., flow rates, temperatures, motor speeds) and their documented safe operating ranges (min/max acceptable values). Filter Zeek ICS protocol logs (e.g., `modbus.log`, `s7comm.log`) for 'Write' function codes targeting these critical parameters. Alert immediately if any written value falls outside the predefined safe operating range for that specific parameter. 2. **Statistical Method (Baseline Deviation)**: Establish a baseline of normal values for each critical parameter using historical data (e.g., last 90 days). Calculate the 1st and 99th percentiles (or mean and standard deviation) of observed values. Alert if a new 'Write' value for that parameter is outside the 1st-99th percentile range or deviates by more than 3 standard deviations from the mean. 3. **Machine Learning (Anomaly Detection)**: Train an unsupervised anomaly detection model (e.g., Isolation Forest or One-Class SVM) on historical 'Write' values for each critical parameter. Apply the trained model to real-time 'Write' commands to identify and alert on values classified as anomalous, especially those with low anomaly scores."
          },
          {
            "description": "A 'Write' command to an ICS device originates from a source IP address that is not on the established allowlist of authorized Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), or other control servers, or is observed communicating from the corporate IT network to the Process Control Network (PCN) in a manner inconsistent with documented firewall rules.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IT/OT Network Boundary, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs)",
            "action": "1. **Symbolic Logic (Allowlist/Denylist)**: Maintain a definitive allowlist of authorized source IP addresses for Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) permitted to send 'Write' commands to PLCs/RTUs. Filter Zeek ICS protocol logs (e.g., `modbus.log`, `s7comm.log`) for 'Write' commands and identify the `id.orig_h` (source IP). Alert immediately if `id.orig_h` is not on the authorized allowlist. 2. **Statistical Method (Unusual Source-Destination Pairs)**: Analyze historical Zeek `conn.log` data to establish baselines for common source-destination IP pairs and their communication volume between IT and OT networks. Alert if a connection to an ICS device's control port (e.g., Modbus TCP 502) originates from a source IP that has a historically low frequency (e.g., below 1st percentile) of communication with that specific ICS destination or port. 3. **Machine Learning (Network Flow Anomaly)**: Train a network flow anomaly detection model (e.g., using autoencoders or density-based clustering like DBSCAN) on aggregated Zeek `conn.log` data, focusing on connections between IT and OT segments. The model should learn normal communication patterns (source/destination IPs, ports, bytes transferred). Alert when new connection patterns, particularly those involving 'Write' commands to ICS devices, deviate significantly from the learned normal behavior."
          },
          {
            "description": "A 'Write' command to an ICS device, originating from an authorized EWS/HMI, correlates with a Windows logon session (Event ID 4624) on that EWS/HMI that exhibits multiple anomalous characteristics, such as login outside of normal working hours for the user, from an unusual geographic location (if VPN/remote access is used), or with an unusual device/workstation name for that user.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Active Directory Domain Controllers",
            "action": "1. **Symbolic Logic (Role-Based Access Control)**: Correlate the timestamp of 'Write' commands in Zeek ICS protocol logs with successful Windows logon events (Event ID 4624) on the originating EWS/HMI (matching `id.orig_h` in Zeek with `Source_Network_Address` in Event 4624, and matching timestamps within a short window, e.g., 5 minutes). Check if the `TargetUserName` from Event ID 4624 is present in an allowlist of accounts explicitly authorized to perform parameter modifications on that specific device. Alert if an unauthorized user account is detected. 2. **Statistical Method (Login Anomaly Score)**: For each authorized user account, establish a baseline of normal login characteristics from historical Windows Event ID 4624 data and Zeek `conn.log` (for source IP geolocation). Baselines should include typical login times (hour of day, day of week), source IP addresses/country, and source workstation names. For any login event correlated with a 'Write' command, calculate a risk score based on deviations from the user's baseline (e.g., login outside normal hours, from a rare geographic location, or an unfamiliar workstation). Alert if the cumulative risk score exceeds a predefined percentile (e.g., 95th percentile) for that user. 3. **Machine Learning (User Behavior Analytics)**: Train a User Behavior Analytics (UBA) model (e.g., using clustering or sequence analysis) on historical user login patterns (Windows Event ID 4624, including `Logon_Type`, `Source_Network_Address`, `Logon_Process_Name`, and `TargetUserName`). The model should learn typical sequences of events and login attributes for each user. When a 'Write' command is observed, evaluate the preceding logon event for the originating HMI/EWS against the UBA model. Alert if the logon event is classified as an outlier or anomaly by the model, indicating a potentially compromised or misused account."
          },
          {
            "description": "A single, critical control parameter (e.g., a setpoint, motor speed, valve position) is subjected to multiple 'Write' commands within an unusually short period, with a frequency or magnitude of change that significantly exceeds historical norms for that parameter, indicating rapid 'flapping' or oscillatory behavior.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "PLC/RTU Controllers, Process Control Network (PCN) Segments, SCADA/Historian Servers",
            "action": "1. **Symbolic Logic (Rate Threshold)**: For each critical ICS parameter/register, define a maximum permissible number of 'Write' commands within a short time window (e.g., 3 'Write' commands to a specific flow rate register within 10 seconds). Filter Zeek ICS protocol logs for 'Write' commands targeting these parameters. Alert if the count of 'Write' events for a single parameter from a single source exceeds this hard threshold within the defined time window. 2. **Statistical Method (Frequency and Magnitude Anomaly)**: For each unique device and parameter combination, establish baselines for both the frequency of 'Write' commands (writes per minute) and the average magnitude of value change per 'Write' (current value - previous value) using historical Zeek ICS logs. Calculate the 99th percentile for both metrics. Alert if, within a sliding time window (e.g., 60 seconds), the observed frequency of 'Write' commands or the average magnitude of value change for a parameter exceeds its respective 99th percentile baseline. 3. **Machine Learning (Time Series Anomaly Detection)**: Apply a time-series anomaly detection model (e.g., using an Exponentially Weighted Moving Average (EWMA) or a more advanced LSTM model) to the sequence of 'Write' events and their associated values for critical parameters. The model should learn the normal temporal patterns and value fluctuations. Alert when the model identifies significant deviations in the sequence or magnitude of parameter changes as anomalous, indicating potential oscillatory behavior or rapid manipulation."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]