[
  {
    "information_requirement": "Has an adversary captured wireless ICS communications for subsequent use (e.g., replay attacks)? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0887",
        "name": "Wireless Sniffing",
        "evidence": [
          {
            "description": "Detection of ICS process control commands originating from authorized wireless gateways that are either (1) received outside of their typical operational schedules (e.g., non-working hours, during maintenance windows), (2) contradict the current known state of the controlled physical process (e.g., 'valve open' command when valve is already open and no preceding 'valve close' occurred), or (3) trigger unexpected physical responses or generate system-level alerts (e.g., 'emergency stop' command followed by system error logs), indicating a potential replay attack.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek DNP3.log",
              "Zeek Modbus.log",
              "Windows Event ID 4624",
              "PLC Controller Logs",
              "ICS Historian Logs",
              "HMI Application Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments connecting wireless gateways to the ICS network, Wireless Access Points/Gateways, Human-Machine Interfaces (HMIs), and Engineering Workstations (EWS).",
            "action": "1. **Symbolic Logic**: Identify successful ICS command transmissions (`Zeek DNP3.log`, `Zeek Modbus.log`, or `Zeek conn.log` filtered by known ICS ports/protocols) originating from wireless gateways, targeting critical PLCs or RTUs. Cross-reference the timestamp of each command with `HMI Application Logs` or `Windows Event ID 4624` (successful logon) on associated HMIs/EWS. Flag any command where no corresponding authorized operator action (e.g., HMI interaction, successful logon from an authorized user) is recorded within a +/- 2-minute window of the command execution, indicating a potentially unauthorized or replayed command. Additionally, compare command parameters (e.g., 'open valve 1') with `ICS Historian Logs` to detect commands that contradict the current known state of the controlled device (e.g., commanding an 'open' action on an already open valve without an intervening 'close' command). 2. **Statistical Method**: For each unique wireless gateway and critical ICS asset pair, establish a 30-day rolling baseline of the frequency (commands per minute) and typical values/parameters of ICS commands (`Zeek DNP3.log`, `Zeek Modbus.log`). Calculate the 99th percentile for command frequency and, for numerical parameters, calculate the interquartile range (IQR) for typical values. Trigger an alert if, within any 5-minute window, the command frequency from a wireless gateway to a critical asset exceeds its 99th percentile, or if command parameters fall outside 1.5 times the IQR of their historical range, indicating anomalous or suspicious command patterns potentially from a replay. 3. **Machine Learning**: Develop a sequence-to-sequence anomaly detection model (e.g., LSTM Autoencoder or Transformer-based model) on the ordered sequence of command types, their parameters, and timing intervals observed in `Zeek DNP3.log` or `Zeek Modbus.log` from each wireless gateway. Train the model on at least 6 months of historical, legitimate ICS command sequences to learn normal operational patterns. Continuously feed new command sequences into the trained model. Flag any sequence that results in a reconstruction error exceeding the 95th percentile of historical reconstruction errors, indicating a significant deviation from learned normal command behavior consistent with a replay attack."
          },
          {
            "description": "Detection of MAC addresses or unique wireless device identifiers (e.g., WirelessHART Network IDs, Zigbee EUI-64s) transmitting on ICS operational frequencies (e.g., 900 MHz, 2.4 GHz, 700 MHz) that are not present in the authorized asset inventory. This also includes authorized devices exhibiting signal characteristics (e.g., RSSI, channel, modulation type) inconsistent with their established baseline, potentially indicating an impersonation or a rogue device operating in close proximity.",
            "data_sources": [
              "Wireless IDS Logs",
              "Spectrum Analyzer Logs",
              "ICS Asset Inventory Database",
              "Network Access Control (NAC) Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Physical airspace surrounding ICS facilities, specifically near wireless field devices, sensors, actuators, and wireless access points/gateways.",
            "action": "1. **Symbolic Logic**: Maintain an authoritative `ICS Asset Inventory Database` containing all authorized wireless device MAC addresses and unique identifiers (e.g., WirelessHART IDs, Zigbee EUI-64s). Configure `Wireless IDS Logs` and `Spectrum Analyzer Logs` to extract these identifiers. Implement a rule to immediately alert when a MAC address or unique device identifier is detected transmitting on ICS operational frequencies that is not present in the `ICS Asset Inventory Database`. 2. **Statistical Method**: For each authorized wireless device identified in `Wireless IDS Logs` or `Spectrum Analyzer Logs`, establish a 14-day rolling baseline for its typical signal strength (RSSI), operating channel, and average packet-per-second rate. Calculate the Z-score for these metrics over 5-minute intervals. Trigger an alert if any of these metrics for an authorized device exceeds a Z-score of 3.0 (3 standard deviations from its baseline mean) for two consecutive 5-minute intervals, indicating a significant deviation in signal characteristics potentially from a rogue device or impersonation. 3. **Machine Learning**: Train a K-Means or DBSCAN clustering model on historical `Wireless IDS Logs` and `Spectrum Analyzer Logs` data. Use features such as MAC address, unique device ID, average RSSI, standard deviation of RSSI, primary operating channel, and average packet size to establish clusters representing normal profiles for authorized devices. Continuously feed new observations into the model. Generate an alert if a newly observed device's characteristics do not fall within a predefined cluster of authorized devices (e.g., distance to nearest cluster centroid exceeds a threshold), or if an authorized device's characteristics significantly shift to a different cluster, indicating a potential rogue device or device impersonation."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary attempting to discover our wireless ICS protocols and frequencies? (PIR)",
    "tactic_id": "TA0102",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T0887",
        "name": "Wireless Sniffing",
        "evidence": [
          {
            "description": "Detection of unknown or unauthorized radio frequency (RF) transmitters emitting signals with characteristics indicative of reconnaissance, such as rapid frequency hopping, broad-spectrum sweeps, or significant power changes, specifically within or adjacent to licensed/unlicensed bands utilized by ICS protocols (e.g., WirelessHART at 2.4 GHz, Zigbee at 900 MHz/2.4 GHz, 700 MHz public safety spectrum).",
            "data_sources": [
              "Spectrum Analyzer Logs",
              "Wireless IDS Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Physical perimeter and airspace surrounding ICS facilities, focusing on sensitive areas like control rooms, substations, remote terminal units (RTUs), and field device arrays.",
            "action": "1. **Symbolic Logic**: Establish an authoritative baseline of all known and legitimate RF emissions (frequency ranges, typical power levels, modulation types) within ICS operational environments using `Spectrum Analyzer Logs`. Implement rules to alert on any detected RF signal that falls within ICS operational frequency bands but does not match any entry in the authorized baseline profile, and persists for more than 30 seconds. Additionally, alert on signals exhibiting common scanning patterns (e.g., continuous sweep across a band, rapid power fluctuations not associated with authorized devices). 2. **Statistical Method**: Continuously calculate the Shannon entropy of observed frequencies, power levels, and modulation types from `Spectrum Analyzer Logs` within defined ICS operational bands over rolling 1-minute windows. Establish a 30-day rolling baseline for these entropy values. Trigger an alert if the current entropy value for any of these metrics exceeds the 99th percentile of its respective baseline, indicating a sudden and statistically significant increase in varied or unpatterned RF activity consistent with reconnaissance or broad-spectrum scanning. 3. **Machine Learning**: Train a supervised classification model (e.g., Random Forest or Gradient Boosting Machine) using labeled historical `Spectrum Analyzer Logs` data. Features for training should include frequency ranges, average power, peak power, bandwidth, modulation type, duration of emission, and rate of frequency change. Label data as 'legitimate ICS communication', 'environmental noise', or 'reconnaissance/scanning activity'. Continuously feed real-time spectrum data into the trained model. Generate an alert when a high-confidence classification (e.g., >90% probability) of 'reconnaissance/scanning activity' is detected within or adjacent to ICS operational frequencies."
          },
          {
            "description": "A sudden and statistically significant increase in failed connection attempts, authentication failures, malformed ICS protocol packets, or connection resets observed in network traffic logs, specifically originating from an unknown or previously inactive IP address or wireless device ID targeting ICS wireless gateways or associated authentication services, indicative of wireless reconnaissance or brute-forcing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Wireless Gateway Authentication Logs",
              "Wireless Gateway Traffic Logs",
              "Active Directory Security Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network interfaces of ICS wireless gateways and associated authentication servers.",
            "action": "1. **Symbolic Logic**: Identify all connection attempts to ICS wireless gateways (via specific destination IPs/ports) in `Zeek conn.log` where `conn_state` is `S0` (connection attempt seen, no reply), `REJ` (connection rejected), or `RST` (connection reset). Correlate these with `Zeek notice.log` entries for `protocol_violation` or `scanning` notices. Trigger an alert if any source IP address or wireless MAC address (if available in logs) not present in the `ICS Asset Inventory Database` generates more than 10 failed connection attempts or 5 protocol violation notices within a 5-minute window. 2. **Statistical Method**: For each unique source IP address or wireless device ID observed interacting with ICS wireless gateways, establish a 14-day rolling baseline for the average rate of failed connections (`Zeek conn.log`: `conn_state`=`S0`, `REJ`, `RST`), `protocol_violation` notices (`Zeek notice.log`), and failed authentication attempts (`Wireless Gateway Authentication Logs`). Calculate the Z-score for the current 5-minute rates of these metrics. Trigger an alert for any source IP/device ID whose Z-score for any of these metrics exceeds 3.5 (3.5 standard deviations above the mean baseline) for two consecutive 5-minute windows, indicating a statistically significant surge in suspicious activity. 3. **Machine Learning**: Develop a Multivariate Time Series Anomaly Detection model (e.g., using an Isolation Forest or a one-class SVM) on aggregated features from `Zeek conn.log`, `Zeek notice.log`, and `Wireless Gateway Authentication Logs`. Features should include counts of failed connections, unique destination ports/services scanned, protocol violations, and failed authentication attempts per source IP/device ID over 1-minute intervals. Train the model on 30 days of historical benign traffic. Continuously feed real-time aggregated features into the model. Flag any interval where the anomaly score exceeds the 99th percentile of historical anomaly scores, indicating a highly anomalous probing or reconnaissance attempt."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]