[
  {
    "information_requirement": "Is an adversary attempting to hide their presence on critical ICS hosts? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0872",
        "name": "Indicator Removal on Host",
        "evidence": [
          {
            "description": "Occurrence of Windows Event ID 1102 (The audit log was cleared) on an ICS host.",
            "data_sources": [
              "Windows Event ID 1102",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, and OT Domain Controllers.",
            "action": "1. Symbolic Logic: Generate a critical alert for any instance of Windows Event ID 1102 on an ICS host. Correlate this event with Windows Event ID 4624 (logon events) to identify the user, and with documented authorized user accounts and predefined maintenance windows. Any occurrence by an unauthorized user or outside of approved maintenance windows triggers an immediate high-priority alert. 2. Statistical Method: Establish a historical baseline (e.g., 90-day rolling window) for Windows Event ID 1102 occurrences on each production ICS host, which should ideally be zero. Generate an alert if any instance of Event ID 1102 is detected, as it represents an extreme deviation (e.g., exceeding the 99.9th percentile) from expected activity. Track the time difference between the audit log being cleared and the last successful interactive logon (Windows Event ID 4624 Type 2 or 10) to identify suspicious proximity. 3. Machine Learning: Implement a User and Entity Behavior Analytics (UEBA) model that profiles normal administrative activity and event log clearing patterns on ICS hosts. A sudden occurrence of Windows Event ID 1102 from an account or process with no historical precedent for such actions, or at an anomalous time (e.g., using a time-series anomaly detection model like Isolation Forest), would flag a high-risk anomaly using a classification algorithm, triggering an alert with a confidence score."
          },
          {
            "description": "Anomalous volume of file deletion events (Windows Event ID 4663 with 'DELETE' access) originating from a single user account or process on an ICS host, specifically targeting system log directories (e.g., C:\\Windows\\System32\\winevt\\Logs\\), application log paths (e.g., C:\\ProgramData\\<App>\\Logs\\), or temporary user profile directories.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek fileinfo.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on Engineering Workstations, HMIs, Process Control Servers, and Historian Servers, specifically directories containing logs (e.g., C:\\Windows\\System32\\winevt\\Logs\\), temporary files, and user profiles.",
            "action": "1. Symbolic Logic: Monitor Windows Event ID 4688 for process command lines containing known log clearing utilities or commands (e.g., `wevtutil.exe cl`, `del /s /q`, `sdelete.exe -z`, `rm -rf`) executed against sensitive log directories (`C:\\Windows\\System32\\winevt\\Logs`, `C:\\ProgramData\\<App>\\Logs`). Generate a high-severity alert for any match. Additionally, look for `fsutil usn deletejournal` command executions. 2. Statistical Method: For Windows Event ID 4663 (Object Access - Handle Closed, with DELETE access), establish a rolling 7-day baseline of unique file deletion counts per user and per process on each critical ICS host. Generate an alert if the number of deletions within a 15-minute window exceeds the 99th percentile or three standard deviations above the average for that user/process/host combination. Calculate the entropy of deleted file names within a short time window (e.g., 5 minutes); a sudden drop in entropy could indicate programmatic deletion of similar files. 3. Machine Learning: Apply a time-series anomaly detection model (e.g., Isolation Forest or ARIMA) to the rate of file deletion events (Windows Event ID 4663) over time for each ICS host. Anomalous spikes or sustained high rates of deletion, especially when correlated with low-reputation processes (e.g., based on PE hash reputation) or unusual user activity, should trigger a high-fidelity alert. Use a clustering algorithm to identify groups of hosts/users exhibiting similar anomalous deletion patterns."
          },
          {
            "description": "Execution of commands (identified via Windows Event ID 4688) specifically targeting and deleting or modifying known command-line history files (e.g., PowerShell ConsoleHost_history.txt, .bash_history, .zsh_history, psreadline.log) in user profile directories on ICS hosts.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and other ICS hosts where operators or administrators might use command-line interfaces, specifically user profile directories containing history files.",
            "action": "1. Symbolic Logic: Create a high-severity alert for Windows Event ID 4688 where `CommandLine` contains keywords like `del`, `erase`, `rm`, `shred`, `sdelete` combined with file paths for known history files (e.g., `*ConsoleHost_history.txt*`, `*.bash_history*`, `*.zsh_history*`, `*psreadline.log*`, `*history.log*`). Prioritize alerts where the executing process is uncommon or the user account is not typically authorized for such actions. 2. Statistical Method: Establish a baseline for how often known command history files are legitimately deleted or modified by authorized users/scripts on each ICS host (ideally, this count should be zero or near-zero). Any occurrence outside this baseline, or an increase exceeding the 99th percentile of historical activity, should trigger an alert. Calculate the time difference between a user's logon (Windows Event ID 4624) and the deletion of their history file; a very short interval may indicate malicious intent. 3. Machine Learning: Use a classification model (e.g., Random Forest) trained on normal and anomalous process execution patterns to identify Windows Event ID 4688 events that target history files. Features could include process name, parent process, user, command line arguments, execution time, and file path entropy. A high anomaly score for such an event, especially when combined with other indicators of compromise, would indicate suspicious activity requiring immediate investigation."
          },
          {
            "description": "A critical service state change (Windows Event ID 7036) indicating the 'Windows Event Log' service has stopped, or a service configuration modification (Windows Event ID 7040) altering its startup type to disabled, on an ICS host, particularly when not initiated by a privileged, authorized account or during an approved maintenance window.",
            "data_sources": [
              "Windows Event ID 7036",
              "Windows Event ID 7040",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Services running on critical ICS hosts like EWS, HMIs, Historians, and OT Domain Controllers.",
            "action": "1. Symbolic Logic: Create a critical alert for Windows Event ID 7036 where `ServiceName` is 'EventLog' and `ServiceState` is 'stopped'. Similarly, alert for Windows Event ID 7040 where `ServiceName` is 'EventLog' and `NewStartType` is 'Disabled'. Correlate these events with recent `Zeek conn.log` entries for preceding RDP, SMB, or SSH sessions originating from unusual sources, and with Windows Event ID 4624 to confirm the user context. Whitelist known administrative actions. 2. Statistical Method: Establish a historical baseline (e.g., 90 days) for occurrences of Windows Event ID 7036 and 7040 for the 'EventLog' service across all ICS hosts. Since these events should be extremely rare or non-existent, any occurrence (exceeding the 99.9th percentile) immediately triggers a critical alert. Track the frequency of service stop/disable events per user account; any deviation from a zero-frequency baseline for non-privileged accounts is highly suspicious. 3. Machine Learning: Implement a host-based anomaly detection model (e.g., a supervised classification model like SVM or unsupervised anomaly detection like One-Class SVM) that profiles normal service state changes and configurations (Windows Event ID 7036, 7040) for the 'EventLog' service. A sudden, unapproved stop or disablement of the 'EventLog' service, especially from an unusual user context (e.g., identified by UEBA) or at an anomalous time (e.g., identified by a time-series model), would be flagged with a high-confidence anomaly score and trigger a high-priority alert."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]