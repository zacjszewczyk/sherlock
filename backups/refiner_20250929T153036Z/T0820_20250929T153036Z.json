[
  {
    "information_requirement": "Is an adversary exploiting software vulnerabilities in ICS devices to evade security controls? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0820",
        "name": "Exploitation for Evasion",
        "evidence": [
          {
            "description": "Observed network connections to or from ICS devices (e.g., PLCs, RTUs, HMIs) that utilize non-standard ICS protocols, communicate over unexpected ports for a given protocol, or exhibit data volumes significantly deviating from established baselines, indicating potential exploit attempts, C2 activity, or data exfiltration designed to evade network security controls.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek dce_rpc.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Network boundary between IT and OT networks, Industrial Demilitarized Zone (IDMZ)",
            "action": "1. Establish a baseline of normal network communications (source IP, destination IP, destination port, protocol, service, connection duration, byte count) between EWS/HMIs and field devices (e.g., PLCs, RTUs) using Zeek conn.log over a 30-day period. Focus on common ICS protocols (Modbus, S7Comm, EtherNet/IP). 2. Symbolic Logic: Generate high-priority alerts for Zeek conn.log entries showing connections from non-EWS/HMI assets to known ICS device engineering ports (e.g., Modbus/TCP 502, S7Comm 102, EtherNet/IP 44818). Also, alert on the use of non-standard or unexpected protocols (e.g., HTTP/S, FTP, SMB) to ICS devices unless explicitly whitelisted. Cross-reference alerts with Zeek notice.log for signatures of known ICS exploits (e.g., CVE-XXXX-YYYY hits). 3. Statistical Method: For established unique source-destination-port-protocol tuples, calculate the 99th percentile for 'orig_bytes' and 'resp_bytes' from Zeek conn.log. Alert on any connection exceeding these thresholds, indicating unusually high data volume transfers (e.g., large configuration backups or firmware downloads outside of maintenance windows). Additionally, calculate the interquartile range (IQR) for connection durations, and flag connections with durations exceeding Q3 + 1.5*IQR. 4. Machine Learning: Apply a time series anomaly detection model (e.g., Isolation Forest or Prophet) to monitor connection counts and aggregated byte volumes (orig_bytes + resp_bytes) per critical ICS device. Flag significant deviations (e.g., sudden spikes in connections to a PLC that is typically stable, or sustained high data transfers) from historical patterns as potential exploit attempts or post-exploitation activity for evasion. 5. Analyze Zeek dce_rpc.log and rdp.log for anomalous RDP/DCE/SMB activity from EWS/HMIs to ICS devices or between ICS devices, such as connections to devices not typically accessed via these protocols or RDP sessions originating from unusual sources. Specifically look for RDP connections to PLCs or RTUs."
          },
          {
            "description": "Observed execution of processes or scripts on ICS-connected workstations (EWS, HMIs) exhibiting characteristics such as unsigned executables, execution from temporary or unusual directories (e.g., C:\\Users\\Public), obfuscated or high-entropy command-line arguments, or the use of living-off-the-land binaries (LOLBins) for system modification, network discovery, or unauthorized communication, indicating potential exploit payload execution or post-exploitation activity for evasion.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Jump Servers within the OT network",
            "action": "1. On EWS and HMI systems, monitor for process creation (Windows Event ID 4688). Establish a whitelist of legitimate engineering software, system utilities, and their expected execution paths and command-line arguments. Include known LOLBins and scripting interpreters (e.g., powershell.exe, cmd.exe, wscript.exe) with their legitimate usage patterns. 2. Symbolic Logic: Alert on the execution of processes not present in the whitelist, or on known malicious tools (e.g., mimikatz, nmap, psexec) regardless of path. Generate alerts for scripting interpreters or LOLBins (e.g., certutil.exe, bitsadmin.exe) executing with suspicious command-line arguments (e.g., base64 encoded strings, network discovery parameters, download commands). Also, flag processes executing from temporary directories (e.g., %TEMP%, %APPDATA%) or unexpected system locations. 3. Statistical Method: Calculate the Shannon entropy of command-line arguments for all executed processes (Windows Event ID 4688). Generate alerts for command lines with an entropy score exceeding the 99th percentile (indicating potential obfuscation or random string generation). Additionally, identify rare parent-child process relationships (e.g., a Microsoft Word process spawning cmd.exe, or an HMI application spawning a network scanner) by comparing against a baseline of common process trees and flagging occurrences below the 1st percentile frequency. 4. Machine Learning: Use a process behavior classification model (e.g., Random Forest or SVM) trained on historical data to identify anomalous process execution patterns or command-line argument structures. The model should consider features like process name, parent process, execution path, command-line arguments, and user. Flag processes that deviate significantly from their expected behavior profile as potential evasion attempts. 5. Correlate suspicious process execution (Windows Event ID 4688) with subsequent outbound network connections (Windows Event ID 5156 - Filtering Platform Connection) from the same process to ICS devices or external IP addresses, especially if the destination is an unauthorized network segment or external C2."
          },
          {
            "description": "Observed file transfers to ICS devices (e.g., PLCs, RTUs, IEDs) of specific file types (e.g., firmware, configuration files, project files) that originate from unauthorized sources, have unexpected file hashes (SHA256), or occur outside of approved maintenance windows, indicating an attempt to manipulate device firmware or configurations for evasion or persistence.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN), Engineering Workstations (EWS), Industrial Demilitarized Zone (IDMZ) for firmware update servers, OT File Servers",
            "action": "1. Filter Zeek files.log for file transfers over common industrial protocols (e.g., FTP, TFTP, HTTP, SMB) with file extensions associated with firmware (.bin, .hex, .fw, .img, .upd) or critical configuration/project files (.xml, .cfg, .prj, .acd). 2. Symbolic Logic: Create a whitelist of authorized source systems (e.g., specific EWS IPs), authorized destination ICS devices, and known-good file hashes (SHA256) for legitimate firmware and configuration files. Alert immediately on any firmware or configuration file transfer originating from an unauthorized source IP, destined for an unauthorized device, or having an unknown/mismatched file hash. Also, alert on such transfers occurring outside of defined maintenance windows (e.g., 24/7 monitoring with exceptions for scheduled changes). 3. Statistical Method: Identify instances where the same firmware or configuration file (based on SHA256 hash) is transferred to an unusually high number of devices within a short period (e.g., exceeding the 99th percentile for device count per file hash per hour). Analyze the byte count and duration of firmware transfers from Zeek files.log, flagging any significant deviations (e.g., 3 standard deviations from the mean) from historical norms for specific firmware types or devices. 4. Machine Learning: Employ a classification model (e.g., Gradient Boosting Classifier) to categorize firmware and configuration transfer events as legitimate or malicious. Features for the model could include source IP reputation, destination device type, file hash entropy, file extension, transfer protocol, time of day, and historical transfer patterns. The model should flag events with a high probability of being malicious. 5. Analyze the corresponding Zeek conn.log record to identify the source, destination, and service used for the transfer. For Windows-based file shares hosting firmware or configuration repositories, monitor Windows Event ID 4663 (An attempt was made to access an object) for read/write access to these critical files, specifically looking for unauthorized access attempts or modifications."
          },
          {
            "description": "Observed Windows Event IDs indicating the clearing of security logs, the stopping or disabling of critical security services (e.g., antivirus, EDR agent, host-based firewall, logging services), or unauthorized modifications to system security configurations on EWS, HMIs, or other critical Windows servers within the ICS network, signifying an adversary's attempt to remove forensic evidence, disable host-based defenses, or establish persistence.",
            "data_sources": [
              "Windows Event ID 1102",
              "Windows Event ID 7040",
              "Windows Event ID 4719",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Windows Servers within the ICS network, OT Domain Controllers",
            "action": "1. Create high-priority alerts for Windows Event ID 1102 (The audit log was cleared) on all critical HMI, EWS, and Windows servers within the ICS network. 2. Symbolic Logic: Monitor for Windows Event ID 7040 (A service was installed/started/stopped) specifically for critical security tools (e.g., antivirus, EDR agent, host-based firewall, logging services, security update services). Alert immediately if these services are stopped, disabled, or their startup type is changed to disabled. Also, alert on Windows Event ID 4719 (System audit policy was changed) and Windows Event ID 4657 (A registry value was modified) targeting known security-related registry keys (e.g., disable security features, modify boot settings) or audit policies that could reduce logging. 3. Statistical Method: Perform a frequency analysis of service state changes (Event ID 7040) across all monitored systems. Alert on any service status change that falls outside the 99th percentile of historical occurrences for that specific service, especially if it's a security-critical service. Monitor the volume of security event logs (e.g., Event ID 4624, 4688); a sudden, significant drop (e.g., 90% reduction within 5 minutes) in log volume for a host could indicate log tampering or a successful log clearing attempt. 4. Machine Learning: Apply a sequence analysis model (e.g., Hidden Markov Model or state-based anomaly detection) to correlate these evasion events. For example, identify patterns where an anomalous login (Windows Event ID 4624) or suspicious process execution (Windows Event ID 4688) is immediately followed by a log clear (Event ID 1102) or security service disable (Event ID 7040). This model can learn typical sequences of events and flag deviations. 5. Correlate these events with preceding anomalous login activity (Windows Event ID 4624) or process execution (Windows Event ID 4688) on the same host to identify the potential source or context of the evasion activity. Investigate the user account or process responsible for these security-impacting changes."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]