[
  {
    "information_requirement": "Are unauthorized tools or files being transferred to critical ICS assets like HMIs, Engineering Workstations, or Historians? (PIR)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0867",
        "name": "Lateral Tool Transfer",
        "evidence": [
          {
            "description": "Observation of a successful network file transfer (e.g., SMB, FTP, SFTP) to a critical ICS asset (HMI, Engineering Workstation, Historian), where the transferred file possesses an executable (e.g., .exe, .dll), script (.ps1, .bat), archive (.zip, .rar), or known malicious file extension, or where its internal file signature (magic bytes) identifies it as an executable, and the source IP is not from an approved internal update server or management system.",
            "data_sources": [
              "Zeek smb_files.log",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments where critical ICS assets (e.g., HMIs, Engineering Workstations, Historians, PLC programming terminals) communicate, particularly at IT/OT zone boundaries, within the industrial control network (e.g., Level 2/3 networks), and at demilitarized zones (DMZs) connecting IT to OT.",
            "action": "1. Symbolic Logic: Query Zeek smb_files.log and Zeek files.log for records where the 'fuid' (file unique ID) indicates a file transfer to an IP address identified as a critical ICS asset. Filter for 'filename' values ending in common executable/script extensions (.exe, .dll, .ps1, .bat, .vbs, .jar, .hta) or archive extensions (.zip, .rar, .7z). Additionally, identify transfers where 'path' in smb_files.log contains administrative shares (e.g., 'C$', 'ADMIN$'). Alert immediately if the 'id.orig_h' (source IP) is not on an approved whitelist of IPs authorized to transfer such file types to critical ICS assets. 2. Statistical Method: For all Zeek smb_files.log and files.log entries representing transfers to critical ICS assets, calculate the Shannon entropy of the 'filename' field. Establish a rolling 30-day baseline for filename entropy values for each critical ICS asset. Generate an alert when a transferred file's filename entropy value exceeds the 95th percentile of the established baseline for that specific ICS asset, indicating a potentially obfuscated or randomly generated filename. 3. Machine Learning Application: Develop a time-series anomaly detection model (e.g., using Isolation Forest or Prophet) trained on historical (e.g., 90 days) Zeek smb_files.log and files.log data, specifically focusing on the volume and frequency of executable/archive file transfers to critical ICS assets. The model should learn normal patterns of file transfer activity. Alert on significant deviations (e.g., a sudden increase in the number of executable transfers, or transfers from unusual source IPs/ports) that fall outside the model's learned normal behavior, which could indicate a lateral tool transfer event."
          },
          {
            "description": "A Windows Event ID 5145 (A network share object was checked to see if client can be granted desired access) with 'Accesses' field containing 'WriteData' or 'AppendData', targeting a critical ICS host, where the 'ShareName' corresponds to an administrative share (e.g., C$, ADMIN$) or a sensitive system directory, and the 'SourceAddress' or 'AccountName' is not present on an established whitelist of authorized entities for such write operations.",
            "data_sources": [
              "Windows Event ID 5145"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices configured as critical ICS assets (e.g., HMIs, Engineering Workstations, Historians, OPC Servers, Domain Controllers within the OT network, SCADA servers) where Windows security auditing is enabled for file share access, typically configured via Group Policy Objects (GPOs).",
            "action": "1. Symbolic Logic: Filter Windows Event ID 5145 logs on critical ICS hosts. Identify events where the 'Accesses' field contains 'WriteData' or 'AppendData'. Further filter for events where the 'ShareName' ends with '$' (indicating an administrative share) or the 'RelativeTargetName' points to sensitive system directories (e.g., 'Windows\\System32', 'Program Files', common application installation paths). Alert immediately if the 'SourceAddress' or 'AccountName' is not found in an approved whitelist of users/systems authorized to write to these shares/directories on the specific ICS asset. 2. Statistical Method: For each critical ICS host, establish a 30-day rolling baseline of Windows Event ID 5145 write events. Track the frequency and volume of write operations for unique combinations of 'SourceAddress', 'AccountName', and 'ShareName'. Calculate the mean and standard deviation for these metrics. Generate an alert when the current count of write events for a specific 'SourceAddress'-'AccountName'-'ShareName' tuple exceeds the 99th percentile or two standard deviations from its historical baseline, or when a completely new 'SourceAddress'-'AccountName' pair is observed performing write operations to an administrative share for the first time. 3. Machine Learning Application: Implement an unsupervised user behavior analytics (UBA) model (e.g., Isolation Forest or One-Class SVM) on aggregated Windows Event ID 5145 data. Train the model to profile normal write access patterns for each critical ICS host, considering attributes such as 'SourceAddress', 'AccountName', 'ShareName', 'Accesses', 'time of day', and 'day of week'. Alert when the model identifies a significant anomaly score for a write event, indicating behavior that deviates substantially from established normal user or system interaction patterns with network shares on ICS assets."
          },
          {
            "description": "The immediate execution (within 300 seconds) of a newly created process (Windows Event ID 4688) on a critical ICS host, where the 'NewProcessName' (full path to executable) matches the 'RelativeTargetName' (full path of file written) from a preceding Windows Event ID 5145 (network share write) event on the same host. This correlation signifies that a file transferred over the network was subsequently executed.",
            "data_sources": [
              "Windows Event ID 5145",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical ICS hosts (e.g., HMIs, Engineering Workstations, Historians, application servers, OPC Servers, PLC programming workstations) with robust Windows security event logging enabled for both detailed file share auditing and process creation, potentially augmented by endpoint detection and response (EDR) agents for enriched process monitoring.",
            "action": "1. Symbolic Logic: For critical ICS hosts, join Windows Event ID 5145 events (where 'Accesses' contains 'WriteData' or 'AppendData') with Windows Event ID 4688 events. Correlate events where the 'RelativeTargetName' from Event ID 5145 exactly matches the 'NewProcessName' from Event ID 4688, and the timestamp of Event ID 4688 occurs within 300 seconds (5 minutes) after the timestamp of Event ID 5145 on the same host. Trigger a high-priority alert for any successful correlation, as this indicates immediate execution of a recently transferred file. 2. Statistical Method: Establish a 90-day baseline of legitimate process creations from network shares on critical ICS hosts by analyzing historical correlations between Windows Event ID 5145 and 4688. Calculate the average and standard deviation of the time delta between file transfer and process creation for known legitimate applications or operational scripts. Flag correlations where the time delta is significantly shorter (e.g., below the 5th percentile) than the established baseline for legitimate applications, or where the 'NewProcessName' is entirely new or has a very low frequency count (e.g., less than 5 occurrences in 90 days) for that specific host. 3. Machine Learning Application: Develop a sequence-based anomaly detection model (e.g., Hidden Markov Model or recurrent neural network) that learns typical sequences of file transfer (Windows Event ID 5145) followed by process creation (Windows Event ID 4688) on critical ICS hosts. Train the model on historical event sequences to understand normal operational workflows and application updates. Alert when an observed sequence deviates significantly from learned normal patterns, such as an unexpected executable being run shortly after a network transfer, or a sequence occurring outside of normal maintenance windows, indicating potential malicious lateral tool transfer and execution."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]