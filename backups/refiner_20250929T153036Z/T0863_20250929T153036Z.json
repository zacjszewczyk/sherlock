[
  {
    "information_requirement": "Has an adversary successfully tricked an ICS operator or engineer into executing malicious code?",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0863",
        "name": "User Execution",
        "evidence": [
          {
            "description": "Observed process creation event (`Windows Event ID 4688`) where a common office productivity application (`winword.exe`, `excel.exe`, `powerpnt.exe`, `acrord32.exe`) on an ICS endpoint is the parent of a command-line interpreter (`cmd.exe`, `powershell.exe`) or scripting engine (`wscript.exe`, `cscript.exe`), especially if accompanied by unusual command-line arguments or rapid subsequent network connections.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices within the ICS network, including Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, and ICS DMZ servers; network traffic monitoring points at ICS zone boundaries (e.g., firewall logs, Zeek sensors).",
            "action": "1. **Symbolic Logic:** Implement a SIEM rule to detect `Windows Event ID 4688` where `ParentProcessName` is `winword.exe`, `excel.exe`, `powerpnt.exe`, or `acrord32.exe` AND `NewProcessName` is `cmd.exe`, `powershell.exe`, `wscript.exe`, or `cscript.exe`. Further refine by looking for `CommandLine` arguments in the child process that are indicative of execution (e.g., `/c`, `-EncodedCommand`, `-File`) and are not part of an approved baseline. Exclude known legitimate processes/command lines based on an approved whitelist for ICS applications. \n2. **Statistical Method:** For all `Windows Event ID 4688` events matching the parent-child process pattern (Office app -> interpreter), calculate the historical frequency of this exact `ParentProcessName` + `NewProcessName` + `CommandLine` combination on each host over the past 90 days. Alert if the current observation's frequency is in the bottom 5th percentile of historical frequency for that host, or if it represents a previously unseen combination. Use descriptive statistics (mean, standard deviation) to characterize normal behavior and flag events exceeding 3 standard deviations from the mean frequency. \n3. **Machine Learning Application:** Apply an unsupervised anomaly detection algorithm (e.g., Isolation Forest or One-Class SVM) to `Windows Event ID 4688` data, specifically focusing on features derived from `ParentProcessName`, `NewProcessName`, `CommandLine`, and `User`. Train the model on historical ICS endpoint process data to establish a baseline of normal activity. Flag events with high anomaly scores, indicating deviations from learned patterns. Correlate these anomalous process chains with `Zeek files.log` (looking for suspicious file hashes or names within a 60-second window) and `Zeek conn.log` (identifying unusual outbound connections from the affected host within 120 seconds of the event) to determine if a potentially malicious document was involved and its origin."
          },
          {
            "description": "An executable process originating from a user-writable directory (`C:\\Users\\*\\Downloads\\`, `C:\\Users\\*\\AppData\\Local\\Temp\\`, `C:\\ProgramData\\`) on an ICS endpoint, identified by `Windows Event ID 4688`, is observed initiating an outbound network connection (`Zeek conn.log`) to an external or unapproved internal IP address or uncommon port (not in a defined whitelist) within 60 seconds of its creation. Further suspicion is raised if the executable's `OriginalFileName` or `Description` is absent or generic, or if `SigningStatus` indicates unsigned or invalid signature.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (EWS, HMIs, Maintenance Laptops, Jump Boxes) within ICS zones; network egress points from the ICS network to the enterprise network or internet; internal network segments where software repositories reside; ICS DMZ network segments.",
            "action": "1. **Symbolic Logic:** Identify `Windows Event ID 4688` events where `NewProcessPath` contains `\\Users\\` and (`\\Downloads\\` OR `\\AppData\\Local\\Temp\\` OR `\\ProgramData\\`). Immediately correlate with `Zeek conn.log` for any outbound connections initiated by the `NewProcessId` within 60 seconds. Flag connections to non-RFC1918 IPs or IPs not in an approved external whitelist. Cross-reference the executable's `ImageHash` (SHA256) with threat intelligence feeds (e.g., VirusTotal, open-source IOCs) and alert on any positive matches. Also, check for `SigningStatus` (if available from EDR/Sysmon) indicating 'unsigned' or 'invalid'. \n2. **Statistical Method:** For processes originating from user-writable directories (as identified by `NewProcessPath` in `Windows Event ID 4688`), calculate the entropy of the `NewProcessName` field. Alert if the entropy score exceeds a threshold (e.g., > 4.5 bits per byte), which often indicates randomly generated malware filenames. Additionally, for network connections (`Zeek conn.log`) initiated by these processes, establish a baseline of common destination IP/port pairs for each ICS host over the last 30 days. Flag connections to destinations that are in the bottom 1st percentile of observed frequency for that host or have never been observed before. Calculate the `avg_duration` and `orig_bytes` for these connections and flag those significantly outside (e.g., > 3 standard deviations) of the host's historical normal range for unusual connections. \n3. **Machine Learning Application:** Develop a supervised machine learning model (e.g., Random Forest or Gradient Boosting) trained on historical `Windows Event ID 4688` and `Zeek conn.log` data. Features should include `NewProcessPath` characteristics (e.g., depth, presence of temp/user folders), `ParentProcessName`, `NewProcessCommandLine` entropy, `DestinationIP` reputation (e.g., IP address block type, ASN), `DestinationPort` (common/uncommon), `connection_duration`, and `orig_bytes`. Classify new process executions and their subsequent network connections as benign or suspicious. Prioritize investigation of events flagged as suspicious, especially those with high confidence scores, and correlate with `Zeek dns.log` for domain reputation analysis and `Zeek x509.log` for certificate validation."
          },
          {
            "description": "A process on an ICS host, identified by `Windows Event ID 4688`, is observed executing with elevated privileges (`Token Elevation Type` of 'Type 2' or `%%1937` in the event details). This is considered suspicious if the `NewProcessName` and `NewProcessPath` do not match an entry in an approved software whitelist for privileged applications, or if the `NewProcessPath` originates from a temporary or user-writable directory (`C:\\Users\\*\\Downloads\\`, `C:\\Users\\*\\AppData\\Local\\Temp\\`, `C:\\ProgramData\\`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows-based ICS endpoints, including Engineering Workstations, Human-Machine Interfaces (HMIs), Data Historians, SCADA servers, and Operator Workstations.",
            "action": "1. **Symbolic Logic:** Establish a strict whitelist of `NewProcessName` and `NewProcessPath` combinations for applications legitimately requiring elevated privileges (`Token Elevation Type` is `%%1937` or 'Type 2') on ICS hosts, including `ImageHash` (SHA256). Create a SIEM rule to alert on any `Windows Event ID 4688` with `Token Elevation Type` `%%1937` or 'Type 2' where the `NewProcessName` and `NewProcessPath` (and optionally `ImageHash`) do NOT match an entry in the approved whitelist. Additionally, flag if `NewProcessPath` contains common temporary or download directory strings (`\\Users\\`, `\\Temp\\`, `\\ProgramData\\`). \n2. **Statistical Method:** Monitor the daily frequency of `Windows Event ID 4688` events with `Token Elevation Type` `%%1937` or 'Type 2' for each unique `NewProcessName`, `User`, and `NewProcessPath` combination on each ICS host over the past 60 days. Calculate the mean and standard deviation for this frequency. Alert if the current daily count for a specific process/user/host combination exceeds the mean by 3 standard deviations, or if a previously unseen combination (zero frequency historically) is observed. Use a rolling window average to adapt to legitimate changes in behavior. \n3. **Machine Learning Application:** Employ a time-series anomaly detection algorithm (e.g., Prophet or ARIMA) on the aggregated count of `Windows Event ID 4688` events with `Token Elevation Type` `%%1937` or 'Type 2' per ICS host, segmented by `NewProcessName` and `User`. Train the model on historical data (e.g., 90 days) to understand normal temporal patterns, including daily, weekly, and monthly cycles. Generate alerts for significant spikes or sustained deviations (e.g., outside a 99th percentile prediction interval) from the predicted normal rate, which could indicate a widespread compromise attempting to gain escalated privileges across multiple ICS assets. Further, use a classification model to categorize the `CommandLine` of elevated processes as benign or malicious based on historical data."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]