[
  {
    "information_requirement": "Is an adversary attempting to inhibit our ability to respond to a process disruption or failure? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0878",
        "name": "Alarm Suppression",
        "evidence": [
          {
            "description": "Anomalous modification of alarm configuration files or related processes on a Windows-based Human-Machine Interface (HMI) or Engineering Workstation (EWS).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), SCADA Servers",
            "action": "On critical HMIs and EWS, monitor for process creation (Windows Event ID 4688) that interacts with known alarm configuration files or directories. Establish a baseline of parent-child process relationships and alert on deviations, such as 'cmd.exe' or 'powershell.exe' being spawned by an HMI application process to modify a file. Separately, baseline all critical services related to alarming and monitoring; create alerts for any unexpected 'stopped' state events (Windows Event ID 7036) for these services."
          },
          {
            "description": "Network commands are sent over an ICS protocol to directly write to a controller's registers or memory to disable or silence an alarm function.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "OT network segments between Level 2 (Supervisory Control) and Level 1 (Basic Control)",
            "action": "Analyze Zeek's ICS protocol logs (e.g., modbus.log) for write function codes (e.g., Modbus Function Codes 5, 6, 15, 16). Establish a baseline of which source IP addresses (e.g., EWS) are authorized to send write commands to specific destination controllers (e.g., PLCs). Alert on any write commands originating from an unauthorized source IP. For authorized sources, calculate the 95th percentile for the frequency of write commands per hour. An activity spike exceeding this statistical threshold could indicate malicious manipulation."
          },
          {
            "description": "A critical process value (e.g., temperature, pressure) read from network traffic exceeds its operational alarm limit, but no corresponding alarm event is generated by the alarm management system.",
            "data_sources": [
              "Zeek modbus.log",
              "Windows Event ID 1",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Historian Servers, Alarm & Event Servers, OT Network traffic to/from PLCs",
            "action": "Correlate real-time process values observed in network traffic (e.g., data values in Zeek modbus.log read responses) with alarm events logged in the Windows Application Event Log (Event ID 1, assuming a custom source name for the alarm system) on the central alarm server. Create a stateful rule: if a critical process variable, as seen in Zeek logs, exceeds its known alarm threshold for a sustained period (e.g., >10 seconds) without a corresponding alarm being logged on the server, generate a 'State/Alarm Mismatch' alert. Enrich this alert with any recent successful logins (Windows Event ID 4624) to the alarm server to identify potential user involvement."
          },
          {
            "description": "An adversary stops the alarm service or process directly on the HMI or alarm server to prevent alarm generation or display.",
            "data_sources": [
              "Windows Event ID 7036",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Alarm & Event Servers, Human-Machine Interfaces (HMIs)",
            "action": "Create a watchlist of critical process names and service names related to the ICS alarm system (e.g., 'AlarmSrv.exe', 'HMI_Display_Manager'). Monitor for these services entering a stopped state (Windows Event ID 7036). Additionally, monitor for command-line process creation (Windows Event ID 4688) containing commands like 'taskkill /IM AlarmSrv.exe' or 'net stop \"Alarm Service\"'. Alert immediately on any such events occurring on a monitored NAI."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]