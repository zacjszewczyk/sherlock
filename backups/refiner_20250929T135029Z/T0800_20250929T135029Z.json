[
  {
    "information_requirement": "Is the adversary attempting to inhibit or disable safety and protection functions? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0800",
        "name": "Activate Firmware Update Mode",
        "evidence": [
          {
            "description": "Execution of a known or suspicious utility or scripting engine on an Engineering Workstation (EWS) with command-line arguments that explicitly invoke firmware update, maintenance, or reset functions for a specific ICS device, resulting in a state change or configuration alteration.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and Jump Servers within the Operational Technology (OT) network segment (Purdue Level 3.5/4), and the network egress points of these segments.",
            "action": "1. **Symbolic Logic:** Monitor Windows Event ID 4688 for process creation events on EWS. Identify processes like `powershell.exe`, `cmd.exe`, `wscript.exe`, or known vendor-specific firmware update utilities (e.g., `Siemens_TIA_Portal.exe`, `Rockwell_FactoryTalk.exe`, `Schneider_UnityPro.exe`). Filter command-line arguments for keywords such as 'firmware update', 'maintenance mode', 'device reset', 'flash', '/F', '/M', '/update', or specific IP addresses/hostnames of critical ICS devices (e.g., PLCs, RTUs, protection relays). Alert on matches with high criticality if originating from an unauthorized user or EWS.\n2. **Statistical Method:** Establish a baseline for normal command-line argument structures and execution times for these processes on each EWS. Calculate the Levenshtein distance or Jaccard similarity between observed command lines and known benign command patterns, alerting on scores below the 70th percentile. Additionally, monitor the frequency of process execution; flag events where a firmware-related command is executed more than 3 standard deviations from the daily average for that user/EWS.\n3. **Machine Learning/Time-series:** Correlate suspicious process executions (Windows Event ID 4688) with new or unusual network connections in Zeek conn.log originating from the EWS to the identified target ICS device within a 10-second window. Use a time-series anomaly detection model (e.g., ARIMA or Prophet) on the rate of `Zeek conn.log` events from EWS to ICS devices, specifically looking for spikes in connections to known firmware/management ports (e.g., 502 Modbus, 20000 DNP3, 44818 EtherNet/IP) that deviate significantly from historical patterns."
          },
          {
            "description": "Detection of specific ICS protocol commands (e.g., Modbus function codes, DNP3 object/variation combinations, EtherNet/IP explicit messages) sent to critical ICS devices that initiate a firmware update, maintenance, or diagnostic mode, immediately followed by a measurable and sustained reduction or cessation of expected periodic operational communications from that device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek custom ICS protocol logs (e.g., modbus.log, dnp3.log, enip.log)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control network segments (Purdue Level 1 & 2) where PLCs, RTUs, and protection relays reside, and network monitoring points at the boundary of these segments (e.g., span ports on Level 1/2 switches, network taps).",
            "action": "1. **Symbolic Logic:** Analyze Zeek ICS protocol logs (e.g., `modbus.log`, `dnp3.log`, `enip.log`) for specific function codes, object/variation combinations, or explicit messages known to activate firmware update, maintenance, or diagnostic modes. Examples include: Modbus function code 0x17 'Read/Write Multiple Registers' with specific register addresses for mode changes, DNP3 'Device Restart' function (function code 0xD) with specific object/variation for cold/warm restart, EtherNet/IP 'Set Attribute Single' service (0x10) for device mode changes. Alert if these specific commands are observed, especially if they originate from unauthorized source IPs or occur outside of established maintenance windows.\n2. **Statistical Method:** Establish a baseline of normal periodic communication (e.g., polling requests, status updates) for each critical ICS device by analyzing the frequency and volume of Zeek conn.log and relevant ICS protocol logs (e.g., source IP, destination IP, protocol, port). Calculate the inter-arrival time of expected heartbeats or polling responses. Flag instances where the inter-arrival time exceeds the 99th percentile of the established baseline or if the total byte count from a device drops below the 1st percentile for a sustained period (e.g., 60 seconds) following a suspicious command.\n3. **Machine Learning/Time-series:** Deploy a multivariate time-series anomaly detection model (e.g., Isolation Forest or LSTM Autoencoder) on aggregated Zeek conn.log and ICS protocol log data (e.g., bytes in/out, packet count, unique function codes) for each critical ICS device. Train the model on historical normal operational data. Trigger an alert when the model detects a significant deviation in the communication patterns (e.g., sudden drop in traffic, unexpected protocol sequence) that aligns with a device entering an inactive or maintenance state, especially after a command identified in step 1."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]