[
  {
    "information_requirement": "Is an adversary leveraging compromised mobile devices to remove or deny access to corporate user accounts? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1640",
        "name": "Account Access Removal",
        "evidence": [
          {
            "description": "A user account experiences a count of lockouts (Windows Event ID 4740) or password reset attempts (Windows Event ID 4724) exceeding the 99th percentile of their 30-day baseline, where the source IP address is correlated via Zeek conn.log to a mobile network provider's ASN and the user-agent in Zeek http.log indicates a mobile device.",
            "data_sources": [
              "Windows Event ID 4740",
              "Windows Event ID 4724",
              "Zeek conn.log",
              "Zeek http.log",
              "MDM Device Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Domain Controllers, VPN Concentrators, Internet Gateway, Mobile Device Management (MDM) Platform, Cloud Identity Provider (e.g., Azure AD, Okta)",
            "action": "1. Symbolic Detection: Join Windows Event ID 4724 (password reset attempt) and 4740 (account lockout) on 'TargetUserName' and 'Source Network Address'. Create a high-severity alert if Event ID 4724 is followed by Event ID 4740 for the same user within a 60-second window. Enrich the 'Source Network Address' using Zeek conn.log to get the source ASN. The alert should trigger only if the ASN is on a watchlist of mobile network providers and the IP is not on an approved corporate IP allowlist. 2. Statistical Detection: For each 'TargetUserName', ingest Windows event logs to establish a 30-day rolling baseline of hourly counts for events 4740 and 4724. Calculate the mean and standard deviation for these counts. Generate a medium-severity alert if the current hourly count for a user exceeds the mean by 3 standard deviations. Correlate the 'Source Network Address' with Zeek conn.log to obtain the source ASN and with Zeek http.log for the user-agent. Escalate to high severity if the ASN belongs to a mobile carrier and the user-agent is either new for that user or a known mobile browser/app. 3. Machine Learning Detection: For each user, train a time-series anomaly detection model (e.g., Prophet, LSTM) on event counts (4724, 4740) aggregated in 5-minute intervals, using features like event count, time of day, and day of week. An anomalous spike flagged by the model should trigger an enrichment process that pulls the source IP's ASN (from Zeek conn.log), geolocation, and user-agent (from Zeek http.log). Calculate a risk score based on: (1) anomaly score from the model, (2) if ASN is a mobile provider, (3) if geolocation is rare for the user, (4) if user-agent is new for the user. A cumulative score exceeding a predefined threshold is flagged as a high-risk event."
          },
          {
            "description": "A source IP address, identified as originating from a mobile network via its ASN in Zeek conn.log, generates more than 10 HTTP POST or DELETE requests to sensitive account management API endpoints within a 5-minute window, a rate exceeding 3 standard deviations above the per-IP baseline for that endpoint.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "WAF Logs",
              "Cloud Identity Provider Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "API Gateway Servers, Web Application Firewalls (WAFs), Internet-facing application servers, Cloud Identity Provider Logs",
            "action": "1. Symbolic Detection: Define a watchlist of critical API endpoints (e.g., /api/v1/user/delete, /api/v2/account/password, /auth/revoke). Ingest Zeek http.log. Create a high-severity alert for any HTTP DELETE request to a user deletion endpoint where the source IP's ASN (from Zeek conn.log) is on a mobile network watchlist and the session (identified by session cookie or JWT) lacks a corresponding log entry indicating successful MFA completion within the last 15 minutes. 2. Statistical Detection: For each critical API endpoint, establish a 30-day baseline for request rates per source IP. Calculate the mean and standard deviation. Generate a medium-severity alert if a source IP, identified as mobile via its ASN, has a request rate exceeding the mean by 3 standard deviations. Additionally, for each source IP, calculate the Shannon entropy of the requested URI paths in 5-minute windows. A sudden drop in entropy (indicating repetitive requests) for a mobile IP should also trigger a medium-severity alert. 3. Machine Learning Detection: Implement an Isolation Forest model to detect anomalous API access patterns. For each HTTP request to a sensitive endpoint, create a feature vector including: URI path (one-hot encoded), HTTP method (one-hot encoded), request body length, user-agent string (using a hashing vectorizer), time between requests from the same IP, and day/hour of the request. Train the model on legitimate traffic. Any request flagged as an outlier, particularly POST or DELETE requests from an IP on a mobile ASN, should be escalated for immediate investigation. The model's anomaly score can be used to prioritize alerts."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]