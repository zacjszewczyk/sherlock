[
  {
    "information_requirement": "Is the adversary obfuscating command and control traffic? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1001",
        "name": "Data Obfuscation",
        "evidence": [
          {
            "description": "A network connection event in Zeek conn.log or a DNS query in Zeek dns.log resolves to an IP address, domain, or server name present on a threat intelligence feed of known command and control (C2) servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Proxy Servers",
            "action": [
              "Symbolic (IOC Match): Join network logs (Zeek conn.log destination IP, dns.log query, ssl.log server_name) against a threat intelligence feed of known malicious C2 indicators. Generate a high-priority alert upon any match.",
              "Statistical (Frequency Analysis): For all outbound connections, calculate the frequency of communication to destination IPs/domains over a 24-hour sliding window. Flag destinations that appear in the top 99th percentile of connection frequency but are not on an established allowlist of common services (e.g., CDNs, cloud providers), as this may indicate newly active C2 infrastructure not yet in CTI feeds.",
              "Machine Learning (Classification): Use a supervised classification model (e.g., Random Forest) trained on features from Zeek logs (connection duration, bytes sent/received, protocol, destination port) and CTI data to predict the probability of a new connection being malicious C2. The model should be periodically retrained with new CTI data and analyst-labeled events."
            ]
          },
          {
            "description": "A TLS session is observed in Zeek ssl.log with a JA3 or JA3S hash matching a known malicious signature, or a DNS response for a TXT record in Zeek dns.log contains a payload with an abnormally high Shannon entropy score.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Endpoints with EDR/NTA sensors",
            "action": [
              "Symbolic (Signature Match): Continuously match JA3 and JA3S hashes from Zeek ssl.log against a curated list of hashes associated with malicious tools (e.g., Cobalt Strike, Metasploit, Empire). Alert on any exact match.",
              "Statistical (Entropy Analysis): For all DNS TXT record responses in Zeek dns.log, calculate the Shannon entropy of the answer string. Establish a baseline entropy value for legitimate TXT record usage (e.g., SPF, DKIM). Flag any responses with entropy scores exceeding 3 standard deviations above the mean, suggesting encoded data.",
              "Machine Learning (Time-Series Anomaly Detection): Implement a time-series anomaly detection model (e.g., ARIMA, LSTM) on the volume and diversity of JA3/JA3S hashes observed across the network. An alert should be triggered by a sudden spike in previously unseen or rare malicious hashes, indicating a potential campaign outbreak."
            ]
          },
          {
            "description": "A network connection in Zeek conn.log exhibits a statistically anomalous ratio of bytes sent to bytes received for its destination port, or the payload of an unencrypted protocol session (e.g., HTTP POST in http.log) has a Shannon entropy score significantly higher than the baseline for that protocol.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Application Servers, Internet Gateway",
            "action": [
              "Symbolic (Pattern Match): For HTTP POST requests in Zeek http.log, apply a Yara rule that searches for common encoding patterns (e.g., Base64 with custom alphabets) or known C2 framework markers within the request body. Alert on any rule match.",
              "Statistical (Outlier Detection): For each connection in Zeek conn.log, calculate the ratio of orig_bytes to resp_bytes. For each destination port, establish a baseline of normal ratios using the interquartile range (IQR). Flag connections where the ratio is a significant outlier (e.g., > 1.5 * IQR above the third quartile) for that specific port, especially for client-to-server connections.",
              "Machine Learning (Clustering): Use an unsupervised clustering algorithm (e.g., DBSCAN) on connection features from Zeek conn.log (duration, payload size, port, protocol, byte ratio). Investigate clusters that are small and distant from large, well-defined clusters of normal traffic, as these often represent anomalous C2 activity."
            ]
          },
          {
            "description": "A single host generates a statistically significant volume of DNS queries for TXT or NULL records, or queries with abnormally long subdomains, or a protocol violation event is generated in Zeek weird.log.",
            "data_sources": [
              "Zeek weird.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Domain Controllers, Network Taps/SPAN ports",
            "action": [
              "Symbolic (Event Match): Monitor Zeek weird.log for specific event types indicative of protocol abuse, such as 'dns_unmatched_reply', 'data_before_established', or 'possible_split_routing'. Trigger an alert for investigation on these specific, high-fidelity events.",
              "Statistical (Thresholding): For each source IP in Zeek dns.log, calculate the average length of DNS queries and the ratio of TXT queries to A/AAAA queries over a 5-minute window. Flag hosts where the average query length exceeds the 98th percentile for the network or where the TXT query ratio is more than 3 standard deviations above the network-wide baseline.",
              "Machine Learning (Sequence Analysis): Train a sequence analysis model (e.g., using a Recurrent Neural Network) on the sequence of DNS query types and lengths for each host to learn normal browsing behavior. Flag hosts whose DNS query sequences are classified as anomalous, which can detect the structured, repetitive patterns of DNS tunneling C2."
            ]
          },
          {
            "description": "A network connection event (Windows Event ID 5156) is linked to a process creation event (Windows Event ID 4688) where the process is unsigned, resides in a non-standard directory (e.g., %TEMP%, %APPDATA%), or does not match an established allowlist of network-communicating processes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Servers (e.g., Domain Controllers, Database Servers), Application Servers",
            "action": [
              "Symbolic (Rule-Based Correlation): Join Windows Event ID 4688 (Process Creation) with Windows Event ID 5156 (Network Connection) on Process ID. Alert if the process name making the network connection is on a blocklist of known malicious executables or if the process is unsigned and not located in a standard system directory like C:\\Windows\\System32.",
              "Statistical (Frequency Analysis): For each host, build a baseline of parent-child process relationships that result in network activity. Calculate the frequency of each unique parent-child-network_connection event. Alert when a rare or previously unseen relationship occurs (e.g., winword.exe spawning powershell.exe which then connects to an external IP), especially if the child process is short-lived.",
              "Machine Learning (Host Anomaly Detection): Develop a host-level anomaly detection model that profiles normal process behavior, including network connections. Features can include process name, command line arguments, parent process, and network connection details. Use an autoencoder to learn a compressed representation of normal behavior and flag any process whose reconstruction error is high, indicating a deviation from the norm."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]