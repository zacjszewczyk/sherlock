[
  {
    "information_requirement": "Is the adversary performing discovery using registry queries? (TA0007 - Discovery)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1012",
        "name": "Query Registry",
        "evidence": [
          {
            "description": "A command line execution includes arguments that are an exact or near-exact match to a known malicious signature for registry enumeration.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, database servers), Executive workstations, Developer workstations",
            "action": [
              "Scan process creation events (Windows Event ID 4688, Sysmon Event ID 1) for command lines that exactly match a curated list of known malicious registry query commands, such as those used by Mimikatz or BloodHound enumeration scripts.",
              "For any command line containing 'reg.exe query', calculate the n-gram (n=3) overlap with a corpus of known malicious commands. Flag any command where the overlap score exceeds the 95th percentile of scores for benign system administration scripts.",
              "Train a logistic regression classifier on labeled command-line data (benign vs. malicious). Use features such as command length, character entropy, and the presence of keywords ('query', 'HKLM', 'password', 'svc'). Apply the trained model to classify new process creation events in real-time."
            ]
          },
          {
            "description": "A process directly accesses or queries registry keys containing sensitive information, such as cached credentials, security software configurations, or remote access tool settings.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, Authentication servers (e.g., Domain Controllers), Servers hosting sensitive applications",
            "action": [
              "Monitor process creation events (4688, Sysmon 1) and registry access events (Sysmon 13) for queries targeting a watchlist of high-value registry paths. This list should include paths like 'HKLM\\SECURITY\\Policy\\Secrets', 'HKCU\\Software\\PuTTY\\Sessions', and 'HKCU\\Software\\Microsoft\\Terminal Server Client\\Default'.",
              "Develop a risk score for registry hives and keys based on information sensitivity. For each process over a 5-minute window, sum the risk scores of all accessed keys. Establish a baseline score for each host profile (e.g., web server, developer workstation) and alert when a process's cumulative score exceeds 3 standard deviations above the baseline mean.",
              "Use a Random Forest classifier to determine if a query to a sensitive key is malicious. Features should include the parent process name, user context, time of day, and the historical rarity of the specific key being queried on that host and across the enterprise. The model will flag access patterns that deviate from learned legitimate behavior."
            ]
          },
          {
            "description": "A single process executes a high number of distinct registry queries within a short time interval, indicating automated reconnaissance scanning rather than normal system or user activity.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially those with standard user configurations where such activity is unexpected",
            "action": [
              "Create a rule that triggers an alert if a single Process ID is associated with more than 50 distinct 'reg.exe query' command-line executions within a 2-minute window. This acts as a tripwire for high-volume scanning.",
              "For each host, aggregate process creation events by parent process over a 5-minute window. Calculate the Shannon entropy of the unique registry key paths queried. Establish a per-process baseline entropy level (e.g., for explorer.exe, svchost.exe) and alert when a process's query entropy exceeds the 98th percentile of its historical activity, indicating an unusual variety of queries.",
              "Implement a time-series anomaly detection model, such as Seasonal-Trend decomposition using LOESS (STL), on the rate of registry query events per host, aggregated into 1-minute bins. The model will learn the normal daily and weekly rhythms of system activity and alert on sudden, sustained bursts of queries that significantly deviate from the forecasted pattern."
            ]
          },
          {
            "description": "A registry query utility (e.g., reg.exe) is spawned by a parent process that does not typically perform system administration tasks, such as an office application, web browser, or script interpreter running from an unusual location.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Mail servers, Web proxies",
            "action": [
              "Create a detection rule that alerts when the child process name is 'reg.exe' or 'regedit.exe' and the parent process name is on a list of non-standard spawners, including 'OUTLOOK.EXE', 'WINWORD.EXE', 'CHROME.EXE', 'msedge.exe', or 'powershell.exe' with suspicious command line arguments.",
              "Build a baseline frequency table of all parent-child process relationships observed across the enterprise over a 30-day period. Alert when a new parent-child pair involving a registry utility is observed that falls into the bottom 1st percentile of frequency, indicating it is an extremely rare occurrence.",
              "Utilize an unsupervised learning model like an Isolation Forest on process creation event data. Use features like parent process name, child process name, user context, and parent process path. The model will learn to isolate anomalous events, such as 'winword.exe' spawning 'reg.exe', which will receive a high anomaly score."
            ]
          },
          {
            "description": "A process queries registry keys related to network configuration or stored credentials, and this action is followed within a 5-minute window by a new outbound network connection from the same host, potentially for data exfiltration or C2 communication.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, Windows endpoints and servers",
            "action": [
              "Correlate process creation events (4688/Sysmon 1) that query network-related keys (e.g., '...\\Internet Settings\\ProxyServer') with subsequent network connection logs (Zeek conn.log) from the same source IP within a 5-minute window. Alert if the destination IP or domain (from Zeek dns.log) is present on a threat intelligence feed.",
              "For hosts that query network-related registry keys, analyze the subsequent outbound connections in Zeek conn.log. Calculate a rarity score based on the destination port, destination IP's Autonomous System Number (ASN), and the JA3/JA3S hash. Alert if the combined score exceeds the 99th percentile of all outbound connections from that host's peer group.",
              "Develop a sequence analysis model using a Recurrent Neural Network (RNN) that learns common sequences of system and network events. Train the model on event pairs (e.g., {process event, network event}). Flag sequences as anomalous where a network-related registry query is followed by a network connection that is classified as high-risk by a separate network traffic anomaly detection model."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]