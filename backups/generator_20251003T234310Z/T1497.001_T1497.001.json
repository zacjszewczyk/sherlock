[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by detecting virtualization or sandboxes?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1497.001",
        "name": "System Checks",
        "evidence": [
          {
            "description": "A process executes a command-line string or PowerShell script containing specific arguments or string literals known to be used for sandbox detection, such as querying for VMware MAC address prefixes ('00:05:69', '00:0C:29') or specific WMI classes ('SELECT * FROM Win32_Fan').",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, servers, and Virtual Desktop Infrastructure (VDI) instances.",
            "action": [
              "Symbolic: Continuously monitor Windows Event ID 4688 (Process Creation) and 4104 (PowerShell Script Block Logging) command-line and script content against a watchlist of known-bad strings, arguments, and regular expressions associated with VM detection tools (e.g., Pafish, Al-Khaser). Generate a high-severity alert upon a direct match.",
              "Statistical: For PowerShell scripts (Event ID 4104), calculate the Shannon entropy of each script block. Establish a baseline entropy score for legitimate administrative and user scripts. Flag any script whose entropy significantly exceeds the 99th percentile of its respective baseline, as this can indicate obfuscation used to hide evasion logic.",
              "Machine Learning: Train a one-class SVM or Isolation Forest model on the command-line arguments of legitimate system processes (e.g., wmic.exe, systeminfo.exe, reg.exe). Use this model to score new command-line executions in real-time. Commands flagged as outliers are strong candidates for malicious system checks and require investigation."
            ]
          },
          {
            "description": "A single process (identified by its Process GUID) generates a rapid succession of events corresponding to accessing multiple distinct files, registry keys, or services within a brief timeframe (e.g., under 60 seconds) that are indicative of a virtualized environment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4656",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, especially developer workstations and security analysis sandbox systems.",
            "action": [
              "Symbolic: Create and maintain a watchlist of VM-specific artifacts (e.g., registry key `HKLM\\HARDWARE\\ACPI\\FADT\\VBOX`, file path `C:\\Windows\\System32\\drivers\\VBoxGuest.sys`, service name `vmtoolsd`). Implement a correlation rule that triggers an alert when a single Process GUID accesses 3 or more unique artifacts from this list within a 60-second window, based on Event IDs 4663 (File Access), 4656 (Registry Access), and 7036 (Service State Change).",
              "Statistical: For each process, count the number of accesses to known VM-related artifacts per minute. Establish an environment-wide baseline distribution for this count (most will be zero). Alert on any process where this count exceeds a high percentile (e.g., 99.9th) of the established distribution, indicating an abnormal rate of discovery activity.",
              "Machine Learning: Utilize a graph-based clustering algorithm where nodes are processes and artifacts (files, registry keys). Create edges based on access events. A small, dense community composed of a single process node connected to multiple VM-artifact nodes indicates a coordinated discovery sequence, separating it from normal, sparse access patterns."
            ]
          },
          {
            "description": "A process, originating from a temporary or user-writable directory, executes system checks, terminates in under 2 minutes, generates no outbound network traffic, and its source executable is subsequently deleted. This pattern suggests an evasive payload that aborts its mission upon detecting an analysis environment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, particularly for phishing targets, and internet-facing servers.",
            "action": [
              "Symbolic: Define a stateful correlation rule that searches for the following sequence: 1) Process creation (Event ID 4688) from a non-standard path (e.g., %APPDATA%, %TEMP%). 2) The process performs a VM check (matches logic from other evidence). 3) The process terminates (Event ID 4689) within 2 minutes of creation. 4) No corresponding outbound network connection is observed in `Zeek conn.log` for the host's IP during the process lifetime. 5) The source executable is deleted (Event ID 4663 with Accesses: DELETE). An alert is generated if all conditions are met.",
              "Statistical: For all processes with a lifetime under 5 minutes, calculate a 'System Interaction to Network Ratio': (count_of_system_queries + count_of_file_checks) / (count_of_network_connections + 1). An extremely high or infinite ratio is anomalous. Model the distribution of this ratio and flag outliers that fall beyond 3 standard deviations from the mean or are in the top 99.5th percentile.",
              "Machine Learning: Develop a Hidden Markov Model (HMM) or LSTM-based time-series model trained on normal process behavior sequences (e.g., 'Create' -> 'Read Config' -> 'Network Activity' -> 'Terminate'). Feed real-time sequences of process-related events (4688, 4663, Zeek logs, 4689) into the model. An 'evasive termination' sequence will generate a high anomaly score because it deviates from the learned normal state transitions by lacking the expected 'Network Activity' state."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary performing system checks to discover the execution environment?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1497.001",
        "name": "System Checks",
        "evidence": [
          {
            "description": "An endpoint is observed in network logs attempting to establish a connection to a specific IP address and port combination associated with a known VM host-guest communication channel (e.g., VMware's I/O backdoor port).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, core switches, VDI host-only networks, and intra-VM traffic monitors.",
            "action": [
              "Symbolic: Create a high-priority alert rule to trigger on any `Zeek conn.log` entry where the `id.resp_p` (destination port) matches a value on a maintained watchlist of known VM backdoor/control ports (e.g., TCP/5658 for VMware). This is a high-confidence indicator requiring immediate investigation.",
              "Statistical: Analyze `Zeek conn.log` for unsuccessful connection attempts (`conn_state` of 'REJ', 'RSTO', 'RSTRH'). For each host, calculate a baseline rate of unsuccessful connections per hour. A sudden, statistically significant spike in this rate, particularly to a wide range of non-standard ports, could indicate probing for a sandbox environment's network listeners.",
              "Machine Learning: Train an autoencoder on legitimate network connection 4-tuples (`src_ip`, `dst_ip`, `dst_port`, `proto`). Connections that result in a high reconstruction error when passed through the trained model are anomalous. Investigate anomalies, especially those involving unusual destination ports or internal IP addresses that are not designated servers."
            ]
          },
          {
            "description": "A process is created with command-line arguments, or a PowerShell script is executed, that matches the known invocation patterns of open-source discovery tools containing modules for environment keying (e.g., `Seatbelt.exe -group=all`, `Invoke-VMEvasion`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints and servers, particularly those managed by IT and security teams.",
            "action": [
              "Symbolic: Maintain a library of regular expressions that match the command-line invocations and characteristic script functions of tools like Seatbelt, V-Hunter, and Pafish. Monitor Windows Event ID 4688 (Process Creation) and 4104 (PowerShell Script Block Logging) for matches against this library and generate an alert.",
              "Statistical: Establish distinct baselines of discovery-related cmdlet usage (e.g., `Get-WmiObject`, `Get-CimInstance`, `Get-ItemProperty`) for different user roles (e.g., regular user, developer, sysadmin). A regular user account exhibiting a cmdlet usage frequency profile that is statistically similar (e.g., using cosine similarity) to a sysadmin's profile is anomalous and should be investigated.",
              "Machine Learning: Train a Naive Bayes or Logistic Regression classifier on PowerShell script blocks (Event ID 4104), labeled as 'Benign' or 'Reconnaissance' based on features like cmdlet frequency, script length, string entropy, and presence of specific keywords. Use the trained model to classify and score new scripts in real-time."
            ]
          },
          {
            "description": "An unsigned process, launched from a user-writable directory (e.g., %TEMP%, %APPDATA%), executes an unusually high number and variety of system information queries via WMI, PowerShell, or command-line utilities within the first 60 seconds of its execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4656",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, with a focus on monitoring newly created processes.",
            "action": [
              "Symbolic: Create a correlation rule that triggers if an unsigned process, running from `%APPDATA%` or `%TEMP%`, executes `wmic.exe`, `systeminfo.exe`, or `reg.exe query` more than 5 times within a 60-second window of its creation (Event ID 4688).",
              "Statistical: For each new process, calculate the Shannon entropy of the set of WMI classes or registry hives it queries within its first minute. A high entropy score indicates the process is probing many different, unrelated parts of the system, which is characteristic of broad discovery. Alert on processes whose query entropy exceeds the 99th percentile of a dynamically calculated baseline.",
              "Machine Learning: Use K-Means or DBSCAN clustering to group newly created processes based on a feature vector of their initial behavior (e.g., count of child processes, count of WMI queries, count of registry queries, file read/write ratio). Analyze the resulting clusters; small, dense clusters that are distinct from the large cluster of normal process behavior often represent anomalous activity like intense discovery and require investigation."
            ]
          },
          {
            "description": "A process is observed via file access auditing (Event ID 4663) attempting to access or enumerate files or directories whose names contain keywords associated with security analysis (e.g., 'malware', 'sandbox', 'procmon').",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories (Desktop, Downloads), temporary file locations, and dedicated security analysis VM environments.",
            "action": [
              "Symbolic: Monitor the `Object Name` field of Windows Event ID 4663 (An attempt was made to access an object) for access attempts to files or directories containing keywords from a maintained watchlist, such as `['malware', 'sample', 'virus', 'sandbox', 'pafish', 'procmon', 'wireshark']`. Generate a medium-severity alert on any match.",
              "Statistical: For each user session, maintain a historical baseline of accessed file paths. For each new file access event (Event ID 4663), calculate a rarity score based on its historical access frequency. A process that suddenly starts accessing paths with very high rarity scores (i.e., paths never or rarely seen before for that user/host) is anomalous. A spike in the moving average of rarity scores for a given process should trigger an alert.",
              "Machine Learning: Train a decision tree or random forest classifier to predict if a file access event (Event ID 4663) is 'suspicious'. Features for the model should include: `process_is_unsigned`, `path_contains_watchlist_keyword`, `process_is_running_from_temp_dir`, `is_rare_path_for_user`, and `process_has_no_network_conn`. The model's output provides a risk score for each file access event, allowing for prioritized alerting."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]