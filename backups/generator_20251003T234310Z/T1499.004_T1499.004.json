[
  {
    "information_requirement": "Is the adversary impacting availability through application or system exploitation?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1499.004",
        "name": "Application or System Exploitation",
        "evidence": [
          {
            "description": "Network traffic targeting a specific service contains a payload matching a known DoS exploit signature, which correlates with either a greater than 3 standard deviation increase in connection duration or a spike in service unavailability errors (e.g., HTTP 503).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek http.log",
              "Windows Event ID 1000",
              "Windows Event ID 1001"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ network segment, Public-facing web servers, Internet gateways, Load balancers",
            "action": [
              "Symbolic: Continuously monitor Zeek notice.log for alerts generated by IDS signature sets that identify known DoS tools or specific CVE exploit payloads (e.g., Slowloris, RUDY, CVE-2015-5477). Trigger an alert upon detection.",
              "Statistical: For each destination IP and port flagged by a DoS-related signature, calculate the 95th percentile of connection duration from the 'duration' field in Zeek conn.log over the past hour. Alert if this value exceeds 3 standard deviations from the historical 30-day baseline 95th percentile for that specific service.",
              "Machine Learning: Employ a time series forecasting model (e.g., ARIMA, Prophet) on the count of DoS-related Zeek notice.log events per minute. Generate an alert if the observed count significantly exceeds the forecasted upper confidence interval, indicating an anomalous spike in attack attempts that deviates from normal alert patterns."
            ]
          },
          {
            "description": "An application crash, identified by Windows Event ID 1000, is immediately preceded by either the creation of an excessive number of child processes from a single parent (fork bomb) or the network transfer of a file with an anomalously high compression ratio (zip bomb).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Windows Event ID 1000"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical application servers, User workstations, File servers, Web servers",
            "action": [
              "Symbolic: Create a rule to alert when a file is observed in Zeek files.log with a mime-type of 'application/zip' or 'application/gzip' where the uncompressed size ('total_bytes') is more than 1000x the transferred size ('seen_bytes').",
              "Statistical: For each host, monitor Windows Event ID 4688 to count child processes per parent process ID within a 1-second window. Establish a 30-day baseline for each parent process name on each host. Alert if the child process count exceeds the 99th percentile of its historical distribution.",
              "Machine Learning: Train a decision tree or random forest classifier using features from Zeek files.log (e.g., 'seen_bytes', 'total_bytes', calculated compression ratio) and host logs. Label training data by marking files transferred within 5 minutes of a subsequent crash (Windows Event ID 1000) as 'malicious' (1) and all others as 'benign' (0). The model will classify new files as potentially 'crash-inducing'."
            ]
          },
          {
            "description": "A logged application crash (Windows Event ID 1000) or an unexpected system restart (Windows Event ID 41 or 6006) is immediately preceded by a statistically significant spike in resource exhaustion events, such as Windows Event ID 2004.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Windows Event ID 2004",
              "Windows Event ID 6006",
              "Windows Event ID 41"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Database servers, Virtualization hosts, Terminal servers, Domain Controllers, Critical application servers",
            "action": [
              "Symbolic: Implement an alert that triggers immediately upon the observation of Windows Event ID 2004 ('Resource-Exhaustion-Detector') on any server designated as a critical asset.",
              "Statistical: For each critical host, calculate the rate of resource exhaustion events (Event ID 2004) per 5-minute interval. Establish a 30-day rolling average and standard deviation for this rate. Alert if the current rate exceeds the historical mean by more than 3 standard deviations.",
              "Machine Learning: Use time series cross-correlation analysis to identify leading indicators for system crashes (Event ID 41/6006). For each host, analyze the time series of Event ID 2004 counts and crash event counts to determine if a consistent, positive correlation exists at a specific time lag (e.g., Event 2004 spikes 1-5 minutes before a crash). A strong, consistent correlation can be used to build a predictive alert."
            ]
          },
          {
            "description": "A service becomes unavailable, correlating with a sudden, anomalous deviation in network traffic metrics, such as a greater than 3 standard deviation increase in connections per second or a greater than 50% drop in source IP address entropy for traffic to that service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, Load balancers, Public-facing API endpoints, DNS servers",
            "action": [
              "Symbolic: Monitor Zeek http.log for any single source IP generating requests to a specific URI at a rate exceeding a hard threshold (e.g., >100 requests per second) and trigger an alert.",
              "Statistical: For each public-facing service (destination IP and port), calculate the Shannon entropy of source IP addresses observed in Zeek conn.log within 1-minute windows. Establish a baseline distribution over a 7-day period. Alert if the entropy drops below the 5th percentile of the baseline, indicating a loss of source diversity characteristic of a DoS attack.",
              "Machine Learning: Apply an unsupervised clustering algorithm (e.g., DBSCAN) to connection data from Zeek conn.log, using features like duration, source bytes, destination bytes, protocol, and connection state. A DoS attack may manifest as a new, dense cluster of short-duration, low-byte connections or be flagged as anomalous noise points, triggering an investigation."
            ]
          },
          {
            "description": "A fleet of similar assets, such as all VDI instances or all public web servers, experiences a rate of application crashes (Windows Event ID 1000) or unexpected restarts (Windows Event ID 41) that exceeds the 99th percentile of the historical baseline for that fleet, occurring outside of a scheduled maintenance window.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Windows Event ID 6005",
              "Windows Event ID 6006",
              "Windows Event ID 41"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise servers, All user workstations, Virtual Desktop Infrastructure (VDI) pools, Kubernetes nodes, Change management database",
            "action": [
              "Symbolic: Create a rule that alerts if more than 10% of assets within a defined group (e.g., 'Domain Controllers') report an unexpected restart (Event ID 41 or a 6005 not preceded by a 6006) within a 15-minute period.",
              "Statistical: For each defined asset group, calculate a 30-day rolling average and standard deviation of the hourly crash count (Event ID 1000). Alert if the current hour's count for that group exceeds the mean plus 3 standard deviations, after cross-referencing with a change management system to rule out planned updates.",
              "Machine Learning: Apply a change point detection algorithm (e.g., Bayesian Change Point, CUSUM) to the time series of aggregate crash events (Event ID 1000) for a specific application fleet. This can automatically detect an abrupt, sustained increase in the crash rate that differs from historical random fluctuations, signaling a potential widespread issue like a newly introduced exploit."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]