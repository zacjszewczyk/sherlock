[
  {
    "information_requirement": "Is the adversary causing network impact through bandwidth hijacking?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1496.002",
        "name": "Bandwidth Hijacking",
        "evidence": [
          {
            "description": "Observed network connections from an internal host to an external IP address, domain, or URL that is present on a threat intelligence feed for known botnet C2s, proxyware services, TOR nodes, or malicious scanners.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Web Proxies, Cloud Egress Points",
            "action": [
              "Symbolic: Continuously query network logs to join destination IP addresses from Zeek conn.log and queried domains from Zeek dns.log against high-confidence, regularly updated threat intelligence feeds specializing in botnet C2s, public proxyware services (e.g., Honeygain, Pawns.app), TOR exit nodes, and known malicious scanning infrastructure. Alert on any match.",
              "Statistical: For each internal host, calculate the percentage of total outbound connections directed to IP addresses present on a lower-confidence or broader threat intelligence list (e.g., IPs with poor reputation). Flag hosts where this percentage exceeds the 95th percentile of the host's own 30-day rolling average or the 95th percentile of its peer group (e.g., all workstations).",
              "Machine Learning: Deploy a classification model (e.g., Random Forest, Gradient Boosting) trained on labeled historical data. Use features from Zeek conn.log and dns.log such as connection duration, bytes sent/received, protocol, destination port, DNS query type, domain length, and domain entropy to predict the likelihood that a new connection is associated with bandwidth hijacking. Alert when the predicted probability exceeds a defined risk threshold."
            ]
          },
          {
            "description": "A process is created on a host with a process name, command-line argument, or file hash matching signatures of known proxyware (e.g., Honeygain), botnet clients, or cryptocurrency mining software (e.g., XMRig).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Workstations, Servers, Virtual Desktop Infrastructure (VDI) fleet, Domain Controllers",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 (Process Creation) logs for process names (e.g., 'xmrig.exe', 'proxy.exe', 'pawn.exe', 'honeygain.exe') or command-line arguments (e.g., '--donate-level', '--pool', '-o stratum+tcp://', '-service') that match a maintained list of patterns for known proxyware, miners, and botnet malware. Alert on any match.",
              "Statistical: For each host, profile the command-line arguments of commonly abused processes (e.g., 'powershell.exe', 'rundll32.exe', 'bitsadmin.exe'). Calculate the historical frequency of argument combinations. Alert on the execution of a common process with a statistically rare or never-before-seen combination of arguments, especially if correlated with high network output from the same host.",
              "Machine Learning: Implement an unsupervised anomaly detection model, such as an autoencoder or isolation forest, on process execution data. Features should include parent process name, process name, command-line argument length and entropy, and user context. Flag any executions with a high anomaly score (e.g., high reconstruction error), which indicates a significant deviation from the learned baseline of normal process activity."
            ]
          },
          {
            "description": "An internal host exhibits unusual DNS query activity, such as an abnormally high volume of requests, requests for known malicious domains, or repetitive requests to a small set of non-standard domains, suggesting C2 or mining pool communication.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Domain Controllers, Network Egress Points",
            "action": [
              "Symbolic: Cross-reference all queried domains from Zeek dns.log against regularly updated lists of known cryptocurrency mining pools, proxyware command-and-control (C2) domains, and botnet-related dynamic DNS providers. Generate an immediate alert upon a match.",
              "Statistical: For each client IP, calculate the Shannon entropy of the requested second-level domains over a 5-minute window. Establish a baseline entropy level for each host. Alert when a host's DNS query entropy drops significantly below its baseline (e.g., > 2 standard deviations), suggesting it is repeatedly querying a small set of domains for C2 or mining purposes.",
              "Machine Learning: Apply a time series forecasting model (e.g., SARIMA) to the volume of DNS requests per host to learn typical daily and weekly query patterns. Generate an alert when the observed query volume significantly exceeds the model's predicted upper confidence bound, indicating a potential burst of automated C2 or P2P-related DNS activity not explained by normal seasonality."
            ]
          },
          {
            "description": "An internal host generates a volume of outbound network traffic (total bytes) that significantly exceeds its own historical baseline or the baseline of its peer group, and is not attributable to legitimate business functions.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Firewalls, Internet Gateway, Core Switches, Cloud VPC Flow Logs",
            "action": [
              "Symbolic: Create a rule to alert when an internal host's total outbound traffic (`orig_bytes` in Zeek conn.log) to a single destination IP address over a high-bandwidth port (e.g., 443, 80) exceeds a hard static threshold (e.g., 10GB in 1 hour) that is considered abnormal for any single session in the environment.",
              "Statistical: For each internal host, aggregate total outbound bytes (`orig_bytes`) over 10-minute intervals. Establish a dynamic baseline of normal outbound bandwidth usage using a 30-day rolling average and standard deviation. Alert when a host's current usage exceeds its baseline by more than 3 standard deviations for three consecutive intervals.",
              "Machine Learning: Utilize a seasonal time series decomposition model (e.g., STL) on the total outbound bytes per host. This model will separate the time series into trend, seasonal, and residual components. An alert is triggered when the residual component shows a significant spike, indicating anomalous traffic that cannot be explained by typical daily or weekly patterns."
            ]
          },
          {
            "description": "An internal host initiates a high rate of connections, often with protocol anomalies (e.g., SYN packets without response, high packet-to-byte ratio), directed at a limited number of external targets, consistent with participation in a DDoS attack.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Edge Routers, External-facing Firewalls",
            "action": [
              "Symbolic: Create a rule to detect a high rate of TCP connections with a 'S0' state (SYN sent, no reply) in Zeek conn.log originating from a single internal host. Alert if the rate exceeds a predefined threshold (e.g., >100 'S0' connections per minute) to one or more targets.",
              "Statistical: For each internal host, calculate the ratio of outbound packets to inbound packets (`orig_pkts` / `resp_pkts`) per 1-minute window from Zeek conn.log. Establish a baseline for this ratio across all hosts. Alert on hosts where this ratio is a significant outlier, exceeding the 99th percentile of all hosts, suggesting one-way traffic flooding.",
              "Machine Learning: Use a K-Means clustering algorithm on connection metadata from Zeek conn.log (features: protocol, duration, orig_pkts, resp_pkts, orig_bytes, resp_bytes, conn_state). The goal is to cluster network flows into distinct groups. Investigate any internal hosts whose traffic predominantly falls into a cluster characterized by short durations, high outbound packet counts, and low outbound byte counts, consistent with DDoS activity."
            ]
          },
          {
            "description": "An internal host initiates outbound connections to an abnormally large number of unique destination IP addresses or ports within a short time window, a pattern characteristic of network scanning or P2P communication used by some botnets.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Workstation and Server Subnets, Internet Gateway, Core Switches",
            "action": [
              "Symbolic: Create a rule that triggers when a single source host (id.orig_h) initiates connections to more than a set number of unique destination IP addresses (e.g., > 50) on a common scanning port (e.g., 23, 445, 3389) within a one-minute window. Correlate with Windows Event ID 5156 to identify the source process.",
              "Statistical: Using Zeek conn.log, calculate the count of distinct destination IPs (`id.resp_h`) per source IP (`id.orig_h`) within a 5-minute window. Identify hosts whose distinct destination count exceeds the 98th percentile for their peer group (e.g., servers vs. workstations) or deviates from their own historical baseline using the Interquartile Range (IQR) method, flagging any value greater than Q3 + 1.5*IQR.",
              "Machine Learning: Calculate the Shannon entropy of destination IP addresses and destination ports on a per-source-host basis over rolling time windows. Use a trained classifier model (e.g., SVM) to distinguish between normal traffic (low IP/port entropy), targeted scanning (low IP entropy, high port entropy), and internet-wide scanning (high IP entropy). Alert when a host's traffic is classified as scanning."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]