[
  {
    "information_requirement": "Is the adversary evading defenses by operating in unused or unsupported cloud regions? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1535",
        "name": "Unused-Unsupported Cloud Regions",
        "evidence": [
          {
            "description": "An API call (e.g., AWS `RunInstances`) is initiated from an IP address present on a threat intelligence feed of known malicious IPs, or an API call creates a resource (e.g., an EC2 instance) using a public image ID (AMI) known to be associated with malicious activity.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "GCP Audit Logs",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Provider Management Console/API Endpoints, Threat Intelligence Platform, Cloud Provider Image Marketplace",
            "action": [
              "Symbolic: Correlate the `sourceIPAddress` (AWS), `properties.claims.ipaddr` (Azure), or `protoPayload.requestMetadata.callerIp` (GCP) field from cloud audit logs against a high-confidence threat intelligence feed of malicious IPs. Also, correlate the `requestParameters.imageId` (AWS) or equivalent against a feed of known malicious image IDs. Alert on any match, especially if originating from a non-standard or unapproved region.",
              "Statistical: For each `sourceIPAddress`, calculate the historical frequency of its usage across all API calls within the last 90 days. An IP address with a frequency below the 5th percentile that successfully authenticates and performs a high-privilege action (e.g., `RunInstances`) in an unapproved region should be flagged. Additionally, calculate the rarity of the `userAgent` field; a rare user agent combined with a rare IP in an unapproved region increases the risk score.",
              "Machine Learning: Train a classification model (e.g., Random Forest or Gradient Boosting) using features such as `sourceIPAddress` reputation, ASN, geolocation, time of day, rarity of `userAgent`, and the type of API call (`eventName`). Use the model to predict the probability of a given API call being malicious and alert on high-probability events, especially those in unapproved regions."
            ]
          },
          {
            "description": "A sequence of API calls associated with new user or resource setup (e.g., AWS: `CreateUser`, `CreateAccessKey`, `RunInstances`; Azure: `Create users`, `Microsoft.Compute/virtualMachines/write`) occurs in an unapproved region within a time window of less than 15 minutes, executed by a single user identity.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "GCP Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Provider Management Console/API Endpoints, Identity and Access Management (IAM) Service Endpoints",
            "action": [
              "Symbolic: Define and monitor for a rule that detects a specific event sequence (e.g., `CreateUser` -> `CreateAccessKey` -> `RunInstances`) from the same `userIdentity.arn` (AWS) or `principal.id` (GCP) and `awsRegion` within a 15-minute window. Trigger a high-severity alert if the `awsRegion` is not on the organization's approved-regions list.",
              "Statistical: For each user identity, calculate the Shannon entropy of the sequence of `eventName` fields within a 1-hour rolling window, segmented by region. A sudden, significant increase in entropy (e.g., >2 standard deviations above the user's baseline) in a historically unused region, especially if the sequence includes high-risk API calls (`*User`, `*Policy`, `*Instance`), indicates potential setup activity and should be alerted on.",
              "Machine Learning: Implement a sequence-to-sequence autoencoder (e.g., using LSTMs) trained on legitimate sequences of API calls from developers and administrators. Feed real-time API call sequences into the model. Flag any sequence of calls, particularly in an unapproved region, that has a high reconstruction error, indicating it deviates from learned legitimate behavior patterns."
            ]
          },
          {
            "description": "A resource creation API call (e.g., AWS `RunInstances`, Azure `Microsoft.Compute/virtualMachines/write`, GCP `compute.instances.insert`) is logged with a `region` or `location` parameter that is not on the organization's explicit allow-list of approved operational regions.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "GCP Audit Logs",
              "Service Control Policies (SCPs) or equivalent preventative control logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Organization's allow-list of approved cloud regions, Cloud Provider Management Console/API Endpoints, Cloud account/organization-level policy enforcement points",
            "action": [
              "Symbolic: Maintain an explicit allow-list of approved cloud regions. Ingest all cloud audit logs and create a high-severity alert for any resource creation event (e.g., `RunInstances`, `CreateBucket`, `CreateDBInstance`) where the event's `awsRegion` (or equivalent) field is not on the allow-list. This can be implemented as a preventative control via AWS SCPs, Azure Policy, or GCP Organization Policy.",
              "Statistical: Execute a periodic script (e.g., hourly) using cloud provider SDKs to query all available regions for active resources (e.g., `aws ec2 describe-instances`). For each region, maintain a 90-day baseline of the mean resource count. If the count for a historically unused or unsupported region (mean count over 90 days is zero) becomes greater than zero, trigger an immediate alert.",
              "Machine Learning: Apply a time series forecasting model (e.g., ARIMA or Prophet) to the daily count of active resources per region. An alert is triggered if the actual resource count in a non-primary region exceeds the forecasted upper confidence interval, indicating an anomalous and statistically significant increase in activity."
            ]
          },
          {
            "description": "An API call in an unapproved region modifies a security control to weaken posture (e.g., AWS `StopLogging`, `UpdateSecurityGroup` to allow 0.0.0.0/0) or creates a resource type (e.g., a high-CPU or GPU-accelerated compute instance) that is rarely used (less than 1% frequency) in approved regions.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "GCP Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Security Configuration Management Database, Cloud Provider Management Console/API Endpoints, Network Security Group / Firewall Rule configurations",
            "action": [
              "Symbolic: Create a detection rule that triggers on a watchlist of specific API calls that degrade security posture (e.g., `StopLogging`, `DeleteTrail`, `PutGroupPolicy`, `UpdateSecurityGroup` with inbound CIDR '0.0.0.0/0') when the event's region is on the unapproved list.",
              "Statistical: Establish a baseline of normal resource instance types (e.g., t2.micro, m5.large) and their frequencies used in approved regions. For any resource created in an unapproved region, compare its type to the baseline; flag if the instance type has a frequency of less than 1% in the baseline. Separately, calculate the daily rate of security-modifying API calls per region; an increase of over 3 standard deviations from the mean in an unapproved region should trigger an alert.",
              "Machine Learning: Use an unsupervised anomaly detection algorithm (e.g., Isolation Forest or Local Outlier Factor) on API call events from all regions. Use features such as user identity, source IP, API call name, region, and resource parameters (e.g., instance type). The model will score events for 'unusualness'; investigate events with a high anomaly score, prioritizing those in unapproved regions."
            ]
          },
          {
            "description": "A resource in an unapproved region initiates outbound network traffic where the total egress data volume exceeds the 95th percentile of daily egress for similar resources in approved regions, or the destination IP/domain of an outbound connection matches a known C2 or cryptomining pool address.",
            "data_sources": [
              "AWS VPC Flow Logs",
              "Azure NSG Flow Logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Sysmon Event ID 3: Network Connection"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Virtual Private Cloud (VPC) Egress points, Cloud Network Flow Log Aggregation Point, DNS Resolvers, Virtual Machines in unapproved cloud regions",
            "action": [
              "Symbolic: Ingest network flow logs (e.g., VPC Flow Logs) and DNS logs (e.g., Zeek `dns.log`) from all cloud regions. Correlate all destination IPs (`id.resp_h`) and DNS queries (`query`) against threat intelligence feeds of known C2 servers and cryptomining pools. Trigger a high-severity alert on any match originating from a resource in an unapproved region.",
              "Statistical: For resources in unapproved regions, analyze Zeek `conn.log` to establish a baseline for outbound connection duration (`duration`) and bytes sent (`orig_bytes`). Alert if any new connection's metrics exceed 3 standard deviations from the baseline for that resource type. Additionally, calculate the Shannon entropy of requested DNS domains (`query` in `dns.log`) per source host over a 5-minute window; a high entropy value can indicate DGA activity and should be flagged.",
              "Machine Learning: Apply a time series forecasting model (e.g., SARIMA) to the total egress data volume per hour for each unapproved region. An alert is triggered if the observed volume significantly deviates from the forecasted volume. Additionally, use a clustering algorithm (e.g., K-Means or DBSCAN) on connection metadata from Zeek `conn.log` (port, protocol, duration, bytes) to identify groups of beaconing-like activity indicative of C2 communications."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]