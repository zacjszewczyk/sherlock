[
  {
    "information_requirement": "Is the adversary collecting data from cloud storage?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1530",
        "name": "Data from Cloud Storage",
        "evidence": [
          {
            "description": "A successful cloud storage access event (e.g., GetObject, Download) where the source IP address is associated with a known malicious entity (e.g., threat intelligence feed, anonymous proxy) or the User-Agent string matches a known data exfiltration tool signature.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Storage Analytics logs",
              "Google Cloud Audit Logs",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider API gateways, Internet gateway proxy servers, Enterprise SIEM platform",
            "action": [
              "Symbolic: Continuously correlate the `sourceIPAddress` from cloud storage access logs and the `id.orig_h` field from Zeek conn.log against a high-confidence threat intelligence feed of malicious IPs and known TOR exit nodes. Simultaneously, scan the `userAgent` field in cloud logs and the `user_agent` field in Zeek http.log for signatures of known malicious tools (e.g., 'Rclone', 'S3Scanner'). Alert on any match.",
              "Statistical: For each principal, calculate the historical Shannon entropy of their User-Agent strings over a 30-day baseline. A sudden, sharp decrease in entropy (approaching 0) for a principal's access events may indicate a switch to a single, programmatic tool. Alert if the entropy for a 1-hour window drops below the 5th percentile of the principal's historical distribution.",
              "Machine Learning: Train a logistic regression classifier on labeled historical data (IP address features from geolocation and ASN, User-Agent characteristics, time of day, day of week) to predict malicious access. Use the model to score new access events in real-time. An event with a probability score greater than 0.9 should be flagged for investigation."
            ]
          },
          {
            "description": "Execution of a process on an endpoint, or network activity originating from a process, whose signature (process name, command-line arguments, or User-Agent string) is consistent with known cloud data siphoning tools (e.g., Rclone, S4cmd).",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail logs",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical asset endpoints (e.g., developer workstations, administrator servers), Cloud provider API gateways, Network egress points",
            "action": [
              "Symbolic: Create a watchlist of process names (e.g., 'rclone.exe', 's4cmd.exe', 's3browser.exe') and monitor for their creation in Windows Event ID 4688. Create a rule to detect command-line arguments containing cloud storage URIs (e.g., 's3://', 'az://', 'gs://'). In parallel, monitor the `userAgent` field in cloud API logs and `user_agent` in Zeek http.log for these tool names. Alert on any match.",
              "Statistical: Analyze cloud API logs for reconnaissance patterns. Calculate the ratio of list/describe calls (e.g., 'ListBuckets', 'ListObjects') to get/read calls ('GetObject') per principal over a 5-minute window. A ratio that exceeds the 99th percentile of the historical baseline for that principal's role is anomalous and could indicate enumeration before collection. Alert on such spikes.",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model or LSTM) trained on legitimate API call sequences per user role. Feed real-time API call sequences for each principal into the model. An observed sequence with a low probability of occurring under the trained model (e.g., a rapid succession of ListBuckets -> ListObjectsV2 -> GetObject for multiple objects) indicates anomalous, potentially malicious, behavior."
            ]
          },
          {
            "description": "The total volume of data (in bytes) egressing from cloud storage, or the count of data retrieval API calls (e.g., 'GetObject'), by a single principal exceeds a dynamic threshold derived from their historical baseline.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Storage Analytics logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud storage services (e.g., S3 buckets, Azure Blobs), Network flow data collectors at internet egress points, SIEM aggregation platform",
            "action": [
              "Symbolic: Define a static threshold for data exfiltration for highly sensitive storage locations, for example, any single principal downloading more than 1GB of data within a 1-hour period. Alert if this threshold is breached.",
              "Statistical: For each principal, establish a 30-day rolling baseline of hourly data download volume (bytes from `orig_bytes` + `resp_bytes` in Zeek conn.log) and API call count. Calculate the mean and standard deviation. Generate an alert when a principal's hourly activity exceeds 3 standard deviations above their personal mean. Additionally, flag any activity that exceeds the 98th percentile of their historical hourly activity.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA or Prophet) for each principal's data access volume. The model will learn the normal rhythm (e.g., daily, weekly patterns) of their activity. An observation that falls outside the model's predicted confidence interval indicates a significant anomaly and should trigger an alert for potential bulk data retrieval."
            ]
          },
          {
            "description": "A successful cloud authentication and subsequent data access event by a principal exhibits multiple contextual anomalies simultaneously, such as originating from a geographically improbable location, using a rare User-Agent, and occurring at an unusual time relative to that principal's established pattern of life.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Active Directory sign-in logs",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity and Access Management (IAM) systems, Enterprise Identity Provider (e.g., ADFS, Okta), VPN concentrators, Endpoint devices",
            "action": [
              "Symbolic: Implement an 'impossible travel' rule. For each successful login, geolocate the source IP. If the time elapsed between the current login and the previous login from a different location is insufficient to physically travel between the two locations, generate a high-priority alert.",
              "Statistical: For each user, maintain a baseline of typical login hours, source Autonomous System Numbers (ASNs), and User-Agents. Use a scoring system where deviations add to a risk score (e.g., login at 3 AM = +2, rare ASN = +3, new User-Agent = +1). An aggregate score exceeding a predefined threshold (e.g., 5) indicates a high-risk login. This can also be identified by calculating a Mahalanobis distance from the user's normal activity cluster in n-dimensional feature space.",
              "Machine Learning: Develop an unsupervised anomaly detection model (e.g., Isolation Forest) trained on features like time-of-day, day-of-week, geolocation, ASN, and User-Agent to identify complex deviations from a user's normal 'pattern of life'. Events flagged as anomalous by the model represent multi-faceted behavioral shifts that warrant investigation."
            ]
          },
          {
            "description": "A high rate of 'Access Denied' errors from a single source IP or principal targeting various storage objects, followed by a successful access to one of the same objects; or, any successful access to a non-public storage object by an unauthenticated ('Anonymous') principal.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Monitor logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider IAM services, Cloud storage configuration panels, SIEM correlation engines",
            "action": [
              "Symbolic: Create a high-severity rule to immediately alert on any successful cloud API event (e.g., 'GetObject') where the `userIdentity.principalId` is 'ANONYMOUS' or the request is flagged as unauthenticated, and the target resource is not explicitly configured for public access. This indicates exploitation of a critical misconfiguration.",
              "Statistical: For each principal, monitor the count of 'AccessDenied' API errors within a 5-minute sliding window. If the error count exceeds the 99th percentile of the principal's historical error rate, begin monitoring that principal's activity closely. If a successful 'GetObject' or 'ListObjects' call for a previously denied resource occurs within the next 15 minutes, escalate to a high-priority alert, as this may indicate privilege escalation.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on API log data, using features such as the ratio of failed-to-successful calls, the variety of API actions attempted, and the number of distinct resources targeted in a session. Principals that fall into a sparse cluster characterized by 'high error, high variety' are likely performing reconnaissance or permission testing and should be flagged for analyst review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]