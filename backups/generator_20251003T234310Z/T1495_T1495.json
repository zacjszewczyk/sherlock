[
  {
    "information_requirement": "Has an adversary impacted system or device availability by corrupting firmware?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1495",
        "name": "Firmware Corruption",
        "evidence": [
          {
            "description": "A file transfer or process execution event is observed containing a file hash or filename associated with a known firmware modification tool.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Endpoints, Domain Controllers, Core Network Switches, Internet Gateway",
            "action": [
              "Create a detection rule to generate an alert when a file hash (MD5, SHA1, SHA256) in Zeek files.log or a process hash from Windows Event ID 4688 matches a threat intelligence feed of known firmware modification tools (e.g., Lojax, TrickBoot components, MosaicRegressor).",
              "For all executable files transferred over the network (identified via Zeek files.log), calculate the Shannon entropy of the filename. Establish a baseline distribution of filename entropy and generate an alert for files with entropy scores exceeding the 95th percentile, as this indicates potential use of randomization to evade signature-based detection.",
              "Train a supervised classification model (e.g., Random Forest) on features from process creation events (Windows Event ID 4688) and network file transfers (Zeek files.log). Features should include file size, MIME type, source/destination IP reputation, parent process name, user context, and filename entropy. Use the model to score unknown executables for their likelihood of being malicious firmware utilities."
            ]
          },
          {
            "description": "A known firmware update utility is executed with command-line arguments, from a process path, or by a parent process that deviates from established baselines of legitimate administrative activity.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Endpoints, Mission Critical Servers (e.g., Database, Application), Virtualization Hosts",
            "action": [
              "Deploy a detection rule that alerts on the execution of known firmware update utilities (e.g., vendor-specific flashers, flashrom.exe) if the process image path is not in an authorized directory (e.g., not in 'C:\\Program Files\\*') or the process is not digitally signed by the expected hardware vendor.",
              "For each approved firmware update utility, establish a baseline of normal command-line argument patterns. For each new execution, calculate the Levenshtein distance between its arguments and the set of baselined normal arguments. Alert if the minimum distance exceeds a statistically determined threshold (e.g., 3 standard deviations from the mean distance), indicating anomalous usage.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to process execution events (Windows Event ID 4688) for firmware utilities. Use features such as command-line arguments, parent process name, username, and execution time of day. Classify any execution event identified as a noise point or belonging to a very small cluster as a high-risk anomaly requiring investigation."
            ]
          },
          {
            "description": "A sequence of host and network events is observed on a single system that aligns with a firmware attack chain: hardware reconnaissance, acquisition of a tool, privileged execution, and a subsequent unexpected system shutdown or crash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Windows Event ID 1074",
              "Windows Event ID 6006",
              "Windows Event ID 41"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise Endpoints, Virtualization Hosts, Core Network Infrastructure",
            "action": [
              "Implement a stateful correlation rule that triggers when the following event sequence is observed on a single host within a 60-minute window: 1) Execution of a hardware discovery command (e.g., 'wmic baseboard get'); 2) A network connection to a low-reputation or uncategorized IP address (from Zeek conn.log) resulting in a file download; 3) Privileged execution of a newly observed or unsigned executable; 4) An unexpected shutdown event (Windows Event ID 1074, 6006, or 41).",
              "For all observed instances of the attack chain identified by the symbolic rule, calculate the time delta between each step. Analyze the distribution of these deltas across the enterprise. Flag any sequence where the time between steps falls in an outlier range (e.g., below the 5th percentile, indicating automation) for immediate escalation.",
              "Train a sequence-aware Recurrent Neural Network (RNN) or Hidden Markov Model (HMM) on streams of host event logs (process creation, network connections, system events) to learn normal sequences of activity. Use the trained model to score real-time event sequences; a sequence that includes the key attack chain events and receives a very low probability score from the model indicates a likely attack."
            ]
          },
          {
            "description": "Network traffic to a network device's management interface shows anomalous characteristics, such as unusual protocols, large data transfers, or connections from unauthorized sources, preceding a device failure.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Management Interfaces (Switches, Routers, Firewalls), Out-of-Band Management Network",
            "action": [
              "Define a strict allow-list for traffic to network device management interfaces. Generate an alert for any connection using a protocol other than approved ones (e.g., SSH, HTTPS) or originating from an IP address not on the authorized administrator subnet list.",
              "For each network device management interface, baseline the inbound data volume (sum of 'resp_bytes' in Zeek conn.log) in 1-hour windows. Generate an alert if the data volume in any window exceeds the 98th percentile of the historical baseline, which could indicate the transfer of a malicious firmware image.",
              "Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) for the traffic volume and connection count to each critical network device's management interface. An alert is generated when observed traffic significantly deviates from the model's forecast confidence interval, especially if correlated with device health alerts from a network monitoring system."
            ]
          },
          {
            "description": "A sharp, statistically significant increase in unexpected system reboots or crashes is observed across multiple systems, which is not attributable to any scheduled maintenance or authorized change request.",
            "data_sources": [
              "Windows Event ID 1074",
              "Windows Event ID 6005",
              "Windows Event ID 6006",
              "Windows Event ID 41"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Enterprise Endpoints and Servers, Change Management Database/System",
            "action": [
              "Create a threshold-based rule that alerts when the distinct count of hosts reporting an unexpected shutdown (Windows Event ID 1074), unclean shutdown (Event ID 6006), or critical kernel power error (Event ID 41) exceeds a set number (e.g., 20 hosts) within a 30-minute window. Automatically cross-reference event timestamps with a change management system to suppress alerts related to authorized activities.",
              "Aggregate unexpected shutdown events (IDs 1074, 6006, 41) into 15-minute time intervals. Calculate a 24-hour moving average and standard deviation for this count. Generate an alert when the count in the current interval exceeds the moving average by more than three standard deviations, indicating a statistically significant burst of failures.",
              "Apply a spatial-temporal clustering algorithm (e.g., ST-DBSCAN) to shutdown events, using the event timestamp and the host's subnet (/24) as the two dimensions. This identifies clusters of failures that are close in both time and network location, suggesting a coordinated attack or propagation, and distinguishing it from random, geographically dispersed hardware failures."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]