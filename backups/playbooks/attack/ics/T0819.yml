name: T0819: Exploit Public-Facing Application
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is attempting to exploit public-facing Industrial Control System (ICS) applications for initial access. It focuses on identifying suspicious network traffic patterns, anomalous process behavior post-exploitation, unauthorized lateral movement from the DMZ to the internal OT network, and the placement of malicious files like web shells on public-facing servers. Evidence patterns include statistical network anomalies, brute-force attempts, execution of unauthorized processes (e.g., cmd.exe, powershell.exe) by web applications, connections from the DMZ to internal PLC/RTU assets, and the creation of high-entropy or script-based files in web directories.
type: technique
related:
- TA0108: Initial Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are we observing network traffic patterns indicative of known exploit signatures, connections from malicious sources, or successful brute-force attacks against our public-facing ICS applications?
  context: This question aims to identify low-hanging fruit and known attack patterns. By searching for specific signatures (like SQLi), cross-referencing IPs with threat intelligence, and looking for brute-force login patterns, analysts can quickly detect common, signature-based attacks against web applications and authentication services. It also checks for the misuse of ICS protocol functions, which could indicate an attacker with specialized knowledge is attempting to probe or manipulate systems.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek notice.log
  - Zeek weird.log
  - Zeek modbus.log
  - Zeek dnp3.log
  - Windows Event ID 4624
  - Windows Event ID 4625
  - Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Search http logs for regex matches of common web exploits (SQLi, cmd injection) in URI and body.
      Join connection logs source IPs with threat intelligence blacklist.
      Search for ICS protocol logs with uncommon/unauthorized function codes.
      Correlate failed login events (4625) with a successful login event (4624) from the same source IP in a short time window.
- question: Is there statistical evidence of anomalous or automated scanning activity against our public-facing ICS applications?
  context: This question moves beyond known signatures to detect anomalous behavior. Adversaries often use automated tools for reconnaissance and exploitation, which can create statistical outliers. This involves looking for unusual spikes in connection volume from a single source, high-entropy (random-looking) URIs that might indicate fuzzing, and very rapid, consistent connection attempts that suggest automated scanning rather than human interaction.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      For each source IP, calculate inbound connection count in 15-min windows. Alert if count > (30-day mean + 3*stddev).
      For each source IP, calculate Shannon entropy of URI strings. Alert if entropy > (historical mean + 2*stddev).
      For each source IP, analyze inter-arrival time of connections. Alert if mean and variance are consistently low.
- question: Can machine learning models detect sophisticated, previously unseen anomalies in network traffic to our public-facing ICS applications?
  context: This question leverages machine learning to find novel or complex attack patterns that statistical thresholds might miss. Time-series models can identify unusual deviations in traffic volume over time, while classification models like Isolation Forest can learn the characteristics of 'normal' connections and flag any connection that deviates significantly across multiple features (like data volume, duration, and connection state). This helps detect attackers who are trying to blend in.
  answer_sources:
  - Zeek conn.log
  - Network DMZ segment (Purdue Level 3.5) hosting public-facing ICS applications
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Apply time-series model (e.g., ARIMA) to connection/byte counts. Alert on significant deviations from forecast.
      Apply anomaly detection model (e.g., Isolation Forest) to connection logs based on features like bytes, duration, packets. Alert on high anomaly scores.
- question: Has a public-facing ICS application spawned a suspicious or non-whitelisted child process, such as a command shell or a tool with malicious arguments?
  context: A common post-exploitation step is for the compromised application to launch other processes to perform reconnaissance or establish persistence. This question focuses on detecting this activity by comparing observed parent-child process relationships against a known-good whitelist. It also looks for command-line arguments that strongly indicate malicious intent (e.g., encoded commands, network tools) and correlates this with recent suspicious network activity to increase confidence.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ) located in the Purdue Level 3.5 DMZ.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Search process creation logs for parent-child pairs not on the approved whitelist.
      Scan command-line arguments for suspicious keywords (e.g., 'base64', '-enc', 'invoke-expression').
      Correlate process creation alerts with suspicious inbound network connection logs within a 5-minute window.
- question: Are there statistically rare process creation events or unusually complex command-line arguments originating from our public-facing ICS applications?
  context: This question seeks to find unusual process activity without relying on a pre-defined whitelist. It operates on the principle that legitimate operations are repetitive, while malicious activity is often unique. By flagging process creation events (a specific user running a specific process from a parent process) that are historically rare, we can uncover novel adversary behavior. Similarly, high-entropy command lines can indicate obfuscated or randomly generated scripts.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ) located in the Purdue Level 3.5 DMZ.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Calculate historical frequency of (Parent, Child, User) process creation tuples. Alert on rare occurrences (e.g., bottom 1st percentile).
      Calculate Shannon entropy of command-line arguments in rolling windows. Alert on significant deviations from the mean.
- question: Can machine learning models identify anomalous process creation events that may indicate post-exploitation activity?
  context: This question applies machine learning to build a more holistic model of normal process behavior. By considering multiple features at once (parent, child, user, command-line length/count), an anomaly detection model can identify subtle deviations that might not be caught by single-variable statistical checks. This is particularly effective for detecting when legitimate service accounts are used to perform actions that are slightly outside their normal behavioral profile.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Public-facing ICS application servers (e.g., Windows-based HMI servers, data historians, engineering workstations in DMZ) located in the Purdue Level 3.5 DMZ.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Apply anomaly detection model (e.g., Isolation Forest) to process creation events using features like parent/child name, arg count/length, and user. Alert on high anomaly scores.
- question: Is a public-facing DMZ server making an unauthorized outbound connection to the internal ICS network or using dangerous ICS commands?
  context: After compromising a DMZ server, an adversary will often attempt to move laterally into the more sensitive control systems network. This question aims to detect this movement by enforcing a strict "deny-by-default" policy. Any network connection from the DMZ to the internal OT network that is not explicitly on a pre-approved whitelist is considered highly suspicious. The check is further refined by inspecting ICS protocol traffic for specific high-impact commands (writes, stops) that are not part of normal operations.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Search network connection logs for outbound connections from DMZ to internal ICS network that do not match the connection whitelist (Source IP, Dest IP, Dest Port, Protocol).
      Search ICS protocol logs for outbound DMZ traffic using unauthorized write or control commands.
- question: Are there statistical anomalies in outbound connection patterns from DMZ servers, such as communication with new internal hosts or unusually long connection durations?
  context: This question provides a method for detecting anomalous lateral movement without a rigid whitelist. It learns the normal "communication profile" of each DMZ server. An alert is triggered if a server suddenly starts talking to a new set of internal devices (a low Jaccard similarity score) or if a connection's duration is unusually long, which could indicate an interactive shell or large data transfer, differing from typical, brief operational communications.
  answer_sources:
  - Zeek conn.log
  - Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      For each DMZ server, create baseline of contacted internal hosts/ports. In rolling windows, compare current connections to baseline using Jaccard index. Alert on low similarity.
      For approved connection paths, baseline connection durations. Alert if a new connection duration exceeds the 99th percentile.
- question: Can graph analysis reveal anomalous communication patterns, such as a DMZ server bridging to a community of critical ICS assets it doesn't normally interact with?
  context: This question uses a more advanced analytical technique, graph analysis, to model the entire network's communication structure. By grouping devices into "communities" based on who they talk to, we can establish a macro-level baseline of normal behavior. An alert is triggered when a device, like a DMZ server, creates a new and persistent link to a community it's not a part of, such as a group of PLCs. This indicates a fundamental and suspicious shift in its communication role.
  answer_sources:
  - Zeek conn.log
  - Network boundary between the IT/DMZ (Purdue Level 3.5) and the OT/ICS network (Purdue Levels 0-3), specifically monitoring traffic egressing the DMZ.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Build a network communication graph and apply community detection to establish a baseline.
      Monitor for new, persistent edges from DMZ nodes to nodes in critical internal communities (e.g., 'PLC Community').
- question: Has a potential web shell or malicious tool been written to a web-accessible directory, especially following an external file upload?
  context: A primary goal after exploiting a web application is to place a web shell for persistent access. This question focuses on detecting this by monitoring for file creation events in sensitive web directories. The detection is strengthened by using YARA rules to scan for known web shell signatures and by correlating the file creation with a recent HTTP POST request, which is the common delivery mechanism. A scriptable file extension (.php, .aspx) greatly increases the alert's priority.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Zeek http.log
  - Zeek files.log
  - Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Scan newly created files in web directories with YARA rules for web shells.
      Correlate file creation events (Sysmon EID 11) in web directories with preceding HTTP POST requests (http.log) from an external source to the same host.
- question: Are there statistically anomalous files being created on web servers, such as unusually small or high-entropy files?
  context: This question uses statistical properties of files to find outliers that might be malicious. Small files with scriptable extensions could be simple but effective web shells or downloaders. High Shannon entropy in a file's content suggests it is encrypted or packed, a common technique used by adversaries to obfuscate their payloads and evade signature-based antivirus.
  answer_sources:
  - Sysmon Event ID 11
  - Zeek files.log
  - Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Baseline file sizes in web directories. Alert if a new scriptable file's size is an outlier (e.g., < 5th percentile).
      Calculate Shannon entropy of new file contents. Alert if entropy is an outlier for that file type (e.g., > 98th percentile).
- question: Can a machine learning model, trained on file and process metadata, predict whether a newly created file is malicious?
  context: This question proposes using a supervised machine learning model to make a more intelligent decision about whether a file is malicious. By training a model on features like the file's path, extension, the process that created it, and its name's entropy, we can create a classifier that automatically scores new files. This is more robust than simple rules and can identify malicious files even if they don't match a specific signature or statistical threshold.
  answer_sources:
  - Windows Event ID 4663
  - Sysmon Event ID 11
  - Zeek http.log
  - Zeek files.log
  - Webroot directories, temporary file directories, and application configuration folders on public-facing ICS application servers in the DMZ (Purdue Level 3.5).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      Apply classification model to file creation events using features like path, extension, creating process, and correlation to HTTP POSTs. Alert on high malicious probability score.