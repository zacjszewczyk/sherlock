name: T0847: Replication Through Removable Media
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook helps investigate whether an adversary is attempting to gain initial access to an Industrial Control System (ICS) network by using removable media. It focuses on detecting suspicious process creations from removable drives, subsequent anomalous network connections, and the establishment of persistence mechanisms shortly after the initial execution. Evidence includes processes not on an allowlist, command line obfuscation, connections to malicious IPs, non-standard network behavior, and the creation of new services, scheduled tasks, or autorun keys.
type: technique
related:
- TA0108: Initial Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a process being executed from removable media that is not on the approved software allowlist for the specific asset, or does it have a suspicious parent process?
  context: |
    This question aims to identify unauthorized software execution originating from removable media, a common vector for malware introduction. By checking the process hash against an asset-specific allowlist, we can quickly filter out legitimate tools. Further investigation of the parent process helps to detect cases where legitimate-looking processes are launched by an unexpected parent, which could indicate process injection or other evasive techniques.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Operator Consoles, Data Gateways, SCADA Servers, Portable technician laptops, any Windows-based ICS endpoint with USB/removable media access.
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH process creation events (Sysmon 1, Win 4688) WHERE image_path matches '^[D-Z]:\\.*'.
      FOR each result, LOOKUP process_hash in asset_software_allowlist.
      IF not found, ALERT.
      IF parent_process is not 'explorer.exe' or known_good_parent, ESCALATE.
- question: Is a process launched from removable media using command line arguments with unusually high entropy, suggesting obfuscation?
  context: |
    Adversaries often use obfuscated or packed commands to hide their malicious activity within command line arguments. Calculating the Shannon entropy of these arguments provides a mathematical way to detect randomness or complexity that deviates from normal usage. An entropy score exceeding the 95th percentile of the historical baseline for that specific asset is a strong indicator of potentially malicious commands that require investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Operator Consoles, Data Gateways, SCADA Servers, Portable technician laptops, any Windows-based ICS endpoint with USB/removable media access.
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each process creation from removable media, CALCULATE Shannon entropy of command_line.
      COMPARE entropy_score to 90-day baseline for the asset.
      IF score > 95th percentile, ALERT.
- question: Does a machine learning model classify a process execution from removable media as malicious based on its characteristics?
  context: |
    This question leverages a machine learning model to perform real-time, automated analysis of process executions from removable media. The model, trained on features like process name entropy, command line length and entropy, and parent process, can identify complex patterns indicative of malware that might be missed by simple rules. A high probability score from the model provides a high-confidence signal for immediate incident response.
  answer_sources:
  - Sysmon Event ID 1
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Operator Consoles, Data Gateways, SCADA Servers, Portable technician laptops, any Windows-based ICS endpoint with USB/removable media access.
  range: last 90 days
  queries:
  - pseudocode: |
      INPUT Sysmon Event ID 1 features (ProcessName entropy, CommandLine length, CommandLine entropy, ParentProcessName, binary signature status) into pre-trained ML model.
      IF model_output_probability > 0.90, ALERT.
- question: Following a process execution from removable media, did the host connect to a known malicious destination or exhibit suspicious TLS characteristics?
  context: |
    This question correlates the initial execution from removable media with subsequent network activity to identify command and control (C2) communication or data exfiltration. A connection to an IP or domain on a threat intelligence list is a strong indicator of compromise. Additionally, analyzing TLS certificates (e.g., self-signed certs for external connections) or JA3/JA3S hashes can uncover encrypted C2 channels that might otherwise go unnoticed.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Zeek files.log
  - The IT/OT network boundary, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Perimeter firewalls, Network Intrusion Detection Systems (NIDS) at the IT/OT boundary, ICS network switches and routers where Zeek sensors are deployed.
  range: last 90 days
  queries:
  - pseudocode: |
      CORRELATE removable_media_process_execution with network_connection (Zeek conn.log) from same host within 5 minutes.
      LOOKUP destination_ip/domain in threat_intel_feed.
      CHECK ssl.log for self-signed_cert or known_bad_JA3/JA3S.
      IF match, ALERT.
- question: After a process ran from removable media, did the host exhibit anomalous network behavior, such as connecting to a new port or transferring an unusually large amount of data?
  context: |
    This question aims to detect deviations from established network behavior baselines, which can indicate malicious activity even without a known-bad signature. Malware often uses non-standard ports for C2 or exfiltration. A sudden, large data transfer can also signify data theft. Comparing post-execution network traffic to a 30-day rolling baseline for that specific asset helps to identify statistically significant anomalies that warrant investigation.
  answer_sources:
  - Zeek conn.log
  - The IT/OT network boundary, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Perimeter firewalls, Network Intrusion Detection Systems (NIDS) at the IT/OT boundary, ICS network switches and routers where Zeek sensors are deployed.
  range: last 90 days
  queries:
  - pseudocode: |
      AFTER removable_media_execution, monitor host's network traffic for 1 hour.
      COMPARE destination_port against 30-day baseline of known ports for asset.
      COMPARE total_bytes transferred against 99th percentile of baseline.
      IF new_port or bytes > threshold, ALERT.
- question: Does a machine learning anomaly detection model identify significant deviations in the host's network traffic patterns following a removable media execution?
  context: |
    This question applies an unsupervised machine learning model (Isolation Forest) to detect subtle, multi-faceted anomalies in network traffic that might be missed by single-metric baselines. The model analyzes aggregations of features like connection counts, unique ports, and data volume over time. An anomaly score exceeding a pre-defined threshold after a removable media event indicates a complex behavioral change that is highly suspicious and requires further analysis.
  answer_sources:
  - Zeek conn.log
  - The IT/OT network boundary, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Perimeter firewalls, Network Intrusion Detection Systems (NIDS) at the IT/OT boundary, ICS network switches and routers where Zeek sensors are deployed.
  range: last 90 days
  queries:
  - pseudocode: |
      AFTER removable_media_execution, capture 10 minutes of host's network data.
      AGGREGATE features (new_connections, unique_ports, total_bytes, in/out_ratio) over 60s windows.
      INPUT feature vectors into Isolation Forest model.
      IF anomaly_score > threshold, ALERT.
- question: Following an execution from removable media, was a new persistence mechanism (service, task, autorun key) created that points to a file in a suspicious location?
  context: |
    This question seeks to identify a common adversary tactic: establishing persistence to survive a reboot. By correlating a removable media execution with the creation of a new persistence mechanism within a short time window, we can link the two events. The tactic becomes even more suspicious if the persistence mechanism's executable path points to a temporary or user-writable directory (like AppData or ProgramData), as these are non-standard locations for legitimate software and are often abused by malware.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows Event ID 7045
  - Windows Event ID 4698
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Sysmon Event ID 14
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, SCADA Servers, any Windows-based ICS endpoint with USB/removable media access.
  range: last 90 days
  queries:
  - pseudocode: |
      CORRELATE removable_media_process_execution (Sysmon 1) with persistence_creation (Win 7045/4698, Sysmon 12/13/14) on same host within 10 minutes.
      IF new persistence ImagePath or RegistryValue points to temp/user-writable directory, ALERT.
- question: After a removable media event, was a new persistence entry created that has never been seen before for this class of asset?
  context: |
    This question uses historical baselining to detect novel persistence mechanisms. ICS environments are often highly standardized, making any deviation from the norm suspicious. By maintaining a baseline of all known-good services, tasks, and autorun entries for each asset type (e.g., HMI, EWS), any newly created persistence entry that doesn't match this 'known-good' list can be flagged as a 'zero-day' occurrence for that environment and immediately prioritized for investigation.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4698
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Sysmon Event ID 14
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, SCADA Servers, any Windows-based ICS endpoint with USB/removable media access.
  range: last 90 days
  queries:
  - pseudocode: |
      ON new persistence creation following a removable media event, CHECK if service_name, task_command, or autorun_entry exists in known-good baseline for the asset_class.
      IF not found, ALERT.
- question: Does a machine learning model classify a new persistence entry, created after a removable media event, as an outlier compared to a baseline of benign entries?
  context: |
    This question leverages a one-class SVM model, a type of anomaly detection algorithm, to identify suspicious persistence entries. The model is trained exclusively on the characteristics of known-benign entries (e.g., path entropy, binary signature). When a new persistence mechanism is created following a removable media event, the model determines if its features are consistent with the benign training data. If it's classified as an outlier, it represents a high-confidence indicator of a malicious persistence attempt.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 4698
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Sysmon Event ID 14
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, SCADA Servers, any Windows-based ICS endpoint with USB/removable media access.
  range: last 90 days
  queries:
  - pseudocode: |
      AFTER removable media event, on new persistence creation, EXTRACT features (name/path entropy, path depth, signature status).
      INPUT features into one-class SVM model.
      IF model classifies as 'outlier', ALERT.