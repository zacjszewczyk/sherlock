name: T0889: Modify Program
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: "This playbook helps determine if an adversary has modified program logic on an ICS controller to establish persistence. This is investigated by looking for unauthorized program modification commands, unauthorized controller mode changes, and mismatches between project files and their trusted baselines. Evidence is gathered from network traffic, host-based file integrity monitoring, and contextual logs to differentiate between legitimate engineering activity and potential threats."
type: technique
related:
  - TA0110: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: "Is an unauthorized source IP modifying program logic outside of a scheduled maintenance window?"
    context: "This question helps detect direct, unauthorized attempts to alter controller logic. By checking the source IP against an allowlist of Engineering Workstations (EWS) and verifying if the activity occurs within a scheduled maintenance window, we can filter out legitimate engineering activities and focus on potentially malicious modifications. An alert for this indicates a high-fidelity sign of an adversary attempting to establish persistence or cause a disruptive event."
    answer_sources:
      - "Zeek s7comm.log, Zeek modbus.log, Zeek enip.log, Zeek conn.log, Windows Event ID 4624"
      - "Network traffic sensors at choke points between the enterprise network (Level 4/5) and the process control network (Level 3), taps on EWS subnets (Level 3), and span ports monitoring traffic to and from critical PLCs/controllers (Level 1/2)."
    range: "last 90 days"
    queries:
      - technology: SIEM
        query: |
          SEARCH for program modification in (s7comm.log, modbus.log, enip.log)
          EXTRACT source_ip from conn.log
          IF source_ip NOT IN ews_allowlist OR event_time NOT IN maintenance_window
          THEN ALERT
  - question: "Has there been a statistically significant increase in program modification commands for any controller?"
    context: "This question aims to detect anomalous patterns of activity that might not be caught by simple allowlist rules. A sudden spike in program modifications, even from an otherwise authorized source, could indicate a compromised EWS or an insider threat. By comparing current activity against a historical baseline (30-day rolling average), we can identify unusual bursts of modifications that warrant investigation."
    answer_sources:
      - "Zeek s7comm.log, Zeek modbus.log, Zeek enip.log, Zeek conn.log, Windows Event ID 4624"
      - "Network traffic sensors at choke points between the enterprise network (Level 4/5) and the process control network (Level 3), taps on EWS subnets (Level 3), and span ports monitoring traffic to and from critical PLCs/controllers (Level 1/2)."
    range: "last 90 days"
    queries:
      - technology: SIEM/Data Analytics
        query: |
          FOR each controller_ip
            CALCULATE hourly count of program modifications for last hour
            COMPARE to 30-day baseline (mean + 3*std_dev) for that hour/day
            IF current_count > baseline
            THEN ALERT
  - question: "Is the overall pattern of program modification activity across the network deviating from learned normal behavior?"
    context: "This question uses a machine learning approach to detect subtle, complex anomalies that rule-based and simple statistical methods might miss. By modeling multiple features simultaneously (command counts, source/destination IPs, protocols, payload sizes), the model learns the normal 'rhythm' of engineering operations. An alert indicates that the current combination of activities is highly unusual and could represent a sophisticated, low-and-slow attack."
    answer_sources:
      - "Zeek s7comm.log, Zeek modbus.log, Zeek enip.log, Zeek conn.log, Windows Event ID 4624"
      - "Network traffic sensors at choke points between the enterprise network (Level 4/5) and the process control network (Level 3), taps on EWS subnets (Level 3), and span ports monitoring traffic to and from critical PLCs/controllers (Level 1/2)."
    range: "last 90 days"
    queries:
      - technology: Machine Learning/Anomaly Detection
        query: |
          FOR each 5-minute window
            EXTRACT features (cmd_count, unique_src, unique_dst, protocol, avg_payload)
            INPUT features into trained LSTM Autoencoder model
            CALCULATE reconstruction_error
            IF reconstruction_error > dynamic_threshold
            THEN ALERT
  - question: "Has a controller's mode been changed (e.g., to STOP/PROGRAM) by an unauthorized source or without an approved change ticket?"
    context: "An adversary must often place a controller into a 'STOP' or 'PROGRAM' state before they can modify its logic. This question directly targets this prerequisite action. By correlating mode change commands with an allowlist of authorized sources and an external change management system, we can identify unauthorized attempts to make a controller vulnerable to modification."
    answer_sources:
      - "Zeek s7comm.log, Zeek enip.log, Zeek dnp3.log, Zeek conn.log"
      - "Network interfaces of critical PLCs/Controllers (Level 1/2), Process Control Network (Purdue Level 2/3) monitoring points, network choke points between Level 3 and Level 2, and logs from change management systems."
    range: "last 90 days"
    queries:
      - technology: SIEM
        query: |
          SEARCH for mode change commands (STOP, PROGRAM) in (s7comm.log, enip.log)
          EXTRACT source_ip
          QUERY change management system for approved ticket for controller/time
          IF source_ip NOT IN ews_allowlist OR no_approved_ticket_found
          THEN ALERT
  - question: "Has any critical controller spent an unusually long time in a modifiable state (e.g., 'STOP' or 'PROGRAM')?"
    context: "Legitimate maintenance activities that require a controller to be stopped are typically brief and well-defined. If a controller remains in a non-operational, modifiable state for an extended period, it could indicate that an adversary is taking time to analyze, reverse-engineer, or inject malicious logic. This question establishes a baseline for normal maintenance durations and alerts on statistical deviations."
    answer_sources:
      - "Zeek s7comm.log, Zeek enip.log, Zeek dnp3.log, Zeek conn.log"
      - "Network interfaces of critical PLCs/Controllers (Level 1/2), Process Control Network (Purdue Level 2/3) monitoring points, network choke points between Level 3 and Level 2, and logs from change management systems."
    range: "last 90 days"
    queries:
      - technology: SIEM/Data Analytics
        query: |
          FOR each critical controller
            CALCULATE total time in non-'RUN' state for the last 24 hours
            RETRIEVE 99th percentile baseline for daily non-'RUN' duration
            IF current_duration > baseline
            THEN ALERT
  - question: "Has an anomalous sequence of controller state changes occurred, such as a state change from an unknown source?"
    context: "This question moves beyond individual events to analyze the entire sequence of operations. Legitimate engineering tasks follow a predictable pattern (e.g., STOP -> DOWNLOAD -> RUN from an authorized EWS). A Hidden Markov Model can learn these valid sequences. An alert from this model would indicate a deviation from the learned grammar of operations, such as a controller being stopped by an unknown source, which could signal a reconnaissance or disruptive attack."
    answer_sources:
      - "Zeek s7comm.log, Zeek enip.log, Zeek dnp3.log, Zeek conn.log"
      - "Network interfaces of critical PLCs/Controllers (Level 1/2), Process Control Network (Purdue Level 2/3) monitoring points, network choke points between Level 3 and Level 2, and logs from change management systems."
    range: "last 90 days"
    queries:
      - technology: Machine Learning/Sequence Analysis
        query: |
          OBSERVE sequence of (controller_IP, controller_state, source_category)
          INPUT sequence into trained HMM
          CALCULATE probability of observed sequence
          IF probability < threshold
          THEN ALERT
  - question: "Has an unauthorized modification, deletion, or transfer of a critical ICS project file occurred?"
    context: "This question focuses on the integrity of the project files themselves, which contain the controller logic. By monitoring these files for any changes on Engineering Workstations and tracking their transfer across the network, we can detect tampering at the source. Comparing file hashes against a 'golden' baseline and threat intelligence provides a high-fidelity method for identifying both unauthorized changes and known-malicious files."
    answer_sources:
      - "Zeek files.log, Windows Event ID 11 (Sysmon), Windows Event ID 23 (Sysmon), Windows Event ID 4663, Windows Event ID 1 (Sysmon)"
      - "File systems of Engineering Workstations (EWS) (Level 3), version control systems for ICS projects, centralized log servers, network file transfer inspection points (Level 3), and dedicated ICS integrity monitoring platforms."
    range: "last 90 days"
    queries:
      - technology: FIM/SIEM
        query: |
          MONITOR project file directories for write/delete events (Sysmon 11, 23)
          ON file write or network transfer (files.log)
            CALCULATE file hash
            COMPARE hash to golden_baseline_hashes AND malicious_hashes_feed
            IF hash NOT IN golden_baseline OR hash IN malicious_hashes
            THEN ALERT
  - question: "Has an ICS project file with anomalous entropy been transferred over the network?"
    context: "Shannon entropy measures the randomness or complexity of a file's content. Legitimate project files have a predictable range of entropy. An unusually high entropy score can indicate that the file is encrypted or packed, a common obfuscation technique used by adversaries. Conversely, unusually low entropy might suggest padding or data destruction. This question helps flag files that have been structurally altered in a way that suggests tampering."
    answer_sources:
      - "Zeek files.log, Windows Event ID 11 (Sysmon), Windows Event ID 23 (Sysmon), Windows Event ID 4663, Windows Event ID 1 (Sysmon)"
      - "File systems of Engineering Workstations (EWS) (Level 3), version control systems for ICS projects, centralized log servers, network file transfer inspection points (Level 3), and dedicated ICS integrity monitoring platforms."
    range: "last 90 days"
    queries:
      - technology: Data Analytics/Scripting
        query: |
          ON project file transfer (files.log)
            CALCULATE shannon_entropy of file content
            RETRIEVE baseline entropy range for file_extension
            IF shannon_entropy IS OUTSIDE baseline_range
            THEN ALERT
  - question: "Does a machine learning model classify a recent project file modification as 'unauthorized' based on contextual features?"
    context: "This question uses a supervised machine learning model to make a holistic judgment about a file modification event. By combining multiple data points—such as the process that made the change, the user account involved, time of day, file entropy, and network source—the model can learn the complex patterns that differentiate legitimate engineering work from malicious activity. This provides a powerful, context-aware detection capability."
    answer_sources:
      - "Zeek files.log, Windows Event ID 11 (Sysmon), Windows Event ID 23 (Sysmon), Windows Event ID 4663, Windows Event ID 1 (Sysmon)"
      - "File systems of Engineering Workstations (EWS) (Level 3), version control systems for ICS projects, centralized log servers, network file transfer inspection points (Level 3), and dedicated ICS integrity monitoring platforms."
    range: "last 90 days"
    queries:
      - technology: Machine Learning/SIEM
        query: |
          ON file modification/transfer
            GATHER features (parent_process, user_account, time_of_day, entropy, source_ip_auth, in_maintenance_window)
            INPUT features into trained Random Forest model
            IF model_prediction == 'unauthorized' AND confidence > 0.95
            THEN ALERT