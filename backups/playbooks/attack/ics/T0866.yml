name: T0866: Exploitation of Remote Services
id: 4d5e6f7a-8b9c-4d1e-a2f3-4b5c6d7e8f9a
description: This playbook helps investigate whether an adversary is exploiting remote services to gain initial access into the ICS environment or to move laterally within it. The investigation focuses on identifying several key indicators. For initial access, it looks for inbound network connections from untrusted IT networks to critical OT assets that violate whitelists, target vulnerable services, exhibit protocol anomalies, or contain high-entropy payloads. It also seeks to confirm successful exploitation by correlating these suspicious connections with subsequent application crashes or unexpected service terminations on the target OT asset. For lateral movement, the playbook searches for an OT host initiating an anomalous number of outbound connections to other OT assets, indicative of scanning or spreading. It also detects when a critical OT application process spawns an unauthorized child process, such as a command shell, immediately following a network connection from another internal OT host, suggesting post-exploitation activity.
type: technique
related:
- TA0108: Initial Access
- TA0109: Lateral Movement
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there inbound network connections from IT networks to OT assets on remote service ports that violate the established communication whitelist and correlate with known exploit signatures?
  context: This question aims to detect unauthorized communication from the less-secure IT network to the critical OT network, a common vector for initial access. By checking connections against a pre-defined whitelist of allowed IT/OT communications and correlating violations with security notices (like exploit attempts or port scans) within a short time window, analysts can identify high-confidence intrusion attempts targeting remote services.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek smb.log
  - Zeek rdp.log
  - Zeek dnp3.log
  - Zeek modbus.log
  - Windows Event ID 5156
  - Industrial Demilitarized Zone (IDMZ) network segments, firewalls at the IT/OT boundary, remote access gateways for OT, historian servers with external interfaces, and network switches/routers connecting IT and OT zones.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH NetworkLogs
      WHERE source_ip IN IT_Ranges AND dest_ip IN OT_Ranges
      AND dest_port IN [445, 3389, 5900, 502, 20000]
      AND {source_ip, dest_ip, dest_port} NOT IN Whitelist
      CORRELATE WITH SecurityNotices (e.g., Zeek notice.log)
      WHERE notice_source_ip = source_ip AND notice_dest_ip = dest_ip
      AND time_difference < 5_minutes
      ALERT on match
- question: For approved IT-to-OT communication channels, are there any connections exhibiting anomalous payload entropy, connection counts, or data volumes compared to their historical baselines?
  context: This question focuses on detecting abuse of legitimate communication channels. Even if a connection is allowed by a whitelist, an adversary might use it to deliver an exploit. By baselining normal behavior (payload entropy, connection frequency, data volume) for each specific channel, we can flag statistical deviations that suggest malicious activity, such as an exploit payload with unusually high entropy or a data transfer spike.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek smb.log
  - Zeek rdp.log
  - Zeek dnp3.log
  - Zeek modbus.log
  - Windows Event ID 5156
  - Industrial Demilitarized Zone (IDMZ) network segments, firewalls at the IT/OT boundary, remote access gateways for OT, historian servers with external interfaces, and network switches/routers connecting IT and OT zones.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR EACH approved_channel IN Whitelist
        CALCULATE baseline (95th_percentile_entropy, mean_hourly_count, mean_hourly_bytes) over 30 days
      SEARCH NetworkLogs for new_connection in approved_channel
      ALERT IF connection_payload_entropy > baseline.95th_percentile_entropy
      OR hourly_connection_count > 3_std_dev_from_mean
      OR hourly_byte_volume > 3_std_dev_from_mean
- question: Are there statistically significant anomalies in the aggregated IT-to-OT network traffic patterns that could indicate a coordinated scan or widespread exploit attempt?
  context: This question provides a high-level view to detect large-scale or novel attacks that might not be caught by per-connection rules. By applying a time-series anomaly detection model to aggregated traffic features (like connection volume, protocol mix, average entropy), we can identify systemic shifts in communication patterns. An alert from this model suggests a broad event, such as a network scan or a multi-host exploit campaign, is underway.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - Zeek smb.log
  - Zeek rdp.log
  - Zeek dnp3.log
  - Zeek modbus.log
  - Windows Event ID 5156
  - Industrial Demilitarized Zone (IDMZ) network segments, firewalls at the IT/OT boundary, remote access gateways for OT, historian servers with external interfaces, and network switches/routers connecting IT and OT zones.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      AGGREGATE NetworkLogs into 5-minute time-series buckets
      FEATURES = [total_connections, unique_src_dest_pairs, protocol_distribution, avg_payload_entropy]
      TRAIN anomaly_detection_model (e.g., Isolation Forest) on 30 days of historical data
      APPLY model to real-time data
      ALERT IF model flags any 5-minute interval as anomalous
- question: Have any critical OT services crashed or terminated unexpectedly within 60 seconds of receiving a network connection from an IT network?
  context: This question seeks to find direct evidence of a successful remote service exploitation. An application crash (Event ID 1000) or unexpected service termination (Event IDs 7031, 7034) occurring immediately after a network connection from an untrusted source is a strong indicator that the connection delivered a payload which caused a buffer overflow or other fatal error.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 7034
  - Windows Event ID 7031
  - Zeek conn.log
  - Windows Event ID 5156
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and critical Windows-based control system assets in the Process Control Network (PCN) or Supervisory Control Network (SCN).
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH HostLogs FOR crash_event (EventID 1000, 7034, 7031) on critical_OT_asset
      SEARCH NetworkLogs FOR connection_event
      WHERE connection_event.dest_ip = crash_event.host
      AND connection_event.source_ip IN IT_Ranges
      AND connection_event.dest_port = crashed_service_port
      AND (crash_event.timestamp - connection_event.timestamp) BETWEEN 0 and 60 seconds
      ALERT on match
- question: Are there hourly spikes in application or service crashes on critical OT assets that exceed historical norms?
  context: This question aims to detect exploit attempts through statistical anomaly detection at the host level. A sudden increase in the number of crashes for a specific service, when compared to its 30-day baseline, can indicate a brute-force or repeated exploitation attempt against a vulnerable service, even if the initial network connection is missed. Prioritizing alerts that correlate with increased IT-to-OT traffic enhances detection accuracy.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 7034
  - Windows Event ID 7031
  - Zeek conn.log
  - Windows Event ID 5156
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and critical Windows-based control system assets in the Process Control Network (PCN) or Supervisory Control Network (SCN).
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR EACH critical_service ON OT_assets
        CALCULATE baseline (99th_percentile_hourly_crashes, mean_hourly_crashes) over 30 days
      SEARCH HostLogs for crash_events (EventID 1000, 7034, 7031)
      COUNT crashes per hour per service
      ALERT IF hourly_crash_count > baseline.99th_percentile OR > 3_std_dev_from_mean
- question: Can we classify service crashes on OT assets as being potentially exploit-induced based on host and network features?
  context: This question proposes a machine learning approach to increase the fidelity of crash analysis. By training a model on features from both the crash event (e.g., exception code, faulting module) and the preceding network connection (e.g., connection duration, bytes transferred, source IP reputation), the system can learn to distinguish between benign software failures and those caused by malicious network payloads, helping analysts focus on the most suspicious events.
  answer_sources:
  - Windows Event ID 1000
  - Windows Event ID 7034
  - Windows Event ID 7031
  - Zeek conn.log
  - Windows Event ID 5156
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and critical Windows-based control system assets in the Process Control Network (PCN) or Supervisory Control Network (SCN).
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR EACH crash_event
        EXTRACT host_features (ExceptionCode, FaultingModuleName)
        FIND corresponding network_connection
        EXTRACT network_features (duration, bytes, source_asn)
      TRAIN classification_model (e.g., Random Forest) on labeled historical data
      APPLY model to new crash events
      ALERT IF model classifies crash as "exploit-induced"
- question: Is any single OT host connecting to an abnormally large number of other OT hosts on remote service or ICS ports?
  context: This question aims to detect lateral movement behavior, such as scanning or worm-like propagation, within the OT network. An adversary who has compromised one host will often scan the local network to find other vulnerable systems. By setting a threshold for unique outbound connections within a short time window (e.g., >10 hosts in 5 minutes) or alerting on connections to designated honeypots, we can quickly identify a compromised host that is being used as a beachhead for further intrusion.
  answer_sources:
  - Zeek conn.log
  - Zeek smb.log
  - Zeek rdp.log
  - Zeek dce_rpc.log
  - Windows Event ID 4624
  - Supervisory Control Network (SCN), Process Control Network (PCN), individual device networks (e.g., for PLCs, RTUs, IEDs), internal OT firewalls, and network switches/routers within the OT environment.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH NetworkLogs where source_ip IN OT_Ranges AND dest_ip IN OT_Ranges
      AND dest_port IN [445, 3389, 5900, 502, 20000]
      GROUP BY source_ip over 5-minute window
      COUNT unique dest_ip
      ALERT IF unique_dest_count > 10 OR dest_ip IN OT_Honey_Hosts
- question: Is any OT host exhibiting fan-out connection behavior that is anomalous for that specific asset?
  context: This question refines the previous one by using host-specific baselines, which reduces false positives. Some OT assets, like a central historian, may normally connect to many other hosts, while an HMI may only connect to a few. By establishing a historical baseline of normal "fan-out" behavior for each host, we can detect when a specific asset starts connecting to a number of unique destinations that exceeds its own 99th percentile, providing a more accurate signal of anomalous lateral movement.
  answer_sources:
  - Zeek conn.log
  - Zeek smb.log
  - Zeek rdp.log
  - Zeek dce_rpc.log
  - Windows Event ID 4624
  - Supervisory Control Network (SCN), Process Control Network (PCN), individual device networks (e.g., for PLCs, RTUs, IEDs), internal OT firewalls, and network switches/routers within the OT environment.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR EACH OT_host
        CALCULATE baseline (99th_percentile of unique destinations per 10-min interval) over 30 days
      SEARCH NetworkLogs for outbound connections from OT_host
      COUNT unique destinations in current 10-minute window
      ALERT IF current_count > baseline.99th_percentile
- question: Are there any OT hosts that have suddenly become central communication hubs or are bridging previously separate network zones?
  context: This question uses graph analytics to uncover sophisticated lateral movement. A compromised host used to pivot deeper into a network will see its importance in the communication graph increase. By calculating graph metrics like PageRank, we can spot hosts that suddenly become more central. Similarly, using community detection, we can identify a host that starts acting as a bridge between network segments that do not normally communicate, indicating a potential breach of network segmentation.
  answer_sources:
  - Zeek conn.log
  - Zeek smb.log
  - Zeek rdp.log
  - Zeek dce_rpc.log
  - Windows Event ID 4624
  - Supervisory Control Network (SCN), Process Control Network (PCN), individual device networks (e.g., for PLCs, RTUs, IEDs), internal OT firewalls, and network switches/routers within the OT environment.
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      BUILD communication_graph from NetworkLogs (nodes=hosts, edges=connections)
      CALCULATE PageRank for each node periodically
      ALERT IF node_rank > 2_std_dev_from_moving_average
      -- OR --
      APPLY community_detection_algorithm
      ALERT IF a host starts connecting to a previously separate community
- question: Has a critical OT application spawned an unauthorized child process (like a shell) within two minutes of receiving a network connection from another OT host?
  context: This question looks for post-exploitation behavior on a compromised host. After exploiting a service, an adversary will often spawn a shell (cmd.exe, powershell.exe) or other tool to execute commands. This rule correlates the creation of an anomalous child process with a preceding intra-OT network connection to the parent process, providing a strong signal that the network connection was used to trigger code execution.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and other critical Windows-based control system assets within the Process Control Network (PCN) or Supervisory Control Network (SCN).
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      SEARCH HostProcessLogs for process_creation_event on OT_asset
      WHERE parent_process IN critical_OT_apps_list
      AND child_process NOT IN whitelist_for_parent
      SEARCH NetworkLogs for connection_event
      WHERE connection_event.dest_ip = process_creation_event.host
      AND connection_event.source_ip IN OT_Ranges
      AND (process_creation_event.timestamp - connection_event.timestamp) BETWEEN 0 and 120 seconds
      ALERT on match
- question: Are there any instances of a parent-child process relationship where the command-line arguments are statistical outliers in terms of entropy or length?
  context: This question aims to detect obfuscated command execution, a common technique for evading simple signature-based detection. Adversaries often use Base64 encoding or other methods to hide their commands, which results in high-entropy command-line strings. By baselining the normal length and entropy for known parent-child process pairs, we can flag any execution where the command line is anomalously long or complex, suggesting a hidden payload.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and other critical Windows-based control system assets within the Process Control Network (PCN) or Supervisory Control Network (SCN).
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      FOR EACH parent_child_pair
        CALCULATE baseline (mean_cmd_length, mean_cmd_entropy)
      SEARCH HostProcessLogs for new process creation
      CALCULATE cmd_length, cmd_entropy for new process
      ALERT IF cmd_length > 3_std_dev_from_mean
      OR cmd_entropy > 3_std_dev_from_mean
- question: Are there any sequences of process creation on critical OT assets that deviate from learned normal behavior?
  context: This question uses machine learning to detect anomalous process execution chains. Normal operations on an OT asset often involve predictable sequences of processes. By training a sequence model (like an LSTM autoencoder) on these normal chains, the system can identify any new or unexpected sequence (e.g., an HMI application spawning PowerShell, which then spawns a network utility). Such a deviation is a strong indicator of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek conn.log
  - Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, Historian servers, and other critical Windows-based control system assets within the Process Control Network (PCN) or Supervisory Control Network (SCN).
  range: last 90 days
  queries:
  - technology: Pseudocode
    query: |
      CREATE sequences of process creation events from HostProcessLogs
      TRAIN sequence_model (e.g., LSTM autoencoder) on historical sequences
      APPLY model to real-time process sequences
      ALERT IF model flags a sequence with high reconstruction_error or low_probability