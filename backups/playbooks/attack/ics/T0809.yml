name: T0809: Data Destruction
id: 6e9b8a1c-53d9-4b8c-9b1e-7f4d3a2b1c0d
description: This playbook focuses on detecting adversarial attempts to destroy critical operational data or system files within an Industrial Control System (ICS) environment, a tactic used to inhibit response functions. It covers multiple detection methods, including identifying the execution of known data destruction utilities through command-line analysis, spotting high-volume or statistically anomalous file deletion events, detecting the specific deletion of high-value ICS project files, and monitoring for the transfer of potentially malicious executable files into the OT network.
type: technique
related:
  - TA0107: Inhibit Response Function
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is an adversary executing known data destruction utilities on critical ICS assets?
    context: Adversaries often use commonly available or specialized tools like 'sdelete', 'cipher.exe', or 'wevtutil' to destroy data and cover their tracks. Detecting the execution of these tools via their command-line arguments in process creation events (Windows Event ID 4688) is a direct and high-fidelity method for identifying this specific malicious activity on critical systems. Maintaining a strict whitelist of approved administrative scripts is crucial to minimize false positives.
    answer_sources:
      - Windows Event ID 4688
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Control Servers (PCS)
      - Operator Workstations
    range: The last 90 days
    queries:
      - pseudocode: SEARCH Windows Event ID 4688 ON critical_assets WHERE command_line CONTAINS ('sdelete', 'killdisk', 'cipher.exe /w', 'format', 'wevtutil cl', 'fsutil file setzerodata') AND process_name NOT IN (whitelist)
  - question: Are there any processes being executed on critical ICS assets with unusually long or complex command lines?
    context: To evade detection, adversaries may use obfuscated, encoded, or unusually long command lines to pass malicious payloads or parameters. By establishing a statistical baseline for the normal length and character entropy (a measure of randomness) of command lines for every process on a given host, we can detect significant deviations that may indicate malicious activity, even from unknown or custom tools.
    answer_sources:
      - Windows Event ID 4688
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Control Servers (PCS)
      - Operator Workstations
    range: The last 90 days
    queries:
      - pseudocode: FOR each process on each host, CALCULATE baseline of command_line_length and command_line_entropy. ALERT if new execution > 3 * stdev from baseline.
  - question: Can we detect anomalous process execution on critical ICS assets using machine learning?
    context: Sophisticated adversaries may use novel techniques that bypass simple keyword or statistical checks. This question seeks to identify such threats by using an unsupervised machine learning model (e.g., Isolation Forest). The model learns the patterns of normal process execution based on multiple features (e.g., process name, parent process, user, time of day, command line properties) and can flag any event that deviates significantly from this learned norm as a potential threat, providing a more robust and adaptive detection capability.
    answer_sources:
      - Windows Event ID 4688
      - Engineering Workstations (EWS)
      - Human-Machine Interfaces (HMIs)
      - Data Historians
      - Process Control Servers (PCS)
      - Operator Workstations
    range: The last 90 days
    queries:
      - pseudocode: INPUT Windows Event ID 4688 logs into ML model (e.g., Isolation Forest). FEATURES (NewProcessName, ParentProcessName, SubjectUserName, CommandLine length/entropy, hour of day). ALERT on events classified as outliers.
  - question: Is a user or process rapidly deleting a high volume of files from critical ICS directories?
    context: Mass file deletion is a hallmark of "wiper" malware or a destructive attack. This question aims to detect such activity by monitoring for a burst of file deletion events (Windows Event ID 4663) from a single user or process in a short time window. Focusing on directories known to contain critical ICS project files, configurations, or backups allows for high-priority alerting on potentially catastrophic actions.
    answer_sources:
      - Windows Event ID 4663
      - ICS File Servers
      - Data Historians
      - ICS Backup Servers
      - Engineering Workstations (EWS)
      - Process Control Servers (PCS)
    range: The last 90 days
    queries:
      - pseudocode: SEARCH Windows Event ID 4663 with access='DELETE' in critical_directories. COUNT events by user, process over 60s. ALERT if count > 50 AND user/process NOT IN (whitelist).
  - question: Is any user or process deleting files at a rate that is statistically abnormal compared to their usual behavior?
    context: Instead of relying on a fixed threshold, this approach provides more nuanced detection by establishing a dynamic baseline of normal file deletion activity for each specific user and process. An alert is triggered only when the number of deletions in a given time interval significantly exceeds that entity's personal baseline. This method is effective at detecting more subtle or slower-paced destruction activities and helps reduce false positives from processes that are normally deletion-heavy.
    answer_sources:
      - Windows Event ID 4663
      - ICS File Servers
      - Data Historians
      - ICS Backup Servers
      - Engineering Workstations (EWS)
      - Process Control Servers (PCS)
    range: The last 90 days
    queries:
      - pseudocode: FOR each user and process, CALCULATE baseline of 'DELETE' events per 5min. ALERT if current count > 3 * stdev from baseline.
  - question: Can we use a time-series machine learning model to predict and detect abnormal patterns of file deletion activity on critical assets?
    context: This question addresses the detection of complex deletion patterns that may have seasonality or dependencies that simple statistical methods would miss. A multivariate time-series model (e.g., LSTM autoencoder) learns the normal rhythm and patterns of file deletion activity over time. It can then generate a high-priority alert when the actual volume of deletions significantly deviates from the model's predicted range, indicating a potential anomaly.
    answer_sources:
      - Windows Event ID 4663
      - ICS File Servers
      - Data Historians
      - ICS Backup Servers
      - Engineering Workstations (EWS)
      - Process Control Servers (PCS)
    range: The last 90 days
    queries:
      - pseudocode: INPUT time-series of 'DELETE' event counts (aggregated by 1min) into ML model (e.g., LSTM autoencoder). ALERT if actual count deviates significantly from model's prediction interval.
  - question: Has a critical ICS-specific file (e.g., project file, configuration file) been deleted?
    context: The deletion of a single file with a critical ICS-specific extension (e.g., .ACD for Rockwell, .S7P for Siemens) can be a high-fidelity indicator of a targeted attack, as the loss of such a file could shut down a physical process. This question focuses on creating immediate, critical alerts for any such deletion, which should only be performed by authorized personnel during scheduled maintenance. Any other occurrence is highly suspicious.
    answer_sources:
      - Windows Event ID 4663
      - Engineering Workstations (EWS)
      - File servers hosting ICS project files
      - Data Historians
      - ICS Backup Servers
    range: The last 90 days
    queries:
      - pseudocode: SEARCH Windows Event ID 4663 with access='DELETE' WHERE filename ends with (.ACD, .S7P, .PCV, .ap16, .DSR, .gfx, .PLC) AND (user, process) NOT IN (whitelist).
  - question: Has a critical ICS file been deleted by a user or process that does not normally interact with that file type?
    context: This question adds valuable context to the deletion of critical files by scoring the event's rarity. A deletion is considered highly suspicious and generates an alert if it is performed by a user or process that has no historical precedent for deleting that specific file type. This helps analysts prioritize alerts and focus on unusual activities that are more likely to be unauthorized and malicious.
    answer_sources:
      - Windows Event ID 4663
      - Engineering Workstations (EWS)
      - File servers hosting ICS project files
      - Data Historians
      - ICS Backup Servers
    range: The last 90 days
    queries:
      - pseudocode: FOR each deletion of critical file type, CALCULATE rarity score based on historical frequency of (user, file_extension) pair. ALERT on high rarity score.
  - question: Can a machine learning model be trained to distinguish between legitimate and malicious deletions of critical ICS files?
    context: To improve accuracy and reduce analyst workload, this question proposes a supervised machine learning approach. By training a model (e.g., Random Forest) on historical data labeled as 'legitimate' or 'malicious', the system can learn the subtle characteristics of each class. New deletion events are then classified in real-time, providing a confidence score that helps analysts quickly identify and respond to malicious actions with a high degree of certainty.
    answer_sources:
      - Windows Event ID 4663
      - Engineering Workstations (EWS)
      - File servers hosting ICS project files
      - Data Historians
      - ICS Backup Servers
    range: The last 90 days
    queries:
      - pseudocode: INPUT deletion event features (user, process, file_ext, source, time, rarity_score) into ML model (e.g., Random Forest). ALERT on 'malicious' classification with confidence > 0.9.
  - question: Has a new executable file been transferred into the OT network from an untrusted source or over a non-standard port?
    context: Adversaries often need to introduce their destructive tools into the target environment. This question focuses on detecting the initial ingress of these tools by monitoring network data (e.g., Zeek logs) for executable files ('application/x-dosexec') being transferred into the OT network. Correlating this with threat intelligence (file hashes) and connection data (non-standard ports) can identify the introduction of a known malicious tool.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek pe.log
      - Network boundary between IT and OT networks (ICS DMZ)
      - Core ICS network segments
      - SCADA network
      - Process Control Network (PCN)
    range: The last 90 days
    queries:
      - pseudocode: SEARCH Zeek logs for file transfers into OT network with mime_type='application/x-dosexec'. CHECK hash against threat intel. CHECK connection port. ALERT on match.
  - question: Does an executable file transferred into the OT network have characteristics of being packed, obfuscated, or otherwise anomalous?
    context: Malicious executables are frequently packed or obfuscated to evade signature-based antivirus, which often results in high file entropy (randomness). This question focuses on identifying these suspicious files by calculating their entropy and comparing it to a baseline of legitimate ICS software. Additionally, analyzing the file's PE header for structural anomalies can provide further evidence that the file is not a standard, trusted executable.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek pe.log
      - Network boundary between IT and OT networks (ICS DMZ)
      - Core ICS network segments
      - SCADA network
      - Process Control Network (PCN)
    range: The last 90 days
    queries:
      - pseudocode: FOR each new executable in OT, CALCULATE file entropy and analyze PE header. ALERT if entropy > 7.5 OR if values deviate from baseline of legitimate software.
  - question: Can a machine learning model automatically classify file transfers into the OT network as 'legitimate' or 'malicious'?
    context: This question proposes using a supervised machine learning model to automate the detection of malicious file transfers. By training a model on a rich set of features derived from network logs (e.g., file size, entropy, PE headers, connection details, IP reputation), the system can learn to distinguish malicious transfers from benign ones with high accuracy. This provides analysts with actionable alerts and the supporting evidence needed for a quick response.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek pe.log
      - Network boundary between IT and OT networks (ICS DMZ)
      - Core ICS network segments
      - SCADA network
      - Process Control Network (PCN)
    range: The last 90 days
    queries:
      - pseudocode: INPUT file transfer features (file_size, entropy, PE_headers, connection_details, IP_rep) into ML model (e.g., LightGBM). ALERT on 'malicious' classification with confidence > 0.9.