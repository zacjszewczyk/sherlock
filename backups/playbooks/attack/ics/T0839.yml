name: T0839: Module Firmware
id: a4d2c8b1-3e4f-4a5b-8c6d-7e8f9a0b1c2d
description: This playbook helps investigate whether an adversary is establishing persistence or impairing process control on control system devices by modifying module firmware. This involves detecting unauthorized firmware transfers from non-approved sources or outside maintenance windows, identifying transfers of anomalous size or frequency, and spotting post-transfer indicators of compromise such as device instability, execution of update utilities on unauthorized hosts, or new, unexpected network communication patterns (e.g., C2 beaconing) from the affected device.
type: technique
related:
  - TA0110: Persistence
  - TA0106: Impair Process Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a firmware file transfer to a critical ICS asset occurred from an unauthorized source or outside a scheduled maintenance window?
    context: This question aims to detect the primary indicator of unauthorized firmware modification. Adversaries may attempt to push malicious firmware from a compromised machine that is not an authorized Engineering Workstation (EWS). By cross-referencing network traffic logs against whitelists of approved EWS IPs and scheduled maintenance windows, analysts can quickly identify suspicious transfer activity that warrants immediate investigation. The focus is on common firmware transfer protocols (TFTP, FTP, SCP) and typical firmware file types (.bin, .fw, .hex).
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek ftp.log
      - Zeek ssh.log
      - Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Zeek conn.log AND files.log
          WHERE conn.log.service IN ('tftp', 'ftp', 'ssh')
          AND conn.log.destination_ip IN critical_ics_assets
          AND (conn.log.source_ip NOT IN ews_whitelist OR conn.log.timestamp NOT IN maintenance_windows)
          AND files.log.filename_extension IN ('.bin', '.fw', '.hex')
          CORRELATE conn.log.uid WITH files.log.conn_uids
  - question: Is a detected firmware file transfer anomalous in size or frequency compared to historical baselines?
    context: Beyond just detecting a transfer, this question seeks to identify if the nature of the transfer is abnormal. Adversaries may use firmware that is significantly larger or smaller than legitimate versions, or they may make multiple update attempts. By establishing a statistical baseline (mean and standard deviation) for legitimate firmware file sizes and the frequency of updates per device, analysts can use Z-score calculations and rolling counts to flag transfers that are statistical outliers, suggesting malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek ftp.log
      - Zeek ssh.log
      - Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each detected firmware transfer:
            CALCULATE Z-score of file_bytes against historical_baseline_for_device_model
            CALCULATE 7-day rolling count of transfers for the device
            ALERT if Z-score > 3.0 OR rolling_count > 99th_percentile_of_historical_counts
  - question: Does network activity related to firmware updates deviate from normal patterns as identified by a time-series anomaly detection model?
    context: This question applies machine learning to detect subtle deviations in network behavior that might indicate a sophisticated attack. A time-series model, such as an LSTM autoencoder, can learn the normal rhythm of firmware-related activities (e.g., connection counts, data volumes, source IP diversity on specific ports). When real-time traffic patterns differ significantly from what the model learned as 'normal', it generates a high reconstruction error, signaling a potential anomaly that could be an early indicator of an attack.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Zeek ftp.log
      - Zeek ssh.log
      - Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN LSTM autoencoder on historical data (hourly connection counts, total bytes, unique source IPs on ports 21, 22, 69).
          APPLY trained model to real-time traffic data.
          CALCULATE reconstruction error.
          ALERT if reconstruction_error > 99th_percentile_of_training_errors.
  - question: Did a critical ICS asset stop its expected network communication shortly after a suspected unauthorized firmware transfer?
    context: A common outcome of a malicious or failed firmware update is device instability, which can manifest as a reboot, hang, or complete failure ('bricking'). This question aims to detect this by correlating a firmware-related alert with a subsequent loss of communication from the target device. By monitoring for the absence of expected heartbeat traffic (e.g., Modbus polls) within a defined window (e.g., 15 minutes) after a suspected update, analysts can quickly identify and respond to a potential device compromise or impairment.
    answer_sources:
      - Zeek conn.log
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek cip.log
      - Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE expected heartbeat interval for each critical asset.
          TRIGGER 'timeout_event' if no traffic is seen from asset for > 3 * interval.
          SEARCH for 'firmware_alert' for same asset IP in last 15 minutes.
          ESCALATE if 'timeout_event' AND 'firmware_alert' are found.
  - question: Has a critical ICS asset shown a sudden drop in traffic volume or an unusually long connection duration following a firmware update?
    context: This question provides another method for detecting post-update device instability. A sudden, statistically significant drop in a device's network traffic can indicate a crash or hang. Similarly, a network connection that remains open for an abnormally long time can signify a frozen process. By baselining normal traffic volume and connection durations, analysts can create alerts that trigger when these metrics deviate significantly from the norm, providing another signal of a potential issue.
    answer_sources:
      - Zeek conn.log
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek cip.log
      - Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE mean and stddev of 1-min traffic volume for each asset.
          BASELINE 95th percentile of connection duration for each asset.
          ALERT if current_1_min_volume < (mean - 3 * stddev).
          ALERT if new_connection_duration > 95th_percentile_baseline.
  - question: Has a machine learning model classified a device's network behavior as 'failed' or 'rebooting' immediately after a firmware transfer event?
    context: This question uses a more advanced, model-driven approach to identify device instability. A supervised model (like a Random Forest) can be trained on labeled historical data to recognize network patterns that precede known failures. Alternatively, an unsupervised model (like a Hidden Markov Model) can learn to infer a device's operational state ('normal', 'rebooting', 'failed') from its network traffic patterns alone. Alerting when the model detects a transition to an unstable state right after a firmware event provides a high-fidelity signal of a problem.
    answer_sources:
      - Zeek conn.log
      - Zeek dnp3.log
      - Zeek modbus.log
      - Zeek cip.log
      - Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN HMM or Random Forest on historical conn.log features (duration, bytes, conn_state).
          APPLY model to real-time traffic to classify device state.
          ALERT if model state transitions to 'failed' or 'rebooting' immediately after a firmware_transfer_event.
  - question: Was a known ICS firmware update utility executed on an unauthorized host or targeted at an unauthorized device?
    context: Firmware updates are typically performed using specific vendor utilities from designated Engineering Workstations (EWS). This question looks for abuse of these legitimate tools. By monitoring for the execution of firmware utilities (e.g., RSLogixFlash.exe) on hosts that are not on an approved EWS whitelist, or by parsing the command line of a legitimate execution to see if it targets an unauthorized device, analysts can detect attempts to misuse trusted tools for malicious purposes.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH Windows Event ID 4688 logs.
          WHERE NewProcessName IN firmware_utility_list.
          ALERT if Computer NOT IN ews_hostname_whitelist.
          PARSE CommandLine for target_ip.
          ALERT if target_ip is not managed by the source EWS.
  - question: Is the execution of a firmware update utility anomalous in terms of the user account or command-line structure?
    context: This question aims to find behavioral anomalies in the use of legitimate firmware tools. An attacker who has compromised an EWS might use a user account that doesn't typically perform updates, or they might use unusually complex or obfuscated command-line arguments. By baselining which users run which tools and the typical complexity (Shannon entropy) of the command lines they use, analysts can flag executions that deviate from established user and command patterns.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE historical execution count of each utility per user.
          BASELINE mean and stddev of CommandLine entropy for each utility.
          ALERT if utility is executed by a user with zero historical executions.
          ALERT if CommandLine entropy deviates > 2 stddev from the mean.
  - question: Has an anomaly detection model (e.g., Isolation Forest) flagged the execution of a firmware update utility as highly unusual?
    context: This question applies unsupervised machine learning to find outlier process executions that may not be caught by simple rule-based checks. An Isolation Forest model can learn the characteristics of normal firmware utility executions by analyzing features like the process name, parent process, user, host, and command-line arguments. It can then score new executions based on how much they differ from this learned profile, effectively flagging novel or highly suspicious activity that warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN Isolation Forest model on historical Event ID 4688 features (ProcessName, ParentProcessName, User, Host, tokenized CommandLine).
          SCORE real-time executions of firmware utilities.
          ALERT if anomaly score is in the top 1% (highly anomalous).
  - question: Following a firmware modification, did the ICS device initiate or receive network connections that violate its established 90-day communication whitelist?
    context: Malicious firmware may contain new, unauthorized functionality, such as a C2 channel or code for lateral movement. This question aims to detect the network traffic generated by such functionality. By creating a strict baseline (whitelist) of all normal, expected network 5-tuples (source/destination IPs, destination port, protocol, service) for each critical asset, any new connection to or from that device that doesn't match the whitelist is an immediate and high-fidelity indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek x509.log
      - PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          GENERATE 90-day 5-tuple whitelist for each critical asset from Zeek conn.log.
          MONITOR new connections to/from each asset.
          ALERT if the connection's 5-tuple is NOT IN the asset's whitelist.
  - question: Is the ICS device communicating on an unusually high number of new ports or experiencing a spike in connection failures after a firmware update?
    context: This question looks for secondary network indicators of compromise after a firmware update. Malicious firmware might cause a device to scan its network segment (resulting in connections to many new ports) or attempt to establish a C2 channel (which might lead to a high rate of failed connections if the C2 server is unreachable). By baselining the rate of 'new' port communication and the ratio of failed-to-successful connections, analysts can detect these subtle but important behavioral shifts.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek x509.log
      - PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          BASELINE 99th percentile of 'new port count' per hour for each asset.
          BASELINE mean and stddev of failed/successful connection ratio.
          ALERT if new_port_count > baseline.
          ALERT if connection_ratio_spike > 3 stddev above mean.
  - question: Has a graph-based neural network detected a significant change in the device's communication patterns following a firmware update?
    context: This question represents a sophisticated, context-aware approach to detecting behavioral changes. The entire PCN can be modeled as a communication graph. A graph neural network (e.g., GraphSAGE) can learn what 'normal' communication looks like for each device within the context of its neighbors. If a device with modified firmware begins communicating in a way that is abnormal for its place in the network graph (e.g., a PLC trying to connect to the internet), the model will flag this as a high-scoring anomaly, indicating a fundamental shift in behavior.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek x509.log
      - PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).
    range: The last 90 days
    queries:
      - technology: pseudocode
        query: |
          BUILD communication graph from historical Zeek conn.log data.
          TRAIN GraphSAGE model to learn node embeddings representing normal communication.
          SCORE new connections based on their impact on the graph structure/embeddings.
          ALERT if a connection from a PLC results in an anomaly score above a defined threshold.