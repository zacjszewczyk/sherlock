name: T0845: Program Upload
id: 2e4a8f1b-3c7d-4e9a-b8f2-1c5d6e7f8a9b
description: This playbook helps identify if an adversary is attempting to upload PLC logic for reconnaissance or analysis. This is often done by observing network traffic for anomalously large data transfers from a PLC, monitoring for the unauthorized execution of engineering software on workstations followed by network connections to PLCs, or detecting anomalous user logons to an Engineering Workstation (EWS) that are immediately followed by activity consistent with a program upload.
type: technique
related:
- TA0100: Collection
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a PLC program upload command being sent to an unauthorized device or outside of a maintenance window?
  context: This question aims to detect explicit program upload commands within industrial control protocols. Identifying these commands and correlating them with the destination device and time of occurrence provides a high-fidelity method for detecting potential intellectual property theft or reconnaissance. An upload to a non-engineering workstation or outside a planned maintenance window is highly suspicious.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek enip.log
  - Network taps or SPAN ports on Process Control Network (PCN) switches, specifically monitoring traffic between Purdue Model Level 1 (Control Devices) and Level 2 (Supervisory Control).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH ICS protocol logs (s7comm, enip)
      FOR function_code IN ['S7comm Upload', 'ENIP Get_Attribute_All on Logic object']
      WHERE destination_ip NOT IN (approved_ews_whitelist)
      OR event_time NOT IN (maintenance_windows)
      RETURN high_priority_alert
- question: Has an anomalously large amount of data been transferred from a PLC to a client, suggesting a program upload?
  context: This question focuses on identifying program uploads through volumetric analysis of network traffic. Since PLC programs can be large, an upload results in a significantly larger than normal data transfer from the PLC to the client. By establishing a baseline of normal traffic volume, analysts can spot deviations that indicate a potential program exfiltration, even without deep packet inspection of the protocol.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek enip.log
  - Network taps or SPAN ports on Process Control Network (PCN) switches, specifically monitoring traffic between Purdue Model Level 1 (Control Devices) and Level 2 (Supervisory Control).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each PLC_IP:
        CALCULATE 30-day baseline (mean, std_dev, 99th_percentile) of 'resp_bytes' from conn.log
      SEARCH conn.log for connections FROM PLC_IP on programming_ports
      WHERE aggregated 'resp_bytes' in a 5-min interval > (baseline_mean + 3 * baseline_std_dev) OR > 99th_percentile
      RETURN alert
- question: Does the network traffic pattern from a PLC exhibit anomalous behavior indicative of a program upload?
  context: This question utilizes an unsupervised machine learning model to detect subtle deviations in a PLC's network behavior. By modeling multiple features simultaneously (e.g., bytes sent, bytes received, connection count), the model can identify complex patterns of anomalous activity that might be missed by simple statistical thresholds. This is effective for detecting sophisticated adversaries attempting to blend in with normal traffic.
  answer_sources:
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek enip.log
  - Network taps or SPAN ports on Process Control Network (PCN) switches, specifically monitoring traffic between Purdue Model Level 1 (Control Devices) and Level 2 (Supervisory Control).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      APPLY trained anomaly detection model (e.g., Autoencoder) to 5-minute windows of network flow features for each PLC
      IF reconstruction_error > dynamic_threshold:
        RETURN anomaly_alert
- question: Was an ICS engineering application launched by an unusual or unauthorized parent process?
  context: This question seeks to identify when legitimate engineering software is initiated by a non-standard process, such as a command shell (cmd.exe, powershell.exe) or a remote administration tool. Normal user interaction involves launching these applications from the desktop or start menu, which corresponds to 'explorer.exe' as the parent process. A different parent process is a strong indicator that the software is being used programmatically as part of an attack chain.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Endpoint Detection and Response (EDR) agents or host-based logging on Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) located at Purdue Model Level 2.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH process creation events (WinEvent 4688)
      WHERE process_name IN (ics_engineering_apps_list)
      AND parent_process_name NOT IN ('explorer.exe', approved_parent_list)
      RETURN high_priority_alert
- question: Was an ICS engineering application executed with an unusually complex command line, possibly indicating scripting or obfuscation?
  context: This question aims to detect the use of automation or obfuscation by analyzing the command-line arguments used to launch engineering software. Legitimate user-driven executions typically have simple or no command-line arguments. In contrast, scripted attacks often involve long, complex, or high-entropy (random-looking) arguments. Measuring the Shannon entropy of the command line can effectively surface these outliers.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Endpoint Detection and Response (EDR) agents or host-based logging on Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) located at Purdue Model Level 2.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each engineering_app:
        CALCULATE 30-day baseline of command_line_entropy from process creation events (WinEvent 4688)
      SEARCH new process creation events
      WHERE new_command_line_entropy > 98th_percentile_of_baseline
      RETURN alert
- question: Does the execution of an ICS engineering application match the profile of an anomalous or malicious activity based on a machine learning model?
  context: This question leverages a supervised machine learning model to provide a sophisticated classification of process execution events. By training the model on labeled data, it can learn the nuanced characteristics of both legitimate and malicious executions, considering factors like parent process, user account, and command-line features. This provides a more robust detection capability than single-rule-based methods.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Endpoint Detection and Response (EDR) agents or host-based logging on Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) located at Purdue Model Level 2.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each new process creation event (WinEvent 4688) of an engineering app:
        EXTRACT features (ProcessName, ParentProcessName, CommandLineEntropy, UserAccount)
        APPLY trained classification model (e.g., Random Forest)
        IF prediction == 'Anomalous-Execution':
          RETURN alert
- question: Did a remote logon from an untrusted network to an Engineering Workstation precede a connection to a PLC?
  context: This question helps to connect suspicious access with potentially malicious action by correlating two distinct events. A remote logon to a critical asset like an EWS from an unknown or unapproved IP address is a significant security event. By immediately checking for subsequent network connections from that EWS to a PLC, an analyst can quickly determine if the suspicious access was a precursor to interaction with control systems.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek enip.log
  - Active Directory domain controllers, EDR agents on Engineering Workstations (EWS), and network sensors monitoring traffic between the EWS and PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      SEARCH successful logon events (WinEvent 4624) on EWS
      WHERE logon_type == 'Remote' (e.g., 10)
      AND source_ip NOT IN (whitelisted_management_subnets)
      WITHIN 10 minutes of logon, SEARCH network logs (Zeek)
      FOR connection FROM EWS_ip TO PLC_ip ON ICS_port
      IF found, RETURN high_priority_alert
- question: Has a user logon to an Engineering Workstation occurred with multiple anomalous characteristics (e.g., unusual time, source location, logon type)?
  context: This question uses a risk-scoring approach to identify suspicious logons by combining multiple weak indicators into a stronger signal. A single anomaly, like an off-hours logon, might be a false positive. However, a logon that is off-hours, from a new IP address, and uses a different logon type than usual is much more likely to be malicious. This method reduces noise while increasing detection confidence.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek enip.log
  - Active Directory domain controllers, EDR agents on Engineering Workstations (EWS), and network sensors monitoring traffic between the EWS and PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each user on EWS:
        PROFILE baseline logon behavior (hours, subnets, types) over 30 days
      FOR each new logon event (WinEvent 4624):
        CALCULATE risk_score (e.g., +1 for off-hours, +2 for new subnet)
        IF risk_score > threshold (e.g., 3):
          RETURN medium_priority_alert
- question: Does a user's entire session, including logon and subsequent network activity, deviate significantly from their established behavioral baseline?
  context: This question applies User and Entity Behavior Analytics (UEBA) to create a comprehensive profile of normal user sessions on an EWS, from logon to logout. The model learns a user's typical logon patterns and their subsequent network interactions (e.g., which PLCs they connect to, how much data they transfer). This allows it to detect when a compromised account is used by an attacker whose behavior subtly but consistently deviates from the legitimate user's norm.
  answer_sources:
  - Windows Event ID 4624
  - Zeek conn.log
  - Zeek s7comm.log
  - Zeek enip.log
  - Active Directory domain controllers, EDR agents on Engineering Workstations (EWS), and network sensors monitoring traffic between the EWS and PLCs.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |-
      FOR each user session (logon event + subsequent network activity):
        EXTRACT features (user, source_ip, time, logon_type, dest_ip, dest_port, bytes_transferred)
        APPLY trained UEBA model (e.g., Isolation Forest)
        IF anomaly_score > threshold (e.g., top 1%):
          RETURN high_priority_alert