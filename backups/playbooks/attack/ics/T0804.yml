name: T0804: Block Reporting Message
id: 5e9f8f0c-9a8b-4c7d-8e3f-1a2b3c4d5e6f
description: This playbook helps investigate if an adversary is inhibiting our response
  function by blocking critical reporting messages. This can be achieved through several
  methods, such as unexpectedly terminating critical ICS application processes, which
  correlates with a drop in ICS protocol traffic. Another method involves adding
  or modifying host-based firewall rules to block essential ICS protocol ports, leading
  to an absence of traffic. Finally, an adversary might cause a denial-of-service
  condition through a surge in network traffic directed at a critical ICS endpoint,
  resulting in a high volume of failed connections and a drop in legitimate communications.
type: technique
related:
- TA0107: Inhibit Response Function
contributors: Zachary Szewczyk, Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Has a critical ICS application process been terminated by a suspicious
    parent process like an interactive shell or remote administration tool outside
    of a maintenance window?
  context: This question is crucial for identifying direct, malicious intervention.
    An adversary gaining interactive access (e.g., via cmd.exe or PowerShell) and
    terminating a vital process like an OPC server or HMI application is a strong
    indicator of an attempt to disrupt operations or blind operators. Correlating
    this with maintenance schedules helps filter out false positives from legitimate
    administrative actions.
  answer_sources:
  - Windows Event ID 4689
  - Windows Event ID 4688
  - Zeek conn.log
  - 'NAI: Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Historian
    Servers, OPC Servers within the Process Control Network (PCN) segments.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FIND process exit events (EID 4689) for critical_app_list
      FOR each event
        GET parent process creation event (EID 4688) within last 30s
        IF parent_process in suspicious_shell_list AND NOT in maintenance_window
          ALERT
- question: Following a critical process termination, was there a statistically significant
    drop in expected ICS protocol traffic from the affected asset?
  context: This question links a specific host-based event (process termination)
    to its network impact (loss of reporting). A process termination alone might be
    benign, but when it's immediately followed by a measurable drop in critical data
    flow (e.g., Modbus or DNP3 traffic), it strongly suggests the terminated process
    was essential for operations and that its termination was a disruptive act. This
    confirms the adversary's intent to inhibit reporting.
  answer_sources:
  - Windows Event ID 4689
  - Windows Event ID 4688
  - Zeek conn.log
  - 'NAI: Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Historian
    Servers, OPC Servers within the Process Control Network (PCN) segments.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON process_termination_alert
        GET host and timestamp
        CALCULATE 14-day baseline traffic for host on ICS port
        QUERY traffic for host in 5 mins post-alert
        IF average_traffic < 5th_percentile_of_baseline
          ALERT
- question: Did network traffic from a critical ICS asset deviate from its predicted
    normal behavior, falling below a forecasted baseline, and does this anomaly coincide
    with a critical process termination?
  context: This question employs advanced analytics to detect more subtle or novel
    disruptions. Instead of a simple static threshold, a time-series model accounts
    for natural periodic fluctuations in traffic. An alert based on a deviation from
    this dynamic forecast is more robust. Correlating this network anomaly with a
    host-based event like a process termination provides high-fidelity evidence of
    a targeted attack.
  answer_sources:
  - Windows Event ID 4689
  - Windows Event ID 4688
  - Zeek conn.log
  - 'NAI: Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Historian
    Servers, OPC Servers within the Process Control Network (PCN) segments.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each critical_asset
        CONTINUOUSLY forecast expected_traffic_volume
        IF observed_traffic < lower_prediction_boundary for > 3 mins
          CHECK for process_termination_event on same host
          IF found
            ESCALATE ALERT
- question: Has a new or modified firewall rule been implemented on a critical ICS
    asset to block a vital ICS protocol, and was this change unauthorized?
  context: This question targets a direct and effective method for blocking communication
    by manipulating the host firewall. An adversary might add a rule to block traffic
    on a port like TCP 502 (Modbus) to sever communication. Monitoring for these specific
    Windows events and checking them against a change management system allows for
    the rapid detection of unauthorized, malicious firewall changes.
  answer_sources:
  - Windows Event ID 4947
  - Windows Event ID 4950
  - Windows Event ID 4956
  - Zeek conn.log
  - 'NAI: HMIs, Historian Servers, Application Servers in the Process Control Network
    (PCN), and Industrial Demilitarized Zone (IDMZ) servers that bridge IT/OT networks.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FIND firewall rule change events (EID 4947, 4950, 4956) on critical_assets
      FOR each event
        PARSE rule_action, direction, port
        IF rule_action is 'Block' AND port is 'critical_ics_port'
          CHECK against change_management_db
          IF unauthorized
            ALERT
- question: Following the detection of a potentially malicious firewall rule change,
    is there network evidence confirming a significant disruption in traffic on the
    affected port?
  context: This question provides crucial validation for the firewall rule change
    alert. A rule change event doesn't guarantee impact. By immediately querying
    network flow data, we can confirm if the rule had the intended effect of blocking
    traffic. A statistically significant drop in traffic volume after the rule change
    provides strong, empirical evidence that reporting has been successfully inhibited.
  answer_sources:
  - Windows Event ID 4947
  - Windows Event ID 4950
  - Windows Event ID 4956
  - Zeek conn.log
  - 'NAI: HMIs, Historian Servers, Application Servers in the Process Control Network
    (PCN), and Industrial Demilitarized Zone (IDMZ) servers that bridge IT/OT networks.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON firewall_change_alert
        GET host, port, timestamp
        CALCULATE 14-day baseline traffic for host/port
        QUERY traffic for host/port in 10 mins post-alert
        IF traffic_drop > 3_std_dev_from_baseline
          ESCALATE ALERT
- question: Can we use a machine learning model to automatically classify firewall
    rule changes on critical assets as benign or malicious in real-time?
  context: This question aims to automate and improve the accuracy of detecting malicious
    firewall modifications. A machine learning model can learn complex patterns from
    various features (e.g., time of day, asset criticality, user account type) that
    a simple rule cannot. This approach helps to identify suspicious changes that
    might otherwise look legitimate, providing a more sophisticated and proactive
    detection capability.
  answer_sources:
  - Windows Event ID 4947
  - Windows Event ID 4950
  - Windows Event ID 4956
  - Zeek conn.log
  - 'NAI: HMIs, Historian Servers, Application Servers in the Process Control Network
    (PCN), and Industrial Demilitarized Zone (IDMZ) servers that bridge IT/OT networks.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON new firewall_change_event
        EXTRACT features (is_ics_port, is_critical_asset, time_of_day, etc.)
        SCORE event with ML_model
        IF score > 0.85
          ALERT
- question: Is a critical ICS endpoint experiencing a high ratio of failed connection
    attempts while simultaneously showing a drastic drop in legitimate, established
    traffic?
  context: This question seeks to identify a denial-of-service (DoS) attack. A flood
    of connection attempts can overwhelm a device, causing it to reject new, legitimate
    connections. By looking for both a high failure rate and a sharp decline in successful
    traffic from known good sources, we can distinguish a targeted DoS attack from
    a simple network configuration issue.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - 'NAI: Network interfaces of HMIs, Historians, and Control Servers; network segments/VLANs
    dedicated to process control.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      AGGREGATE connection stats for critical_endpoints over 5 mins
      CALCULATE failed_connection_ratio
      CALCULATE drop_in_legitimate_traffic vs last hour
      IF failed_ratio > 80% AND legitimate_traffic_drop > 90%
        ALERT
- question: Has a critical ICS endpoint experienced a sudden, anomalous surge in connections
    originating from an unusually small number of source IPs?
  context: This question helps detect a specific type of DoS attack. A massive spike
    in connections is a primary indicator. Measuring the Shannon entropy of source
    IPs helps characterize the attack; a low entropy score indicates that the flood
    of traffic is coming from very few sources, which is atypical for normal network
    behavior and characteristic of a coordinated attack.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - 'NAI: Network interfaces of HMIs, Historians, and Control Servers; network segments/VLANs
    dedicated to process control.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE connection_count and source_ip_entropy per minute for critical_endpoints
      ON new minute interval
        IF connection_count > (baseline_mean + 5 * std_dev) AND source_ip_entropy < 10th_percentile
          ALERT
- question: Using a multi-featured anomaly detection model, has the overall network
    behavior profile for a critical ICS endpoint significantly deviated from its established
    norm?
  context: This question leverages advanced machine learning to detect novel or complex
    DoS attacks that might evade simpler, threshold-based rules. By creating a holistic
    profile of normal behavior using multiple features (connection counts, failure
    ratios, IP/port entropy), an unsupervised model can spot any significant deviation,
    allowing for the detection of previously unseen attack patterns.
  answer_sources:
  - Zeek conn.log
  - Zeek notice.log
  - 'NAI: Network interfaces of HMIs, Historians, and Control Servers; network segments/VLANs
    dedicated to process control.'
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each critical_endpoint
        STREAM feature_vectors (conn_count, fail_ratio, ip_entropy, etc.) to ML_model
        CALCULATE anomaly_score
        IF anomaly_score > 99th_percentile
          ALERT