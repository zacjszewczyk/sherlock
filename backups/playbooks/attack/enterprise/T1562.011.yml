name: 'T1562.011: Spoof Security Alerting'
id: 'a7e8f9b0-1c2d-4e3f-8a9b-0c1d2e3f4a5b'
description: "This playbook helps investigate whether an adversary is attempting to evade defenses by spoofing security alerts. This involves looking for evidence across multiple data sources. Indicators include processes or network connections matching threat intelligence associated with defense evasion; processes executed with suspicious command-line arguments designed to mimic security notifications; legitimate security tools spawning unexpected child processes like shells or script interpreters; logical contradictions in logs where a security service is reported as stopped but simultaneously logs 'healthy' status messages; processes impersonating security tools through name misspellings or by running from unauthorized locations; and anomalous frequencies of 'healthy' status messages, such as a sudden flood or a complete cessation of reports."
type: 'technique'
related:
  - 'TA0005: Defense Evasion'
contributors: 'Zachary Szewczyk, Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: 'none'
questions:
  - question: "Are there any process creation or network connection events involving file hashes, IP addresses, or domains known to be associated with defense evasion or security tool spoofing?"
    context: "This question aims to detect the use of known malicious tools or infrastructure for spoofing security alerts by cross-referencing observed endpoint and network activity with high-confidence threat intelligence. A match provides a strong indicator of compromise related to this technique."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'All Enterprise Endpoints (Workstations and Servers)'
      - 'Network Egress/Ingress Points (e.g., Firewalls, Proxies)'
      - 'Threat Intelligence Platform'
    range: 'last 90 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events, network_connection_events | JOIN ProcessGUID/UID | LOOKUP against threat_intelligence_feed ON file_hash, destination_ip, domain | WHERE threat_match_found | ALERT'
  - question: "Have any rare, non-allowlisted processes initiated external network connections, potentially indicating newly deployed spoofing tools?"
    context: "This question helps identify potentially malicious software that is not yet known to threat intelligence feeds. By focusing on low-prevalence processes that communicate externally, analysts can uncover novel or targeted tools used for defense evasion that might otherwise be missed."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'All Enterprise Endpoints (Workstations and Servers)'
      - 'Network Egress/Ingress Points (e.g., Firewalls, Proxies)'
    range: 'last 30 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events | WHERE process_hash NOT IN allowlist | CALCULATE prevalence over 30d | FILTER prevalence < 1st_percentile | JOIN with network_connections ON ProcessGUID/UID WHERE has_external_connection | FLAG for investigation'
  - question: "Can a machine learning model identify process executions with characteristics indicative of evasive behavior, such as spoofing?"
    context: "This question leverages machine learning to automate the detection of complex, evasive process behaviors. By training a model on features like hash reputation, parent process legitimacy, command-line entropy, and network patterns, it can identify suspicious activities that may not trigger simple rule-based alerts."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'All Enterprise Endpoints (Workstations and Servers)'
      - 'Network Egress/Ingress Points (e.g., Firewalls, Proxies)'
    range: 'last 90 days'
    queries:
      - "pseudocode: INPUT process_events, network_events | EXTRACT features (hash_rep, parent_proc, cmd_entropy, etc.) | APPLY trained_classification_model | ALERT on 'suspicious' or 'malicious' classification"
  - question: "Are there any processes being executed with command-line arguments containing keywords or patterns associated with spoofing security alerts?"
    context: "This question looks for direct evidence of alert spoofing attempts by searching for command-line patterns that manipulate GUI elements (e.g., via PowerShell's Windows.Forms) or use notification tools (like 'msg.exe' or 'mshta.exe') to display fake security messages."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All Windows Endpoints'
      - 'Centralized Log Aggregator (SIEM)'
    range: 'last 90 days'
    queries:
      - "pseudocode: SEARCH process_creation_events (EID 4688) | REGEX command_line for 'msg.exe *', '.ShowDialog()', 'mshta.exe javascript:alert' etc. | ALERT on match"
  - question: "Are there any process executions with unusually long or complex command-line arguments compared to their normal baseline, suggesting obfuscation?"
    context: "This question aims to detect obfuscated commands, a common tactic for hiding malicious activity. By baselining normal command-line length and entropy for each process, significant deviations can be flagged as anomalous and potentially part of a spoofing attempt."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All Windows Endpoints'
      - 'Centralized Log Aggregator (SIEM)'
    range: 'last 30 days'
    queries:
      - 'pseudocode: FOR each process_name | BASELINE cmd_length, cmd_entropy over 30d | SEARCH new process_creation_events | ALERT if cmd_length > 99th_percentile OR cmd_entropy > 99th_percentile'
  - question: "Are there new or unusual clusters of command-line arguments appearing in the environment that deviate from established benign activity?"
    context: "This question uses unsupervised machine learning to discover novel attack patterns. By clustering command-line arguments, analysts can identify new, low-frequency command structures that might represent emerging spoofing techniques without prior knowledge of what to look for."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All Windows Endpoints'
      - 'Centralized Log Aggregator (SIEM)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events | TOKENIZE command_lines | APPLY clustering_algorithm (DBSCAN) | REVIEW new or low-density clusters'
  - question: "Has a trusted security tool process spawned an unexpected or non-allowlisted child process, such as a script interpreter or command shell?"
    context: "This question targets process injection or exploitation of security tools. A security product should have a predictable set of child processes; any deviation, especially the creation of a shell ('cmd.exe') or script interpreter ('powershell.exe'), is highly suspicious and could be an attempt to execute malicious code under a trusted parent."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Endpoints with standard EDR/Antivirus solutions installed'
      - 'Domain Controllers'
      - 'Critical Application Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events | WHERE parent_process IN security_tool_list | IF child_process NOT IN allowlist_for_parent | ALERT'
  - question: "Has an extremely rare parent-child process relationship involving a security tool occurred?"
    context: "This question uses statistical analysis to find anomalous process relationships. Even if a specific child process is not explicitly disallowed, if its creation by a security tool is historically improbable (e.g., <0.1% frequency), it warrants investigation as a potential sign of compromise or misconfiguration."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Endpoints with standard EDR/Antivirus solutions installed'
      - 'Domain Controllers'
      - 'Critical Application Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events | WHERE parent_process IN security_tool_list | CALCULATE historical_frequency(parent, child) | ALERT if frequency < 0.1%'
  - question: "Can a graph-based anomaly detection model identify suspicious process execution chains involving security tools?"
    context: "This question applies advanced graph analytics to detect sophisticated attacks. By modeling normal process trees as a graph, algorithms can identify anomalous structures, such as a security tool having a new, unexpected connection (edge) to a malicious or unusual process (node)."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Endpoints with standard EDR/Antivirus solutions installed'
      - 'Domain Controllers'
      - 'Critical Application Servers'
    range: 'last 90 days'
    queries:
      - 'pseudocode: BUILD process_chain_graph from historical data | TRAIN graph_anomaly_model (GraphSAGE) | SCORE new process_chains | ALERT on high anomaly_score'
  - question: "Is there a logical contradiction where a security service is reported as stopped or terminated, but its own logs concurrently report a 'healthy' status?"
    context: "This question seeks to find direct evidence of log or alert spoofing. An adversary might terminate a security service to operate freely, while simultaneously injecting fake 'healthy' log entries to avoid detection. Correlating service control events (Event IDs 7034, 7036) with application logs can reveal this contradiction."
    answer_sources:
      - 'Windows Event ID 7036'
      - 'Windows Event ID 7034'
      - 'Windows Application Event Log'
      - 'Microsoft-Windows-Windows Defender/Operational'
      - 'Zeek conn.log'
      - 'Centralized SIEM Platform'
      - 'All Windows Endpoints'
    range: 'last 90 days'
    queries:
      - 'pseudocode: CORRELATE on host | TRIGGER on (EID 7036 or 7034 for security_service) | IF within 5 mins, (healthy_log_event for same service) | ALERT'
  - question: "Is there an abnormal statistical correlation between a security service stopping and it reporting a 'healthy' status on a given host?"
    context: "This question uses statistical methods to uncover subtle manipulation. Normally, 'healthy' events and 'service stopped' events should be inversely correlated. A breakdown in this relationship (e.g., a negative or zero correlation) over a rolling window could indicate that one set of events is being faked."
    answer_sources:
      - 'Windows Event ID 7036'
      - 'Windows Event ID 7034'
      - 'Windows Application Event Log'
      - 'Microsoft-Windows-Windows Defender/Operational'
      - 'Centralized SIEM Platform'
    range: 'last 24 hours'
    queries:
      - 'pseudocode: FOR each host, security_service | CREATE time_series(count(service_stopped_events)), time_series(count(healthy_events)) | CALCULATE Pearson_correlation over 24h rolling window | ALERT on significant negative or zero correlation'
  - question: "Has a security tool's event log sequence deviated from its normal, expected order of operations (e.g., a 'healthy' status appearing without a preceding 'scan complete')?"
    context: "This question models the legitimate lifecycle of a security tool's operations. By training a model (like a Hidden Markov Model) on valid sequences of events, it can detect when an illogical or out-of-order event occurs, such as a 'healthy' message appearing from a state where it's not possible, suggesting event injection."
    answer_sources:
      - 'Windows Application Event Log'
      - 'Microsoft-Windows-Windows Defender/Operational'
      - 'Centralized SIEM Platform'
    range: 'last 90 days'
    queries:
      - 'pseudocode: TRAIN HMM on legitimate event sequences for each tool | INPUT new event sequences | CALCULATE probability of sequence | ALERT if probability is below threshold'
  - question: "Is a process running that impersonates a legitimate security tool through name misspelling (typosquatting) or by executing from an unauthorized file path?"
    context: "This is a fundamental check for masquerading. Adversaries often use slight misspellings of legitimate process names (e.g., 'MsMpEnge.exe') or place correctly named files in non-standard locations (like %APPDATA%) to evade simple, name-based detections."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Windows Event ID 5156'
      - 'Zeek conn.log'
      - 'All Windows Endpoints (File System and Process Monitoring)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events | IF (process_name has Levenshtein_distance 1-2 to known_tool) OR (process_name is known_tool AND path NOT IN allowed_paths) | ALERT'
  - question: "Is a process impersonating a security tool name executing from a file path with unusually high entropy, suggesting a randomized or non-standard directory?"
    context: "This question uses file path entropy as an indicator of suspicion. Legitimate software is typically installed in predictable, low-entropy paths (e.g., C:\\Program Files\\...). Malicious software is often dropped into deep, randomized, or user-specific directories, which result in higher path entropy."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All Windows Endpoints (File System and Process Monitoring)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: SEARCH process_creation_events | WHERE process_name impersonates security_tool | CALCULATE file_path_entropy | ALERT if entropy > 98th_percentile of baseline'
  - question: "Can a machine learning model, trained only on known-good security process characteristics, identify new process executions as outliers and potential impersonation attempts?"
    context: "This question uses one-class classification for anomaly detection. By learning the normal profile of a security process (e.g., file path, parent process, binary signature), the model can flag any new execution that does not fit this profile as an outlier, without needing to be trained on malicious examples."
    answer_sources:
      - 'Windows Event ID 4688'
      - 'All Windows Endpoints (File System and Process Monitoring)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: TRAIN one-class_SVM on features of known-good security processes | INPUT new process_execution_features | ALERT if model classifies as outlier'
  - question: "Are 'healthy' status messages for a security tool being logged even after the tool has been disabled and not re-enabled?"
    context: "This is a form of logical contradiction detection. If a tool is disabled (triggering a 'security control disabled' event), it should stop sending 'healthy' heartbeats. If those messages continue to appear, it is a strong indicator they are being spoofed by an adversary to conceal the tool's disabled state."
    answer_sources:
      - 'Windows Application Event Log'
      - 'Microsoft-Windows-Windows Defender/Operational'
      - 'Centralized Log Management Platform (SIEM)'
      - 'All Windows Endpoints'
    range: 'last 90 days'
    queries:
      - "pseudocode: STATEFUL RULE: on 'control_disabled' event | IF no 'control_enabled' event within 15min AND 'healthy_status' events continue | ALERT"
  - question: "Has the volume of 'healthy' status messages from a security tool on a specific host significantly deviated from its historical baseline (either a sudden flood or a complete stop)?"
    context: "This question uses statistical volume analysis to detect anomalies. A sudden flood of 'healthy' messages could be a spoofing attempt, while a complete cessation could indicate the tool was disabled or tampered with. Both scenarios deviate from the normal, periodic reporting baseline and warrant investigation."
    answer_sources:
      - 'Windows Application Event Log'
      - 'Microsoft-Windows-Windows Defender/Operational'
      - 'Centralized Log Management Platform (SIEM)'
      - 'All Windows Endpoints'
    range: 'last 30 days'
    queries:
      - 'pseudocode: FOR each host, tool | BASELINE hourly_count of healthy_events over 30d | ALERT if current_hour_count > (mean + 3*std_dev) OR current_hour_count = 0 for > max_interval'
  - question: "Does the observed number of security status reports from a host fall significantly outside the range predicted by a time-series forecasting model?"
    context: "This question uses predictive analytics to find anomalies. A forecasting model (like ARIMA or Prophet) learns the normal rhythm and seasonality of status reports. If the actual number of reports is much higher or lower than the model's prediction, it signals a statistically significant anomaly worth investigating."
    answer_sources:
      - 'Windows Application Event Log'
      - 'Microsoft-Windows-Windows Defender/Operational'
      - 'Centralized Log Management Platform (SIEM)'
      - 'All Windows Endpoints'
    range: 'last 90 days'
    queries:
      - 'pseudocode: FOR each host | TRAIN forecasting_model on time_series of report volume | PREDICT expected_volume for next interval | ALERT if actual_volume is outside prediction_interval'