name: T1137.004: Outlook Home Page
id: 5a9b8c1d-1f2e-4d3c-8a7b-9e0f1a2b3c4d
description: This playbook helps investigate if an adversary is maintaining persistence using Outlook Home Pages. This involves looking for suspicious outbound network connections from the Outlook process, modifications to specific registry keys that control the Outlook Home Page URL, the spawning of script interpreters by Outlook, connections to newly registered or dynamic DNS domains, and the creation of unexpected child processes by Outlook.
type: technique
related:
  - "TA0003: Persistence"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is Outlook making network connections to IP addresses or domains known to be malicious?
    context: This question seeks to identify direct command and control (C2) or data exfiltration channels established through the Outlook Home Page feature. By correlating outbound network traffic from the Outlook process with high-confidence threat intelligence feeds, an analyst can quickly spot connections to known malicious infrastructure, which is a strong indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - Windows Event ID 4688
      - User workstations
      - Network egress points (e.g., firewalls, proxies)
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH host logs (e.g., Sysmon Event ID 3)
          FILTER process_name = "OUTLOOK.EXE"
          FOR_EACH event:
            LOOKUP event.destination_ip or event.destination_hostname in threat_intel_feed
            IF match_found:
              ALERT
  - question: Is Outlook connecting to domains that are rarely visited by anyone in the organization?
    context: Adversaries often use unique or custom domains for C2 that are not part of normal business operations. This question helps uncover such anomalies by baselining all domains contacted by Outlook across the enterprise. A connection to a domain that is statistically rare (e.g., in the bottom 5th percentile of frequency) suggests it is not a common business or personal destination and warrants investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - Windows Event ID 4688
      - User workstations
      - Network egress points (e.g., firewalls, proxies)
      - DNS resolvers
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase
          DEFINE baseline_domains = COUNT(domain)
            FROM network_logs
            WHERE process_name = "OUTLOOK.EXE" over last 30 days
            GROUP BY domain
          
          // Detection Phase
          SEARCH network_logs
          FILTER process_name = "OUTLOOK.EXE"
          FOR_EACH event:
            IF event.domain in RARE_DOMAINS (e.g., bottom 5th percentile of baseline_domains):
              ALERT
  - question: Is any user's Outlook process exhibiting an anomalous amount of network activity compared to their own baseline?
    context: This question uses time-series analysis to detect deviations from a user's normal network behavior. A sudden, unexpected spike in the number of connections made by Outlook could indicate that a malicious Home Page is active, performing actions like downloading additional payloads or exfiltrating data. This approach is effective at finding activity that might be missed by signature-based or simple thresholding methods.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - Windows Event ID 4688
      - User workstations
      - Network egress points (e.g., firewalls, proxies)
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR_EACH user:
            MODEL hourly_connection_count from OUTLOOK.EXE using time-series (e.g., ARIMA)
            PREDICT expected_count_range for current hour
            SEARCH network_logs for current_hour_count
            IF current_hour_count > PREDICTED_UPPER_BOUND:
              ALERT
  - question: Is the Outlook Home Page URL registry value being modified by a suspicious process like a script interpreter?
    context: The Outlook Home Page URL is stored in a specific registry key. Legitimate changes are typically made by Office installers or updaters. This question focuses on identifying when this critical registry value is modified by an unusual process, such as PowerShell, cscript, or mshta. Such a modification is a strong indicator that an adversary is programmatically setting a malicious URL to establish persistence.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 13
      - User workstations
      - Citrix/VDI servers
      - Microsoft Exchange Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH registry_logs (e.g., Sysmon Event ID 13)
          FILTER object_name CONTAINS "\\Outlook\\WebView\\" AND value_name = "URL"
          FILTER process_name IN ["powershell.exe", "cscript.exe", "mshta.exe"] OR process_name NOT IN trusted_installer_list
          ALERT
  - question: Is the Outlook WebView registry key being modified by a process that is statistically rare across the enterprise?
    context: This question leverages population statistics to find outlier behavior. By aggregating all processes that modify the Outlook WebView key across all endpoints, we can identify which processes are common (e.g., Office updates) and which are rare. A modification performed by a process that has only been seen on a tiny fraction of systems is highly suspicious and could point to a targeted attack.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 13
      - User workstations
      - Citrix/VDI servers
      - Microsoft Exchange Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase
          DEFINE process_prevalence = COUNT(DISTINCT endpoint)
            FROM registry_logs
            WHERE object_name CONTAINS "\\Outlook\\WebView\\"
            GROUP BY process_name
          
          // Detection Phase
          SEARCH registry_logs
          FILTER object_name CONTAINS "\\Outlook\\WebView\\"
          FOR_EACH event:
            IF PREVALENCE(event.process_name) < 1%:
              ALERT
  - question: Can a machine learning model classify a modification to the Outlook WebView registry key as malicious based on its context?
    context: This question proposes a sophisticated detection method using a machine learning classifier. By training a model on features like the modifying process, its parent, and file path, the system can learn the nuanced patterns that distinguish between benign (e.g., patching) and malicious (e.g., persistence) registry modifications. This allows for more accurate and automated detection.
    answer_sources:
      - Windows Event ID 4657
      - Windows Event ID 13
      - User workstations
      - Citrix/VDI servers
      - Microsoft Exchange Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR_EACH new_registry_event targeting "\\Outlook\\WebView\\":
            EXTRACT features (process_name, parent_process, process_path, time_of_day)
            SCORE event with pre-trained random forest model
            IF score > malicious_threshold:
              ALERT
  - question: Is Outlook spawning script interpreters with suspicious command-line arguments indicative of script execution or downloaders?
    context: A compromised Outlook Home Page can execute code, often by spawning a child process like PowerShell or cmd.exe. This question looks for the classic signs of malicious activity within the command line of these child processes, such as indicators for downloading remote files ('DownloadString', 'IEX'), executing encoded commands ('-enc'), or other suspicious patterns.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs
          FILTER parent_process = "OUTLOOK.EXE"
          FILTER child_process IN ["powershell.exe", "cmd.exe", "mshta.exe"]
          FILTER command_line CONTAINS ["DownloadString", "-enc", "IEX", "http:"]
          ALERT
  - question: Is Outlook spawning child processes with unusually complex or high-entropy command lines?
    context: Adversaries frequently obfuscate or encode their commands to evade simple keyword-based detection, resulting in command-line strings that appear random. This question applies information theory by calculating the Shannon entropy of command lines. A command with an entropy score significantly higher than the baseline for normal activity is a strong indicator of obfuscation and malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs
          FILTER parent_process = "OUTLOOK.EXE"
          FOR_EACH event:
            CALCULATE entropy for event.command_line
            IF entropy > baseline_threshold (e.g., 99th percentile):
              ALERT
  - question: Can a machine learning model identify anomalous or malicious command lines for processes spawned by Outlook?
    context: This question uses anomaly detection to find malicious commands without relying on pre-defined keywords. By vectorizing command lines (e.g., using TF-IDF) and training a one-class SVM model on known-benign examples, the system can learn what 'normal' looks like. Any new command line that deviates significantly from this learned norm is flagged as an outlier.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR_EACH new_process_event with parent="OUTLOOK.EXE":
            VECTORIZE command_line using TF-IDF model
            SCORE vector with pre-trained one-class SVM model
            IF score indicates anomaly:
              ALERT
  - question: Is Outlook connecting to a domain that was very recently registered or is hosted by a dynamic DNS provider?
    context: Adversaries often use newly registered domains (NRDs) or dynamic DNS services for their C2 infrastructure to be agile and avoid blocklists. This question involves enriching network connection data from Outlook with external intelligence. By checking a domain's registration date or provider, an analyst can identify connections to these high-risk categories of domains.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - User workstations
      - Network egress points
      - DNS resolvers
      - Threat intelligence platforms (for domain enrichment)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR_EACH network_connection from "OUTLOOK.EXE":
            ENRICH domain with WHOIS and DDNS provider data
            IF domain_creation_date < 30 days OR is_dynamic_dns_provider:
              ALERT
  - question: Has the set of domains contacted by a user's Outlook process changed significantly from their historical baseline?
    context: This question establishes a behavioral baseline of network destinations for each user's Outlook application. By comparing the set of domains contacted in a recent period to the user's long-term history using a similarity measure like the Jaccard index, we can detect drastic changes. A sudden low similarity score indicates a potential compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - User workstations
      - Network egress points
      - DNS resolvers
      - Threat intelligence platforms (for domain enrichment)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR_EACH user:
            DEFINE historical_domains = unique domains from OUTLOOK.EXE over last 90 days
            DEFINE daily_domains = unique domains from OUTLOOK.EXE over last 24 hours
            CALCULATE jaccard_similarity(historical_domains, daily_domains)
            IF similarity_score < user_threshold (e.g., 0.2):
              ALERT
  - question: Can a machine learning model identify anomalous network connections from Outlook based on their characteristics?
    context: This question applies machine learning to network connection metadata to spot anomalies. By training a model on features like destination port, protocol, data volume, and domain characteristics, the system learns a user's normal network profile for Outlook. Any new connection that doesn't fit this profile is flagged as an outlier.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 3
      - User workstations
      - Network egress points
      - DNS resolvers
      - Threat intelligence platforms (for domain enrichment)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR_EACH new_connection from "OUTLOOK.EXE":
            EXTRACT features (port, protocol, bytes_out, domain_length)
            SCORE features with pre-trained one-class SVM model
            IF score indicates anomaly:
              ALERT
  - question: Is Outlook creating any child processes that are not on an established allowlist of expected applications?
    context: Outlook typically only spawns a predictable set of child processes, such as other Office applications or a web browser. This question employs a strict allowlisting approach. By defining a list of known-good child processes, any deviation (e.g., the creation of 'cmd.exe' or an unknown executable) can be immediately flagged as a high-severity event.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE allowlist = ["WINWORD.EXE", "EXCEL.EXE", "msedge.exe", "acrord32.exe"]
          SEARCH process_creation_logs
          FILTER parent_process = "OUTLOOK.EXE"
          IF child_process NOT IN allowlist:
            ALERT
  - question: Is Outlook spawning a child process that is rarely seen as its child across the entire organization?
    context: This approach is more dynamic than a static allowlist. It calculates the prevalence of every child process spawned by Outlook across the enterprise. If a specific child process is observed on only a handful of endpoints, it is flagged as rare and suspicious, even if it's a legitimate but uncommonly used application in that context.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // Baseline Phase
          DEFINE child_prevalence = COUNT(DISTINCT endpoint) for each child of "OUTLOOK.EXE"
          
          // Detection Phase
          SEARCH process_creation_logs
          FILTER parent_process = "OUTLOOK.EXE"
          IF PREVALENCE(event.child_process) < 0.5%:
            ALERT
  - question: Can a clustering algorithm automatically identify anomalous process creation events originating from Outlook?
    context: This question proposes an unsupervised machine learning approach. By creating feature vectors for each event (e.g., child process name, command-line attributes) and applying a clustering algorithm like DBSCAN, normal, repetitive activities will form dense clusters. Malicious or anomalous events will not fit into these clusters and will be flagged as outliers.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - User workstations
      - Citrix/VDI servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          VECTORIZE process_creation events from "OUTLOOK.EXE" using features (child_name, cmd_length, path_entropy)
          APPLY DBSCAN clustering algorithm to vectors
          IDENTIFY and ALERT on points classified as noise/outliers