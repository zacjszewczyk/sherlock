name: T1110: Brute Force
id: f3b4a2c1-d5e6-4f7a-8b9c-0d1e2f3a4b5c
description: This playbook helps answer the investigative question 'Is the adversary attempting to gain credentials via brute force?'. It provides a structured approach to detecting various brute-force techniques by analyzing authentication logs. The playbook covers several patterns, including high volumes of failed logins from a single source, password spraying attempts across many accounts, dictionary attacks targeting common administrative accounts, and the critical event of a successful login immediately following a series of failures. It leverages a combination of threat intelligence matching, statistical analysis, and machine learning models to identify these malicious activities across different data sources.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are failed authentication attempts originating from source IPs or user-agents that are present on threat intelligence feeds?
    context: This question aims to identify brute-force attempts by cross-referencing indicators from failed login events with known malicious indicators from threat intelligence feeds. By matching the source IP address or user-agent string from a failed login (like Windows Event ID 4625 or Zeek http.log) against a list of known brute-force actors, analysts can quickly identify and respond to attacks from recognized malicious infrastructure.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Zeek http.log
      - Externally-facing authentication services (e.g., VPN, OWA, RDP gateways), cloud identity providers (e.g., Microsoft Entra ID, Okta), perimeter firewalls, web application firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each failed_auth_event (e.g., WinEvent 4625)
            EXTRACT source_ip, user_agent (from related web logs)
            IF source_ip IN known_brute_force_ips OR user_agent IN known_brute_force_ua
              CREATE high_severity_alert
  - question: Are there any source IPs exhibiting an unusually high rate of authentication failures compared to historical norms?
    context: This statistical approach seeks to find outliers in authentication failure patterns. By calculating the rate of failures per source IP and comparing it to a baseline (e.g., the 95th percentile over the last 30 days), analysts can detect brute-force activity that may not originate from previously known malicious IPs. Augmenting this with ASN reputation data helps reduce false positives.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Zeek http.log
      - Externally-facing authentication services (e.g., VPN, OWA, RDP gateways), cloud identity providers (e.g., Microsoft Entra ID, Okta), perimeter firewalls, web application firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE baseline_failure_rate = 95th_percentile(failures_per_ip) over last 30 days
          FOR each source_ip in last hour
            CALCULATE current_failure_rate
            IF current_failure_rate > baseline_failure_rate
              CHECK ASN_reputation for source_ip
              FLAG as potential_brute_force
  - question: Can a machine learning model identify authentication failures that have a high probability of being part of a brute-force attack?
    context: This question leverages a supervised machine learning model to provide a more sophisticated and adaptive detection method. By training a model on features like geolocation, ASN, time of day, and user-agent from historical data labeled with known threat intelligence, the system can score new authentication failures in real-time and alert on those that exhibit characteristics of malicious brute-force attempts.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Zeek http.log
      - Externally-facing authentication services (e.g., VPN, OWA, RDP gateways), cloud identity providers (e.g., Microsoft Entra ID, Okta), perimeter firewalls, web application firewalls
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_failed_auth
            EXTRACT features (IP_geo, ASN, time_of_day, user_agent)
            SCORE with pre-trained_classifier_model
            IF score > malicious_threshold
              CREATE alert
  - question: Is any single source IP targeting a high number of common administrative or default accounts with failed logins?
    context: This question focuses on identifying dictionary attacks, a specific type of brute-force attack. It uses a symbolic, rule-based approach to monitor for a high volume (e.g., >10) of failed login attempts from a single source IP targeting a predefined list of common administrative usernames (like 'admin', 'root') within a short time frame (5 minutes). A match indicates a high probability of a targeted dictionary attack.
    answer_sources:
      - Windows Event ID 4625
      - Domain Controllers, authentication servers (e.g., RADIUS), Linux/UNIX servers, database servers, network device administration interfaces, and IoT/OT device management portals
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE admin_usernames_dictionary
          FOR each source_ip in last 5 minutes
            COUNT failed_logins where username IN admin_usernames_dictionary
            IF count > 10
              CREATE high_severity_alert
  - question: Do any source IPs show a statistically anomalous ratio of failed logins against admin accounts compared to total failed logins?
    context: This statistical method aims to detect dictionary attacks by analyzing the proportion of attacks against administrative accounts. By establishing a baseline for the ratio of admin account failures to total failures for all source IPs, an IP whose ratio significantly exceeds this baseline (e.g., 99th percentile) can be flagged as a strong indicator of a dictionary attack, even if the total volume isn't high.
    answer_sources:
      - Windows Event ID 4625
      - Domain Controllers, authentication servers (e.g., RADIUS), Linux/UNIX servers, database servers, network device administration interfaces, and IoT/OT device management portals
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE baseline_ratio = 99th_percentile(failed_admin_logins / total_failed_logins) per IP
          FOR each source_ip in last hour
            CALCULATE current_ratio
            IF current_ratio > baseline_ratio
              FLAG for investigation
  - question: Does the sequence of usernames being attempted from a single source IP appear anomalous or indicative of a dictionary attack?
    context: This question uses a sequence analysis model (like an RNN) to identify dictionary attacks by examining the pattern of usernames attempted by a source IP. The model is trained on legitimate login sequences. An attack is identified when a sequence of attempts from an IP has a low probability score (i.e., it doesn't look like normal user behavior) and contains a high density of common administrative names.
    answer_sources:
      - Windows Event ID 4625
      - Domain Controllers, authentication servers (e.g., RADIUS), Linux/UNIX servers, database servers, network device administration interfaces, and IoT/OT device management portals
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip
            GET stream of attempted_usernames
            SCORE sequence with pre-trained_sequence_model
            IF sequence_probability is low AND density_of_admin_names is high
              FLAG as dictionary_attack
  - question: Has a single user account experienced a high number of failed login attempts from a small number of source IPs?
    context: This question is designed to detect a classic brute-force attack against a specific user account. It uses a stateful rule to trigger an alert when a threshold (e.g., >20 failures in 10 minutes) for failed logins is breached for a single user from a single source IP. Correlating with network logs (like Zeek conn.log) adds valuable context about the service being targeted (e.g., RDP, HTTPS).
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing services (RDP, VPNs, webmail), Domain Controllers, user workstations with remote access enabled, critical application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user_account, source_ip pair in last 10 minutes
            COUNT failed_logins (WinEvent 4625)
            IF count > 20
              GET destination_service from network logs
              CREATE alert with user, source_ip, and service
  - question: Are there statistically significant spikes in failed login counts for any single user account?
    context: This question applies statistical analysis to detect brute-force attempts by identifying anomalous spikes in login failures for a specific user. By modeling the normal distribution of failed login counts for each user over a 30-day period, any 10-minute interval where the failure count exceeds a statistical threshold (e.g., 3 standard deviations from the mean) is flagged as a significant anomaly requiring investigation.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing services (RDP, VPNs, webmail), Domain Controllers, user workstations with remote access enabled, critical application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user_account
            CALCULATE mean and std_dev of failed_logins per 10min over last 30 days
          FOR each user_account in current 10min window
            GET current_failure_count
            IF current_failure_count > (mean + 3 * std_dev)
              FLAG as statistical_anomaly
  - question: Does a time series forecasting model predict an anomalous number of failed logins for a specific user account?
    context: This question uses machine learning, specifically time series forecasting (like ARIMA), to predict the expected number of failed logins for each user. An alert is generated if the actual observed number of failures significantly exceeds the model's prediction (i.e., falls outside the 95% confidence interval). This method can adapt to each user's unique login patterns and detect subtle deviations indicative of a brute-force attack.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Externally-facing services (RDP, VPNs, webmail), Domain Controllers, user workstations with remote access enabled, critical application servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user_account
            FORECAST expected_failures with 95% confidence_interval using time_series_model
            GET observed_failures
            IF observed_failures > upper_bound_of_confidence_interval
              CREATE anomaly_alert
  - question: Is a single source IP attempting to log in to a large number of different user accounts with only a few failures per account?
    context: This question is designed to detect password spraying attacks, a 'low-and-slow' brute-force technique. It uses a rule-based threshold to identify a single source IP that generates a low number of failed logins (<4) against a large number of unique user accounts (>50) within an hour. This pattern is a classic indicator of an adversary trying a common password against many different accounts.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Cloud authentication services (e.g., Microsoft Entra ID, Okta), federated identity providers (e.g., ADFS), Domain Controllers, externally-facing web applications with corporate SSO
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip in last hour
            GET distinct_count of targeted_users with failed_logins
            GET failure_count_per_user
            IF distinct_count > 50 AND ALL failure_count_per_user < 4
              CREATE password_spraying_alert
  - question: Is there a statistically anomalous level of randomness (entropy) in the usernames being targeted by a single source IP?
    context: This statistical approach identifies password spraying by measuring the diversity of usernames targeted from a single IP. A high Shannon entropy score for the set of usernames indicates a wide, non-repetitive selection, which is characteristic of spraying. When combined with a high distinct count of targeted users, an anomalously high entropy score (e.g., >98th percentile) strongly suggests a password spraying attack.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Cloud authentication services (e.g., Microsoft Entra ID, Okta), federated identity providers (e.g., ADFS), Domain Controllers, externally-facing web applications with corporate SSO
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE baseline_entropy = 98th_percentile of username_entropy per source_ip
          FOR each source_ip in last hour
            CALCULATE current_username_entropy
            IF current_username_entropy > baseline_entropy
              FLAG as potential_password_spraying
  - question: Can an unsupervised clustering model identify a group of authentication failures that match the pattern of a password spraying attack?
    context: This question applies unsupervised machine learning (like DBSCAN) to discover password spraying activity without pre-labeled data. By clustering authentication failure events based on features like source IP, number of unique targets, and failures per account, the model can automatically identify dense clusters that represent the password spraying pattern: a single source IP, many unique targets, and few failures per target.
    answer_sources:
      - Windows Event ID 4625
      - Zeek conn.log
      - Cloud authentication services (e.g., Microsoft Entra ID, Okta), federated identity providers (e.g., ADFS), Domain Controllers, externally-facing web applications with corporate SSO
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CLUSTER failed_auth_events using DBSCAN on features (source_ip, unique_targets, failures_per_target)
          IDENTIFY clusters with 1 source IP, high unique_targets, low failures_per_target
          FLAG clusters as password_spraying_pattern
  - question: Has a successful login occurred for a user and source IP that was just involved in a high number of failed login attempts?
    context: This question aims to directly identify a successful brute-force attack by correlating a successful login with preceding failures. A stateful rule is used to trigger on a successful login (Windows Event ID 4624) and then look back over the last 15 minutes for a high count (>10) of failures (Windows Event ID 4625) for the same user account and from the same source IP. A match is a high-priority indicator of a compromised account.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers, critical asset servers, VPN concentrators, privileged access workstations, cloud administration consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON successful_login (WinEvent 4624) for user, source_ip
            QUERY last 15 minutes for failed_logins (WinEvent 4625) for same user, source_ip
            COUNT failed_logins
            IF count > 10
              CREATE high_priority_alert for successful_brute_force
  - question: Did a successful login follow a statistically unusual number of failed attempts for that specific user?
    context: This statistical method detects successful brute-force attacks by baselining user-specific behavior. For each user, it establishes a normal distribution for the number of failed attempts that typically precede a successful login. A successful login is flagged as suspicious if the number of preceding failures from the same IP exceeds a high percentile (e.g., 99th) of that user's historical baseline.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers, critical asset servers, VPN concentrators, privileged access workstations, cloud administration consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user, CALCULATE failure_baseline = 99th_percentile of failures before success
          ON successful_login for user
            COUNT preceding_failures from same IP
            IF count > failure_baseline
              FLAG as likely_successful_brute_force
  - question: Can a machine learning model classify a successful login as being the result of a brute-force attack?
    context: This question uses a supervised classification model to distinguish normal successful logins from those that are the result of a brute-force attack. The model is trained on features like the number of preceding failures, time since last login, and IP reputation. It then scores all new successful logins in real-time, generating an alert when the probability of it being a post-brute-force login is very high (e.g., >90%).
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Domain Controllers, critical asset servers, VPN concentrators, privileged access workstations, cloud administration consoles
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON successful_login
            EXTRACT features (preceding_failures, time_since_last_login, ip_reputation)
            SCORE with post_brute_force_classifier
            IF score > 0.90
              CREATE alert