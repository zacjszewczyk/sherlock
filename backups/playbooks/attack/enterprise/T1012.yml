name: T1012: Query Registry
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: "This playbook is designed to detect adversarial discovery activity involving registry queries. It helps answer the question: Is an adversary performing discovery using registry queries? The detection strategies include looking for command-line arguments that match known malicious signatures, direct process access to sensitive registry keys (e.g., cached credentials, security software settings), a high volume of distinct queries from a single process in a short time, unusual parent processes (like Office applications) spawning registry tools, and the correlation of registry queries for network settings followed by outbound network connections."
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Are there any process creation events with command lines that exactly match a known malicious registry query command?
    context: This question aims to identify the most obvious and high-fidelity indicators of malicious registry enumeration. By comparing command lines against a curated list of signatures from tools like Mimikatz or BloodHound, analysts can quickly spot known-bad activity with a low false-positive rate. A match is a strong signal that an adversary is using a common tool for discovery.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, database servers)
      - Executive workstations
      - Developer workstations
    range: last 90 days
    queries:
      - "SEARCH process creation events (WinEvent 4688, Sysmon 1) WHERE command_line MATCHES list_of_malicious_reg_queries."
  - question: Are there any 'reg.exe query' command lines that have a high n-gram similarity to a corpus of known malicious commands?
    context: This question looks for variations of known malicious commands that might evade simple signature matching. By using n-gram analysis, it can detect commands that are structurally similar to known malicious ones, even if they aren't an exact match. This helps catch slightly obfuscated or modified versions of attacker tools. A high overlap score suggests a command is likely related to malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, database servers)
      - Executive workstations
      - Developer workstations
    range: last 90 days
    queries:
      - "SEARCH process creation events WHERE process_name = 'reg.exe' AND command_line CONTAINS 'query'. CALCULATE n-gram similarity score against malicious corpus. ALERT if score > threshold."
  - question: Can a machine learning model classify any new process creation events involving registry queries as malicious?
    context: This question leverages machine learning to proactively identify malicious registry queries based on various features. By training a model on characteristics like command length, character randomness (entropy), and the presence of sensitive keywords, it can learn the subtle differences between benign and malicious commands. This approach provides a more dynamic and adaptive detection method compared to static signatures.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Critical servers (Domain Controllers, database servers)
      - Executive workstations
      - Developer workstations
    range: last 90 days
    queries:
      - "APPLY logistic regression model to real-time process creation events. FEATURES include command_length, entropy, keywords. ALERT if classified as malicious."
  - question: Are any processes accessing or querying registry keys known to contain sensitive information from a predefined watchlist?
    context: This question focuses on detecting direct access to high-value targets in the registry. By monitoring specific paths where credentials, secrets, or sensitive configurations are stored (e.g., PuTTY sessions, Terminal Server clients, system secrets), analysts can quickly identify attempts to steal critical information. An access event to these keys is a significant indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 13
      - All Windows endpoints and servers
      - Authentication servers (e.g., Domain Controllers)
      - Servers hosting sensitive applications
    range: last 90 days
    queries:
      - "SEARCH process creation (Sysmon 1) and registry access (Sysmon 13) events WHERE target_registry_key IN watchlist_of_sensitive_keys."
  - question: Has any process accumulated a registry access risk score that significantly deviates from its established baseline?
    context: This question aims to identify anomalous behavior by quantifying the risk of registry access over time. Instead of alerting on a single access, it builds a profile of normal activity for each process on a host. A process that suddenly starts accessing many high-risk keys will generate a score that exceeds its normal baseline, indicating a potential compromise or change in behavior that warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 13
      - All Windows endpoints and servers
      - Authentication servers (e.g., Domain Controllers)
      - Servers hosting sensitive applications
    range: last 90 days
    queries:
      - "For each process, SUM risk_scores of accessed registry keys over 5-min window. CALCULATE baseline. ALERT if current_sum > (baseline_mean + 3 * baseline_stdev)."
  - question: Does a machine learning model classify any queries to sensitive registry keys as malicious based on contextual features?
    context: This question uses a machine learning model to add context to sensitive registry access. An access event isn't just evaluated in isolation; the model considers who is doing it (user), what process is doing it (parent process), when it's happening (time of day), and how unusual the access is. This helps differentiate legitimate administrative activity from malicious access by an attacker.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 13
      - All Windows endpoints and servers
      - Authentication servers (e.g., Domain Controllers)
      - Servers hosting sensitive applications
    range: last 90 days
    queries:
      - "APPLY Random Forest model to registry access events. FEATURES include parent_process, user, time_of_day, historical_rarity. ALERT if classified as malicious."
  - question: Has any single process executed an unusually high number of 'reg.exe query' commands in a short period?
    context: This question acts as a simple but effective tripwire for automated registry scanning. Legitimate activity rarely involves a single process making dozens of distinct registry queries in a couple of minutes. This behavior is a hallmark of reconnaissance scripts or tools attempting to quickly map out a system's configuration. The threshold (50 queries in 2 minutes) is designed to catch this high-volume activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Windows endpoints and servers, especially those with standard user configurations where such activity is unexpected
    range: last 90 days
    queries:
      - "GROUP process creation events by ProcessID over 2-min window. COUNT distinct 'reg.exe query' commands. ALERT if count > 50."
  - question: Is any process querying a wider variety of registry keys than is normal for its historical behavior, as measured by entropy?
    context: This question seeks to detect unusual reconnaissance by measuring the randomness or variety of registry keys a process queries. A process like svchost.exe typically interacts with a predictable set of keys. If it suddenly starts querying a wide and unpredictable range of keys, its query entropy will spike. This indicates a deviation from normal behavior, possibly due to process injection or another compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Windows endpoints and servers, especially those with standard user configurations where such activity is unexpected
    range: last 90 days
    queries:
      - "For each parent process, CALCULATE Shannon entropy of queried registry paths over 5-min window. ESTABLISH baseline entropy. ALERT if current_entropy > 98th percentile of historical baseline."
  - question: Has there been a sudden and sustained burst of registry query activity on any host that deviates from its normal daily and weekly patterns?
    context: This question looks for anomalies at the host level rather than the process level. Systems have a natural rhythm of activity. A time-series model learns this rhythm (e.g., high activity during backups, low activity overnight). An alert is triggered when the volume of registry queries breaks from this learned pattern, indicating a significant event like the start of a large-scale reconnaissance scan.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Windows endpoints and servers, especially those with standard user configurations where such activity is unexpected
    range: last 90 days
    queries:
      - "APPLY time-series anomaly detection (e.g., STL) to the rate of registry query events per host (1-min bins). ALERT on significant positive deviations from forecasted pattern."
  - question: Has a registry utility like 'reg.exe' or 'regedit.exe' been launched by a non-standard parent process like an Office application or web browser?
    context: This question identifies suspicious process lineage. It's highly unusual for an application like Microsoft Word or Chrome to spawn a registry editor. This behavior is a strong indicator that a malicious document, email, or web page has been used to execute code on the system, and that code is now performing discovery using system utilities.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations
      - Mail servers
      - Web proxies
    range: last 90 days
    queries:
      - "SEARCH process creation events WHERE child_process IN ('reg.exe', 'regedit.exe') AND parent_process IN ('OUTLOOK.EXE', 'WINWORD.EXE', 'CHROME.EXE', 'msedge.exe')."
  - question: Has an extremely rare parent-child process relationship involving a registry utility been observed?
    context: This question moves beyond a static list of bad parents and instead uses data to define 'unusual'. By baselining all parent-child process relationships across the enterprise, it can flag any pairing that is exceptionally rare. A 'reg.exe' process being spawned by 'winword.exe' would be flagged because this combination is statistically improbable in a normal environment.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations
      - Mail servers
      - Web proxies
    range: last 90 days
    queries:
      - "BASELINE all parent-child process relationships over 30 days. For new events where child is registry utility, ALERT if parent-child frequency is in bottom 1st percentile."
  - question: Has an unsupervised machine learning model identified a process creation event involving a registry utility as a high-scoring anomaly?
    context: This question applies unsupervised machine learning to find 'unknown unknowns' in process creation data. An Isolation Forest model is particularly good at finding outliers. It learns what normal process creation events look like based on features like parent/child names and paths, and then isolates events that don't fit the pattern. A Word document spawning 'reg.exe' would be easily isolated and receive a high anomaly score.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User workstations
      - Mail servers
      - Web proxies
    range: last 90 days
    queries:
      - "APPLY Isolation Forest model to process creation events. FEATURES include parent_process, child_process, user, path. ALERT on high anomaly scores for events involving registry utilities."
  - question: Has a process queried network configuration registry keys and then immediately made an outbound network connection to a known malicious IP or domain?
    context: This question links registry discovery to potential C2 or exfiltration activity. An attacker might query the registry to find proxy settings or network configurations. Correlating this action with a subsequent outbound connection to an address on a threat intelligence feed provides a high-confidence alert that the discovered information is being used to 'phone home'.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points
      - DNS servers
      - Windows endpoints and servers
    range: last 90 days
    queries:
      - "JOIN process events (querying network keys) with network logs (Zeek conn.log) from same host within 5 mins. ALERT if destination_ip or destination_domain is on threat intel list."
  - question: Following a query to a network-related registry key, did the host make an outbound connection that is statistically rare for its peer group?
    context: This question looks for anomalous network behavior following registry discovery, even if the destination isn't on a threat list. It assesses the rarity of the connection based on its attributes (port, destination ASN, TLS fingerprint). For example, if a user's workstation queries proxy settings and then makes a connection on a non-standard port to a rare ASN, it would be flagged as suspicious, even if the IP is unknown.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points
      - DNS servers
      - Windows endpoints and servers
    range: last 90 days
    queries:
      - "For hosts querying network keys, analyze subsequent network connections. CALCULATE rarity score based on dest_port, dest_ASN, JA3/JA3S. ALERT if score > 99th percentile for host's peer group."
  - question: Has a machine learning sequence model detected an anomalous sequence of events, specifically a network-related registry query followed by a high-risk network connection?
    context: This question employs advanced sequence analysis to understand the narrative of an attack. An RNN can learn the legitimate 'stories' of system and network interactions. It can then flag a sequence like 'registry query for proxy settings' -> 'outbound connection with unusual JA3S hash' as anomalous because it deviates from the learned normal sequences. This helps detect causality and the logical flow of an attack.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek conn.log
      - Zeek dns.log
      - Network egress points
      - DNS servers
      - Windows endpoints and servers
    range: last 90 days
    queries:
      - "APPLY RNN sequence model to event stream. ALERT if sequence {network-registry-query, high-risk-network-connection} is flagged as anomalous."