name: T1657: Financial Theft
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps analysts investigate potential financial theft (T1657) by providing questions and queries to detect related adversarial activities. It covers monitoring for connections to malicious financial infrastructure, execution of known financial malware or cryptominers, indicators of Business Email Compromise (BEC), correlation of high-risk logins with financial site access, anomalous access to sensitive financial data, and unusual outbound network flows from financial servers that could indicate data exfiltration for extortion.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any internal hosts connecting to external destinations known to be associated with financial theft (malware, ransomware C2, cryptomining)?
    context: This question aims to detect direct communication with malicious infrastructure. Matching outbound network traffic against a high-fidelity threat intelligence feed is one of the most direct ways to identify a compromised host or an active threat related to financial malware.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network egress points, including internet gateways, DNS resolvers, and web proxies.
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs | JOIN threat_intelligence_feed ON destination_ip OR destination_domain | WHERE indicator_type IN ('financial_malware', 'ransomware_c2', 'cryptomining')
  - question: Are there any outbound TLS connections using rare or anomalous JA3 hashes, potentially indicating the use of non-standard or malicious client software?
    context: Malware often uses custom TLS libraries, resulting in unique JA3 hashes. By baselining common JA3 hashes in the environment, we can identify outliers that represent statistically rare clients. These rare clients, especially when connecting to low-reputation destinations, can be a strong indicator of malware.
    answer_sources:
      - Zeek ssl.log
      - Network egress points, including internet gateways, DNS resolvers, and web proxies.
    range: last 90 days
    queries:
      - pseudocode: SEARCH tls_logs | CALCULATE JA3_frequency | WHERE JA3_frequency < 1st_percentile | ALERT
  - question: Can we use a machine learning model to proactively identify network connections that have a high probability of being malicious based on their characteristics?
    context: This question moves beyond simple signature matching. By training a supervised model on features like connection duration, data volume, and DNS query characteristics, we can identify connections that share traits with previously seen malicious activity, even if the destination isn't on a known threat feed.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network egress points, including internet gateways, DNS resolvers, and web proxies.
    range: last 90 days
    queries:
      - pseudocode: SCORE network_events WITH ML_model('financial_theft_classifier') | WHERE probability > 0.9 | ALERT
  - question: Has any process been created on an endpoint that matches known signatures (name, hash, arguments) of cryptominers or financial malware?
    context: This question focuses on detecting the execution of known malicious tools. By comparing process creation events against a watchlist of indicators, we can quickly identify when a recognized threat, such as a cryptominer, is running in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoints and servers, particularly those used by Finance/Accounting personnel or hosting financial applications.
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs | JOIN malware_watchlist ON process_name OR file_hash OR command_line_args | ALERT
  - question: Are there any processes being executed with unusually complex or high-entropy command-line arguments, suggesting obfuscation?
    context: Adversaries often obfuscate commands, especially for tools like PowerShell, to hide their activity. High entropy (randomness) in command-line arguments is a strong indicator of such obfuscation. Baselining normal entropy levels allows us to flag significant deviations that warrant investigation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoints and servers, particularly those used by Finance/Accounting personnel or hosting financial applications.
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs | CALCULATE command_line_entropy | BASELINE per_host | WHERE entropy > 99th_percentile | ALERT
  - question: Can we use an unsupervised machine learning model to detect anomalous process creation events that deviate from a host's normal behavior?
    context: This question seeks to find unknown threats by identifying outliers. An Isolation Forest or similar algorithm can learn a host's typical process behavior (e.g., parent processes, user context) and flag any new process that doesn't fit the established pattern, which could indicate a novel attack.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Endpoints and servers, particularly those used by Finance/Accounting personnel or hosting financial applications.
    range: last 90 days
    queries:
      - pseudocode: SCORE process_events WITH ML_model('isolation_forest_process_anomaly') | WHERE anomaly_score is high | ALERT
  - question: Have any incoming emails been detected with classic Business Email Compromise (BEC) indicators, such as mismatched headers, lookalike domains, or urgent financial keywords?
    context: This question aims to catch common BEC attempts using rule-based detection. By inspecting email headers for spoofing, sender domains for subtle misspellings, and content for urgent financial language, we can identify and flag phishing emails designed to trick employees into making fraudulent payments.
    answer_sources:
      - Zeek smtp.log
      - Email gateway logs
      - Microsoft 365 audit logs
      - Email gateways, mail servers, network sensors monitoring SMTP traffic, and cloud email tenants (e.g., Microsoft 365, Google Workspace).
    range: last 90 days
    queries:
      - pseudocode: SEARCH email_logs | WHERE (from_header != reply_to_header) OR (sender_domain MATCHES lookalike_patterns) OR (body CONTAINS financial_keywords) | ALERT
  - question: Are we receiving emails with financial keywords from senders who rarely or have never communicated with the recipient before?
    context: BEC attacks often come from external accounts impersonating an internal or trusted party. By modeling the communication graph, we can identify when a financially-themed request comes from an unusual source. A request for a wire transfer from someone who has never emailed the recipient before is highly suspicious.
    answer_sources:
      - Zeek smtp.log
      - Email gateway logs
      - Microsoft 365 audit logs
      - Email gateways, mail servers, network sensors monitoring SMTP traffic, and cloud email tenants (e.g., Microsoft 365, Google Workspace).
    range: last 90 days
    queries:
      - pseudocode: SEARCH email_logs | CALCULATE sender_recipient_frequency | WHERE (body CONTAINS financial_keywords) AND (frequency < 5th_percentile) | ALERT
  - question: Can we use an NLP model to analyze the text of incoming emails and classify them as potential BEC attempts based on linguistic patterns?
    context: This question applies advanced NLP to understand the intent and style of an email, going beyond simple keyword matching. A trained model can detect subtle cues of social engineering, such as manufactured urgency, unusual sentiment, and sentence structures common in phishing campaigns, providing a more robust defense against sophisticated BEC.
    answer_sources:
      - Zeek smtp.log
      - Email gateway logs
      - Microsoft 365 audit logs
      - Email gateways, mail servers, network sensors monitoring SMTP traffic, and cloud email tenants (e.g., Microsoft 365, Google Workspace).
    range: last 90 days
    queries:
      - pseudocode: SCORE email_body WITH NLP_model('bec_classifier') | WHERE classification == 'BEC' AND confidence > 0.9 | ALERT
  - question: Has a user logged in from a known malicious IP (e.g., TOR exit node) and then immediately accessed a financial services website?
    context: This question correlates two high-risk events to detect account takeover. A login from a suspicious location is an anomaly, but when it's immediately followed by access to banking or financial sites, it strongly suggests an adversary is using a compromised account to perform financial theft.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - VPN logs
      - SSO provider logs
      - Authentication servers (e.g., Active Directory), VPN concentrators, SSO platforms, and network egress points.
    range: last 90 days
    queries:
      - pseudocode: SEQUENCE (SEARCH login_logs | WHERE source_ip IN malicious_watchlist) followed by (SEARCH network_logs | WHERE user=login_user AND destination_category='Financial Services') within 30m
  - question: Are users with high-risk login scores (based on factors like location, time, and device) subsequently making sensitive web requests, such as HTTP POSTs to payment URIs?
    context: This question uses a risk-scoring model to quantify the suspiciousness of a login and correlates it with subsequent sensitive actions. Instead of a single indicator, it aggregates multiple weak signals (rare country, odd hours) into a strong one, and links it to behavior directly associated with transferring funds or changing financial data.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - VPN logs
      - SSO provider logs
      - Authentication servers (e.g., Active Directory), VPN concentrators, SSO platforms, and network egress points.
    range: last 90 days
    queries:
      - pseudocode: CALCULATE login_risk_score | WHERE risk_score > 98th_percentile | CORRELATE with subsequent http_logs WHERE method='POST' AND uri CONTAINS ('transfer', 'payment')
  - question: Are there user sessions that exhibit an anomalous sequence of activities, such as a high-risk login followed immediately by access to financial applications, deviating from normal user behavior patterns?
    context: This question looks at the entire user session as a behavioral fingerprint. A legitimate user might log in, check email, then access a financial app. An adversary might log in and go straight to the financial app. A sequence-based model like an LSTM can learn these normal 'storylines' and flag sessions that have a high reconstruction error, indicating a deviation from expected behavior.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - VPN logs
      - SSO provider logs
      - Authentication servers (e.g., Active Directory), VPN concentrators, SSO platforms, and network egress points.
    range: last 90 days
    queries:
      - pseudocode: SCORE user_session_sequence WITH ML_model('lstm_autoencoder') | WHERE reconstruction_error is high AND session CONTAINS ('high_risk_login', 'financial_app_access') | ALERT
  - question: Is an unauthorized user or process attempting to access critical financial files or database tables?
    context: This question implements a zero-trust model for critical data. By maintaining a strict allow list of users and processes permitted to access sensitive financial data, any access attempt from an entity not on that list is immediately flagged as a high-priority security event, potentially indicating insider threat or a compromised account.
    answer_sources:
      - Windows Event ID 4663
      - Zeek conn.log
      - Database audit logs
      - Financial databases (e.g., ERP systems), payment processing servers, file servers containing sensitive accounting or payroll data, and cloud storage buckets containing financial data.
    range: last 90 days
    queries:
      - pseudocode: SEARCH data_access_logs | WHERE resource IN critical_financial_assets AND user NOT IN allow_list | ALERT
  - question: Are critical financial servers experiencing an anomalous spike in access, either by the number of unique users or by access occurring during historically inactive periods?
    context: This question seeks to detect unusual patterns of mass access. A sudden spike in the number of users accessing a payroll database, or access occurring at 3 AM when it's normally idle, can indicate a 'smash and grab' data theft attempt or automated reconnaissance by an adversary. This is a volumetric anomaly detection approach.
    answer_sources:
      - Windows Event ID 4663
      - Zeek conn.log
      - Database audit logs
      - Financial databases (e.g., ERP systems), payment processing servers, file servers containing sensitive accounting or payroll data, and cloud storage buckets containing financial data.
    range: last 90 days
    queries:
      - pseudocode: SEARCH access_logs for financial_servers | AGGREGATE unique_users by hour | BASELINE per_hour | WHERE unique_users > (mean + 3*stddev) OR access_time in non-business_hours
  - question: Is any user accessing financial data in a way that is inconsistent with the behavior of their peer group (e.g., a marketing user accessing payroll data)?
    context: This question identifies insider threats or compromised accounts by detecting when a user's behavior deviates from their role. By clustering users with similar data access patterns (e.g., the 'Accounting' group, the 'Marketing' group), we can automatically flag when a user starts acting like a member of a different group, which is highly anomalous.
    answer_sources:
      - Windows Event ID 4663
      - Zeek conn.log
      - Database audit logs
      - Financial databases (e.g., ERP systems), payment processing servers, file servers containing sensitive accounting or payroll data, and cloud storage buckets containing financial data.
    range: last 90 days
    queries:
      - pseudocode: CLUSTER users by data_access_patterns | FOR each new_access_event | IF distance_from_cluster_centroid is high | ALERT
  - question: Are unusual file types, such as compressed archives (.zip, .rar) or database backups (.bak), being transferred out of the network from critical financial servers?
    context: This question looks for signs of data staging and exfiltration. Adversaries often compress large amounts of data into an archive before exfiltrating it. A production database server should not be sending ZIP files to external IP addresses; detecting such an event is a strong indicator of data theft.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - DLP solution logs
      - Critical data repositories, database servers, file servers, and network egress points.
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_transfer_logs | WHERE source_server IN critical_financial_servers AND destination_ip is external AND file_type IN ('.zip', '.rar', '.7z', '.bak') | ALERT
  - question: Has any critical financial server sent an anomalously large amount of data out of the network in a short period?
    context: This question aims to detect bulk data exfiltration by monitoring data volume. By establishing a baseline of normal outbound traffic for each sensitive server, we can use statistical methods like the IQR to automatically detect significant spikes in data transfer that could represent an adversary exfiltrating large financial datasets.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - DLP solution logs
      - Critical data repositories, database servers, file servers, and network egress points.
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs | AGGREGATE outbound_bytes by hour for critical_servers | BASELINE using IQR | WHERE outbound_bytes > (Q3 + 1.5*IQR) | ALERT
  - question: Can we use a machine learning model to identify outbound network connections from financial servers that are anomalous across multiple features (destination, port, volume, etc.)?
    context: This question uses a more sophisticated, multi-dimensional approach to anomaly detection. A one-class SVM can learn the complex boundary of 'normal' behavior for a server's outbound connections. Any connection that falls outside this learned boundary, even if no single feature is an outlier, is flagged as suspicious, allowing for the detection of novel exfiltration techniques.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - DLP solution logs
      - Critical data repositories, database servers, file servers, and network egress points.
    range: last 90 days
    queries:
      - pseudocode: SCORE outbound_connections WITH ML_model('one_class_svm_exfil') | WHERE classification == 'anomaly' | ALERT