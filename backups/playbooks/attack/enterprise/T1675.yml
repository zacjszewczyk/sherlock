name: T1675: ESXi Administration Command
id: d8e9f0a1-4b7c-4d3e-9a6b-8f1c2d3e4f5a
description: This playbook investigates whether an adversary has executed commands on guest virtual machines (VMs) using ESXi administration services. The primary focus is on detecting anomalous activity originating from the VMware Tools service daemon (vmtoolsd.exe). Indicators include processes spawned by vmtoolsd.exe that match threat intelligence, the spawning of command-line interpreters, deviations from established process baselines, correlation with network activity from ESXi hosts on TCP port 902, and evidence of commands being executed across a large number of VMs in a short period, which could indicate lateral movement.
type: technique
related:
  - TA0002: Execution
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Is a process spawned by vmtoolsd.exe matching known-bad indicators from threat intelligence?
    context: This question aims to identify definitive malicious activity. By correlating processes created by vmtoolsd.exe with threat intelligence feeds, we can detect known malicious tools or connections to command-and-control (C2) infrastructure. A match on a process hash, command-line argument, destination IP, or queried domain is a high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
      - Network Egress Points
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each event WHERE parent_process is "vmtoolsd.exe"
            GET child_process_hash, command_line, process_id, hostname
            SEARCH network_logs for process_id
            GET destination_ip, dns_query
            CHECK threat_intel for child_process_hash, command_line, destination_ip, dns_query
            IF match_found THEN ALERT
  - question: Has vmtoolsd.exe spawned a process with a historically rare or unusual command-line argument?
    context: Adversaries often use unique or seldom-seen commands to perform their objectives. This question uses a statistical approach (TF-IDF) to baseline normal command-line activity for processes spawned by vmtoolsd.exe. By identifying commands with tokens that are historically rare across the environment, we can uncover suspicious or novel execution that would be missed by signature-based detection.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
      - Network Egress Points
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GET all command_lines where parent_process is "vmtoolsd.exe"
          CALCULATE TF-IDF scores for all tokens in command_lines
          FOR each new command_line
            IF any token_score < 1st_percentile_threshold
            THEN ALERT
  - question: Does a command line associated with a vmtoolsd.exe child process score as highly malicious by a machine learning model?
    context: This question leverages a supervised machine learning model to proactively score the potential maliciousness of a command line, even if it doesn't match a known indicator. The model is trained on features characteristic of malicious commands (e.g., high entropy, obfuscation, presence of certain keywords). This allows for the detection of emerging or polymorphic threats that evade traditional detection methods.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
      - Network Egress Points
      - Threat Intelligence Platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new command_line where parent_process is "vmtoolsd.exe"
            EXTRACT features (length, entropy, keywords)
            APPLY trained_ML_model to features
            GET maliciousness_score
            IF maliciousness_score > high_threshold
            THEN ALERT
  - question: Has vmtoolsd.exe been observed spawning a command-line interpreter or scripting engine?
    context: The vmtoolsd.exe process should not legitimately spawn shells or scripting engines like cmd.exe or powershell.exe. This behavior is a very strong indicator that an adversary has compromised the ESXi host and is using it to execute arbitrary commands on the guest VM. Such an event should be treated as a high-priority alert requiring immediate investigation.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each event WHERE parent_process is "vmtoolsd.exe"
            IF child_process is in [cmd.exe, powershell.exe, pwsh.exe, wscript.exe, cscript.exe, sh, bash, zsh, rundll32.exe]
            THEN CREATE high_priority_alert
  - question: Is there an increase in the count or variety of shell processes being spawned by vmtoolsd.exe on any given host?
    context: This question seeks to identify anomalous shell spawning activity by establishing a baseline. Since the legitimate number of shells spawned by vmtoolsd.exe is zero, any count greater than zero is an anomaly. Monitoring the entropy of parent-child process pairs can also detect when vmtoolsd.exe begins spawning an uncharacteristically diverse set of processes, which could indicate malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host
            COUNT child_processes where parent is "vmtoolsd.exe" and child is a shell over last 30 days
            IF count > 0 THEN ALERT
          CALCULATE entropy of (vmtoolsd.exe, child_process) pairs
          IF entropy spikes THEN ALERT
  - question: Does a process execution sequence analysis model detect vmtoolsd.exe spawning a shell as a high-probability anomaly?
    context: This question applies advanced sequence analysis to detect illegitimate process chains. A model like an LSTM can learn the normal, expected sequences of process creation on a system. A sequence where vmtoolsd.exe spawns a shell is fundamentally abnormal and would be flagged by a trained model as a significant deviation, providing a robust method for detecting this specific attack pattern.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new process_creation_event
            ADD to process execution sequence for the host
            APPLY sequence_analysis_model (LSTM) to the sequence
            IF model flags "vmtoolsd.exe -> shell" as anomalous
            THEN ALERT
  - question: Has vmtoolsd.exe spawned a child process that is not on the established allowlist of legitimate processes?
    context: This question uses an allowlisting approach for high-fidelity alerting. The set of legitimate child processes for vmtoolsd.exe is very small and well-defined. By creating an alert for any process not on this list, we can effectively detect almost any unauthorized command execution originating from a compromised ESXi host via this vector.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE allowlist = [known_good_processes]
          FOR each event WHERE parent_process is "vmtoolsd.exe"
            IF child_process is NOT in allowlist
            THEN ALERT
  - question: Has vmtoolsd.exe spawned a child process that is statistically rare across the environment?
    context: This question aims to identify outliers by analyzing the prevalence of child processes across all guest VMs. An adversary might use a custom tool or a legitimate but rarely used binary to evade detection. By flagging processes that appear on a very small percentage of hosts, we can uncover this 'low and slow' activity that might otherwise go unnoticed.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE prevalence of each child_process for parent "vmtoolsd.exe" across all hosts over 30 days
          FOR each new child_process event
            IF prevalence < 1% of hosts
            THEN ALERT
  - question: Does an unsupervised anomaly detection model identify a child process of vmtoolsd.exe as a significant outlier?
    context: This question uses unsupervised machine learning to build a profile of 'normal' for vmtoolsd.exe child processes without needing pre-labeled malicious data. Algorithms like Isolation Forest are effective at identifying outliers that differ from the established norm based on features like process name and command-line characteristics. This provides a flexible way to detect novel or unusual malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Guest Virtual Machines (especially Domain Controllers, Database Servers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN one-class_SVM or Isolation_Forest model on features of normal "vmtoolsd.exe" child processes
          FOR each new child_process event
            EXTRACT features (process_name, cmd_length, user)
            APPLY model to features
            IF model flags as outlier/anomaly
            THEN ALERT
  - question: Was a network connection from an ESXi host to a guest on port 902 shortly followed by suspicious process creation by vmtoolsd.exe on that guest?
    context: This question links network activity to host behavior to establish a causal chain of events. A connection on the VMware Tools port (902) from an ESXi host immediately followed by suspicious process activity (like shell spawning or recon commands) on the guest is strong evidence of an adversary using the hypervisor to execute commands on the VM. The tight time window (2 minutes) is key to reducing false positives.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Zeek dns.log
      - ESXi Host Management Interfaces
      - vCenter Server
      - Virtual Machine Network Segments
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each network_connection WHERE dest_port is 902 and source_ip is ESXi_host
            GET dest_ip, timestamp
            SEARCH process_events on dest_ip within timestamp + 2 minutes
            IF parent_process is "vmtoolsd.exe" AND child_process is suspicious
            THEN ALERT
  - question: Is a spike in network traffic on port 902 from an ESXi host correlated with a spike in processes spawned by vmtoolsd.exe on the guest VM?
    context: This question uses time-series analysis to detect anomalous volumes of activity. A sudden increase in the amount of data or number of connections on port 902, followed by a burst of process creation from vmtoolsd.exe, can indicate an adversary pushing a large script or tool to the guest for execution. Comparing activity to a historical baseline helps identify significant deviations from normal operations.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Zeek dns.log
      - ESXi Host Management Interfaces
      - vCenter Server
      - Virtual Machine Network Segments
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each guest_vm
            BASELINE daily traffic volume/count on TCP 902 from ESXi hosts
            DETECT spikes in traffic (e.g., > 3 std deviations)
            IF spike detected
              CHECK for corresponding spike in "vmtoolsd.exe" child processes on the same VM
              IF both spikes correlate in time
              THEN ALERT
  - question: Can a graph-based analysis model identify the attack pattern of an ESXi host connecting to a guest VM and causing an anomalous process to be spawned?
    context: This question models the attack as a specific pattern within a larger graph of system activity. By representing hosts, processes, and their relationships (connections, spawns) as a graph, we can search for the explicit subgraph that represents this attack technique. This approach is powerful for visualizing and detecting complex, multi-stage attack chains that might be missed when looking at individual events in isolation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Zeek dns.log
      - ESXi Host Management Interfaces
      - vCenter Server
      - Virtual Machine Network Segments
      - Network Egress Points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BUILD graph with nodes (hosts, processes) and edges (connects_to, spawns)
          SEARCH for subgraph pattern:
            (Node A: ESXi Host) -> [Edge: connects_on_902] -> (Node B: Guest VM)
            (Node B) -> [Edge: spawns] -> (Node C: vmtoolsd.exe)
            (Node C) -> [Edge: spawns] -> (Node D: Anomalous Process)
          IF pattern is found, ALERT
  - question: Is a single source IP address executing commands via vmtoolsd.exe across an unusually large number of guest VMs in a short time?
    context: This question aims to detect large-scale, automated attacks like ransomware deployment or lateral movement. An adversary who has compromised a central point like an ESXi host or vCenter may try to execute commands on many VMs simultaneously. By counting the number of distinct VMs targeted by a single source IP within a small time window, we can detect this 'fan-out' behavior.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Guest Virtual Machines (fleet-wide)
      - ESXi Host Management Interfaces
      - vCenter Server
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip associated with vmtoolsd.exe-spawned processes
            COUNT distinct target_vms in a 5-minute window
            IF distinct_vms > 10
            THEN ALERT
  - question: Is there a sudden increase in the entropy of guest VMs being targeted by a single source IP for command execution via vmtoolsd.exe?
    context: This question uses information theory to detect a shift in targeting behavior. A legitimate administrative action might target a few related VMs, resulting in low entropy. An automated attack, however, often targets a wide and diverse set of VMs, leading to a sharp increase in the Shannon entropy of the target set. This statistical measure can effectively distinguish between normal and malicious 'fan-out' activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Guest Virtual Machines (fleet-wide)
      - ESXi Host Management Interfaces
      - vCenter Server
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip over a 10-minute rolling window
            GET list of target_vm_ips
            CALCULATE shannon_entropy of the list
            IF entropy shows a sharp increase from baseline
            THEN ALERT
  - question: Does a density-based clustering algorithm identify an anomalous cluster of events indicating a coordinated attack from a single source to many VMs?
    context: This question applies clustering to find dense pockets of suspicious activity. A coordinated attack from one source to many destinations in a short time will form a dense cluster in a feature space defined by source, destination, and time. An algorithm like DBSCAN can automatically identify these clusters as anomalies, providing a powerful way to detect mass execution events without predefined thresholds.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Guest Virtual Machines (fleet-wide)
      - ESXi Host Management Interfaces
      - vCenter Server
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CREATE dataset of events with features (source_ip, timestamp, target_vm_ip)
          APPLY DBSCAN algorithm to the dataset
          IF a dense cluster is identified with a single source_ip and many target_vm_ips in a short time
          THEN ALERT on the cluster