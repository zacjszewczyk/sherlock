name: T1069.001: Local Groups
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps to determine if an adversary is performing host discovery to identify local groups and permissions. It focuses on detecting local group enumeration through various methods, including the execution of malicious tools (like PowerSploit, BloodHound), built-in Windows utilities (`net.exe`, `whoami.exe`), PowerShell cmdlets (`Get-LocalGroup`), remote enumeration across multiple hosts, and the temporal clustering of these activities with other discovery techniques.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a process with a file hash known to be malicious for reconnaissance tools been executed on any endpoints?
    context: This question aims to detect the presence of well-known adversary tools like PowerSploit, BloodHound, or other post-exploitation frameworks by matching their file hashes against a threat intelligence database. A direct match is a high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE event_id = 4688 | COMPARE process_hash against known_malicious_hashes_list
  - question: Are there any reconnaissance-related processes executing on an unusually small number of endpoints, suggesting non-standard or unauthorized software?
    context: This question helps uncover potentially malicious tools that are not yet in threat intelligence feeds. By identifying processes that are extremely rare in the environment (e.g., running on fewer than 5 machines), analysts can focus on outliers that may represent custom malware or newly introduced adversary tools.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs | GROUP BY process_hash | CALCULATE endpoint_count | FILTER endpoint_count < 5
  - question: Can we identify and prioritize unknown or rare process hashes that exhibit characteristics of malicious software?
    context: This question leverages a machine learning model to score the reputation of file hashes that are not definitively known-good or known-bad. The model analyzes features like hash prevalence, code signing status, and age to predict the likelihood of a file being malicious, enabling analysts to prioritize investigation of the highest-risk unknown files.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: INPUT process_hash, prevalence, signing_info, first_seen | APPLY file_reputation_model | FILTER score > threshold
  - question: Have built-in Windows utilities like 'net.exe' or 'whoami.exe' been used to enumerate local groups, especially from an anomalous parent process or non-administrator account?
    context: Adversaries often use legitimate system tools ('living off the land') to avoid detection. This question looks for specific command-line arguments (`net localgroup`, `whoami /groups`) that indicate local group discovery. The context of the execution, such as being launched by Microsoft Office or by a standard user, is critical for identifying malicious use.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs WHERE command_line CONTAINS ('net localgroup', 'net group', 'whoami /groups') AND (parent_process NOT IN ('cmd.exe', 'powershell.exe') OR user_is_not_admin)
  - question: Has any user exhibited an abnormal spike in the frequency of executing local group enumeration commands compared to their own baseline?
    context: This question uses statistical analysis to detect unusual behavior from a specific user. While a single enumeration command might be benign, a sudden and significant increase in this activity for one user can indicate automated scripting or active reconnaissance, warranting an alert.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process_creation_logs for enumeration_commands | FOR_EACH user | CALCULATE daily_count | COMPARE daily_count to user_baseline (mean + 3*std_dev)
  - question: Are local group enumeration commands appearing within a sequence of user actions that is statistically unlikely for that user's role or normal behavior?
    context: This question uses a sequence analysis model to understand the narrative of a user's session. It aims to detect when enumeration commands are part of a suspicious chain of events, such as following a file download from an untrusted source or being mixed with other discovery activities, which is more indicative of malicious intent than isolated commands.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: INPUT user_command_sequence | APPLY session_analysis_model | FILTER sequence_is_anomalous AND sequence_contains_enumeration_command
  - question: Has a PowerShell script been executed that contains cmdlets or .NET types used for local group enumeration, and is this script not on an approved list?
    context: This question targets PowerShell-based discovery by searching for specific cmdlets (`Get-LocalGroup`) and .NET accelerators (`[adsi]`) within script block logs. By maintaining an allowlist of known-good administrative scripts, this query can effectively filter out legitimate activity and alert only on unauthorized or unknown scripts performing enumeration.
    answer_sources:
      - Windows Event ID 4104
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH powershell_script_logs WHERE event_id = 4104 AND script_block CONTAINS ('Get-LocalGroup', '[adsi]') AND script_hash NOT IN allowlist
  - question: Are there any PowerShell script blocks containing enumeration keywords that also have an unusually high entropy score, suggesting obfuscation?
    context: Adversaries frequently obfuscate PowerShell code to evade simple keyword-based detection. This question identifies suspicious scripts by combining two indicators, the presence of enumeration keywords and a high Shannon entropy score. High entropy suggests the script is compressed or encoded, which is a common tactic for hiding malicious payloads.
    answer_sources:
      - Windows Event ID 4104
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH powershell_script_logs WHERE event_id = 4104 AND script_block CONTAINS ('Get-LocalGroup') | CALCULATE entropy(script_block) | FILTER entropy > baseline_threshold
  - question: Can a machine learning model classify PowerShell script blocks as malicious in real-time, specifically prioritizing those that perform local group enumeration?
    context: This question applies a text classification model trained on a large corpus of benign and malicious scripts to automatically assess the risk of every new PowerShell script executed. This approach moves beyond simple keywords or entropy to understand the linguistic patterns of malicious code, allowing for more accurate and prioritized alerting on scripts classified as malicious that also contain enumeration logic.
    answer_sources:
      - Windows Event ID 4104
      - Domain Controllers
      - Member Servers
      - Privileged Access Workstations
      - User Endpoints
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: INPUT script_block | APPLY powershell_classification_model | FILTER classification = 'malicious' AND script_block CONTAINS ('Get-LocalGroup')
  - question: Has a single user account or host attempted to enumerate local groups on a large number of different hosts within a short time frame?
    context: This question seeks to identify automated, large-scale discovery activity. A single user or machine rapidly querying local groups across many systems (e.g., more than 10 in an hour) is highly anomalous and a strong indicator of an adversary using a script to map out permissions across the network.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized SIEM/Log Aggregator
      - Network Egress/Ingress Points
      - Internal Network Segments
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH enumeration_events (Event ID 4798) | GROUP BY source_user, time_window=1h | CALCULATE distinct_destination_hosts | FILTER distinct_destination_hosts > 10
  - question: Is any user or host enumerating a number of distinct hosts that significantly exceeds the established baseline for normal 'fan-out' behavior in the environment?
    context: This question operationalizes the detection of 'fan-out' behavior by comparing it to a dynamically calculated threshold (e.g., the 99th percentile). Instead of a fixed number, this approach adapts to the environment's normal activity levels, reducing false positives in large or active networks while still catching statistically significant outliers.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized SIEM/Log Aggregator
      - Network Egress/Ingress Points
      - Internal Network Segments
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH enumeration_events | GROUP BY source_user, time_window=1h | CALCULATE distinct_destination_hosts | FILTER distinct_destination_hosts > percentile(99)
  - question: Is a user enumerating hosts that fall outside of their normal activity cluster or community, as defined by graph analysis?
    context: This question models user-to-host interactions as a graph to understand normal relationships and roles. An anomaly is flagged when a user, such as a developer, suddenly starts enumerating local groups on servers belonging to a different community, like the finance department's servers. This detects behavior that violates established access patterns and may indicate lateral movement.
    answer_sources:
      - Windows Event ID 4798
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized SIEM/Log Aggregator
      - Network Egress/Ingress Points
      - Internal Network Segments
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: BUILD user_to_host_graph | APPLY community_detection_algorithm | FOR_EACH new_enumeration_event | CHECK if source_user and destination_host are in different_communities
  - question: Is local group enumeration activity occurring in close temporal proximity to other discovery techniques, such as network share discovery, from the same source host?
    context: This question uses a correlation rule to detect a common adversary playbook, first, find interesting groups, then look for accessible network shares. By linking these two distinct discovery events from the same source within a short time window (e.g., 15 minutes), the query can identify a logical progression of an attack with higher confidence than a single event.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Zeek conn.log
      - Zeek dns.log
      - Centralized SIEM/Log Aggregator
      - Domain Controllers
      - DNS Servers
      - Network Egress/Ingress Points
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: CORRELATE (event_A: local_group_enumeration) AND (event_B: network_share_discovery) WHERE event_A.source_host = event_B.source_host AND time_diff(event_B, event_A) < 15m
  - question: Does any single host accumulate a risk score for discovery activities that is statistically high compared to other hosts in the environment?
    context: This question aggregates various weak signals of discovery into a single, more robust risk score. Activities like group enumeration, port scanning, and remote system discovery each contribute points. An alert is triggered only when a host's total score crosses a high threshold, effectively filtering out noise and focusing on hosts engaged in a broad spectrum of reconnaissance activities.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Zeek conn.log
      - Zeek dns.log
      - Centralized SIEM/Log Aggregator
      - Domain Controllers
      - DNS Servers
      - Network Egress/Ingress Points
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: FOR_EACH host, time_window=1h | CALCULATE risk_score (points for enumeration, port scans, etc.) | FILTER risk_score > percentile(98)
  - question: Can a time-series model detect when a host's combined pattern of network, process, and DNS activity deviates significantly from its normal behavior?
    context: This question uses an advanced anomaly detection model (like an autoencoder) to learn the normal 'rhythm' of a host's behavior across multiple data sources. The model creates a feature vector representing metrics like command counts, network connections, and DNS query patterns. It alerts when the current combination of activities is a poor fit for the learned normal patterns, indicating a significant and potentially malicious state change.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4798
      - Zeek conn.log
      - Zeek dns.log
      - Centralized SIEM/Log Aggregator
      - Domain Controllers
      - DNS Servers
      - Network Egress/Ingress Points
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: FOR_EACH host | CREATE time_series_vector (enum_count, net_conn, dns_entropy) | APPLY autoencoder_model | FILTER reconstruction_error > threshold