name: T1456: Drive-By Compromise
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if a user's mobile device, connected to the corporate network, has been compromised via a watering hole or drive-by attack. It focuses on identifying suspicious web traffic patterns indicative of compromise, such as requests to malicious or newly registered domains following a visit to a high-reputation site. It also inspects transferred files, like JavaScript, for anomalous characteristics such as obfuscation, unusual size, or signatures matching known exploit kits. The playbook further analyzes HTTP redirect chains for malvertising patterns and inspects URI structures for signs of exploit delivery.
type: technique
related:
  - TA0027: Initial Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a mobile device made a web request to a known malicious domain, with a trusted site as the referrer?
    context: This identifies a classic watering hole attack. A user browses a legitimate, trusted site which has been compromised to redirect them to a malicious domain. Checking the referrer helps confirm the user was not intentionally visiting the malicious site, a key indicator of a drive-by compromise.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Threat Intelligence Feed
      - WHOIS Data
      - Corporate Wi-Fi network gateways, VPN concentrators, Cloud Access Security Broker (CASB) egress points, and central DNS resolvers used by mobile devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http_logs
          WHERE user_agent contains mobile OS identifier
          AND http_referer_domain is in trusted_sites_list
          JOIN threat_intelligence_feed ON http_logs.destination_domain = threat_feed.malicious_domain
          ALERT on match
  - question: Has a mobile device visited a newly registered domain, referred from a high-reputation site?
    context: Attackers frequently use newly registered domains (NRDs) for malicious campaigns as they have not yet been blacklisted. A mobile device being redirected from a reputable site to an NRD is highly suspicious and suggests a potential drive-by download or exploit delivery.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Threat Intelligence Feed
      - WHOIS Data
      - Corporate Wi-Fi network gateways, VPN concentrators, Cloud Access Security Broker (CASB) egress points, and central DNS resolvers used by mobile devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http_logs
          WHERE user_agent contains mobile OS identifier
          AND http_referer_domain is high_reputation
          GET WHOIS data for destination_domain
          ALERT if domain_registration_age < 30 days
  - question: Does a web request from a mobile device exhibit a combination of features that indicate a high probability of being malicious?
    context: This question uses a machine learning model to combine multiple weak signals (domain age, entropy, TLD mismatch, ASN reputation) into a single, high-confidence score. It helps detect sophisticated threats that may evade simpler, single-indicator rules by looking at the holistic profile of the web request.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Zeek conn.log
      - Threat Intelligence Feed
      - WHOIS Data
      - Corporate Wi-Fi network gateways, VPN concentrators, Cloud Access Security Broker (CASB) egress points, and central DNS resolvers used by mobile devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each web_request from mobile_user_agent
          CALCULATE features (domain_age, entropy, TLD_mismatch, ASN_reputation)
          APPLY logistic_regression_model to get probability_score
          ALERT if probability_score > 0.85
  - question: Did a downloaded JavaScript file on a mobile device match signatures for known exploit frameworks or obfuscation techniques?
    context: Drive-by compromises often deliver their payload via malicious JavaScript. This question focuses on analyzing the content of downloaded JS files using YARA rules, which can detect specific code patterns, strings, or structures associated with known mobile exploit kits (like Pegasus) or common obfuscation methods used to hide malicious code.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek weird.log
      - Zeek signatures.log
      - Network egress points with Zeek sensors performing file extraction; Web Application Firewalls (WAFs) with file inspection capabilities; Mobile devices with MDM agents capable of network inspection.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          EXTRACT files where mime_type is javascript
          SCAN extracted_files with YARA_ruleset for mobile exploits and obfuscation
          ALERT on any YARA match
  - question: Did a mobile device download a JavaScript file that is anomalously large or obfuscated compared to other files from the same source domain?
    context: This question aims to detect malicious JavaScript by baselining normal file characteristics (size, entropy) for each source domain. A legitimate site typically serves JS files with consistent properties. A file that is a statistical outlier (e.g., much larger or more obfuscated than usual for that site) could be an injected malicious payload.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek weird.log
      - Zeek signatures.log
      - Network egress points with Zeek sensors performing file extraction; Web Application Firewalls (WAFs) with file inspection capabilities; Mobile devices with MDM agents capable of network inspection.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_host
          MAINTAIN 30-day rolling baseline of JS file_size and entropy (mean, std_dev)
          FOR each new JS file downloaded to mobile device
          ALERT if file_size > (mean + 2*std_dev) AND entropy > (mean + 2*std_dev) for that source_host
  - question: Has a JavaScript file been identified as a statistical outlier when clustered with other files based on its intrinsic properties?
    context: This question applies unsupervised machine learning (DBSCAN) to find anomalous JavaScript files without relying on pre-existing signatures. By clustering files based on features like size, entropy, and use of obfuscated functions, files that do not fit into any cluster ('noise' or outliers) are flagged. These outliers are often malicious, as they do not share characteristics with legitimate files.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek weird.log
      - Zeek signatures.log
      - Network egress points with Zeek sensors performing file extraction; Web Application Firewalls (WAFs) with file inspection capabilities; Mobile devices with MDM agents capable of network inspection.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GATHER feature_vectors for all extracted JS files (size, entropy, function_ratio)
          APPLY DBSCAN clustering algorithm
          FLAG any files classified as noise/outliers for manual analysis
  - question: Was a mobile device subjected to a long redirect chain originating from an ad network and ending in a suspicious domain?
    context: 'Malvertising' is a common vector for drive-by compromises, where malicious ads redirect users through a chain of sites to an exploit landing page. This question identifies this pattern by tracking redirect chains (HTTP 3xx status codes) that start from ad networks and end at a known-bad or suspicious location, indicating a forced, non-user-initiated navigation to a threat.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Web Proxy Logs
      - Zeek ssl.log
      - Network egress points instrumented with Zeek sensors, forward proxies, DNS resolvers, and upstream web proxies.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE http_logs by session_id to build redirect_chains
          ALERT if chain from mobile_user_agent has:
          (length >= 3 within 5s) AND (initial_referer is known_ad_network) AND (final_destination is on threat_feed)
  - question: Did a mobile user experience a redirect chain that was anomalously long compared to their personal browsing history?
    context: This question establishes a behavioral baseline for each user's typical browsing patterns regarding redirects. A sudden, significant deviation, such as an unusually long redirect chain, can indicate an abnormal event like malvertising or a compromised site forcing the user's browser through multiple hops. Comparing against a personal baseline is more effective than a global threshold.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Web Proxy Logs
      - Zeek ssl.log
      - Network egress points instrumented with Zeek sensors, forward proxies, DNS resolvers, and upstream web proxies.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each user, MAINTAIN 14-day rolling baseline of redirect_chain_length (mean, std_dev)
          FOR each new redirect_chain
          ALERT if chain_length > (user_mean + 3*user_std_dev) OR chain_length > 5
  - question: Did an observed HTTP redirect chain have a structure so anomalous that a machine learning model could not reconstruct it accurately?
    context: This question uses an advanced ML model (LSTM autoencoder) to learn the 'normal' structure of redirect chains, including features like timing, status codes, and ASNs. When a new chain is observed that deviates significantly from learned patterns (resulting in a high reconstruction error), it is flagged as anomalous. This can detect novel or complex redirection techniques that simpler rules might miss.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Web Proxy Logs
      - Zeek ssl.log
      - Network egress points instrumented with Zeek sensors, forward proxies, DNS resolvers, and upstream web proxies.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN LSTM autoencoder on sequences of redirect_chain_features
          FOR each new redirect_chain
          CALCULATE reconstruction_error using the trained model
          ALERT if reconstruction_error > threshold
  - question: Did a web request from a mobile device contain a URI matching a known signature for a mobile exploit kit?
    context: Exploit kits often use specific, recognizable patterns in the URLs that deliver the exploit. This question involves using a list of these patterns (as regular expressions) to scan incoming web requests from mobile devices. A match is a strong indicator of an attempt to exploit a vulnerability on the device. The absence of a referrer makes it even more suspicious.
    answer_sources:
      - Zeek http.log
      - Zeek signatures.log
      - Threat Intelligence Feed
      - Network egress points with Zeek sensors; web proxies; and MDM/UEM management gateways.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http_logs where user_agent contains 'iOS' or 'Android'
          APPLY regex_list of mobile_exploit_kit_URIs against the uri field
          ALERT on any match, elevate priority if referer is null
  - question: Did a request from a mobile device have a URI structure that was anomalous for the destination domain?
    context: This question seeks to identify malicious requests by baselining the normal URL structure for each domain. Malicious URLs, such as those used in command-and-control or data exfiltration, often have different characteristics (e.g., longer paths, more parameters, higher entropy) than the legitimate URLs on the same domain. A high anomaly score for a URI suggests it may be malicious.
    answer_sources:
      - Zeek http.log
      - Zeek signatures.log
      - Threat Intelligence Feed
      - Network egress points with Zeek sensors; web proxies; and MDM/UEM management gateways.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each domain, CREATE baseline of URI structure (path_depth, query_params, entropy)
          FOR each new request from a mobile device
          CALCULATE 'URI Anomaly Score' based on deviation from domain's baseline
          ALERT if score > threshold
  - question: Was a URL requested by a mobile device classified as malicious by a machine learning model?
    context: This question leverages a supervised machine learning model (Random Forest) that has been trained to distinguish between malicious and benign URLs based on a wide range of features (length, keywords, character ratios, etc.). This provides a robust, score-based assessment of each URL, capable of identifying threats that don't match simple signatures or baselines.
    answer_sources:
      - Zeek http.log
      - Zeek signatures.log
      - Threat Intelligence Feed
      - Network egress points with Zeek sensors; web proxies; and MDM/UEM management gateways.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each http_request from mobile_device
          EXTRACT URL features (length, path_depth, query_entropy, keywords, etc.)
          APPLY trained Random_Forest_classifier to get score
          ALERT if score > 0.90