name: T1218.005: Mshta
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: |
  This playbook addresses the use of the trusted utility mshta.exe for defense evasion. It provides investigative steps to identify malicious activity associated with Mshta, such as network connections to known malicious IPs or domains, command lines containing suspicious script handlers or embedded data, execution by unusual parent processes (e.g., Office applications), command lines with anomalous length or entropy, anomalous network characteristics like User-Agents or beaconing, and execution of HTA files from non-standard, user-writable locations.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is mshta.exe communicating with known malicious infrastructure or executing a known malicious HTA file?
    context: |
      This question aims to identify high-confidence malicious activity by correlating mshta.exe process execution with external threat intelligence. A match indicates that mshta.exe is either connecting to a known command-and-control server or executing a file that has already been identified as malicious, providing a strong signal of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - All enterprise endpoints and servers; Network gateways and proxies; Threat Intelligence Platforms
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events (mshta.exe) AND network connection logs.
          JOIN on source IP and timestamp (within 5 seconds).
          WHERE destination IP or resolved domain in threat_intel_feed
          OR file hash in malware_hash_database.
          ALERT on match.
  - question: Is mshta.exe connecting to rare or newly observed domains?
    context: |
      Adversaries often use newly registered or algorithmically generated domains for C2 that have no history of legitimate use. This question identifies such anomalies by baselining normal domain traffic associated with mshta.exe and alerting on statistical outliers. A rare or first-seen domain is highly suspicious.
    answer_sources:
      - Zeek dns.log
      - All enterprise endpoints and servers; Network gateways and proxies; Threat Intelligence Platforms
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH network DNS logs for queries associated with mshta.exe processes.
          CALCULATE frequency of (public suffix + 1) domains over a 30-day baseline.
          ALERT if a domain's frequency is in the 99th percentile of rarity or is newly observed.
  - question: Does a domain contacted by mshta.exe exhibit characteristics of being malicious based on a machine learning model?
    context: |
      This question leverages a pre-trained machine learning model to proactively score the likelihood of a domain being malicious. The model analyzes features like domain length, character randomness (entropy), and age to identify domains created for malicious purposes, providing a more sophisticated detection method than simple blocklists.
    answer_sources:
      - Zeek dns.log
      - WHOIS data
      - All enterprise endpoints and servers; Network gateways and proxies; Threat Intelligence Platforms
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each domain contacted by mshta.exe:
            SCORE with domain_scoring_model(length, entropy, TLD, age).
            ALERT if score > 0.85.
  - question: Is mshta.exe being invoked with suspicious command-line arguments like script protocol handlers or embedded data?
    context: |
      Legitimate use of mshta.exe typically involves simple file paths. Adversaries abuse it by passing VBScript or JavaScript directly on the command line, often obfuscated or encoded (e.g., base64), to execute malicious code without dropping a file. This question looks for these specific abuse patterns.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers with command-line logging enabled
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events for mshta.exe.
          REGEX on command line for "javascript:", "vbscript:", "GetObject(\"script:", "http://", "https://", "data:text/html;base64,".
          ALERT on match.
  - question: Does an mshta.exe command line have an unusually high character entropy or length compared to the established baseline?
    context: |
      Long, complex command lines are a hallmark of obfuscation and embedded scripts. This question establishes a baseline for normal mshta.exe command line characteristics in your environment and alerts on significant deviations, which can indicate an attempt to hide malicious code.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers with command-line logging enabled
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE baseline (mean, std dev) for mshta.exe command line length and entropy over 30 days.
          ALERT if new command line's length or entropy > (mean + 3 * std dev).
  - question: Can a machine learning model classify an mshta.exe execution as malicious based on its command-line features?
    context: |
      This question applies a supervised machine learning model to automate the detection of malicious command lines. By training on known benign and malicious examples, the model learns to identify subtle patterns and combinations of features that are difficult to capture with simple rules or statistical thresholds.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers with command-line logging enabled
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each new mshta.exe execution:
            CLASSIFY with command_line_model(length, entropy, keyword_counts, n-grams).
            ALERT if classified as malicious.
  - question: Was mshta.exe launched by an unusual parent process, such as a Microsoft Office application, email client, or browser?
    context: |
      Mshta.exe is not typically launched directly by Office applications or browsers. This execution chain is a common pattern for phishing attacks where a user opens a malicious document or clicks a link, which then uses mshta.exe to run code. This question detects this suspicious parent-child relationship.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers, particularly user workstations
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events where child process is "mshta.exe".
          ALERT if parent process is in ('winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe', 'wscript.exe', 'cscript.exe', 'chrome.exe', 'firefox.exe', 'msedge.exe').
  - question: Is the parent process that launched mshta.exe statistically rare in the environment?
    context: |
      This question moves beyond a static list of suspicious parents to a data-driven approach. By baselining all parent-child relationships involving mshta.exe, it can uncover novel or environment-specific abuse cases where an attacker uses a less common but still unauthorized parent process to evade detection.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers, particularly user workstations
    range: last 90 days
    queries:
      - pseudocode: |
          BUILD frequency table of parent processes for mshta.exe over 30 days.
          ALERT if a parent process's frequency is < 1% or is previously unseen.
  - question: Does an mshta.exe execution appear as a statistical outlier when clustered with other executions based on parent process, user, and host?
    context: |
      This question uses unsupervised machine learning to find anomalous mshta.exe executions. By grouping "normal" activity into clusters based on context (who, what, where), any execution that doesn't fit into a known cluster is flagged as an outlier, potentially indicating a new or unique attack pattern.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers, particularly user workstations
    range: last 90 days
    queries:
      - pseudocode: |
          CLUSTER mshta.exe executions using DBSCAN on features (parent_process, user, host).
          ALERT on executions classified as noise/outliers.
  - question: Does the mshta.exe command line contain long encoded strings indicative of an embedded payload?
    context: |
      This question focuses on a specific type of command-line obfuscation: embedding entire scripts or binaries as long Base64 or hexadecimal strings. This is a common technique to smuggle payloads past simple keyword-based detections. Identifying these long, encoded blocks is a strong indicator of malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers with command-line logging
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events for mshta.exe.
          REGEX on command line for Base64 ([A-Za-z0-9+/=]{50,}) or Hex ([0-9a-fA-F]{50,}).
          ALERT on match.
  - question: Is the character entropy of an mshta.exe command line in the top 95th percentile compared to a rolling 30-day baseline?
    context: |
      This question operationalizes the concept of using entropy for anomaly detection. By comparing a command line's entropy against a dynamic, rolling percentile, the system can adapt to changes in normal behavior while still flagging command lines that are significantly more random (and thus likely obfuscated or encrypted) than their peers.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers with command-line logging
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE 95th percentile of command line entropy for mshta.exe over a rolling 30-day window.
          ALERT if a new command line's entropy > 95th percentile.
  - question: Does an mshta.exe command line produce a high reconstruction error when processed by an autoencoder trained on benign examples?
    context: |
      This question uses a sophisticated deep learning approach for anomaly detection. An autoencoder is trained to "reconstruct" only normal, benign command lines. When it encounters a malicious, anomalous command line, it will fail to reconstruct it accurately, resulting in a high "reconstruction error" and triggering an alert.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers with command-line logging
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each new mshta.exe command line:
            CALCULATE reconstruction_error with trained autoencoder neural network.
            ALERT if reconstruction_error > threshold.
  - question: Did a network connection from mshta.exe use an anomalous or missing User-Agent string?
    context: |
      Legitimate mshta.exe network traffic includes a specific User-Agent string. Adversaries often fail to set this, use a generic one, or use a custom one to masquerade as other traffic. This question identifies these deviations, which are strong indicators that the network connection is not part of a legitimate HTA application's behavior.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Network egress points, web proxies, and all enterprise endpoints
    range: last 90 days
    queries:
      - pseudocode: |
          JOIN mshta.exe process events with HTTP logs on host and time.
          ALERT if User-Agent is null, blank, or not containing "Microsoft HTML Application host".
  - question: Is mshta.exe communicating over a rare destination port or using a rare TLS/SSL client fingerprint (JA3/JA3S)?
    context: |
      This question looks for network-level anomalies. Attackers may use non-standard ports to evade firewalls. Furthermore, the way a client negotiates a TLS session creates a fingerprint (JA3/JA3S). A rare or new fingerprint associated with mshta.exe can indicate a malicious tool rather than the legitimate Windows utility.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, web proxies, and all enterprise endpoints
    range: last 90 days
    queries:
      - pseudocode: |
          FOR network connections from mshta.exe:
            PROFILE destination ports and JA3/JA3S hashes.
            ALERT on rare ports (<2% prevalence) or rare JA3/JA3S hashes (<1% prevalence).
  - question: Is mshta.exe exhibiting periodic, "heartbeat" network traffic indicative of C2 beaconing?
    context: |
      Command-and-control malware often "beacons" out to its controller at regular intervals. This question applies time-series analysis to network connection logs for a specific source-destination pair to detect this regularity. A strong periodic signal is a classic sign of automated C2 communications.
    answer_sources:
      - Zeek conn.log
      - Network egress points, web proxies, and all enterprise endpoints
    range: last 90 days
    queries:
      - pseudocode: |
          FOR a given source-destination IP pair from mshta.exe:
            ANALYZE time deltas between consecutive connections.
            APPLY FFT or similar time-series analysis.
            ALERT on detection of a strong periodic signal.
  - question: Is mshta.exe executing an HTA file from a suspicious, user-writable directory?
    context: |
      Legitimate HTA applications are typically installed in standard locations like Program Files. Adversaries frequently drop HTA files into temporary directories, download folders, or public user profile locations to execute them. This question looks for executions from these non-standard, high-risk paths.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers; File servers hosting user profiles or public shares
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH mshta.exe command lines for .hta file paths.
          REGEX path for 'Temp', 'Downloads', 'AppData', 'Users\Public', 'Rar$'.
          ALERT on match.
  - question: Is mshta.exe executing an HTA file from a statistically rare or previously unseen directory path?
    context: |
      This question enhances the previous one by creating a baseline of "normal" HTA execution paths within the environment. It can then alert on any execution from a directory that is statistically rare or has never been observed before, providing a data-driven way to spot anomalous file locations.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers; File servers hosting user profiles or public shares
    range: last 90 days
    queries:
      - pseudocode: |
          BUILD frequency distribution of .hta execution directory paths over 30 days.
          ALERT if a path is new or has a frequency < 0.5%.
  - question: Does the execution path of an HTA file fall outside the boundary of "normal" paths as determined by a one-class SVM model?
    context: |
      This question employs a machine learning model (One-Class SVM) that is trained only on "normal" data—in this case, legitimate HTA file paths. The model learns a boundary around this normal data. Any new execution path that falls outside this boundary is flagged as an anomaly, allowing for the detection of novel malicious file locations.
    answer_sources:
      - Windows Event ID 4688
      - All enterprise endpoints and servers; File servers hosting user profiles or public shares
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each .hta execution path:
            CLASSIFY with one-class SVM model trained on legitimate paths.
            ALERT if path is classified as an outlier.