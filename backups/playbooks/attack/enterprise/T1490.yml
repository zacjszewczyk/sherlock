name: T1490: Inhibit System Recovery
id: 5a8a1e2f-3b4c-4d5e-8f6a-7b8c9d0e1f2a
description: An adversary is attempting to inhibit system recovery capabilities to prevent restoration after an attack. This involves detecting processes matching known ransomware/wiper hashes, the misuse of native Windows utilities (like vssadmin, wmic, bcdedit) to delete backups or disable recovery, high-volume deletion of backup files (.bak, .vhd), and unauthorized network access to hypervisor or cloud storage APIs to delete snapshots or backups.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are processes being executed that match the file hashes of known ransomware or wiper tools from threat intelligence feeds?
    context: This question is critical for early detection of known, high-impact threats. By continuously monitoring for process creations and comparing their file hashes against a curated list of malicious indicators, an organization can immediately identify the execution of known ransomware or wiper malware. A match provides a high-confidence signal of a severe security incident in progress, allowing for a rapid response to contain the threat before widespread damage occurs.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - All domain-joined Windows endpoints and servers, especially critical application servers and domain controllers, and network egress points.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
            GET file_hash
            IF file_hash IN known_malicious_hash_feed
              ALERT 'Known malicious tool detected'
  - question: Are rare and unsigned executables being run, which could indicate the presence of novel or packed malware designed to evade signature-based detection?
    context: This question helps uncover previously unseen malware. Attackers often use custom tools or packers that result in executables with very low prevalence across an enterprise. By focusing on files that are both rare and lack a valid digital signature from a trusted publisher, security analysts can prioritize suspicious binaries for deeper investigation. This statistical approach acts as a safety net to catch threats that signature-based methods might miss.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - All domain-joined Windows endpoints and servers, especially critical application servers and domain controllers, and network egress points.
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_executable_hash
            CALCULATE prevalence_count over 30 days
            GET signature_status
            IF prevalence_count < 5 AND signature_status is not 'trusted'
              CALCULATE risk_score
              IF risk_score > threshold
                ALERT 'Anomalous rare/unsigned executable detected'
  - question: Can we use machine learning to predictively identify malicious process executions in real-time based on their behavioral characteristics?
    context: This question addresses the need for proactive and automated threat detection. A machine learning model can learn the complex patterns that distinguish malicious process behavior (e.g., unusual parent processes, high-entropy command lines) from benign activity. By deploying such a model, security teams can score process executions in real-time, automatically flagging high-risk events that might otherwise go unnoticed, thus reducing analyst workload and speeding up response times.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - All domain-joined Windows endpoints and servers, especially critical application servers and domain controllers, and network egress points.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation_event
            EXTRACT features (parent_process, cmd_line_entropy, etc.)
            INPUT features INTO classification_model
            GET confidence_score
            IF confidence_score > 0.90
              ALERT 'ML model classified process as malicious'
  - question: Are native Windows utilities like vssadmin, wmic, or bcdedit being used with specific commands to delete backups or disable system recovery features?
    context: This is a key question for detecting 'living-off-the-land' techniques, where adversaries use legitimate system tools for malicious purposes. Monitoring for the exact command-line arguments used to delete volume shadow copies, backup catalogs, or disable recovery mode is a high-fidelity way to detect an active attempt to sabotage system restorability. An alert on these specific patterns is a strong indicator of an adversary trying to ensure their attack has a lasting impact.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - Domain Controllers, file servers with Volume Shadow Copy enabled, Windows servers hosting critical backups, and all other Windows endpoints and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each process_creation or powershell_log
            IF process_name IN ('vssadmin.exe', 'wmic.exe', 'bcdedit.exe', etc.)
              AND command_line MATCHES /(delete shadows|shadowcopy delete|recoveryenabled no)/
              ALERT 'Suspicious use of recovery utility detected'
  - question: Are system recovery utilities being executed in a statistically anomalous manner, such as by unusual users, with high-entropy command lines, or outside of normal administrative hours?
    context: This question helps detect subtle or novel abuses of system utilities that may not match a specific, known-bad command. By baselining normal usage patterns for tools like 'vssadmin', analysts can spot deviations. For example, an execution by a non-admin user for the first time, or a command with unusually high complexity (entropy), could signify an attacker experimenting or using a custom script. This approach adds a layer of behavioral anomaly detection on top of simple signature matching.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - Domain Controllers, file servers with Volume Shadow Copy enabled, Windows servers hosting critical backups, and all other Windows endpoints and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each execution of target_utility
            CALCULATE command_line_entropy
            CHECK if user has run this before
            COMPARE execution_time to business_hours_baseline
            IF entropy > 95th_percentile OR is_first_time_user
              ALERT 'Anomalous execution of recovery utility'
  - question: Can we detect malicious sequences of commands involving system recovery utilities, such as a reconnaissance command immediately followed by a destructive one?
    context: This question aims to identify malicious intent by analyzing the *sequence* of actions, not just a single event. A legitimate administrator might list shadow copies for inventory, but an attacker is more likely to list them and then immediately delete them. A sequence analysis model can learn these normal administrative workflows and flag deviations, such as an immediate 'delete' after a 'list', especially when performed by an unusual account. This provides contextual awareness that is difficult to achieve with single-event rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - Domain Controllers, file servers with Volume Shadow Copy enabled, Windows servers hosting critical backups, and all other Windows endpoints and servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL trained on normal admin command sequences
          FOR each new_command_sequence
            IF sequence IS ('vssadmin list shadows', THEN 'vssadmin delete shadows /all')
              AND user IS not standard_admin
              ALERT 'Anomalous destructive command sequence detected'
  - question: Is a single user or process rapidly deleting a large number of files with backup-related extensions or from critical system locations?
    context: This question targets a classic ransomware behavior: the rapid and widespread destruction of backup files to prevent recovery. By setting a clear threshold (e.g., >100 deletions in 5 minutes) for files with extensions like '.bak' or '.vhd', or in paths like 'System Volume Information', security teams can create a high-confidence alert for this specific destructive activity. This rule-based approach is effective for catching automated, high-volume deletion scripts.
    answer_sources:
      - Windows Event ID 23 (Sysmon)
      - Windows Event ID 4663
      - Windows Event ID 5145
      - Network file shares hosting backups, servers with local backup copies, and the 'System Volume Information' directory on all Windows hosts.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE file_delete_events by user/process over 5 minutes
          WHERE file_extension IN ('.bak', '.vhd', '.vhdx') OR path CONTAINS 'System Volume Information'
          IF delete_count > 100
            ALERT 'High-volume deletion of backup files detected'
  - question: Are there statistically significant spikes in file deletion activity for a given user or host, especially involving non-administrative accounts or low-prevalence processes?
    context: This question provides a more dynamic way to detect abnormal deletion activity without relying on a fixed threshold. By baselining the normal rate of file deletions for each user and host, a system can automatically flag any significant deviation from the norm (e.g., exceeding the 99th percentile). Enriching this alert with context, such as whether the action was performed by a non-admin account or an unknown process, helps analysts quickly prioritize the most suspicious events for investigation.
    answer_sources:
      - Windows Event ID 23 (Sysmon)
      - Windows Event ID 4663
      - Windows Event ID 5145
      - Network file shares hosting backups, servers with local backup copies, and the 'System Volume Information' directory on all Windows hosts.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host/user
            CALCULATE baseline_deletion_rate_per_hour
            IF current_deletion_rate > 99th_percentile_of_baseline
              AND (user IS not admin OR process IS unsigned/rare)
              ALERT 'Anomalous spike in file deletion activity'
  - question: Are there clusters of hosts that are exhibiting synchronized, high-volume file deletion behavior, indicating a coordinated, automated attack?
    context: This question seeks to identify widespread, coordinated attacks like a ransomware outbreak across multiple machines. An unsupervised clustering algorithm can group hosts based on their real-time behaviors. If a group of hosts suddenly and simultaneously starts exhibiting high rates of backup file deletion, they will form a distinct cluster. This machine-driven discovery of 'outlier' host groups provides a powerful, macro-level view of a coordinated attack that might be missed by analyzing hosts individually.
    answer_sources:
      - Windows Event ID 23 (Sysmon)
      - Windows Event ID 4663
      - Windows Event ID 5145
      - Network file shares hosting backups, servers with local backup copies, and the 'System Volume Information' directory on all Windows hosts.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          INPUT host_behavior_features (deletion_rate, file_types) into DBSCAN model
          IF model identifies a new cluster of hosts with high deletion activity
            ALERT 'Coordinated high-volume deletion detected across multiple hosts'
  - question: Are unauthorized systems attempting to connect to hypervisor management interfaces (vCenter, ESXi) or cloud storage APIs?
    context: This question focuses on protecting the control plane of virtualized and cloud environments. Since access to these management interfaces should be tightly controlled, any connection attempt from an IP address not on a pre-approved allowlist is highly suspicious. This rule provides a simple yet effective tripwire to detect unauthorized reconnaissance or attempts to gain access to the infrastructure where backups and virtual machine snapshots are managed.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 3 (Sysmon)
      - Hypervisor management network segment (vCenter, ESXi hosts), network egress points to public cloud providers, and network boundaries between user and server segments.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MAINTAIN allowlist of admin IPs
          FOR each network_connection to management_ports (443, 902)
            IF source_ip NOT IN admin_allowlist
              ALERT 'Unauthorized connection attempt to backup infrastructure'
  - question: Are authorized users performing a statistically unusual number of destructive actions (like deleting snapshots or backups) against virtualization or cloud infrastructure?
    context: This question addresses the insider threat or compromised account scenario. Even an authorized user has a normal pattern of behavior. By baselining the frequency of destructive API calls (e.g., 'delete snapshot') per user, the system can detect when an account performs an anomalously high number of these actions. A sudden spike—for instance, an admin account deleting 100 snapshots when it normally deletes one or two—is a strong indicator of compromise or malicious intent.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 3 (Sysmon)
      - Hypervisor management network segment (vCenter, ESXi hosts), network egress points to public cloud providers, and network boundaries between user and server segments.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each authorized_user
            CALCULATE baseline_destructive_api_call_rate
            IF current_rate > (mean + 3 * std_dev) of baseline
              ALERT 'Anomalous volume of destructive API calls from authorized user'
  - question: Are users or automated systems interacting with virtualization or cloud APIs in an anomalous sequence, such as deleting resources without prior inspection?
    context: This question aims to detect malicious intent by analyzing the logical flow of API interactions. A normal administrative session might involve listing VMs, checking a snapshot's details, and then deleting it. An attacker with a compromised account might just log in and issue a 'deleteAllSnapshots' command. An LSTM autoencoder can learn the normal sequences and flag sessions with a high 'reconstruction error'—meaning the sequence of events is highly improbable and doesn't fit learned patterns—indicating a likely attack.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Windows Event ID 3 (Sysmon)
      - Hypervisor management network segment (vCenter, ESXi hosts), network egress points to public cloud providers, and network boundaries between user and server segments.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL trained on normal API call sequences
          FOR each new_user_session_api_sequence
            CALCULATE reconstruction_error using autoencoder model
            IF reconstruction_error > threshold
              ALERT 'Anomalous API command sequence detected'