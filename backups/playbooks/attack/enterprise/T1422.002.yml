name: T1422.002: Wi-Fi Discovery
id: 5a8a6f3b-8f3e-4d4b-8a7e-1f2c9e4d5b6a
description: |
  This playbook helps identify if an adversary is attempting to discover Wi-Fi network information on managed mobile devices. This involves detecting anomalous usage of Wi-Fi configuration APIs, scanning for local network devices after connecting to a new Wi-Fi network, and unauthorized access to stored Wi-Fi credentials followed by suspicious network exfiltration. Evidence can be found through non-system applications making an unusually high number of calls to APIs like `WifiManager.getConfiguredNetworks()` on Android or `NEHotspotConfigurationManager.fetchConfigurations` on iOS. It also covers scenarios where a device, upon joining a new network, initiates broad scans of internal IP addresses or ports. Furthermore, it addresses the threat of a process reading Wi-Fi credential stores (e.g., `wpa_supplicant.conf` or iOS Keychain) and immediately making outbound connections to suspicious domains, which may be newly registered, have low prevalence, or possess high-entropy names.
type: technique
related:
  - TA0032: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a non-allowlisted application attempting to query Wi-Fi configurations?
    context: |
      This question aims to detect unauthorized applications accessing sensitive Wi-Fi configuration data. By maintaining an explicit allow-list of trusted applications (e.g., system utilities, MDM agents) authorized to call Wi-Fi APIs, any access from an application not on this list is a strong indicator of potentially malicious reconnaissance activity. An immediate, high-severity alert allows for rapid investigation of the unauthorized application.
    answer_sources:
      - Mobile Device Management (MDM) API call logs
      - Mobile Endpoint Detection and Response (EDR) process activity logs
      - Corporate-managed mobile devices (iOS, Android)
      - Mobile Device Management (MDM) Platform
      - Mobile EDR Platform
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH (api_logs) 
          WHERE (api_call IN ["getConfiguredNetworks", "fetchConfigurations"]) 
          AND (application_package_name NOT IN wifi_api_allow_list) 
          | ALERT (severity=high, reason="Unauthorized Wi-Fi API access by non-allowlisted app")
  - question: Is an application making an anomalously high number of calls to Wi-Fi APIs compared to its historical baseline?
    context: |
      This question identifies applications that exhibit abnormal behavior, even if they are generally trusted. Malicious code injected into a legitimate application or a compromised application could begin aggressively querying Wi-Fi data. By establishing a statistical baseline (mean and standard deviation) of normal API call frequency for each app, this method can detect significant deviations ($$ \mu + 3\sigma $$) that suggest reconnaissance activity without relying on a static allow-list.
    answer_sources:
      - Mobile Device Management (MDM) API call logs
      - Mobile Endpoint Detection and Response (EDR) process activity logs
      - Corporate-managed mobile devices (iOS, Android)
      - Mobile Device Management (MDM) Platform
      - Mobile EDR Platform
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH (api_logs) 
          | STATS count BY application, window(5m) 
          | JOIN with historical_baseline(application)
          | WHERE count > (baseline_mean + 3 * baseline_stddev)
          | ALERT (severity=medium, reason="Anomalous Wi-Fi API call frequency")
  - question: Does an application's sequence of API calls match a machine learning model's profile for malicious Wi-Fi discovery behavior?
    context: |
      This question uses a more advanced, behavioral approach to detection. Simple frequency analysis can be evaded. A supervised machine learning model can be trained on a richer set of features—such as the specific sequence of API calls, application permissions, and installation source—to learn the complex patterns of malicious discovery. This allows for the detection of more subtle or novel attack techniques that might not trigger simpler statistical or rule-based alerts.
    answer_sources:
      - Mobile Device Management (MDM) API call logs
      - Mobile Endpoint Detection and Response (EDR) process activity logs
      - Corporate-managed mobile devices (iOS, Android)
      - Mobile Device Management (MDM) Platform
      - Mobile EDR Platform
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          STREAM (api_logs) 
          | FEATURE_ENGINEER (call_sequence, app_permissions, install_source, time_of_day)
          | SCORE with ML_Model("malicious_wifi_discovery")
          | WHERE score > 0.9
          | ALERT (severity=medium, reason="ML model detected Wi-Fi discovery behavior")
  - question: Is a mobile device performing a network address or port scan after connecting to a new Wi-Fi network, as detected by Zeek's scan script?
    context: |
      This question focuses on detecting classic network scanning behavior originating from a mobile device. Adversaries often perform network reconnaissance immediately after gaining a foothold on a new network. Zeek's built-in scan detection script is optimized to identify these patterns (e.g., one host contacting many hosts or many ports). Triggering an alert on these specific notices from the mobile device IP space provides a high-confidence signal of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Zeek icmp.log
      - DHCP Server Logs
      - Zeek weird.log
      - Corporate and guest Wi-Fi network segments
      - Network sensors (e.g., Zeek)
      - DHCP servers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH (zeek_notice_logs) 
          WHERE (notice_type IN ["Scan::Address_Scan", "Scan::Port_Scan"]) AND (source_ip IN mobile_dhcp_scope)
          | ENRICH with DHCP_logs(source_ip, timestamp) to get hostname
          | ALERT (severity=high, reason="Zeek detected network scan from mobile device")
  - question: Does a mobile device's network activity exhibit statistically anomalous characteristics indicative of scanning?
    context: |
      This question provides a more robust, statistical alternative to relying solely on a pre-built scan detector. Adversaries may try to evade detection by scanning slowly. By calculating multiple metrics in parallel—such as the count of unique destination IPs, the number of ICMP requests, and the randomness (Shannon entropy) of destination ports—we can build a multi-faceted statistical profile of scanning. An alert is triggered only when a device exceeds multiple thresholds, reducing false positives from benign, noisy applications.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Zeek icmp.log
      - DHCP Server Logs
      - Zeek weird.log
      - Corporate and guest Wi-Fi network segments
      - Network sensors (e.g., Zeek)
      - DHCP servers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH (zeek_conn_logs, zeek_icmp_logs)
          | AGGREGATE by source_ip, window(60s) [distinct_dest_ip, distinct_icmp_echo, shannon_entropy(dest_port)]
          | JOIN with historical_percentiles(95)
          | WHERE (distinct_dest_ip > p95_dest_ip AND distinct_icmp_echo > p95_icmp) OR (distinct_dest_ip > p95_dest_ip AND port_entropy > p95_entropy) OR (distinct_icmp_echo > p95_icmp AND port_entropy > p95_entropy)
          | ALERT (severity=medium, reason="Statistically significant scanning behavior detected")
  - question: Does a mobile device's network traffic pattern fall into an anomalous cluster identified by a machine learning model?
    context: |
      This question applies unsupervised machine learning to find "unknown unknowns." Instead of looking for predefined patterns, a clustering algorithm like DBSCAN can analyze network traffic features (byte counts, packet ratios, etc.) and group them. Normal activity will form a large, dense cluster. Malicious scanning, which is inherently different, will be isolated as a small, sparse, or anomalous cluster. This can uncover novel or evasive scanning techniques that other methods miss.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Zeek icmp.log
      - DHCP Server Logs
      - Zeek weird.log
      - Corporate and guest Wi-Fi network segments
      - Network sensors (e.g., Zeek)
      - DHCP servers
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          STREAM (zeek_conn_logs)
          | FEATURE_ENGINEER by source_ip, window(1m) [bytes_ratio, syn_fin_ratio, unique_dest_ips, unique_dest_ports, port_entropy]
          | CLUSTER with DBSCAN
          | WHERE cluster_label = "anomaly"
          | ALERT (severity=medium, reason="ML clustering identified anomalous network activity indicative of scanning")
  - question: Did a non-system process access a Wi-Fi credential store and then connect to a known malicious domain or IP address?
    context: |
      This is a high-fidelity detection that chains two distinct malicious actions together. Unauthorized access to a credential store is highly suspicious on its own. Correlating that access with a subsequent network connection to an indicator from a threat intelligence feed within a short time window (5 minutes) provides strong evidence of credential theft and exfiltration, warranting a critical alert and immediate incident response.
    answer_sources:
      - Mobile EDR file integrity monitoring logs
      - Mobile EDR process or keychain access logs
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Platform data
      - Corporate-managed mobile devices
      - Network Egress Points (Firewall/Proxy)
      - Internal DNS Resolvers
      - Mobile EDR Platform
      - Threat Intelligence Platform
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH (edr_logs) 
          WHERE (event="file_read" AND target IN wifi_credential_stores) AND (process_type NOT IN ["system", "mdm"])
          | CORRELATE with network_logs(device, user) within 5m
          | WHERE destination_ip IN threat_intel_feed OR destination_domain IN threat_intel_feed
          | ALERT (severity=critical, reason="Credential store access followed by connection to known malicious indicator")
  - question: Following access to a Wi-Fi credential store, did a device connect to a suspicious domain?
    context: |
      This question helps detect exfiltration to unknown or new malicious infrastructure not yet in threat intelligence feeds. After detecting credential access, this query scrutinizes outbound connections for suspicious characteristics: domains that are very new (e.g., < 30 days), rarely visited by anyone in the organization ($$ S_p < 0.01 $$), or have algorithmically generated names (high entropy). A match on these criteria provides a strong signal of likely exfiltration.
    answer_sources:
      - Mobile EDR file integrity monitoring logs
      - Mobile EDR process or keychain access logs
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Platform data
      - Corporate-managed mobile devices
      - Network Egress Points (Firewall/Proxy)
      - Internal DNS Resolvers
      - Mobile EDR Platform
      - Threat Intelligence Platform
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON EDR_alert("credential_access", device)
          | SEARCH (dns_logs, conn_logs) from device for next 5m
          | FOR each destination_domain:
          |   CALCULATE prevalence, age, entropy
          |   IF (prevalence < 0.01 AND age < 30) OR (entropy > 3.5)
          |     ALERT (severity=high, reason="Credential access followed by connection to suspicious domain")
  - question: Does a sequence of events match a machine learning model's profile for credential theft and exfiltration?
    context: |
      This question uses a sophisticated, sequence-aware machine learning model (like an LSTM) to understand the narrative of an attack. The model is trained to recognize the entire chain of events: a process starting, accessing the credential store, resolving a domain, and making a connection. By analyzing the features of the entire sequence, the model can make a high-confidence classification of "credential theft and exfiltration," detecting complex attacks that may appear benign if each event is viewed in isolation.
    answer_sources:
      - Mobile EDR file integrity monitoring logs
      - Mobile EDR process or keychain access logs
      - Zeek conn.log
      - Zeek dns.log
      - Threat Intelligence Platform data
      - Corporate-managed mobile devices
      - Network Egress Points (Firewall/Proxy)
      - Internal DNS Resolvers
      - Mobile EDR Platform
      - Threat Intelligence Platform
    range: Last 90 days
    queries:
      - technology: pseudocode
        query: |
          STREAM (edr_logs, network_logs)
          | CONSTRUCT_SEQUENCE [process_start -> credential_access -> dns_query -> network_connection] by device, user
          | FEATURE_ENGINEER (process_hash, domain_entropy, domain_age, asn_rep, bytes_transferred)
          | SCORE with ML_Model("sequence_credential_exfil")
          | WHERE score > 0.95
          | ALERT (severity=high, reason="ML model detected credential theft and exfiltration sequence")