name: T1070.010: Relocate Malware
id: d8e9f0a1-7b6c-4d5e-8f9a-0b1c2d3e4f5a
description: |
  This playbook helps investigate whether an adversary is attempting to relocate malware on a system to evade defenses, a technique identified as T1070.010. Adversaries may move malicious files to different locations on disk to avoid detection by security tools that rely on static file paths or signatures. This can involve placing known malicious files in uncommon directories, using legitimate process names in non-standard paths, employing filenames with high entropy or deceptive extensions, or executing a rapid sequence of file creation, execution, and deletion to cover their tracks. This playbook provides questions and queries to detect these activities using endpoint and network data.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any file or process creation events where the file hash matches a known malicious indicator?
    context: |
      This question seeks to identify malware relocation by detecting the creation or execution of files with hashes known to be malicious. Adversaries may move malware to new locations to bypass defenses. Matching a file's hash against a threat intelligence feed of malicious indicators is a direct way to uncover such activity, regardless of the file's name or location.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Endpoint Detection and Response (EDR) logs and Windows Security Event Logs forwarded from all managed endpoints and servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH (EventID=4663 OR EventID=4688)
          WHERE file_hash IN (list_of_known_malicious_hashes)
          RETURN hostname, timestamp, process_name, file_path, file_hash
  - question: Has a process been executed from a file that is present on a very small percentage of endpoints in the enterprise?
    context: |
      This question leverages the statistical rarity of a file hash to identify potential malware. Benign software is typically distributed widely across an organization, while malware is often found on a limited number of compromised systems. By calculating the prevalence of a file hash across all endpoints and flagging those with very low prevalence (e.g., less than 1%), analysts can surface suspicious or unauthorized software that may have been relocated.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs and Windows Security Event Logs forwarded from all managed endpoints and servers.
    range: last 30 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688 over last 30 days
          STATS distinct_count(hostname) as host_count by file_hash
          SET total_endpoints = [total number of endpoints]
          CALCULATE prevalence = (host_count / total_endpoints) * 100
          FILTER prevalence < 1.0
          RETURN file_hash, host_count, prevalence
  - question: Has a file classified as malicious by a machine learning model been created in multiple locations within a short time frame?
    context: |
      This question uses a machine learning model to proactively identify malicious files based on their intrinsic properties (hash, path, signature, entropy). The goal is to detect the specific act of relocation by correlating a high-probability malicious classification with subsequent file creation events for that same file in different locations. This approach can identify zero-day malware being moved to evade detection shortly after being introduced to a system.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) logs and Windows Security Event Logs forwarded from all managed endpoints and servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          INPUT process_events (EventID=4688)
          APPLY file_classification_model(features) as ml_score
          FILTER ml_score > 0.9
          STORE high_risk_hashes
          SEARCH EventID=4663 AND file_hash IN (high_risk_hashes)
          GROUP by hostname, file_hash
          WHERE distinct_count(file_path) > 1 within 5 minutes
          RETURN hostname, file_hash, list(file_path)
  - question: Has a process been executed with a name that uses a double extension, typosquats a legitimate name, or matches known malicious tool names?
    context: |
      This question focuses on detecting deceptive filenames used by adversaries to trick users or evade simple filters. By using regular expressions to search for patterns like double extensions (e.g., 'report.pdf.exe'), misspellings of common system files (e.g., 'scvhost.exe'), or names of known hacking tools (e.g., 'mimikatz.exe'), analysts can identify common malware relocation and execution techniques.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Common staging directories (%APPDATA%, %TEMP%, %PUBLIC%, Downloads), and user profile directories on all endpoints.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688
          WHERE process_name MATCHES REGEX ('\\.\\w{3,4}\\.exe$', 'scvhost\\.exe', 'mimikatz\\.exe')
          RETURN hostname, timestamp, process_name, command_line
  - question: Has a process been executed where the filename has an unusually high Shannon entropy score?
    context: |
      This question aims to identify randomly generated filenames, a common tactic used by malware to avoid signature-based detection. Shannon entropy measures the randomness or unpredictability of a string. By calculating the entropy of filenames and comparing them to a baseline of known-good executables, analysts can flag outliers in the upper percentile (e.g., 95th) as suspicious, as these are unlikely to be human-created or standard software names.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Common staging directories (%APPDATA%, %TEMP%, %PUBLIC%, Downloads), and user profile directories on all endpoints.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688
          CALCULATE shannon_entropy(process_name) as entropy_score
          FILTER entropy_score > [95th_percentile_baseline]
          RETURN hostname, process_name, entropy_score
  - question: Has a machine learning model classified a newly executed filename as malicious?
    context: |
      This question leverages a trained machine learning model to detect malicious filenames based on a variety of features beyond simple patterns. The model can learn complex characteristics of malicious names, such as specific n-gram frequencies, character-type ratios, length, and entropy. Applying this model to all new process creation events allows for the automated detection of suspicious filenames that might be missed by manual rules or simple statistical checks.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Common staging directories (%APPDATA%, %TEMP%, %PUBLIC%, Downloads), and user profile directories on all endpoints.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688
          EXTRACT features from process_name (length, n-grams, char_ratios, entropy)
          APPLY filename_classification_model(features) as classification
          FILTER classification == 'malicious' with high_confidence
          RETURN hostname, process_name, classification_confidence
  - question: Is a critical Windows process (like svchost.exe) running from a non-standard file path?
    context: |
      This question aims to detect a classic defense evasion technique known as masquerading, where malware is named after a legitimate system process but placed in an illegitimate directory. By maintaining a watchlist of critical process names and their valid, absolute file paths (e.g., 'svchost.exe' should only run from 'C:\\Windows\\System32'), analysts can create a high-fidelity alert for any execution that violates this rule. This is a strong indicator of a malicious file attempting to hide in plain sight.
    answer_sources:
      - Windows Event ID 4688
      - System-critical directories (e.g., C:\Windows\System32, C:\Windows\SysWOW64) and common user-writable directories (%TEMP%, %APPDATA%, C:\Users\Public).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          WATCHLIST = {"svchost.exe": "C:\\Windows\\System32\\svchost.exe", "lsass.exe": "C:\\Windows\\System32\\lsass.exe"}
          SEARCH EventID=4688
          WHERE process_name IN (WATCHLIST.keys())
          AND image_path NOT IN (WATCHLIST.values())
          RETURN hostname, process_name, image_path
  - question: Has a process been executed from a path or with a parent process that is statistically rare for that process name?
    context: |
      This question moves beyond static watchlists to a statistical approach for detecting masquerading. For any given process name (e.g., 'svchost.exe'), there is a predictable set of parent processes (e.g., 'services.exe') and execution paths. By profiling this normal behavior over time, analysts can flag any new process execution where the combination of its name, path, and parent process is a statistical anomaly (e.g., seen less than 0.01% of the time). This can uncover novel masquerading attempts.
    answer_sources:
      - Windows Event ID 4688
      - System-critical directories (e.g., C:\Windows\System32, C:\Windows\SysWOW64) and common user-writable directories (%TEMP%, %APPDATA%, C:\Users\Public).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688 from last 90 days
          COMPARE (image_path, parent_process) against baseline for process_name
          FILTER combination is statistically rare (e.g., < 0.01% frequency)
          RETURN hostname, process_name, image_path, parent_process
  - question: Has an anomaly detection model identified an unusual combination of process name, parent process, and file path?
    context: |
      This question uses unsupervised machine learning to automate the detection of anomalous process executions without pre-defined rules or statistical thresholds. An anomaly detection model (like an Isolation Forest) is trained on features from benign process events. It learns the complex, multi-dimensional relationships between process name, parent, path, and command-line arguments. The model can then identify novel and suspicious combinations in real-time, such as 'svchost.exe' being launched by 'powershell.exe' from a temporary user directory, which strongly indicates malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - System-critical directories (e.g., C:\Windows\System32, C:\Windows\SysWOW64) and common user-writable directories (%TEMP%, %APPDATA%, C:\Users\Public).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688
          EXTRACT features (process_name, parent_process, path_depth, path_entropy)
          APPLY anomaly_detection_model(features) as anomaly_score
          FILTER anomaly_score is high
          RETURN hostname, process_name, parent_process, image_path, anomaly_score
  - question: Has a sequence of file create, process create from the new file, and deletion of the original file occurred on a host within a short time window?
    context: |
      This question looks for a specific behavioral pattern that indicates malware relocation: an adversary creating a file, moving or copying it, executing it from the new location, and then deleting the original to clean up. By using a stateful correlation rule that tracks this specific sequence of events (e.g., create in Path A -> create in Path B -> execute from Path B -> delete Path A) within a few minutes on a single host, analysts can detect this multi-stage tactic.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4660
      - Windows Event ID 4688
      - All endpoint and server file systems, with a focus on correlating activity between download/staging directories (Downloads, Temp) and persistence/execution directories (ProgramData, AppData, Startup folders).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          CORRELATE events by hostname over 2 minutes
          SEQUENCE [EventID=4663, path=PathA] -> 
                   [EventID=4663, path=PathB] -> 
                   [EventID=4688, image_path=PathB] -> 
                   [EventID=4660, object_name=PathA]
          RETURN hostname, timestamp, PathA, PathB
  - question: Has the specific behavioral sequence of file create-copy-execute-delete occurred on any host, and how frequently does this sequence occur enterprise-wide?
    context: |
      This question applies a statistical lens to the create-execute-delete behavioral pattern. While this sequence could potentially occur during legitimate software installations, it is generally very rare. By defining and searching for this exact sequence across the entire enterprise, analysts can identify hosts where it has occurred. The inherent rarity of the complete sequence makes any instance highly suspicious and worthy of investigation.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4660
      - Windows Event ID 4688
      - All endpoint and server file systems, with a focus on correlating activity between download/staging directories (Downloads, Temp) and persistence/execution directories (ProgramData, AppData, Startup folders).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          DEFINE sequence S as (create(A), create(B), execute(B), delete(A))
          SEARCH for complete S sequences per host
          STATS count by hostname
          FILTER count > 0
          RETURN hostname, count_of_sequences
  - question: Has a sequence-based anomaly detection model detected an improbable series of file system and process events on a host?
    context: |
      This question uses advanced machine learning to detect anomalous sequences of activity. A model like an LSTM Autoencoder is trained on vast amounts of normal event streams to learn legitimate patterns of file and process interactions. When a real-time event stream from a host doesn't match these learned patterns (resulting in a high reconstruction error), the model flags it. This is effective for detecting complex, multi-step attack chains like the create-copy-execute-delete tactic, even if the specific events or paths have never been seen before.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4660
      - Windows Event ID 4688
      - All endpoint and server file systems, with a focus on correlating activity between download/staging directories (Downloads, Temp) and persistence/execution directories (ProgramData, AppData, Startup folders).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          INPUT real-time_event_stream (EventIDs 4663, 4688, 4660) per host
          APPLY sequence_anomaly_model (LSTM Autoencoder)
          CALCULATE reconstruction_error
          FILTER reconstruction_error > threshold
          RETURN hostname, timestamp, anomalous_sequence_details
  - question: Did a process running from a high-risk directory (like %TEMP%) make an external network connection to a destination not on an allowlist?
    context: |
      This question correlates endpoint and network activity to find suspicious C2 communications. Malware is often placed in user-writable, high-risk directories that are sometimes excluded from security scans. By joining process creation events from these directories with network connection logs, and filtering for connections to external destinations that are not explicitly sanctioned (i.e., not on an allowlist), analysts can effectively hunt for malware "calling home" after being relocated.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek ssl.log
      - Endpoint process execution logs, network egress points (firewalls, proxies), and Zeek sensors monitoring north-south traffic.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688
          WHERE image_path CONTAINS ('%TEMP%', '%PUBLIC%', '%APPDATA%')
          AND file_hash NOT IN (known_good_hashes)
          JOIN with (SEARCH sourcetype=zeek:conn) on src_ip, time (within 1 min)
          WHERE dest_ip is external AND dest_ip NOT IN (allowlist_ips)
          RETURN hostname, process_name, image_path, dest_ip
  - question: Did a process from a high-risk directory make a network connection using a rare JA3S hash or exfiltrate an unusually large amount of data?
    context: |
      This question uses statistical network properties to identify suspicious connections from potentially relocated malware. It focuses on processes in high-risk directories and examines their TLS/SSL connections. A rare JA3S hash indicates an uncommon server-side TLS implementation, which can be a sign of a C2 server. Additionally, a spike in outbound data volume for a process that normally sends little data can indicate data exfiltration. Both are strong statistical indicators of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek ssl.log
      - Endpoint process execution logs, network egress points (firewalls, proxies), and Zeek sensors monitoring north-south traffic.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH EventID=4688 WHERE image_path CONTAINS ('%APPDATA%')
          JOIN with (SEARCH sourcetype=zeek:ssl) on src_ip
          WHERE JA3S_hash_prevalence < 1st_percentile
          OR JOIN with (SEARCH sourcetype=zeek:conn) on src_ip
          WHERE outbound_bytes > 99th_percentile_for_process
          RETURN hostname, process_name, dest_ip, JA3S_hash, outbound_bytes
  - question: Did a time-series model detect anomalous network behavior (e.g., connection count, data volume) from a process running in a high-risk location?
    context: |
      This question applies machine learning to model the normal network behavior of processes over time. For processes that typically run from high-risk locations, a time-series model learns their expected patterns of connection frequency, duration, and data volume. The model can then detect significant deviations from this learned norm, such as the start of a periodic C2 beacon or a large, uncharacteristic data transfer, which would be flagged as an anomaly. This method is effective at finding changes in behavior that indicate a process has been compromised or is inherently malicious.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek ssl.log
      - Endpoint process execution logs, network egress points (firewalls, proxies), and Zeek sensors monitoring north-south traffic.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          INPUT real-time_network_data per process
          APPLY time-series_anomaly_model
          CALCULATE forecast_error
          FILTER forecast_error > threshold
          RETURN hostname, process_name, anomalous_time_window, error_details