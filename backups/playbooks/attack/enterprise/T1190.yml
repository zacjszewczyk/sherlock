name: T1190: Exploit Public-Facing Application
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary has gained initial access by exploiting a public-facing application. This involves analyzing for network connections from known malicious sources or matching exploit signatures; inspecting HTTP requests for attack patterns, scanner user-agents, or webshell uploads; monitoring for web server processes spawning suspicious child processes like command shells; detecting unusual outbound network connections indicative of C2 communication or data exfiltration; and identifying statistical anomalies in web server logs, such as a spike in server errors or shifts in request patterns.
type: technique
related:
  - TA0001: Initial Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any public-facing applications received connections from known malicious IP addresses?
    context: This question seeks to identify high-confidence threats by correlating inbound network traffic with threat intelligence feeds. A successful connection from an IP address known for malicious activity to a public-facing service (e.g., web, RDP) is a strong indicator of a targeted attack or an initial compromise, warranting immediate investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek signatures.log
      - Network perimeter firewalls
      - DMZ network segments
      - Cloud security group flow logs
      - Internet-facing web servers (e.g., IIS, Apache, Nginx)
      - VPN concentrators
      - External-facing database servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN Zeek conn.log source IPs WITH threat intel list WHERE connection is successful AND destination port is public-facing. ALERT.
  - question: Is any single IP address triggering an unusually high rate of high-severity exploit signatures against our public-facing applications?
    context: This question aims to distinguish targeted attacks from random internet noise. By establishing a baseline for how often specific exploit signatures are triggered, we can detect outliers. An IP address that triggers a specific CVE-related signature at a rate far exceeding the average suggests a deliberate and persistent attempt to exploit that vulnerability, rather than random scanning.
    answer_sources:
      - Zeek conn.log
      - Zeek signatures.log
      - Network perimeter firewalls
      - DMZ network segments
      - Cloud security group flow logs
      - Internet-facing web servers (e.g., IIS, Apache, Nginx)
      - VPN concentrators
      - External-facing database servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH source IP, COUNT CVE signature triggers in 1-hour windows. CALCULATE mean and stddev for each signature. ALERT IF count > (mean + 3 * stddev).
  - question: Can we use a machine learning model to classify incoming network connections as potentially malicious exploit attempts in real-time?
    context: This question explores the use of predictive analytics for proactive threat detection. A supervised machine learning model, trained on features of known benign and malicious connections, can score new traffic in real-time. This allows analysts to prioritize and investigate connections that are algorithmically determined to be suspicious, even if they don't match a known bad signature.
    answer_sources:
      - Zeek conn.log
      - Zeek signatures.log
      - Network perimeter firewalls
      - DMZ network segments
      - Cloud security group flow logs
      - Internet-facing web servers (e.g., IIS, Apache, Nginx)
      - VPN concentrators
      - External-facing database servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT connection features (dest port, protocol, duration) INTO pre-trained classification model. IF classification is 'suspicious-exploit-attempt', ALERT.
  - question: Are there any HTTP requests containing patterns of known exploits, such as SQL Injection or Local File Inclusion, or user agents from vulnerability scanners?
    context: This question aims to find direct evidence of exploit attempts within web traffic. By using regular expressions to search URI paths, headers, and POST bodies for common attack strings (e.g., '../', '<script>') or scanner signatures (e.g., 'sqlmap'), analysts can identify active probes or exploitation attempts against web applications.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Web Application Firewalls (WAFs)
      - Public-facing web servers
      - Reverse proxies
      - Load balancers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH Zeek http.log for regex patterns ('../', 'SELECT', 'sqlmap') in URI, user-agent, and post-body fields. ALERT on match.
  - question: Is any source IP generating HTTP requests with unusually high-entropy URI parameters, suggesting fuzzing or brute-forcing attempts?
    context: This question uses a statistical property, Shannon entropy, to detect anomalous web traffic. High entropy in URI parameters often indicates an attacker is trying to discover vulnerabilities by sending randomized or complex inputs (fuzzing). This method can catch novel or obfuscated attacks that traditional signature-based methods might miss.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Web Application Firewalls (WAFs)
      - Public-facing web servers
      - Reverse proxies
      - Load balancers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR EACH source IP, CALCULATE Shannon entropy of URI query parameters in 5-min windows. ALERT IF entropy > 98th percentile of historical baseline.
  - question: Are there any user sessions exhibiting anomalous browsing behavior that deviates from typical patterns?
    context: This question uses an unsupervised machine learning model to learn what normal user sessions look like based on sequences of requests, status codes, and other behaviors. Sessions that deviate significantly from this learned norm are flagged as anomalous. This can indicate automated probing, forced browsing, or other non-human interactions consistent with an attack.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Web Application Firewalls (WAFs)
      - Public-facing web servers
      - Reverse proxies
      - Load balancers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: INPUT HTTP session features into an autoencoder model. ALERT IF reconstruction error is high, indicating anomalous session.
  - question: Has any web server process spawned a command-line interpreter or an unexpected child process?
    context: This is a critical post-exploitation question. A web server process (like w3wp.exe or httpd) should not normally launch a command shell (cmd.exe, bash) or reconnaissance tools. Observing this behavior is a strong indicator that an attacker has successfully exploited the web application and is attempting to execute commands on the server.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Public-facing web servers
      - Application servers in the DMZ
      - Container hosts running public applications
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH process creation logs WHERE parent process is a web server AND child process is a command shell or recon tool. ALERT on match.
  - question: Have any rare or never-before-seen parent-child process relationships occurred on our public-facing servers?
    context: This question moves beyond a static list of 'bad' child processes and instead looks for statistical rarity. By baselining all normal process relationships on a server, any new or extremely infrequent parent-child pairing can be flagged as suspicious. This helps detect novel post-exploitation tools or techniques that might not be on a predefined blocklist.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Public-facing web servers
      - Application servers in the DMZ
      - Container hosts running public applications
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE all parent-child process pairs and their frequencies over 30 days. ALERT IF a new pair is created OR a rare pair (bottom 1st percentile) occurs.
  - question: Are there any process execution chains originating from web servers that deviate from the normal, learned graph of process ancestry?
    context: This question uses a more advanced graph-based model to understand the entire chain of process execution, not just immediate parent-child pairs. An alert is triggered if a sequence of process creations deviates from the learned 'normal' structure, which can detect more complex or obfuscated execution chains used by attackers after a compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Public-facing web servers
      - Application servers in the DMZ
      - Container hosts running public applications
    range: last 90 days
    queries:
      - technology: pseudocode
        query: MODEL normal process ancestry trees as a graph. ALERT IF a new process chain deviates from the learned graph structure.
  - question: Did a public-facing server initiate an outbound connection following a DNS query to a known suspicious domain (e.g., dynamic DNS)?
    context: This question tries to link suspicious DNS activity with actual network traffic to detect C2 callbacks. An attacker's implant may use dynamic DNS to locate its C2 server. Correlating a DNS lookup to a DDNS provider with a subsequent outbound connection from the same server is a high-fidelity indicator of a C2 channel being established.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - DMZ network segments
      - Egress points of the network
      - DNS resolvers serving the DMZ
      - Host-based firewalls on public-facing servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH DNS logs for queries to dynamic DNS domains from public servers. CORRELATE with connection logs to find subsequent outbound traffic. ALERT on match.
  - question: Has any public-facing server made an outbound connection to a new destination country or port, or transferred an anomalously large amount of data?
    context: This question uses baselining to detect anomalous outbound network behavior. Servers typically communicate with a predictable set of destinations and ports. A connection to a new country or an unusual port, or an outbound transfer that is significantly larger than normal, could indicate data exfiltration or communication with an attacker's infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - DMZ network segments
      - Egress points of the network
      - DNS resolvers serving the DMZ
      - Host-based firewalls on public-facing servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE outbound destination ports/countries over 30 days. ALERT on new port/country. BASELINE outbound bytes transferred. ALERT if connection exceeds 99th percentile.
  - question: Has the volume of outbound data from any public-facing server, per protocol, significantly exceeded its forecasted volume?
    context: This question uses time-series forecasting to predict expected outbound traffic volumes. If the actual observed traffic volume dramatically exceeds the predicted amount (plus a confidence interval), it signals a significant anomaly. This is particularly useful for detecting data exfiltration, where an attacker might try to blend in with normal traffic but sends a much larger volume of data.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 5156
      - DMZ network segments
      - Egress points of the network
      - DNS resolvers serving the DMZ
      - Host-based firewalls on public-facing servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FORECAST outbound data volume per protocol using a time-series model. ALERT IF observed volume significantly exceeds the forecasted confidence interval.
  - question: Has there been a sudden spike in server-side errors (HTTP 5xx) for a specific application?
    context: This question uses a simple threshold to detect potential application instability caused by an exploit. A sudden flood of 500-level errors can indicate that an attacker's payload is causing a component of the application to crash, which can be an unintended but useful side effect of a successful or attempted exploit.
    answer_sources:
      - Zeek http.log
      - Application error logs (e.g., Apache error.log, IIS Failed Request Tracing)
      - Public-facing web servers
      - Web Application Firewalls (WAFs)
      - Load balancers
      - Centralized log aggregation platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: COUNT HTTP 5xx status codes per server in 1-min windows. ALERT IF count exceeds a fixed threshold (e.g., 50).
  - question: Has the distribution of HTTP request methods (e.g., GET vs. POST) for an application significantly changed compared to its historical baseline?
    context: This question looks for shifts in how users (or attackers) are interacting with an application. For example, a sudden spike in POST requests might indicate an attempt to submit malicious data via web forms. A Chi-squared test can statistically measure if the current distribution of request types is significantly different from the established norm.
    answer_sources:
      - Zeek http.log
      - Application error logs (e.g., Apache error.log, IIS Failed Request Tracing)
      - Public-facing web servers
      - Web Application Firewalls (WAFs)
      - Load balancers
      - Centralized log aggregation platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: COMPARE current hourly distribution of HTTP methods against a 7-day baseline using a Chi-squared test. ALERT IF statistic exceeds critical value.
  - question: Are we observing HTTP requests that are considered outliers or noise by a clustering algorithm?
    context: This question uses unsupervised clustering to group similar, benign HTTP requests together. Requests that do not fit well into any cluster are labeled as outliers or noise. These anomalous requests could be malformed packets, vulnerability probes, or other non-standard traffic associated with an exploit attempt that might not trigger signature-based rules.
    answer_sources:
      - Zeek http.log
      - Application error logs (e.g., Apache error.log, IIS Failed Request Tracing)
      - Public-facing web servers
      - Web Application Firewalls (WAFs)
      - Load balancers
      - Centralized log aggregation platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER HTTP requests based on features (size, length, user agent). ALERT on requests labeled as noise/outliers by the DBSCAN algorithm.