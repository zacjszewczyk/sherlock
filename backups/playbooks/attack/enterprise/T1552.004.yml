name: T1552.004: Private Keys
id: a1b9b1e9-6d8c-4a3b-9f9d-1e1c1b1a1e1c
description: |
  This playbook focuses on detecting the discovery, collection, and misuse of private cryptographic keys, a critical component of credential access. It addresses threats ranging from the use of known credential theft tools and suspicious command-line activity to unauthorized access of key files. The playbook also details methods for identifying mass collection of keys, anomalous certificate-based authentications indicating key misuse, and correlated event sequences that point to a full 'collect, stage, and exfiltrate' pattern.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a running process's file hash an exact match for a known credential theft tool that targets private keys?
    context: |
      This question aims to identify the execution of known malicious tools like Mimikatz or LaZagne by comparing the file hash of every new process against a threat intelligence feed. An exact match is a high-confidence indicator of compromise, signifying that an adversary is using a recognized tool for credential theft.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - All enterprise endpoints (workstations, servers), Domain Controllers, Public Key Infrastructure (PKI) servers, and Entra ID-joined/hybrid devices.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events (Sysmon EID 1, Win EID 4688).
          FOR each process, HASH executable.
          IF hash IN known_bad_hashes_list, ALERT.
  - question: Is a process being spawned by a statistically rare or unusual parent process?
    context: |
      This question seeks to uncover suspicious process relationships that deviate from normal enterprise behavior. Adversaries often use legitimate processes (e.g., 'winword.exe') to spawn shells or other tools ('powershell.exe') to evade simple detections. By baselining normal parent-child process pairs and flagging statistical outliers (e.g., pairs in the 1st percentile of frequency), we can detect potentially malicious activity that doesn't involve a known-bad hash.
    answer_sources:
      - Windows Sysmon Event ID 1
      - All enterprise endpoints (workstations, servers), Domain Controllers, Public Key Infrastructure (PKI) servers, and Entra ID-joined/hybrid devices.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events (Sysmon EID 1).
          FOR each parent-child pair, CALCULATE frequency.
          IF frequency < 1st percentile for that parent-child combination, ALERT.
  - question: Does a new process execution exhibit characteristics of malicious activity, even if its hash is unknown?
    context: |
      This question uses a machine learning model to score process executions based on a variety of features like command-line length, process name entropy, and whether the executable is unsigned. This allows for the detection of novel or previously unseen malware that signature-based methods would miss, by identifying a combination of suspicious attributes that collectively point to malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - All enterprise endpoints (workstations, servers), Domain Controllers, Public Key Infrastructure (PKI) servers, and Entra ID-joined/hybrid devices.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events.
          EXTRACT features (process name entropy, cmdline length, parent process, etc.).
          SCORE with ML model.
          IF score > threshold, ALERT.
  - question: Is a process being executed with command-line arguments that match known patterns for searching, copying, or exporting private key files?
    context: |
      This question focuses on detecting the use of legitimate system utilities (like 'findstr', 'certutil', 'openssl') for malicious purposes. By searching command-line logs for specific regular expressions that indicate key discovery (e.g., searching for '.pem' or '.key' files) or export commands, we can catch adversaries 'living off the land' and using built-in tools to steal credentials.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - All enterprise workstations and servers, particularly developer workstations, build servers, and web servers.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events.
          FOR each command line, MATCH against regex list (e.g., 'findstr.*\\.key', 'certutil.*-exportPFX').
          IF match, ALERT.
  - question: Does a command-line invocation, particularly from a shell or scripting engine, have an unusually high entropy score?
    context: |
      This question aims to detect obfuscated or unusually complex commands. Adversaries often use encoding (like Base64) or complex one-liners to hide their activities within command-line arguments. A command with an abnormally high Shannon entropy score compared to the baseline for that user and process (e.g., powershell.exe) can be a strong indicator of such obfuscation and warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - All enterprise workstations and servers, particularly developer workstations, build servers, and web servers.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events.
          FOR each command line, CALCULATE entropy.
          IF entropy > 98th percentile for that process/user, ALERT.
  - question: Does a command line have a high probability of malicious intent based on its linguistic and structural features?
    context: |
      This question uses a Natural Language Processing (NLP) model to score the likelihood that a command line is malicious. By training a model on features like the presence of file extensions, IP addresses, and specific keywords, it can learn to distinguish between benign administrative scripts and malicious commands, allowing for the detection of novel and sophisticated attack patterns that may not be caught by simple regex or entropy checks.
    answer_sources:
      - Windows Event ID 4688
      - Windows Sysmon Event ID 1
      - All enterprise workstations and servers, particularly developer workstations, build servers, and web servers.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process creation events.
          EXTRACT NLP features from command line.
          SCORE with ML model.
          IF score > threshold, ALERT.
  - question: Is an unauthorized process or user account attempting to read from a protected directory or file containing private keys?
    context: |
      This question is designed to detect direct, unauthorized access to sensitive key material. By enabling auditing (SACLs) on critical directories and maintaining an explicit allowlist of authorized users and processes, any access event from an entity not on the list generates a high-fidelity alert. This is a direct method for detecting a breach of sensitive file storage.
    answer_sources:
      - Windows Event ID 4663
      - Windows Sysmon Event ID 11
      - File servers hosting user home directories (e.g., '*\\.ssh\\*'), Public Key Infrastructure (PKI) servers (e.g., 'C:\\ProgramData\\Microsoft\\Crypto\\*'), web servers with SSL/TLS certificates, and developer workstations.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH file access events (Win EID 4663) for key files/dirs.
          IF accessing user/process NOT IN allowlist, ALERT.
  - question: Is a private key file or directory being accessed by a user or process in a statistically improbable manner?
    context: |
      This question identifies anomalous access patterns that may not violate a strict allowlist but are still suspicious. It establishes a baseline of normal access for each key file, considering the user, process, and time of day. An alert is triggered if an access occurs from a user-process combination that is extremely rare or at a time that is highly unusual for that user, indicating a potential deviation from normal duties or a compromised account.
    answer_sources:
      - Windows Event ID 4663
      - Windows Sysmon Event ID 11
      - File servers hosting user home directories (e.g., '*\\.ssh\\*'), Public Key Infrastructure (PKI) servers (e.g., 'C:\\ProgramData\\Microsoft\\Crypto\\*'), web servers with SSL/TLS certificates, and developer workstations.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH file access events.
          FOR each event, COMPARE user, process, and time against historical baseline.
          IF access is statistically improbable (e.g., <1% frequency, >3 std dev from mean time), ALERT.
  - question: Does a file access event for a private key represent a significant outlier compared to normal access patterns?
    context: |
      This question uses an unsupervised anomaly detection model (like an Isolation Forest) to learn the characteristics of 'normal' access to key files. The model considers features like the process, user, and time of day. It can then identify any access event that deviates significantly from this learned norm, effectively flagging novel or unexpected unauthorized access without relying on pre-defined rules or baselines.
    answer_sources:
      - Windows Event ID 4663
      - Windows Sysmon Event ID 11
      - File servers hosting user home directories (e.g., '*\\.ssh\\*'), Public Key Infrastructure (PKI) servers (e.g., 'C:\\ProgramData\\Microsoft\\Crypto\\*'), web servers with SSL/TLS certificates, and developer workstations.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH file access events.
          EXTRACT features (process, user, path, time).
          SCORE with unsupervised anomaly detection model.
          IF score is outlier, ALERT.
  - question: Has a single user account accessed an excessive number of unique private key files within a short time frame?
    context: |
      This question aims to detect 'smash and grab' collection activity where an adversary, having gained access, rapidly gathers as many keys as possible. A stateful rule monitors file access events and triggers an alert if a user exceeds a pre-defined threshold (e.g., 10 unique key files in 5 minutes). This threshold can be tuned based on user roles to reduce false positives from administrators.
    answer_sources:
      - Windows Event ID 4663
      - Zeek files.log
      - Enterprise-wide file systems, centralized certificate stores, distributed developer workstations, and network file shares (SMB/NFS).
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH file access events for key files.
          COUNT unique key files per user in a 5-min window.
          IF count > threshold (e.g., 10), ALERT.
  - question: Has a user's rate of accessing unique private key files exceeded their own historical, dynamic baseline?
    context: |
      This question provides a more adaptive approach to detecting mass collection by comparing a user's current activity to their own past behavior. It calculates a rolling percentile (e.g., 99th) of unique key files accessed per hour for each user. An alert is triggered only when a user significantly exceeds their own established 'normal,' making it effective at detecting unusual behavior for both low-access and high-access (e.g., PKI admin) users.
    answer_sources:
      - Windows Event ID 4663
      - Zeek files.log
      - Enterprise-wide file systems, centralized certificate stores, distributed developer workstations, and network file shares (SMB/NFS).
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH file access events for key files.
          FOR each user, CALCULATE unique key files accessed per hour.
          IF current count > 99th percentile of historical hourly counts for that user, ALERT.
  - question: Does a user's key access behavior indicate a sudden shift into a high-volume or outlier activity cluster?
    context: |
      This question uses clustering algorithms to group users based on their key access patterns (e.g., volume, number of hosts). The system can then detect when a user's behavior changes dramatically, causing them to move from a 'low access' cluster to a 'high access' cluster, or to become a new outlier entirely. This flags a significant change in behavior indicative of potential account compromise or insider threat activity.
    answer_sources:
      - Windows Event ID 4663
      - Zeek files.log
      - Enterprise-wide file systems, centralized certificate stores, distributed developer workstations, and network file shares (SMB/NFS).
    range: last 90 days
    queries:
      - pseudocode: |
          FOR all users, CLUSTER based on key access features (key count, host count, etc.).
          IF a user moves to a higher-risk cluster or becomes an outlier, ALERT.
  - question: Did a successful certificate-based authentication originate from a known malicious IP, an anonymizing proxy, or a non-business country?
    context: |
      This question provides a straightforward check for high-risk authentication events. By enriching every successful certificate-based login with threat and geographic intelligence, we can immediately flag authentications from sources that are almost certainly illegitimate, such as TOR exit nodes or IPs on a known-bad list. This provides a high-confidence alert for a compromised certificate.
    answer_sources:
      - Windows Event ID 4624
      - Zeek ssh.log
      - Zeek ssl.log
      - VPN/Remote Access Logs
      - Authentication servers (Active Directory), VPN concentrators, SSH jump boxes/bastion hosts, network perimeter gateways, and any service allowing client certificate authentication.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH successful cert-based auth events.
          ENRICH source IP with GeoIP and threat intel.
          IF IP is on deny-list OR from non-business country, ALERT.
  - question: Does a successful certificate-based authentication deviate significantly from the user's established historical profile of locations, networks, and client applications?
    context: |
      This question detects 'impossible travel' and other contextual anomalies by profiling each user's normal authentication behavior. A risk score is calculated for each new login based on deviations from the user's historical norms (e.g., a new country, a new ISP). If the cumulative score surpasses a threshold, it indicates that the authentication, while technically valid, is contextually suspicious and may be the result of a stolen key.
    answer_sources:
      - Windows Event ID 4624
      - Zeek ssh.log
      - Zeek ssl.log
      - VPN/Remote Access Logs
      - Authentication servers (Active Directory), VPN concentrators, SSH jump boxes/bastion hosts, network perimeter gateways, and any service allowing client certificate authentication.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH successful cert-based auth events.
          FOR each user, COMPARE current login attributes (country, ASN, client) to historical profile.
          CALCULATE risk score based on deviations.
          IF score > threshold, ALERT.
  - question: Does a user's certificate-based login fall outside the boundary of their 'normal' behavior as learned by an anomaly detection model?
    context: |
      This question uses a per-user novelty detection model to create a sophisticated, multi-dimensional boundary of normal login behavior. Features like geolocation, time of day, and client software are used to train the model. Any new login that falls outside this learned boundary is flagged as a high-confidence anomaly, allowing for the detection of subtle, novel attacks that might not trigger rule-based or simple statistical checks.
    answer_sources:
      - Windows Event ID 4624
      - Zeek ssh.log
      - Zeek ssl.log
      - VPN/Remote Access Logs
      - Authentication servers (Active Directory), VPN concentrators, SSH jump boxes/bastion hosts, network perimeter gateways, and any service allowing client certificate authentication.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH successful cert-based auth events.
          FOR each user, SCORE login features with their dedicated novelty detection model.
          IF login is an outlier, ALERT.
  - question: Has a host exhibited a sequence of events corresponding to key collection, archiving, and exfiltration within a short time window?
    context: |
      This question aims to detect the full attack chain on a single host by correlating discrete events. A stateful rule looks for a specific sequence: mass reading of key files, followed by the execution of an archiving tool (like 'zip' or 'tar'), followed by an anomalous outbound network connection. Detecting this entire sequence provides a very high-confidence alert that data theft is in progress.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - All endpoints and servers (for process/file activity), and network egress points (for exfiltration traffic analysis).
    range: last 90 days
    queries:
      - pseudocode: |
          CORRELATE events from a single host in a 15-min window:
          1) >5 key file reads, THEN
          2) archive tool process creation, THEN
          3) outbound connection to low-rep domain/port.
          IF sequence matches, ALERT.
  - question: Is there a statistical correlation between a spike in key file access, the creation of an archive file, and a subsequent outbound data transfer of a similar size?
    context: |
      This question uses statistical correlation to link the stages of exfiltration. It detects an anomalous rate of key file access on a host. If this is followed by the creation of a new archive file, it then looks for an outbound network transfer whose size closely matches the size of that archive. This data-driven correlation between file size and bytes transferred provides strong evidence of exfiltration.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - All endpoints and servers (for process/file activity), and network egress points (for exfiltration traffic analysis).
    range: last 90 days
    queries:
      - pseudocode: |
          IF key file read rate > 98th percentile on host, THEN
            WATCH for archive creation.
          IF archive created, THEN
            WATCH for outbound connection where data size ≈ archive size.
          IF match, ALERT.
  - question: Does the sequence of events on a host have a high probability of matching a 'collect, compress, exfiltrate' attack chain model?
    context: |
      This question uses a Hidden Markov Model (HMM) to probabilistically model the states of an attack. The model is trained to recognize the likely transitions between states like 'Benign,' 'Discovery,' 'Staging,' and 'Exfiltration.' By feeding a host's real-time event stream into the model, it can calculate the probability that the observed sequence of events corresponds to the learned malicious attack chain, allowing it to detect the pattern even with variations.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - All endpoints and servers (for process/file activity), and network egress points (for exfiltration traffic analysis).
    range: last 90 days
    queries:
      - pseudocode: |
          STREAM host events (file reads, process creations, network connections) into a trained HMM.
          IF event sequence has high probability of matching 'Collect->Stage->Exfil' states, ALERT.