name: T1090.002: External Proxy
id: c8a9b1d2-3e4f-4a5b-8c6d-7e8f9a0b1c2d
description: This playbook helps investigate whether an adversary is using an external proxy for command and control communications. It focuses on detecting proxy usage by identifying various indicators, such as outbound network connections to destinations on threat intelligence feeds, the execution of known proxy or tunneling tools (e.g., ngrok, chisel), or the use of specific command-line arguments associated with proxying. It also covers more advanced detection methods like matching SSL/TLS JA3/JA3S fingerprints, identifying anomalous network traffic patterns (e.g., beaconing, unusual data ratios), observing processes that do not normally make network connections, and detecting direct connections that bypass corporate web proxies to connect to hosting or VPN providers.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags:
  - none
questions:
  - question: Are any outbound network connections matching known malicious proxy, VPN, or anonymization services from threat intelligence feeds?
    context: This question aims to find direct evidence of communication with known bad infrastructure. Adversaries often use public or compromised proxy services to obscure their origin. Matching outbound network logs against a threat intelligence feed of known proxy/VPN/TOR nodes is a high-fidelity method for detecting potential C2 channels.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress Network Gateways and Corporate DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: JOIN zeek_conn_logs, zeek_dns_logs WITH threat_intel_proxy_feed ON (destination_ip OR destination_domain). ALERT on match.
  - question: Has any external Autonomous System Number (ASN) experienced a sudden spike in the number of unique internal hosts connecting to it?
    context: This question seeks to identify new or emerging proxy services that are not yet on threat intelligence lists. A sudden increase in the number of internal clients connecting to a single, previously uncommon ASN can indicate that multiple compromised systems are being directed to use a new C2 proxy. This statistical deviation from a historical baseline helps uncover covert infrastructure.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress Network Gateways and Corporate DNS Resolvers
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: FOR each destination_ASN, COUNT unique source_hosts over 24h. COMPARE count to 30-day baseline (mean, stddev). ALERT if count > (mean + 3*stddev) OR count > 99th percentile.
  - question: Are there any network connections flagged by a machine learning model as being proxy-like based on their characteristics?
    context: This question uses a machine learning model to identify proxy traffic that evades simpler detection methods. By training a classifier on features like connection duration, data volume, protocol, and DNS query details, the model can learn the subtle patterns of proxy-like behavior and flag suspicious connections that might otherwise be missed.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Egress Network Gateways and Corporate DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: INPUT connection_features (duration, bytes, proto, port, dns_ttl, etc.) into classification_model. ALERT if prediction is 'proxy-like' with high confidence.
  - question: Have any processes been created with a filename or hash matching a known external proxy or tunneling tool?
    context: This question looks for the most direct evidence of proxy tool execution on an endpoint. By comparing the names and file hashes of all newly created processes against a curated list of known tools (e.g., ngrok, chisel, htran), analysts can immediately identify when an adversary has deployed a recognized proxy utility.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FROM process_creation_events (Sysmon EID 1, Win 4688), CHECK if process_name OR process_hash IN known_proxy_tool_list. ALERT on match.
  - question: Have any rare or uncommon processes, such as 'ngrok.exe', been executed across the enterprise?
    context: This question helps find custom or less common proxy tools that are not on a known-bad list. By calculating the prevalence of every process across the enterprise, those that run on a very small number of hosts can be flagged as anomalous. Adversaries often use custom-compiled or obscure tools to evade signature-based detection.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: FOR each process_name, COUNT unique hosts over 30 days. CALCULATE prevalence = (unique_hosts / total_hosts). ALERT if prevalence < threshold (e.g., 0.1%).
  - question: Has an anomaly detection model identified any highly unusual process executions that could indicate an unknown proxy tool?
    context: This question uses machine learning to detect unknown or disguised proxy tools based on their execution characteristics. An anomaly detection model can flag a process as suspicious based on features like high-entropy names (indicating packing), unusual parent processes, or execution from non-standard file paths, even if the tool itself is unknown.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: INPUT process_features (name_entropy, parent_process, file_path, etc.) into anomaly_detection_model (e.g., Isolation Forest). ALERT if anomaly_score is high.
  - question: Have any processes been executed with command-line arguments containing keywords or syntax used for establishing a proxy or tunnel?
    context: This question inspects the command-line arguments of processes for tell-tale signs of proxy or tunneling activity. Many tools use specific flags or syntax (e.g., '-proxy', '-R:', '-L:', 'IP:port') to configure their behavior. Scanning for these patterns can reveal the use of legitimate tools for malicious purposes or identify the functionality of an unknown tool.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FROM process_creation_events, SCAN command_line with regex for proxy_patterns ('-listen', '-tran', '-proxy', '-R:', etc.). ALERT on match.
  - question: Have any processes been executed with unusually high-entropy command-line arguments compared to their historical baseline?
    context: This question seeks to identify obfuscated or packed commands. Adversaries may encode or encrypt payloads within command-line arguments, which results in a high degree of randomness or entropy. Flagging command lines with abnormally high entropy for a given process can uncover attempts to hide malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each process_execution, CALCULATE command_line_entropy. COMPARE to historical entropy baseline for that process_name. ALERT if entropy > 98th percentile.
  - question: Did a machine learning topic model classify any process command-line arguments as belonging to a suspicious category like remote access or proxying?
    context: This question uses Natural Language Processing (NLP) to categorize the intent of command-line arguments. By training a topic model on a large corpus of command lines, it's possible to identify clusters of terms related to suspicious activities. New commands can then be classified to see if they fall into a pre-identified 'proxying' or 'remote access' topic.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: INPUT command_line_text into topic_model (LDA). GET topic probabilities. ALERT if probability for 'proxy_topic' is high.
  - question: Have any outbound SSL/TLS connections used a JA3 or JA3S fingerprint associated with a known proxy tool or C2 framework?
    context: This question uses SSL/TLS client fingerprinting (JA3/JA3S) to identify malicious tools. The way a client initiates a TLS session creates a unique fingerprint. These fingerprints for known C2 frameworks (Cobalt Strike) and proxy tools (ngrok) are often shared publicly, allowing for high-fidelity detection of specific malware or tools, even when the traffic is encrypted.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Egress Network Gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FROM zeek_ssl_logs, CHECK if ja3_hash OR ja3s_hash IN known_malicious_fingerprint_list. ALERT on match.
  - question: Have any new or rare JA3/JA3S fingerprints been observed connecting to high-risk or uncategorized domains?
    context: This question aims to identify potentially new or unknown malicious tools by focusing on rarity. While some JA3/JA3S hashes are common (e.g., from major browsers), a hash seen for the first time or from very few hosts in the environment is anomalous. Correlating this rarity with connections to non-standard domains increases the likelihood of it being suspicious.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Egress Network Gateways
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: CALCULATE prevalence of all ja3/ja3s hashes over 30 days. ALERT if hash_prevalence is low (e.g., < 0.05% of hosts) AND destination_domain_category is 'high-risk' or 'unknown'.
  - question: Has unsupervised machine learning identified any suspicious clusters of SSL/TLS sessions that could indicate an unknown proxy tool?
    context: This question uses clustering to find groups of anomalous SSL/TLS connections without prior knowledge of what is 'bad'. By grouping sessions based on features like JA3 hash, cipher suites, and certificate details, the model can isolate small, distinct clusters of traffic that differ from the large clusters of normal browser traffic. These outlier clusters may represent a new C2 tool.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Egress Network Gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CLUSTER ssl_sessions using features (ja3, ciphers, cert_issuer, cert_validity, SNI). ANALYZE small or outlier clusters for suspicious patterns.
  - question: Has a process that is not on an approved allowlist initiated an outbound network connection, especially from an unusual file path?
    context: This question identifies suspicious network activity by focusing on the source process. Most network connections originate from a predictable set of applications (e.g., browsers, email clients). An alert on a process making a network connection that isn't on an explicit allowlist, particularly if it's running from a temporary or user-writable directory, is a strong indicator of malicious code execution.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 3
      - Zeek conn.log
      - All Endpoints and Servers, Egress Network Gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: JOIN process_events with network_connection_events. ALERT if process_name NOT IN network_allowlist OR file_path IN ('C:\\Temp\\', 'C:\\Users\\Public\\').
  - question: Has any process been observed making a network connection to a destination port or ASN that is not part of its established baseline behavior?
    context: This question establishes a behavioral baseline for each process's network activity. A process like 'svchost.exe' might normally communicate with Microsoft update servers. If it suddenly starts connecting to a new ASN on an unusual port, this deviation from its normal profile is anomalous and warrants investigation. This can detect when a legitimate process is hijacked or used to proxy traffic.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 3
      - Zeek conn.log
      - All Endpoints and Servers, Egress Network Gateways
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: FOR each process_name, build a 30-day baseline of destination_ports and destination_ASNs. ALERT if a new connection uses a port or ASN not in the baseline.
  - question: Has a machine learning model flagged a process execution as 'suspicious' right before that process initiated a network connection?
    context: This question uses a two-stage approach. First, a machine learning model flags a process execution as suspicious based on its static properties (name, path, parent). Second, it checks if that specific process instance subsequently made a network connection. This correlation elevates the priority of the alert, as it combines a suspicious process with risky network behavior.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 3
      - Zeek conn.log
      - All Endpoints and Servers, Egress Network Gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: INPUT process_features into classifier. IF prediction is 'suspicious', CHECK if that process_instance_id later appears in network_connection_logs. ALERT on match.
  - question: Has Zeek's weird activity detector generated notices like 'ssl_not_ssl' or 'possible_split_routing' that indicate protocol tunneling?
    context: This question leverages the built-in heuristics of network monitoring tools like Zeek. The 'weird.log' specifically flags protocol anomalies and other strange traffic patterns that don't conform to standards. Notices like 'ssl_not_ssl' (non-SSL traffic over port 443) are strong indicators of tunneling or evasion and can directly point to C2 activity.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Egress Network Gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: MONITOR zeek_weird_log for notices like 'ssl_not_ssl', 'possible_split_routing', 'http_on_unusual_port'. CORRELATE with conn.log and ALERT.
  - question: Are there any network flows exhibiting highly periodic beaconing (low jitter) or a highly asymmetric data ratio (e.g., high sent/received ratio with low total volume)?
    context: This question looks for two common C2 traffic patterns. First, C2 implants often 'beacon' back to the server on a fixed interval, resulting in connections with very low time variance (jitter). Second, C2 heartbeats or small data exfiltrations can appear as connections with a high ratio of sent-to-received bytes but low overall volume. Both are statistical outliers compared to normal interactive traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Egress Network Gateways
    range: last 24 hours
    queries:
      - search_technology: pseudocode
        query: 1. CALCULATE stddev of inter-arrival times for source-dest pairs. ALERT if stddev is near zero. 2. CALCULATE ratio = orig_bytes / resp_bytes. ALERT if ratio > 10 and total_bytes < 10KB.
  - question: Has a time-series anomaly detection model flagged any hosts for exhibiting significant changes in their aggregated traffic volume patterns?
    context: This question models the normal 'rhythm' of a host's network traffic over days and weeks. A time-series model learns this seasonality and can detect when a host's traffic pattern suddenly changes—for example, a sudden increase in outbound data at night. This can indicate a new C2 infection or the activation of a dormant proxy tool.
    answer_sources:
      - Zeek conn.log
      - Zeek weird.log
      - Egress Network Gateways
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each host, INPUT aggregated bytes_sent/received time-series into anomaly_detection_model (e.g., S-H-ESD). ALERT on detected anomalies.
  - question: Has any host from a user subnet made a direct outbound connection on port 80 or 443, bypassing the designated corporate web proxy?
    context: This question enforces a key network security policy. In many organizations, all user web traffic should be routed through a corporate proxy for inspection and filtering. A direct connection from a user endpoint to the internet on standard web ports is a policy violation and a common technique for malware to bypass security controls.
    answer_sources:
      - Zeek conn.log
      - User Endpoint Subnets, Egress Network Gateways, DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FROM zeek_conn_logs WHERE source_ip IN user_subnets AND dest_port IN (80, 443), ALERT if dest_ip NOT IN corporate_proxy_ips.
  - question: Has any host shown a statistically significant increase in its daily connection count to ASNs associated with public cloud, hosting, or VPN providers?
    context: This question builds on the proxy bypass concept by focusing on the destination. Adversaries frequently host C2 infrastructure on major cloud (AWS, Azure) or VPS providers. While some direct connections to these providers may be legitimate, a host that suddenly starts making many more connections than its baseline average may have been compromised and is now communicating with a C2 server.
    answer_sources:
      - Zeek conn.log
      - User Endpoint Subnets, Egress Network Gateways, DNS Resolvers
    range: last 30 days
    queries:
      - search_technology: pseudocode
        query: ENRICH destination_ip with ASN info. FOR each host, COUNT daily connections to cloud/hosting/VPN ASNs. COMPARE to host's 30-day baseline. ALERT if count > (mean + 3*stddev).
  - question: Has a community detection algorithm identified a small group of internal hosts that are all connecting to the same non-mainstream external IP address?
    context: This question uses graph analysis to uncover shared C2 infrastructure. By modeling network connections as a graph, community detection algorithms can find 'cliques' of internal hosts that are all communicating with the same external endpoint. A small, isolated community connecting to an obscure IP is highly suspicious and could represent a set of compromised machines controlled by a single C2 proxy.
    answer_sources:
      - Zeek conn.log
      - User Endpoint Subnets, Egress Network Gateways, DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CREATE graph of internal_hosts and external_ips. RUN community detection algorithm (e.g., Louvain). INVESTIGATE small communities with a common external IP.