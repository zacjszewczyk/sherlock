name: T1496.004: Cloud Service Hijacking
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary is causing a negative impact by hijacking cloud services. The investigation focuses on identifying indicators such as the use of compromised API keys in outbound traffic, communication with malicious destinations, API call patterns indicative of resource abuse tools, anomalous increases in data transfer or API call volumes from internal hosts, access from suspicious IP addresses (e.g., impossible travel, anonymizing proxies), and hosts exhibiting network behavior that is an outlier compared to their peers.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are outbound network requests communicating with known malicious IPs/domains associated with cloud service hijacking, or are they exposing known-compromised API keys?
    context: This question aims to identify direct evidence of compromise by checking for two high-confidence indicators. First, it looks for network traffic directed to destinations already identified by threat intelligence as part of a cloud hijacking infrastructure. A match here strongly suggests communication with an adversary. Second, it scans for the presence of specific API keys that are known to be compromised. An organization can maintain a watchlist of keys exposed in previous breaches or public repositories. Finding such a key in outbound traffic indicates it is being actively used or exfiltrated, likely for unauthorized cloud resource access.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network egress points (e.g., firewalls, proxies)
      - Internet gateway
      - API gateways
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: JOIN http_log, conn_log, dns_log by UID. FILTER for destination IP/domain in threat_intel_feed. SCAN http_log URI/headers/body for keys in compromised_key_watchlist. ALERT on match.
  - question: Are there API keys with unusually low entropy being used in outbound requests, suggesting they are weak or generated by malicious tools?
    context: This question uses a statistical approach to find potentially weak or illegitimate API keys. Legitimate, randomly generated API keys typically have high entropy (a measure of randomness). In contrast, keys that are hardcoded, predictable, or generated by certain adversary tools may exhibit significantly lower entropy. By establishing a baseline for normal key entropy within the organization and flagging outliers, analysts can proactively identify suspicious keys that might be used for cloud service hijacking, even if the key is not yet on a known-compromised list.
    answer_sources:
      - Zeek http.log
      - Network egress points (e.g., firewalls, proxies)
      - Internet gateway
      - API gateways
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each API_key in http_log, CALCULATE entropy. ESTABLISH baseline_entropy for legitimate keys. ALERT if entropy < 10th_percentile_of_baseline.
  - question: Can we identify API sessions with a high probability of being associated with cloud service hijacking based on features like request method, user-agent, and destination?
    context: This question applies a machine learning model to score API sessions for their likelihood of being malicious. By training a model on features extracted from network logs (e.g., HTTP request methods, user-agent strings, URI structure, data volume, destination ASN), it can learn the subtle patterns that differentiate legitimate traffic from cloud service hijacking attempts. This allows for the detection of novel or sophisticated attacks that may not match simple rules or statistical thresholds.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Network egress points (e.g., firewalls, proxies)
      - Internet gateway
      - API gateways
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: EXTRACT features (request_method, user_agent, URI, resp_bytes, dest_ASN) from http_log and conn_log. APPLY pre-trained classification model. ALERT on sessions with 'hijacking_probability' > threshold.
  - question: Is a single source IP making an excessive number of API calls to a cloud service endpoint in a short time, indicating tool-based abuse?
    context: This question seeks to detect brute-force or high-volume resource abuse by setting a clear threshold for API call frequency. Many automated tools used for cloud service hijacking operate by sending a rapid burst of requests. By creating a rule that triggers an alert when a single IP exceeds a specific number of requests to a known API endpoint within a defined time window, security teams can quickly identify and block this type of automated abuse.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Cloud application gateways
      - API gateways
      - outbound web proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_IP and API_endpoint_URI in http_log, COUNT requests per 5-minute window. ALERT if count > 100.
  - question: Is any source IP making API calls to a cloud service with an abnormally fast inter-request time, suggesting automated activity?
    context: This question focuses on the timing between API requests to detect automation. Human users and legitimate applications typically have a variable and relatively slow pace of interaction. Automated scripts or abuse tools, however, often make requests as quickly as possible, resulting in a very short and consistent time between requests. By baselining the normal inter-request time for a given API endpoint and flagging IPs that are significantly faster, analysts can detect machine-driven activity characteristic of cloud service hijacking.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Cloud application gateways
      - API gateways
      - outbound web proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each source_IP and API_endpoint, CALCULATE inter-request_times. ESTABLISH baseline distribution. ALERT if inter-request_time < 5th_percentile_of_baseline.
  - question: Are there anomalous API session sequences that deviate from learned normal workflows, indicating scripted abuse?
    context: This question leverages machine learning to understand the 'grammar' of legitimate API interactions. A model, such as an RNN, is trained on sequences of API calls (e.g., paths and methods) from normal user and application traffic. This allows it to learn valid workflows. When an adversary uses a script or tool, the sequence of API calls often deviates from these learned patterns. The model can then flag these anomalous sequences, providing a powerful way to detect scripted abuse that might otherwise appear as a series of individually valid requests.
    answer_sources:
      - Zeek http.log
      - Cloud application gateways
      - API gateways
      - outbound web proxies
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: REPRESENT each API session as a sequence of (URI_path, HTTP_method). APPLY pre-trained RNN/Transformer model. IDENTIFY and ALERT on anomalous sequences that deviate from normal learned workflows.
  - question: Is an internal source IP sending emails to an unusually high number of unique domains, suggesting a compromised account is being used for a spam campaign?
    context: This question provides a specific, symbolic rule to detect a common form of cloud service abuse: spam campaigns via hijacked email services (like AWS SES). A compromised account is often used to send a high volume of emails to a wide variety of recipient domains. Monitoring for a single internal IP sending emails to an abnormally large number of unique domains in a short period is a high-fidelity indicator of this type of abuse.
    answer_sources:
      - Zeek smtp.log
      - Mail gateways
      - Network egress points
      - Servers hosting cloud service SDKs
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FROM smtp_log, GROUP by source_IP. COUNT distinct recipient_domains per hour. ALERT if distinct_domain_count > 50.
  - question: Has an internal host's outbound data traffic to cloud services significantly spiked above its historical baseline?
    context: This question uses statistical analysis to detect anomalous data transfer volumes for individual hosts. Every host has a typical pattern of network behavior. A sudden, dramatic increase in the amount of data a host sends to cloud service IP ranges, exceeding its own historical average by several standard deviations, can indicate that the host has been compromised and is being used for unauthorized data exfiltration or other high-volume abuse.
    answer_sources:
      - Zeek conn.log
      - Mail gateways
      - Network egress points
      - Servers hosting cloud service SDKs
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each host, CALCULATE hourly outbound_bytes to cloud_IPs. COMPUTE 30-day moving average and standard deviation. ALERT if current_hour_bytes > (average + 3 * std_dev).
  - question: Does the hourly API request volume for a critical cloud service show a significant anomaly when compared to a time-series forecast model?
    context: This question uses time-series forecasting to detect anomalies in the overall usage of a cloud service. Business use of cloud services often has predictable patterns (e.g., higher usage during business hours, weekly cycles). A time-series model can learn these patterns and predict expected request volumes. When the actual volume significantly deviates from the prediction, it generates an anomaly score, alerting analysts to a potential service-wide abuse event that might be missed when looking at individual hosts alone.
    answer_sources:
      - Zeek http.log
      - Mail gateways
      - Network egress points
      - Servers hosting cloud service SDKs
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CREATE time-series model (e.g., SARIMA) on hourly API request volume from http_log. TRAIN on 30-60 days of data. CALCULATE anomaly score based on residual (observed - predicted). ALERT on high score.
  - question: Is a cloud service being accessed from an IP address known to be malicious, a TOR exit node, or an anonymous proxy?
    context: This question focuses on identifying high-risk login or access attempts based on the reputation of the source IP address. Adversaries often use anonymizing services (TOR, VPNs, proxies) or previously compromised infrastructure to hide their true location. Correlating source IPs from authentication logs against threat intelligence feeds that list these types of malicious or anonymous IPs provides a straightforward and effective way to flag suspicious access attempts.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 4624
      - Authentication servers (e.g., Active Directory)
      - VPN concentrators
      - Remote Desktop Gateways
      - Cloud IAM infrastructure
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: EXTRACT source_IP from auth_events (conn_log, WinEvent 4624). COMPARE source_IP against CTI feed of malicious/TOR/proxy IPs. ALERT on match.
  - question: Has a user logged in from a country or ASN never seen for that user before, or at a time that is highly unusual for them?
    context: This question aims to detect compromised accounts by building a historical profile of normal user login behavior and identifying deviations. It flags logins that are anomalous based on context like geography (a user's first login from a new country), network origin (a new ASN), or timing (a 9-to-5 employee logging in at 3 AM). This is a form of 'impossible travel' or anomalous behavior detection that is effective at catching credential abuse.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 4624
      - Authentication servers (e.g., Active Directory)
      - VPN concentrators
      - Remote Desktop Gateways
      - Cloud IAM infrastructure
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each user, MAINTAIN profile of historical login countries, ASNs, and hours. ON new login, ALERT if country or ASN is new, or if login time is outside the user's 95% time window.
  - question: Does a user's login and subsequent API activity represent a significant outlier compared to their own historical behavior profile?
    context: This question applies user-specific machine learning models to detect sophisticated account takeovers. An outlier detection model is trained on the normal activity pattern for each individual user, using features like time of day, geolocation, and ASN. When a new login and subsequent API session occurs, it is evaluated against this personal model. If the new activity is a significant outlier from the user's established 'normal' cluster, it gets flagged, indicating a high probability of an account takeover.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Windows Event ID 4624
      - Authentication servers (e.g., Active Directory)
      - VPN concentrators
      - Remote Desktop Gateways
      - Cloud IAM infrastructure
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR each user, TRAIN one-class SVM/Isolation Forest model on historical feature vectors (time, geo, ASN). ON new login/API activity, CREATE feature vector. ALERT if model classifies it as an outlier.
  - question: Are there any connections to cloud services with an abnormally long duration and excessively high data transfer volume?
    context: This question uses simple thresholds to find network connections that are suspicious due to their sheer scale. A very long-lived connection transferring a massive amount of data to a cloud service provider is not typical behavior for most applications. Such activity could indicate a compromised host being used for large-scale data exfiltration or as part of a distributed attack infrastructure. Setting thresholds for duration and volume provides a clear-cut rule for detecting these outliers.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Data center network core
      - Servers hosting sensitive data
      - Cloud synchronization clients
      - Developer workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MONITOR conn_log for connections to cloud IPs. ALERT if connection_duration > 24 hours AND total_bytes > 50 GB.
  - question: Is any host's outbound data volume to cloud services a significant outlier compared to its functional peer group?
    context: This question identifies anomalous hosts by comparing their behavior to that of their peers. Hosts with similar functions (e.g., all developer workstations, all web servers) should exhibit similar network traffic patterns. By grouping hosts and establishing a baseline for outbound data volume for each group, it becomes possible to flag a host that is sending significantly more data than its peers. This is a strong indicator that the specific host may be compromised, even if its traffic volume hasn't violated its own individual historical baseline.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Data center network core
      - Servers hosting sensitive data
      - Cloud synchronization clients
      - Developer workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: GROUP hosts by role (e.g., via CMDB). FOR each group, CALCULATE 95th percentile for daily outbound data to cloud IPs. ALERT if any host exceeds its group's percentile by >50%.
  - question: Has a host abruptly shifted its network behavior to a different cluster or become an outlier, indicating a change in activity?
    context: This question uses unsupervised machine learning to automatically group hosts based on their network behavior and detect significant changes. A clustering algorithm can identify natural groupings of hosts (e.g., low-traffic clients, high-traffic servers) without needing pre-defined roles. The system then monitors for hosts that suddenly change their behavior and move from one cluster to another (e.g., a workstation starts behaving like a server) or become a statistical outlier to their long-standing group. Such a shift is a strong signal of a potential compromise or misuse.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Data center network core
      - Servers hosting sensitive data
      - Cloud synchronization clients
      - Developer workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CREATE feature profiles for each host (avg_bytes, unique_IPs, etc.). USE clustering (e.g., K-Means) to group hosts. MONITOR for hosts that shift clusters or become outliers. ALERT on change.