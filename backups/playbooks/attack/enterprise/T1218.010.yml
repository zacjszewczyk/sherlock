name: T1218.010: Regsvr32
id: f5b8e9a0-1c2d-4f3e-8b6a-9c8d7e6f5a4b
description: This playbook helps investigate whether an adversary is evading defenses by proxying execution through the signed Windows binary Regsvr32.exe. It focuses on detecting several key indicators, including execution with a URL pointing to a malicious or rare domain, spawning from an unusual parent process like an Office application, loading a DLL from a non-standard or user-writable directory, spawning child processes like cmd.exe or making outbound network connections, and using the specific '/n /i:' switch combination known as the 'Squiblydoo' attack.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is regsvr32.exe being used to execute code from a URL associated with a known malicious indicator?
    context: This question aims to detect the direct use of regsvr32.exe to download and execute malicious payloads from the internet. By cross-referencing the URL against threat intelligence feeds, analysts can quickly identify high-confidence malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek dns.log
      - All Windows Endpoints and Servers; Network Egress Points; DNS Servers
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process_creation_events
          WHERE process_name = "regsvr32.exe" AND command_line CONTAINS ("http://", "https://")
          EXTRACT url from command_line
          LOOKUP url in threat_intelligence_feed
          RETURN events where url is malicious
  - question: Is regsvr32.exe communicating with an unusually rare or algorithmically generated domain?
    context: Adversaries often use newly created or algorithmically generated domains (DGA) for command and control, which will appear as rare or have high entropy. This question helps uncover such activity that might not yet be in threat intelligence feeds.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek dns.log
      - All Windows Endpoints and Servers; Network Egress Points; DNS Servers
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process_creation_events
          WHERE process_name = "regsvr32.exe" AND command_line CONTAINS url
          EXTRACT domain from url
          CALCULATE domain_rarity and domain_entropy across enterprise
          RETURN events where domain_rarity < 5th_percentile OR domain_entropy > 3.5
  - question: Can a machine learning model classify a regsvr32.exe execution event as malicious based on its features?
    context: This question leverages machine learning to automate the detection of malicious regsvr32.exe usage by considering multiple features simultaneously, such as the parent process, command-line arguments, and domain rarity. This can identify complex patterns that simple rules might miss.
    answer_sources:
      - Windows Event ID 4688
      - Zeek http.log
      - Zeek dns.log
      - All Windows Endpoints and Servers; Network Egress Points; DNS Servers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each regsvr32_execution_event
            EXTRACT features (parent_process, cmd_length, has_url, domain_rarity)
            APPLY classification_model to features
            RETURN events where model_score > 0.9
  - question: Was regsvr32.exe spawned by a suspicious parent process like an Office application or script interpreter?
    context: Legitimate use of regsvr32.exe is typically initiated by system processes. When spawned by user-facing applications like Microsoft Office or scripting engines, it is a strong indicator of a phishing payload or a script-based attack attempting to execute code.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process_creation_events
          WHERE process_name = "regsvr32.exe"
          AND parent_process IN ("winword.exe", "excel.exe", "powerpnt.exe", "outlook.exe", "mshta.exe", "wscript.exe", "powershell.exe")
          RETURN matching_events
  - question: Is the observed parent-child process relationship for regsvr32.exe statistically anomalous compared to historical enterprise data?
    context: This question aims to identify unusual process chains by baselining normal parent-child relationships. An attacker using a novel method to launch regsvr32.exe would create a rare pairing, which this statistical analysis is designed to detect.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments
    range: last 30 days
    queries:
      - pseudocode: |
          BUILD frequency_table of all parent-child pairs from last 30 days of data
          FOR each new regsvr32_execution_event
            LOOKUP parent-child_pair in frequency_table
            RETURN event if frequency < 0.01%
  - question: Does the process execution chain leading to a regsvr32.exe execution deviate from established normal patterns according to an anomaly detection model?
    context: This question uses an unsupervised machine learning model to identify outlier execution chains. Unlike simple parent-child analysis, this can consider the entire process tree, potentially detecting more sophisticated or multi-stage attacks that culminate in regsvr32.exe execution.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each regsvr32_execution_event
            VECTORIZE process_tree
            APPLY anomaly_detection_model
            RETURN event if identified as outlier
  - question: Is regsvr32.exe being used to load a DLL from a non-standard or user-writable directory?
    context: Adversaries often drop malicious DLLs in temporary or user-specific directories (like C:\Users\, %APPDATA%, C:\ProgramData\) to bypass protections on system directories. This question helps detect this common TTP by flagging executions from suspicious locations.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, focusing on user profile directories and temporary folders
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process_creation_events WHERE process_name = "regsvr32.exe"
          EXTRACT dll_path from command_line
          IF dll_path NOT IN allow_list AND dll_path MATCHES ("^C:\\Users\\", "^C:\\ProgramData\\", "\\AppData\\", "^C:\\Windows\\Temp\\")
            RETURN event
  - question: Is regsvr32.exe loading a DLL from a path that is statistically rare or has high entropy?
    context: This question aims to find malicious DLLs that use randomized file or directory names to avoid signature-based detection. High entropy in the path can indicate randomization, and rarity analysis can uncover paths not used by legitimate software.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, focusing on user profile directories and temporary folders
    range: last 30 days
    queries:
      - pseudocode: |
          FOR each regsvr32_execution_event with dll_path
            CALCULATE path_entropy and path_rarity from historical data
            RETURN event if path_entropy > 95th_percentile OR path_rarity < 1%
  - question: Does a regsvr32.exe execution event deviate from a baseline of known-benign behavior, according to a one-class machine learning model?
    context: This question uses a one-class anomaly detection model trained only on "good" behavior. Any regsvr32.exe execution that doesn't conform to the learned normal profile (based on features like path depth and parent process) is flagged as suspicious. This is useful when malicious examples are scarce.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers, focusing on user profile directories and temporary folders
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each regsvr32_execution_event
            EXTRACT features (path_depth, path_composition, parent_process)
            APPLY one_class_svm_model
            RETURN event if flagged as anomaly
  - question: Did regsvr32.exe spawn a command shell or another script interpreter?
    context: Legitimate registration of a DLL via regsvr32.exe should not result in it spawning child processes like cmd.exe or powershell.exe. This behavior is a very strong indicator that the DLL executed by regsvr32.exe is malicious and is continuing an attack chain.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Windows Event ID 5156
      - All Windows Endpoints and Servers; Network Egress Gateways
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process_creation_events
          WHERE parent_process = "regsvr32.exe"
          AND process_name IN ("cmd.exe", "powershell.exe", "pwsh.exe", "wscript.exe", "cscript.exe", "rundll32.exe")
          RETURN critical_alert
  - question: Did regsvr32.exe initiate any network connections, and if so, was the destination port unusual?
    context: Similar to spawning child processes, regsvr32.exe should not typically make outbound network connections. This question seeks to identify this highly anomalous behavior, adding context by checking if the destination port is also rare, which could indicate a C2 channel on a non-standard port.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Windows Event ID 5156
      - All Windows Endpoints and Servers; Network Egress Gateways
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH network_connection_events where process_name = "regsvr32.exe"
          FOR each connection
            CALCULATE destination_port_rarity
            PRIORITIZE alert based on rarity (e.g., < 10th percentile)
          RETURN prioritized_alerts
  - question: Following a suspicious regsvr32.exe execution, did the host's network traffic exhibit anomalous behavior?
    context: This question acts as a secondary confirmation. After a potentially malicious regsvr32.exe event, this check looks for subsequent anomalous network activity (like a sudden spike in data exfiltration or C2 beaconing) to increase confidence that a compromise has occurred.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Windows Event ID 5156
      - All Windows Endpoints and Servers; Network Egress Gateways
    range: 15 minutes after event
    queries:
      - pseudocode: |
          ON suspicious_regsvr32_event
            MONITOR host_network_traffic for next 15 minutes
            APPLY time_series_model (ARIMA) to traffic data
            RETURN alert if anomaly detected (e.g., > 3 std dev from forecast)
  - question: Was regsvr32.exe executed using the '/n' and '/i:' switches, indicative of the 'Squiblydoo' technique?
    context: The combination of the '/n' and '/i:' switches is a well-known attack pattern ('Squiblydoo') used to execute a script from a DLL without registering it. This is almost never used for legitimate purposes and is a high-fidelity indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH process_creation_events
          WHERE process_name = "regsvr32.exe"
          AND command_line CONTAINS "/n" AND command_line CONTAINS "/i:"
          RETURN critical_alert
  - question: How many times has the 'Squiblydoo' technique been observed, and which hosts and payloads were involved?
    context: This question moves from detection to incident scoping. By tracking all instances of this specific technique, an analyst can quickly understand the breadth of a campaign, identifying all affected hosts and the different payloads being used across the enterprise.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: |
          CREATE dashboard counting regsvr32 executions with "/n" and "/i:"
          GROUP BY hostname, payload_argument
          VISUALIZE count over time
  - question: Can the details of a 'Squiblydoo' attack be correlated with known threat actor campaigns?
    context: Once a high-fidelity 'Squiblydoo' attack is confirmed, this question aims to provide immediate context about the potential attacker. By feeding event features (like the parent process or payload URL/path) into a correlation engine, it's possible to link the activity to a known threat group, which helps inform the response strategy.
    answer_sources:
      - Windows Event ID 4688
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: |
          ON Squiblydoo_detection_event
            EXTRACT features (parent_process, dll_path, user)
            QUERY threat_intel_engine with features
            RETURN potential threat_actor_attribution