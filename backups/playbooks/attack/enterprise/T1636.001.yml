name: "T1636.001: Calendar Entries"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "This playbook is designed to detect adversarial collection of calendar entries from managed mobile devices. It focuses on identifying applications with calendar access that exfiltrate data to malicious domains, exhibit anomalous data transfer volumes, or are unapproved and risky. It also covers direct access to calendar databases on compromised (rooted or jailbroken) devices, followed by network exfiltration."
type: "technique"
related:
  - "TA0035: Collection"
contributors:
  - "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a mobile application with calendar access communicating with known malicious infrastructure?"
    context: "This question aims to identify direct evidence of data exfiltration. An application that has permission to read calendar data and is observed communicating with a known command-and-control (C2) server or a data drop zone is a strong indicator of compromise. By correlating mobile device management (MDM) data on application permissions with network logs and threat intelligence, we can detect high-confidence malicious activity."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Mobile Device Management (MDM) Application Inventory"
      - "Threat Intelligence Feeds"
      - "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each device_ip with calendar_apps in MDM: Correlate device_ip with network logs; JOIN destination FQDN/IP with threat_intel_feed; ALERT on match."
  - question: "Is an application with calendar access exfiltrating an anomalously large amount of data, potentially to a domain generated algorithmically (DGA)?"
    context: "This question seeks to detect data exfiltration by focusing on behavioral anomalies. By baselining the normal outbound data volume for each application, we can spot outliers that might represent theft of calendar data. Combining this with a high Shannon entropy score for the destination domain helps identify potential DGA usage, a common technique for C2 communication, which increases confidence in the finding."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Mobile Device Management (MDM) Application Inventory"
      - "Threat Intelligence Feeds"
      - "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each app with calendar access: Build 30-day rolling baseline of outbound data volume; ALERT if new session volume > 99.5th percentile; ELEVATE alert if FQDN entropy > 3.5."
  - question: "Does a mobile device's overall network traffic pattern show a significant anomaly in outbound data volume, suggesting potential data exfiltration?"
    context: "This question uses advanced machine learning to detect subtle deviations from normal network behavior. A time-series model (like an LSTM autoencoder) learns the 'rhythm' of a device's typical data transmission. A significant anomaly, indicated by a high reconstruction error, suggests an unusual event has occurred, which could be the exfiltration of a large dataset like a user's calendar."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Mobile Device Management (MDM) Application Inventory"
      - "Threat Intelligence Feeds"
      - "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each device: Apply pre-trained time-series anomaly model to hourly aggregated outbound data; ALERT if reconstruction_error > 3 standard deviations from mean."
  - question: "Is there a non-approved or explicitly malicious application with calendar access installed on a managed device?"
    context: "This question focuses on identifying unauthorized or known-bad applications that have been granted access to sensitive calendar data. By comparing the list of installed applications against a corporate allowlist and a denylist, security teams can quickly flag policy violations and immediate threats."
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory"
      - "Mobile Threat Defense (MTD) Scan Results"
      - "Public App Store Metadata"
      - "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store)."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each app with calendar permissions: CHECK if app_id is in denylist (HIGH severity alert) or not in allowlist (MEDIUM severity alert)."
  - question: "Are there any unapproved applications with calendar access that exhibit high-risk characteristics, such as low installation prevalence or an unusual application category?"
    context: "This question helps prioritize investigations by risk-scoring unapproved applications. An application that is rarely installed across the enterprise (low prevalence) and is in a category that typically doesn't need calendar access (e.g., a game) is more likely to be suspicious than a widely used, unlisted productivity tool."
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory"
      - "Mobile Threat Defense (MTD) Scan Results"
      - "Public App Store Metadata"
      - "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store)."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR unapproved apps with calendar access: Calculate risk_score based on low prevalence (<1%) and app category ('Game'); FLAG for review if score > threshold."
  - question: "Which applications with calendar access have the highest probability of being malicious based on a machine learning model?"
    context: "This question provides a sophisticated, data-driven method for prioritizing application reviews. A machine learning model can analyze multiple features—such as permission count, developer reputation, and installation base—to produce a single 'malice probability score', creating a prioritized investigation queue."
    answer_sources:
      - "Mobile Device Management (MDM) Application Inventory"
      - "Mobile Threat Defense (MTD) Scan Results"
      - "Public App Store Metadata"
      - "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store)."
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR each app with calendar access: Generate 'malice_probability_score' using pre-trained classification model; RANK apps by score for prioritized review."
  - question: "Has a process on a rooted or jailbroken device directly accessed the local calendar database file?"
    context: "This question looks for highly suspicious activity on compromised devices. Correlating a device's compromised status (rooted/jailbroken) with a file integrity monitoring alert for access to the calendar database (e.g., Calendar.sqlitedb) is a critical-severity indicator that an attacker is directly stealing calendar information."
    answer_sources:
      - "Mobile Device Management (MDM) Device Status"
      - "Mobile Threat Defense (MTD) File Integrity Monitoring Logs"
      - "Zeek conn.log"
      - "MDM/MTD platforms, Endpoint file systems on high-risk mobile devices, Corporate network egress points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "JOIN MDM device status with MTD file access alerts; TRIGGER CRITICAL alert if device_status is 'rooted'/'jailbroken' and file_path contains 'Calendar.sqlitedb'."
  - question: "On a rooted or jailbroken device, is a process making a network connection immediately after accessing the calendar database?"
    context: "This question seeks to connect the act of data theft with the act of data exfiltration in near-real-time. By correlating file access events with subsequent network connections and looking for a very short time delay (e.g., under 5 seconds), we can build a high-confidence alert for an active 'smash and grab' data theft operation."
    answer_sources:
      - "Mobile Device Management (MDM) Device Status"
      - "Mobile Threat Defense (MTD) File Integrity Monitoring Logs"
      - "Zeek conn.log"
      - "MDM/MTD platforms, Endpoint file systems on high-risk mobile devices, Corporate network egress points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR rooted/jailbroken devices: Correlate calendar DB file access with network connections; ALERT if median time delta between events for a process is < 5 seconds in a 24-hour period."
  - question: "Does the sequence of events on a rooted or jailbroken device match a known pattern of malicious data theft?"
    context: "This question applies sequence analysis to identify a malicious chain of events. A model can be trained to recognize abnormal sequences, such as a non-system process accessing the calendar database and then connecting to a new external IP. This method is effective at detecting complex, multi-step attacks."
    answer_sources:
      - "Mobile Device Management (MDM) Device Status"
      - "Mobile Threat Defense (MTD) File Integrity Monitoring Logs"
      - "Zeek conn.log"
      - "MDM/MTD platforms, Endpoint file systems on high-risk mobile devices, Corporate network egress points"
    range: "last 90 days"
    queries:
      - search_technology: "pseudocode"
        query: "FOR rooted/jailbroken devices: Apply sequence analysis model to event stream [process, file_path, dest_ip]; ALERT if model identifies malicious sequence with high probability."