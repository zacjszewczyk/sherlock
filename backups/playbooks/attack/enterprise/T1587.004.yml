name: "T1587.004: Exploits"
id: "b4c8a2d1-0f4e-4b8a-8b1e-9c2d3f6a7b0c"
description: |
  This playbook helps to determine if an adversary is actively testing or deploying newly developed exploits against the network perimeter. It provides investigative questions to detect several key indicators of this activity, including: outbound network connections from internal hosts to external infrastructure known for exploit development or malware staging; inbound web requests from external sources that match signatures of vulnerability scanners; network flow patterns indicative of vertical or horizontal port scanning; anomalous network sessions directed at known, unpatched vulnerabilities; and critical application crashes on public-facing servers that immediately follow a network session from an untrusted external source.
type: "technique"
related:
  - "TA0042: Resource Development"
contributors: "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are internal hosts making successful outbound connections to external IPs or domains associated with exploit development or malware staging?"
    context: |
      This question aims to detect direct communication from internal systems to known malicious infrastructure. Such connections could indicate a compromised host being used for further stages of an attack, or an insider actively engaging with malicious resources. Identifying these connections early is critical for containment.
    answer_sources:
      - "Zeek conn.log, Zeek dns.log, Threat intelligence feeds. Egress points of the network, including internet gateways and forward proxy servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log AND dns.log WHERE destination_ip OR destination_domain IN (threat_intel_list) AND connection_state = 'successful' GROUP BY source_ip"
  - question: "Is any internal host exhibiting anomalous connection behavior by communicating with newly registered domains at a significantly higher rate than its baseline?"
    context: |
      Adversaries often use newly registered domains (NRDs) for command and control or data exfiltration to evade reputation-based blocking. This question seeks to identify outlier behavior where a host's traffic to these suspicious domains deviates significantly from its normal activity, which could signal a new compromise.
    answer_sources:
      - "Zeek conn.log, Zeek dns.log, WHOIS data. Egress points of the network, including internet gateways and forward proxy servers."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek dns.log WHERE domain_registration_age < 30_days AND domain_first_seen_in_environment < 24_hours | STATS count BY source_ip | COMPARE count to baseline for source_ip | WHERE count > 3_std_dev"
  - question: "Can we predictively identify malicious outbound connections in real-time based on their network characteristics?"
    context: |
      This question focuses on proactively identifying threats by using a machine learning model. Instead of relying solely on known bad indicators, this approach learns the features of malicious traffic (e.g., destination ASN, port, data volume) to score and flag new, previously unseen connections that have a high probability of being malicious.
    answer_sources:
      - "Zeek conn.log, Zeek dns.log. Egress points of the network, including internet gateways and forward proxy servers."
    range: "last 90 days"
    queries:
      - "SCORE Zeek conn.log events using ML_model_for_outbound_traffic | WHERE malicious_probability > 0.9"
  - question: "Are we observing inbound web requests with User-Agent strings or URIs matching signatures of known vulnerability scanners from non-authorized sources?"
    context: |
      Adversaries often begin an attack by scanning public-facing applications for vulnerabilities. This question checks for the tell-tale signatures of common scanning tools in web traffic, filtering out legitimate scans to isolate potentially malicious reconnaissance activity.
    answer_sources:
      - "Zeek http.log, Zeek conn.log. Public-facing web servers, reverse proxies, and Web Application Firewalls (WAFs) in the DMZ."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek http.log WHERE (user_agent MATCHES scanner_regex OR uri MATCHES scanner_regex) AND source_ip NOT IN (authorized_scanners_list) GROUP BY source_ip"
  - question: "Is any single external IP generating web requests with an unusually high variety of URI paths, coupled with a high rate of client or server errors?"
    context: |
      This question aims to detect automated scanning or forced browsing activity. A high entropy in requested URIs from a single source suggests the client is not navigating the site like a normal user but is programmatically trying many different paths, likely searching for hidden files or vulnerabilities. A high error rate strengthens this suspicion.
    answer_sources:
      - "Zeek http.log, Zeek conn.log. Public-facing web servers, reverse proxies, and Web Application Firewalls (WAFs) in the DMZ."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek http.log | CALCULATE uri_entropy by source_ip over 5_min_window | WHERE uri_entropy > 98th_percentile AND error_rate > threshold"
  - question: "Are there inbound web requests from User-Agents that cluster with known scanning tools but are not from authorized sources?"
    context: |
      This question uses machine learning to identify scanner-like behavior without relying on fixed signatures. By clustering User-Agent strings based on their structural features, we can identify groups of automated tools and flag any traffic from these clusters that isn't part of an authorized scan.
    answer_sources:
      - "Zeek http.log, Zeek conn.log. Public-facing web servers, reverse proxies, and Web Application Firewalls (WAFs) in the DMZ."
    range: "last 90 days"
    queries:
      - "CLASSIFY user_agent from Zeek http.log using ML_clustering_model | WHERE user_agent_cluster = 'scanner' AND source_ip NOT IN (authorized_scanners_list)"
  - question: "Is any single external IP attempting to connect to an abnormally high number of ports on one host (vertical scan) or a high number of hosts on one port (horizontal scan)?"
    context: |
      This question looks for the classic patterns of network scanning. Adversaries use these techniques to map the network and identify open ports and live hosts. Detecting these simple, high-volume patterns is a fundamental step in identifying early-stage reconnaissance.
    answer_sources:
      - "Zeek conn.log. Internet-facing firewalls, network gateways, and DMZ network segments."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log over 1_min_window | STATS distinct_count(destination_port) as dc_port, distinct_count(destination_ip) as dc_host BY source_ip | WHERE (dc_port > 20 AND dc_host = 1) OR (dc_port = 1 AND dc_host > 20)"
  - question: "Are there external IPs exhibiting a high ratio of destination ports to hosts (vertical scan) or a high count of destination hosts with a low port-to-host ratio (horizontal scan)?"
    context: |
      This question provides a more nuanced approach to scan detection than simple thresholds. By analyzing the ratio of ports to hosts, it can better differentiate between vertical and horizontal scanning activities and identify suspicious behavior that might not cross a simple connection count threshold.
    answer_sources:
      - "Zeek conn.log. Internet-facing firewalls, network gateways, and DMZ network segments."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log over 5_min_window | STATS distinct_count(destination_port) as dc_port, distinct_count(destination_ip) as dc_host BY source_ip | CALCULATE ratio = dc_port / dc_host | WHERE (ratio > 10) OR (ratio < 1 AND dc_host > 10)"
  - question: "Can we identify communities of network activity in a graph model that are dominated by a single external IP connecting to many internal IPs?"
    context: |
      This question applies graph analysis to model network traffic, offering a sophisticated way to visualize and detect scanning. In this model, a scan appears as a 'star' pattern where a central node (the attacker) connects to many disparate nodes (internal hosts), forming a distinct community that can be algorithmically detected.
    answer_sources:
      - "Zeek conn.log. Internet-facing firewalls, network gateways, and DMZ network segments."
    range: "last 90 days"
    queries:
      - "MODEL Zeek conn.log as graph | APPLY community_detection_algorithm | IDENTIFY communities where a single_external_node connects to many_internal_nodes"
  - question: "Are we seeing connection attempts from untrusted IPs to ports that are known to be vulnerable on specific hosts?"
    context: |
      This is a high-fidelity question that directly correlates active threat attempts with known weaknesses. By joining network traffic data with vulnerability scan results, we can immediately flag any interaction with a known-vulnerable service from an unauthorized source, which is a strong indicator of a targeted exploit attempt.
    answer_sources:
      - "Zeek conn.log, Zeek notice.log, Vulnerability scan data. Public-facing application servers, VPN concentrators, RDP Gateway servers, and other remotely accessible services."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log | JOIN with vulnerability_database ON (destination_ip, destination_port) | WHERE source_ip NOT IN (allowlist_for_service)"
  - question: "Do any connections to our critical service ports show characteristics (like data volume or duration) that are statistical outliers compared to normal, baselined traffic?"
    context: |
      Exploitation attempts often differ from legitimate user sessions. They might involve very little data (a probe), a large amount of data (a buffer overflow), or have an unusually short or long duration. This question seeks to detect these subtle deviations from normal behavior on a per-service basis.
    answer_sources:
      - "Zeek conn.log, Zeek notice.log. Public-facing application servers, VPN concentrators, RDP Gateway servers, and other remotely accessible services."
    range: "last 90 days"
    queries:
      - "SEARCH Zeek conn.log for critical_service_port | COMPARE connection_metrics (bytes, duration) to historical_baseline for that port | WHERE metrics fall outside 5th-95th percentile"
  - question: "Can an anomaly detection model identify connections to a specific vulnerable service that are likely exploit attempts based on their metadata?"
    context: |
      This question uses unsupervised machine learning to find 'unknown unknowns.' An Isolation Forest or similar model can learn the profile of legitimate traffic to a service and then flag any connection that doesn't fit that profile, without needing pre-defined rules or signatures. This is effective for detecting novel or obfuscated exploit techniques.
    answer_sources:
      - "Zeek conn.log, Zeek notice.log. Public-facing application servers, VPN concentrators, RDP Gateway servers, and other remotely accessible services."
    range: "last 90 days"
    queries:
      - "SCORE Zeek conn.log events for a specific_vulnerable_service using anomaly_detection_model | WHERE anomaly_score is high"
  - question: "Did a critical application on a public-facing server crash immediately after a network session with an untrusted external IP?"
    context: |
      This is a classic cause-and-effect detection. A successful or failed exploit attempt can often cause the target application to crash. This question directly links a crash event (Windows Event ID 1000) with a preceding network connection from an unknown source, providing strong evidence of a potential exploit.
    answer_sources:
      - "Windows Event ID 1000, Windows Event ID 1001, Zeek conn.log. Public-facing Windows-based servers (e.g., running IIS, Exchange, RDP services)."
    range: "last 90 days"
    queries:
      - "TRIGGER ON Windows Event ID 1000 | SEARCH Zeek conn.log for connections to the affected_server from external_ips that terminated within 60_seconds_prior_to_event | ALERT on match"
  - question: "Is there a statistically significant correlation between a spike in the rate of new external IP connections and a subsequent spike in the application crash rate on a server?"
    context: |
      This question looks for broader patterns rather than single events. An adversary trying multiple exploits or a distributed scanning effort might cause a general increase in connection attempts, which in turn leads to a higher rate of application instability and crashes. Identifying this time-lagged correlation can reveal a widespread attack campaign.
    answer_sources:
      - "Windows Event ID 1000, Windows Event ID 1001, Zeek conn.log. Public-facing Windows-based servers (e.g., running IIS, Exchange, RDP services)."
    range: "last 90 days"
    queries:
      - "CALCULATE time_series for app_crash_rate and new_ip_connection_rate per server | APPLY cross-correlation function | ALERT on significant correlation with time_lag"
  - question: "Does the history of connection attempts from a specific external IP help to statistically predict the timing of application crashes on a server?"
    context: |
      This question applies a rigorous statistical test, Granger causality, to move beyond correlation and infer a likely causal link. If connection data from an IP significantly improves the forecast of crash events, it provides strong statistical evidence that the connections from that IP are causing the crashes, pointing to a persistent attacker.
    answer_sources:
      - "Windows Event ID 1000, Windows Event ID 1001, Zeek conn.log. Public-facing Windows-based servers (e.g., running IIS, Exchange, RDP services)."
    range: "last 90 days"
    queries:
      - "CREATE time_series of connection_attempts from source_ip and time_series of crash_events on destination_server | APPLY Granger causality test | ALERT if p-value is significant"