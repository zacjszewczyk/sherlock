name: T1566.001: Spearphishing Attachment
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps determine if an adversary has gained initial access via a spearphishing attachment. It focuses on identifying malicious indicators in email traffic, such as sender reputation and attachment hashes matching threat intelligence. It also investigates post-delivery host-based activity, such as suspicious process creation from email client cache directories, execution of processes with double extensions, command-line obfuscation, unusual parent-child process relationships (e.g., an Office application spawning a shell), and subsequent anomalous network connections to new or known-malicious destinations.
type: technique
related:
  - TA0001: Initial Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are file hashes, sender IP addresses, or sender domains from incoming emails matching known malicious indicators on threat intelligence feeds?
    context: This question seeks to identify direct evidence of a spearphishing attempt by cross-referencing metadata from incoming emails (file hashes, sender IPs, domains) against a high-confidence list of known malicious indicators. A match provides a strong, direct signal of an attack.
    answer_sources:
      - Zeek files.log
      - Zeek smtp.log
      - Zeek intel.log
      - Email gateway
      - Network perimeter firewalls
      - Network security monitoring sensors (e.g., Zeek sensors at the internet gateway)
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH Zeek intel.log WHERE indicator_type IN ('File::HASH', 'Addr', 'DOMAIN')
          AND source == 'ThreatIntelFeed'
          CORRELATE with smtp.log and files.log on matching IPs, domains, or file hashes.
          ALERT on match.
  - question: Are we receiving emails from historically rare or structurally random domains?
    context: Adversaries often use newly registered or algorithmically generated domains for phishing campaigns. These domains typically have no sending history with the organization (making them rare) and may have random-looking subdomains (high entropy). Identifying such domains helps proactively flag suspicious emails that might not yet be on intelligence feeds.
    answer_sources:
      - Zeek smtp.log
      - Email gateway
      - Network perimeter firewalls
      - Network security monitoring sensors (e.g., Zeek sensors at the internet gateway)
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each sender_domain in smtp.log:
            CALCULATE frequency over last 90 days.
            CALCULATE shannon_entropy of subdomains.
            ALERT if frequency is in bottom 5th percentile AND entropy is in top 10th percentile.
  - question: Can a machine learning model classify incoming sender domains as malicious based on their characteristics?
    context: This question moves beyond simple heuristics to a more advanced detection method. By training a model on features like domain length, character ratios, age (from WHOIS), and TLD rarity, it's possible to score domains for their likelihood of being malicious, catching sophisticated DGAs or newly created phishing domains that other methods might miss.
    answer_sources:
      - Zeek smtp.log
      - Email gateway
      - Network perimeter firewalls
      - Network security monitoring sensors (e.g., Zeek sensors at the internet gateway)
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each sender_domain in smtp.log:
            EXTRACT features (length, char_ratios, n_grams, tld, etc.).
            INPUT features into pre-trained classification model.
            ALERT if malicious_probability > 0.9.
  - question: Is a process with a double extension being launched from an email client's temporary cache directory?
    context: This is a classic adversary technique to trick users into running an executable file disguised as a document (e.g., 'invoice.pdf.exe'). When such a process is launched from a directory where email clients store opened attachments (like Outlook's 'Content.Outlook' cache), it's a very strong indicator that a user was tricked into executing a malicious attachment.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, particularly those of executives, finance, and HR personnel who are common targets for spearphishing.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH EventID 4688
          WHERE NewProcessName MATCHES REGEX '.*\.(pdf|docx|xlsx|jpg|zip)\.(exe|scr|bat|ps1)$'
          AND ProcessPath CONTAINS 'Content.Outlook'
          ALERT on match.
  - question: Have any statistically rare process executions occurred, based on the combination of parent process, new process, and process path?
    context: Most enterprise environments exhibit predictable process behaviors. Malware execution often creates statistically rare events (e.g., a specific non-standard application launching an unusual process from a temporary directory). By baselining normal activity and searching for outliers (e.g., executions in the 1st percentile of frequency), analysts can uncover novel or previously unseen malicious behavior.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, particularly those of executives, finance, and HR personnel who are common targets for spearphishing.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each EventID 4688:
            CREATE identifier from (ParentProcessName, NewProcessName, ProcessPath).
            CALCULATE frequency of identifier over last 30 days.
            ALERT if frequency is in bottom 1st percentile.
  - question: Does an unsupervised anomaly detection model identify any abnormal process executions based on features like path depth and process name entropy?
    context: This question aims to find malicious activity without relying on pre-defined rules or signatures. An unsupervised model (like an Isolation Forest) learns the profile of 'normal' process executions based on various features. It can then flag new executions that deviate significantly from this norm, which are often indicative of malware.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, particularly those of executives, finance, and HR personnel who are common targets for spearphishing.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each EventID 4688:
            EXTRACT features (path_depth, process_name_entropy, parent_process, etc.).
            INPUT features into pre-trained anomaly detection model.
            ALERT if model flags event as an anomaly.
  - question: Do any command lines or PowerShell script blocks contain keywords or patterns associated with download cradles or Base64 encoding?
    context: Adversaries frequently use command-line tools and scripts to download their next-stage payloads. This is often done using specific keywords ('DownloadString', 'IEX') or by passing Base64-encoded commands to evade simple signature-based detection. Searching for these patterns in command lines and PowerShell scripts is a highly effective way to detect fileless attacks.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - User workstations
      - VDI environments
      - Terminal servers
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH EventID 4688 (CommandLine) OR EventID 4104 (ScriptBlockText)
          WHERE content MATCHES REGEX ('DownloadString' OR 'FromBase64String' OR 'IEX')
          ALERT on match.
  - question: Are there any command lines for common script hosts (e.g., powershell.exe) that have unusually high entropy or length?
    context: Obfuscation is a key part of the adversary's toolkit. Long, complex, and high-entropy (random-looking) command lines are often a byproduct of this obfuscation. By establishing a baseline for what a 'normal' command line looks like for processes like powershell.exe and cmd.exe, analysts can flag significant deviations that point to malicious, encoded commands.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - VDI environments
      - Terminal servers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each EventID 4688 where NewProcessName is powershell.exe:
            CALCULATE shannon_entropy and length of CommandLine.
            COMPARE to historical baseline for powershell.exe.
            ALERT if entropy or length is in top 99th percentile.
  - question: Can a natural language processing (NLP) model classify command lines or script blocks as malicious?
    context: This question applies advanced text analysis to the problem of command-line detection. By training an NLP model on a large dataset of benign and malicious command lines, the model learns the subtle characteristics and structures that differentiate them. This allows for more robust and resilient detection than static regex matching.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - User workstations
      - VDI environments
      - Terminal servers
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each CommandLine (EventID 4688) or ScriptBlockText (EventID 4104):
            INPUT text into pre-trained NLP classification model.
            ALERT if model classifies text as malicious.
  - question: Is a Microsoft Office application spawning a command interpreter or scripting host, and does that child process then make an external network connection?
    context: This is a high-fidelity indicator of compromise. Benign Office applications do not typically spawn processes like powershell.exe or cmd.exe. When this behavior is observed, it almost always indicates a malicious macro is running. Correlating this host event with a subsequent outbound network connection from the spawned process confirms that the payload is attempting to communicate with a C2 server.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - User workstations
      - Network egress/ingress points for correlating host and network events.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH EventID 4688
          WHERE ParentProcessName IN ('winword.exe', 'excel.exe', 'powerpnt.exe')
          AND NewProcessName IN ('cmd.exe', 'powershell.exe', 'wscript.exe')
          CORRELATE NewProcessID with Zeek conn.log to find network connections from that process.
          ALERT if external network connection is found.
  - question: Have any statistically rare parent-child process chains been observed, especially if the child process connects to a newly seen domain?
    context: This analytic builds on the concept of rare process executions by focusing on the relationship between parent and child processes. A rare chain (e.g., 'excel.exe' -> 'powershell.exe') is suspicious on its own. When that child process then makes a network connection to a domain never before seen in the environment, the confidence of malicious activity becomes extremely high.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Network egress/ingress points for correlating host and network events.
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE frequency of all (ParentProcessName, NewProcessName) chains.
          IDENTIFY chains in bottom 1st percentile of frequency.
          FOR those rare chains, check if child process PID makes a network connection.
          CHECK if destination domain of connection is new to the environment (not in 90-day DNS history).
          ALERT on match.
  - question: Can a graph-based anomaly detection model identify suspicious process creation sequences, such as an Office application spawning a shell that connects to a new IP address?
    context: This question treats host and network activity as an interconnected graph, allowing for the detection of entire malicious attack chains rather than isolated events. A graph model can identify an anomalous path like Office App -> Shell -> Network Connection to New IP, providing a holistic view of the intrusion and highlighting the full sequence of events for an analyst.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - User workstations
      - Network egress/ingress points for correlating host and network events.
    range: last 90 days
    queries:
      - pseudocode: |
          CONSTRUCT graph from process events (nodes=processes, edges=creation) and network events.
          APPLY graph anomaly detection algorithm.
          ALERT on statistically unlikely paths, e.g., 'winword.exe -> powershell.exe -> <new_external_ip>'.
  - question: Does a host make a network connection to a known malicious IP address within a short time window (e.g., 10 minutes) of receiving an email?
    context: This is a powerful correlation that directly links a potential phishing email to malicious network activity. If a user receives an email and their machine almost immediately connects to an IP address on a threat intelligence feed, it is highly probable that the user interacted with a malicious payload in the email.
    answer_sources:
      - Zeek smtp.log
      - Zeek conn.log
      - Zeek intel.log
      - Email gateway
      - DNS resolvers
      - Network egress/ingress points
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each email_delivery in smtp.log to host_ip:
            SEARCH conn.log for connections from host_ip within 10 minutes of delivery.
            CHECK if destination_ip is in intel.log.
            ALERT on match.
  - question: Following an email delivery, is there evidence of periodic, automated network beaconing to a single destination?
    context: Malware often uses beaconing for command and control (C2), where it 'calls home' at regular intervals. If, after an email is delivered, the recipient's host begins making outbound connections to a single destination with a very low standard deviation in the time between connections, this is a strong sign of automated C2 behavior initiated by a malicious payload.
    answer_sources:
      - Zeek smtp.log
      - Zeek conn.log
      - Email gateway
      - DNS resolvers
      - Network egress/ingress points
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each email_delivery to host_ip:
            ANALYZE subsequent connections from host_ip to any single destination_ip.
            GROUP by destination_ip and calculate standard deviation of time between connections.
            ALERT if standard_deviation is very low (e.g., < 1.0 second).
  - question: Does a host's network traffic volume or connection count deviate anomalously from its historical baseline shortly after receiving an email?
    context: This question uses time-series analysis to detect changes in a host's behavior. A malicious payload might cause a sudden spike in outbound data (exfiltration) or a large increase in connection counts (scanning or C2). By modeling a host's normal network patterns, we can automatically flag significant deviations that occur after an email is received, indicating a potential compromise.
    answer_sources:
      - Zeek smtp.log
      - Zeek conn.log
      - Email gateway
      - DNS resolvers
      - Network egress/ingress points
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each host_ip:
            MODEL normal hourly outbound data volume and connection counts using historical conn.log data.
            MONITOR traffic after an email is delivered via smtp.log.
            ALERT if observed traffic is a statistical anomaly (e.g., > 3 standard deviations from forecast).