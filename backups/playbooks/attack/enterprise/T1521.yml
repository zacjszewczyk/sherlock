name: T1521: Encrypted Channel
id: d4d8c7c0-69f8-4a9e-8b1e-2c9f0a3d4e5f
description: This playbook helps determine if an adversary is using a non-standard or custom encrypted channel for command and control on managed mobile devices. It focuses on identifying several key indicators of compromise. First, it looks for TLS sessions originating from a managed mobile device that exhibit anomalous certificate or domain attributes, such as using a self-signed certificate, a certificate from a non-approved Certificate Authority (CA), or connecting to a newly registered or poor reputation domain. Second, it investigates the TLS client hello from a managed mobile device, looking for JA3 or JA3S hashes that are not on an established allowlist or are statistically rare across the device fleet. Finally, it analyzes encrypted TCP connections from a managed mobile device to a single destination for C2 beaconing characteristics, such as highly periodic connections (low jitter), consistent data transfer sizes (low variance), and/or unusually long connection durations.
type: technique
related:
- TA0037: Command And Control
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: How can I detect TLS connections from mobile devices that use self-signed certificates, non-approved Certificate Authorities, or connect to known malicious domains?
  context: This question aims to identify C2 communication hiding within encrypted traffic. Adversaries often use self-signed certificates or certificates from untrusted CAs to avoid scrutiny. By checking the certificate's validity status and issuer against a list of approved CAs, we can flag suspicious connections. Further enriching this with domain reputation data helps distinguish legitimate but misconfigured services from actively malicious infrastructure.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek conn.log
  - Zeek dns.log
  - Internet Egress Points (e.g., corporate Wi-Fi gateways, VPN concentrators) instrumented with Zeek sensors.
  - Cloud Access Security Broker (CASB) providing visibility into cloud app traffic.
  - Mobile Device Management (MDM) platform for device and user context.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN ssl.log, x509.log ON uid
      WHERE x509.validation_status == 'self-signed certificate' OR x509.issuer NOT IN (allowlist_CAs)
      THEN JOIN dns.log ON uid
      CHECK server_name against threat_intel_feeds
      ALERT if match
- question: Are mobile devices connecting to newly observed domains that exhibit characteristics of Domain Generation Algorithms (DGA) or have a poor reputation?
  context: This question helps detect C2 channels that use DGAs to evade static blocklists. DGA-generated domains often appear random, resulting in high Shannon entropy scores. By focusing on domains not seen before and analyzing their string entropy and reputation, analysts can proactively identify potential C2 infrastructure that has not yet been flagged by threat intelligence.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek conn.log
  - Zeek dns.log
  - Internet Egress Points (e.g., corporate Wi-Fi gateways, VPN concentrators) instrumented with Zeek sensors.
  - Cloud Access Security Broker (CASB) providing visibility into cloud app traffic.
  - Mobile Device Management (MDM) platform for device and user context.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each server_name in ssl.log from past hour:
        IF server_name IS NEW (not seen in 30 days):
          CALCULATE entropy(server_name)
          GET reputation(server_name)
          IF entropy > threshold OR reputation < threshold:
            ALERT
- question: Can a machine learning model identify malicious TLS sessions in real-time based on a combination of certificate, connection, and domain features?
  context: This question explores a more advanced, behavioral approach to detection. A machine learning model can learn the complex patterns that differentiate malicious from benign TLS traffic. By combining multiple features like certificate attributes, domain entropy, and key length, the model can identify subtle anomalies and novel threats that might evade simpler rule-based detections.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek conn.log
  - Zeek dns.log
  - Internet Egress Points (e.g., corporate Wi-Fi gateways, VPN concentrators) instrumented with Zeek sensors.
  - Cloud Access Security Broker (CASB) providing visibility into cloud app traffic.
  - Mobile Device Management (MDM) platform for device and user context.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new TLS session:
        EXTRACT features (cert duration, entropy, key length, self-signed_flag, etc.)
        INPUT features into Random Forest model
        GET malicious_probability_score
        IF score > threshold:
          ALERT
- question: Are mobile devices making TLS connections using client applications or libraries that are not on our approved list, based on their JA3/JA3S fingerprint?
  context: This question leverages TLS client fingerprinting (JA3/JA3S) to identify unauthorized software. By creating an allowlist of fingerprints from sanctioned applications, analysts can quickly spot traffic from unapproved tools, custom malware, or modified legitimate applications that an adversary might be using for C2.
  answer_sources:
  - Zeek ssl.log
  - Network sensors (e.g., Zeek) at internet egress points and virtual network taps monitoring traffic to/from the mobile device subnet.
  - The Mobile Device Management (MDM) platform is used as a contextual source for application and device inventories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new TLS session from mobile_IP_range:
        GET ja3_hash, ja3s_hash from ssl.log
        IF ja3_hash NOT IN (allowlist_ja3) OR ja3s_hash NOT IN (allowlist_ja3s):
          ALERT
          ENRICH with MDM data (device owner, app inventory)
- question: Are there any mobile devices using exceptionally rare TLS client applications, as identified by the low prevalence of their JA3 hash across the entire device fleet?
  context: This question focuses on finding the "needle in the haystack." An application that is extremely rare across the organization is highly suspicious. This method helps detect custom malware or specialized hacking tools that an adversary might use, which would naturally have a very low prevalence compared to common browsers or standard corporate apps.
  answer_sources:
  - Zeek ssl.log
  - Network sensors (e.g., Zeek) at internet egress points and virtual network taps monitoring traffic to/from the mobile device subnet.
  - The Mobile Device Management (MDM) platform is used as a contextual source for application and device inventories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CALCULATE frequency of all ja3_hashes in ssl.log over last 30 days
      IDENTIFY ja3_hashes with prevalence < 1%
      QUERY for current connections using these rare hashes
      ALERT on any match
- question: Can we identify anomalous mobile devices by clustering them based on the variety of their TLS fingerprints (JA3 hashes) over time?
  context: This question provides a device-centric view of TLS behavior. A device being used for malicious purposes might use a unique or unusual combination of tools, causing its fingerprint profile to differ significantly from its peers. Clustering algorithms can automatically identify these outliers without prior knowledge of what is "bad," making it effective for discovering novel threats.
  answer_sources:
  - Zeek ssl.log
  - Network sensors (e.g., Zeek) at internet egress points and virtual network taps monitoring traffic to/from the mobile device subnet.
  - The Mobile Device Management (MDM) platform is used as a contextual source for application and device inventories.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each device:
        CREATE vector of unique ja3_hashes used in last 7 days
      APPLY DBSCAN clustering to all device vectors
      IDENTIFY devices classified as 'noise' or in very small clusters
      ALERT for investigation
- question: Are there any long-lived, low-throughput TCP connections from mobile devices that could indicate an idle command and control channel?
  context: This question targets a specific C2 tactic of maintaining a persistent but quiet connection to await commands. An extremely long-running connection that transfers very little data is anomalous and highly indicative of a malware implant's "sleeper" C2 channel, which is kept open to receive instructions from an operator.
  answer_sources:
  - Zeek conn.log
  - Network flow data collected from core network switches, VPN concentrators, and network taps monitoring traffic from mobile device subnets, including traffic subject to split-tunneling policies.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT connections from conn.log
      WHERE source_ip IN (mobile_IP_range)
      AND connection_state == 'SF'
      AND duration > 8 hours
      AND total_bytes < 10KB
      ALERT on match
- question: Are any mobile devices exhibiting highly regular, 'heartbeat'-like connection patterns to a specific destination, characterized by consistent timing and data sizes?
  context: This question aims to detect automated C2 beaconing. Unlike human-generated traffic, malware beacons are often programmed to check in with their C2 server at precise intervals and send a fixed-size payload. This results in very low variance in connection timing and data size. Identifying this machine-like regularity is a classic way to uncover C2 communications.
  answer_sources:
  - Zeek conn.log
  - Network flow data collected from core network switches, VPN concentrators, and network taps monitoring traffic from mobile device subnets, including traffic subject to split-tunneling policies.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      GROUP connections by src_ip, dst_ip over 1-hour window
      FOR each group:
        CALCULATE stdev(inter_arrival_time)
        CALCULATE stdev(payload_size)
        IF stdev(time) < threshold AND stdev(size) < threshold:
          ALERT
- question: Can we use frequency analysis (FFT) to detect strong periodicity in connection timing, which is a hallmark of C2 beaconing, for high-frequency connections?
  context: This question applies a sophisticated signal processing technique to detect beaconing. A Fast Fourier Transform (FFT) converts a time-based signal into a frequency-based one. A highly periodic beacon will show up as a strong spike at a specific frequency. By training a model on the frequency spectrum of normal traffic, we can detect when a connection pattern exhibits this unnatural, machine-like periodicity.
  answer_sources:
  - Zeek conn.log
  - Network flow data collected from core network switches, VPN concentrators, and network taps monitoring traffic from mobile device subnets, including traffic subject to split-tunneling policies.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR src_dst_pairs with > 20 connections/hour:
        GET time_series of inter-arrival times
        APPLY FFT to time_series to get power_spectrum
        INPUT power_spectrum to anomaly detection model (e.g., One-Class SVM)
        IF model flags as anomaly:
          ALERT