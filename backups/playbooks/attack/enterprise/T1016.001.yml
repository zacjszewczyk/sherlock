name: 'T1016.001: Internet Connection Discovery'
id: 'a5d8b8c7-1e2f-4a3c-9d0b-8e1f2a3b4c5d'
description: This playbook helps identify if an adversary is performing host or network discovery to check for internet connectivity. This is often done by attempting to connect to common public domains or known malicious infrastructure, using built-in network utilities from unusual processes, probing with multiple protocols, attempting connections from restricted assets, or generating a high volume of random-looking DNS queries.
type: technique
related: 'TA0007: Discovery'
contributors: 'Zachary Szewczyk, Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: Are there any outbound network connections or DNS queries to destinations known to be malicious based on threat intelligence?
    context: This question aims to find direct communication with known adversary infrastructure, such as command and control (C2) servers. A confirmed match with a high-confidence threat intelligence feed is a strong indicator of compromise and a clear sign of malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Web Proxies)
      - DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_connection_logs OR dns_query_logs
          WHERE destination_ip IN threat_intel_feed_ips OR destination_domain IN threat_intel_feed_domains
          RETURN timestamp, source_ip, destination_ip, destination_domain, process_name
  - question: For connections to known malicious destinations, how rare is the destination within the enterprise network?
    context: This question helps to prioritize alerts by adding context. A connection to a malicious IP that has never been seen before in the organization is more critical than a connection to an IP that is frequently contacted (which might indicate a false positive in the threat feed). This helps focus investigative effort on the most unique and potentially targeted threats.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Web Proxies)
      - DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For a given alert on destination D
          LET total_connections = COUNT(network_logs in last 30 days)
          LET destination_connections = COUNT(network_logs where destination == D in last 30 days)
          LET prevalence = destination_connections / total_connections
          IF prevalence < 0.01 // 99th percentile
            ESCALATE_ALERT
  - question: Can machine learning models classify outbound connections as malicious based on their metadata?
    context: This question explores using advanced analytics to detect malicious connections that are not on a blocklist. By analyzing features like port, protocol, JA3/S hash, and the process that initiated the connection, a model can assign a maliciousness score. A high score suggests a high probability of malicious activity, warranting an automated response like host isolation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Web Proxies)
      - DNS Resolvers
      - Endpoint Devices
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new connection_event
            EXTRACT features (protocol, port, ja3_hash, process_context, etc.)
            LET score = ML_MODEL.predict(features)
            IF score > 0.9
              TRIGGER_AUTOMATED_RESPONSE(host_ip)
  - question: Are common network utilities (ping, tracert, curl, nslookup) or PowerShell cmdlets (Test-NetConnection) being executed by unusual parent processes to check for internet connectivity?
    context: Adversaries often use legitimate, built-in tools ("living off the land") to perform discovery. While an administrator might use 'ping' from a command prompt ('cmd.exe'), it is highly suspicious for a process like Microsoft Word ('winword.exe') or a system service ('services.exe') to spawn 'ping.exe'. This question identifies such anomalous executions.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint devices (Workstations, Laptops)
      - Servers (especially those with restricted internet access like Domain Controllers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs (EID 4688) OR powershell_script_block_logs (EID 4104)
          WHERE (process_name IN ('ping.exe', 'tracert.exe', 'curl.exe', 'nslookup.exe') OR script_block CONTAINS 'Test-NetConnection')
          AND parent_process_name NOT IN ('explorer.exe', 'cmd.exe', 'powershell.exe')
          ALERT
  - question: Is there an anomalous spike in the execution frequency of network discovery utilities on any given host?
    context: This question aims to detect behavioral changes on an endpoint. A host may legitimately use a tool like 'nslookup' occasionally. However, a sudden burst of executions in a short time window, compared to the host's normal activity, suggests an automated script or adversary is actively probing the network.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint devices (Workstations, Laptops)
      - Servers (especially those with restricted internet access like Domain Controllers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For each host
          CALCULATE baseline_frequency of ('ping.exe', 'tracert.exe', etc.) over last 30 days
          COUNT executions in the last 1 hour
          IF current_count > 95th_percentile(baseline_frequency)
            ALERT
  - question: Does the execution frequency of network utilities on a host deviate significantly from a time-series forecast?
    context: This is a more sophisticated approach to detecting anomalous execution frequency. By modeling the normal rhythm of a host's activity (e.g., more activity during work hours), a time-series model can more accurately identify a spike that is statistically significant, reducing false positives from simple thresholding.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Endpoint devices (Workstations, Laptops)
      - Servers (especially those with restricted internet access like Domain Controllers)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For each host
          FETCH historical execution counts of network utilities
          LET forecast = ARIMA_MODEL.predict(next_hour)
          LET actual = GET current_hour_count
          IF actual > forecast.upper_confidence_bound
            ALERT
  - question: Is any single host using multiple distinct network protocols to connect to external destinations in a short time frame?
    context: Adversaries may try various protocols (e.g., ICMP, DNS, HTTP, raw TCP) in quick succession to see which are allowed through the firewall. This "protocol spraying" is not typical of legitimate applications (except web browsers, which should be excluded) and can indicate an automated discovery script.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network Egress Points
      - Endpoint devices
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH network_connection_logs over a 2-minute window
          GROUP BY source_ip
          COUNT distinct protocols
          WHERE distinct_protocol_count >= 3 AND associated_process NOT IN ('chrome.exe', 'firefox.exe')
          ALERT
  - question: Does any host exhibit an anomalously high protocol diversity score compared to its own historical behavior?
    context: This question establishes a behavioral baseline for each host's protocol usage. A server that normally only communicates over HTTPS and DNS, but suddenly starts making ICMP and NTP requests, would have a spike in its protocol diversity score. This flags a significant deviation from its normal operational profile.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network Egress Points
      - Endpoint devices
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For each host
          CALCULATE historical 99th percentile for protocol diversity score in 5-min windows
          CALCULATE current protocol diversity score
          IF current_score > historical_percentile
            ALERT
  - question: Can unsupervised machine learning identify clusters of suspicious network activity characterized by high protocol diversity from a single host?
    context: This question leverages machine learning to find patterns without pre-defined rules. An algorithm like DBSCAN can analyze connection events and automatically group together those that are close in time from a single host. If such a cluster also contains a high variety of protocols, it strongly indicates a malicious, automated scanning sequence.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Network Egress Points
      - Endpoint devices
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For a 5-minute window of connection events
          APPLY DBSCAN clustering on features (host, protocol, port)
          FOR each cluster found
            IF cluster_host_count == 1 AND cluster_protocol_diversity > high_threshold
              ALERT
  - question: Is a host from a critical or restricted asset group, or a service account, making an outbound connection to a destination not on an approved allow list?
    context: This is a high-fidelity detection based on policy violation. Critical assets like Domain Controllers or servers in a PCI-DSS environment should only communicate with a small, pre-approved set of external hosts. Any connection outside this allow list is a severe security event and requires immediate investigation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Critical Server Subnets (e.g., Domain Controllers, Database Servers)
      - Network Egress Points
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          LOAD restricted_asset_ips, service_account_names, destination_allow_list
          SEARCH network_connection_logs
          WHERE (source_ip IN restricted_asset_ips OR user IN service_account_names)
          AND destination_ip NOT IN destination_allow_list
          ALERT
  - question: On a critical server, is an unusual process initiating an outbound network connection?
    context: This question focuses on process behavior on high-value assets. A database server spawning `sqlserver.exe` to connect to another server is normal. The same server spawning `powershell.exe` to connect to the internet is highly abnormal. Baselining normal process behavior for specific server roles can quickly identify such suspicious activity.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Critical Server Subnets (e.g., Domain Controllers, Database Servers)
      - Network Egress Points
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For a given server role (e.g., 'Database Server')
          LOAD normal_process_profile for role
          FOR each new outbound connection from server
            IF initiating_process NOT IN normal_process_profile
              ALERT
  - question: Can a one-class machine learning model detect anomalous network connections originating from critical servers?
    context: This approach is perfect for the stable and predictable environment of critical servers. A one-class SVM is trained on what constitutes "normal" network traffic (processes, ports, destinations). It then flags any new connection that falls outside this learned definition of normal, effectively acting as an automated anomaly detector.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Critical Server Subnets (e.g., Domain Controllers, Database Servers)
      - Network Egress Points
      - Authentication Logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // One-Class SVM model is pre-trained on normal connection data for critical servers
          FOR each new connection_event from a critical server
            EXTRACT features (process, port, protocol, etc.)
            IF SVM_MODEL.predict(features) == 'anomaly'
              ALERT
  - question: Are any hosts resolving an unusually large number of unique and previously unseen domains, with minimal data transfer to each?
    context: This behavior is a classic indicator of Domain Generation Algorithm (DGA) malware, which generates thousands of potential C2 domains and tries them until one resolves. It can also indicate an attacker's reconnaissance. The key indicators are the high count of unique domains and the very low data transfer, suggesting simple check-ins rather than legitimate traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH dns_query_logs in last 24 hours
          GROUP BY source_ip
          COUNT unique second_level_domains as unique_domains
          WHERE unique_domains > 50 AND connection_volume_per_domain < 1KB
          ALERT
  - question: Which hosts exhibit the highest DNS query entropy, indicating a high degree of randomness in the domains they are resolving?
    context: Shannon entropy is a mathematical way to measure randomness. DGA-generated domains (e.g., 'jh239vjhsdf8.com') are random and have high entropy. Legitimate domains ('google.com') are not random and have low entropy. By calculating the entropy of domains queried by a host, we can mathematically identify hosts that are likely using DGA.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // On a daily basis for each host
          FETCH list of unique second-level domains queried
          CALCULATE shannon_entropy of the list
          FLAG top 1% of hosts with highest entropy for review
  - question: Is there a statistically significant spike in the number of unique destination IPs being contacted by a host, compared to its forecasted behavior?
    context: This question seeks to identify a sudden expansion in a host's network footprint. A host that normally contacts 20 unique IPs a day but suddenly contacts 200 is anomalous. A time-series model can predict the expected number of unique IPs for the next day, and if the actual number is far greater, it signals a potential compromise or reconnaissance activity.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Resolvers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          // For each host
          LET forecast = PROPHET_MODEL.predict(today's unique IP count)
          LET actual_count = GET actual unique IP count for today
          IF actual_count > forecast.upper_bound
            FLAG_FOR_HUNTING_REVIEW