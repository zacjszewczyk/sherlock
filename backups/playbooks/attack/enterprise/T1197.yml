name: T1197: BITS Jobs
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook investigates the use of Background Intelligent Transfer Service (BITS) for malicious purposes, specifically for persistence and defense evasion. It addresses how an adversary might use BITS to download or execute malicious files, establish persistence by triggering programs on job completion, and evade defenses by masquerading traffic, using anomalous job parameters, or exfiltrating data in a 'low-and-slow' manner. The playbook covers detection strategies ranging from simple rule-based alerts to advanced statistical and machine learning models to identify these activities across process, BITS operational, and network logs.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there BITS jobs downloading files from known malicious URLs or executing known malicious files upon completion?
  context: This question aims to find direct evidence of malicious activity by cross-referencing artifacts from BITS job creation events with threat intelligence. Adversaries often use BITS to download second-stage payloads or tools from compromised or malicious infrastructure. Checking the download URL and the hash of any file set to execute upon completion can provide a high-confidence alert of a compromise.
  answer_sources:
  - Windows Event ID 4688
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 16391
  - Zeek http.log
  - Zeek conn.log
  - User Workstations, Application Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_logs OR bits_logs | PARSE url, executable_path | LOOKUP threat_intel for url | LOOKUP malware_hashes for executable_path | WHERE threat_intel_match=true OR malware_hash_match=true
- question: Are BITS jobs downloading files from statistically unusual or newly registered domains?
  context: This question helps identify suspicious downloads that may not appear on traditional threat feeds. Adversaries frequently use newly registered domains (NRDs) or domains with obscure Top-Level Domains (TLDs) for their campaigns. By baselining normal domain patterns within the organization, analysts can spot outliers that indicate potential C2 or payload delivery infrastructure.
  answer_sources:
  - Windows Event ID 4688
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 16391
  - Zeek http.log
  - Zeek conn.log
  - User Workstations, Application Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs | PARSE url | EXTRACT tld, domain | BASELINE domain_frequency, tld_frequency | COMPARE current_domain, current_tld to baseline | WHERE is_rare_tld=true OR is_newly_registered=true
- question: Can machine learning models identify malicious URLs in BITS job creation events based on their structural features?
  context: This question explores a proactive, machine learning-based approach to threat detection. Instead of relying solely on known bad indicators, this method analyzes the characteristics of the URL itself (e.g., length, entropy, character patterns) to predict maliciousness. This can help detect novel threats and sophisticated adversaries who use custom C2 infrastructure.
  answer_sources:
  - Windows Event ID 4688
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 16391
  - Zeek http.log
  - Zeek conn.log
  - User Workstations, Application Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs | PARSE url | EXTRACT url_features | APPLY ML_model on url_features | WHERE prediction=malicious AND confidence>0.9
- question: Is an adversary establishing persistence by configuring a BITS job to execute a program upon completion or error?
  context: This question targets a specific persistence technique where BITS is used not just for file transfer, but as a trigger for code execution. The /SetNotifyCmdLine parameter in `bitsadmin.exe` and the -NotificationCmdlet in PowerShell are explicit indicators of this behavior. Alerting on any use of these parameters provides a focused way to detect this persistence mechanism.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - User Workstations, Domain Controllers, Member Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_logs OR powershell_logs | WHERE (command CONTAINS "bitsadmin.exe" AND command CONTAINS "/SetNotifyCmdLine") OR (command CONTAINS "Set-BitsTransfer" AND command CONTAINS "-NotificationCmdlet")
- question: Is there an anomalous frequency of `bitsadmin.exe` executions involving persistence parameters for any user or host?
  context: This question uses statistical analysis to find unusual behavior. While a single use of `bitsadmin.exe` with persistence parameters is suspicious, a sudden spike in such activity for a specific user or host is a strong anomaly. This helps differentiate potential administrative tasks from automated or repeated malicious actions.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - User Workstations, Domain Controllers, Member Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_logs | WHERE command CONTAINS "bitsadmin.exe" AND command CONTAINS "/SetNotifyCmdLine" | AGGREGATE count by host, user, day | CALCULATE z_score(count) | WHERE z_score > 3.0
- question: Are there `bitsadmin.exe` or PowerShell BITS commands with unusual combinations of arguments that suggest malicious use for persistence?
  context: This question leverages machine learning to understand the syntax of normal command-line usage. Adversaries might use valid arguments but in an abnormal combination. An anomaly detection model can learn the standard patterns and flag command executions that deviate significantly, such as using persistence parameters with suspicious file paths or other rare flags.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - User Workstations, Domain Controllers, Member Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_logs OR powershell_logs | TOKENIZE command_arguments | APPLY anomaly_detection_model | WHERE anomaly_score > threshold
- question: Are non-SYSTEM accounts creating BITS jobs with an extended lifetime or a command-line notification?
  context: This question focuses on suspicious job configurations. Legitimate BITS jobs, especially for system updates, typically run as SYSTEM and use default settings. An adversary might create a long-lived job as a compromised user to ensure their payload or persistence mechanism survives reboots and network outages. Combining this with a command-line notification is a strong indicator of malicious intent.
  answer_sources:
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 16391
  - Windows Event ID 4688
  - User Workstations, Member Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs OR process_logs | WHERE user != "SYSTEM" AND (job_lifetime > 90 OR command CONTAINS "/SetNotifyCmdLine")
- question: Are there BITS jobs with statistically unusual lifetimes or retry delays compared to the organizational baseline?
  context: This question uses statistical outlier detection to find anomalous BITS jobs. By establishing a baseline of normal job parameters (lifetime, retry delay), analysts can identify jobs configured to be unusually persistent or resilient. An adversary might set a long retry delay to stay dormant or a long lifetime to ensure eventual execution, both of which would deviate from the norm.
  answer_sources:
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 16391
  - Windows Event ID 4688
  - User Workstations, Member Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs | CALCULATE percentile(job_lifetime, 95), percentile(retry_delay, 95) | WHERE current_job_lifetime > p95_lifetime OR current_retry_delay > p95_delay
- question: Can clustering algorithms identify anomalous BITS jobs by grouping them based on their metadata?
  context: This question applies unsupervised machine learning to find "lonely" or unusual jobs. By clustering jobs based on multiple features at once (user, lifetime, size, etc.), the algorithm can automatically group legitimate, similar jobs together. Any job that doesn't fit into a large, dense cluster is anomalous and warrants investigation.
  answer_sources:
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 16391
  - Windows Event ID 4688
  - User Workstations, Member Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs | EXTRACT features(user, lifetime, delay, size) | APPLY DBSCAN_clustering on features | WHERE cluster_label = "noise" OR cluster_size < threshold
- question: Is a BITS job completion immediately followed by the execution of a suspicious process?
  context: This question seeks to establish a temporal link between a BITS download and subsequent code execution. By correlating a BITS completion event with a process creation event for a suspicious binary (unsigned, running from a temp location), analysts can directly connect the download to the execution phase of an attack.
  answer_sources:
  - Microsoft-Windows-Bits-Client/Operational Event ID 16387
  - Windows Event ID 4688
  - Windows Event ID 12
  - User Workstations, Critical Servers
  range: last 90 days
  queries:
  - pseudocode: CORRELATE bits_completion_event(event_id=16387) and process_creation_event(event_id=4688) | WHERE time_delta < 60s AND (process_is_unsigned=true OR process_path CONTAINS "%APPDATA%")
- question: Is there a consistent, repeating time delay between BITS job completions and the launch of a specific process on any host?
  context: This question looks for a subtle, statistical link between events. A programmatic relationship will often result in a highly consistent time delay between the download completion and process execution. Finding such a pattern with low variance (jitter) is a strong signal of automation, which is highly indicative of malicious activity.
  answer_sources:
  - Microsoft-Windows-Bits-Client/Operational Event ID 16387
  - Windows Event ID 4688
  - Windows Event ID 12
  - User Workstations, Critical Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_completion_event AND process_creation_event on same_host | CALCULATE time_delta | GROUPBY process_name | CALCULATE stdev(time_delta) | WHERE stdev < low_threshold
- question: Does a sequence analysis model identify the creation of a specific process following a BITS job completion as a statistically improbable event sequence?
  context: This question uses advanced sequence analysis to understand the "story" of events on a host. A model can learn the normal flow of events. If the model determines that a BITS completion followed by a specific process execution is a very low-probability transition, it signals a significant deviation from normal behavior that warrants investigation.
  answer_sources:
  - Microsoft-Windows-Bits-Client/Operational Event ID 16387
  - Windows Event ID 4688
  - Windows Event ID 12
  - User Workstations, Critical Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH host_event_logs | CREATE event_sequences | APPLY HMM_model on sequences | WHERE transition_probability(bits_completion -> process_creation) < threshold
- question: Is the BITS service communicating with known malicious domains or IP addresses?
  context: This question aims to detect C2 or data exfiltration channels that abuse the BITS service. Because BITS traffic often originates from `svchost.exe` and uses standard ports, it can be overlooked. Explicitly filtering for BITS User-Agents in network traffic and checking destinations against threat intelligence is a direct way to uncover this evasion technique.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek dns.log
  - Internet Gateway, Egress Firewalls, DNS Resolvers
  range: last 90 days
  queries:
  - pseudocode: SEARCH network_logs | WHERE user_agent CONTAINS "Microsoft BITS" | LOOKUP threat_intel for destination_ip, destination_domain | WHERE threat_intel_match=true
- question: Is BITS traffic being sent to geographically or network-wise unusual destinations?
  context: This question helps identify suspicious network connections without relying on pre-existing threat intelligence. Most legitimate BITS traffic goes to well-known CDNs. Traffic directed to a rare country or an unusual Autonomous System (AS) for the organization is a strong anomaly indicator, potentially pointing to adversary-controlled infrastructure.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek dns.log
  - Internet Gateway, Egress Firewalls, DNS Resolvers
  range: last 90 days
  queries:
  - pseudocode: SEARCH network_logs | WHERE user_agent CONTAINS "Microsoft BITS" | GEO_LOOKUP destination_ip | ASN_LOOKUP destination_ip | BASELINE geo_frequency, asn_frequency | WHERE is_rare_geo=true OR is_rare_asn=true
- question: Can a machine learning model distinguish malicious BITS network traffic from benign traffic based on its network characteristics?
  context: This question proposes using machine learning to create a nuanced detection for malicious BITS network activity. By training on features like data volume, directionality, and TLS fingerprint (JA3), a model can learn the profile of "good" BITS traffic and flag connections that fit a malicious profile, even if the destination isn't on a blocklist.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Zeek dns.log
  - Internet Gateway, Egress Firewalls, DNS Resolvers
  range: last 90 days
  queries:
  - pseudocode: SEARCH network_logs | WHERE user_agent CONTAINS "Microsoft BITS" | EXTRACT network_features | APPLY ML_model on features | WHERE prediction=malicious AND confidence > 0.9
- question: Is an adversary using custom User-Agent headers in BITS jobs to masquerade network traffic?
  context: This question targets a specific defense evasion technique. Adversaries may change the BITS User-Agent to something that looks benign to bypass network security controls. Detecting the commands used to set a custom header or finding BITS-related traffic that lacks the standard header can uncover this behavior.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Zeek http.log
  - User Workstations, Member Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH process_logs | WHERE command CONTAINS "/SetCustomHeaders" OR (SEARCH network_logs WHERE source_process=bits_service AND user_agent NOT CONTAINS "Microsoft BITS")
- question: Are BITS jobs being created with display names that masquerade as legitimate jobs, such as through typosquatting?
  context: This question addresses how adversaries blend in by giving a malicious BITS job a name that is very similar to a legitimate one (e.g., 'Mircosoft Update'). Using string distance algorithms like Levenshtein can programmatically detect these subtle impersonation attempts.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Zeek http.log
  - User Workstations, Member Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs | PARSE job_name | LOOKUP known_good_job_names | CALCULATE levenshtein_distance(job_name, known_good_name) | WHERE distance > 0 AND distance < 3
- question: Can an NLP model detect BITS job names that are semantically different from known legitimate job names?
  context: This question proposes a more advanced method for detecting masquerading. An NLP model can understand the "meaning" of job names and learn what is normal. A job name like 'Data Stager' would be identified as a semantic outlier, even if it's not a typo of a known name.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Zeek http.log
  - User Workstations, Member Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_logs | PARSE job_name | APPLY NLP_embedding_model | APPLY one_class_svm_model | WHERE prediction=outlier
- question: Are non-SYSTEM users using BITS to download high-risk file types to user-writable directories?
  context: This question targets a common payload delivery pattern. A transfer of an executable, script, or archive initiated by a regular user to a location like their AppData folder is highly suspicious and warrants an immediate alert.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 60
  - User Workstations, File Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_completion_logs | WHERE file_type NOT IN (allowlist) AND user != "SYSTEM" AND destination_path CONTAINS "user_writable_dir"
- question: Are there BITS file transfers with statistically anomalous file sizes for their given file type?
  context: This question uses statistical analysis to spot unusual files. For example, if most `.dat` files transferred by BITS are small, a multi-megabyte `.dat` file would be a size outlier. This can help detect adversaries hiding malware by giving it a benign extension.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 60
  - User Workstations, File Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_file_transfers | GROUPBY file_type | CALCULATE iqr(file_size) | WHERE current_file_size > (Q3 + 1.5 * IQR)
- question: Can clustering algorithms identify anomalous BITS file transfers by grouping them based on multiple file and transfer characteristics?
  context: This question applies unsupervised machine learning to find unusual transfers based on a combination of factors. A transfer might not be anomalous on any single feature but could be highly unusual when all features are considered together.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Microsoft-Windows-Bits-Client/Operational Event ID 59
  - Microsoft-Windows-Bits-Client/Operational Event ID 60
  - User Workstations, File Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_file_transfers | EXTRACT features(mime_type, size, context, path_entropy) | APPLY K-Means_clustering | INVESTIGATE small_clusters
- question: Is any host using BITS associated with a high rate of failed DNS lookups, suggesting DGA activity?
  context: This question targets a common characteristic of Domain Generation Algorithms (DGAs). DGA malware generates a long list of potential domains, many of which are not registered, leading to a high volume of `NXDOMAIN` errors. Correlating this DNS behavior with BITS activity can uncover C2 communications.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Egress Firewalls, Internet Gateway, DNS Resolvers
  range: last 90 days
  queries:
  - pseudocode: SEARCH dns_logs within 5m | WHERE query_source_process=bits_service | GROUPBY host | COUNT distinct domains, COUNT nxdomain_responses | WHERE distinct_domains > 20 AND (nxdomain_responses / distinct_domains) > 0.5
- question: Is BITS network traffic exhibiting 'low-and-slow' data exfiltration patterns or high-entropy domain requests indicative of DGA?
  context: This question looks for two distinct patterns. 'Low-and-slow' exfiltration involves sending small chunks of data at regular intervals to avoid detection. High entropy (randomness) in requested domain names is a classic sign of DGA. Detecting either of these statistical patterns in BITS-related traffic is a strong indicator of compromise.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Egress Firewalls, Internet Gateway, DNS Resolvers
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_network_traffic | ANALYZE time_series of upload_bytes for periodicity | CALCULATE shannon_entropy of requested_domains | WHERE is_periodic=true OR domain_entropy > high_threshold
- question: Does a time series forecasting model detect significant anomalies in a host's BITS network activity rhythm?
  context: This question uses machine learning to learn the normal "heartbeat" of a host's BITS activity. A time series model can predict what the next interval of activity should look like. When the actual observed activity deviates significantly from the prediction, it indicates an anomaly that could be a C2 beacon or data exfiltration.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Egress Firewalls, Internet Gateway, DNS Resolvers
  range: last 90 days
  queries:
  - pseudocode: SEARCH bits_network_traffic by host | TRAIN LSTM_model on time_series_data | FORECAST expected_activity | CALCULATE deviation = |actual - forecast| | WHERE deviation > threshold