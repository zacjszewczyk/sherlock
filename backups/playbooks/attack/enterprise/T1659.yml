name: "T1659: Content Injection"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: "Investigates whether an adversary has gained initial access or is conducting command and control via content injection. This involves looking for evidence of malicious files being inserted into unencrypted downloads, browsers spawning scripting engines, suspicious sequences of download-execute-connect activity, unexpected changes in TLS certificates, C2 signatures in legitimate traffic, beaconing behavior, and data exfiltration through covert channels like DNS."
type: "technique"
related:
  - "TA0001: Initial Access"
  - "TA0011: Command and Control"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Has a known malicious file been transferred over an unencrypted protocol like HTTP or FTP?"
    context: "This question uses a symbolic approach to detect content injection by comparing the hash of files downloaded over unencrypted channels (HTTP, FTP) against a threat intelligence feed. A match indicates a high probability that a malicious file was injected into a legitimate download stream by an attacker."
    answer_sources:
      - "Zeek file.log"
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Internet Gateway"
      - "External-facing Web Proxies"
      - "ISP Demarcation Point"
      - "Cloud Access Security Brokers (CASBs)"
    range: "last 90 days"
    queries:
      - "pseudocode: JOIN file_hashes from zeek_file_log WHERE source is 'HTTP' or 'FTP' WITH threat_intel_hashes. ALERT on match where connection is from external IP."
  - question: "Has an unusually rare file been downloaded across the enterprise?"
    context: "This question uses a statistical approach to find novel malware. Since injected malicious files are often new to the environment, they will appear as extremely rare. By calculating the prevalence of all downloaded files and flagging those below a low percentile threshold (e.g., 1st percentile), we can identify suspicious files for investigation even without a known signature."
    answer_sources:
      - "Zeek file.log"
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Internet Gateway"
      - "External-facing Web Proxies"
      - "ISP Demarcation Point"
      - "Cloud Access Security Brokers (CASBs)"
    range: "last 30 days"
    queries:
      - "pseudocode: CALCULATE prevalence of each file_hash in zeek_file_log over 30 days. FLAG hashes with prevalence < 1st percentile."
  - question: "Can a machine learning model identify downloaded files as malicious based on their network characteristics?"
    context: "This question leverages machine learning for proactive detection. A supervised model, trained on features like file MIME type, size, source protocol, and domain reputation, can predict if a downloaded file is malicious. This approach can identify potential zero-day threats that would be missed by signature-based methods."
    answer_sources:
      - "Zeek file.log"
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Internet Gateway"
      - "External-facing Web Proxies"
      - "ISP Demarcation Point"
      - "Cloud Access Security Brokers (CASBs)"
    range: "last 90 days"
    queries:
      - "pseudocode: PREDICT malicious_probability for each file download using a trained classification model on features from zeek_file_log and zeek_http_log. FLAG files where probability > 0.9."
  - question: "Has a web browser spawned a command-line or scripting process with a command line pointing to a temporary internet file?"
    context: "This question looks for a common post-exploitation step following content injection. After a malicious file is downloaded (often to a temporary or cache directory), the browser may be used to execute it. Detecting a browser process spawning a shell or script engine to run a file from a temporary internet directory is a strong indicator of compromise."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Terminal Servers"
      - "Virtual Desktop Infrastructure (VDI) Environments"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH for Event ID 4688 where ParentProcessName is a browser AND ProcessName is a script engine AND CommandLine contains '\\INetCache\\' or '\\AppData\\Local\\Temp\\'."
  - question: "Has a rare or never-before-seen process been spawned by a web browser?"
    context: "This question uses a statistical approach to find anomalous process relationships. Legitimate browser behavior is generally predictable. By tracking the historical frequency of all parent-child process pairs, we can flag when a browser spawns a process that is either entirely new or statistically rare for the environment, which could indicate malicious execution."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Terminal Servers"
      - "Virtual Desktop Infrastructure (VDI) Environments"
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE frequency of all parent-child process pairs from Event ID 4688. ALERT when a browser-parented pair has a frequency < 5th percentile or is new."
  - question: "Can an anomaly detection model identify suspicious process creation events originating from a web browser?"
    context: "This question applies unsupervised machine learning to detect unusual process behavior. By training a model like an Isolation Forest on features from process creation events (e.g., parent name, child name, command-line length/entropy), the system can learn what normal activity looks like and flag any event that deviates significantly, especially those involving web browsers."
    answer_sources:
      - "Windows Event ID 4688"
      - "User Workstations"
      - "Terminal Servers"
      - "Virtual Desktop Infrastructure (VDI) Environments"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY anomaly detection model to process creation events. FLAG events with high anomaly scores where the parent process is a web browser."
  - question: "Has a host exhibited a suspicious sequence of a file download, process execution from that file, and a network connection to a new domain within a short time window?"
    context: "This question correlates events across different data sources to identify a classic attack chain. The sequence of downloading an executable, running it, and having it immediately 'call home' to a new, unknown domain is a very strong signal of a successful compromise via a malicious download."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek http.log"
      - "Zeek file.log"
      - "Zeek conn.log"
      - "User Workstations"
      - "Network Egress Points"
      - "Web Proxies"
    range: "last 90 days"
    queries:
      - "pseudocode: CORRELATE events on a host: file download, then process creation from file, then outbound connection to a new domain, all within 60 seconds. ALERT on sequence match."
  - question: "Has a statistically rare sequence of 'download -> process -> destination TLD' occurred on a host?"
    context: "This question establishes a baseline of normal user behavior by modeling common sequences of activity. By identifying which chains of events (file type downloaded, process name executed, top-level domain contacted) are statistically rare, we can uncover anomalous attack patterns that might not trigger single-event rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek http.log"
      - "Zeek file.log"
      - "Zeek conn.log"
      - "User Workstations"
      - "Network Egress Points"
      - "Web Proxies"
    range: "last 90 days"
    queries:
      - "pseudocode: MODEL historical frequency of (download-type, process-name, dest-tld) sequences. ALERT when an observed sequence's frequency is in the lowest 1st percentile."
  - question: "Can a sequence analysis model detect anomalous chains of user activity involving downloads, process creations, and network connections?"
    context: "This question uses advanced machine learning to understand the 'grammar' of user actions on an endpoint. A sequence model (like an LSTM or HMM) is trained on normal event chains. It can then flag any new sequence of events that has a low probability of occurring based on the learned model, indicating a deviation from normal behavior."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek http.log"
      - "Zeek file.log"
      - "Zeek conn.log"
      - "User Workstations"
      - "Network Egress Points"
      - "Web Proxies"
    range: "last 90 days"
    queries:
      - "pseudocode: FEED real-time event sequences (download, process, connection) into a trained sequence model. FLAG sequences with a low probability score."
  - question: "Has the TLS certificate for a critical domain unexpectedly changed or become invalid?"
    context: "This question aims to detect Man-in-the-Middle (MitM) attacks that facilitate content injection. By monitoring the TLS certificates of important external domains, an alert on an unexpected change in the issuer or a sudden invalid status can indicate that traffic is being intercepted."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Internet Gateway"
      - "Internal DNS Servers"
      - "Web Proxies"
      - "Network TAPs at key aggregation points"
    range: "last 90 days"
    queries:
      - "pseudocode: CACHE the initial TLS issuer/subject for critical domains. ALERT if a subsequent connection to the same domain presents a different issuer or an invalid status."
  - question: "Has the response size for a specific URL deviated significantly from its normal baseline?"
    context: "This question uses a statistical approach to detect content injection by looking for changes in web page size. If an attacker injects content (like a malicious script) into a web page, the response body length will change. By tracking the moving average and standard deviation of response sizes for URLs, we can flag significant deviations as potential injection attacks."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Internet Gateway"
      - "Internal DNS Servers"
      - "Web Proxies"
      - "Network TAPs at key aggregation points"
    range: "last 30 days"
    queries:
      - "pseudocode: CALCULATE moving average and stddev of resp_body_len per URL. ALERT if a new response is > 3 stddev from the average."
  - question: "Has a change point detection algorithm identified an abrupt change in the TLS certificate issuer for a high-value domain?"
    context: "This question applies machine learning to time-series data to detect large-scale interception events. A sudden, widespread change in the observed TLS certificate issuer for a popular domain can signal a major MitM attack at the ISP or backbone level. Change point detection algorithms can automatically identify this shift in the data."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Internet Gateway"
      - "Internal DNS Servers"
      - "Web Proxies"
      - "Network TAPs at key aggregation points"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY change point detection to the time series of TLS certificate issuers for a high-value domain. ALERT on a detected change point."
  - question: "Does outbound HTTP traffic to legitimate domains contain signatures of known C2 frameworks?"
    context: "This question aims to find C2 channels hiding within legitimate traffic (domain fronting). Adversaries may send C2 communications to high-reputation domains, but the URI path, parameters, or POST body will contain patterns unique to their malware framework. Applying deep packet inspection with signatures can uncover this activity."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Network Egress Points"
      - "DNS Resolvers"
      - "Cloud Service Gateways"
      - "Web Application Firewalls"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY YARA/Suricata rules for known C2 frameworks to HTTP request content. ALERT on match."
  - question: "Are multiple internal hosts using a globally rare JA3 hash to connect to the same destination?"
    context: "This question fingerprints the TLS client itself to find malicious tools. A JA3 hash represents the specific way a client initiates a TLS session. While browsers have common JA3s, custom malware often has a unique, rare JA3. Finding multiple internal hosts using the same rare JA3 to talk to a single destination is a strong indicator of a common C2 tool."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Network Egress Points"
      - "DNS Resolvers"
      - "Cloud Service Gateways"
      - "Web Application Firewalls"
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE prevalence of JA3 hashes. FLAG JA3 hashes that are rare globally but used by multiple internal hosts to a common destination."
  - question: "Can a machine learning model classify outbound HTTP requests as C2 communications based on their characteristics?"
    context: "This question uses a supervised machine learning model to distinguish C2 HTTP traffic from normal user traffic. By training on features like URI length, entropy, and parameter counts, the model can learn the subtle statistical differences and flag suspicious outbound requests that may be part of a C2 channel."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Network Egress Points"
      - "DNS Resolvers"
      - "Cloud Service Gateways"
      - "Web Application Firewalls"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY trained classifier to outbound HTTP requests. FLAG requests with a high C2 probability score."
  - question: "Are there outbound HTTP requests using non-standard, empty, or known malicious User-Agent strings?"
    context: "This question focuses on a simple but effective indicator of non-browser, automated traffic. Malware C2 often uses hardcoded, non-standard, or empty User-Agent strings, or it may use strings associated with scripting libraries. Searching for these anomalies can quickly identify potentially malicious connections."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Web Proxies"
      - "Network Egress Points"
      - "User Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH for User-Agents in http.log that are known-malicious, empty, or match non-browser libraries like 'curl' or 'python-requests'."
  - question: "Are there communication channels exhibiting unusually high or low entropy in their URI parameters, suggesting automated C2?"
    context: "This question analyzes the randomness of data in URLs to identify C2. High entropy can indicate encoded or encrypted data being exfiltrated in parameters. Low entropy can indicate simple, repetitive check-in commands. Flagging consistent entropy levels that deviate from the norm for a given destination can uncover these automated channels."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Web Proxies"
      - "Network Egress Points"
      - "User Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE entropy of URI query parameters per src/dest pair. FLAG pairs with consistently high (>4.0) or low (<1.5) entropy."
  - question: "Can clustering algorithms identify small, dense groups of HTTP requests that represent potential C2 channels?"
    context: "This question uses unsupervised machine learning to group similar HTTP requests. Legitimate applications and browsers generate large, varied clusters of traffic. C2 communications from a specific malware family will often form a small, dense, and distinct cluster. Identifying and investigating these outlier clusters can reveal C2 activity."
    answer_sources:
      - "Zeek http.log"
      - "Zeek ssl.log"
      - "Zeek conn.log"
      - "Web Proxies"
      - "Network Egress Points"
      - "User Workstations"
    range: "last 90 days"
    queries:
      - "pseudocode: CLUSTER HTTP requests based on features (User-Agent, URI length, etc.). INVESTIGATE small, dense clusters not matching known applications."
  - question: "Is there a 'heartbeat' pattern of network connections from a single source to a single destination with consistent data sizes?"
    context: "This question looks for a simple C2 beaconing pattern. A compromised host checking in for commands will often send a 'heartbeat' packet of a consistent size. A rule that looks for a series of connections between the same two hosts where the amount of data sent and received is nearly identical each time can effectively detect this."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Network Egress Points"
      - "VPN Concentrators"
      - "User Workstations"
      - "Firewall logs"
    range: "last 90 days"
    queries:
      - "pseudocode: IDENTIFY >10 connections from src to dest in 1 hour where orig_bytes and resp_bytes are within 10% of each other across all connections."
  - question: "Are there source-destination communication pairs with highly periodic connection intervals (low jitter)?"
    context: "This question uses a statistical method to detect automated beaconing. While human traffic is bursty and random, C2 beacons are often programmed to occur at a fixed interval (e.g., every 5 minutes). By calculating the standard deviation of the time between connections (jitter), a very low value indicates a machine-like periodicity characteristic of C2."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Network Egress Points"
      - "VPN Concentrators"
      - "User Workstations"
      - "Firewall logs"
    range: "last 90 days"
    queries:
      - "pseudocode: For each src/dest pair, CALCULATE stddev of inter-arrival times. FLAG pairs with a stddev < 5 seconds and mean interval > 1 minute."
  - question: "Can a Fast Fourier Transform (FFT) analysis on connection time series reveal highly periodic signals indicative of C2 beaconing?"
    context: "This question applies a signal processing technique to find beaconing. An FFT can transform a time series of connection events into the frequency domain. A strong, sharp peak in the frequency domain represents a dominant, periodic signal, which is a hallmark of automated C2 beaconing, even if the beaconing is slow or mixed with other noise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek http.log"
      - "Network Egress Points"
      - "VPN Concentrators"
      - "User Workstations"
      - "Firewall logs"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY FFT to the connection time series for each src/dest pair. FLAG pairs with a high-amplitude peak in the frequency domain."
  - question: "Are there long Base64-encoded strings present in DNS queries or HTTP URI parameters, suggesting data tunneling?"
    context: "This question uses a regular expression to find a common data encoding format used for exfiltration. Adversaries often encode data in Base64 and place it in long DNS subdomains or URL parameters to bypass firewalls. A regex can effectively find these long, encoded strings, which are highly anomalous in these contexts."
    answer_sources:
      - "Zeek http.log"
      - "Zeek dns.log"
      - "Internal DNS Servers"
      - "Web Proxies"
      - "Network Egress Points"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY regex for long Base64 strings to DNS queries and URI parameters. ALERT on match."
  - question: "Are there DNS queries with abnormally high entropy, suggesting DGA or data tunneling?"
    context: "This question uses information theory to find malicious DNS traffic. Legitimate domain names are structured for humans and have low entropy (low randomness). Domains used for tunneling data or generated by an algorithm (DGA) appear as random strings and have high entropy. Calculating the entropy of queried domains and flagging those above a threshold is a powerful detection technique."
    answer_sources:
      - "Zeek http.log"
      - "Zeek dns.log"
      - "Internal DNS Servers"
      - "Web Proxies"
      - "Network Egress Points"
    range: "last 90 days"
    queries:
      - "pseudocode: CALCULATE Shannon entropy for each DNS query's subdomain. ALERT on queries with entropy > 4.5."
  - question: "Can a character-level classifier identify malicious domain names used for DGA or tunneling in DNS traffic?"
    context: "This question uses a machine learning model trained to recognize the 'look' of a malicious domain. By analyzing character patterns and distributions (n-grams), a model like a CNN can learn to distinguish legitimate domains from those generated by DGAs or used for tunneling, providing a more robust detection method than simple entropy."
    answer_sources:
      - "Zeek http.log"
      - "Zeek dns.log"
      - "Internal DNS Servers"
      - "Web Proxies"
      - "Network Egress Points"
    range: "last 90 days"
    queries:
      - "pseudocode: APPLY trained character-level CNN model to DNS queries. FLAG queries classified as malicious with high confidence."