name: T1547.013: XDG Autostart Entries
id: c3a8b2d1-4f6e-4b9a-8c7d-5e6f7a8b9c0d
description: |
  Identifies adversarial attempts to maintain persistence or escalate privileges by creating or modifying XDG Autostart entries. Adversaries can place malicious `.desktop` files in standard autostart directories (`/etc/xdg/autostart/`, `~/.config/autostart/`) to ensure their code executes upon user login. This playbook focuses on detecting this technique by analyzing the `.desktop` files and the behavior of the processes they launch. Detections include matching file or executable hashes against threat intelligence, identifying anomalous command structures (e.g., obfuscation, execution from temporary directories), detecting application masquerading through misleading metadata, and correlating autostart events with suspicious network activity or subsequent file modifications. It specifically looks for unauthorized changes to system-wide autostart locations as a vector for privilege escalation.
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are new or modified XDG autostart files, or the executables they reference, associated with known threats?
    context: Adversaries may use known malware or tools for persistence. Matching the hash of the `.desktop` file or its referenced executable against a threat intelligence database is a high-fidelity method to detect known-bad autostart entries.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Linux Auditd file monitoring rules
      - Linux endpoints (workstations and servers) with desktop environments; specifically, the contents of the /etc/xdg/autostart/ and ~/.config/autostart/ directories, and any directories specified by $XDG_CONFIG_DIRS.
    range: last 90 days
    queries:
      - technology: SIEM / EDR
        query: |
          SEARCH file creation/modification events in XDG autostart paths
          FOR each event:
            EXTRACT .desktop file hash
            PARSE 'Exec=' line for executable path
            GET executable file hash
            LOOKUP both hashes in threat intelligence database
            IF match found THEN ALERT
  - question: Are there any executables launched by XDG autostart that are unusually rare in the environment?
    context: Malware is often not widely distributed across an enterprise. Identifying executables launched by autostart entries that exist on only a small number of hosts (low prevalence) can help uncover targeted implants or custom tools that are not part of standard software deployments.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Linux Auditd file monitoring rules
      - Linux endpoints (workstations and servers) with desktop environments; specifically, the contents of the /etc/xdg/autostart/ and ~/.config/autostart/ directories, and any directories specified by $XDG_CONFIG_DIRS.
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          COLLECT all 'Exec=' paths from all .desktop files in autostart directories across all hosts
          CALCULATE SHA256 hash for each executable
          GROUP by hash and count unique hosts
          REPORT hashes with host count < 5 or prevalence < 1%
          INVESTIGATE rare hashes, prioritizing unsigned executables
  - question: Can a machine learning model identify malicious XDG autostart entries based on their file characteristics?
    context: Malicious autostart entries may have subtle characteristics (e.g., high entropy, unusual file size, suspicious strings) that differ from legitimate ones. A trained classification model can learn these patterns and automatically score new entries, flagging potentially malicious files for analyst review even if they are not yet known to threat intelligence.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Linux Auditd file monitoring rules
      - Linux endpoints (workstations and servers) with desktop environments; specifically, the contents of the /etc/xdg/autostart/ and ~/.config/autostart/ directories, and any directories specified by $XDG_CONFIG_DIRS.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          ON new .desktop file creation:
            EXTRACT features (file size, entropy, strings, ELF header info) from .desktop file and its executable
            INPUT features into trained classification model (e.g., XGBoost)
            IF model output is 'malicious' with confidence > 0.9 THEN ALERT
  - question: Are any XDG autostart entries executing scripts from suspicious locations or using command-line obfuscation?
    context: Adversaries often place scripts in temporary or world-writable directories (`/tmp`, `/var/tmp`, `/dev/shm`) and use obfuscation techniques (like base64 encoding) to hide their commands. Detecting these patterns in the 'Exec=' line of a `.desktop` file is a strong indicator of malicious activity.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd execve and file monitoring rules
      - Linux endpoints with desktop environments; specifically, the command line arguments of processes spawned by the desktop environment manager and the contents of .desktop files in autostart directories.
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH process creation events
          APPLY regex to command line to find patterns like:
            - '(sh|bash|python|perl) /tmp/.*'
            - '(sh|bash|python|perl) /var/tmp/.*'
            - '(sh|bash|python|perl) /dev/shm/.*'
            - '| base64 --decode'
            - '| rev'
          IF match found THEN ALERT
  - question: Do any XDG autostart 'Exec=' commands exhibit abnormally high complexity or length compared to a baseline?
    context: Legitimate autostart commands are typically simple and predictable. Adversaries may use long, complex, or obfuscated commands to execute their payloads. Measuring the Shannon entropy and character length of 'Exec=' command lines and comparing them to a baseline of known-good commands can reveal these outliers.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd execve and file monitoring rules
      - Linux endpoints with desktop environments; specifically, the command line arguments of processes spawned by the desktop environment manager and the contents of .desktop files in autostart directories.
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          BUILD baseline of entropy and length for 'Exec=' commands from known-good .desktop files
          FOR each new .desktop file:
            CALCULATE entropy and length of its 'Exec=' command
            IF entropy OR length > 98th percentile of baseline THEN ALERT
  - question: Can an NLP model detect anomalous command lines in XDG autostart 'Exec=' entries?
    context: Anomaly detection models, like autoencoders trained on natural language, can learn the structure of legitimate command lines. When a new, malicious command is processed, the model will struggle to reconstruct it, resulting in a high "reconstruction error." This technique can find novel or unusual commands that may not be caught by signature-based methods.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd execve and file monitoring rules
      - Linux endpoints with desktop environments; specifically, the command line arguments of processes spawned by the desktop environment manager and the contents of .desktop files in autostart directories.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          FOR each new .desktop 'Exec=' command line:
            INPUT command into pre-trained NLP autoencoder model
            CALCULATE reconstruction error
            IF reconstruction error is in top 2% of all observed commands THEN ALERT for review
  - question: Are any XDG autostart entries masquerading as legitimate applications but executing from an unexpected path?
    context: Adversaries often impersonate legitimate software (e.g., 'Chrome Update', 'System Service') to evade detection. This involves creating a `.desktop` file with a deceptive 'Name=' field while the 'Exec=' field points to a malicious binary in an unusual location (like a user's home directory). An allow-list can map legitimate names to their correct executable paths to detect this discrepancy.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file monitoring rules
      - Linux endpoints with desktop environments; specifically, the metadata within .desktop files located in /etc/xdg/autostart/ and ~/.config/autostart/.
    range: last 90 days
    queries:
      - technology: SIEM / Scripting
        query: |
          MAINTAIN allow-list of { 'AppName': '/path/to/legit/exec' }
          ON new .desktop file creation:
            PARSE 'Name=' and 'Exec=' values
            IF 'Name=' is in allow-list AND 'Exec=' path does not match a valid path THEN ALERT
            IF 'Exec=' path is in a user-writable directory THEN increase alert severity
  - question: Are there any XDG autostart entries with names that appear to be typo-squatting legitimate applications?
    context: A common masquerading technique is "typo-squatting," where an adversary uses a name that is a slight misspelling of a legitimate application (e.g., 'Chroem' instead of 'Chrome'). Calculating the string edit distance (like Damerau-Levenshtein) between a new entry's name and a dictionary of known application names can flag these suspicious similarities for review.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file monitoring rules
      - Linux endpoints with desktop environments; specifically, the metadata within .desktop files located in /etc/xdg/autostart/ and ~/.config/autostart/.
    range: last 90 days
    queries:
      - technology: Scripting / Data Analytics
        query: |
          MAINTAIN dictionary of known-good application names
          FOR each new .desktop file:
            CALCULATE Damerau-Levenshtein distance between its 'Name=' and all names in dictionary
            IF minimum distance is between 1 and 3 THEN ALERT for potential typo-squatting
  - question: Can clustering algorithms identify anomalous XDG autostart entries that do not group with legitimate applications?
    context: Legitimate applications from the same vendor or suite often share similar characteristics in their `.desktop` files (e.g., common naming conventions, installation paths). A clustering algorithm like DBSCAN can group these similar, legitimate entries together. Files that do not belong to any cluster ("noise points") are anomalous and likely represent malicious or non-standard software.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file monitoring rules
      - Linux endpoints with desktop environments; specifically, the metadata within .desktop files located in /etc/xdg/autostart/ and ~/.config/autostart/.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          EXTRACT features (TF-IDF of 'Name'/'Comment', parsed 'Exec=' path) from all .desktop files
          APPLY DBSCAN clustering algorithm to the feature set
          ALERT on any file classified as a 'noise point' (not belonging to a cluster)
  - question: Has a process launched by an XDG autostart entry made a network connection and then quickly deleted its source `.desktop` file?
    context: To cover their tracks, adversaries may use a persistence mechanism that deletes itself after execution. A common chain of events is: user logs in, the malicious `.desktop` file executes, the payload connects to a C2 server, and then the original `.desktop` file is deleted. Correlating these events in a short time window is a strong indicator of this "execute and clean" behavior.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 3 (NetworkConnect)
      - Sysmon for Linux Event ID 23 (FileDelete)
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Linux endpoints with desktop environments, focusing on process, network, and file event correlation.
    range: last 90 days
    queries:
      - technology: SIEM Correlation Rule
        query: |
          TRIGGER on ProcessCreate from desktop manager parent
          WITHIN 120 seconds:
            LOOK FOR NetworkConnect from that process to a C2 IP
            AND LOOK FOR FileDelete event for the source .desktop file
          IF all conditions met THEN ALERT
  - question: Is a process from an XDG autostart entry making a network connection using a rare or previously unseen TLS client signature (JA3/JA3S)?
    context: The way a client application initiates a TLS session creates a fingerprint known as a JA3 hash. Common applications (like browsers) have well-known JA3 hashes. Malware or custom tools often use non-standard libraries, resulting in rare or unique JA3 hashes. Detecting a connection from an autostart process with a low-prevalence JA3/JA3S hash can uncover malicious C2 communication.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 3 (NetworkConnect)
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network gateways and core switches where Zeek sensors monitor egress traffic.
    range: last 90 days
    queries:
      - technology: SIEM / Network Security Analytics
        query: |
          BUILD baseline of all JA3/JA3S hashes on the network
          FOR each network connection from an autostart process:
            EXTRACT JA3/JA3S hash from Zeek ssl.log
            IF hash is new or has prevalence < 0.1% THEN ALERT
  - question: Does the sequence of actions following an XDG autostart event match a known malicious behavior chain?
    context: Advanced analytics can model normal user behavior as a sequence of states (e.g., Login -> RunApp -> SaveFile). A Hidden Markov Model (HMM) can be trained on these normal sequences. A malicious sequence, such as 'AutostartProcess' -> 'ExternalNetworkConnection' -> 'FileDelete', would have a very low probability under the model, allowing it to be flagged as a high-confidence anomaly.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 3 (NetworkConnect)
      - Sysmon for Linux Event ID 23 (FileDelete)
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Linux endpoints with desktop environments, focusing on process, network, and file event correlation.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          DEFINE states: 'Login', 'AutostartProcess', 'ExternalNetworkConnection', 'FileDelete', etc.
          TRAIN HMM on sequences of events from normal user activity
          MONITOR new event sequences in real-time
          IF a sequence has a very low probability under the model (e.g., Autostart -> NetConnect -> FileDelete) THEN ALERT
  - question: Is a process from a system-wide autostart directory making a network connection to a known C2 server or an unusual destination?
    context: Processes launched from the system-wide `/etc/xdg/autostart` directory typically run with elevated privileges and should have highly predictable network behavior. Any connection from such a process to an IP on a threat feed, or to a country/ASN never before seen from system processes, is a major red flag for a compromised system-level autostart.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 3 (NetworkConnect)
      - Zeek conn.log
      - Zeek dns.log
      - System-wide autostart directory /etc/xdg/autostart on all Linux hosts; network egress points.
    range: last 90 days
    queries:
      - technology: SIEM Correlation Rule
        query: |
          SEARCH for ProcessCreate events launched from /etc/xdg/autostart
          CORRELATE process with NetworkConnect events or Zeek logs
          IF destination IP/domain matches a C2 threat feed THEN ALERT
  - question: Has a system-wide autostart process connected to a destination country or Autonomous System Number (ASN) not seen in its baseline?
    context: Legitimate system processes launched at startup have a very stable and limited set of network destinations. By baselining the normal destination countries and ASNs for these processes, any deviation—such as a connection to a new or unusual ASN—can be quickly identified as anomalous and potentially malicious.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 3 (NetworkConnect)
      - Zeek conn.log
      - Zeek dns.log
      - System-wide autostart directory /etc/xdg/autostart on all Linux hosts; network egress points.
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          BUILD baseline of destination ASNs and countries for all processes launched from /etc/xdg/autostart
          MONITOR new connections from these processes
          IF a connection's destination ASN or country is not in the baseline THEN ALERT
  - question: Does the network traffic from a system-wide autostart process show anomalous patterns indicative of C2 communication?
    context: Command-and-control (C2) traffic often has distinct patterns, such as regular, small "heartbeat" beacons. A time-series anomaly detection model can be trained on the normal network behavior (bytes sent/received, connection duration) of legitimate system autostart processes. The model can then detect deviations from this baseline that suggest C2 activity.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 3 (NetworkConnect)
      - Zeek conn.log
      - Zeek dns.log
      - System-wide autostart directory /etc/xdg/autostart on all Linux hosts; network egress points.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          TRAIN time-series model (e.g., LSTM autoencoder) on network traffic features for each legitimate system autostart process
          MONITOR traffic from these processes in real-time
          IF model flags a significant deviation (e.g., periodic heartbeat traffic) THEN ALERT
  - question: Does a system-wide autostart entry contain commands associated with privilege escalation?
    context: An adversary who has gained the ability to write to `/etc/xdg/autostart` can execute commands with elevated privileges at the next login. Searching the 'Exec=' line for common privilege escalation tools (`sudo`, `pkexec`), commands that modify file permissions (`chmod u+s`), or known exploit names is a direct way to detect this abuse.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Linux Auditd execve rules
      - The /etc/xdg/autostart directory on all Linux hosts.
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          SEARCH process creation events where the process is launched from /etc/xdg/autostart
          APPLY regex to command line to find strings like 'sudo', 'pkexec', 'chmod [ug]+s', 'setcap', or known exploit names
          IF match found THEN ALERT
  - question: Does the command line of a system-wide autostart process contain unusually rare arguments or tokens?
    context: Legitimate system autostart commands are highly standardized. By analyzing the frequency of all command-line arguments (tokens) across the enterprise, rare tokens can be identified. A new command containing tokens that are very uncommon (low inverse document frequency) is suspicious and may indicate a custom or malicious command.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Linux Auditd execve rules
      - The /etc/xdg/autostart directory on all Linux hosts.
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          BUILD a dictionary and TF-IDF scores for all command line tokens from legitimate /etc/xdg/autostart processes
          FOR each new command line:
            TOKENIZE the command
            IF any token has a very low IDF score (is very rare) and is not in the baseline THEN ALERT
  - question: Can a large language model (LLM) classify the command from a system-wide autostart entry as malicious or related to privilege escalation?
    context: Modern LLMs can be fine-tuned to understand the intent and potential danger of shell commands. By feeding the 'Exec=' command from a new `.desktop` file into a specialized model, it's possible to get a classification of 'malicious' or 'privilege escalation', providing a powerful detection capability beyond simple keyword matching.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Linux Auditd execve rules
      - The /etc/xdg/autostart directory on all Linux hosts.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          FOR each new process launched from /etc/xdg/autostart:
            EXTRACT the command line string
            INPUT command into a fine-tuned LLM for shell command classification
            IF model classifies command as 'malicious' or 'privilege escalation' with high confidence THEN ALERT
  - question: Has a file been created or modified in the system-wide autostart directory by an unauthorized user or process?
    context: The `/etc/xdg/autostart` directory should only be modified by the 'root' user or by trusted package managers during software installation or updates. Any write or create event in this directory initiated by a non-root user or a process other than a known package manager is a high-confidence indicator of a privilege escalation attempt.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file modification rules
      - File system audit logs for the /etc/xdg/autostart/ directory.
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          CREATE alert on file create/write events in /etc/xdg/autostart/
          CONDITION: User is NOT 'root' AND Process is NOT a known package manager (dpkg, rpm, yum, etc.)
          SEVERITY: High
  - question: Has the system-wide autostart directory been modified at an unusual time?
    context: Legitimate modifications to `/etc/xdg/autostart` by administrators or package managers typically occur during standard business hours or scheduled maintenance windows. A modification occurring at an anomalous time, such as 3 AM on a Sunday, is suspicious and could indicate an adversary operating outside of normal patterns to avoid detection.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file modification rules
      - File system audit logs for the /etc/xdg/autostart/ directory.
    range: last 90 days
    queries:
      - technology: SIEM / UEBA
        query: |
          BASELINE legitimate modification times for /etc/xdg/autostart (e.g., business hours, patch windows)
          ALERT on any file modification to this directory that occurs outside the established baseline times
  - question: Can an anomaly detection model identify illegitimate modifications to the system-wide autostart directory?
    context: An Isolation Forest model can learn the profile of normal changes to `/etc/xdg/autostart` by analyzing features like the user, process, parent process, and time of day for each modification. Illegitimate changes made by an adversary will likely have a combination of features that deviates from this normal profile, causing the model to assign it a high anomaly score.
    answer_sources:
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file modification rules
      - File system audit logs for the /etc/xdg/autostart/ directory.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          TRAIN an Isolation Forest model on features (User, Process, Parent Process, Time) of legitimate file modifications in /etc/xdg/autostart
          SCORE all new modification events with the model
          ALERT on events with a high anomaly score
  - question: Has a process launched from the system-wide autostart directory modified sensitive system files?
    context: A key goal for an adversary using a privileged autostart is to further embed themselves in the system. This can involve modifying critical files like `/etc/passwd`, `/etc/sudoers`, or dropping new executables in `/usr/bin`. Correlating a process from `/etc/xdg/autostart` with subsequent writes to these protected locations is a critical detection for privilege escalation and persistence.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file modification rules
      - Sensitive system directories on all Linux hosts.
    range: last 90 days
    queries:
      - technology: SIEM Correlation Rule
        query: |
          TRIGGER on ProcessCreate from /etc/xdg/autostart
          CORRELATE with subsequent FileWrite events by that process
          IF TargetFilename is in a protected directory (/etc, /bin, /sbin) or is a critical file (/etc/passwd, /etc/shadow) THEN ALERT
  - question: Has a system-wide autostart process written to a file path it has never written to before?
    context: Legitimate system processes are predictable and typically write to a consistent and limited set of log files or configuration directories. By baselining the file write paths for each legitimate autostart process, any write to a novel directory or path can be flagged as a behavioral anomaly, potentially indicating that the process has been hijacked or replaced.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file modification rules
      - Sensitive system directories on all Linux hosts.
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          FOR each legitimate process from /etc/xdg/autostart, build a baseline of all directories it writes to
          FOR each new file write event from one of these processes:
            CHECK if the target directory is in the process's baseline
            IF the directory is not in the baseline THEN ALERT
  - question: Can a graph-based model detect an anomalous interaction between a system-wide autostart process and a sensitive file?
    context: The relationships between processes and the files they access can be modeled as a graph. A Graph Neural Network (GNN) can learn the structure of this graph for a normal system. An adversary causing an autostart process to write to a sensitive file (e.g., modifying `/etc/ssh/sshd_config`) would create a new, anomalous edge in this graph, which the GNN would flag as a high-confidence threat.
    answer_sources:
      - Sysmon for Linux Event ID 1 (ProcessCreate)
      - Sysmon for Linux Event ID 11 (FileCreate)
      - Linux Auditd file modification rules
      - Sensitive system directories on all Linux hosts.
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          MODEL system activity as a process-file interaction graph
          TRAIN a GNN on the graph of legitimate activity
          IF a new interaction (edge), like an autostart process writing to a sensitive file, is detected and flagged as anomalous by the GNN THEN ALERT