name: T1001.001: Junk Data
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps to determine if an adversary is using junk data to obfuscate command and control (C2) communications. The investigation involves multiple detection strategies, including checking for network connections to known C2 infrastructure from threat intelligence, analyzing network payloads for specific padding signatures used by malware, identifying statistical outliers in client-to-server data transfer ratios, detecting anomalously high entropy in unencrypted traffic like DNS or HTTP, and monitoring for unapproved or rare processes making outbound network connections.
type: technique
related:
- TA0011: Command And Control
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there any network connections or DNS queries matching known C2 indicators from threat intelligence feeds?
  context: This question aims to identify direct communication with known malicious infrastructure. By cross-referencing live network logs with a curated list of C2 IPs and domains, we can quickly spot confirmed malicious activity, providing a high-confidence starting point for an investigation.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Threat Intelligence Feed
  - Internet Gateway
  - Egress Firewalls
  - Internal DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - pseudocode: JOIN conn_logs, dns_logs ON (dest_ip OR query_domain) WITH threat_intel_feed ON (indicator)
- question: For connections to known C2 infrastructure, is the ratio of sent to received bytes statistically anomalous, suggesting data padding?
  context: This question seeks to find evidence of data padding within confirmed C2 channels. Adversaries may add junk data to either uploads or downloads to disguise the true size of their commands or exfiltrated data. A significantly skewed ratio of sent vs. received bytes, compared to the historical norm for that port, can be a strong indicator of this technique.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Internet Gateway
  - Egress Firewalls
  - Internal DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - pseudocode: FROM connections_to_c2_ips | CALCULATE ratio = sent_bytes / received_bytes | WHERE ratio > 95th_percentile_for_dest_port
- question: Can we identify new, previously unknown C2 connections by finding traffic that structurally resembles known C2 activity?
  context: This question uses a machine learning model to proactively hunt for new C2 channels. The model learns the characteristics (protocol, duration, byte counts) of confirmed C2 traffic. It then scores all other traffic, flagging connections that look similar to the known-bad activity, even if they don't match any threat intelligence. This helps uncover novel adversary infrastructure.
  answer_sources:
  - Zeek conn.log
  - Threat Intelligence Feed
  - Internet Gateway
  - Egress Firewalls
  - Internal DNS Resolvers
  - Web Proxies
  range: last 90 days
  queries:
  - pseudocode: PREDICT likelihood_is_c2 FROM new_connections USING trained_classifier_model
- question: Is any network traffic matching specific IDS signatures for known junk data or padding techniques?
  context: This question looks for specific, known patterns of junk data used by malware. By deploying IDS signatures that can identify these patterns (e.g., repeating bytes, known magic strings) directly within network payloads, we can detect specific malware families or attack tools with high confidence.
  answer_sources:
  - Zeek signatures.log
  - Suricata EVE JSON (alert)
  - Network Security Monitoring (NSM) Sensor Grid
  - DMZ Packet Capture Points
  - SSL/TLS Decryption Zones
  range: last 90 days
  queries:
  - pseudocode: SEARCH ids_logs WHERE signature_id MATCHES 'known_junk_data_patterns'
- question: Among traffic that matches junk data signatures, are there payloads with unusually large sizes?
  context: This question helps to find variations of a known padding technique. Attackers may vary the amount of junk data to avoid simple detection based on fixed payload sizes. By flagging instances where the payload length is a statistical outlier for a given signature, we can identify attackers attempting to be more evasive.
  answer_sources:
  - Zeek signatures.log
  - Suricata EVE JSON (alert)
  - Network Security Monitoring (NSM) Sensor Grid
  - DMZ Packet Capture Points
  - SSL/TLS Decryption Zones
  range: last 90 days
  queries:
  - pseudocode: FROM ids_alerts_for_junk_data | CALCULATE payload_length | WHERE payload_length > 95th_percentile_for_signature
- question: Has there been an anomalous spike in the volume of IDS alerts for junk data padding, suggesting a new campaign?
  context: This question aims to detect a widespread attack campaign at a macro level. A time series model forecasts the expected daily number of IDS alerts for this technique. A sudden, significant deviation from this forecast can be the earliest indicator of a new, large-scale campaign or malware outbreak, allowing for a proactive, wide-ranging response.
  answer_sources:
  - Zeek signatures.log
  - Suricata EVE JSON (alert)
  - Network Security Monitoring (NSM) Sensor Grid
  - DMZ Packet Capture Points
  - SSL/TLS Decryption Zones
  range: last 90 days
  queries:
  - pseudocode: FORECAST daily_alert_volume USING arima_model | ALERT if actual_volume > forecast_upper_bound
- question: Are there any network connections with a heavily skewed client-to-server data ratio that are not destined for legitimate upload services?
  context: This question identifies suspicious data transfers that are not explained by legitimate activity. A connection where the client sends vastly more data than it receives is unusual, unless it's a known file upload or backup service. By filtering out these legitimate services, this rule can pinpoint potential data exfiltration or C2 channels using data padding to hide their content.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - Application Server Subnets
  - Database Server Subnets
  - Egress Firewalls
  range: last 90 days
  queries:
  - pseudocode: FROM conn_logs WHERE (sent_bytes / received_bytes) > 10 AND destination NOT IN (upload_service_allowlist)
- question: Are there network connections where the client-to-server data ratio is a statistical outlier compared to the historical norm for that destination port?
  context: This question uses statistical analysis to find anomalous data transfer ratios on a per-port basis. Every service port has a typical traffic profile. By establishing a baseline for the ratio of sent-to-received bytes for each port, we can automatically flag any connection that deviates significantly (e.g., by 3 standard deviations), which could indicate an adversary is abusing that port for C2 using data padding.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - Application Server Subnets
  - Database Server Subnets
  - Egress Firewalls
  range: last 90 days
  queries:
  - pseudocode: FROM conn_logs | CALCULATE ratio = sent_bytes / received_bytes | WHERE ratio > (mean_for_port + 3 * stddev_for_port)
- question: Can we find rare clusters of network activity characterized by high client-to-server data ratios, indicating novel C2 channels?
  context: This question employs unsupervised machine learning to discover new, previously unseen C2 behavior. A clustering algorithm groups all network connections based on their characteristics. Small, isolated clusters represent rare behaviors. If a rare cluster also exhibits a high average ratio of sent-to-received data, it is highly suspicious and could represent a novel C2 channel using data padding that other methods would miss.
  answer_sources:
  - Zeek conn.log
  - Internet Gateway
  - Application Server Subnets
  - Database Server Subnets
  - Egress Firewalls
  range: last 90 days
  queries:
  - pseudocode: CLUSTER conn_logs using DBSCAN on (sent_bytes, received_bytes, duration) | INVESTIGATE small clusters with high average sent/received ratio
- question: Are there any DNS TXT record responses containing unusually random (high entropy) data, excluding legitimate services?
  context: This question focuses on detecting C2 communications hidden within DNS traffic. Adversaries may use the TXT record field to send or receive data that appears random. By calculating the Shannon entropy (a measure of randomness) of TXT record contents and filtering out legitimate high-entropy services like SPF/DKIM, we can identify potential DNS-based C2 channels.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Web Proxies
  - Network Taps with SSL/TLS decryption
  range: last 90 days
  queries:
  - pseudocode: FROM dns_logs WHERE record_type = 'TXT' | CALCULATE entropy(answer) | WHERE entropy > 4.0 AND query NOT LIKE 'spf_or_dkim_pattern'
- question: Are there any network payloads (e.g., in HTTP POSTs) with a statistically anomalous level of randomness compared to a historical baseline?
  context: This question aims to find payloads that are abnormally random for their protocol type. Most protocols have a predictable level of data randomness. By establishing a baseline distribution of entropy scores for a specific protocol, we can flag any new payload whose entropy is in the extreme upper percentile (e.g., 99th). This could indicate an adversary is padding legitimate-looking traffic with random junk data.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Web Proxies
  - Network Taps with SSL/TLS decryption
  range: last 90 days
  queries:
  - pseudocode: FROM http_logs WHERE method = 'POST' | CALCULATE entropy(payload) | WHERE entropy > 99th_percentile_for_http_posts
- question: Can we detect network payloads that are structurally different from legitimate traffic, suggesting they contain junk data?
  context: This question uses an anomaly detection model (an autoencoder) to learn what "normal" payloads look like. The model is trained exclusively on legitimate traffic. When a new payload is processed, the model attempts to reconstruct it. A high "reconstruction error" means the payload is structurally dissimilar to anything the model has seen before, making it a strong candidate for malicious content, such as C2 traffic hidden with junk data.
  answer_sources:
  - Zeek dns.log
  - Zeek http.log
  - Internal DNS Resolvers
  - Web Proxies
  - Network Taps with SSL/TLS decryption
  range: last 90 days
  queries:
  - pseudocode: PREDICT reconstruction_error for new_payloads using trained_autoencoder | ALERT on high reconstruction_error
- question: Is any unapproved application initiating an outbound network connection?
  context: This question identifies potentially malicious software by focusing on its behavior. By maintaining an allowlist of applications that are expected to communicate on the network, we can create a high-fidelity alert whenever a non-allowlisted process makes an outbound connection. This is a classic and effective way to detect the execution of unauthorized tools or malware.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - User Workstations
  - Domain Controllers
  - Critical Application Servers
  range: last 90 days
  queries:
  - pseudocode: JOIN process_creation_logs, network_connection_logs | WHERE process_path NOT IN (approved_app_allowlist) AND connection_is_outbound
- question: Is a process being launched by an unusual parent process and then making a network connection?
  context: This question hunts for suspicious process execution chains. Normal software has predictable parent processes (e.g., explorer.exe launching chrome.exe). An adversary might use an unusual process, like services.exe launching powershell.exe, to execute code. By identifying rare parent-child relationships that lead to network activity, we can uncover these abnormal execution flows.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - User Workstations
  - Domain Controllers
  - Critical Application Servers
  range: last 90 days
  queries:
  - pseudocode: CALCULATE frequency of parent-child-network_activity tuples | ALERT on tuples in bottom 5th percentile of frequency
- question: Can we detect anomalous process network activity that deviates from a learned baseline of normal behavior?
  context: This question uses machine learning to build a profile of "normal" process network behavior on endpoints. A One-Class SVM model is trained on features from legitimate activity (process path, command line, destination port). The model can then classify any new network event initiated by a process as either normal (inlier) or anomalous (outlier). These outliers represent potentially malicious activity that warrants investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - User Workstations
  - Domain Controllers
  - Critical Application Servers
  range: last 90 days
  queries:
  - pseudocode: PREDICT classification for new_process_network_events using one_class_svm_model | ALERT on 'outlier' classification